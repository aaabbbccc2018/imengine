// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: invites.proto

#ifndef PROTOBUF_invites_2eproto__INCLUDED
#define PROTOBUF_invites_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3001000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3001000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "users.pb.h"
#include "group_base.pb.h"
// @@protoc_insertion_point(includes)

namespace zproto {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_invites_2eproto();
void protobuf_InitDefaults_invites_2eproto();
void protobuf_AssignDesc_invites_2eproto();
void protobuf_ShutdownFile_invites_2eproto();

class InviteListRsp;
class InviteState;
class LoadOwnSentInvitesReq;
class SendInviteReq;

// ===================================================================

class InviteState : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:zproto.InviteState) */ {
 public:
  InviteState();
  virtual ~InviteState();

  InviteState(const InviteState& from);

  inline InviteState& operator=(const InviteState& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const InviteState& default_instance();

  static const InviteState* internal_default_instance();

  void Swap(InviteState* other);

  // implements Message ----------------------------------------------

  inline InviteState* New() const { return New(NULL); }

  InviteState* New(::google::protobuf::Arena* arena) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(InviteState* other);
  void UnsafeMergeFrom(const InviteState& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string email = 1;
  void clear_email();
  static const int kEmailFieldNumber = 1;
  const ::std::string& email() const;
  void set_email(const ::std::string& value);
  void set_email(const char* value);
  void set_email(const char* value, size_t size);
  ::std::string* mutable_email();
  ::std::string* release_email();
  void set_allocated_email(::std::string* email);

  // optional string name = 2;
  void clear_name();
  static const int kNameFieldNumber = 2;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // optional int32 uid = 3;
  void clear_uid();
  static const int kUidFieldNumber = 3;
  ::google::protobuf::int32 uid() const;
  void set_uid(::google::protobuf::int32 value);

  // optional int32 tid = 4;
  void clear_tid();
  static const int kTidFieldNumber = 4;
  ::google::protobuf::int32 tid() const;
  void set_tid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:zproto.InviteState)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr email_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::int32 uid_;
  ::google::protobuf::int32 tid_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_invites_2eproto_impl();
  friend void  protobuf_AddDesc_invites_2eproto_impl();
  friend void protobuf_AssignDesc_invites_2eproto();
  friend void protobuf_ShutdownFile_invites_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<InviteState> InviteState_default_instance_;

// -------------------------------------------------------------------

class InviteListRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:zproto.InviteListRsp) */ {
 public:
  InviteListRsp();
  virtual ~InviteListRsp();

  InviteListRsp(const InviteListRsp& from);

  inline InviteListRsp& operator=(const InviteListRsp& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const InviteListRsp& default_instance();

  static const InviteListRsp* internal_default_instance();

  void Swap(InviteListRsp* other);

  // implements Message ----------------------------------------------

  inline InviteListRsp* New() const { return New(NULL); }

  InviteListRsp* New(::google::protobuf::Arena* arena) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(InviteListRsp* other);
  void UnsafeMergeFrom(const InviteListRsp& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .zproto.InviteState invites = 1;
  int invites_size() const;
  void clear_invites();
  static const int kInvitesFieldNumber = 1;
  const ::zproto::InviteState& invites(int index) const;
  ::zproto::InviteState* mutable_invites(int index);
  ::zproto::InviteState* add_invites();
  ::google::protobuf::RepeatedPtrField< ::zproto::InviteState >*
      mutable_invites();
  const ::google::protobuf::RepeatedPtrField< ::zproto::InviteState >&
      invites() const;

  // repeated .zproto.User related_users = 2;
  int related_users_size() const;
  void clear_related_users();
  static const int kRelatedUsersFieldNumber = 2;
  const ::zproto::User& related_users(int index) const;
  ::zproto::User* mutable_related_users(int index);
  ::zproto::User* add_related_users();
  ::google::protobuf::RepeatedPtrField< ::zproto::User >*
      mutable_related_users();
  const ::google::protobuf::RepeatedPtrField< ::zproto::User >&
      related_users() const;

  // repeated .zproto.Group related_groups = 3;
  int related_groups_size() const;
  void clear_related_groups();
  static const int kRelatedGroupsFieldNumber = 3;
  const ::zproto::Group& related_groups(int index) const;
  ::zproto::Group* mutable_related_groups(int index);
  ::zproto::Group* add_related_groups();
  ::google::protobuf::RepeatedPtrField< ::zproto::Group >*
      mutable_related_groups();
  const ::google::protobuf::RepeatedPtrField< ::zproto::Group >&
      related_groups() const;

  // @@protoc_insertion_point(class_scope:zproto.InviteListRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::zproto::InviteState > invites_;
  ::google::protobuf::RepeatedPtrField< ::zproto::User > related_users_;
  ::google::protobuf::RepeatedPtrField< ::zproto::Group > related_groups_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_invites_2eproto_impl();
  friend void  protobuf_AddDesc_invites_2eproto_impl();
  friend void protobuf_AssignDesc_invites_2eproto();
  friend void protobuf_ShutdownFile_invites_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<InviteListRsp> InviteListRsp_default_instance_;

// -------------------------------------------------------------------

class LoadOwnSentInvitesReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:zproto.LoadOwnSentInvitesReq) */ {
 public:
  LoadOwnSentInvitesReq();
  virtual ~LoadOwnSentInvitesReq();

  LoadOwnSentInvitesReq(const LoadOwnSentInvitesReq& from);

  inline LoadOwnSentInvitesReq& operator=(const LoadOwnSentInvitesReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LoadOwnSentInvitesReq& default_instance();

  static const LoadOwnSentInvitesReq* internal_default_instance();

  void Swap(LoadOwnSentInvitesReq* other);

  // implements Message ----------------------------------------------

  inline LoadOwnSentInvitesReq* New() const { return New(NULL); }

  LoadOwnSentInvitesReq* New(::google::protobuf::Arena* arena) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(LoadOwnSentInvitesReq* other);
  void UnsafeMergeFrom(const LoadOwnSentInvitesReq& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:zproto.LoadOwnSentInvitesReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_invites_2eproto_impl();
  friend void  protobuf_AddDesc_invites_2eproto_impl();
  friend void protobuf_AssignDesc_invites_2eproto();
  friend void protobuf_ShutdownFile_invites_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<LoadOwnSentInvitesReq> LoadOwnSentInvitesReq_default_instance_;

// -------------------------------------------------------------------

class SendInviteReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:zproto.SendInviteReq) */ {
 public:
  SendInviteReq();
  virtual ~SendInviteReq();

  SendInviteReq(const SendInviteReq& from);

  inline SendInviteReq& operator=(const SendInviteReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SendInviteReq& default_instance();

  static const SendInviteReq* internal_default_instance();

  void Swap(SendInviteReq* other);

  // implements Message ----------------------------------------------

  inline SendInviteReq* New() const { return New(NULL); }

  SendInviteReq* New(::google::protobuf::Arena* arena) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(SendInviteReq* other);
  void UnsafeMergeFrom(const SendInviteReq& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string email = 1;
  void clear_email();
  static const int kEmailFieldNumber = 1;
  const ::std::string& email() const;
  void set_email(const ::std::string& value);
  void set_email(const char* value);
  void set_email(const char* value, size_t size);
  ::std::string* mutable_email();
  ::std::string* release_email();
  void set_allocated_email(::std::string* email);

  // optional string name = 2;
  void clear_name();
  static const int kNameFieldNumber = 2;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // @@protoc_insertion_point(class_scope:zproto.SendInviteReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr email_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_invites_2eproto_impl();
  friend void  protobuf_AddDesc_invites_2eproto_impl();
  friend void protobuf_AssignDesc_invites_2eproto();
  friend void protobuf_ShutdownFile_invites_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<SendInviteReq> SendInviteReq_default_instance_;

// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// InviteState

// optional string email = 1;
inline void InviteState::clear_email() {
  email_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& InviteState::email() const {
  // @@protoc_insertion_point(field_get:zproto.InviteState.email)
  return email_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void InviteState::set_email(const ::std::string& value) {
  
  email_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:zproto.InviteState.email)
}
inline void InviteState::set_email(const char* value) {
  
  email_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:zproto.InviteState.email)
}
inline void InviteState::set_email(const char* value, size_t size) {
  
  email_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:zproto.InviteState.email)
}
inline ::std::string* InviteState::mutable_email() {
  
  // @@protoc_insertion_point(field_mutable:zproto.InviteState.email)
  return email_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* InviteState::release_email() {
  // @@protoc_insertion_point(field_release:zproto.InviteState.email)
  
  return email_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void InviteState::set_allocated_email(::std::string* email) {
  if (email != NULL) {
    
  } else {
    
  }
  email_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), email);
  // @@protoc_insertion_point(field_set_allocated:zproto.InviteState.email)
}

// optional string name = 2;
inline void InviteState::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& InviteState::name() const {
  // @@protoc_insertion_point(field_get:zproto.InviteState.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void InviteState::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:zproto.InviteState.name)
}
inline void InviteState::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:zproto.InviteState.name)
}
inline void InviteState::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:zproto.InviteState.name)
}
inline ::std::string* InviteState::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:zproto.InviteState.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* InviteState::release_name() {
  // @@protoc_insertion_point(field_release:zproto.InviteState.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void InviteState::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:zproto.InviteState.name)
}

// optional int32 uid = 3;
inline void InviteState::clear_uid() {
  uid_ = 0;
}
inline ::google::protobuf::int32 InviteState::uid() const {
  // @@protoc_insertion_point(field_get:zproto.InviteState.uid)
  return uid_;
}
inline void InviteState::set_uid(::google::protobuf::int32 value) {
  
  uid_ = value;
  // @@protoc_insertion_point(field_set:zproto.InviteState.uid)
}

// optional int32 tid = 4;
inline void InviteState::clear_tid() {
  tid_ = 0;
}
inline ::google::protobuf::int32 InviteState::tid() const {
  // @@protoc_insertion_point(field_get:zproto.InviteState.tid)
  return tid_;
}
inline void InviteState::set_tid(::google::protobuf::int32 value) {
  
  tid_ = value;
  // @@protoc_insertion_point(field_set:zproto.InviteState.tid)
}

inline const InviteState* InviteState::internal_default_instance() {
  return &InviteState_default_instance_.get();
}
// -------------------------------------------------------------------

// InviteListRsp

// repeated .zproto.InviteState invites = 1;
inline int InviteListRsp::invites_size() const {
  return invites_.size();
}
inline void InviteListRsp::clear_invites() {
  invites_.Clear();
}
inline const ::zproto::InviteState& InviteListRsp::invites(int index) const {
  // @@protoc_insertion_point(field_get:zproto.InviteListRsp.invites)
  return invites_.Get(index);
}
inline ::zproto::InviteState* InviteListRsp::mutable_invites(int index) {
  // @@protoc_insertion_point(field_mutable:zproto.InviteListRsp.invites)
  return invites_.Mutable(index);
}
inline ::zproto::InviteState* InviteListRsp::add_invites() {
  // @@protoc_insertion_point(field_add:zproto.InviteListRsp.invites)
  return invites_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::zproto::InviteState >*
InviteListRsp::mutable_invites() {
  // @@protoc_insertion_point(field_mutable_list:zproto.InviteListRsp.invites)
  return &invites_;
}
inline const ::google::protobuf::RepeatedPtrField< ::zproto::InviteState >&
InviteListRsp::invites() const {
  // @@protoc_insertion_point(field_list:zproto.InviteListRsp.invites)
  return invites_;
}

// repeated .zproto.User related_users = 2;
inline int InviteListRsp::related_users_size() const {
  return related_users_.size();
}
inline void InviteListRsp::clear_related_users() {
  related_users_.Clear();
}
inline const ::zproto::User& InviteListRsp::related_users(int index) const {
  // @@protoc_insertion_point(field_get:zproto.InviteListRsp.related_users)
  return related_users_.Get(index);
}
inline ::zproto::User* InviteListRsp::mutable_related_users(int index) {
  // @@protoc_insertion_point(field_mutable:zproto.InviteListRsp.related_users)
  return related_users_.Mutable(index);
}
inline ::zproto::User* InviteListRsp::add_related_users() {
  // @@protoc_insertion_point(field_add:zproto.InviteListRsp.related_users)
  return related_users_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::zproto::User >*
InviteListRsp::mutable_related_users() {
  // @@protoc_insertion_point(field_mutable_list:zproto.InviteListRsp.related_users)
  return &related_users_;
}
inline const ::google::protobuf::RepeatedPtrField< ::zproto::User >&
InviteListRsp::related_users() const {
  // @@protoc_insertion_point(field_list:zproto.InviteListRsp.related_users)
  return related_users_;
}

// repeated .zproto.Group related_groups = 3;
inline int InviteListRsp::related_groups_size() const {
  return related_groups_.size();
}
inline void InviteListRsp::clear_related_groups() {
  related_groups_.Clear();
}
inline const ::zproto::Group& InviteListRsp::related_groups(int index) const {
  // @@protoc_insertion_point(field_get:zproto.InviteListRsp.related_groups)
  return related_groups_.Get(index);
}
inline ::zproto::Group* InviteListRsp::mutable_related_groups(int index) {
  // @@protoc_insertion_point(field_mutable:zproto.InviteListRsp.related_groups)
  return related_groups_.Mutable(index);
}
inline ::zproto::Group* InviteListRsp::add_related_groups() {
  // @@protoc_insertion_point(field_add:zproto.InviteListRsp.related_groups)
  return related_groups_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::zproto::Group >*
InviteListRsp::mutable_related_groups() {
  // @@protoc_insertion_point(field_mutable_list:zproto.InviteListRsp.related_groups)
  return &related_groups_;
}
inline const ::google::protobuf::RepeatedPtrField< ::zproto::Group >&
InviteListRsp::related_groups() const {
  // @@protoc_insertion_point(field_list:zproto.InviteListRsp.related_groups)
  return related_groups_;
}

inline const InviteListRsp* InviteListRsp::internal_default_instance() {
  return &InviteListRsp_default_instance_.get();
}
// -------------------------------------------------------------------

// LoadOwnSentInvitesReq

inline const LoadOwnSentInvitesReq* LoadOwnSentInvitesReq::internal_default_instance() {
  return &LoadOwnSentInvitesReq_default_instance_.get();
}
// -------------------------------------------------------------------

// SendInviteReq

// optional string email = 1;
inline void SendInviteReq::clear_email() {
  email_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SendInviteReq::email() const {
  // @@protoc_insertion_point(field_get:zproto.SendInviteReq.email)
  return email_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SendInviteReq::set_email(const ::std::string& value) {
  
  email_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:zproto.SendInviteReq.email)
}
inline void SendInviteReq::set_email(const char* value) {
  
  email_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:zproto.SendInviteReq.email)
}
inline void SendInviteReq::set_email(const char* value, size_t size) {
  
  email_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:zproto.SendInviteReq.email)
}
inline ::std::string* SendInviteReq::mutable_email() {
  
  // @@protoc_insertion_point(field_mutable:zproto.SendInviteReq.email)
  return email_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SendInviteReq::release_email() {
  // @@protoc_insertion_point(field_release:zproto.SendInviteReq.email)
  
  return email_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SendInviteReq::set_allocated_email(::std::string* email) {
  if (email != NULL) {
    
  } else {
    
  }
  email_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), email);
  // @@protoc_insertion_point(field_set_allocated:zproto.SendInviteReq.email)
}

// optional string name = 2;
inline void SendInviteReq::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SendInviteReq::name() const {
  // @@protoc_insertion_point(field_get:zproto.SendInviteReq.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SendInviteReq::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:zproto.SendInviteReq.name)
}
inline void SendInviteReq::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:zproto.SendInviteReq.name)
}
inline void SendInviteReq::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:zproto.SendInviteReq.name)
}
inline ::std::string* SendInviteReq::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:zproto.SendInviteReq.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SendInviteReq::release_name() {
  // @@protoc_insertion_point(field_release:zproto.SendInviteReq.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SendInviteReq::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:zproto.SendInviteReq.name)
}

inline const SendInviteReq* SendInviteReq::internal_default_instance() {
  return &SendInviteReq_default_instance_.get();
}
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace zproto

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_invites_2eproto__INCLUDED
