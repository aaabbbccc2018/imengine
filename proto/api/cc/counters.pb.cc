// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: counters.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "counters.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace zproto {

namespace {

const ::google::protobuf::Descriptor* AppCounters_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  AppCounters_reflection_ = NULL;
const ::google::protobuf::Descriptor* CountersChangedNotify_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CountersChangedNotify_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_counters_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_counters_2eproto() {
  protobuf_AddDesc_counters_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "counters.proto");
  GOOGLE_CHECK(file != NULL);
  AppCounters_descriptor_ = file->message_type(0);
  static const int AppCounters_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AppCounters, global_counter_),
  };
  AppCounters_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      AppCounters_descriptor_,
      AppCounters::internal_default_instance(),
      AppCounters_offsets_,
      -1,
      -1,
      -1,
      sizeof(AppCounters),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AppCounters, _internal_metadata_));
  CountersChangedNotify_descriptor_ = file->message_type(1);
  static const int CountersChangedNotify_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CountersChangedNotify, counters_),
  };
  CountersChangedNotify_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CountersChangedNotify_descriptor_,
      CountersChangedNotify::internal_default_instance(),
      CountersChangedNotify_offsets_,
      -1,
      -1,
      -1,
      sizeof(CountersChangedNotify),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CountersChangedNotify, _internal_metadata_));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_counters_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      AppCounters_descriptor_, AppCounters::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CountersChangedNotify_descriptor_, CountersChangedNotify::internal_default_instance());
}

}  // namespace

void protobuf_ShutdownFile_counters_2eproto() {
  AppCounters_default_instance_.Shutdown();
  delete AppCounters_reflection_;
  CountersChangedNotify_default_instance_.Shutdown();
  delete CountersChangedNotify_reflection_;
}

void protobuf_InitDefaults_counters_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  AppCounters_default_instance_.DefaultConstruct();
  CountersChangedNotify_default_instance_.DefaultConstruct();
  AppCounters_default_instance_.get_mutable()->InitAsDefaultInstance();
  CountersChangedNotify_default_instance_.get_mutable()->InitAsDefaultInstance();
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_InitDefaults_counters_2eproto_once_);
void protobuf_InitDefaults_counters_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_InitDefaults_counters_2eproto_once_,
                 &protobuf_InitDefaults_counters_2eproto_impl);
}
void protobuf_AddDesc_counters_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  protobuf_InitDefaults_counters_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\016counters.proto\022\006zproto\"%\n\013AppCounters\022"
    "\026\n\016global_counter\030\001 \001(\005\">\n\025CountersChang"
    "edNotify\022%\n\010counters\030\001 \001(\0132\023.zproto.AppC"
    "ountersB+\n\027com.zchat.engine.zprotoB\016ZPro"
    "toCountersH\002b\006proto3", 180);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "counters.proto", &protobuf_RegisterTypes);
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_counters_2eproto);
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AddDesc_counters_2eproto_once_);
void protobuf_AddDesc_counters_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AddDesc_counters_2eproto_once_,
                 &protobuf_AddDesc_counters_2eproto_impl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_counters_2eproto {
  StaticDescriptorInitializer_counters_2eproto() {
    protobuf_AddDesc_counters_2eproto();
  }
} static_descriptor_initializer_counters_2eproto_;

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AppCounters::kGlobalCounterFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AppCounters::AppCounters()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_counters_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:zproto.AppCounters)
}

void AppCounters::InitAsDefaultInstance() {
}

AppCounters::AppCounters(const AppCounters& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:zproto.AppCounters)
}

void AppCounters::SharedCtor() {
  global_counter_ = 0;
  _cached_size_ = 0;
}

AppCounters::~AppCounters() {
  // @@protoc_insertion_point(destructor:zproto.AppCounters)
  SharedDtor();
}

void AppCounters::SharedDtor() {
}

void AppCounters::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AppCounters::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AppCounters_descriptor_;
}

const AppCounters& AppCounters::default_instance() {
  protobuf_InitDefaults_counters_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<AppCounters> AppCounters_default_instance_;

AppCounters* AppCounters::New(::google::protobuf::Arena* arena) const {
  AppCounters* n = new AppCounters;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AppCounters::UnsafeMergeFrom(const AppCounters& from) {
  MergeFrom(from);
}
void AppCounters::Swap(AppCounters* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AppCounters::InternalSwap(AppCounters* other) {
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata AppCounters::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = AppCounters_descriptor_;
  metadata.reflection = AppCounters_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AppCounters

// optional int32 global_counter = 1;
void AppCounters::clear_global_counter() {
  global_counter_ = 0;
}
::google::protobuf::int32 AppCounters::global_counter() const {
  // @@protoc_insertion_point(field_get:zproto.AppCounters.global_counter)
  return global_counter_;
}
void AppCounters::set_global_counter(::google::protobuf::int32 value) {
  
  global_counter_ = value;
  // @@protoc_insertion_point(field_set:zproto.AppCounters.global_counter)
}

inline const AppCounters* AppCounters::internal_default_instance() {
  return &AppCounters_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CountersChangedNotify::kCountersFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CountersChangedNotify::CountersChangedNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_counters_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:zproto.CountersChangedNotify)
}

void CountersChangedNotify::InitAsDefaultInstance() {
  counters_ = const_cast< ::zproto::AppCounters*>(
      ::zproto::AppCounters::internal_default_instance());
}

CountersChangedNotify::CountersChangedNotify(const CountersChangedNotify& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:zproto.CountersChangedNotify)
}

void CountersChangedNotify::SharedCtor() {
  counters_ = NULL;
  _cached_size_ = 0;
}

CountersChangedNotify::~CountersChangedNotify() {
  // @@protoc_insertion_point(destructor:zproto.CountersChangedNotify)
  SharedDtor();
}

void CountersChangedNotify::SharedDtor() {
  if (this != &CountersChangedNotify_default_instance_.get()) {
    delete counters_;
  }
}

void CountersChangedNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CountersChangedNotify::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CountersChangedNotify_descriptor_;
}

const CountersChangedNotify& CountersChangedNotify::default_instance() {
  protobuf_InitDefaults_counters_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<CountersChangedNotify> CountersChangedNotify_default_instance_;

CountersChangedNotify* CountersChangedNotify::New(::google::protobuf::Arena* arena) const {
  CountersChangedNotify* n = new CountersChangedNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CountersChangedNotify::UnsafeMergeFrom(const CountersChangedNotify& from) {
  MergeFrom(from);
}
void CountersChangedNotify::Swap(CountersChangedNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CountersChangedNotify::InternalSwap(CountersChangedNotify* other) {
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata CountersChangedNotify::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CountersChangedNotify_descriptor_;
  metadata.reflection = CountersChangedNotify_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CountersChangedNotify

// optional .zproto.AppCounters counters = 1;
bool CountersChangedNotify::has_counters() const {
  return this != internal_default_instance() && counters_ != NULL;
}
void CountersChangedNotify::clear_counters() {
  if (GetArenaNoVirtual() == NULL && counters_ != NULL) delete counters_;
  counters_ = NULL;
}
const ::zproto::AppCounters& CountersChangedNotify::counters() const {
  // @@protoc_insertion_point(field_get:zproto.CountersChangedNotify.counters)
  return counters_ != NULL ? *counters_
                         : *::zproto::AppCounters::internal_default_instance();
}
::zproto::AppCounters* CountersChangedNotify::mutable_counters() {
  
  if (counters_ == NULL) {
    counters_ = new ::zproto::AppCounters;
  }
  // @@protoc_insertion_point(field_mutable:zproto.CountersChangedNotify.counters)
  return counters_;
}
::zproto::AppCounters* CountersChangedNotify::release_counters() {
  // @@protoc_insertion_point(field_release:zproto.CountersChangedNotify.counters)
  
  ::zproto::AppCounters* temp = counters_;
  counters_ = NULL;
  return temp;
}
void CountersChangedNotify::set_allocated_counters(::zproto::AppCounters* counters) {
  delete counters_;
  counters_ = counters;
  if (counters) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zproto.CountersChangedNotify.counters)
}

inline const CountersChangedNotify* CountersChangedNotify::internal_default_instance() {
  return &CountersChangedNotify_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace zproto

// @@protoc_insertion_point(global_scope)
