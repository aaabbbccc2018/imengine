// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: privacy.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "privacy.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace zproto {

namespace {

const ::google::protobuf::Descriptor* BlockUserReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BlockUserReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* UnblockUserReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  UnblockUserReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* LoadBlockedUsersReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  LoadBlockedUsersReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* LoadBlockedUsersRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  LoadBlockedUsersRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* UserBlockedNotify_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  UserBlockedNotify_reflection_ = NULL;
const ::google::protobuf::Descriptor* UserUnblockedNotify_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  UserUnblockedNotify_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_privacy_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_privacy_2eproto() {
  protobuf_AddDesc_privacy_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "privacy.proto");
  GOOGLE_CHECK(file != NULL);
  BlockUserReq_descriptor_ = file->message_type(0);
  static const int BlockUserReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BlockUserReq, peer_),
  };
  BlockUserReq_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      BlockUserReq_descriptor_,
      BlockUserReq::internal_default_instance(),
      BlockUserReq_offsets_,
      -1,
      -1,
      -1,
      sizeof(BlockUserReq),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BlockUserReq, _internal_metadata_));
  UnblockUserReq_descriptor_ = file->message_type(1);
  static const int UnblockUserReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnblockUserReq, peer_),
  };
  UnblockUserReq_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      UnblockUserReq_descriptor_,
      UnblockUserReq::internal_default_instance(),
      UnblockUserReq_offsets_,
      -1,
      -1,
      -1,
      sizeof(UnblockUserReq),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnblockUserReq, _internal_metadata_));
  LoadBlockedUsersReq_descriptor_ = file->message_type(2);
  static const int LoadBlockedUsersReq_offsets_[1] = {
  };
  LoadBlockedUsersReq_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      LoadBlockedUsersReq_descriptor_,
      LoadBlockedUsersReq::internal_default_instance(),
      LoadBlockedUsersReq_offsets_,
      -1,
      -1,
      -1,
      sizeof(LoadBlockedUsersReq),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoadBlockedUsersReq, _internal_metadata_));
  LoadBlockedUsersRsp_descriptor_ = file->message_type(3);
  static const int LoadBlockedUsersRsp_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoadBlockedUsersRsp, user_peers_),
  };
  LoadBlockedUsersRsp_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      LoadBlockedUsersRsp_descriptor_,
      LoadBlockedUsersRsp::internal_default_instance(),
      LoadBlockedUsersRsp_offsets_,
      -1,
      -1,
      -1,
      sizeof(LoadBlockedUsersRsp),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoadBlockedUsersRsp, _internal_metadata_));
  UserBlockedNotify_descriptor_ = file->message_type(4);
  static const int UserBlockedNotify_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserBlockedNotify, uid_),
  };
  UserBlockedNotify_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      UserBlockedNotify_descriptor_,
      UserBlockedNotify::internal_default_instance(),
      UserBlockedNotify_offsets_,
      -1,
      -1,
      -1,
      sizeof(UserBlockedNotify),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserBlockedNotify, _internal_metadata_));
  UserUnblockedNotify_descriptor_ = file->message_type(5);
  static const int UserUnblockedNotify_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserUnblockedNotify, uid_),
  };
  UserUnblockedNotify_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      UserUnblockedNotify_descriptor_,
      UserUnblockedNotify::internal_default_instance(),
      UserUnblockedNotify_offsets_,
      -1,
      -1,
      -1,
      sizeof(UserUnblockedNotify),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserUnblockedNotify, _internal_metadata_));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_privacy_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      BlockUserReq_descriptor_, BlockUserReq::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      UnblockUserReq_descriptor_, UnblockUserReq::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      LoadBlockedUsersReq_descriptor_, LoadBlockedUsersReq::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      LoadBlockedUsersRsp_descriptor_, LoadBlockedUsersRsp::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      UserBlockedNotify_descriptor_, UserBlockedNotify::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      UserUnblockedNotify_descriptor_, UserUnblockedNotify::internal_default_instance());
}

}  // namespace

void protobuf_ShutdownFile_privacy_2eproto() {
  BlockUserReq_default_instance_.Shutdown();
  delete BlockUserReq_reflection_;
  UnblockUserReq_default_instance_.Shutdown();
  delete UnblockUserReq_reflection_;
  LoadBlockedUsersReq_default_instance_.Shutdown();
  delete LoadBlockedUsersReq_reflection_;
  LoadBlockedUsersRsp_default_instance_.Shutdown();
  delete LoadBlockedUsersRsp_reflection_;
  UserBlockedNotify_default_instance_.Shutdown();
  delete UserBlockedNotify_reflection_;
  UserUnblockedNotify_default_instance_.Shutdown();
  delete UserUnblockedNotify_reflection_;
}

void protobuf_InitDefaults_privacy_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::zproto::protobuf_InitDefaults_peers_2eproto();
  BlockUserReq_default_instance_.DefaultConstruct();
  UnblockUserReq_default_instance_.DefaultConstruct();
  LoadBlockedUsersReq_default_instance_.DefaultConstruct();
  LoadBlockedUsersRsp_default_instance_.DefaultConstruct();
  UserBlockedNotify_default_instance_.DefaultConstruct();
  UserUnblockedNotify_default_instance_.DefaultConstruct();
  BlockUserReq_default_instance_.get_mutable()->InitAsDefaultInstance();
  UnblockUserReq_default_instance_.get_mutable()->InitAsDefaultInstance();
  LoadBlockedUsersReq_default_instance_.get_mutable()->InitAsDefaultInstance();
  LoadBlockedUsersRsp_default_instance_.get_mutable()->InitAsDefaultInstance();
  UserBlockedNotify_default_instance_.get_mutable()->InitAsDefaultInstance();
  UserUnblockedNotify_default_instance_.get_mutable()->InitAsDefaultInstance();
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_InitDefaults_privacy_2eproto_once_);
void protobuf_InitDefaults_privacy_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_InitDefaults_privacy_2eproto_once_,
                 &protobuf_InitDefaults_privacy_2eproto_impl);
}
void protobuf_AddDesc_privacy_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  protobuf_InitDefaults_privacy_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\rprivacy.proto\022\006zproto\032\013peers.proto\"1\n\014"
    "BlockUserReq\022!\n\004peer\030\001 \001(\0132\023.zproto.User"
    "OutPeer\"3\n\016UnblockUserReq\022!\n\004peer\030\001 \001(\0132"
    "\023.zproto.UserOutPeer\"\025\n\023LoadBlockedUsers"
    "Req\">\n\023LoadBlockedUsersRsp\022\'\n\nuser_peers"
    "\030\001 \003(\0132\023.zproto.UserOutPeer\" \n\021UserBlock"
    "edNotify\022\013\n\003uid\030\001 \001(\005\"\"\n\023UserUnblockedNo"
    "tify\022\013\n\003uid\030\001 \001(\005B*\n\027com.zchat.engine.zp"
    "rotoB\rZProtoPrivacyH\002b\006proto3", 349);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "privacy.proto", &protobuf_RegisterTypes);
  ::zproto::protobuf_AddDesc_peers_2eproto();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_privacy_2eproto);
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AddDesc_privacy_2eproto_once_);
void protobuf_AddDesc_privacy_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AddDesc_privacy_2eproto_once_,
                 &protobuf_AddDesc_privacy_2eproto_impl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_privacy_2eproto {
  StaticDescriptorInitializer_privacy_2eproto() {
    protobuf_AddDesc_privacy_2eproto();
  }
} static_descriptor_initializer_privacy_2eproto_;

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BlockUserReq::kPeerFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BlockUserReq::BlockUserReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_privacy_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:zproto.BlockUserReq)
}

void BlockUserReq::InitAsDefaultInstance() {
  peer_ = const_cast< ::zproto::UserOutPeer*>(
      ::zproto::UserOutPeer::internal_default_instance());
}

BlockUserReq::BlockUserReq(const BlockUserReq& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:zproto.BlockUserReq)
}

void BlockUserReq::SharedCtor() {
  peer_ = NULL;
  _cached_size_ = 0;
}

BlockUserReq::~BlockUserReq() {
  // @@protoc_insertion_point(destructor:zproto.BlockUserReq)
  SharedDtor();
}

void BlockUserReq::SharedDtor() {
  if (this != &BlockUserReq_default_instance_.get()) {
    delete peer_;
  }
}

void BlockUserReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BlockUserReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BlockUserReq_descriptor_;
}

const BlockUserReq& BlockUserReq::default_instance() {
  protobuf_InitDefaults_privacy_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<BlockUserReq> BlockUserReq_default_instance_;

BlockUserReq* BlockUserReq::New(::google::protobuf::Arena* arena) const {
  BlockUserReq* n = new BlockUserReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BlockUserReq::UnsafeMergeFrom(const BlockUserReq& from) {
  MergeFrom(from);
}
void BlockUserReq::Swap(BlockUserReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BlockUserReq::InternalSwap(BlockUserReq* other) {
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata BlockUserReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BlockUserReq_descriptor_;
  metadata.reflection = BlockUserReq_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BlockUserReq

// optional .zproto.UserOutPeer peer = 1;
bool BlockUserReq::has_peer() const {
  return this != internal_default_instance() && peer_ != NULL;
}
void BlockUserReq::clear_peer() {
  if (GetArenaNoVirtual() == NULL && peer_ != NULL) delete peer_;
  peer_ = NULL;
}
const ::zproto::UserOutPeer& BlockUserReq::peer() const {
  // @@protoc_insertion_point(field_get:zproto.BlockUserReq.peer)
  return peer_ != NULL ? *peer_
                         : *::zproto::UserOutPeer::internal_default_instance();
}
::zproto::UserOutPeer* BlockUserReq::mutable_peer() {
  
  if (peer_ == NULL) {
    peer_ = new ::zproto::UserOutPeer;
  }
  // @@protoc_insertion_point(field_mutable:zproto.BlockUserReq.peer)
  return peer_;
}
::zproto::UserOutPeer* BlockUserReq::release_peer() {
  // @@protoc_insertion_point(field_release:zproto.BlockUserReq.peer)
  
  ::zproto::UserOutPeer* temp = peer_;
  peer_ = NULL;
  return temp;
}
void BlockUserReq::set_allocated_peer(::zproto::UserOutPeer* peer) {
  delete peer_;
  peer_ = peer;
  if (peer) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zproto.BlockUserReq.peer)
}

inline const BlockUserReq* BlockUserReq::internal_default_instance() {
  return &BlockUserReq_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UnblockUserReq::kPeerFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UnblockUserReq::UnblockUserReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_privacy_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:zproto.UnblockUserReq)
}

void UnblockUserReq::InitAsDefaultInstance() {
  peer_ = const_cast< ::zproto::UserOutPeer*>(
      ::zproto::UserOutPeer::internal_default_instance());
}

UnblockUserReq::UnblockUserReq(const UnblockUserReq& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:zproto.UnblockUserReq)
}

void UnblockUserReq::SharedCtor() {
  peer_ = NULL;
  _cached_size_ = 0;
}

UnblockUserReq::~UnblockUserReq() {
  // @@protoc_insertion_point(destructor:zproto.UnblockUserReq)
  SharedDtor();
}

void UnblockUserReq::SharedDtor() {
  if (this != &UnblockUserReq_default_instance_.get()) {
    delete peer_;
  }
}

void UnblockUserReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UnblockUserReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return UnblockUserReq_descriptor_;
}

const UnblockUserReq& UnblockUserReq::default_instance() {
  protobuf_InitDefaults_privacy_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<UnblockUserReq> UnblockUserReq_default_instance_;

UnblockUserReq* UnblockUserReq::New(::google::protobuf::Arena* arena) const {
  UnblockUserReq* n = new UnblockUserReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UnblockUserReq::UnsafeMergeFrom(const UnblockUserReq& from) {
  MergeFrom(from);
}
void UnblockUserReq::Swap(UnblockUserReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UnblockUserReq::InternalSwap(UnblockUserReq* other) {
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata UnblockUserReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = UnblockUserReq_descriptor_;
  metadata.reflection = UnblockUserReq_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// UnblockUserReq

// optional .zproto.UserOutPeer peer = 1;
bool UnblockUserReq::has_peer() const {
  return this != internal_default_instance() && peer_ != NULL;
}
void UnblockUserReq::clear_peer() {
  if (GetArenaNoVirtual() == NULL && peer_ != NULL) delete peer_;
  peer_ = NULL;
}
const ::zproto::UserOutPeer& UnblockUserReq::peer() const {
  // @@protoc_insertion_point(field_get:zproto.UnblockUserReq.peer)
  return peer_ != NULL ? *peer_
                         : *::zproto::UserOutPeer::internal_default_instance();
}
::zproto::UserOutPeer* UnblockUserReq::mutable_peer() {
  
  if (peer_ == NULL) {
    peer_ = new ::zproto::UserOutPeer;
  }
  // @@protoc_insertion_point(field_mutable:zproto.UnblockUserReq.peer)
  return peer_;
}
::zproto::UserOutPeer* UnblockUserReq::release_peer() {
  // @@protoc_insertion_point(field_release:zproto.UnblockUserReq.peer)
  
  ::zproto::UserOutPeer* temp = peer_;
  peer_ = NULL;
  return temp;
}
void UnblockUserReq::set_allocated_peer(::zproto::UserOutPeer* peer) {
  delete peer_;
  peer_ = peer;
  if (peer) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zproto.UnblockUserReq.peer)
}

inline const UnblockUserReq* UnblockUserReq::internal_default_instance() {
  return &UnblockUserReq_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LoadBlockedUsersReq::LoadBlockedUsersReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_privacy_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:zproto.LoadBlockedUsersReq)
}

void LoadBlockedUsersReq::InitAsDefaultInstance() {
}

LoadBlockedUsersReq::LoadBlockedUsersReq(const LoadBlockedUsersReq& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:zproto.LoadBlockedUsersReq)
}

void LoadBlockedUsersReq::SharedCtor() {
  _cached_size_ = 0;
}

LoadBlockedUsersReq::~LoadBlockedUsersReq() {
  // @@protoc_insertion_point(destructor:zproto.LoadBlockedUsersReq)
  SharedDtor();
}

void LoadBlockedUsersReq::SharedDtor() {
}

void LoadBlockedUsersReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LoadBlockedUsersReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return LoadBlockedUsersReq_descriptor_;
}

const LoadBlockedUsersReq& LoadBlockedUsersReq::default_instance() {
  protobuf_InitDefaults_privacy_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<LoadBlockedUsersReq> LoadBlockedUsersReq_default_instance_;

LoadBlockedUsersReq* LoadBlockedUsersReq::New(::google::protobuf::Arena* arena) const {
  LoadBlockedUsersReq* n = new LoadBlockedUsersReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void LoadBlockedUsersReq::UnsafeMergeFrom(const LoadBlockedUsersReq& from) {
  MergeFrom(from);
}
void LoadBlockedUsersReq::Swap(LoadBlockedUsersReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LoadBlockedUsersReq::InternalSwap(LoadBlockedUsersReq* other) {
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata LoadBlockedUsersReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = LoadBlockedUsersReq_descriptor_;
  metadata.reflection = LoadBlockedUsersReq_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// LoadBlockedUsersReq

inline const LoadBlockedUsersReq* LoadBlockedUsersReq::internal_default_instance() {
  return &LoadBlockedUsersReq_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LoadBlockedUsersRsp::kUserPeersFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LoadBlockedUsersRsp::LoadBlockedUsersRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_privacy_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:zproto.LoadBlockedUsersRsp)
}

void LoadBlockedUsersRsp::InitAsDefaultInstance() {
}

LoadBlockedUsersRsp::LoadBlockedUsersRsp(const LoadBlockedUsersRsp& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:zproto.LoadBlockedUsersRsp)
}

void LoadBlockedUsersRsp::SharedCtor() {
  _cached_size_ = 0;
}

LoadBlockedUsersRsp::~LoadBlockedUsersRsp() {
  // @@protoc_insertion_point(destructor:zproto.LoadBlockedUsersRsp)
  SharedDtor();
}

void LoadBlockedUsersRsp::SharedDtor() {
}

void LoadBlockedUsersRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LoadBlockedUsersRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return LoadBlockedUsersRsp_descriptor_;
}

const LoadBlockedUsersRsp& LoadBlockedUsersRsp::default_instance() {
  protobuf_InitDefaults_privacy_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<LoadBlockedUsersRsp> LoadBlockedUsersRsp_default_instance_;

LoadBlockedUsersRsp* LoadBlockedUsersRsp::New(::google::protobuf::Arena* arena) const {
  LoadBlockedUsersRsp* n = new LoadBlockedUsersRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void LoadBlockedUsersRsp::UnsafeMergeFrom(const LoadBlockedUsersRsp& from) {
  MergeFrom(from);
}
void LoadBlockedUsersRsp::Swap(LoadBlockedUsersRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LoadBlockedUsersRsp::InternalSwap(LoadBlockedUsersRsp* other) {
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata LoadBlockedUsersRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = LoadBlockedUsersRsp_descriptor_;
  metadata.reflection = LoadBlockedUsersRsp_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// LoadBlockedUsersRsp

// repeated .zproto.UserOutPeer user_peers = 1;
int LoadBlockedUsersRsp::user_peers_size() const {
  return user_peers_.size();
}
void LoadBlockedUsersRsp::clear_user_peers() {
  user_peers_.Clear();
}
const ::zproto::UserOutPeer& LoadBlockedUsersRsp::user_peers(int index) const {
  // @@protoc_insertion_point(field_get:zproto.LoadBlockedUsersRsp.user_peers)
  return user_peers_.Get(index);
}
::zproto::UserOutPeer* LoadBlockedUsersRsp::mutable_user_peers(int index) {
  // @@protoc_insertion_point(field_mutable:zproto.LoadBlockedUsersRsp.user_peers)
  return user_peers_.Mutable(index);
}
::zproto::UserOutPeer* LoadBlockedUsersRsp::add_user_peers() {
  // @@protoc_insertion_point(field_add:zproto.LoadBlockedUsersRsp.user_peers)
  return user_peers_.Add();
}
::google::protobuf::RepeatedPtrField< ::zproto::UserOutPeer >*
LoadBlockedUsersRsp::mutable_user_peers() {
  // @@protoc_insertion_point(field_mutable_list:zproto.LoadBlockedUsersRsp.user_peers)
  return &user_peers_;
}
const ::google::protobuf::RepeatedPtrField< ::zproto::UserOutPeer >&
LoadBlockedUsersRsp::user_peers() const {
  // @@protoc_insertion_point(field_list:zproto.LoadBlockedUsersRsp.user_peers)
  return user_peers_;
}

inline const LoadBlockedUsersRsp* LoadBlockedUsersRsp::internal_default_instance() {
  return &LoadBlockedUsersRsp_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UserBlockedNotify::kUidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UserBlockedNotify::UserBlockedNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_privacy_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:zproto.UserBlockedNotify)
}

void UserBlockedNotify::InitAsDefaultInstance() {
}

UserBlockedNotify::UserBlockedNotify(const UserBlockedNotify& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:zproto.UserBlockedNotify)
}

void UserBlockedNotify::SharedCtor() {
  uid_ = 0;
  _cached_size_ = 0;
}

UserBlockedNotify::~UserBlockedNotify() {
  // @@protoc_insertion_point(destructor:zproto.UserBlockedNotify)
  SharedDtor();
}

void UserBlockedNotify::SharedDtor() {
}

void UserBlockedNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UserBlockedNotify::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return UserBlockedNotify_descriptor_;
}

const UserBlockedNotify& UserBlockedNotify::default_instance() {
  protobuf_InitDefaults_privacy_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<UserBlockedNotify> UserBlockedNotify_default_instance_;

UserBlockedNotify* UserBlockedNotify::New(::google::protobuf::Arena* arena) const {
  UserBlockedNotify* n = new UserBlockedNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UserBlockedNotify::UnsafeMergeFrom(const UserBlockedNotify& from) {
  MergeFrom(from);
}
void UserBlockedNotify::Swap(UserBlockedNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UserBlockedNotify::InternalSwap(UserBlockedNotify* other) {
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata UserBlockedNotify::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = UserBlockedNotify_descriptor_;
  metadata.reflection = UserBlockedNotify_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// UserBlockedNotify

// optional int32 uid = 1;
void UserBlockedNotify::clear_uid() {
  uid_ = 0;
}
::google::protobuf::int32 UserBlockedNotify::uid() const {
  // @@protoc_insertion_point(field_get:zproto.UserBlockedNotify.uid)
  return uid_;
}
void UserBlockedNotify::set_uid(::google::protobuf::int32 value) {
  
  uid_ = value;
  // @@protoc_insertion_point(field_set:zproto.UserBlockedNotify.uid)
}

inline const UserBlockedNotify* UserBlockedNotify::internal_default_instance() {
  return &UserBlockedNotify_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UserUnblockedNotify::kUidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UserUnblockedNotify::UserUnblockedNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_privacy_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:zproto.UserUnblockedNotify)
}

void UserUnblockedNotify::InitAsDefaultInstance() {
}

UserUnblockedNotify::UserUnblockedNotify(const UserUnblockedNotify& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:zproto.UserUnblockedNotify)
}

void UserUnblockedNotify::SharedCtor() {
  uid_ = 0;
  _cached_size_ = 0;
}

UserUnblockedNotify::~UserUnblockedNotify() {
  // @@protoc_insertion_point(destructor:zproto.UserUnblockedNotify)
  SharedDtor();
}

void UserUnblockedNotify::SharedDtor() {
}

void UserUnblockedNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UserUnblockedNotify::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return UserUnblockedNotify_descriptor_;
}

const UserUnblockedNotify& UserUnblockedNotify::default_instance() {
  protobuf_InitDefaults_privacy_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<UserUnblockedNotify> UserUnblockedNotify_default_instance_;

UserUnblockedNotify* UserUnblockedNotify::New(::google::protobuf::Arena* arena) const {
  UserUnblockedNotify* n = new UserUnblockedNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UserUnblockedNotify::UnsafeMergeFrom(const UserUnblockedNotify& from) {
  MergeFrom(from);
}
void UserUnblockedNotify::Swap(UserUnblockedNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UserUnblockedNotify::InternalSwap(UserUnblockedNotify* other) {
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata UserUnblockedNotify::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = UserUnblockedNotify_descriptor_;
  metadata.reflection = UserUnblockedNotify_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// UserUnblockedNotify

// optional int32 uid = 1;
void UserUnblockedNotify::clear_uid() {
  uid_ = 0;
}
::google::protobuf::int32 UserUnblockedNotify::uid() const {
  // @@protoc_insertion_point(field_get:zproto.UserUnblockedNotify.uid)
  return uid_;
}
void UserUnblockedNotify::set_uid(::google::protobuf::int32 value) {
  
  uid_ = value;
  // @@protoc_insertion_point(field_set:zproto.UserUnblockedNotify.uid)
}

inline const UserUnblockedNotify* UserUnblockedNotify::internal_default_instance() {
  return &UserUnblockedNotify_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace zproto

// @@protoc_insertion_point(global_scope)
