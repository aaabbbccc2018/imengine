// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: group_base.proto

#ifndef PROTOBUF_group_5fbase_2eproto__INCLUDED
#define PROTOBUF_group_5fbase_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3001000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3001000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/map.h>
#include <google/protobuf/map_field_inl.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "types.pb.h"
#include "files.pb.h"
// @@protoc_insertion_point(includes)

namespace zproto {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_group_5fbase_2eproto();
void protobuf_InitDefaults_group_5fbase_2eproto();
void protobuf_AssignDesc_group_5fbase_2eproto();
void protobuf_ShutdownFile_group_5fbase_2eproto();

class Group;
class GroupFull;
class Member;

enum GroupPermissions {
  SEND_MESSAGE = 0,
  CLEAR = 1,
  LEAVE = 2,
  DELETE = 3,
  JOIN = 4,
  VIEW_INFO = 5,
  GroupPermissions_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  GroupPermissions_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool GroupPermissions_IsValid(int value);
const GroupPermissions GroupPermissions_MIN = SEND_MESSAGE;
const GroupPermissions GroupPermissions_MAX = VIEW_INFO;
const int GroupPermissions_ARRAYSIZE = GroupPermissions_MAX + 1;

const ::google::protobuf::EnumDescriptor* GroupPermissions_descriptor();
inline const ::std::string& GroupPermissions_Name(GroupPermissions value) {
  return ::google::protobuf::internal::NameOfEnum(
    GroupPermissions_descriptor(), value);
}
inline bool GroupPermissions_Parse(
    const ::std::string& name, GroupPermissions* value) {
  return ::google::protobuf::internal::ParseNamedEnum<GroupPermissions>(
    GroupPermissions_descriptor(), name, value);
}
enum GroupFullPermissions {
  EDIT_INFO = 0,
  VIEW_MEMBERS = 1,
  INVITE_MEMBERS = 2,
  INVITE_VIA_LINK = 3,
  CALL = 4,
  EDIT_ADMIN_SETTINGS = 5,
  VIEW_ADMINS = 6,
  EDIT_ADMINS = 7,
  KICK_INVITED = 8,
  KICK_ANYONE = 9,
  EDIT_FOREIGN = 10,
  DELETE_FOREIGN = 11,
  GroupFullPermissions_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  GroupFullPermissions_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool GroupFullPermissions_IsValid(int value);
const GroupFullPermissions GroupFullPermissions_MIN = EDIT_INFO;
const GroupFullPermissions GroupFullPermissions_MAX = DELETE_FOREIGN;
const int GroupFullPermissions_ARRAYSIZE = GroupFullPermissions_MAX + 1;

const ::google::protobuf::EnumDescriptor* GroupFullPermissions_descriptor();
inline const ::std::string& GroupFullPermissions_Name(GroupFullPermissions value) {
  return ::google::protobuf::internal::NameOfEnum(
    GroupFullPermissions_descriptor(), value);
}
inline bool GroupFullPermissions_Parse(
    const ::std::string& name, GroupFullPermissions* value) {
  return ::google::protobuf::internal::ParseNamedEnum<GroupFullPermissions>(
    GroupFullPermissions_descriptor(), name, value);
}
// ===================================================================

class Member : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:zproto.Member) */ {
 public:
  Member();
  virtual ~Member();

  Member(const Member& from);

  inline Member& operator=(const Member& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Member& default_instance();

  static const Member* internal_default_instance();

  void Swap(Member* other);

  // implements Message ----------------------------------------------

  inline Member* New() const { return New(NULL); }

  Member* New(::google::protobuf::Arena* arena) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Member* other);
  void UnsafeMergeFrom(const Member& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string uid = 1;
  void clear_uid();
  static const int kUidFieldNumber = 1;
  const ::std::string& uid() const;
  void set_uid(const ::std::string& value);
  void set_uid(const char* value);
  void set_uid(const char* value, size_t size);
  ::std::string* mutable_uid();
  ::std::string* release_uid();
  void set_allocated_uid(::std::string* uid);

  // optional string inviter_uid = 2;
  void clear_inviter_uid();
  static const int kInviterUidFieldNumber = 2;
  const ::std::string& inviter_uid() const;
  void set_inviter_uid(const ::std::string& value);
  void set_inviter_uid(const char* value);
  void set_inviter_uid(const char* value, size_t size);
  ::std::string* mutable_inviter_uid();
  ::std::string* release_inviter_uid();
  void set_allocated_inviter_uid(::std::string* inviter_uid);

  // optional int64 date = 3;
  void clear_date();
  static const int kDateFieldNumber = 3;
  ::google::protobuf::int64 date() const;
  void set_date(::google::protobuf::int64 value);

  // optional bool is_admin = 4;
  void clear_is_admin();
  static const int kIsAdminFieldNumber = 4;
  bool is_admin() const;
  void set_is_admin(bool value);

  // @@protoc_insertion_point(class_scope:zproto.Member)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr uid_;
  ::google::protobuf::internal::ArenaStringPtr inviter_uid_;
  ::google::protobuf::int64 date_;
  bool is_admin_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_group_5fbase_2eproto_impl();
  friend void  protobuf_AddDesc_group_5fbase_2eproto_impl();
  friend void protobuf_AssignDesc_group_5fbase_2eproto();
  friend void protobuf_ShutdownFile_group_5fbase_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<Member> Member_default_instance_;

// -------------------------------------------------------------------

class Group : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:zproto.Group) */ {
 public:
  Group();
  virtual ~Group();

  Group(const Group& from);

  inline Group& operator=(const Group& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Group& default_instance();

  static const Group* internal_default_instance();

  void Swap(Group* other);

  // implements Message ----------------------------------------------

  inline Group* New() const { return New(NULL); }

  Group* New(::google::protobuf::Arena* arena) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Group* other);
  void UnsafeMergeFrom(const Group& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // optional string id = 1;
  void clear_id();
  static const int kIdFieldNumber = 1;
  const ::std::string& id() const;
  void set_id(const ::std::string& value);
  void set_id(const char* value);
  void set_id(const char* value, size_t size);
  ::std::string* mutable_id();
  ::std::string* release_id();
  void set_allocated_id(::std::string* id);

  // optional int64 access_hash = 2;
  void clear_access_hash();
  static const int kAccessHashFieldNumber = 2;
  ::google::protobuf::int64 access_hash() const;
  void set_access_hash(::google::protobuf::int64 value);

  // optional string title = 3;
  void clear_title();
  static const int kTitleFieldNumber = 3;
  const ::std::string& title() const;
  void set_title(const ::std::string& value);
  void set_title(const char* value);
  void set_title(const char* value, size_t size);
  ::std::string* mutable_title();
  ::std::string* release_title();
  void set_allocated_title(::std::string* title);

  // optional .zproto.Avatar avatar = 4;
  bool has_avatar() const;
  void clear_avatar();
  static const int kAvatarFieldNumber = 4;
  const ::zproto::Avatar& avatar() const;
  ::zproto::Avatar* mutable_avatar();
  ::zproto::Avatar* release_avatar();
  void set_allocated_avatar(::zproto::Avatar* avatar);

  // optional int32 members_count = 5;
  void clear_members_count();
  static const int kMembersCountFieldNumber = 5;
  ::google::protobuf::int32 members_count() const;
  void set_members_count(::google::protobuf::int32 value);

  // optional bool is_member = 6;
  void clear_is_member();
  static const int kIsMemberFieldNumber = 6;
  bool is_member() const;
  void set_is_member(bool value);

  // optional bool is_hidden = 7;
  void clear_is_hidden();
  static const int kIsHiddenFieldNumber = 7;
  bool is_hidden() const;
  void set_is_hidden(bool value);

  // optional int64 permissions = 8;
  void clear_permissions();
  static const int kPermissionsFieldNumber = 8;
  ::google::protobuf::int64 permissions() const;
  void set_permissions(::google::protobuf::int64 value);

  // optional bool is_deleted = 9;
  void clear_is_deleted();
  static const int kIsDeletedFieldNumber = 9;
  bool is_deleted() const;
  void set_is_deleted(bool value);

  // map<string, .zproto.RawArrayValue> ext = 10;
  int ext_size() const;
  void clear_ext();
  static const int kExtFieldNumber = 10;
  const ::google::protobuf::Map< ::std::string, ::zproto::RawArrayValue >&
      ext() const;
  ::google::protobuf::Map< ::std::string, ::zproto::RawArrayValue >*
      mutable_ext();

  // @@protoc_insertion_point(class_scope:zproto.Group)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  typedef ::google::protobuf::internal::MapEntryLite<
      ::std::string, ::zproto::RawArrayValue,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 >
      Group_ExtEntry;
  ::google::protobuf::internal::MapField<
      ::std::string, ::zproto::RawArrayValue,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > ext_;
  ::google::protobuf::internal::ArenaStringPtr id_;
  ::google::protobuf::internal::ArenaStringPtr title_;
  ::zproto::Avatar* avatar_;
  ::google::protobuf::int64 access_hash_;
  ::google::protobuf::int32 members_count_;
  bool is_member_;
  bool is_hidden_;
  bool is_deleted_;
  ::google::protobuf::int64 permissions_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_group_5fbase_2eproto_impl();
  friend void  protobuf_AddDesc_group_5fbase_2eproto_impl();
  friend void protobuf_AssignDesc_group_5fbase_2eproto();
  friend void protobuf_ShutdownFile_group_5fbase_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<Group> Group_default_instance_;

// -------------------------------------------------------------------

class GroupFull : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:zproto.GroupFull) */ {
 public:
  GroupFull();
  virtual ~GroupFull();

  GroupFull(const GroupFull& from);

  inline GroupFull& operator=(const GroupFull& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GroupFull& default_instance();

  static const GroupFull* internal_default_instance();

  void Swap(GroupFull* other);

  // implements Message ----------------------------------------------

  inline GroupFull* New() const { return New(NULL); }

  GroupFull* New(::google::protobuf::Arena* arena) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(GroupFull* other);
  void UnsafeMergeFrom(const GroupFull& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // optional string id = 1;
  void clear_id();
  static const int kIdFieldNumber = 1;
  const ::std::string& id() const;
  void set_id(const ::std::string& value);
  void set_id(const char* value);
  void set_id(const char* value, size_t size);
  ::std::string* mutable_id();
  ::std::string* release_id();
  void set_allocated_id(::std::string* id);

  // optional int64 create_date = 2;
  void clear_create_date();
  static const int kCreateDateFieldNumber = 2;
  ::google::protobuf::int64 create_date() const;
  void set_create_date(::google::protobuf::int64 value);

  // optional string owner_uid = 3;
  void clear_owner_uid();
  static const int kOwnerUidFieldNumber = 3;
  const ::std::string& owner_uid() const;
  void set_owner_uid(const ::std::string& value);
  void set_owner_uid(const char* value);
  void set_owner_uid(const char* value, size_t size);
  ::std::string* mutable_owner_uid();
  ::std::string* release_owner_uid();
  void set_allocated_owner_uid(::std::string* owner_uid);

  // repeated .zproto.Member members = 4;
  int members_size() const;
  void clear_members();
  static const int kMembersFieldNumber = 4;
  const ::zproto::Member& members(int index) const;
  ::zproto::Member* mutable_members(int index);
  ::zproto::Member* add_members();
  ::google::protobuf::RepeatedPtrField< ::zproto::Member >*
      mutable_members();
  const ::google::protobuf::RepeatedPtrField< ::zproto::Member >&
      members() const;

  // optional string theme = 5;
  void clear_theme();
  static const int kThemeFieldNumber = 5;
  const ::std::string& theme() const;
  void set_theme(const ::std::string& value);
  void set_theme(const char* value);
  void set_theme(const char* value, size_t size);
  ::std::string* mutable_theme();
  ::std::string* release_theme();
  void set_allocated_theme(::std::string* theme);

  // optional string about = 6;
  void clear_about();
  static const int kAboutFieldNumber = 6;
  const ::std::string& about() const;
  void set_about(const ::std::string& value);
  void set_about(const char* value);
  void set_about(const char* value, size_t size);
  ::std::string* mutable_about();
  ::std::string* release_about();
  void set_allocated_about(::std::string* about);

  // map<string, .zproto.RawArrayValue> ext = 7;
  int ext_size() const;
  void clear_ext();
  static const int kExtFieldNumber = 7;
  const ::google::protobuf::Map< ::std::string, ::zproto::RawArrayValue >&
      ext() const;
  ::google::protobuf::Map< ::std::string, ::zproto::RawArrayValue >*
      mutable_ext();

  // optional bool is_async_members = 8;
  void clear_is_async_members();
  static const int kIsAsyncMembersFieldNumber = 8;
  bool is_async_members() const;
  void set_is_async_members(bool value);

  // optional bool is_shared_history = 9;
  void clear_is_shared_history();
  static const int kIsSharedHistoryFieldNumber = 9;
  bool is_shared_history() const;
  void set_is_shared_history(bool value);

  // optional string short_name = 10;
  void clear_short_name();
  static const int kShortNameFieldNumber = 10;
  const ::std::string& short_name() const;
  void set_short_name(const ::std::string& value);
  void set_short_name(const char* value);
  void set_short_name(const char* value, size_t size);
  ::std::string* mutable_short_name();
  ::std::string* release_short_name();
  void set_allocated_short_name(::std::string* short_name);

  // optional int64 permissions = 11;
  void clear_permissions();
  static const int kPermissionsFieldNumber = 11;
  ::google::protobuf::int64 permissions() const;
  void set_permissions(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:zproto.GroupFull)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::zproto::Member > members_;
  typedef ::google::protobuf::internal::MapEntryLite<
      ::std::string, ::zproto::RawArrayValue,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 >
      GroupFull_ExtEntry;
  ::google::protobuf::internal::MapField<
      ::std::string, ::zproto::RawArrayValue,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > ext_;
  ::google::protobuf::internal::ArenaStringPtr id_;
  ::google::protobuf::internal::ArenaStringPtr owner_uid_;
  ::google::protobuf::internal::ArenaStringPtr theme_;
  ::google::protobuf::internal::ArenaStringPtr about_;
  ::google::protobuf::internal::ArenaStringPtr short_name_;
  ::google::protobuf::int64 create_date_;
  ::google::protobuf::int64 permissions_;
  bool is_async_members_;
  bool is_shared_history_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_group_5fbase_2eproto_impl();
  friend void  protobuf_AddDesc_group_5fbase_2eproto_impl();
  friend void protobuf_AssignDesc_group_5fbase_2eproto();
  friend void protobuf_ShutdownFile_group_5fbase_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<GroupFull> GroupFull_default_instance_;

// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// Member

// optional string uid = 1;
inline void Member::clear_uid() {
  uid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Member::uid() const {
  // @@protoc_insertion_point(field_get:zproto.Member.uid)
  return uid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Member::set_uid(const ::std::string& value) {
  
  uid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:zproto.Member.uid)
}
inline void Member::set_uid(const char* value) {
  
  uid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:zproto.Member.uid)
}
inline void Member::set_uid(const char* value, size_t size) {
  
  uid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:zproto.Member.uid)
}
inline ::std::string* Member::mutable_uid() {
  
  // @@protoc_insertion_point(field_mutable:zproto.Member.uid)
  return uid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Member::release_uid() {
  // @@protoc_insertion_point(field_release:zproto.Member.uid)
  
  return uid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Member::set_allocated_uid(::std::string* uid) {
  if (uid != NULL) {
    
  } else {
    
  }
  uid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), uid);
  // @@protoc_insertion_point(field_set_allocated:zproto.Member.uid)
}

// optional string inviter_uid = 2;
inline void Member::clear_inviter_uid() {
  inviter_uid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Member::inviter_uid() const {
  // @@protoc_insertion_point(field_get:zproto.Member.inviter_uid)
  return inviter_uid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Member::set_inviter_uid(const ::std::string& value) {
  
  inviter_uid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:zproto.Member.inviter_uid)
}
inline void Member::set_inviter_uid(const char* value) {
  
  inviter_uid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:zproto.Member.inviter_uid)
}
inline void Member::set_inviter_uid(const char* value, size_t size) {
  
  inviter_uid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:zproto.Member.inviter_uid)
}
inline ::std::string* Member::mutable_inviter_uid() {
  
  // @@protoc_insertion_point(field_mutable:zproto.Member.inviter_uid)
  return inviter_uid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Member::release_inviter_uid() {
  // @@protoc_insertion_point(field_release:zproto.Member.inviter_uid)
  
  return inviter_uid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Member::set_allocated_inviter_uid(::std::string* inviter_uid) {
  if (inviter_uid != NULL) {
    
  } else {
    
  }
  inviter_uid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), inviter_uid);
  // @@protoc_insertion_point(field_set_allocated:zproto.Member.inviter_uid)
}

// optional int64 date = 3;
inline void Member::clear_date() {
  date_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 Member::date() const {
  // @@protoc_insertion_point(field_get:zproto.Member.date)
  return date_;
}
inline void Member::set_date(::google::protobuf::int64 value) {
  
  date_ = value;
  // @@protoc_insertion_point(field_set:zproto.Member.date)
}

// optional bool is_admin = 4;
inline void Member::clear_is_admin() {
  is_admin_ = false;
}
inline bool Member::is_admin() const {
  // @@protoc_insertion_point(field_get:zproto.Member.is_admin)
  return is_admin_;
}
inline void Member::set_is_admin(bool value) {
  
  is_admin_ = value;
  // @@protoc_insertion_point(field_set:zproto.Member.is_admin)
}

inline const Member* Member::internal_default_instance() {
  return &Member_default_instance_.get();
}
// -------------------------------------------------------------------

// Group

// optional string id = 1;
inline void Group::clear_id() {
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Group::id() const {
  // @@protoc_insertion_point(field_get:zproto.Group.id)
  return id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Group::set_id(const ::std::string& value) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:zproto.Group.id)
}
inline void Group::set_id(const char* value) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:zproto.Group.id)
}
inline void Group::set_id(const char* value, size_t size) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:zproto.Group.id)
}
inline ::std::string* Group::mutable_id() {
  
  // @@protoc_insertion_point(field_mutable:zproto.Group.id)
  return id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Group::release_id() {
  // @@protoc_insertion_point(field_release:zproto.Group.id)
  
  return id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Group::set_allocated_id(::std::string* id) {
  if (id != NULL) {
    
  } else {
    
  }
  id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id);
  // @@protoc_insertion_point(field_set_allocated:zproto.Group.id)
}

// optional int64 access_hash = 2;
inline void Group::clear_access_hash() {
  access_hash_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 Group::access_hash() const {
  // @@protoc_insertion_point(field_get:zproto.Group.access_hash)
  return access_hash_;
}
inline void Group::set_access_hash(::google::protobuf::int64 value) {
  
  access_hash_ = value;
  // @@protoc_insertion_point(field_set:zproto.Group.access_hash)
}

// optional string title = 3;
inline void Group::clear_title() {
  title_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Group::title() const {
  // @@protoc_insertion_point(field_get:zproto.Group.title)
  return title_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Group::set_title(const ::std::string& value) {
  
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:zproto.Group.title)
}
inline void Group::set_title(const char* value) {
  
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:zproto.Group.title)
}
inline void Group::set_title(const char* value, size_t size) {
  
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:zproto.Group.title)
}
inline ::std::string* Group::mutable_title() {
  
  // @@protoc_insertion_point(field_mutable:zproto.Group.title)
  return title_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Group::release_title() {
  // @@protoc_insertion_point(field_release:zproto.Group.title)
  
  return title_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Group::set_allocated_title(::std::string* title) {
  if (title != NULL) {
    
  } else {
    
  }
  title_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), title);
  // @@protoc_insertion_point(field_set_allocated:zproto.Group.title)
}

// optional .zproto.Avatar avatar = 4;
inline bool Group::has_avatar() const {
  return this != internal_default_instance() && avatar_ != NULL;
}
inline void Group::clear_avatar() {
  if (GetArenaNoVirtual() == NULL && avatar_ != NULL) delete avatar_;
  avatar_ = NULL;
}
inline const ::zproto::Avatar& Group::avatar() const {
  // @@protoc_insertion_point(field_get:zproto.Group.avatar)
  return avatar_ != NULL ? *avatar_
                         : *::zproto::Avatar::internal_default_instance();
}
inline ::zproto::Avatar* Group::mutable_avatar() {
  
  if (avatar_ == NULL) {
    avatar_ = new ::zproto::Avatar;
  }
  // @@protoc_insertion_point(field_mutable:zproto.Group.avatar)
  return avatar_;
}
inline ::zproto::Avatar* Group::release_avatar() {
  // @@protoc_insertion_point(field_release:zproto.Group.avatar)
  
  ::zproto::Avatar* temp = avatar_;
  avatar_ = NULL;
  return temp;
}
inline void Group::set_allocated_avatar(::zproto::Avatar* avatar) {
  delete avatar_;
  avatar_ = avatar;
  if (avatar) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:zproto.Group.avatar)
}

// optional int32 members_count = 5;
inline void Group::clear_members_count() {
  members_count_ = 0;
}
inline ::google::protobuf::int32 Group::members_count() const {
  // @@protoc_insertion_point(field_get:zproto.Group.members_count)
  return members_count_;
}
inline void Group::set_members_count(::google::protobuf::int32 value) {
  
  members_count_ = value;
  // @@protoc_insertion_point(field_set:zproto.Group.members_count)
}

// optional bool is_member = 6;
inline void Group::clear_is_member() {
  is_member_ = false;
}
inline bool Group::is_member() const {
  // @@protoc_insertion_point(field_get:zproto.Group.is_member)
  return is_member_;
}
inline void Group::set_is_member(bool value) {
  
  is_member_ = value;
  // @@protoc_insertion_point(field_set:zproto.Group.is_member)
}

// optional bool is_hidden = 7;
inline void Group::clear_is_hidden() {
  is_hidden_ = false;
}
inline bool Group::is_hidden() const {
  // @@protoc_insertion_point(field_get:zproto.Group.is_hidden)
  return is_hidden_;
}
inline void Group::set_is_hidden(bool value) {
  
  is_hidden_ = value;
  // @@protoc_insertion_point(field_set:zproto.Group.is_hidden)
}

// optional int64 permissions = 8;
inline void Group::clear_permissions() {
  permissions_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 Group::permissions() const {
  // @@protoc_insertion_point(field_get:zproto.Group.permissions)
  return permissions_;
}
inline void Group::set_permissions(::google::protobuf::int64 value) {
  
  permissions_ = value;
  // @@protoc_insertion_point(field_set:zproto.Group.permissions)
}

// optional bool is_deleted = 9;
inline void Group::clear_is_deleted() {
  is_deleted_ = false;
}
inline bool Group::is_deleted() const {
  // @@protoc_insertion_point(field_get:zproto.Group.is_deleted)
  return is_deleted_;
}
inline void Group::set_is_deleted(bool value) {
  
  is_deleted_ = value;
  // @@protoc_insertion_point(field_set:zproto.Group.is_deleted)
}

// map<string, .zproto.RawArrayValue> ext = 10;
inline int Group::ext_size() const {
  return ext_.size();
}
inline void Group::clear_ext() {
  ext_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::zproto::RawArrayValue >&
Group::ext() const {
  // @@protoc_insertion_point(field_map:zproto.Group.ext)
  return ext_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::zproto::RawArrayValue >*
Group::mutable_ext() {
  // @@protoc_insertion_point(field_mutable_map:zproto.Group.ext)
  return ext_.MutableMap();
}

inline const Group* Group::internal_default_instance() {
  return &Group_default_instance_.get();
}
// -------------------------------------------------------------------

// GroupFull

// optional string id = 1;
inline void GroupFull::clear_id() {
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GroupFull::id() const {
  // @@protoc_insertion_point(field_get:zproto.GroupFull.id)
  return id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GroupFull::set_id(const ::std::string& value) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:zproto.GroupFull.id)
}
inline void GroupFull::set_id(const char* value) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:zproto.GroupFull.id)
}
inline void GroupFull::set_id(const char* value, size_t size) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:zproto.GroupFull.id)
}
inline ::std::string* GroupFull::mutable_id() {
  
  // @@protoc_insertion_point(field_mutable:zproto.GroupFull.id)
  return id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GroupFull::release_id() {
  // @@protoc_insertion_point(field_release:zproto.GroupFull.id)
  
  return id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GroupFull::set_allocated_id(::std::string* id) {
  if (id != NULL) {
    
  } else {
    
  }
  id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id);
  // @@protoc_insertion_point(field_set_allocated:zproto.GroupFull.id)
}

// optional int64 create_date = 2;
inline void GroupFull::clear_create_date() {
  create_date_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 GroupFull::create_date() const {
  // @@protoc_insertion_point(field_get:zproto.GroupFull.create_date)
  return create_date_;
}
inline void GroupFull::set_create_date(::google::protobuf::int64 value) {
  
  create_date_ = value;
  // @@protoc_insertion_point(field_set:zproto.GroupFull.create_date)
}

// optional string owner_uid = 3;
inline void GroupFull::clear_owner_uid() {
  owner_uid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GroupFull::owner_uid() const {
  // @@protoc_insertion_point(field_get:zproto.GroupFull.owner_uid)
  return owner_uid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GroupFull::set_owner_uid(const ::std::string& value) {
  
  owner_uid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:zproto.GroupFull.owner_uid)
}
inline void GroupFull::set_owner_uid(const char* value) {
  
  owner_uid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:zproto.GroupFull.owner_uid)
}
inline void GroupFull::set_owner_uid(const char* value, size_t size) {
  
  owner_uid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:zproto.GroupFull.owner_uid)
}
inline ::std::string* GroupFull::mutable_owner_uid() {
  
  // @@protoc_insertion_point(field_mutable:zproto.GroupFull.owner_uid)
  return owner_uid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GroupFull::release_owner_uid() {
  // @@protoc_insertion_point(field_release:zproto.GroupFull.owner_uid)
  
  return owner_uid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GroupFull::set_allocated_owner_uid(::std::string* owner_uid) {
  if (owner_uid != NULL) {
    
  } else {
    
  }
  owner_uid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), owner_uid);
  // @@protoc_insertion_point(field_set_allocated:zproto.GroupFull.owner_uid)
}

// repeated .zproto.Member members = 4;
inline int GroupFull::members_size() const {
  return members_.size();
}
inline void GroupFull::clear_members() {
  members_.Clear();
}
inline const ::zproto::Member& GroupFull::members(int index) const {
  // @@protoc_insertion_point(field_get:zproto.GroupFull.members)
  return members_.Get(index);
}
inline ::zproto::Member* GroupFull::mutable_members(int index) {
  // @@protoc_insertion_point(field_mutable:zproto.GroupFull.members)
  return members_.Mutable(index);
}
inline ::zproto::Member* GroupFull::add_members() {
  // @@protoc_insertion_point(field_add:zproto.GroupFull.members)
  return members_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::zproto::Member >*
GroupFull::mutable_members() {
  // @@protoc_insertion_point(field_mutable_list:zproto.GroupFull.members)
  return &members_;
}
inline const ::google::protobuf::RepeatedPtrField< ::zproto::Member >&
GroupFull::members() const {
  // @@protoc_insertion_point(field_list:zproto.GroupFull.members)
  return members_;
}

// optional string theme = 5;
inline void GroupFull::clear_theme() {
  theme_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GroupFull::theme() const {
  // @@protoc_insertion_point(field_get:zproto.GroupFull.theme)
  return theme_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GroupFull::set_theme(const ::std::string& value) {
  
  theme_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:zproto.GroupFull.theme)
}
inline void GroupFull::set_theme(const char* value) {
  
  theme_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:zproto.GroupFull.theme)
}
inline void GroupFull::set_theme(const char* value, size_t size) {
  
  theme_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:zproto.GroupFull.theme)
}
inline ::std::string* GroupFull::mutable_theme() {
  
  // @@protoc_insertion_point(field_mutable:zproto.GroupFull.theme)
  return theme_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GroupFull::release_theme() {
  // @@protoc_insertion_point(field_release:zproto.GroupFull.theme)
  
  return theme_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GroupFull::set_allocated_theme(::std::string* theme) {
  if (theme != NULL) {
    
  } else {
    
  }
  theme_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), theme);
  // @@protoc_insertion_point(field_set_allocated:zproto.GroupFull.theme)
}

// optional string about = 6;
inline void GroupFull::clear_about() {
  about_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GroupFull::about() const {
  // @@protoc_insertion_point(field_get:zproto.GroupFull.about)
  return about_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GroupFull::set_about(const ::std::string& value) {
  
  about_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:zproto.GroupFull.about)
}
inline void GroupFull::set_about(const char* value) {
  
  about_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:zproto.GroupFull.about)
}
inline void GroupFull::set_about(const char* value, size_t size) {
  
  about_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:zproto.GroupFull.about)
}
inline ::std::string* GroupFull::mutable_about() {
  
  // @@protoc_insertion_point(field_mutable:zproto.GroupFull.about)
  return about_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GroupFull::release_about() {
  // @@protoc_insertion_point(field_release:zproto.GroupFull.about)
  
  return about_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GroupFull::set_allocated_about(::std::string* about) {
  if (about != NULL) {
    
  } else {
    
  }
  about_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), about);
  // @@protoc_insertion_point(field_set_allocated:zproto.GroupFull.about)
}

// map<string, .zproto.RawArrayValue> ext = 7;
inline int GroupFull::ext_size() const {
  return ext_.size();
}
inline void GroupFull::clear_ext() {
  ext_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::zproto::RawArrayValue >&
GroupFull::ext() const {
  // @@protoc_insertion_point(field_map:zproto.GroupFull.ext)
  return ext_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::zproto::RawArrayValue >*
GroupFull::mutable_ext() {
  // @@protoc_insertion_point(field_mutable_map:zproto.GroupFull.ext)
  return ext_.MutableMap();
}

// optional bool is_async_members = 8;
inline void GroupFull::clear_is_async_members() {
  is_async_members_ = false;
}
inline bool GroupFull::is_async_members() const {
  // @@protoc_insertion_point(field_get:zproto.GroupFull.is_async_members)
  return is_async_members_;
}
inline void GroupFull::set_is_async_members(bool value) {
  
  is_async_members_ = value;
  // @@protoc_insertion_point(field_set:zproto.GroupFull.is_async_members)
}

// optional bool is_shared_history = 9;
inline void GroupFull::clear_is_shared_history() {
  is_shared_history_ = false;
}
inline bool GroupFull::is_shared_history() const {
  // @@protoc_insertion_point(field_get:zproto.GroupFull.is_shared_history)
  return is_shared_history_;
}
inline void GroupFull::set_is_shared_history(bool value) {
  
  is_shared_history_ = value;
  // @@protoc_insertion_point(field_set:zproto.GroupFull.is_shared_history)
}

// optional string short_name = 10;
inline void GroupFull::clear_short_name() {
  short_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GroupFull::short_name() const {
  // @@protoc_insertion_point(field_get:zproto.GroupFull.short_name)
  return short_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GroupFull::set_short_name(const ::std::string& value) {
  
  short_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:zproto.GroupFull.short_name)
}
inline void GroupFull::set_short_name(const char* value) {
  
  short_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:zproto.GroupFull.short_name)
}
inline void GroupFull::set_short_name(const char* value, size_t size) {
  
  short_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:zproto.GroupFull.short_name)
}
inline ::std::string* GroupFull::mutable_short_name() {
  
  // @@protoc_insertion_point(field_mutable:zproto.GroupFull.short_name)
  return short_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GroupFull::release_short_name() {
  // @@protoc_insertion_point(field_release:zproto.GroupFull.short_name)
  
  return short_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GroupFull::set_allocated_short_name(::std::string* short_name) {
  if (short_name != NULL) {
    
  } else {
    
  }
  short_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), short_name);
  // @@protoc_insertion_point(field_set_allocated:zproto.GroupFull.short_name)
}

// optional int64 permissions = 11;
inline void GroupFull::clear_permissions() {
  permissions_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 GroupFull::permissions() const {
  // @@protoc_insertion_point(field_get:zproto.GroupFull.permissions)
  return permissions_;
}
inline void GroupFull::set_permissions(::google::protobuf::int64 value) {
  
  permissions_ = value;
  // @@protoc_insertion_point(field_set:zproto.GroupFull.permissions)
}

inline const GroupFull* GroupFull::internal_default_instance() {
  return &GroupFull_default_instance_.get();
}
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace zproto

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::zproto::GroupPermissions> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::zproto::GroupPermissions>() {
  return ::zproto::GroupPermissions_descriptor();
}
template <> struct is_proto_enum< ::zproto::GroupFullPermissions> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::zproto::GroupFullPermissions>() {
  return ::zproto::GroupFullPermissions_descriptor();
}

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_group_5fbase_2eproto__INCLUDED
