// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: presences.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "presences.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace zproto {

namespace {

const ::google::protobuf::Descriptor* ZUserID_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ZUserID_reflection_ = NULL;
const ::google::protobuf::Descriptor* ZOnlineUser_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ZOnlineUser_reflection_ = NULL;
const ::google::protobuf::Descriptor* ClientOnlineReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ClientOnlineReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* ClientOnlineRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ClientOnlineRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* ClientOfflineReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ClientOfflineReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* ClientOfflineRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ClientOfflineRsp_reflection_ = NULL;
const ::google::protobuf::Descriptor* QueryOnlineUserReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  QueryOnlineUserReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* QueryOnlineUserRsp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  QueryOnlineUserRsp_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_presences_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_presences_2eproto() {
  protobuf_AddDesc_presences_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "presences.proto");
  GOOGLE_CHECK(file != NULL);
  ZUserID_descriptor_ = file->message_type(0);
  static const int ZUserID_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ZUserID, app_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ZUserID, user_id_),
  };
  ZUserID_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ZUserID_descriptor_,
      ZUserID::internal_default_instance(),
      ZUserID_offsets_,
      -1,
      -1,
      -1,
      sizeof(ZUserID),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ZUserID, _internal_metadata_));
  ZOnlineUser_descriptor_ = file->message_type(1);
  static const int ZOnlineUser_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ZOnlineUser, app_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ZOnlineUser, user_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ZOnlineUser, server_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ZOnlineUser, conn_id_),
  };
  ZOnlineUser_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ZOnlineUser_descriptor_,
      ZOnlineUser::internal_default_instance(),
      ZOnlineUser_offsets_,
      -1,
      -1,
      -1,
      sizeof(ZOnlineUser),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ZOnlineUser, _internal_metadata_));
  ClientOnlineReq_descriptor_ = file->message_type(2);
  static const int ClientOnlineReq_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClientOnlineReq, server_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClientOnlineReq, conn_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClientOnlineReq, app_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClientOnlineReq, user_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClientOnlineReq, state_),
  };
  ClientOnlineReq_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ClientOnlineReq_descriptor_,
      ClientOnlineReq::internal_default_instance(),
      ClientOnlineReq_offsets_,
      -1,
      -1,
      -1,
      sizeof(ClientOnlineReq),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClientOnlineReq, _internal_metadata_));
  ClientOnlineRsp_descriptor_ = file->message_type(3);
  static const int ClientOnlineRsp_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClientOnlineRsp, index_id_),
  };
  ClientOnlineRsp_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ClientOnlineRsp_descriptor_,
      ClientOnlineRsp::internal_default_instance(),
      ClientOnlineRsp_offsets_,
      -1,
      -1,
      -1,
      sizeof(ClientOnlineRsp),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClientOnlineRsp, _internal_metadata_));
  ClientOfflineReq_descriptor_ = file->message_type(4);
  static const int ClientOfflineReq_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClientOfflineReq, server_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClientOfflineReq, conn_id_),
  };
  ClientOfflineReq_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ClientOfflineReq_descriptor_,
      ClientOfflineReq::internal_default_instance(),
      ClientOfflineReq_offsets_,
      -1,
      -1,
      -1,
      sizeof(ClientOfflineReq),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClientOfflineReq, _internal_metadata_));
  ClientOfflineRsp_descriptor_ = file->message_type(5);
  static const int ClientOfflineRsp_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClientOfflineRsp, index_id_),
  };
  ClientOfflineRsp_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ClientOfflineRsp_descriptor_,
      ClientOfflineRsp::internal_default_instance(),
      ClientOfflineRsp_offsets_,
      -1,
      -1,
      -1,
      sizeof(ClientOfflineRsp),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClientOfflineRsp, _internal_metadata_));
  QueryOnlineUserReq_descriptor_ = file->message_type(6);
  static const int QueryOnlineUserReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryOnlineUserReq, user_id_list_),
  };
  QueryOnlineUserReq_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      QueryOnlineUserReq_descriptor_,
      QueryOnlineUserReq::internal_default_instance(),
      QueryOnlineUserReq_offsets_,
      -1,
      -1,
      -1,
      sizeof(QueryOnlineUserReq),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryOnlineUserReq, _internal_metadata_));
  QueryOnlineUserRsp_descriptor_ = file->message_type(7);
  static const int QueryOnlineUserRsp_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryOnlineUserRsp, online_users_),
  };
  QueryOnlineUserRsp_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      QueryOnlineUserRsp_descriptor_,
      QueryOnlineUserRsp::internal_default_instance(),
      QueryOnlineUserRsp_offsets_,
      -1,
      -1,
      -1,
      sizeof(QueryOnlineUserRsp),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryOnlineUserRsp, _internal_metadata_));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_presences_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ZUserID_descriptor_, ZUserID::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ZOnlineUser_descriptor_, ZOnlineUser::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ClientOnlineReq_descriptor_, ClientOnlineReq::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ClientOnlineRsp_descriptor_, ClientOnlineRsp::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ClientOfflineReq_descriptor_, ClientOfflineReq::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ClientOfflineRsp_descriptor_, ClientOfflineRsp::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      QueryOnlineUserReq_descriptor_, QueryOnlineUserReq::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      QueryOnlineUserRsp_descriptor_, QueryOnlineUserRsp::internal_default_instance());
}

}  // namespace

void protobuf_ShutdownFile_presences_2eproto() {
  ZUserID_default_instance_.Shutdown();
  delete ZUserID_reflection_;
  ZOnlineUser_default_instance_.Shutdown();
  delete ZOnlineUser_reflection_;
  ClientOnlineReq_default_instance_.Shutdown();
  delete ClientOnlineReq_reflection_;
  ClientOnlineRsp_default_instance_.Shutdown();
  delete ClientOnlineRsp_reflection_;
  ClientOfflineReq_default_instance_.Shutdown();
  delete ClientOfflineReq_reflection_;
  ClientOfflineRsp_default_instance_.Shutdown();
  delete ClientOfflineRsp_reflection_;
  QueryOnlineUserReq_default_instance_.Shutdown();
  delete QueryOnlineUserReq_reflection_;
  QueryOnlineUserRsp_default_instance_.Shutdown();
  delete QueryOnlineUserRsp_reflection_;
}

void protobuf_InitDefaults_presences_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::GetEmptyString();
  ZUserID_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  ZOnlineUser_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  ClientOnlineReq_default_instance_.DefaultConstruct();
  ClientOnlineRsp_default_instance_.DefaultConstruct();
  ClientOfflineReq_default_instance_.DefaultConstruct();
  ClientOfflineRsp_default_instance_.DefaultConstruct();
  QueryOnlineUserReq_default_instance_.DefaultConstruct();
  QueryOnlineUserRsp_default_instance_.DefaultConstruct();
  ZUserID_default_instance_.get_mutable()->InitAsDefaultInstance();
  ZOnlineUser_default_instance_.get_mutable()->InitAsDefaultInstance();
  ClientOnlineReq_default_instance_.get_mutable()->InitAsDefaultInstance();
  ClientOnlineRsp_default_instance_.get_mutable()->InitAsDefaultInstance();
  ClientOfflineReq_default_instance_.get_mutable()->InitAsDefaultInstance();
  ClientOfflineRsp_default_instance_.get_mutable()->InitAsDefaultInstance();
  QueryOnlineUserReq_default_instance_.get_mutable()->InitAsDefaultInstance();
  QueryOnlineUserRsp_default_instance_.get_mutable()->InitAsDefaultInstance();
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_InitDefaults_presences_2eproto_once_);
void protobuf_InitDefaults_presences_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_InitDefaults_presences_2eproto_once_,
                 &protobuf_InitDefaults_presences_2eproto_impl);
}
void protobuf_AddDesc_presences_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  protobuf_InitDefaults_presences_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\017presences.proto\022\006zproto\"*\n\007ZUserID\022\016\n\006"
    "app_id\030\001 \001(\r\022\017\n\007user_id\030\002 \001(\t\"R\n\013ZOnline"
    "User\022\016\n\006app_id\030\001 \001(\r\022\017\n\007user_id\030\002 \001(\t\022\021\n"
    "\tserver_id\030\003 \001(\r\022\017\n\007conn_id\030\004 \001(\004\"e\n\017Cli"
    "entOnlineReq\022\021\n\tserver_id\030\001 \001(\r\022\017\n\007conn_"
    "id\030\002 \001(\004\022\016\n\006app_id\030\003 \001(\r\022\017\n\007user_id\030\004 \001("
    "\t\022\r\n\005state\030\005 \001(\r\"#\n\017ClientOnlineRsp\022\020\n\010i"
    "ndex_id\030\001 \001(\004\"6\n\020ClientOfflineReq\022\021\n\tser"
    "ver_id\030\001 \001(\r\022\017\n\007conn_id\030\002 \001(\004\"$\n\020ClientO"
    "fflineRsp\022\020\n\010index_id\030\001 \001(\004\";\n\022QueryOnli"
    "neUserReq\022%\n\014user_id_list\030\001 \003(\0132\017.zproto"
    ".ZUserID\"\?\n\022QueryOnlineUserRsp\022)\n\014online"
    "_users\030\001 \003(\0132\023.zproto.ZOnlineUserB,\n\027com"
    ".zchat.engine.zprotoB\017ZProtoPresencesH\002b"
    "\006proto3", 567);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "presences.proto", &protobuf_RegisterTypes);
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_presences_2eproto);
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AddDesc_presences_2eproto_once_);
void protobuf_AddDesc_presences_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AddDesc_presences_2eproto_once_,
                 &protobuf_AddDesc_presences_2eproto_impl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_presences_2eproto {
  StaticDescriptorInitializer_presences_2eproto() {
    protobuf_AddDesc_presences_2eproto();
  }
} static_descriptor_initializer_presences_2eproto_;

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ZUserID::kAppIdFieldNumber;
const int ZUserID::kUserIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ZUserID::ZUserID()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_presences_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:zproto.ZUserID)
}

void ZUserID::InitAsDefaultInstance() {
}

ZUserID::ZUserID(const ZUserID& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:zproto.ZUserID)
}

void ZUserID::SharedCtor() {
  user_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  app_id_ = 0u;
  _cached_size_ = 0;
}

ZUserID::~ZUserID() {
  // @@protoc_insertion_point(destructor:zproto.ZUserID)
  SharedDtor();
}

void ZUserID::SharedDtor() {
  user_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ZUserID::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ZUserID::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ZUserID_descriptor_;
}

const ZUserID& ZUserID::default_instance() {
  protobuf_InitDefaults_presences_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<ZUserID> ZUserID_default_instance_;

ZUserID* ZUserID::New(::google::protobuf::Arena* arena) const {
  ZUserID* n = new ZUserID;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ZUserID::UnsafeMergeFrom(const ZUserID& from) {
  MergeFrom(from);
}
void ZUserID::Swap(ZUserID* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ZUserID::InternalSwap(ZUserID* other) {
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata ZUserID::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ZUserID_descriptor_;
  metadata.reflection = ZUserID_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ZUserID

// optional uint32 app_id = 1;
void ZUserID::clear_app_id() {
  app_id_ = 0u;
}
::google::protobuf::uint32 ZUserID::app_id() const {
  // @@protoc_insertion_point(field_get:zproto.ZUserID.app_id)
  return app_id_;
}
void ZUserID::set_app_id(::google::protobuf::uint32 value) {
  
  app_id_ = value;
  // @@protoc_insertion_point(field_set:zproto.ZUserID.app_id)
}

// optional string user_id = 2;
void ZUserID::clear_user_id() {
  user_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ZUserID::user_id() const {
  // @@protoc_insertion_point(field_get:zproto.ZUserID.user_id)
  return user_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ZUserID::set_user_id(const ::std::string& value) {
  
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:zproto.ZUserID.user_id)
}
void ZUserID::set_user_id(const char* value) {
  
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:zproto.ZUserID.user_id)
}
void ZUserID::set_user_id(const char* value, size_t size) {
  
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:zproto.ZUserID.user_id)
}
::std::string* ZUserID::mutable_user_id() {
  
  // @@protoc_insertion_point(field_mutable:zproto.ZUserID.user_id)
  return user_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ZUserID::release_user_id() {
  // @@protoc_insertion_point(field_release:zproto.ZUserID.user_id)
  
  return user_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ZUserID::set_allocated_user_id(::std::string* user_id) {
  if (user_id != NULL) {
    
  } else {
    
  }
  user_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), user_id);
  // @@protoc_insertion_point(field_set_allocated:zproto.ZUserID.user_id)
}

inline const ZUserID* ZUserID::internal_default_instance() {
  return &ZUserID_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ZOnlineUser::kAppIdFieldNumber;
const int ZOnlineUser::kUserIdFieldNumber;
const int ZOnlineUser::kServerIdFieldNumber;
const int ZOnlineUser::kConnIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ZOnlineUser::ZOnlineUser()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_presences_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:zproto.ZOnlineUser)
}

void ZOnlineUser::InitAsDefaultInstance() {
}

ZOnlineUser::ZOnlineUser(const ZOnlineUser& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:zproto.ZOnlineUser)
}

void ZOnlineUser::SharedCtor() {
  user_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&app_id_, 0, reinterpret_cast<char*>(&conn_id_) -
    reinterpret_cast<char*>(&app_id_) + sizeof(conn_id_));
  _cached_size_ = 0;
}

ZOnlineUser::~ZOnlineUser() {
  // @@protoc_insertion_point(destructor:zproto.ZOnlineUser)
  SharedDtor();
}

void ZOnlineUser::SharedDtor() {
  user_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ZOnlineUser::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ZOnlineUser::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ZOnlineUser_descriptor_;
}

const ZOnlineUser& ZOnlineUser::default_instance() {
  protobuf_InitDefaults_presences_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<ZOnlineUser> ZOnlineUser_default_instance_;

ZOnlineUser* ZOnlineUser::New(::google::protobuf::Arena* arena) const {
  ZOnlineUser* n = new ZOnlineUser;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ZOnlineUser::UnsafeMergeFrom(const ZOnlineUser& from) {
  MergeFrom(from);
}
void ZOnlineUser::Swap(ZOnlineUser* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ZOnlineUser::InternalSwap(ZOnlineUser* other) {
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata ZOnlineUser::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ZOnlineUser_descriptor_;
  metadata.reflection = ZOnlineUser_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ZOnlineUser

// optional uint32 app_id = 1;
void ZOnlineUser::clear_app_id() {
  app_id_ = 0u;
}
::google::protobuf::uint32 ZOnlineUser::app_id() const {
  // @@protoc_insertion_point(field_get:zproto.ZOnlineUser.app_id)
  return app_id_;
}
void ZOnlineUser::set_app_id(::google::protobuf::uint32 value) {
  
  app_id_ = value;
  // @@protoc_insertion_point(field_set:zproto.ZOnlineUser.app_id)
}

// optional string user_id = 2;
void ZOnlineUser::clear_user_id() {
  user_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ZOnlineUser::user_id() const {
  // @@protoc_insertion_point(field_get:zproto.ZOnlineUser.user_id)
  return user_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ZOnlineUser::set_user_id(const ::std::string& value) {
  
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:zproto.ZOnlineUser.user_id)
}
void ZOnlineUser::set_user_id(const char* value) {
  
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:zproto.ZOnlineUser.user_id)
}
void ZOnlineUser::set_user_id(const char* value, size_t size) {
  
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:zproto.ZOnlineUser.user_id)
}
::std::string* ZOnlineUser::mutable_user_id() {
  
  // @@protoc_insertion_point(field_mutable:zproto.ZOnlineUser.user_id)
  return user_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ZOnlineUser::release_user_id() {
  // @@protoc_insertion_point(field_release:zproto.ZOnlineUser.user_id)
  
  return user_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ZOnlineUser::set_allocated_user_id(::std::string* user_id) {
  if (user_id != NULL) {
    
  } else {
    
  }
  user_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), user_id);
  // @@protoc_insertion_point(field_set_allocated:zproto.ZOnlineUser.user_id)
}

// optional uint32 server_id = 3;
void ZOnlineUser::clear_server_id() {
  server_id_ = 0u;
}
::google::protobuf::uint32 ZOnlineUser::server_id() const {
  // @@protoc_insertion_point(field_get:zproto.ZOnlineUser.server_id)
  return server_id_;
}
void ZOnlineUser::set_server_id(::google::protobuf::uint32 value) {
  
  server_id_ = value;
  // @@protoc_insertion_point(field_set:zproto.ZOnlineUser.server_id)
}

// optional uint64 conn_id = 4;
void ZOnlineUser::clear_conn_id() {
  conn_id_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 ZOnlineUser::conn_id() const {
  // @@protoc_insertion_point(field_get:zproto.ZOnlineUser.conn_id)
  return conn_id_;
}
void ZOnlineUser::set_conn_id(::google::protobuf::uint64 value) {
  
  conn_id_ = value;
  // @@protoc_insertion_point(field_set:zproto.ZOnlineUser.conn_id)
}

inline const ZOnlineUser* ZOnlineUser::internal_default_instance() {
  return &ZOnlineUser_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ClientOnlineReq::kServerIdFieldNumber;
const int ClientOnlineReq::kConnIdFieldNumber;
const int ClientOnlineReq::kAppIdFieldNumber;
const int ClientOnlineReq::kUserIdFieldNumber;
const int ClientOnlineReq::kStateFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ClientOnlineReq::ClientOnlineReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_presences_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:zproto.ClientOnlineReq)
}

void ClientOnlineReq::InitAsDefaultInstance() {
}

ClientOnlineReq::ClientOnlineReq(const ClientOnlineReq& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:zproto.ClientOnlineReq)
}

void ClientOnlineReq::SharedCtor() {
  user_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&conn_id_, 0, reinterpret_cast<char*>(&state_) -
    reinterpret_cast<char*>(&conn_id_) + sizeof(state_));
  _cached_size_ = 0;
}

ClientOnlineReq::~ClientOnlineReq() {
  // @@protoc_insertion_point(destructor:zproto.ClientOnlineReq)
  SharedDtor();
}

void ClientOnlineReq::SharedDtor() {
  user_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ClientOnlineReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ClientOnlineReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ClientOnlineReq_descriptor_;
}

const ClientOnlineReq& ClientOnlineReq::default_instance() {
  protobuf_InitDefaults_presences_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<ClientOnlineReq> ClientOnlineReq_default_instance_;

ClientOnlineReq* ClientOnlineReq::New(::google::protobuf::Arena* arena) const {
  ClientOnlineReq* n = new ClientOnlineReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ClientOnlineReq::UnsafeMergeFrom(const ClientOnlineReq& from) {
  MergeFrom(from);
}
void ClientOnlineReq::Swap(ClientOnlineReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ClientOnlineReq::InternalSwap(ClientOnlineReq* other) {
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata ClientOnlineReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ClientOnlineReq_descriptor_;
  metadata.reflection = ClientOnlineReq_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ClientOnlineReq

// optional uint32 server_id = 1;
void ClientOnlineReq::clear_server_id() {
  server_id_ = 0u;
}
::google::protobuf::uint32 ClientOnlineReq::server_id() const {
  // @@protoc_insertion_point(field_get:zproto.ClientOnlineReq.server_id)
  return server_id_;
}
void ClientOnlineReq::set_server_id(::google::protobuf::uint32 value) {
  
  server_id_ = value;
  // @@protoc_insertion_point(field_set:zproto.ClientOnlineReq.server_id)
}

// optional uint64 conn_id = 2;
void ClientOnlineReq::clear_conn_id() {
  conn_id_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 ClientOnlineReq::conn_id() const {
  // @@protoc_insertion_point(field_get:zproto.ClientOnlineReq.conn_id)
  return conn_id_;
}
void ClientOnlineReq::set_conn_id(::google::protobuf::uint64 value) {
  
  conn_id_ = value;
  // @@protoc_insertion_point(field_set:zproto.ClientOnlineReq.conn_id)
}

// optional uint32 app_id = 3;
void ClientOnlineReq::clear_app_id() {
  app_id_ = 0u;
}
::google::protobuf::uint32 ClientOnlineReq::app_id() const {
  // @@protoc_insertion_point(field_get:zproto.ClientOnlineReq.app_id)
  return app_id_;
}
void ClientOnlineReq::set_app_id(::google::protobuf::uint32 value) {
  
  app_id_ = value;
  // @@protoc_insertion_point(field_set:zproto.ClientOnlineReq.app_id)
}

// optional string user_id = 4;
void ClientOnlineReq::clear_user_id() {
  user_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ClientOnlineReq::user_id() const {
  // @@protoc_insertion_point(field_get:zproto.ClientOnlineReq.user_id)
  return user_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ClientOnlineReq::set_user_id(const ::std::string& value) {
  
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:zproto.ClientOnlineReq.user_id)
}
void ClientOnlineReq::set_user_id(const char* value) {
  
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:zproto.ClientOnlineReq.user_id)
}
void ClientOnlineReq::set_user_id(const char* value, size_t size) {
  
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:zproto.ClientOnlineReq.user_id)
}
::std::string* ClientOnlineReq::mutable_user_id() {
  
  // @@protoc_insertion_point(field_mutable:zproto.ClientOnlineReq.user_id)
  return user_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ClientOnlineReq::release_user_id() {
  // @@protoc_insertion_point(field_release:zproto.ClientOnlineReq.user_id)
  
  return user_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ClientOnlineReq::set_allocated_user_id(::std::string* user_id) {
  if (user_id != NULL) {
    
  } else {
    
  }
  user_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), user_id);
  // @@protoc_insertion_point(field_set_allocated:zproto.ClientOnlineReq.user_id)
}

// optional uint32 state = 5;
void ClientOnlineReq::clear_state() {
  state_ = 0u;
}
::google::protobuf::uint32 ClientOnlineReq::state() const {
  // @@protoc_insertion_point(field_get:zproto.ClientOnlineReq.state)
  return state_;
}
void ClientOnlineReq::set_state(::google::protobuf::uint32 value) {
  
  state_ = value;
  // @@protoc_insertion_point(field_set:zproto.ClientOnlineReq.state)
}

inline const ClientOnlineReq* ClientOnlineReq::internal_default_instance() {
  return &ClientOnlineReq_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ClientOnlineRsp::kIndexIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ClientOnlineRsp::ClientOnlineRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_presences_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:zproto.ClientOnlineRsp)
}

void ClientOnlineRsp::InitAsDefaultInstance() {
}

ClientOnlineRsp::ClientOnlineRsp(const ClientOnlineRsp& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:zproto.ClientOnlineRsp)
}

void ClientOnlineRsp::SharedCtor() {
  index_id_ = GOOGLE_ULONGLONG(0);
  _cached_size_ = 0;
}

ClientOnlineRsp::~ClientOnlineRsp() {
  // @@protoc_insertion_point(destructor:zproto.ClientOnlineRsp)
  SharedDtor();
}

void ClientOnlineRsp::SharedDtor() {
}

void ClientOnlineRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ClientOnlineRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ClientOnlineRsp_descriptor_;
}

const ClientOnlineRsp& ClientOnlineRsp::default_instance() {
  protobuf_InitDefaults_presences_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<ClientOnlineRsp> ClientOnlineRsp_default_instance_;

ClientOnlineRsp* ClientOnlineRsp::New(::google::protobuf::Arena* arena) const {
  ClientOnlineRsp* n = new ClientOnlineRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ClientOnlineRsp::UnsafeMergeFrom(const ClientOnlineRsp& from) {
  MergeFrom(from);
}
void ClientOnlineRsp::Swap(ClientOnlineRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ClientOnlineRsp::InternalSwap(ClientOnlineRsp* other) {
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata ClientOnlineRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ClientOnlineRsp_descriptor_;
  metadata.reflection = ClientOnlineRsp_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ClientOnlineRsp

// optional uint64 index_id = 1;
void ClientOnlineRsp::clear_index_id() {
  index_id_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 ClientOnlineRsp::index_id() const {
  // @@protoc_insertion_point(field_get:zproto.ClientOnlineRsp.index_id)
  return index_id_;
}
void ClientOnlineRsp::set_index_id(::google::protobuf::uint64 value) {
  
  index_id_ = value;
  // @@protoc_insertion_point(field_set:zproto.ClientOnlineRsp.index_id)
}

inline const ClientOnlineRsp* ClientOnlineRsp::internal_default_instance() {
  return &ClientOnlineRsp_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ClientOfflineReq::kServerIdFieldNumber;
const int ClientOfflineReq::kConnIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ClientOfflineReq::ClientOfflineReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_presences_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:zproto.ClientOfflineReq)
}

void ClientOfflineReq::InitAsDefaultInstance() {
}

ClientOfflineReq::ClientOfflineReq(const ClientOfflineReq& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:zproto.ClientOfflineReq)
}

void ClientOfflineReq::SharedCtor() {
  ::memset(&conn_id_, 0, reinterpret_cast<char*>(&server_id_) -
    reinterpret_cast<char*>(&conn_id_) + sizeof(server_id_));
  _cached_size_ = 0;
}

ClientOfflineReq::~ClientOfflineReq() {
  // @@protoc_insertion_point(destructor:zproto.ClientOfflineReq)
  SharedDtor();
}

void ClientOfflineReq::SharedDtor() {
}

void ClientOfflineReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ClientOfflineReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ClientOfflineReq_descriptor_;
}

const ClientOfflineReq& ClientOfflineReq::default_instance() {
  protobuf_InitDefaults_presences_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<ClientOfflineReq> ClientOfflineReq_default_instance_;

ClientOfflineReq* ClientOfflineReq::New(::google::protobuf::Arena* arena) const {
  ClientOfflineReq* n = new ClientOfflineReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ClientOfflineReq::UnsafeMergeFrom(const ClientOfflineReq& from) {
  MergeFrom(from);
}
void ClientOfflineReq::Swap(ClientOfflineReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ClientOfflineReq::InternalSwap(ClientOfflineReq* other) {
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata ClientOfflineReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ClientOfflineReq_descriptor_;
  metadata.reflection = ClientOfflineReq_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ClientOfflineReq

// optional uint32 server_id = 1;
void ClientOfflineReq::clear_server_id() {
  server_id_ = 0u;
}
::google::protobuf::uint32 ClientOfflineReq::server_id() const {
  // @@protoc_insertion_point(field_get:zproto.ClientOfflineReq.server_id)
  return server_id_;
}
void ClientOfflineReq::set_server_id(::google::protobuf::uint32 value) {
  
  server_id_ = value;
  // @@protoc_insertion_point(field_set:zproto.ClientOfflineReq.server_id)
}

// optional uint64 conn_id = 2;
void ClientOfflineReq::clear_conn_id() {
  conn_id_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 ClientOfflineReq::conn_id() const {
  // @@protoc_insertion_point(field_get:zproto.ClientOfflineReq.conn_id)
  return conn_id_;
}
void ClientOfflineReq::set_conn_id(::google::protobuf::uint64 value) {
  
  conn_id_ = value;
  // @@protoc_insertion_point(field_set:zproto.ClientOfflineReq.conn_id)
}

inline const ClientOfflineReq* ClientOfflineReq::internal_default_instance() {
  return &ClientOfflineReq_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ClientOfflineRsp::kIndexIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ClientOfflineRsp::ClientOfflineRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_presences_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:zproto.ClientOfflineRsp)
}

void ClientOfflineRsp::InitAsDefaultInstance() {
}

ClientOfflineRsp::ClientOfflineRsp(const ClientOfflineRsp& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:zproto.ClientOfflineRsp)
}

void ClientOfflineRsp::SharedCtor() {
  index_id_ = GOOGLE_ULONGLONG(0);
  _cached_size_ = 0;
}

ClientOfflineRsp::~ClientOfflineRsp() {
  // @@protoc_insertion_point(destructor:zproto.ClientOfflineRsp)
  SharedDtor();
}

void ClientOfflineRsp::SharedDtor() {
}

void ClientOfflineRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ClientOfflineRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ClientOfflineRsp_descriptor_;
}

const ClientOfflineRsp& ClientOfflineRsp::default_instance() {
  protobuf_InitDefaults_presences_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<ClientOfflineRsp> ClientOfflineRsp_default_instance_;

ClientOfflineRsp* ClientOfflineRsp::New(::google::protobuf::Arena* arena) const {
  ClientOfflineRsp* n = new ClientOfflineRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ClientOfflineRsp::UnsafeMergeFrom(const ClientOfflineRsp& from) {
  MergeFrom(from);
}
void ClientOfflineRsp::Swap(ClientOfflineRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ClientOfflineRsp::InternalSwap(ClientOfflineRsp* other) {
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata ClientOfflineRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ClientOfflineRsp_descriptor_;
  metadata.reflection = ClientOfflineRsp_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ClientOfflineRsp

// optional uint64 index_id = 1;
void ClientOfflineRsp::clear_index_id() {
  index_id_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 ClientOfflineRsp::index_id() const {
  // @@protoc_insertion_point(field_get:zproto.ClientOfflineRsp.index_id)
  return index_id_;
}
void ClientOfflineRsp::set_index_id(::google::protobuf::uint64 value) {
  
  index_id_ = value;
  // @@protoc_insertion_point(field_set:zproto.ClientOfflineRsp.index_id)
}

inline const ClientOfflineRsp* ClientOfflineRsp::internal_default_instance() {
  return &ClientOfflineRsp_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int QueryOnlineUserReq::kUserIdListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

QueryOnlineUserReq::QueryOnlineUserReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_presences_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:zproto.QueryOnlineUserReq)
}

void QueryOnlineUserReq::InitAsDefaultInstance() {
}

QueryOnlineUserReq::QueryOnlineUserReq(const QueryOnlineUserReq& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:zproto.QueryOnlineUserReq)
}

void QueryOnlineUserReq::SharedCtor() {
  _cached_size_ = 0;
}

QueryOnlineUserReq::~QueryOnlineUserReq() {
  // @@protoc_insertion_point(destructor:zproto.QueryOnlineUserReq)
  SharedDtor();
}

void QueryOnlineUserReq::SharedDtor() {
}

void QueryOnlineUserReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* QueryOnlineUserReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return QueryOnlineUserReq_descriptor_;
}

const QueryOnlineUserReq& QueryOnlineUserReq::default_instance() {
  protobuf_InitDefaults_presences_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<QueryOnlineUserReq> QueryOnlineUserReq_default_instance_;

QueryOnlineUserReq* QueryOnlineUserReq::New(::google::protobuf::Arena* arena) const {
  QueryOnlineUserReq* n = new QueryOnlineUserReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void QueryOnlineUserReq::UnsafeMergeFrom(const QueryOnlineUserReq& from) {
  MergeFrom(from);
}
void QueryOnlineUserReq::Swap(QueryOnlineUserReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void QueryOnlineUserReq::InternalSwap(QueryOnlineUserReq* other) {
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata QueryOnlineUserReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = QueryOnlineUserReq_descriptor_;
  metadata.reflection = QueryOnlineUserReq_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// QueryOnlineUserReq

// repeated .zproto.ZUserID user_id_list = 1;
int QueryOnlineUserReq::user_id_list_size() const {
  return user_id_list_.size();
}
void QueryOnlineUserReq::clear_user_id_list() {
  user_id_list_.Clear();
}
const ::zproto::ZUserID& QueryOnlineUserReq::user_id_list(int index) const {
  // @@protoc_insertion_point(field_get:zproto.QueryOnlineUserReq.user_id_list)
  return user_id_list_.Get(index);
}
::zproto::ZUserID* QueryOnlineUserReq::mutable_user_id_list(int index) {
  // @@protoc_insertion_point(field_mutable:zproto.QueryOnlineUserReq.user_id_list)
  return user_id_list_.Mutable(index);
}
::zproto::ZUserID* QueryOnlineUserReq::add_user_id_list() {
  // @@protoc_insertion_point(field_add:zproto.QueryOnlineUserReq.user_id_list)
  return user_id_list_.Add();
}
::google::protobuf::RepeatedPtrField< ::zproto::ZUserID >*
QueryOnlineUserReq::mutable_user_id_list() {
  // @@protoc_insertion_point(field_mutable_list:zproto.QueryOnlineUserReq.user_id_list)
  return &user_id_list_;
}
const ::google::protobuf::RepeatedPtrField< ::zproto::ZUserID >&
QueryOnlineUserReq::user_id_list() const {
  // @@protoc_insertion_point(field_list:zproto.QueryOnlineUserReq.user_id_list)
  return user_id_list_;
}

inline const QueryOnlineUserReq* QueryOnlineUserReq::internal_default_instance() {
  return &QueryOnlineUserReq_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int QueryOnlineUserRsp::kOnlineUsersFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

QueryOnlineUserRsp::QueryOnlineUserRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_presences_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:zproto.QueryOnlineUserRsp)
}

void QueryOnlineUserRsp::InitAsDefaultInstance() {
}

QueryOnlineUserRsp::QueryOnlineUserRsp(const QueryOnlineUserRsp& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:zproto.QueryOnlineUserRsp)
}

void QueryOnlineUserRsp::SharedCtor() {
  _cached_size_ = 0;
}

QueryOnlineUserRsp::~QueryOnlineUserRsp() {
  // @@protoc_insertion_point(destructor:zproto.QueryOnlineUserRsp)
  SharedDtor();
}

void QueryOnlineUserRsp::SharedDtor() {
}

void QueryOnlineUserRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* QueryOnlineUserRsp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return QueryOnlineUserRsp_descriptor_;
}

const QueryOnlineUserRsp& QueryOnlineUserRsp::default_instance() {
  protobuf_InitDefaults_presences_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<QueryOnlineUserRsp> QueryOnlineUserRsp_default_instance_;

QueryOnlineUserRsp* QueryOnlineUserRsp::New(::google::protobuf::Arena* arena) const {
  QueryOnlineUserRsp* n = new QueryOnlineUserRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void QueryOnlineUserRsp::UnsafeMergeFrom(const QueryOnlineUserRsp& from) {
  MergeFrom(from);
}
void QueryOnlineUserRsp::Swap(QueryOnlineUserRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void QueryOnlineUserRsp::InternalSwap(QueryOnlineUserRsp* other) {
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata QueryOnlineUserRsp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = QueryOnlineUserRsp_descriptor_;
  metadata.reflection = QueryOnlineUserRsp_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// QueryOnlineUserRsp

// repeated .zproto.ZOnlineUser online_users = 1;
int QueryOnlineUserRsp::online_users_size() const {
  return online_users_.size();
}
void QueryOnlineUserRsp::clear_online_users() {
  online_users_.Clear();
}
const ::zproto::ZOnlineUser& QueryOnlineUserRsp::online_users(int index) const {
  // @@protoc_insertion_point(field_get:zproto.QueryOnlineUserRsp.online_users)
  return online_users_.Get(index);
}
::zproto::ZOnlineUser* QueryOnlineUserRsp::mutable_online_users(int index) {
  // @@protoc_insertion_point(field_mutable:zproto.QueryOnlineUserRsp.online_users)
  return online_users_.Mutable(index);
}
::zproto::ZOnlineUser* QueryOnlineUserRsp::add_online_users() {
  // @@protoc_insertion_point(field_add:zproto.QueryOnlineUserRsp.online_users)
  return online_users_.Add();
}
::google::protobuf::RepeatedPtrField< ::zproto::ZOnlineUser >*
QueryOnlineUserRsp::mutable_online_users() {
  // @@protoc_insertion_point(field_mutable_list:zproto.QueryOnlineUserRsp.online_users)
  return &online_users_;
}
const ::google::protobuf::RepeatedPtrField< ::zproto::ZOnlineUser >&
QueryOnlineUserRsp::online_users() const {
  // @@protoc_insertion_point(field_list:zproto.QueryOnlineUserRsp.online_users)
  return online_users_;
}

inline const QueryOnlineUserRsp* QueryOnlineUserRsp::internal_default_instance() {
  return &QueryOnlineUserRsp_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace zproto

// @@protoc_insertion_point(global_scope)
