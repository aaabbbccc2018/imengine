// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: schema.tl.handshake_service.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "schema.tl.handshake_service.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace mtproto {
class TL_req_pqDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TL_req_pq>
     _instance;
} _TL_req_pq_default_instance_;
class TL_req_pq_multiDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TL_req_pq_multi>
     _instance;
} _TL_req_pq_multi_default_instance_;
class TL_req_DH_paramsDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TL_req_DH_params>
     _instance;
} _TL_req_DH_params_default_instance_;
class TL_set_client_DH_paramsDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TL_set_client_DH_params>
     _instance;
} _TL_set_client_DH_params_default_instance_;
class TL_destroy_auth_keyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TL_destroy_auth_key>
     _instance;
} _TL_destroy_auth_key_default_instance_;

namespace protobuf_schema_2etl_2ehandshake_5fservice_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[5];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_req_pq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_req_pq, nonce_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_req_pq_multi, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_req_pq_multi, nonce_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_req_DH_params, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_req_DH_params, nonce_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_req_DH_params, server_nonce_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_req_DH_params, p_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_req_DH_params, q_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_req_DH_params, public_key_fingerprint_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_req_DH_params, encrypted_data_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_set_client_DH_params, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_set_client_DH_params, nonce_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_set_client_DH_params, server_nonce_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_set_client_DH_params, encrypted_data_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_destroy_auth_key, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(TL_req_pq)},
  { 6, -1, sizeof(TL_req_pq_multi)},
  { 12, -1, sizeof(TL_req_DH_params)},
  { 23, -1, sizeof(TL_set_client_DH_params)},
  { 31, -1, sizeof(TL_destroy_auth_key)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_TL_req_pq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TL_req_pq_multi_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TL_req_DH_params_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TL_set_client_DH_params_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TL_destroy_auth_key_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "schema.tl.handshake_service.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 5);
}

}  // namespace
void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  ::mtproto::protobuf_schema_2etl_2ehandshake_2eproto::InitDefaults();
  _TL_req_pq_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TL_req_pq_default_instance_);_TL_req_pq_multi_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TL_req_pq_multi_default_instance_);_TL_req_DH_params_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TL_req_DH_params_default_instance_);_TL_set_client_DH_params_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TL_set_client_DH_params_default_instance_);_TL_destroy_auth_key_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TL_destroy_auth_key_default_instance_);}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
namespace {
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n!schema.tl.handshake_service.proto\022\007mtp"
      "roto\032\031schema.tl.handshake.proto\"\032\n\tTL_re"
      "q_pq\022\r\n\005nonce\030\001 \001(\014\" \n\017TL_req_pq_multi\022\r"
      "\n\005nonce\030\001 \001(\014\"\205\001\n\020TL_req_DH_params\022\r\n\005no"
      "nce\030\001 \001(\014\022\024\n\014server_nonce\030\002 \001(\014\022\t\n\001p\030\003 \001"
      "(\t\022\t\n\001q\030\004 \001(\t\022\036\n\026public_key_fingerprint\030"
      "\005 \001(\003\022\026\n\016encrypted_data\030\006 \001(\t\"V\n\027TL_set_"
      "client_DH_params\022\r\n\005nonce\030\001 \001(\014\022\024\n\014serve"
      "r_nonce\030\002 \001(\014\022\026\n\016encrypted_data\030\003 \001(\t\"\025\n"
      "\023TL_destroy_auth_key2\363\002\n\nRPCAuthKey\022.\n\006r"
      "eq_pq\022\022.mtproto.TL_req_pq\032\016.mtproto.ResP"
      "Q\"\000\022:\n\014req_pq_multi\022\030.mtproto.TL_req_pq_"
      "multi\032\016.mtproto.ResPQ\"\000\022G\n\rreq_DH_params"
      "\022\031.mtproto.TL_req_DH_params\032\031.mtproto.Se"
      "rver_DH_Params\"\000\022`\n\024set_client_DH_params"
      "\022 .mtproto.TL_set_client_DH_params\032$.mtp"
      "roto.Set_client_DH_params_answer\"\000\022N\n\020de"
      "stroy_auth_key\022\034.mtproto.TL_destroy_auth"
      "_key\032\032.mtproto.DestroyAuthKeyRes\"\000B(\n\033co"
      "m.nebulaim.engine.mtprotoB\007MTProtoH\002b\006pr"
      "oto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 804);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "schema.tl.handshake_service.proto", &protobuf_RegisterTypes);
  ::mtproto::protobuf_schema_2etl_2ehandshake_2eproto::AddDescriptors();
}
} // anonymous namespace

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_schema_2etl_2ehandshake_5fservice_2eproto


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TL_req_pq::kNonceFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TL_req_pq::TL_req_pq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_schema_2etl_2ehandshake_5fservice_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.TL_req_pq)
}
TL_req_pq::TL_req_pq(const TL_req_pq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  nonce_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.nonce().size() > 0) {
    nonce_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.nonce_);
  }
  // @@protoc_insertion_point(copy_constructor:mtproto.TL_req_pq)
}

void TL_req_pq::SharedCtor() {
  nonce_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

TL_req_pq::~TL_req_pq() {
  // @@protoc_insertion_point(destructor:mtproto.TL_req_pq)
  SharedDtor();
}

void TL_req_pq::SharedDtor() {
  nonce_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void TL_req_pq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TL_req_pq::descriptor() {
  protobuf_schema_2etl_2ehandshake_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2ehandshake_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TL_req_pq& TL_req_pq::default_instance() {
  protobuf_schema_2etl_2ehandshake_5fservice_2eproto::InitDefaults();
  return *internal_default_instance();
}

TL_req_pq* TL_req_pq::New(::google::protobuf::Arena* arena) const {
  TL_req_pq* n = new TL_req_pq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TL_req_pq::Swap(TL_req_pq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TL_req_pq::InternalSwap(TL_req_pq* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata TL_req_pq::GetMetadata() const {
  protobuf_schema_2etl_2ehandshake_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2ehandshake_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TL_req_pq

// bytes nonce = 1;
void TL_req_pq::clear_nonce() {
  nonce_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& TL_req_pq::nonce() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_req_pq.nonce)
  return nonce_.GetNoArena();
}
void TL_req_pq::set_nonce(const ::std::string& value) {
  
  nonce_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtproto.TL_req_pq.nonce)
}
#if LANG_CXX11
void TL_req_pq::set_nonce(::std::string&& value) {
  
  nonce_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mtproto.TL_req_pq.nonce)
}
#endif
void TL_req_pq::set_nonce(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  nonce_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtproto.TL_req_pq.nonce)
}
void TL_req_pq::set_nonce(const void* value, size_t size) {
  
  nonce_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtproto.TL_req_pq.nonce)
}
::std::string* TL_req_pq::mutable_nonce() {
  
  // @@protoc_insertion_point(field_mutable:mtproto.TL_req_pq.nonce)
  return nonce_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* TL_req_pq::release_nonce() {
  // @@protoc_insertion_point(field_release:mtproto.TL_req_pq.nonce)
  
  return nonce_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TL_req_pq::set_allocated_nonce(::std::string* nonce) {
  if (nonce != NULL) {
    
  } else {
    
  }
  nonce_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), nonce);
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_req_pq.nonce)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TL_req_pq_multi::kNonceFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TL_req_pq_multi::TL_req_pq_multi()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_schema_2etl_2ehandshake_5fservice_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.TL_req_pq_multi)
}
TL_req_pq_multi::TL_req_pq_multi(const TL_req_pq_multi& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  nonce_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.nonce().size() > 0) {
    nonce_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.nonce_);
  }
  // @@protoc_insertion_point(copy_constructor:mtproto.TL_req_pq_multi)
}

void TL_req_pq_multi::SharedCtor() {
  nonce_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

TL_req_pq_multi::~TL_req_pq_multi() {
  // @@protoc_insertion_point(destructor:mtproto.TL_req_pq_multi)
  SharedDtor();
}

void TL_req_pq_multi::SharedDtor() {
  nonce_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void TL_req_pq_multi::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TL_req_pq_multi::descriptor() {
  protobuf_schema_2etl_2ehandshake_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2ehandshake_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TL_req_pq_multi& TL_req_pq_multi::default_instance() {
  protobuf_schema_2etl_2ehandshake_5fservice_2eproto::InitDefaults();
  return *internal_default_instance();
}

TL_req_pq_multi* TL_req_pq_multi::New(::google::protobuf::Arena* arena) const {
  TL_req_pq_multi* n = new TL_req_pq_multi;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TL_req_pq_multi::Swap(TL_req_pq_multi* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TL_req_pq_multi::InternalSwap(TL_req_pq_multi* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata TL_req_pq_multi::GetMetadata() const {
  protobuf_schema_2etl_2ehandshake_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2ehandshake_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TL_req_pq_multi

// bytes nonce = 1;
void TL_req_pq_multi::clear_nonce() {
  nonce_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& TL_req_pq_multi::nonce() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_req_pq_multi.nonce)
  return nonce_.GetNoArena();
}
void TL_req_pq_multi::set_nonce(const ::std::string& value) {
  
  nonce_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtproto.TL_req_pq_multi.nonce)
}
#if LANG_CXX11
void TL_req_pq_multi::set_nonce(::std::string&& value) {
  
  nonce_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mtproto.TL_req_pq_multi.nonce)
}
#endif
void TL_req_pq_multi::set_nonce(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  nonce_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtproto.TL_req_pq_multi.nonce)
}
void TL_req_pq_multi::set_nonce(const void* value, size_t size) {
  
  nonce_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtproto.TL_req_pq_multi.nonce)
}
::std::string* TL_req_pq_multi::mutable_nonce() {
  
  // @@protoc_insertion_point(field_mutable:mtproto.TL_req_pq_multi.nonce)
  return nonce_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* TL_req_pq_multi::release_nonce() {
  // @@protoc_insertion_point(field_release:mtproto.TL_req_pq_multi.nonce)
  
  return nonce_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TL_req_pq_multi::set_allocated_nonce(::std::string* nonce) {
  if (nonce != NULL) {
    
  } else {
    
  }
  nonce_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), nonce);
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_req_pq_multi.nonce)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TL_req_DH_params::kNonceFieldNumber;
const int TL_req_DH_params::kServerNonceFieldNumber;
const int TL_req_DH_params::kPFieldNumber;
const int TL_req_DH_params::kQFieldNumber;
const int TL_req_DH_params::kPublicKeyFingerprintFieldNumber;
const int TL_req_DH_params::kEncryptedDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TL_req_DH_params::TL_req_DH_params()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_schema_2etl_2ehandshake_5fservice_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.TL_req_DH_params)
}
TL_req_DH_params::TL_req_DH_params(const TL_req_DH_params& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  nonce_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.nonce().size() > 0) {
    nonce_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.nonce_);
  }
  server_nonce_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.server_nonce().size() > 0) {
    server_nonce_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.server_nonce_);
  }
  p_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.p().size() > 0) {
    p_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.p_);
  }
  q_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.q().size() > 0) {
    q_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.q_);
  }
  encrypted_data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.encrypted_data().size() > 0) {
    encrypted_data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.encrypted_data_);
  }
  public_key_fingerprint_ = from.public_key_fingerprint_;
  // @@protoc_insertion_point(copy_constructor:mtproto.TL_req_DH_params)
}

void TL_req_DH_params::SharedCtor() {
  nonce_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  server_nonce_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  p_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  q_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  encrypted_data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  public_key_fingerprint_ = GOOGLE_LONGLONG(0);
  _cached_size_ = 0;
}

TL_req_DH_params::~TL_req_DH_params() {
  // @@protoc_insertion_point(destructor:mtproto.TL_req_DH_params)
  SharedDtor();
}

void TL_req_DH_params::SharedDtor() {
  nonce_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  server_nonce_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  p_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  q_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  encrypted_data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void TL_req_DH_params::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TL_req_DH_params::descriptor() {
  protobuf_schema_2etl_2ehandshake_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2ehandshake_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TL_req_DH_params& TL_req_DH_params::default_instance() {
  protobuf_schema_2etl_2ehandshake_5fservice_2eproto::InitDefaults();
  return *internal_default_instance();
}

TL_req_DH_params* TL_req_DH_params::New(::google::protobuf::Arena* arena) const {
  TL_req_DH_params* n = new TL_req_DH_params;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TL_req_DH_params::Swap(TL_req_DH_params* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TL_req_DH_params::InternalSwap(TL_req_DH_params* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata TL_req_DH_params::GetMetadata() const {
  protobuf_schema_2etl_2ehandshake_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2ehandshake_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TL_req_DH_params

// bytes nonce = 1;
void TL_req_DH_params::clear_nonce() {
  nonce_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& TL_req_DH_params::nonce() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_req_DH_params.nonce)
  return nonce_.GetNoArena();
}
void TL_req_DH_params::set_nonce(const ::std::string& value) {
  
  nonce_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtproto.TL_req_DH_params.nonce)
}
#if LANG_CXX11
void TL_req_DH_params::set_nonce(::std::string&& value) {
  
  nonce_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mtproto.TL_req_DH_params.nonce)
}
#endif
void TL_req_DH_params::set_nonce(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  nonce_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtproto.TL_req_DH_params.nonce)
}
void TL_req_DH_params::set_nonce(const void* value, size_t size) {
  
  nonce_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtproto.TL_req_DH_params.nonce)
}
::std::string* TL_req_DH_params::mutable_nonce() {
  
  // @@protoc_insertion_point(field_mutable:mtproto.TL_req_DH_params.nonce)
  return nonce_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* TL_req_DH_params::release_nonce() {
  // @@protoc_insertion_point(field_release:mtproto.TL_req_DH_params.nonce)
  
  return nonce_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TL_req_DH_params::set_allocated_nonce(::std::string* nonce) {
  if (nonce != NULL) {
    
  } else {
    
  }
  nonce_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), nonce);
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_req_DH_params.nonce)
}

// bytes server_nonce = 2;
void TL_req_DH_params::clear_server_nonce() {
  server_nonce_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& TL_req_DH_params::server_nonce() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_req_DH_params.server_nonce)
  return server_nonce_.GetNoArena();
}
void TL_req_DH_params::set_server_nonce(const ::std::string& value) {
  
  server_nonce_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtproto.TL_req_DH_params.server_nonce)
}
#if LANG_CXX11
void TL_req_DH_params::set_server_nonce(::std::string&& value) {
  
  server_nonce_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mtproto.TL_req_DH_params.server_nonce)
}
#endif
void TL_req_DH_params::set_server_nonce(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  server_nonce_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtproto.TL_req_DH_params.server_nonce)
}
void TL_req_DH_params::set_server_nonce(const void* value, size_t size) {
  
  server_nonce_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtproto.TL_req_DH_params.server_nonce)
}
::std::string* TL_req_DH_params::mutable_server_nonce() {
  
  // @@protoc_insertion_point(field_mutable:mtproto.TL_req_DH_params.server_nonce)
  return server_nonce_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* TL_req_DH_params::release_server_nonce() {
  // @@protoc_insertion_point(field_release:mtproto.TL_req_DH_params.server_nonce)
  
  return server_nonce_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TL_req_DH_params::set_allocated_server_nonce(::std::string* server_nonce) {
  if (server_nonce != NULL) {
    
  } else {
    
  }
  server_nonce_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), server_nonce);
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_req_DH_params.server_nonce)
}

// string p = 3;
void TL_req_DH_params::clear_p() {
  p_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& TL_req_DH_params::p() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_req_DH_params.p)
  return p_.GetNoArena();
}
void TL_req_DH_params::set_p(const ::std::string& value) {
  
  p_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtproto.TL_req_DH_params.p)
}
#if LANG_CXX11
void TL_req_DH_params::set_p(::std::string&& value) {
  
  p_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mtproto.TL_req_DH_params.p)
}
#endif
void TL_req_DH_params::set_p(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  p_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtproto.TL_req_DH_params.p)
}
void TL_req_DH_params::set_p(const char* value, size_t size) {
  
  p_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtproto.TL_req_DH_params.p)
}
::std::string* TL_req_DH_params::mutable_p() {
  
  // @@protoc_insertion_point(field_mutable:mtproto.TL_req_DH_params.p)
  return p_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* TL_req_DH_params::release_p() {
  // @@protoc_insertion_point(field_release:mtproto.TL_req_DH_params.p)
  
  return p_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TL_req_DH_params::set_allocated_p(::std::string* p) {
  if (p != NULL) {
    
  } else {
    
  }
  p_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), p);
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_req_DH_params.p)
}

// string q = 4;
void TL_req_DH_params::clear_q() {
  q_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& TL_req_DH_params::q() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_req_DH_params.q)
  return q_.GetNoArena();
}
void TL_req_DH_params::set_q(const ::std::string& value) {
  
  q_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtproto.TL_req_DH_params.q)
}
#if LANG_CXX11
void TL_req_DH_params::set_q(::std::string&& value) {
  
  q_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mtproto.TL_req_DH_params.q)
}
#endif
void TL_req_DH_params::set_q(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  q_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtproto.TL_req_DH_params.q)
}
void TL_req_DH_params::set_q(const char* value, size_t size) {
  
  q_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtproto.TL_req_DH_params.q)
}
::std::string* TL_req_DH_params::mutable_q() {
  
  // @@protoc_insertion_point(field_mutable:mtproto.TL_req_DH_params.q)
  return q_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* TL_req_DH_params::release_q() {
  // @@protoc_insertion_point(field_release:mtproto.TL_req_DH_params.q)
  
  return q_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TL_req_DH_params::set_allocated_q(::std::string* q) {
  if (q != NULL) {
    
  } else {
    
  }
  q_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), q);
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_req_DH_params.q)
}

// int64 public_key_fingerprint = 5;
void TL_req_DH_params::clear_public_key_fingerprint() {
  public_key_fingerprint_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 TL_req_DH_params::public_key_fingerprint() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_req_DH_params.public_key_fingerprint)
  return public_key_fingerprint_;
}
void TL_req_DH_params::set_public_key_fingerprint(::google::protobuf::int64 value) {
  
  public_key_fingerprint_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_req_DH_params.public_key_fingerprint)
}

// string encrypted_data = 6;
void TL_req_DH_params::clear_encrypted_data() {
  encrypted_data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& TL_req_DH_params::encrypted_data() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_req_DH_params.encrypted_data)
  return encrypted_data_.GetNoArena();
}
void TL_req_DH_params::set_encrypted_data(const ::std::string& value) {
  
  encrypted_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtproto.TL_req_DH_params.encrypted_data)
}
#if LANG_CXX11
void TL_req_DH_params::set_encrypted_data(::std::string&& value) {
  
  encrypted_data_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mtproto.TL_req_DH_params.encrypted_data)
}
#endif
void TL_req_DH_params::set_encrypted_data(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  encrypted_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtproto.TL_req_DH_params.encrypted_data)
}
void TL_req_DH_params::set_encrypted_data(const char* value, size_t size) {
  
  encrypted_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtproto.TL_req_DH_params.encrypted_data)
}
::std::string* TL_req_DH_params::mutable_encrypted_data() {
  
  // @@protoc_insertion_point(field_mutable:mtproto.TL_req_DH_params.encrypted_data)
  return encrypted_data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* TL_req_DH_params::release_encrypted_data() {
  // @@protoc_insertion_point(field_release:mtproto.TL_req_DH_params.encrypted_data)
  
  return encrypted_data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TL_req_DH_params::set_allocated_encrypted_data(::std::string* encrypted_data) {
  if (encrypted_data != NULL) {
    
  } else {
    
  }
  encrypted_data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), encrypted_data);
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_req_DH_params.encrypted_data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TL_set_client_DH_params::kNonceFieldNumber;
const int TL_set_client_DH_params::kServerNonceFieldNumber;
const int TL_set_client_DH_params::kEncryptedDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TL_set_client_DH_params::TL_set_client_DH_params()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_schema_2etl_2ehandshake_5fservice_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.TL_set_client_DH_params)
}
TL_set_client_DH_params::TL_set_client_DH_params(const TL_set_client_DH_params& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  nonce_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.nonce().size() > 0) {
    nonce_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.nonce_);
  }
  server_nonce_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.server_nonce().size() > 0) {
    server_nonce_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.server_nonce_);
  }
  encrypted_data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.encrypted_data().size() > 0) {
    encrypted_data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.encrypted_data_);
  }
  // @@protoc_insertion_point(copy_constructor:mtproto.TL_set_client_DH_params)
}

void TL_set_client_DH_params::SharedCtor() {
  nonce_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  server_nonce_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  encrypted_data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

TL_set_client_DH_params::~TL_set_client_DH_params() {
  // @@protoc_insertion_point(destructor:mtproto.TL_set_client_DH_params)
  SharedDtor();
}

void TL_set_client_DH_params::SharedDtor() {
  nonce_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  server_nonce_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  encrypted_data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void TL_set_client_DH_params::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TL_set_client_DH_params::descriptor() {
  protobuf_schema_2etl_2ehandshake_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2ehandshake_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TL_set_client_DH_params& TL_set_client_DH_params::default_instance() {
  protobuf_schema_2etl_2ehandshake_5fservice_2eproto::InitDefaults();
  return *internal_default_instance();
}

TL_set_client_DH_params* TL_set_client_DH_params::New(::google::protobuf::Arena* arena) const {
  TL_set_client_DH_params* n = new TL_set_client_DH_params;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TL_set_client_DH_params::Swap(TL_set_client_DH_params* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TL_set_client_DH_params::InternalSwap(TL_set_client_DH_params* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata TL_set_client_DH_params::GetMetadata() const {
  protobuf_schema_2etl_2ehandshake_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2ehandshake_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TL_set_client_DH_params

// bytes nonce = 1;
void TL_set_client_DH_params::clear_nonce() {
  nonce_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& TL_set_client_DH_params::nonce() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_set_client_DH_params.nonce)
  return nonce_.GetNoArena();
}
void TL_set_client_DH_params::set_nonce(const ::std::string& value) {
  
  nonce_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtproto.TL_set_client_DH_params.nonce)
}
#if LANG_CXX11
void TL_set_client_DH_params::set_nonce(::std::string&& value) {
  
  nonce_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mtproto.TL_set_client_DH_params.nonce)
}
#endif
void TL_set_client_DH_params::set_nonce(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  nonce_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtproto.TL_set_client_DH_params.nonce)
}
void TL_set_client_DH_params::set_nonce(const void* value, size_t size) {
  
  nonce_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtproto.TL_set_client_DH_params.nonce)
}
::std::string* TL_set_client_DH_params::mutable_nonce() {
  
  // @@protoc_insertion_point(field_mutable:mtproto.TL_set_client_DH_params.nonce)
  return nonce_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* TL_set_client_DH_params::release_nonce() {
  // @@protoc_insertion_point(field_release:mtproto.TL_set_client_DH_params.nonce)
  
  return nonce_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TL_set_client_DH_params::set_allocated_nonce(::std::string* nonce) {
  if (nonce != NULL) {
    
  } else {
    
  }
  nonce_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), nonce);
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_set_client_DH_params.nonce)
}

// bytes server_nonce = 2;
void TL_set_client_DH_params::clear_server_nonce() {
  server_nonce_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& TL_set_client_DH_params::server_nonce() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_set_client_DH_params.server_nonce)
  return server_nonce_.GetNoArena();
}
void TL_set_client_DH_params::set_server_nonce(const ::std::string& value) {
  
  server_nonce_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtproto.TL_set_client_DH_params.server_nonce)
}
#if LANG_CXX11
void TL_set_client_DH_params::set_server_nonce(::std::string&& value) {
  
  server_nonce_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mtproto.TL_set_client_DH_params.server_nonce)
}
#endif
void TL_set_client_DH_params::set_server_nonce(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  server_nonce_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtproto.TL_set_client_DH_params.server_nonce)
}
void TL_set_client_DH_params::set_server_nonce(const void* value, size_t size) {
  
  server_nonce_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtproto.TL_set_client_DH_params.server_nonce)
}
::std::string* TL_set_client_DH_params::mutable_server_nonce() {
  
  // @@protoc_insertion_point(field_mutable:mtproto.TL_set_client_DH_params.server_nonce)
  return server_nonce_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* TL_set_client_DH_params::release_server_nonce() {
  // @@protoc_insertion_point(field_release:mtproto.TL_set_client_DH_params.server_nonce)
  
  return server_nonce_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TL_set_client_DH_params::set_allocated_server_nonce(::std::string* server_nonce) {
  if (server_nonce != NULL) {
    
  } else {
    
  }
  server_nonce_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), server_nonce);
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_set_client_DH_params.server_nonce)
}

// string encrypted_data = 3;
void TL_set_client_DH_params::clear_encrypted_data() {
  encrypted_data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& TL_set_client_DH_params::encrypted_data() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_set_client_DH_params.encrypted_data)
  return encrypted_data_.GetNoArena();
}
void TL_set_client_DH_params::set_encrypted_data(const ::std::string& value) {
  
  encrypted_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtproto.TL_set_client_DH_params.encrypted_data)
}
#if LANG_CXX11
void TL_set_client_DH_params::set_encrypted_data(::std::string&& value) {
  
  encrypted_data_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mtproto.TL_set_client_DH_params.encrypted_data)
}
#endif
void TL_set_client_DH_params::set_encrypted_data(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  encrypted_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtproto.TL_set_client_DH_params.encrypted_data)
}
void TL_set_client_DH_params::set_encrypted_data(const char* value, size_t size) {
  
  encrypted_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtproto.TL_set_client_DH_params.encrypted_data)
}
::std::string* TL_set_client_DH_params::mutable_encrypted_data() {
  
  // @@protoc_insertion_point(field_mutable:mtproto.TL_set_client_DH_params.encrypted_data)
  return encrypted_data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* TL_set_client_DH_params::release_encrypted_data() {
  // @@protoc_insertion_point(field_release:mtproto.TL_set_client_DH_params.encrypted_data)
  
  return encrypted_data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TL_set_client_DH_params::set_allocated_encrypted_data(::std::string* encrypted_data) {
  if (encrypted_data != NULL) {
    
  } else {
    
  }
  encrypted_data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), encrypted_data);
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_set_client_DH_params.encrypted_data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TL_destroy_auth_key::TL_destroy_auth_key()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_schema_2etl_2ehandshake_5fservice_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.TL_destroy_auth_key)
}
TL_destroy_auth_key::TL_destroy_auth_key(const TL_destroy_auth_key& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:mtproto.TL_destroy_auth_key)
}

void TL_destroy_auth_key::SharedCtor() {
  _cached_size_ = 0;
}

TL_destroy_auth_key::~TL_destroy_auth_key() {
  // @@protoc_insertion_point(destructor:mtproto.TL_destroy_auth_key)
  SharedDtor();
}

void TL_destroy_auth_key::SharedDtor() {
}

void TL_destroy_auth_key::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TL_destroy_auth_key::descriptor() {
  protobuf_schema_2etl_2ehandshake_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2ehandshake_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TL_destroy_auth_key& TL_destroy_auth_key::default_instance() {
  protobuf_schema_2etl_2ehandshake_5fservice_2eproto::InitDefaults();
  return *internal_default_instance();
}

TL_destroy_auth_key* TL_destroy_auth_key::New(::google::protobuf::Arena* arena) const {
  TL_destroy_auth_key* n = new TL_destroy_auth_key;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TL_destroy_auth_key::Swap(TL_destroy_auth_key* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TL_destroy_auth_key::InternalSwap(TL_destroy_auth_key* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata TL_destroy_auth_key::GetMetadata() const {
  protobuf_schema_2etl_2ehandshake_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2ehandshake_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TL_destroy_auth_key

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace mtproto

// @@protoc_insertion_point(global_scope)
