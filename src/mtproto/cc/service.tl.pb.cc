// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: service.tl.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "service.tl.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace mtproto {
class ConnectToServer_DataDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ConnectToServer_Data>
     _instance;
} _ConnectToServer_Data_default_instance_;
class ConnectToServerDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ConnectToServer>
     _instance;
} _ConnectToServer_default_instance_;
class TL_sync_connectToSessionServerDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TL_sync_connectToSessionServer>
     _instance;
} _TL_sync_connectToSessionServer_default_instance_;
class ServerConnected_DataDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ServerConnected_Data>
     _instance;
} _ServerConnected_Data_default_instance_;
class ServerConnectedDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ServerConnected>
     _instance;
} _ServerConnected_default_instance_;
class TL_sync_sessionServerConnectedDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TL_sync_sessionServerConnected>
     _instance;
} _TL_sync_sessionServerConnected_default_instance_;
class PushData_DataDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<PushData_Data>
     _instance;
} _PushData_Data_default_instance_;
class PushDataDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<PushData>
     _instance;
} _PushData_default_instance_;
class TL_sync_pushUpdatesDataDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TL_sync_pushUpdatesData>
     _instance;
} _TL_sync_pushUpdatesData_default_instance_;
class TL_sync_pushRpcResultDataDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TL_sync_pushRpcResultData>
     _instance;
} _TL_sync_pushRpcResultData_default_instance_;
class Int32_DataDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<Int32_Data>
     _instance;
} _Int32_Data_default_instance_;
class Int32DefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<Int32>
     _instance;
} _Int32_default_instance_;
class TL_int32DefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TL_int32>
     _instance;
} _TL_int32_default_instance_;
class Int64_DataDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<Int64_Data>
     _instance;
} _Int64_Data_default_instance_;
class Int64DefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<Int64>
     _instance;
} _Int64_default_instance_;
class TL_longDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TL_long>
     _instance;
} _TL_long_default_instance_;
class AuthKeyInfo_DataDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<AuthKeyInfo_Data>
     _instance;
} _AuthKeyInfo_Data_default_instance_;
class AuthKeyInfoDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<AuthKeyInfo>
     _instance;
} _AuthKeyInfo_default_instance_;
class TL_authKeyInfoDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TL_authKeyInfo>
     _instance;
} _TL_authKeyInfo_default_instance_;
class ClientSession_DataDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ClientSession_Data>
     _instance;
} _ClientSession_Data_default_instance_;
class ClientSessionDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ClientSession>
     _instance;
} _ClientSession_default_instance_;
class TL_clientSessionInfoDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TL_clientSessionInfo>
     _instance;
} _TL_clientSessionInfo_default_instance_;
class TL_session_setClientSessionInfoDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TL_session_setClientSessionInfo>
     _instance;
} _TL_session_setClientSessionInfo_default_instance_;
class TL_session_getAuthorizationsDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TL_session_getAuthorizations>
     _instance;
} _TL_session_getAuthorizations_default_instance_;
class TL_session_resetAuthorizationDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TL_session_resetAuthorization>
     _instance;
} _TL_session_resetAuthorization_default_instance_;
class TL_session_getLayerDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TL_session_getLayer>
     _instance;
} _TL_session_getLayer_default_instance_;
class TL_session_getUserIdDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TL_session_getUserId>
     _instance;
} _TL_session_getUserId_default_instance_;
class TL_session_queryAuthKeyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TL_session_queryAuthKey>
     _instance;
} _TL_session_queryAuthKey_default_instance_;
class TL_session_setAuthKeyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TL_session_setAuthKey>
     _instance;
} _TL_session_setAuthKey_default_instance_;
class TL_session_bindAuthKeyUserDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TL_session_bindAuthKeyUser>
     _instance;
} _TL_session_bindAuthKeyUser_default_instance_;
class TL_session_unbindAuthKeyUserDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TL_session_unbindAuthKeyUser>
     _instance;
} _TL_session_unbindAuthKeyUser_default_instance_;
class TL_sync_syncUpdatesDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TL_sync_syncUpdates>
     _instance;
} _TL_sync_syncUpdates_default_instance_;
class TL_sync_pushUpdatesDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TL_sync_pushUpdates>
     _instance;
} _TL_sync_pushUpdates_default_instance_;
class TL_sync_syncChannelUpdatesDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TL_sync_syncChannelUpdates>
     _instance;
} _TL_sync_syncChannelUpdates_default_instance_;
class TL_sync_pushChannelUpdatesDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TL_sync_pushChannelUpdates>
     _instance;
} _TL_sync_pushChannelUpdates_default_instance_;
class TL_sync_pushRpcResultDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TL_sync_pushRpcResult>
     _instance;
} _TL_sync_pushRpcResult_default_instance_;
class TL_sync_getStateDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TL_sync_getState>
     _instance;
} _TL_sync_getState_default_instance_;
class TL_sync_getDifferenceDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TL_sync_getDifference>
     _instance;
} _TL_sync_getDifference_default_instance_;
class TL_sync_getChannelDifferenceDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TL_sync_getChannelDifference>
     _instance;
} _TL_sync_getChannelDifference_default_instance_;

namespace protobuf_service_2etl_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[39];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ConnectToServer_Data, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ConnectToServer_Data, sync_server_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ConnectToServer, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ConnectToServer, constructor_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ConnectToServer, data2_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_sync_connectToSessionServer, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_sync_connectToSessionServer, data2_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerConnected_Data, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerConnected_Data, session_server_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerConnected_Data, server_name_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerConnected, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerConnected, constructor_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerConnected, data2_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_sync_sessionServerConnected, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_sync_sessionServerConnected, data2_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PushData_Data, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PushData_Data, auth_key_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PushData_Data, updates_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PushData_Data, client_req_msg_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PushData_Data, result_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PushData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PushData, constructor_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PushData, data2_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_sync_pushUpdatesData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_sync_pushUpdatesData, data2_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_sync_pushRpcResultData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_sync_pushRpcResultData, data2_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Int32_Data, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Int32_Data, v_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Int32, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Int32, constructor_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Int32, data2_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_int32, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_int32, data2_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Int64_Data, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Int64_Data, v_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Int64, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Int64, constructor_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Int64, data2_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_long, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_long, data2_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AuthKeyInfo_Data, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AuthKeyInfo_Data, auth_key_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AuthKeyInfo_Data, auth_key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AuthKeyInfo_Data, future_salt_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AuthKeyInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AuthKeyInfo, constructor_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AuthKeyInfo, data2_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_authKeyInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_authKeyInfo, data2_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClientSession_Data, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClientSession_Data, auth_key_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClientSession_Data, ip_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClientSession_Data, layer_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClientSession_Data, api_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClientSession_Data, device_model_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClientSession_Data, system_version_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClientSession_Data, app_version_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClientSession_Data, system_lang_code_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClientSession_Data, lang_pack_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClientSession_Data, lang_code_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClientSession, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClientSession, constructor_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClientSession, data2_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_clientSessionInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_clientSessionInfo, data2_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_session_setClientSessionInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_session_setClientSessionInfo, session_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_session_getAuthorizations, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_session_getAuthorizations, user_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_session_resetAuthorization, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_session_resetAuthorization, user_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_session_resetAuthorization, hash_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_session_getLayer, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_session_getLayer, auth_key_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_session_getUserId, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_session_getUserId, auth_key_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_session_queryAuthKey, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_session_queryAuthKey, auth_key_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_session_setAuthKey, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_session_setAuthKey, auth_key_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_session_bindAuthKeyUser, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_session_bindAuthKeyUser, auth_key_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_session_bindAuthKeyUser, user_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_session_unbindAuthKeyUser, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_session_unbindAuthKeyUser, auth_key_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_session_unbindAuthKeyUser, user_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_sync_syncUpdates, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_sync_syncUpdates, user_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_sync_syncUpdates, auth_key_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_sync_syncUpdates, server_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_sync_syncUpdates, updates_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_sync_pushUpdates, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_sync_pushUpdates, user_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_sync_pushUpdates, updates_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_sync_syncChannelUpdates, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_sync_syncChannelUpdates, channel_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_sync_syncChannelUpdates, user_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_sync_syncChannelUpdates, auth_key_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_sync_syncChannelUpdates, server_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_sync_syncChannelUpdates, updates_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_sync_pushChannelUpdates, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_sync_pushChannelUpdates, channel_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_sync_pushChannelUpdates, user_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_sync_pushChannelUpdates, updates_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_sync_pushRpcResult, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_sync_pushRpcResult, server_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_sync_pushRpcResult, auth_key_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_sync_pushRpcResult, req_msg_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_sync_pushRpcResult, result_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_sync_getState, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_sync_getState, auth_key_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_sync_getState, user_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_sync_getDifference, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_sync_getDifference, auth_key_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_sync_getDifference, user_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_sync_getDifference, pts_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_sync_getDifference, pts_total_limit_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_sync_getDifference, date_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_sync_getDifference, qts_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_sync_getChannelDifference, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_sync_getChannelDifference, auth_key_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_sync_getChannelDifference, user_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_sync_getChannelDifference, force_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_sync_getChannelDifference, channel_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_sync_getChannelDifference, filter_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_sync_getChannelDifference, pts_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_sync_getChannelDifference, limit_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(ConnectToServer_Data)},
  { 6, -1, sizeof(ConnectToServer)},
  { 13, -1, sizeof(TL_sync_connectToSessionServer)},
  { 19, -1, sizeof(ServerConnected_Data)},
  { 26, -1, sizeof(ServerConnected)},
  { 33, -1, sizeof(TL_sync_sessionServerConnected)},
  { 39, -1, sizeof(PushData_Data)},
  { 48, -1, sizeof(PushData)},
  { 55, -1, sizeof(TL_sync_pushUpdatesData)},
  { 61, -1, sizeof(TL_sync_pushRpcResultData)},
  { 67, -1, sizeof(Int32_Data)},
  { 73, -1, sizeof(Int32)},
  { 80, -1, sizeof(TL_int32)},
  { 86, -1, sizeof(Int64_Data)},
  { 92, -1, sizeof(Int64)},
  { 99, -1, sizeof(TL_long)},
  { 105, -1, sizeof(AuthKeyInfo_Data)},
  { 113, -1, sizeof(AuthKeyInfo)},
  { 120, -1, sizeof(TL_authKeyInfo)},
  { 126, -1, sizeof(ClientSession_Data)},
  { 141, -1, sizeof(ClientSession)},
  { 148, -1, sizeof(TL_clientSessionInfo)},
  { 154, -1, sizeof(TL_session_setClientSessionInfo)},
  { 160, -1, sizeof(TL_session_getAuthorizations)},
  { 166, -1, sizeof(TL_session_resetAuthorization)},
  { 173, -1, sizeof(TL_session_getLayer)},
  { 179, -1, sizeof(TL_session_getUserId)},
  { 185, -1, sizeof(TL_session_queryAuthKey)},
  { 191, -1, sizeof(TL_session_setAuthKey)},
  { 197, -1, sizeof(TL_session_bindAuthKeyUser)},
  { 204, -1, sizeof(TL_session_unbindAuthKeyUser)},
  { 211, -1, sizeof(TL_sync_syncUpdates)},
  { 220, -1, sizeof(TL_sync_pushUpdates)},
  { 227, -1, sizeof(TL_sync_syncChannelUpdates)},
  { 237, -1, sizeof(TL_sync_pushChannelUpdates)},
  { 245, -1, sizeof(TL_sync_pushRpcResult)},
  { 254, -1, sizeof(TL_sync_getState)},
  { 261, -1, sizeof(TL_sync_getDifference)},
  { 272, -1, sizeof(TL_sync_getChannelDifference)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_ConnectToServer_Data_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ConnectToServer_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TL_sync_connectToSessionServer_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ServerConnected_Data_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ServerConnected_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TL_sync_sessionServerConnected_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_PushData_Data_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_PushData_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TL_sync_pushUpdatesData_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TL_sync_pushRpcResultData_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Int32_Data_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Int32_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TL_int32_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Int64_Data_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Int64_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TL_long_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_AuthKeyInfo_Data_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_AuthKeyInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TL_authKeyInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ClientSession_Data_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ClientSession_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TL_clientSessionInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TL_session_setClientSessionInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TL_session_getAuthorizations_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TL_session_resetAuthorization_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TL_session_getLayer_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TL_session_getUserId_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TL_session_queryAuthKey_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TL_session_setAuthKey_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TL_session_bindAuthKeyUser_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TL_session_unbindAuthKeyUser_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TL_sync_syncUpdates_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TL_sync_pushUpdates_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TL_sync_syncChannelUpdates_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TL_sync_pushChannelUpdates_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TL_sync_pushRpcResult_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TL_sync_getState_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TL_sync_getDifference_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TL_sync_getChannelDifference_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "service.tl.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 39);
}

}  // namespace
void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  ::mtproto::protobuf_schema_2etl_2ecrc32_2eproto::InitDefaults();
  ::mtproto::protobuf_schema_2etl_2ecore_5ftypes_2eproto::InitDefaults();
  ::mtproto::protobuf_schema_2etl_2etransport_2eproto::InitDefaults();
  ::mtproto::protobuf_schema_2etl_2esync_2eproto::InitDefaults();
  _ConnectToServer_Data_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ConnectToServer_Data_default_instance_);_ConnectToServer_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ConnectToServer_default_instance_);_TL_sync_connectToSessionServer_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TL_sync_connectToSessionServer_default_instance_);_ServerConnected_Data_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ServerConnected_Data_default_instance_);_ServerConnected_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ServerConnected_default_instance_);_TL_sync_sessionServerConnected_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TL_sync_sessionServerConnected_default_instance_);_PushData_Data_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_PushData_Data_default_instance_);_PushData_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_PushData_default_instance_);_TL_sync_pushUpdatesData_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TL_sync_pushUpdatesData_default_instance_);_TL_sync_pushRpcResultData_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TL_sync_pushRpcResultData_default_instance_);_Int32_Data_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_Int32_Data_default_instance_);_Int32_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_Int32_default_instance_);_TL_int32_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TL_int32_default_instance_);_Int64_Data_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_Int64_Data_default_instance_);_Int64_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_Int64_default_instance_);_TL_long_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TL_long_default_instance_);_AuthKeyInfo_Data_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_AuthKeyInfo_Data_default_instance_);_AuthKeyInfo_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_AuthKeyInfo_default_instance_);_TL_authKeyInfo_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TL_authKeyInfo_default_instance_);_ClientSession_Data_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ClientSession_Data_default_instance_);_ClientSession_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ClientSession_default_instance_);_TL_clientSessionInfo_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TL_clientSessionInfo_default_instance_);_TL_session_setClientSessionInfo_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TL_session_setClientSessionInfo_default_instance_);_TL_session_getAuthorizations_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TL_session_getAuthorizations_default_instance_);_TL_session_resetAuthorization_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TL_session_resetAuthorization_default_instance_);_TL_session_getLayer_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TL_session_getLayer_default_instance_);_TL_session_getUserId_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TL_session_getUserId_default_instance_);_TL_session_queryAuthKey_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TL_session_queryAuthKey_default_instance_);_TL_session_setAuthKey_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TL_session_setAuthKey_default_instance_);_TL_session_bindAuthKeyUser_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TL_session_bindAuthKeyUser_default_instance_);_TL_session_unbindAuthKeyUser_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TL_session_unbindAuthKeyUser_default_instance_);_TL_sync_syncUpdates_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TL_sync_syncUpdates_default_instance_);_TL_sync_pushUpdates_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TL_sync_pushUpdates_default_instance_);_TL_sync_syncChannelUpdates_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TL_sync_syncChannelUpdates_default_instance_);_TL_sync_pushChannelUpdates_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TL_sync_pushChannelUpdates_default_instance_);_TL_sync_pushRpcResult_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TL_sync_pushRpcResult_default_instance_);_TL_sync_getState_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TL_sync_getState_default_instance_);_TL_sync_getDifference_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TL_sync_getDifference_default_instance_);_TL_sync_getChannelDifference_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TL_sync_getChannelDifference_default_instance_);_ConnectToServer_default_instance_._instance.get_mutable()->data2_ = const_cast< ::mtproto::ConnectToServer_Data*>(
      ::mtproto::ConnectToServer_Data::internal_default_instance());
  _TL_sync_connectToSessionServer_default_instance_._instance.get_mutable()->data2_ = const_cast< ::mtproto::ConnectToServer_Data*>(
      ::mtproto::ConnectToServer_Data::internal_default_instance());
  _ServerConnected_default_instance_._instance.get_mutable()->data2_ = const_cast< ::mtproto::ServerConnected_Data*>(
      ::mtproto::ServerConnected_Data::internal_default_instance());
  _TL_sync_sessionServerConnected_default_instance_._instance.get_mutable()->data2_ = const_cast< ::mtproto::ServerConnected_Data*>(
      ::mtproto::ServerConnected_Data::internal_default_instance());
  _PushData_Data_default_instance_._instance.get_mutable()->updates_ = const_cast< ::mtproto::Updates*>(
      ::mtproto::Updates::internal_default_instance());
  _PushData_default_instance_._instance.get_mutable()->data2_ = const_cast< ::mtproto::PushData_Data*>(
      ::mtproto::PushData_Data::internal_default_instance());
  _TL_sync_pushUpdatesData_default_instance_._instance.get_mutable()->data2_ = const_cast< ::mtproto::PushData_Data*>(
      ::mtproto::PushData_Data::internal_default_instance());
  _TL_sync_pushRpcResultData_default_instance_._instance.get_mutable()->data2_ = const_cast< ::mtproto::PushData_Data*>(
      ::mtproto::PushData_Data::internal_default_instance());
  _Int32_default_instance_._instance.get_mutable()->data2_ = const_cast< ::mtproto::Int32_Data*>(
      ::mtproto::Int32_Data::internal_default_instance());
  _TL_int32_default_instance_._instance.get_mutable()->data2_ = const_cast< ::mtproto::Int32_Data*>(
      ::mtproto::Int32_Data::internal_default_instance());
  _Int64_default_instance_._instance.get_mutable()->data2_ = const_cast< ::mtproto::Int64_Data*>(
      ::mtproto::Int64_Data::internal_default_instance());
  _TL_long_default_instance_._instance.get_mutable()->data2_ = const_cast< ::mtproto::Int64_Data*>(
      ::mtproto::Int64_Data::internal_default_instance());
  _AuthKeyInfo_Data_default_instance_._instance.get_mutable()->future_salt_ = const_cast< ::mtproto::FutureSalt*>(
      ::mtproto::FutureSalt::internal_default_instance());
  _AuthKeyInfo_default_instance_._instance.get_mutable()->data2_ = const_cast< ::mtproto::AuthKeyInfo_Data*>(
      ::mtproto::AuthKeyInfo_Data::internal_default_instance());
  _TL_authKeyInfo_default_instance_._instance.get_mutable()->data2_ = const_cast< ::mtproto::AuthKeyInfo_Data*>(
      ::mtproto::AuthKeyInfo_Data::internal_default_instance());
  _ClientSession_default_instance_._instance.get_mutable()->data2_ = const_cast< ::mtproto::ClientSession_Data*>(
      ::mtproto::ClientSession_Data::internal_default_instance());
  _TL_clientSessionInfo_default_instance_._instance.get_mutable()->data2_ = const_cast< ::mtproto::ClientSession_Data*>(
      ::mtproto::ClientSession_Data::internal_default_instance());
  _TL_session_setClientSessionInfo_default_instance_._instance.get_mutable()->session_ = const_cast< ::mtproto::ClientSession*>(
      ::mtproto::ClientSession::internal_default_instance());
  _TL_session_setAuthKey_default_instance_._instance.get_mutable()->auth_key_ = const_cast< ::mtproto::AuthKeyInfo*>(
      ::mtproto::AuthKeyInfo::internal_default_instance());
  _TL_sync_syncUpdates_default_instance_._instance.get_mutable()->updates_ = const_cast< ::mtproto::Updates*>(
      ::mtproto::Updates::internal_default_instance());
  _TL_sync_pushUpdates_default_instance_._instance.get_mutable()->updates_ = const_cast< ::mtproto::Updates*>(
      ::mtproto::Updates::internal_default_instance());
  _TL_sync_syncChannelUpdates_default_instance_._instance.get_mutable()->updates_ = const_cast< ::mtproto::Updates*>(
      ::mtproto::Updates::internal_default_instance());
  _TL_sync_pushChannelUpdates_default_instance_._instance.get_mutable()->updates_ = const_cast< ::mtproto::Updates*>(
      ::mtproto::Updates::internal_default_instance());
  _TL_sync_getChannelDifference_default_instance_._instance.get_mutable()->channel_ = const_cast< ::mtproto::InputChannel*>(
      ::mtproto::InputChannel::internal_default_instance());
  _TL_sync_getChannelDifference_default_instance_._instance.get_mutable()->filter_ = const_cast< ::mtproto::ChannelMessagesFilter*>(
      ::mtproto::ChannelMessagesFilter::internal_default_instance());
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
namespace {
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\020service.tl.proto\022\007mtproto\032\025schema.tl.c"
      "rc32.proto\032\032schema.tl.core_types.proto\032\031"
      "schema.tl.transport.proto\032\024schema.tl.syn"
      "c.proto\".\n\024ConnectToServer_Data\022\026\n\016sync_"
      "server_id\030\001 \001(\005\"l\n\017ConnectToServer\022+\n\013co"
      "nstructor\030\001 \001(\0162\026.mtproto.TLConstructor\022"
      ",\n\005data2\030\002 \001(\0132\035.mtproto.ConnectToServer"
      "_Data\"N\n\036TL_sync_connectToSessionServer\022"
      ",\n\005data2\030\002 \001(\0132\035.mtproto.ConnectToServer"
      "_Data\"F\n\024ServerConnected_Data\022\031\n\021session"
      "_server_id\030\001 \001(\005\022\023\n\013server_name\030\002 \001(\t\"l\n"
      "\017ServerConnected\022+\n\013constructor\030\001 \001(\0162\026."
      "mtproto.TLConstructor\022,\n\005data2\030\002 \001(\0132\035.m"
      "tproto.ServerConnected_Data\"N\n\036TL_sync_s"
      "essionServerConnected\022,\n\005data2\030\002 \001(\0132\035.m"
      "tproto.ServerConnected_Data\"r\n\rPushData_"
      "Data\022\023\n\013auth_key_id\030\001 \001(\003\022!\n\007updates\030\002 \001"
      "(\0132\020.mtproto.Updates\022\031\n\021client_req_msg_i"
      "d\030\003 \001(\003\022\016\n\006result\030\004 \001(\014\"^\n\010PushData\022+\n\013c"
      "onstructor\030\001 \001(\0162\026.mtproto.TLConstructor"
      "\022%\n\005data2\030\002 \001(\0132\026.mtproto.PushData_Data\""
      "@\n\027TL_sync_pushUpdatesData\022%\n\005data2\030\002 \001("
      "\0132\026.mtproto.PushData_Data\"B\n\031TL_sync_pus"
      "hRpcResultData\022%\n\005data2\030\002 \001(\0132\026.mtproto."
      "PushData_Data\"\027\n\nInt32_Data\022\t\n\001v\030\001 \001(\005\"X"
      "\n\005Int32\022+\n\013constructor\030\001 \001(\0162\026.mtproto.T"
      "LConstructor\022\"\n\005data2\030\002 \001(\0132\023.mtproto.In"
      "t32_Data\".\n\010TL_int32\022\"\n\005data2\030\002 \001(\0132\023.mt"
      "proto.Int32_Data\"\027\n\nInt64_Data\022\t\n\001v\030\001 \001("
      "\003\"X\n\005Int64\022+\n\013constructor\030\001 \001(\0162\026.mtprot"
      "o.TLConstructor\022\"\n\005data2\030\002 \001(\0132\023.mtproto"
      ".Int64_Data\"-\n\007TL_long\022\"\n\005data2\030\002 \001(\0132\023."
      "mtproto.Int64_Data\"c\n\020AuthKeyInfo_Data\022\023"
      "\n\013auth_key_id\030\001 \001(\003\022\020\n\010auth_key\030\002 \001(\014\022(\n"
      "\013future_salt\030\003 \001(\0132\023.mtproto.FutureSalt\""
      "d\n\013AuthKeyInfo\022+\n\013constructor\030\001 \001(\0162\026.mt"
      "proto.TLConstructor\022(\n\005data2\030\002 \001(\0132\031.mtp"
      "roto.AuthKeyInfo_Data\":\n\016TL_authKeyInfo\022"
      "(\n\005data2\030\002 \001(\0132\031.mtproto.AuthKeyInfo_Dat"
      "a\"\327\001\n\022ClientSession_Data\022\023\n\013auth_key_id\030"
      "\001 \001(\003\022\n\n\002ip\030\002 \001(\t\022\r\n\005layer\030\003 \001(\005\022\016\n\006api_"
      "id\030\004 \001(\005\022\024\n\014device_model\030\005 \001(\t\022\026\n\016system"
      "_version\030\006 \001(\t\022\023\n\013app_version\030\007 \001(\t\022\030\n\020s"
      "ystem_lang_code\030\010 \001(\t\022\021\n\tlang_pack\030\t \001(\t"
      "\022\021\n\tlang_code\030\n \001(\t\"h\n\rClientSession\022+\n\013"
      "constructor\030\001 \001(\0162\026.mtproto.TLConstructo"
      "r\022*\n\005data2\030\002 \001(\0132\033.mtproto.ClientSession"
      "_Data\"B\n\024TL_clientSessionInfo\022*\n\005data2\030\002"
      " \001(\0132\033.mtproto.ClientSession_Data\"J\n\037TL_"
      "session_setClientSessionInfo\022\'\n\007session\030"
      "\001 \001(\0132\026.mtproto.ClientSession\"/\n\034TL_sess"
      "ion_getAuthorizations\022\017\n\007user_id\030\001 \001(\005\">"
      "\n\035TL_session_resetAuthorization\022\017\n\007user_"
      "id\030\001 \001(\005\022\014\n\004hash\030\002 \001(\003\"*\n\023TL_session_get"
      "Layer\022\023\n\013auth_key_id\030\001 \001(\003\"+\n\024TL_session"
      "_getUserId\022\023\n\013auth_key_id\030\001 \001(\003\".\n\027TL_se"
      "ssion_queryAuthKey\022\023\n\013auth_key_id\030\001 \001(\003\""
      "\?\n\025TL_session_setAuthKey\022&\n\010auth_key\030\001 \001"
      "(\0132\024.mtproto.AuthKeyInfo\"B\n\032TL_session_b"
      "indAuthKeyUser\022\023\n\013auth_key_id\030\001 \001(\003\022\017\n\007u"
      "ser_id\030\002 \001(\005\"D\n\034TL_session_unbindAuthKey"
      "User\022\023\n\013auth_key_id\030\001 \001(\003\022\017\n\007user_id\030\002 \001"
      "(\005\"q\n\023TL_sync_syncUpdates\022\017\n\007user_id\030\002 \001"
      "(\005\022\023\n\013auth_key_id\030\003 \001(\003\022\021\n\tserver_id\030\004 \001"
      "(\005\022!\n\007updates\030\005 \001(\0132\020.mtproto.Updates\"I\n"
      "\023TL_sync_pushUpdates\022\017\n\007user_id\030\001 \001(\005\022!\n"
      "\007updates\030\002 \001(\0132\020.mtproto.Updates\"\214\001\n\032TL_"
      "sync_syncChannelUpdates\022\022\n\nchannel_id\030\002 "
      "\001(\005\022\017\n\007user_id\030\003 \001(\005\022\023\n\013auth_key_id\030\004 \001("
      "\003\022\021\n\tserver_id\030\005 \001(\005\022!\n\007updates\030\006 \001(\0132\020."
      "mtproto.Updates\"d\n\032TL_sync_pushChannelUp"
      "dates\022\022\n\nchannel_id\030\001 \001(\005\022\017\n\007user_id\030\002 \001"
      "(\005\022!\n\007updates\030\003 \001(\0132\020.mtproto.Updates\"c\n"
      "\025TL_sync_pushRpcResult\022\021\n\tserver_id\030\001 \001("
      "\005\022\023\n\013auth_key_id\030\002 \001(\003\022\022\n\nreq_msg_id\030\003 \001"
      "(\003\022\016\n\006result\030\004 \001(\014\"8\n\020TL_sync_getState\022\023"
      "\n\013auth_key_id\030\001 \001(\003\022\017\n\007user_id\030\002 \001(\005\"~\n\025"
      "TL_sync_getDifference\022\023\n\013auth_key_id\030\002 \001"
      "(\003\022\017\n\007user_id\030\003 \001(\005\022\013\n\003pts\030\004 \001(\005\022\027\n\017pts_"
      "total_limit\030\005 \001(\005\022\014\n\004date\030\006 \001(\005\022\013\n\003qts\030\007"
      " \001(\005\"\307\001\n\034TL_sync_getChannelDifference\022\023\n"
      "\013auth_key_id\030\002 \001(\003\022\017\n\007user_id\030\003 \001(\005\022\r\n\005f"
      "orce\030\004 \001(\010\022&\n\007channel\030\005 \001(\0132\025.mtproto.In"
      "putChannel\022.\n\006filter\030\006 \001(\0132\036.mtproto.Cha"
      "nnelMessagesFilter\022\013\n\003pts\030\007 \001(\005\022\r\n\005limit"
      "\030\010 \001(\0052\356\005\n\nRPCSession\022Y\n\034session_setClie"
      "ntSessionInfo\022(.mtproto.TL_session_setCl"
      "ientSessionInfo\032\r.mtproto.Bool\"\000\022e\n\031sess"
      "ion_getAuthorizations\022%.mtproto.TL_sessi"
      "on_getAuthorizations\032\037.mtproto.account_A"
      "uthorizations\"\000\022U\n\032session_resetAuthoriz"
      "ation\022&.mtproto.TL_session_resetAuthoriz"
      "ation\032\r.mtproto.Bool\"\000\022B\n\020session_getLay"
      "er\022\034.mtproto.TL_session_getLayer\032\016.mtpro"
      "to.Int32\"\000\022D\n\021session_getUserId\022\035.mtprot"
      "o.TL_session_getUserId\032\016.mtproto.Int32\"\000"
      "\022P\n\024session_queryAuthKey\022 .mtproto.TL_se"
      "ssion_queryAuthKey\032\024.mtproto.AuthKeyInfo"
      "\"\000\022E\n\022session_setAuthKey\022\036.mtproto.TL_se"
      "ssion_setAuthKey\032\r.mtproto.Bool\"\000\022O\n\027ses"
      "sion_bindAuthKeyUser\022#.mtproto.TL_sessio"
      "n_bindAuthKeyUser\032\r.mtproto.Bool\"\000\022S\n\031se"
      "ssion_unbindAuthKeyUser\022%.mtproto.TL_ses"
      "sion_unbindAuthKeyUser\032\r.mtproto.Bool\"\0002"
      "\375\004\n\007RPCSync\022A\n\020sync_syncUpdates\022\034.mtprot"
      "o.TL_sync_syncUpdates\032\r.mtproto.Bool\"\000\022A"
      "\n\020sync_pushUpdates\022\034.mtproto.TL_sync_pus"
      "hUpdates\032\r.mtproto.Bool\"\000\022O\n\027sync_syncCh"
      "annelUpdates\022#.mtproto.TL_sync_syncChann"
      "elUpdates\032\r.mtproto.Bool\"\000\022O\n\027sync_pushC"
      "hannelUpdates\022#.mtproto.TL_sync_pushChan"
      "nelUpdates\032\r.mtproto.Bool\"\000\022E\n\022sync_push"
      "RpcResult\022\036.mtproto.TL_sync_pushRpcResul"
      "t\032\r.mtproto.Bool\"\000\022D\n\rsync_getState\022\031.mt"
      "proto.TL_sync_getState\032\026.mtproto.updates"
      "_State\"\000\022S\n\022sync_getDifference\022\036.mtproto"
      ".TL_sync_getDifference\032\033.mtproto.updates"
      "_Difference\"\000\022h\n\031sync_getChannelDifferen"
      "ce\022%.mtproto.TL_sync_getChannelDifferenc"
      "e\032\".mtproto.updates_ChannelDifference\"\000B"
      "(\n\033com.nebulaim.engine.mtprotoB\007MTProtoH"
      "\002b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 4849);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "service.tl.proto", &protobuf_RegisterTypes);
  ::mtproto::protobuf_schema_2etl_2ecrc32_2eproto::AddDescriptors();
  ::mtproto::protobuf_schema_2etl_2ecore_5ftypes_2eproto::AddDescriptors();
  ::mtproto::protobuf_schema_2etl_2etransport_2eproto::AddDescriptors();
  ::mtproto::protobuf_schema_2etl_2esync_2eproto::AddDescriptors();
}
} // anonymous namespace

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_service_2etl_2eproto


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ConnectToServer_Data::kSyncServerIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ConnectToServer_Data::ConnectToServer_Data()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_service_2etl_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.ConnectToServer_Data)
}
ConnectToServer_Data::ConnectToServer_Data(const ConnectToServer_Data& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  sync_server_id_ = from.sync_server_id_;
  // @@protoc_insertion_point(copy_constructor:mtproto.ConnectToServer_Data)
}

void ConnectToServer_Data::SharedCtor() {
  sync_server_id_ = 0;
  _cached_size_ = 0;
}

ConnectToServer_Data::~ConnectToServer_Data() {
  // @@protoc_insertion_point(destructor:mtproto.ConnectToServer_Data)
  SharedDtor();
}

void ConnectToServer_Data::SharedDtor() {
}

void ConnectToServer_Data::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ConnectToServer_Data::descriptor() {
  protobuf_service_2etl_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_service_2etl_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ConnectToServer_Data& ConnectToServer_Data::default_instance() {
  protobuf_service_2etl_2eproto::InitDefaults();
  return *internal_default_instance();
}

ConnectToServer_Data* ConnectToServer_Data::New(::google::protobuf::Arena* arena) const {
  ConnectToServer_Data* n = new ConnectToServer_Data;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ConnectToServer_Data::Swap(ConnectToServer_Data* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ConnectToServer_Data::InternalSwap(ConnectToServer_Data* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata ConnectToServer_Data::GetMetadata() const {
  protobuf_service_2etl_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_service_2etl_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ConnectToServer_Data

// int32 sync_server_id = 1;
void ConnectToServer_Data::clear_sync_server_id() {
  sync_server_id_ = 0;
}
::google::protobuf::int32 ConnectToServer_Data::sync_server_id() const {
  // @@protoc_insertion_point(field_get:mtproto.ConnectToServer_Data.sync_server_id)
  return sync_server_id_;
}
void ConnectToServer_Data::set_sync_server_id(::google::protobuf::int32 value) {
  
  sync_server_id_ = value;
  // @@protoc_insertion_point(field_set:mtproto.ConnectToServer_Data.sync_server_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ConnectToServer::kConstructorFieldNumber;
const int ConnectToServer::kData2FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ConnectToServer::ConnectToServer()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_service_2etl_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.ConnectToServer)
}
ConnectToServer::ConnectToServer(const ConnectToServer& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_data2()) {
    data2_ = new ::mtproto::ConnectToServer_Data(*from.data2_);
  } else {
    data2_ = NULL;
  }
  constructor_ = from.constructor_;
  // @@protoc_insertion_point(copy_constructor:mtproto.ConnectToServer)
}

void ConnectToServer::SharedCtor() {
  ::memset(&data2_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&constructor_) -
      reinterpret_cast<char*>(&data2_)) + sizeof(constructor_));
  _cached_size_ = 0;
}

ConnectToServer::~ConnectToServer() {
  // @@protoc_insertion_point(destructor:mtproto.ConnectToServer)
  SharedDtor();
}

void ConnectToServer::SharedDtor() {
  if (this != internal_default_instance()) delete data2_;
}

void ConnectToServer::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ConnectToServer::descriptor() {
  protobuf_service_2etl_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_service_2etl_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ConnectToServer& ConnectToServer::default_instance() {
  protobuf_service_2etl_2eproto::InitDefaults();
  return *internal_default_instance();
}

ConnectToServer* ConnectToServer::New(::google::protobuf::Arena* arena) const {
  ConnectToServer* n = new ConnectToServer;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ConnectToServer::Swap(ConnectToServer* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ConnectToServer::InternalSwap(ConnectToServer* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata ConnectToServer::GetMetadata() const {
  protobuf_service_2etl_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_service_2etl_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ConnectToServer

// .mtproto.TLConstructor constructor = 1;
void ConnectToServer::clear_constructor() {
  constructor_ = 0;
}
::mtproto::TLConstructor ConnectToServer::constructor() const {
  // @@protoc_insertion_point(field_get:mtproto.ConnectToServer.constructor)
  return static_cast< ::mtproto::TLConstructor >(constructor_);
}
void ConnectToServer::set_constructor(::mtproto::TLConstructor value) {
  
  constructor_ = value;
  // @@protoc_insertion_point(field_set:mtproto.ConnectToServer.constructor)
}

// .mtproto.ConnectToServer_Data data2 = 2;
bool ConnectToServer::has_data2() const {
  return this != internal_default_instance() && data2_ != NULL;
}
void ConnectToServer::clear_data2() {
  if (GetArenaNoVirtual() == NULL && data2_ != NULL) delete data2_;
  data2_ = NULL;
}
const ::mtproto::ConnectToServer_Data& ConnectToServer::data2() const {
  const ::mtproto::ConnectToServer_Data* p = data2_;
  // @@protoc_insertion_point(field_get:mtproto.ConnectToServer.data2)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::ConnectToServer_Data*>(
      &::mtproto::_ConnectToServer_Data_default_instance_);
}
::mtproto::ConnectToServer_Data* ConnectToServer::mutable_data2() {
  
  if (data2_ == NULL) {
    data2_ = new ::mtproto::ConnectToServer_Data;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.ConnectToServer.data2)
  return data2_;
}
::mtproto::ConnectToServer_Data* ConnectToServer::release_data2() {
  // @@protoc_insertion_point(field_release:mtproto.ConnectToServer.data2)
  
  ::mtproto::ConnectToServer_Data* temp = data2_;
  data2_ = NULL;
  return temp;
}
void ConnectToServer::set_allocated_data2(::mtproto::ConnectToServer_Data* data2) {
  delete data2_;
  data2_ = data2;
  if (data2) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.ConnectToServer.data2)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TL_sync_connectToSessionServer::kData2FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TL_sync_connectToSessionServer::TL_sync_connectToSessionServer()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_service_2etl_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.TL_sync_connectToSessionServer)
}
TL_sync_connectToSessionServer::TL_sync_connectToSessionServer(const TL_sync_connectToSessionServer& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_data2()) {
    data2_ = new ::mtproto::ConnectToServer_Data(*from.data2_);
  } else {
    data2_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:mtproto.TL_sync_connectToSessionServer)
}

void TL_sync_connectToSessionServer::SharedCtor() {
  data2_ = NULL;
  _cached_size_ = 0;
}

TL_sync_connectToSessionServer::~TL_sync_connectToSessionServer() {
  // @@protoc_insertion_point(destructor:mtproto.TL_sync_connectToSessionServer)
  SharedDtor();
}

void TL_sync_connectToSessionServer::SharedDtor() {
  if (this != internal_default_instance()) delete data2_;
}

void TL_sync_connectToSessionServer::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TL_sync_connectToSessionServer::descriptor() {
  protobuf_service_2etl_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_service_2etl_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TL_sync_connectToSessionServer& TL_sync_connectToSessionServer::default_instance() {
  protobuf_service_2etl_2eproto::InitDefaults();
  return *internal_default_instance();
}

TL_sync_connectToSessionServer* TL_sync_connectToSessionServer::New(::google::protobuf::Arena* arena) const {
  TL_sync_connectToSessionServer* n = new TL_sync_connectToSessionServer;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TL_sync_connectToSessionServer::Swap(TL_sync_connectToSessionServer* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TL_sync_connectToSessionServer::InternalSwap(TL_sync_connectToSessionServer* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata TL_sync_connectToSessionServer::GetMetadata() const {
  protobuf_service_2etl_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_service_2etl_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TL_sync_connectToSessionServer

// .mtproto.ConnectToServer_Data data2 = 2;
bool TL_sync_connectToSessionServer::has_data2() const {
  return this != internal_default_instance() && data2_ != NULL;
}
void TL_sync_connectToSessionServer::clear_data2() {
  if (GetArenaNoVirtual() == NULL && data2_ != NULL) delete data2_;
  data2_ = NULL;
}
const ::mtproto::ConnectToServer_Data& TL_sync_connectToSessionServer::data2() const {
  const ::mtproto::ConnectToServer_Data* p = data2_;
  // @@protoc_insertion_point(field_get:mtproto.TL_sync_connectToSessionServer.data2)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::ConnectToServer_Data*>(
      &::mtproto::_ConnectToServer_Data_default_instance_);
}
::mtproto::ConnectToServer_Data* TL_sync_connectToSessionServer::mutable_data2() {
  
  if (data2_ == NULL) {
    data2_ = new ::mtproto::ConnectToServer_Data;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_sync_connectToSessionServer.data2)
  return data2_;
}
::mtproto::ConnectToServer_Data* TL_sync_connectToSessionServer::release_data2() {
  // @@protoc_insertion_point(field_release:mtproto.TL_sync_connectToSessionServer.data2)
  
  ::mtproto::ConnectToServer_Data* temp = data2_;
  data2_ = NULL;
  return temp;
}
void TL_sync_connectToSessionServer::set_allocated_data2(::mtproto::ConnectToServer_Data* data2) {
  delete data2_;
  data2_ = data2;
  if (data2) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_sync_connectToSessionServer.data2)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ServerConnected_Data::kSessionServerIdFieldNumber;
const int ServerConnected_Data::kServerNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ServerConnected_Data::ServerConnected_Data()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_service_2etl_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.ServerConnected_Data)
}
ServerConnected_Data::ServerConnected_Data(const ServerConnected_Data& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  server_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.server_name().size() > 0) {
    server_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.server_name_);
  }
  session_server_id_ = from.session_server_id_;
  // @@protoc_insertion_point(copy_constructor:mtproto.ServerConnected_Data)
}

void ServerConnected_Data::SharedCtor() {
  server_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  session_server_id_ = 0;
  _cached_size_ = 0;
}

ServerConnected_Data::~ServerConnected_Data() {
  // @@protoc_insertion_point(destructor:mtproto.ServerConnected_Data)
  SharedDtor();
}

void ServerConnected_Data::SharedDtor() {
  server_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ServerConnected_Data::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ServerConnected_Data::descriptor() {
  protobuf_service_2etl_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_service_2etl_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ServerConnected_Data& ServerConnected_Data::default_instance() {
  protobuf_service_2etl_2eproto::InitDefaults();
  return *internal_default_instance();
}

ServerConnected_Data* ServerConnected_Data::New(::google::protobuf::Arena* arena) const {
  ServerConnected_Data* n = new ServerConnected_Data;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ServerConnected_Data::Swap(ServerConnected_Data* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ServerConnected_Data::InternalSwap(ServerConnected_Data* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata ServerConnected_Data::GetMetadata() const {
  protobuf_service_2etl_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_service_2etl_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ServerConnected_Data

// int32 session_server_id = 1;
void ServerConnected_Data::clear_session_server_id() {
  session_server_id_ = 0;
}
::google::protobuf::int32 ServerConnected_Data::session_server_id() const {
  // @@protoc_insertion_point(field_get:mtproto.ServerConnected_Data.session_server_id)
  return session_server_id_;
}
void ServerConnected_Data::set_session_server_id(::google::protobuf::int32 value) {
  
  session_server_id_ = value;
  // @@protoc_insertion_point(field_set:mtproto.ServerConnected_Data.session_server_id)
}

// string server_name = 2;
void ServerConnected_Data::clear_server_name() {
  server_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ServerConnected_Data::server_name() const {
  // @@protoc_insertion_point(field_get:mtproto.ServerConnected_Data.server_name)
  return server_name_.GetNoArena();
}
void ServerConnected_Data::set_server_name(const ::std::string& value) {
  
  server_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtproto.ServerConnected_Data.server_name)
}
#if LANG_CXX11
void ServerConnected_Data::set_server_name(::std::string&& value) {
  
  server_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mtproto.ServerConnected_Data.server_name)
}
#endif
void ServerConnected_Data::set_server_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  server_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtproto.ServerConnected_Data.server_name)
}
void ServerConnected_Data::set_server_name(const char* value, size_t size) {
  
  server_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtproto.ServerConnected_Data.server_name)
}
::std::string* ServerConnected_Data::mutable_server_name() {
  
  // @@protoc_insertion_point(field_mutable:mtproto.ServerConnected_Data.server_name)
  return server_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ServerConnected_Data::release_server_name() {
  // @@protoc_insertion_point(field_release:mtproto.ServerConnected_Data.server_name)
  
  return server_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ServerConnected_Data::set_allocated_server_name(::std::string* server_name) {
  if (server_name != NULL) {
    
  } else {
    
  }
  server_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), server_name);
  // @@protoc_insertion_point(field_set_allocated:mtproto.ServerConnected_Data.server_name)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ServerConnected::kConstructorFieldNumber;
const int ServerConnected::kData2FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ServerConnected::ServerConnected()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_service_2etl_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.ServerConnected)
}
ServerConnected::ServerConnected(const ServerConnected& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_data2()) {
    data2_ = new ::mtproto::ServerConnected_Data(*from.data2_);
  } else {
    data2_ = NULL;
  }
  constructor_ = from.constructor_;
  // @@protoc_insertion_point(copy_constructor:mtproto.ServerConnected)
}

void ServerConnected::SharedCtor() {
  ::memset(&data2_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&constructor_) -
      reinterpret_cast<char*>(&data2_)) + sizeof(constructor_));
  _cached_size_ = 0;
}

ServerConnected::~ServerConnected() {
  // @@protoc_insertion_point(destructor:mtproto.ServerConnected)
  SharedDtor();
}

void ServerConnected::SharedDtor() {
  if (this != internal_default_instance()) delete data2_;
}

void ServerConnected::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ServerConnected::descriptor() {
  protobuf_service_2etl_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_service_2etl_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ServerConnected& ServerConnected::default_instance() {
  protobuf_service_2etl_2eproto::InitDefaults();
  return *internal_default_instance();
}

ServerConnected* ServerConnected::New(::google::protobuf::Arena* arena) const {
  ServerConnected* n = new ServerConnected;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ServerConnected::Swap(ServerConnected* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ServerConnected::InternalSwap(ServerConnected* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata ServerConnected::GetMetadata() const {
  protobuf_service_2etl_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_service_2etl_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ServerConnected

// .mtproto.TLConstructor constructor = 1;
void ServerConnected::clear_constructor() {
  constructor_ = 0;
}
::mtproto::TLConstructor ServerConnected::constructor() const {
  // @@protoc_insertion_point(field_get:mtproto.ServerConnected.constructor)
  return static_cast< ::mtproto::TLConstructor >(constructor_);
}
void ServerConnected::set_constructor(::mtproto::TLConstructor value) {
  
  constructor_ = value;
  // @@protoc_insertion_point(field_set:mtproto.ServerConnected.constructor)
}

// .mtproto.ServerConnected_Data data2 = 2;
bool ServerConnected::has_data2() const {
  return this != internal_default_instance() && data2_ != NULL;
}
void ServerConnected::clear_data2() {
  if (GetArenaNoVirtual() == NULL && data2_ != NULL) delete data2_;
  data2_ = NULL;
}
const ::mtproto::ServerConnected_Data& ServerConnected::data2() const {
  const ::mtproto::ServerConnected_Data* p = data2_;
  // @@protoc_insertion_point(field_get:mtproto.ServerConnected.data2)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::ServerConnected_Data*>(
      &::mtproto::_ServerConnected_Data_default_instance_);
}
::mtproto::ServerConnected_Data* ServerConnected::mutable_data2() {
  
  if (data2_ == NULL) {
    data2_ = new ::mtproto::ServerConnected_Data;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.ServerConnected.data2)
  return data2_;
}
::mtproto::ServerConnected_Data* ServerConnected::release_data2() {
  // @@protoc_insertion_point(field_release:mtproto.ServerConnected.data2)
  
  ::mtproto::ServerConnected_Data* temp = data2_;
  data2_ = NULL;
  return temp;
}
void ServerConnected::set_allocated_data2(::mtproto::ServerConnected_Data* data2) {
  delete data2_;
  data2_ = data2;
  if (data2) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.ServerConnected.data2)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TL_sync_sessionServerConnected::kData2FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TL_sync_sessionServerConnected::TL_sync_sessionServerConnected()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_service_2etl_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.TL_sync_sessionServerConnected)
}
TL_sync_sessionServerConnected::TL_sync_sessionServerConnected(const TL_sync_sessionServerConnected& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_data2()) {
    data2_ = new ::mtproto::ServerConnected_Data(*from.data2_);
  } else {
    data2_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:mtproto.TL_sync_sessionServerConnected)
}

void TL_sync_sessionServerConnected::SharedCtor() {
  data2_ = NULL;
  _cached_size_ = 0;
}

TL_sync_sessionServerConnected::~TL_sync_sessionServerConnected() {
  // @@protoc_insertion_point(destructor:mtproto.TL_sync_sessionServerConnected)
  SharedDtor();
}

void TL_sync_sessionServerConnected::SharedDtor() {
  if (this != internal_default_instance()) delete data2_;
}

void TL_sync_sessionServerConnected::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TL_sync_sessionServerConnected::descriptor() {
  protobuf_service_2etl_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_service_2etl_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TL_sync_sessionServerConnected& TL_sync_sessionServerConnected::default_instance() {
  protobuf_service_2etl_2eproto::InitDefaults();
  return *internal_default_instance();
}

TL_sync_sessionServerConnected* TL_sync_sessionServerConnected::New(::google::protobuf::Arena* arena) const {
  TL_sync_sessionServerConnected* n = new TL_sync_sessionServerConnected;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TL_sync_sessionServerConnected::Swap(TL_sync_sessionServerConnected* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TL_sync_sessionServerConnected::InternalSwap(TL_sync_sessionServerConnected* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata TL_sync_sessionServerConnected::GetMetadata() const {
  protobuf_service_2etl_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_service_2etl_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TL_sync_sessionServerConnected

// .mtproto.ServerConnected_Data data2 = 2;
bool TL_sync_sessionServerConnected::has_data2() const {
  return this != internal_default_instance() && data2_ != NULL;
}
void TL_sync_sessionServerConnected::clear_data2() {
  if (GetArenaNoVirtual() == NULL && data2_ != NULL) delete data2_;
  data2_ = NULL;
}
const ::mtproto::ServerConnected_Data& TL_sync_sessionServerConnected::data2() const {
  const ::mtproto::ServerConnected_Data* p = data2_;
  // @@protoc_insertion_point(field_get:mtproto.TL_sync_sessionServerConnected.data2)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::ServerConnected_Data*>(
      &::mtproto::_ServerConnected_Data_default_instance_);
}
::mtproto::ServerConnected_Data* TL_sync_sessionServerConnected::mutable_data2() {
  
  if (data2_ == NULL) {
    data2_ = new ::mtproto::ServerConnected_Data;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_sync_sessionServerConnected.data2)
  return data2_;
}
::mtproto::ServerConnected_Data* TL_sync_sessionServerConnected::release_data2() {
  // @@protoc_insertion_point(field_release:mtproto.TL_sync_sessionServerConnected.data2)
  
  ::mtproto::ServerConnected_Data* temp = data2_;
  data2_ = NULL;
  return temp;
}
void TL_sync_sessionServerConnected::set_allocated_data2(::mtproto::ServerConnected_Data* data2) {
  delete data2_;
  data2_ = data2;
  if (data2) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_sync_sessionServerConnected.data2)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PushData_Data::kAuthKeyIdFieldNumber;
const int PushData_Data::kUpdatesFieldNumber;
const int PushData_Data::kClientReqMsgIdFieldNumber;
const int PushData_Data::kResultFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PushData_Data::PushData_Data()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_service_2etl_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.PushData_Data)
}
PushData_Data::PushData_Data(const PushData_Data& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  result_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.result().size() > 0) {
    result_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.result_);
  }
  if (from.has_updates()) {
    updates_ = new ::mtproto::Updates(*from.updates_);
  } else {
    updates_ = NULL;
  }
  ::memcpy(&auth_key_id_, &from.auth_key_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&client_req_msg_id_) -
    reinterpret_cast<char*>(&auth_key_id_)) + sizeof(client_req_msg_id_));
  // @@protoc_insertion_point(copy_constructor:mtproto.PushData_Data)
}

void PushData_Data::SharedCtor() {
  result_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&updates_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&client_req_msg_id_) -
      reinterpret_cast<char*>(&updates_)) + sizeof(client_req_msg_id_));
  _cached_size_ = 0;
}

PushData_Data::~PushData_Data() {
  // @@protoc_insertion_point(destructor:mtproto.PushData_Data)
  SharedDtor();
}

void PushData_Data::SharedDtor() {
  result_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete updates_;
}

void PushData_Data::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PushData_Data::descriptor() {
  protobuf_service_2etl_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_service_2etl_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PushData_Data& PushData_Data::default_instance() {
  protobuf_service_2etl_2eproto::InitDefaults();
  return *internal_default_instance();
}

PushData_Data* PushData_Data::New(::google::protobuf::Arena* arena) const {
  PushData_Data* n = new PushData_Data;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PushData_Data::Swap(PushData_Data* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PushData_Data::InternalSwap(PushData_Data* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata PushData_Data::GetMetadata() const {
  protobuf_service_2etl_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_service_2etl_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PushData_Data

// int64 auth_key_id = 1;
void PushData_Data::clear_auth_key_id() {
  auth_key_id_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 PushData_Data::auth_key_id() const {
  // @@protoc_insertion_point(field_get:mtproto.PushData_Data.auth_key_id)
  return auth_key_id_;
}
void PushData_Data::set_auth_key_id(::google::protobuf::int64 value) {
  
  auth_key_id_ = value;
  // @@protoc_insertion_point(field_set:mtproto.PushData_Data.auth_key_id)
}

// .mtproto.Updates updates = 2;
bool PushData_Data::has_updates() const {
  return this != internal_default_instance() && updates_ != NULL;
}
void PushData_Data::clear_updates() {
  if (GetArenaNoVirtual() == NULL && updates_ != NULL) delete updates_;
  updates_ = NULL;
}
const ::mtproto::Updates& PushData_Data::updates() const {
  const ::mtproto::Updates* p = updates_;
  // @@protoc_insertion_point(field_get:mtproto.PushData_Data.updates)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::Updates*>(
      &::mtproto::_Updates_default_instance_);
}
::mtproto::Updates* PushData_Data::mutable_updates() {
  
  if (updates_ == NULL) {
    updates_ = new ::mtproto::Updates;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.PushData_Data.updates)
  return updates_;
}
::mtproto::Updates* PushData_Data::release_updates() {
  // @@protoc_insertion_point(field_release:mtproto.PushData_Data.updates)
  
  ::mtproto::Updates* temp = updates_;
  updates_ = NULL;
  return temp;
}
void PushData_Data::set_allocated_updates(::mtproto::Updates* updates) {
  delete updates_;
  updates_ = updates;
  if (updates) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.PushData_Data.updates)
}

// int64 client_req_msg_id = 3;
void PushData_Data::clear_client_req_msg_id() {
  client_req_msg_id_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 PushData_Data::client_req_msg_id() const {
  // @@protoc_insertion_point(field_get:mtproto.PushData_Data.client_req_msg_id)
  return client_req_msg_id_;
}
void PushData_Data::set_client_req_msg_id(::google::protobuf::int64 value) {
  
  client_req_msg_id_ = value;
  // @@protoc_insertion_point(field_set:mtproto.PushData_Data.client_req_msg_id)
}

// bytes result = 4;
void PushData_Data::clear_result() {
  result_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& PushData_Data::result() const {
  // @@protoc_insertion_point(field_get:mtproto.PushData_Data.result)
  return result_.GetNoArena();
}
void PushData_Data::set_result(const ::std::string& value) {
  
  result_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtproto.PushData_Data.result)
}
#if LANG_CXX11
void PushData_Data::set_result(::std::string&& value) {
  
  result_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mtproto.PushData_Data.result)
}
#endif
void PushData_Data::set_result(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  result_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtproto.PushData_Data.result)
}
void PushData_Data::set_result(const void* value, size_t size) {
  
  result_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtproto.PushData_Data.result)
}
::std::string* PushData_Data::mutable_result() {
  
  // @@protoc_insertion_point(field_mutable:mtproto.PushData_Data.result)
  return result_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* PushData_Data::release_result() {
  // @@protoc_insertion_point(field_release:mtproto.PushData_Data.result)
  
  return result_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PushData_Data::set_allocated_result(::std::string* result) {
  if (result != NULL) {
    
  } else {
    
  }
  result_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), result);
  // @@protoc_insertion_point(field_set_allocated:mtproto.PushData_Data.result)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PushData::kConstructorFieldNumber;
const int PushData::kData2FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PushData::PushData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_service_2etl_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.PushData)
}
PushData::PushData(const PushData& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_data2()) {
    data2_ = new ::mtproto::PushData_Data(*from.data2_);
  } else {
    data2_ = NULL;
  }
  constructor_ = from.constructor_;
  // @@protoc_insertion_point(copy_constructor:mtproto.PushData)
}

void PushData::SharedCtor() {
  ::memset(&data2_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&constructor_) -
      reinterpret_cast<char*>(&data2_)) + sizeof(constructor_));
  _cached_size_ = 0;
}

PushData::~PushData() {
  // @@protoc_insertion_point(destructor:mtproto.PushData)
  SharedDtor();
}

void PushData::SharedDtor() {
  if (this != internal_default_instance()) delete data2_;
}

void PushData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PushData::descriptor() {
  protobuf_service_2etl_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_service_2etl_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PushData& PushData::default_instance() {
  protobuf_service_2etl_2eproto::InitDefaults();
  return *internal_default_instance();
}

PushData* PushData::New(::google::protobuf::Arena* arena) const {
  PushData* n = new PushData;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PushData::Swap(PushData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PushData::InternalSwap(PushData* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata PushData::GetMetadata() const {
  protobuf_service_2etl_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_service_2etl_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PushData

// .mtproto.TLConstructor constructor = 1;
void PushData::clear_constructor() {
  constructor_ = 0;
}
::mtproto::TLConstructor PushData::constructor() const {
  // @@protoc_insertion_point(field_get:mtproto.PushData.constructor)
  return static_cast< ::mtproto::TLConstructor >(constructor_);
}
void PushData::set_constructor(::mtproto::TLConstructor value) {
  
  constructor_ = value;
  // @@protoc_insertion_point(field_set:mtproto.PushData.constructor)
}

// .mtproto.PushData_Data data2 = 2;
bool PushData::has_data2() const {
  return this != internal_default_instance() && data2_ != NULL;
}
void PushData::clear_data2() {
  if (GetArenaNoVirtual() == NULL && data2_ != NULL) delete data2_;
  data2_ = NULL;
}
const ::mtproto::PushData_Data& PushData::data2() const {
  const ::mtproto::PushData_Data* p = data2_;
  // @@protoc_insertion_point(field_get:mtproto.PushData.data2)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::PushData_Data*>(
      &::mtproto::_PushData_Data_default_instance_);
}
::mtproto::PushData_Data* PushData::mutable_data2() {
  
  if (data2_ == NULL) {
    data2_ = new ::mtproto::PushData_Data;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.PushData.data2)
  return data2_;
}
::mtproto::PushData_Data* PushData::release_data2() {
  // @@protoc_insertion_point(field_release:mtproto.PushData.data2)
  
  ::mtproto::PushData_Data* temp = data2_;
  data2_ = NULL;
  return temp;
}
void PushData::set_allocated_data2(::mtproto::PushData_Data* data2) {
  delete data2_;
  data2_ = data2;
  if (data2) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.PushData.data2)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TL_sync_pushUpdatesData::kData2FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TL_sync_pushUpdatesData::TL_sync_pushUpdatesData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_service_2etl_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.TL_sync_pushUpdatesData)
}
TL_sync_pushUpdatesData::TL_sync_pushUpdatesData(const TL_sync_pushUpdatesData& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_data2()) {
    data2_ = new ::mtproto::PushData_Data(*from.data2_);
  } else {
    data2_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:mtproto.TL_sync_pushUpdatesData)
}

void TL_sync_pushUpdatesData::SharedCtor() {
  data2_ = NULL;
  _cached_size_ = 0;
}

TL_sync_pushUpdatesData::~TL_sync_pushUpdatesData() {
  // @@protoc_insertion_point(destructor:mtproto.TL_sync_pushUpdatesData)
  SharedDtor();
}

void TL_sync_pushUpdatesData::SharedDtor() {
  if (this != internal_default_instance()) delete data2_;
}

void TL_sync_pushUpdatesData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TL_sync_pushUpdatesData::descriptor() {
  protobuf_service_2etl_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_service_2etl_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TL_sync_pushUpdatesData& TL_sync_pushUpdatesData::default_instance() {
  protobuf_service_2etl_2eproto::InitDefaults();
  return *internal_default_instance();
}

TL_sync_pushUpdatesData* TL_sync_pushUpdatesData::New(::google::protobuf::Arena* arena) const {
  TL_sync_pushUpdatesData* n = new TL_sync_pushUpdatesData;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TL_sync_pushUpdatesData::Swap(TL_sync_pushUpdatesData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TL_sync_pushUpdatesData::InternalSwap(TL_sync_pushUpdatesData* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata TL_sync_pushUpdatesData::GetMetadata() const {
  protobuf_service_2etl_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_service_2etl_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TL_sync_pushUpdatesData

// .mtproto.PushData_Data data2 = 2;
bool TL_sync_pushUpdatesData::has_data2() const {
  return this != internal_default_instance() && data2_ != NULL;
}
void TL_sync_pushUpdatesData::clear_data2() {
  if (GetArenaNoVirtual() == NULL && data2_ != NULL) delete data2_;
  data2_ = NULL;
}
const ::mtproto::PushData_Data& TL_sync_pushUpdatesData::data2() const {
  const ::mtproto::PushData_Data* p = data2_;
  // @@protoc_insertion_point(field_get:mtproto.TL_sync_pushUpdatesData.data2)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::PushData_Data*>(
      &::mtproto::_PushData_Data_default_instance_);
}
::mtproto::PushData_Data* TL_sync_pushUpdatesData::mutable_data2() {
  
  if (data2_ == NULL) {
    data2_ = new ::mtproto::PushData_Data;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_sync_pushUpdatesData.data2)
  return data2_;
}
::mtproto::PushData_Data* TL_sync_pushUpdatesData::release_data2() {
  // @@protoc_insertion_point(field_release:mtproto.TL_sync_pushUpdatesData.data2)
  
  ::mtproto::PushData_Data* temp = data2_;
  data2_ = NULL;
  return temp;
}
void TL_sync_pushUpdatesData::set_allocated_data2(::mtproto::PushData_Data* data2) {
  delete data2_;
  data2_ = data2;
  if (data2) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_sync_pushUpdatesData.data2)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TL_sync_pushRpcResultData::kData2FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TL_sync_pushRpcResultData::TL_sync_pushRpcResultData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_service_2etl_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.TL_sync_pushRpcResultData)
}
TL_sync_pushRpcResultData::TL_sync_pushRpcResultData(const TL_sync_pushRpcResultData& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_data2()) {
    data2_ = new ::mtproto::PushData_Data(*from.data2_);
  } else {
    data2_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:mtproto.TL_sync_pushRpcResultData)
}

void TL_sync_pushRpcResultData::SharedCtor() {
  data2_ = NULL;
  _cached_size_ = 0;
}

TL_sync_pushRpcResultData::~TL_sync_pushRpcResultData() {
  // @@protoc_insertion_point(destructor:mtproto.TL_sync_pushRpcResultData)
  SharedDtor();
}

void TL_sync_pushRpcResultData::SharedDtor() {
  if (this != internal_default_instance()) delete data2_;
}

void TL_sync_pushRpcResultData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TL_sync_pushRpcResultData::descriptor() {
  protobuf_service_2etl_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_service_2etl_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TL_sync_pushRpcResultData& TL_sync_pushRpcResultData::default_instance() {
  protobuf_service_2etl_2eproto::InitDefaults();
  return *internal_default_instance();
}

TL_sync_pushRpcResultData* TL_sync_pushRpcResultData::New(::google::protobuf::Arena* arena) const {
  TL_sync_pushRpcResultData* n = new TL_sync_pushRpcResultData;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TL_sync_pushRpcResultData::Swap(TL_sync_pushRpcResultData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TL_sync_pushRpcResultData::InternalSwap(TL_sync_pushRpcResultData* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata TL_sync_pushRpcResultData::GetMetadata() const {
  protobuf_service_2etl_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_service_2etl_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TL_sync_pushRpcResultData

// .mtproto.PushData_Data data2 = 2;
bool TL_sync_pushRpcResultData::has_data2() const {
  return this != internal_default_instance() && data2_ != NULL;
}
void TL_sync_pushRpcResultData::clear_data2() {
  if (GetArenaNoVirtual() == NULL && data2_ != NULL) delete data2_;
  data2_ = NULL;
}
const ::mtproto::PushData_Data& TL_sync_pushRpcResultData::data2() const {
  const ::mtproto::PushData_Data* p = data2_;
  // @@protoc_insertion_point(field_get:mtproto.TL_sync_pushRpcResultData.data2)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::PushData_Data*>(
      &::mtproto::_PushData_Data_default_instance_);
}
::mtproto::PushData_Data* TL_sync_pushRpcResultData::mutable_data2() {
  
  if (data2_ == NULL) {
    data2_ = new ::mtproto::PushData_Data;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_sync_pushRpcResultData.data2)
  return data2_;
}
::mtproto::PushData_Data* TL_sync_pushRpcResultData::release_data2() {
  // @@protoc_insertion_point(field_release:mtproto.TL_sync_pushRpcResultData.data2)
  
  ::mtproto::PushData_Data* temp = data2_;
  data2_ = NULL;
  return temp;
}
void TL_sync_pushRpcResultData::set_allocated_data2(::mtproto::PushData_Data* data2) {
  delete data2_;
  data2_ = data2;
  if (data2) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_sync_pushRpcResultData.data2)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Int32_Data::kVFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Int32_Data::Int32_Data()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_service_2etl_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.Int32_Data)
}
Int32_Data::Int32_Data(const Int32_Data& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  v_ = from.v_;
  // @@protoc_insertion_point(copy_constructor:mtproto.Int32_Data)
}

void Int32_Data::SharedCtor() {
  v_ = 0;
  _cached_size_ = 0;
}

Int32_Data::~Int32_Data() {
  // @@protoc_insertion_point(destructor:mtproto.Int32_Data)
  SharedDtor();
}

void Int32_Data::SharedDtor() {
}

void Int32_Data::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Int32_Data::descriptor() {
  protobuf_service_2etl_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_service_2etl_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Int32_Data& Int32_Data::default_instance() {
  protobuf_service_2etl_2eproto::InitDefaults();
  return *internal_default_instance();
}

Int32_Data* Int32_Data::New(::google::protobuf::Arena* arena) const {
  Int32_Data* n = new Int32_Data;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Int32_Data::Swap(Int32_Data* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Int32_Data::InternalSwap(Int32_Data* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata Int32_Data::GetMetadata() const {
  protobuf_service_2etl_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_service_2etl_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Int32_Data

// int32 v = 1;
void Int32_Data::clear_v() {
  v_ = 0;
}
::google::protobuf::int32 Int32_Data::v() const {
  // @@protoc_insertion_point(field_get:mtproto.Int32_Data.v)
  return v_;
}
void Int32_Data::set_v(::google::protobuf::int32 value) {
  
  v_ = value;
  // @@protoc_insertion_point(field_set:mtproto.Int32_Data.v)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Int32::kConstructorFieldNumber;
const int Int32::kData2FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Int32::Int32()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_service_2etl_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.Int32)
}
Int32::Int32(const Int32& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_data2()) {
    data2_ = new ::mtproto::Int32_Data(*from.data2_);
  } else {
    data2_ = NULL;
  }
  constructor_ = from.constructor_;
  // @@protoc_insertion_point(copy_constructor:mtproto.Int32)
}

void Int32::SharedCtor() {
  ::memset(&data2_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&constructor_) -
      reinterpret_cast<char*>(&data2_)) + sizeof(constructor_));
  _cached_size_ = 0;
}

Int32::~Int32() {
  // @@protoc_insertion_point(destructor:mtproto.Int32)
  SharedDtor();
}

void Int32::SharedDtor() {
  if (this != internal_default_instance()) delete data2_;
}

void Int32::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Int32::descriptor() {
  protobuf_service_2etl_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_service_2etl_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Int32& Int32::default_instance() {
  protobuf_service_2etl_2eproto::InitDefaults();
  return *internal_default_instance();
}

Int32* Int32::New(::google::protobuf::Arena* arena) const {
  Int32* n = new Int32;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Int32::Swap(Int32* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Int32::InternalSwap(Int32* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata Int32::GetMetadata() const {
  protobuf_service_2etl_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_service_2etl_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Int32

// .mtproto.TLConstructor constructor = 1;
void Int32::clear_constructor() {
  constructor_ = 0;
}
::mtproto::TLConstructor Int32::constructor() const {
  // @@protoc_insertion_point(field_get:mtproto.Int32.constructor)
  return static_cast< ::mtproto::TLConstructor >(constructor_);
}
void Int32::set_constructor(::mtproto::TLConstructor value) {
  
  constructor_ = value;
  // @@protoc_insertion_point(field_set:mtproto.Int32.constructor)
}

// .mtproto.Int32_Data data2 = 2;
bool Int32::has_data2() const {
  return this != internal_default_instance() && data2_ != NULL;
}
void Int32::clear_data2() {
  if (GetArenaNoVirtual() == NULL && data2_ != NULL) delete data2_;
  data2_ = NULL;
}
const ::mtproto::Int32_Data& Int32::data2() const {
  const ::mtproto::Int32_Data* p = data2_;
  // @@protoc_insertion_point(field_get:mtproto.Int32.data2)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::Int32_Data*>(
      &::mtproto::_Int32_Data_default_instance_);
}
::mtproto::Int32_Data* Int32::mutable_data2() {
  
  if (data2_ == NULL) {
    data2_ = new ::mtproto::Int32_Data;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.Int32.data2)
  return data2_;
}
::mtproto::Int32_Data* Int32::release_data2() {
  // @@protoc_insertion_point(field_release:mtproto.Int32.data2)
  
  ::mtproto::Int32_Data* temp = data2_;
  data2_ = NULL;
  return temp;
}
void Int32::set_allocated_data2(::mtproto::Int32_Data* data2) {
  delete data2_;
  data2_ = data2;
  if (data2) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.Int32.data2)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TL_int32::kData2FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TL_int32::TL_int32()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_service_2etl_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.TL_int32)
}
TL_int32::TL_int32(const TL_int32& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_data2()) {
    data2_ = new ::mtproto::Int32_Data(*from.data2_);
  } else {
    data2_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:mtproto.TL_int32)
}

void TL_int32::SharedCtor() {
  data2_ = NULL;
  _cached_size_ = 0;
}

TL_int32::~TL_int32() {
  // @@protoc_insertion_point(destructor:mtproto.TL_int32)
  SharedDtor();
}

void TL_int32::SharedDtor() {
  if (this != internal_default_instance()) delete data2_;
}

void TL_int32::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TL_int32::descriptor() {
  protobuf_service_2etl_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_service_2etl_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TL_int32& TL_int32::default_instance() {
  protobuf_service_2etl_2eproto::InitDefaults();
  return *internal_default_instance();
}

TL_int32* TL_int32::New(::google::protobuf::Arena* arena) const {
  TL_int32* n = new TL_int32;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TL_int32::Swap(TL_int32* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TL_int32::InternalSwap(TL_int32* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata TL_int32::GetMetadata() const {
  protobuf_service_2etl_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_service_2etl_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TL_int32

// .mtproto.Int32_Data data2 = 2;
bool TL_int32::has_data2() const {
  return this != internal_default_instance() && data2_ != NULL;
}
void TL_int32::clear_data2() {
  if (GetArenaNoVirtual() == NULL && data2_ != NULL) delete data2_;
  data2_ = NULL;
}
const ::mtproto::Int32_Data& TL_int32::data2() const {
  const ::mtproto::Int32_Data* p = data2_;
  // @@protoc_insertion_point(field_get:mtproto.TL_int32.data2)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::Int32_Data*>(
      &::mtproto::_Int32_Data_default_instance_);
}
::mtproto::Int32_Data* TL_int32::mutable_data2() {
  
  if (data2_ == NULL) {
    data2_ = new ::mtproto::Int32_Data;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_int32.data2)
  return data2_;
}
::mtproto::Int32_Data* TL_int32::release_data2() {
  // @@protoc_insertion_point(field_release:mtproto.TL_int32.data2)
  
  ::mtproto::Int32_Data* temp = data2_;
  data2_ = NULL;
  return temp;
}
void TL_int32::set_allocated_data2(::mtproto::Int32_Data* data2) {
  delete data2_;
  data2_ = data2;
  if (data2) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_int32.data2)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Int64_Data::kVFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Int64_Data::Int64_Data()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_service_2etl_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.Int64_Data)
}
Int64_Data::Int64_Data(const Int64_Data& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  v_ = from.v_;
  // @@protoc_insertion_point(copy_constructor:mtproto.Int64_Data)
}

void Int64_Data::SharedCtor() {
  v_ = GOOGLE_LONGLONG(0);
  _cached_size_ = 0;
}

Int64_Data::~Int64_Data() {
  // @@protoc_insertion_point(destructor:mtproto.Int64_Data)
  SharedDtor();
}

void Int64_Data::SharedDtor() {
}

void Int64_Data::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Int64_Data::descriptor() {
  protobuf_service_2etl_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_service_2etl_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Int64_Data& Int64_Data::default_instance() {
  protobuf_service_2etl_2eproto::InitDefaults();
  return *internal_default_instance();
}

Int64_Data* Int64_Data::New(::google::protobuf::Arena* arena) const {
  Int64_Data* n = new Int64_Data;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Int64_Data::Swap(Int64_Data* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Int64_Data::InternalSwap(Int64_Data* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata Int64_Data::GetMetadata() const {
  protobuf_service_2etl_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_service_2etl_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Int64_Data

// int64 v = 1;
void Int64_Data::clear_v() {
  v_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 Int64_Data::v() const {
  // @@protoc_insertion_point(field_get:mtproto.Int64_Data.v)
  return v_;
}
void Int64_Data::set_v(::google::protobuf::int64 value) {
  
  v_ = value;
  // @@protoc_insertion_point(field_set:mtproto.Int64_Data.v)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Int64::kConstructorFieldNumber;
const int Int64::kData2FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Int64::Int64()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_service_2etl_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.Int64)
}
Int64::Int64(const Int64& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_data2()) {
    data2_ = new ::mtproto::Int64_Data(*from.data2_);
  } else {
    data2_ = NULL;
  }
  constructor_ = from.constructor_;
  // @@protoc_insertion_point(copy_constructor:mtproto.Int64)
}

void Int64::SharedCtor() {
  ::memset(&data2_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&constructor_) -
      reinterpret_cast<char*>(&data2_)) + sizeof(constructor_));
  _cached_size_ = 0;
}

Int64::~Int64() {
  // @@protoc_insertion_point(destructor:mtproto.Int64)
  SharedDtor();
}

void Int64::SharedDtor() {
  if (this != internal_default_instance()) delete data2_;
}

void Int64::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Int64::descriptor() {
  protobuf_service_2etl_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_service_2etl_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Int64& Int64::default_instance() {
  protobuf_service_2etl_2eproto::InitDefaults();
  return *internal_default_instance();
}

Int64* Int64::New(::google::protobuf::Arena* arena) const {
  Int64* n = new Int64;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Int64::Swap(Int64* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Int64::InternalSwap(Int64* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata Int64::GetMetadata() const {
  protobuf_service_2etl_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_service_2etl_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Int64

// .mtproto.TLConstructor constructor = 1;
void Int64::clear_constructor() {
  constructor_ = 0;
}
::mtproto::TLConstructor Int64::constructor() const {
  // @@protoc_insertion_point(field_get:mtproto.Int64.constructor)
  return static_cast< ::mtproto::TLConstructor >(constructor_);
}
void Int64::set_constructor(::mtproto::TLConstructor value) {
  
  constructor_ = value;
  // @@protoc_insertion_point(field_set:mtproto.Int64.constructor)
}

// .mtproto.Int64_Data data2 = 2;
bool Int64::has_data2() const {
  return this != internal_default_instance() && data2_ != NULL;
}
void Int64::clear_data2() {
  if (GetArenaNoVirtual() == NULL && data2_ != NULL) delete data2_;
  data2_ = NULL;
}
const ::mtproto::Int64_Data& Int64::data2() const {
  const ::mtproto::Int64_Data* p = data2_;
  // @@protoc_insertion_point(field_get:mtproto.Int64.data2)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::Int64_Data*>(
      &::mtproto::_Int64_Data_default_instance_);
}
::mtproto::Int64_Data* Int64::mutable_data2() {
  
  if (data2_ == NULL) {
    data2_ = new ::mtproto::Int64_Data;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.Int64.data2)
  return data2_;
}
::mtproto::Int64_Data* Int64::release_data2() {
  // @@protoc_insertion_point(field_release:mtproto.Int64.data2)
  
  ::mtproto::Int64_Data* temp = data2_;
  data2_ = NULL;
  return temp;
}
void Int64::set_allocated_data2(::mtproto::Int64_Data* data2) {
  delete data2_;
  data2_ = data2;
  if (data2) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.Int64.data2)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TL_long::kData2FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TL_long::TL_long()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_service_2etl_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.TL_long)
}
TL_long::TL_long(const TL_long& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_data2()) {
    data2_ = new ::mtproto::Int64_Data(*from.data2_);
  } else {
    data2_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:mtproto.TL_long)
}

void TL_long::SharedCtor() {
  data2_ = NULL;
  _cached_size_ = 0;
}

TL_long::~TL_long() {
  // @@protoc_insertion_point(destructor:mtproto.TL_long)
  SharedDtor();
}

void TL_long::SharedDtor() {
  if (this != internal_default_instance()) delete data2_;
}

void TL_long::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TL_long::descriptor() {
  protobuf_service_2etl_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_service_2etl_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TL_long& TL_long::default_instance() {
  protobuf_service_2etl_2eproto::InitDefaults();
  return *internal_default_instance();
}

TL_long* TL_long::New(::google::protobuf::Arena* arena) const {
  TL_long* n = new TL_long;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TL_long::Swap(TL_long* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TL_long::InternalSwap(TL_long* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata TL_long::GetMetadata() const {
  protobuf_service_2etl_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_service_2etl_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TL_long

// .mtproto.Int64_Data data2 = 2;
bool TL_long::has_data2() const {
  return this != internal_default_instance() && data2_ != NULL;
}
void TL_long::clear_data2() {
  if (GetArenaNoVirtual() == NULL && data2_ != NULL) delete data2_;
  data2_ = NULL;
}
const ::mtproto::Int64_Data& TL_long::data2() const {
  const ::mtproto::Int64_Data* p = data2_;
  // @@protoc_insertion_point(field_get:mtproto.TL_long.data2)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::Int64_Data*>(
      &::mtproto::_Int64_Data_default_instance_);
}
::mtproto::Int64_Data* TL_long::mutable_data2() {
  
  if (data2_ == NULL) {
    data2_ = new ::mtproto::Int64_Data;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_long.data2)
  return data2_;
}
::mtproto::Int64_Data* TL_long::release_data2() {
  // @@protoc_insertion_point(field_release:mtproto.TL_long.data2)
  
  ::mtproto::Int64_Data* temp = data2_;
  data2_ = NULL;
  return temp;
}
void TL_long::set_allocated_data2(::mtproto::Int64_Data* data2) {
  delete data2_;
  data2_ = data2;
  if (data2) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_long.data2)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AuthKeyInfo_Data::kAuthKeyIdFieldNumber;
const int AuthKeyInfo_Data::kAuthKeyFieldNumber;
const int AuthKeyInfo_Data::kFutureSaltFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AuthKeyInfo_Data::AuthKeyInfo_Data()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_service_2etl_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.AuthKeyInfo_Data)
}
AuthKeyInfo_Data::AuthKeyInfo_Data(const AuthKeyInfo_Data& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  auth_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.auth_key().size() > 0) {
    auth_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.auth_key_);
  }
  if (from.has_future_salt()) {
    future_salt_ = new ::mtproto::FutureSalt(*from.future_salt_);
  } else {
    future_salt_ = NULL;
  }
  auth_key_id_ = from.auth_key_id_;
  // @@protoc_insertion_point(copy_constructor:mtproto.AuthKeyInfo_Data)
}

void AuthKeyInfo_Data::SharedCtor() {
  auth_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&future_salt_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&auth_key_id_) -
      reinterpret_cast<char*>(&future_salt_)) + sizeof(auth_key_id_));
  _cached_size_ = 0;
}

AuthKeyInfo_Data::~AuthKeyInfo_Data() {
  // @@protoc_insertion_point(destructor:mtproto.AuthKeyInfo_Data)
  SharedDtor();
}

void AuthKeyInfo_Data::SharedDtor() {
  auth_key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete future_salt_;
}

void AuthKeyInfo_Data::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AuthKeyInfo_Data::descriptor() {
  protobuf_service_2etl_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_service_2etl_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AuthKeyInfo_Data& AuthKeyInfo_Data::default_instance() {
  protobuf_service_2etl_2eproto::InitDefaults();
  return *internal_default_instance();
}

AuthKeyInfo_Data* AuthKeyInfo_Data::New(::google::protobuf::Arena* arena) const {
  AuthKeyInfo_Data* n = new AuthKeyInfo_Data;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AuthKeyInfo_Data::Swap(AuthKeyInfo_Data* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AuthKeyInfo_Data::InternalSwap(AuthKeyInfo_Data* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata AuthKeyInfo_Data::GetMetadata() const {
  protobuf_service_2etl_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_service_2etl_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AuthKeyInfo_Data

// int64 auth_key_id = 1;
void AuthKeyInfo_Data::clear_auth_key_id() {
  auth_key_id_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 AuthKeyInfo_Data::auth_key_id() const {
  // @@protoc_insertion_point(field_get:mtproto.AuthKeyInfo_Data.auth_key_id)
  return auth_key_id_;
}
void AuthKeyInfo_Data::set_auth_key_id(::google::protobuf::int64 value) {
  
  auth_key_id_ = value;
  // @@protoc_insertion_point(field_set:mtproto.AuthKeyInfo_Data.auth_key_id)
}

// bytes auth_key = 2;
void AuthKeyInfo_Data::clear_auth_key() {
  auth_key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& AuthKeyInfo_Data::auth_key() const {
  // @@protoc_insertion_point(field_get:mtproto.AuthKeyInfo_Data.auth_key)
  return auth_key_.GetNoArena();
}
void AuthKeyInfo_Data::set_auth_key(const ::std::string& value) {
  
  auth_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtproto.AuthKeyInfo_Data.auth_key)
}
#if LANG_CXX11
void AuthKeyInfo_Data::set_auth_key(::std::string&& value) {
  
  auth_key_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mtproto.AuthKeyInfo_Data.auth_key)
}
#endif
void AuthKeyInfo_Data::set_auth_key(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  auth_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtproto.AuthKeyInfo_Data.auth_key)
}
void AuthKeyInfo_Data::set_auth_key(const void* value, size_t size) {
  
  auth_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtproto.AuthKeyInfo_Data.auth_key)
}
::std::string* AuthKeyInfo_Data::mutable_auth_key() {
  
  // @@protoc_insertion_point(field_mutable:mtproto.AuthKeyInfo_Data.auth_key)
  return auth_key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AuthKeyInfo_Data::release_auth_key() {
  // @@protoc_insertion_point(field_release:mtproto.AuthKeyInfo_Data.auth_key)
  
  return auth_key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AuthKeyInfo_Data::set_allocated_auth_key(::std::string* auth_key) {
  if (auth_key != NULL) {
    
  } else {
    
  }
  auth_key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), auth_key);
  // @@protoc_insertion_point(field_set_allocated:mtproto.AuthKeyInfo_Data.auth_key)
}

// .mtproto.FutureSalt future_salt = 3;
bool AuthKeyInfo_Data::has_future_salt() const {
  return this != internal_default_instance() && future_salt_ != NULL;
}
void AuthKeyInfo_Data::clear_future_salt() {
  if (GetArenaNoVirtual() == NULL && future_salt_ != NULL) delete future_salt_;
  future_salt_ = NULL;
}
const ::mtproto::FutureSalt& AuthKeyInfo_Data::future_salt() const {
  const ::mtproto::FutureSalt* p = future_salt_;
  // @@protoc_insertion_point(field_get:mtproto.AuthKeyInfo_Data.future_salt)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::FutureSalt*>(
      &::mtproto::_FutureSalt_default_instance_);
}
::mtproto::FutureSalt* AuthKeyInfo_Data::mutable_future_salt() {
  
  if (future_salt_ == NULL) {
    future_salt_ = new ::mtproto::FutureSalt;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.AuthKeyInfo_Data.future_salt)
  return future_salt_;
}
::mtproto::FutureSalt* AuthKeyInfo_Data::release_future_salt() {
  // @@protoc_insertion_point(field_release:mtproto.AuthKeyInfo_Data.future_salt)
  
  ::mtproto::FutureSalt* temp = future_salt_;
  future_salt_ = NULL;
  return temp;
}
void AuthKeyInfo_Data::set_allocated_future_salt(::mtproto::FutureSalt* future_salt) {
  delete future_salt_;
  future_salt_ = future_salt;
  if (future_salt) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.AuthKeyInfo_Data.future_salt)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AuthKeyInfo::kConstructorFieldNumber;
const int AuthKeyInfo::kData2FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AuthKeyInfo::AuthKeyInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_service_2etl_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.AuthKeyInfo)
}
AuthKeyInfo::AuthKeyInfo(const AuthKeyInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_data2()) {
    data2_ = new ::mtproto::AuthKeyInfo_Data(*from.data2_);
  } else {
    data2_ = NULL;
  }
  constructor_ = from.constructor_;
  // @@protoc_insertion_point(copy_constructor:mtproto.AuthKeyInfo)
}

void AuthKeyInfo::SharedCtor() {
  ::memset(&data2_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&constructor_) -
      reinterpret_cast<char*>(&data2_)) + sizeof(constructor_));
  _cached_size_ = 0;
}

AuthKeyInfo::~AuthKeyInfo() {
  // @@protoc_insertion_point(destructor:mtproto.AuthKeyInfo)
  SharedDtor();
}

void AuthKeyInfo::SharedDtor() {
  if (this != internal_default_instance()) delete data2_;
}

void AuthKeyInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AuthKeyInfo::descriptor() {
  protobuf_service_2etl_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_service_2etl_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AuthKeyInfo& AuthKeyInfo::default_instance() {
  protobuf_service_2etl_2eproto::InitDefaults();
  return *internal_default_instance();
}

AuthKeyInfo* AuthKeyInfo::New(::google::protobuf::Arena* arena) const {
  AuthKeyInfo* n = new AuthKeyInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AuthKeyInfo::Swap(AuthKeyInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AuthKeyInfo::InternalSwap(AuthKeyInfo* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata AuthKeyInfo::GetMetadata() const {
  protobuf_service_2etl_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_service_2etl_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AuthKeyInfo

// .mtproto.TLConstructor constructor = 1;
void AuthKeyInfo::clear_constructor() {
  constructor_ = 0;
}
::mtproto::TLConstructor AuthKeyInfo::constructor() const {
  // @@protoc_insertion_point(field_get:mtproto.AuthKeyInfo.constructor)
  return static_cast< ::mtproto::TLConstructor >(constructor_);
}
void AuthKeyInfo::set_constructor(::mtproto::TLConstructor value) {
  
  constructor_ = value;
  // @@protoc_insertion_point(field_set:mtproto.AuthKeyInfo.constructor)
}

// .mtproto.AuthKeyInfo_Data data2 = 2;
bool AuthKeyInfo::has_data2() const {
  return this != internal_default_instance() && data2_ != NULL;
}
void AuthKeyInfo::clear_data2() {
  if (GetArenaNoVirtual() == NULL && data2_ != NULL) delete data2_;
  data2_ = NULL;
}
const ::mtproto::AuthKeyInfo_Data& AuthKeyInfo::data2() const {
  const ::mtproto::AuthKeyInfo_Data* p = data2_;
  // @@protoc_insertion_point(field_get:mtproto.AuthKeyInfo.data2)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::AuthKeyInfo_Data*>(
      &::mtproto::_AuthKeyInfo_Data_default_instance_);
}
::mtproto::AuthKeyInfo_Data* AuthKeyInfo::mutable_data2() {
  
  if (data2_ == NULL) {
    data2_ = new ::mtproto::AuthKeyInfo_Data;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.AuthKeyInfo.data2)
  return data2_;
}
::mtproto::AuthKeyInfo_Data* AuthKeyInfo::release_data2() {
  // @@protoc_insertion_point(field_release:mtproto.AuthKeyInfo.data2)
  
  ::mtproto::AuthKeyInfo_Data* temp = data2_;
  data2_ = NULL;
  return temp;
}
void AuthKeyInfo::set_allocated_data2(::mtproto::AuthKeyInfo_Data* data2) {
  delete data2_;
  data2_ = data2;
  if (data2) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.AuthKeyInfo.data2)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TL_authKeyInfo::kData2FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TL_authKeyInfo::TL_authKeyInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_service_2etl_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.TL_authKeyInfo)
}
TL_authKeyInfo::TL_authKeyInfo(const TL_authKeyInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_data2()) {
    data2_ = new ::mtproto::AuthKeyInfo_Data(*from.data2_);
  } else {
    data2_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:mtproto.TL_authKeyInfo)
}

void TL_authKeyInfo::SharedCtor() {
  data2_ = NULL;
  _cached_size_ = 0;
}

TL_authKeyInfo::~TL_authKeyInfo() {
  // @@protoc_insertion_point(destructor:mtproto.TL_authKeyInfo)
  SharedDtor();
}

void TL_authKeyInfo::SharedDtor() {
  if (this != internal_default_instance()) delete data2_;
}

void TL_authKeyInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TL_authKeyInfo::descriptor() {
  protobuf_service_2etl_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_service_2etl_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TL_authKeyInfo& TL_authKeyInfo::default_instance() {
  protobuf_service_2etl_2eproto::InitDefaults();
  return *internal_default_instance();
}

TL_authKeyInfo* TL_authKeyInfo::New(::google::protobuf::Arena* arena) const {
  TL_authKeyInfo* n = new TL_authKeyInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TL_authKeyInfo::Swap(TL_authKeyInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TL_authKeyInfo::InternalSwap(TL_authKeyInfo* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata TL_authKeyInfo::GetMetadata() const {
  protobuf_service_2etl_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_service_2etl_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TL_authKeyInfo

// .mtproto.AuthKeyInfo_Data data2 = 2;
bool TL_authKeyInfo::has_data2() const {
  return this != internal_default_instance() && data2_ != NULL;
}
void TL_authKeyInfo::clear_data2() {
  if (GetArenaNoVirtual() == NULL && data2_ != NULL) delete data2_;
  data2_ = NULL;
}
const ::mtproto::AuthKeyInfo_Data& TL_authKeyInfo::data2() const {
  const ::mtproto::AuthKeyInfo_Data* p = data2_;
  // @@protoc_insertion_point(field_get:mtproto.TL_authKeyInfo.data2)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::AuthKeyInfo_Data*>(
      &::mtproto::_AuthKeyInfo_Data_default_instance_);
}
::mtproto::AuthKeyInfo_Data* TL_authKeyInfo::mutable_data2() {
  
  if (data2_ == NULL) {
    data2_ = new ::mtproto::AuthKeyInfo_Data;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_authKeyInfo.data2)
  return data2_;
}
::mtproto::AuthKeyInfo_Data* TL_authKeyInfo::release_data2() {
  // @@protoc_insertion_point(field_release:mtproto.TL_authKeyInfo.data2)
  
  ::mtproto::AuthKeyInfo_Data* temp = data2_;
  data2_ = NULL;
  return temp;
}
void TL_authKeyInfo::set_allocated_data2(::mtproto::AuthKeyInfo_Data* data2) {
  delete data2_;
  data2_ = data2;
  if (data2) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_authKeyInfo.data2)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ClientSession_Data::kAuthKeyIdFieldNumber;
const int ClientSession_Data::kIpFieldNumber;
const int ClientSession_Data::kLayerFieldNumber;
const int ClientSession_Data::kApiIdFieldNumber;
const int ClientSession_Data::kDeviceModelFieldNumber;
const int ClientSession_Data::kSystemVersionFieldNumber;
const int ClientSession_Data::kAppVersionFieldNumber;
const int ClientSession_Data::kSystemLangCodeFieldNumber;
const int ClientSession_Data::kLangPackFieldNumber;
const int ClientSession_Data::kLangCodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ClientSession_Data::ClientSession_Data()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_service_2etl_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.ClientSession_Data)
}
ClientSession_Data::ClientSession_Data(const ClientSession_Data& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ip_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.ip().size() > 0) {
    ip_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ip_);
  }
  device_model_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.device_model().size() > 0) {
    device_model_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.device_model_);
  }
  system_version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.system_version().size() > 0) {
    system_version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.system_version_);
  }
  app_version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.app_version().size() > 0) {
    app_version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.app_version_);
  }
  system_lang_code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.system_lang_code().size() > 0) {
    system_lang_code_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.system_lang_code_);
  }
  lang_pack_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.lang_pack().size() > 0) {
    lang_pack_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.lang_pack_);
  }
  lang_code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.lang_code().size() > 0) {
    lang_code_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.lang_code_);
  }
  ::memcpy(&auth_key_id_, &from.auth_key_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&api_id_) -
    reinterpret_cast<char*>(&auth_key_id_)) + sizeof(api_id_));
  // @@protoc_insertion_point(copy_constructor:mtproto.ClientSession_Data)
}

void ClientSession_Data::SharedCtor() {
  ip_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  device_model_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  system_version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  app_version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  system_lang_code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  lang_pack_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  lang_code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&auth_key_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&api_id_) -
      reinterpret_cast<char*>(&auth_key_id_)) + sizeof(api_id_));
  _cached_size_ = 0;
}

ClientSession_Data::~ClientSession_Data() {
  // @@protoc_insertion_point(destructor:mtproto.ClientSession_Data)
  SharedDtor();
}

void ClientSession_Data::SharedDtor() {
  ip_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  device_model_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  system_version_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  app_version_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  system_lang_code_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  lang_pack_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  lang_code_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ClientSession_Data::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ClientSession_Data::descriptor() {
  protobuf_service_2etl_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_service_2etl_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ClientSession_Data& ClientSession_Data::default_instance() {
  protobuf_service_2etl_2eproto::InitDefaults();
  return *internal_default_instance();
}

ClientSession_Data* ClientSession_Data::New(::google::protobuf::Arena* arena) const {
  ClientSession_Data* n = new ClientSession_Data;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ClientSession_Data::Swap(ClientSession_Data* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ClientSession_Data::InternalSwap(ClientSession_Data* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata ClientSession_Data::GetMetadata() const {
  protobuf_service_2etl_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_service_2etl_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ClientSession_Data

// int64 auth_key_id = 1;
void ClientSession_Data::clear_auth_key_id() {
  auth_key_id_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 ClientSession_Data::auth_key_id() const {
  // @@protoc_insertion_point(field_get:mtproto.ClientSession_Data.auth_key_id)
  return auth_key_id_;
}
void ClientSession_Data::set_auth_key_id(::google::protobuf::int64 value) {
  
  auth_key_id_ = value;
  // @@protoc_insertion_point(field_set:mtproto.ClientSession_Data.auth_key_id)
}

// string ip = 2;
void ClientSession_Data::clear_ip() {
  ip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ClientSession_Data::ip() const {
  // @@protoc_insertion_point(field_get:mtproto.ClientSession_Data.ip)
  return ip_.GetNoArena();
}
void ClientSession_Data::set_ip(const ::std::string& value) {
  
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtproto.ClientSession_Data.ip)
}
#if LANG_CXX11
void ClientSession_Data::set_ip(::std::string&& value) {
  
  ip_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mtproto.ClientSession_Data.ip)
}
#endif
void ClientSession_Data::set_ip(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtproto.ClientSession_Data.ip)
}
void ClientSession_Data::set_ip(const char* value, size_t size) {
  
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtproto.ClientSession_Data.ip)
}
::std::string* ClientSession_Data::mutable_ip() {
  
  // @@protoc_insertion_point(field_mutable:mtproto.ClientSession_Data.ip)
  return ip_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ClientSession_Data::release_ip() {
  // @@protoc_insertion_point(field_release:mtproto.ClientSession_Data.ip)
  
  return ip_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ClientSession_Data::set_allocated_ip(::std::string* ip) {
  if (ip != NULL) {
    
  } else {
    
  }
  ip_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ip);
  // @@protoc_insertion_point(field_set_allocated:mtproto.ClientSession_Data.ip)
}

// int32 layer = 3;
void ClientSession_Data::clear_layer() {
  layer_ = 0;
}
::google::protobuf::int32 ClientSession_Data::layer() const {
  // @@protoc_insertion_point(field_get:mtproto.ClientSession_Data.layer)
  return layer_;
}
void ClientSession_Data::set_layer(::google::protobuf::int32 value) {
  
  layer_ = value;
  // @@protoc_insertion_point(field_set:mtproto.ClientSession_Data.layer)
}

// int32 api_id = 4;
void ClientSession_Data::clear_api_id() {
  api_id_ = 0;
}
::google::protobuf::int32 ClientSession_Data::api_id() const {
  // @@protoc_insertion_point(field_get:mtproto.ClientSession_Data.api_id)
  return api_id_;
}
void ClientSession_Data::set_api_id(::google::protobuf::int32 value) {
  
  api_id_ = value;
  // @@protoc_insertion_point(field_set:mtproto.ClientSession_Data.api_id)
}

// string device_model = 5;
void ClientSession_Data::clear_device_model() {
  device_model_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ClientSession_Data::device_model() const {
  // @@protoc_insertion_point(field_get:mtproto.ClientSession_Data.device_model)
  return device_model_.GetNoArena();
}
void ClientSession_Data::set_device_model(const ::std::string& value) {
  
  device_model_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtproto.ClientSession_Data.device_model)
}
#if LANG_CXX11
void ClientSession_Data::set_device_model(::std::string&& value) {
  
  device_model_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mtproto.ClientSession_Data.device_model)
}
#endif
void ClientSession_Data::set_device_model(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  device_model_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtproto.ClientSession_Data.device_model)
}
void ClientSession_Data::set_device_model(const char* value, size_t size) {
  
  device_model_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtproto.ClientSession_Data.device_model)
}
::std::string* ClientSession_Data::mutable_device_model() {
  
  // @@protoc_insertion_point(field_mutable:mtproto.ClientSession_Data.device_model)
  return device_model_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ClientSession_Data::release_device_model() {
  // @@protoc_insertion_point(field_release:mtproto.ClientSession_Data.device_model)
  
  return device_model_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ClientSession_Data::set_allocated_device_model(::std::string* device_model) {
  if (device_model != NULL) {
    
  } else {
    
  }
  device_model_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), device_model);
  // @@protoc_insertion_point(field_set_allocated:mtproto.ClientSession_Data.device_model)
}

// string system_version = 6;
void ClientSession_Data::clear_system_version() {
  system_version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ClientSession_Data::system_version() const {
  // @@protoc_insertion_point(field_get:mtproto.ClientSession_Data.system_version)
  return system_version_.GetNoArena();
}
void ClientSession_Data::set_system_version(const ::std::string& value) {
  
  system_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtproto.ClientSession_Data.system_version)
}
#if LANG_CXX11
void ClientSession_Data::set_system_version(::std::string&& value) {
  
  system_version_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mtproto.ClientSession_Data.system_version)
}
#endif
void ClientSession_Data::set_system_version(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  system_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtproto.ClientSession_Data.system_version)
}
void ClientSession_Data::set_system_version(const char* value, size_t size) {
  
  system_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtproto.ClientSession_Data.system_version)
}
::std::string* ClientSession_Data::mutable_system_version() {
  
  // @@protoc_insertion_point(field_mutable:mtproto.ClientSession_Data.system_version)
  return system_version_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ClientSession_Data::release_system_version() {
  // @@protoc_insertion_point(field_release:mtproto.ClientSession_Data.system_version)
  
  return system_version_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ClientSession_Data::set_allocated_system_version(::std::string* system_version) {
  if (system_version != NULL) {
    
  } else {
    
  }
  system_version_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), system_version);
  // @@protoc_insertion_point(field_set_allocated:mtproto.ClientSession_Data.system_version)
}

// string app_version = 7;
void ClientSession_Data::clear_app_version() {
  app_version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ClientSession_Data::app_version() const {
  // @@protoc_insertion_point(field_get:mtproto.ClientSession_Data.app_version)
  return app_version_.GetNoArena();
}
void ClientSession_Data::set_app_version(const ::std::string& value) {
  
  app_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtproto.ClientSession_Data.app_version)
}
#if LANG_CXX11
void ClientSession_Data::set_app_version(::std::string&& value) {
  
  app_version_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mtproto.ClientSession_Data.app_version)
}
#endif
void ClientSession_Data::set_app_version(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  app_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtproto.ClientSession_Data.app_version)
}
void ClientSession_Data::set_app_version(const char* value, size_t size) {
  
  app_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtproto.ClientSession_Data.app_version)
}
::std::string* ClientSession_Data::mutable_app_version() {
  
  // @@protoc_insertion_point(field_mutable:mtproto.ClientSession_Data.app_version)
  return app_version_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ClientSession_Data::release_app_version() {
  // @@protoc_insertion_point(field_release:mtproto.ClientSession_Data.app_version)
  
  return app_version_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ClientSession_Data::set_allocated_app_version(::std::string* app_version) {
  if (app_version != NULL) {
    
  } else {
    
  }
  app_version_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), app_version);
  // @@protoc_insertion_point(field_set_allocated:mtproto.ClientSession_Data.app_version)
}

// string system_lang_code = 8;
void ClientSession_Data::clear_system_lang_code() {
  system_lang_code_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ClientSession_Data::system_lang_code() const {
  // @@protoc_insertion_point(field_get:mtproto.ClientSession_Data.system_lang_code)
  return system_lang_code_.GetNoArena();
}
void ClientSession_Data::set_system_lang_code(const ::std::string& value) {
  
  system_lang_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtproto.ClientSession_Data.system_lang_code)
}
#if LANG_CXX11
void ClientSession_Data::set_system_lang_code(::std::string&& value) {
  
  system_lang_code_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mtproto.ClientSession_Data.system_lang_code)
}
#endif
void ClientSession_Data::set_system_lang_code(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  system_lang_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtproto.ClientSession_Data.system_lang_code)
}
void ClientSession_Data::set_system_lang_code(const char* value, size_t size) {
  
  system_lang_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtproto.ClientSession_Data.system_lang_code)
}
::std::string* ClientSession_Data::mutable_system_lang_code() {
  
  // @@protoc_insertion_point(field_mutable:mtproto.ClientSession_Data.system_lang_code)
  return system_lang_code_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ClientSession_Data::release_system_lang_code() {
  // @@protoc_insertion_point(field_release:mtproto.ClientSession_Data.system_lang_code)
  
  return system_lang_code_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ClientSession_Data::set_allocated_system_lang_code(::std::string* system_lang_code) {
  if (system_lang_code != NULL) {
    
  } else {
    
  }
  system_lang_code_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), system_lang_code);
  // @@protoc_insertion_point(field_set_allocated:mtproto.ClientSession_Data.system_lang_code)
}

// string lang_pack = 9;
void ClientSession_Data::clear_lang_pack() {
  lang_pack_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ClientSession_Data::lang_pack() const {
  // @@protoc_insertion_point(field_get:mtproto.ClientSession_Data.lang_pack)
  return lang_pack_.GetNoArena();
}
void ClientSession_Data::set_lang_pack(const ::std::string& value) {
  
  lang_pack_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtproto.ClientSession_Data.lang_pack)
}
#if LANG_CXX11
void ClientSession_Data::set_lang_pack(::std::string&& value) {
  
  lang_pack_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mtproto.ClientSession_Data.lang_pack)
}
#endif
void ClientSession_Data::set_lang_pack(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  lang_pack_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtproto.ClientSession_Data.lang_pack)
}
void ClientSession_Data::set_lang_pack(const char* value, size_t size) {
  
  lang_pack_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtproto.ClientSession_Data.lang_pack)
}
::std::string* ClientSession_Data::mutable_lang_pack() {
  
  // @@protoc_insertion_point(field_mutable:mtproto.ClientSession_Data.lang_pack)
  return lang_pack_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ClientSession_Data::release_lang_pack() {
  // @@protoc_insertion_point(field_release:mtproto.ClientSession_Data.lang_pack)
  
  return lang_pack_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ClientSession_Data::set_allocated_lang_pack(::std::string* lang_pack) {
  if (lang_pack != NULL) {
    
  } else {
    
  }
  lang_pack_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), lang_pack);
  // @@protoc_insertion_point(field_set_allocated:mtproto.ClientSession_Data.lang_pack)
}

// string lang_code = 10;
void ClientSession_Data::clear_lang_code() {
  lang_code_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ClientSession_Data::lang_code() const {
  // @@protoc_insertion_point(field_get:mtproto.ClientSession_Data.lang_code)
  return lang_code_.GetNoArena();
}
void ClientSession_Data::set_lang_code(const ::std::string& value) {
  
  lang_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtproto.ClientSession_Data.lang_code)
}
#if LANG_CXX11
void ClientSession_Data::set_lang_code(::std::string&& value) {
  
  lang_code_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mtproto.ClientSession_Data.lang_code)
}
#endif
void ClientSession_Data::set_lang_code(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  lang_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtproto.ClientSession_Data.lang_code)
}
void ClientSession_Data::set_lang_code(const char* value, size_t size) {
  
  lang_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtproto.ClientSession_Data.lang_code)
}
::std::string* ClientSession_Data::mutable_lang_code() {
  
  // @@protoc_insertion_point(field_mutable:mtproto.ClientSession_Data.lang_code)
  return lang_code_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ClientSession_Data::release_lang_code() {
  // @@protoc_insertion_point(field_release:mtproto.ClientSession_Data.lang_code)
  
  return lang_code_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ClientSession_Data::set_allocated_lang_code(::std::string* lang_code) {
  if (lang_code != NULL) {
    
  } else {
    
  }
  lang_code_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), lang_code);
  // @@protoc_insertion_point(field_set_allocated:mtproto.ClientSession_Data.lang_code)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ClientSession::kConstructorFieldNumber;
const int ClientSession::kData2FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ClientSession::ClientSession()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_service_2etl_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.ClientSession)
}
ClientSession::ClientSession(const ClientSession& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_data2()) {
    data2_ = new ::mtproto::ClientSession_Data(*from.data2_);
  } else {
    data2_ = NULL;
  }
  constructor_ = from.constructor_;
  // @@protoc_insertion_point(copy_constructor:mtproto.ClientSession)
}

void ClientSession::SharedCtor() {
  ::memset(&data2_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&constructor_) -
      reinterpret_cast<char*>(&data2_)) + sizeof(constructor_));
  _cached_size_ = 0;
}

ClientSession::~ClientSession() {
  // @@protoc_insertion_point(destructor:mtproto.ClientSession)
  SharedDtor();
}

void ClientSession::SharedDtor() {
  if (this != internal_default_instance()) delete data2_;
}

void ClientSession::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ClientSession::descriptor() {
  protobuf_service_2etl_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_service_2etl_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ClientSession& ClientSession::default_instance() {
  protobuf_service_2etl_2eproto::InitDefaults();
  return *internal_default_instance();
}

ClientSession* ClientSession::New(::google::protobuf::Arena* arena) const {
  ClientSession* n = new ClientSession;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ClientSession::Swap(ClientSession* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ClientSession::InternalSwap(ClientSession* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata ClientSession::GetMetadata() const {
  protobuf_service_2etl_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_service_2etl_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ClientSession

// .mtproto.TLConstructor constructor = 1;
void ClientSession::clear_constructor() {
  constructor_ = 0;
}
::mtproto::TLConstructor ClientSession::constructor() const {
  // @@protoc_insertion_point(field_get:mtproto.ClientSession.constructor)
  return static_cast< ::mtproto::TLConstructor >(constructor_);
}
void ClientSession::set_constructor(::mtproto::TLConstructor value) {
  
  constructor_ = value;
  // @@protoc_insertion_point(field_set:mtproto.ClientSession.constructor)
}

// .mtproto.ClientSession_Data data2 = 2;
bool ClientSession::has_data2() const {
  return this != internal_default_instance() && data2_ != NULL;
}
void ClientSession::clear_data2() {
  if (GetArenaNoVirtual() == NULL && data2_ != NULL) delete data2_;
  data2_ = NULL;
}
const ::mtproto::ClientSession_Data& ClientSession::data2() const {
  const ::mtproto::ClientSession_Data* p = data2_;
  // @@protoc_insertion_point(field_get:mtproto.ClientSession.data2)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::ClientSession_Data*>(
      &::mtproto::_ClientSession_Data_default_instance_);
}
::mtproto::ClientSession_Data* ClientSession::mutable_data2() {
  
  if (data2_ == NULL) {
    data2_ = new ::mtproto::ClientSession_Data;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.ClientSession.data2)
  return data2_;
}
::mtproto::ClientSession_Data* ClientSession::release_data2() {
  // @@protoc_insertion_point(field_release:mtproto.ClientSession.data2)
  
  ::mtproto::ClientSession_Data* temp = data2_;
  data2_ = NULL;
  return temp;
}
void ClientSession::set_allocated_data2(::mtproto::ClientSession_Data* data2) {
  delete data2_;
  data2_ = data2;
  if (data2) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.ClientSession.data2)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TL_clientSessionInfo::kData2FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TL_clientSessionInfo::TL_clientSessionInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_service_2etl_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.TL_clientSessionInfo)
}
TL_clientSessionInfo::TL_clientSessionInfo(const TL_clientSessionInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_data2()) {
    data2_ = new ::mtproto::ClientSession_Data(*from.data2_);
  } else {
    data2_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:mtproto.TL_clientSessionInfo)
}

void TL_clientSessionInfo::SharedCtor() {
  data2_ = NULL;
  _cached_size_ = 0;
}

TL_clientSessionInfo::~TL_clientSessionInfo() {
  // @@protoc_insertion_point(destructor:mtproto.TL_clientSessionInfo)
  SharedDtor();
}

void TL_clientSessionInfo::SharedDtor() {
  if (this != internal_default_instance()) delete data2_;
}

void TL_clientSessionInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TL_clientSessionInfo::descriptor() {
  protobuf_service_2etl_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_service_2etl_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TL_clientSessionInfo& TL_clientSessionInfo::default_instance() {
  protobuf_service_2etl_2eproto::InitDefaults();
  return *internal_default_instance();
}

TL_clientSessionInfo* TL_clientSessionInfo::New(::google::protobuf::Arena* arena) const {
  TL_clientSessionInfo* n = new TL_clientSessionInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TL_clientSessionInfo::Swap(TL_clientSessionInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TL_clientSessionInfo::InternalSwap(TL_clientSessionInfo* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata TL_clientSessionInfo::GetMetadata() const {
  protobuf_service_2etl_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_service_2etl_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TL_clientSessionInfo

// .mtproto.ClientSession_Data data2 = 2;
bool TL_clientSessionInfo::has_data2() const {
  return this != internal_default_instance() && data2_ != NULL;
}
void TL_clientSessionInfo::clear_data2() {
  if (GetArenaNoVirtual() == NULL && data2_ != NULL) delete data2_;
  data2_ = NULL;
}
const ::mtproto::ClientSession_Data& TL_clientSessionInfo::data2() const {
  const ::mtproto::ClientSession_Data* p = data2_;
  // @@protoc_insertion_point(field_get:mtproto.TL_clientSessionInfo.data2)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::ClientSession_Data*>(
      &::mtproto::_ClientSession_Data_default_instance_);
}
::mtproto::ClientSession_Data* TL_clientSessionInfo::mutable_data2() {
  
  if (data2_ == NULL) {
    data2_ = new ::mtproto::ClientSession_Data;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_clientSessionInfo.data2)
  return data2_;
}
::mtproto::ClientSession_Data* TL_clientSessionInfo::release_data2() {
  // @@protoc_insertion_point(field_release:mtproto.TL_clientSessionInfo.data2)
  
  ::mtproto::ClientSession_Data* temp = data2_;
  data2_ = NULL;
  return temp;
}
void TL_clientSessionInfo::set_allocated_data2(::mtproto::ClientSession_Data* data2) {
  delete data2_;
  data2_ = data2;
  if (data2) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_clientSessionInfo.data2)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TL_session_setClientSessionInfo::kSessionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TL_session_setClientSessionInfo::TL_session_setClientSessionInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_service_2etl_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.TL_session_setClientSessionInfo)
}
TL_session_setClientSessionInfo::TL_session_setClientSessionInfo(const TL_session_setClientSessionInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_session()) {
    session_ = new ::mtproto::ClientSession(*from.session_);
  } else {
    session_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:mtproto.TL_session_setClientSessionInfo)
}

void TL_session_setClientSessionInfo::SharedCtor() {
  session_ = NULL;
  _cached_size_ = 0;
}

TL_session_setClientSessionInfo::~TL_session_setClientSessionInfo() {
  // @@protoc_insertion_point(destructor:mtproto.TL_session_setClientSessionInfo)
  SharedDtor();
}

void TL_session_setClientSessionInfo::SharedDtor() {
  if (this != internal_default_instance()) delete session_;
}

void TL_session_setClientSessionInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TL_session_setClientSessionInfo::descriptor() {
  protobuf_service_2etl_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_service_2etl_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TL_session_setClientSessionInfo& TL_session_setClientSessionInfo::default_instance() {
  protobuf_service_2etl_2eproto::InitDefaults();
  return *internal_default_instance();
}

TL_session_setClientSessionInfo* TL_session_setClientSessionInfo::New(::google::protobuf::Arena* arena) const {
  TL_session_setClientSessionInfo* n = new TL_session_setClientSessionInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TL_session_setClientSessionInfo::Swap(TL_session_setClientSessionInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TL_session_setClientSessionInfo::InternalSwap(TL_session_setClientSessionInfo* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata TL_session_setClientSessionInfo::GetMetadata() const {
  protobuf_service_2etl_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_service_2etl_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TL_session_setClientSessionInfo

// .mtproto.ClientSession session = 1;
bool TL_session_setClientSessionInfo::has_session() const {
  return this != internal_default_instance() && session_ != NULL;
}
void TL_session_setClientSessionInfo::clear_session() {
  if (GetArenaNoVirtual() == NULL && session_ != NULL) delete session_;
  session_ = NULL;
}
const ::mtproto::ClientSession& TL_session_setClientSessionInfo::session() const {
  const ::mtproto::ClientSession* p = session_;
  // @@protoc_insertion_point(field_get:mtproto.TL_session_setClientSessionInfo.session)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::ClientSession*>(
      &::mtproto::_ClientSession_default_instance_);
}
::mtproto::ClientSession* TL_session_setClientSessionInfo::mutable_session() {
  
  if (session_ == NULL) {
    session_ = new ::mtproto::ClientSession;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_session_setClientSessionInfo.session)
  return session_;
}
::mtproto::ClientSession* TL_session_setClientSessionInfo::release_session() {
  // @@protoc_insertion_point(field_release:mtproto.TL_session_setClientSessionInfo.session)
  
  ::mtproto::ClientSession* temp = session_;
  session_ = NULL;
  return temp;
}
void TL_session_setClientSessionInfo::set_allocated_session(::mtproto::ClientSession* session) {
  delete session_;
  session_ = session;
  if (session) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_session_setClientSessionInfo.session)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TL_session_getAuthorizations::kUserIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TL_session_getAuthorizations::TL_session_getAuthorizations()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_service_2etl_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.TL_session_getAuthorizations)
}
TL_session_getAuthorizations::TL_session_getAuthorizations(const TL_session_getAuthorizations& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  user_id_ = from.user_id_;
  // @@protoc_insertion_point(copy_constructor:mtproto.TL_session_getAuthorizations)
}

void TL_session_getAuthorizations::SharedCtor() {
  user_id_ = 0;
  _cached_size_ = 0;
}

TL_session_getAuthorizations::~TL_session_getAuthorizations() {
  // @@protoc_insertion_point(destructor:mtproto.TL_session_getAuthorizations)
  SharedDtor();
}

void TL_session_getAuthorizations::SharedDtor() {
}

void TL_session_getAuthorizations::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TL_session_getAuthorizations::descriptor() {
  protobuf_service_2etl_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_service_2etl_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TL_session_getAuthorizations& TL_session_getAuthorizations::default_instance() {
  protobuf_service_2etl_2eproto::InitDefaults();
  return *internal_default_instance();
}

TL_session_getAuthorizations* TL_session_getAuthorizations::New(::google::protobuf::Arena* arena) const {
  TL_session_getAuthorizations* n = new TL_session_getAuthorizations;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TL_session_getAuthorizations::Swap(TL_session_getAuthorizations* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TL_session_getAuthorizations::InternalSwap(TL_session_getAuthorizations* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata TL_session_getAuthorizations::GetMetadata() const {
  protobuf_service_2etl_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_service_2etl_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TL_session_getAuthorizations

// int32 user_id = 1;
void TL_session_getAuthorizations::clear_user_id() {
  user_id_ = 0;
}
::google::protobuf::int32 TL_session_getAuthorizations::user_id() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_session_getAuthorizations.user_id)
  return user_id_;
}
void TL_session_getAuthorizations::set_user_id(::google::protobuf::int32 value) {
  
  user_id_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_session_getAuthorizations.user_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TL_session_resetAuthorization::kUserIdFieldNumber;
const int TL_session_resetAuthorization::kHashFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TL_session_resetAuthorization::TL_session_resetAuthorization()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_service_2etl_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.TL_session_resetAuthorization)
}
TL_session_resetAuthorization::TL_session_resetAuthorization(const TL_session_resetAuthorization& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&hash_, &from.hash_,
    static_cast<size_t>(reinterpret_cast<char*>(&user_id_) -
    reinterpret_cast<char*>(&hash_)) + sizeof(user_id_));
  // @@protoc_insertion_point(copy_constructor:mtproto.TL_session_resetAuthorization)
}

void TL_session_resetAuthorization::SharedCtor() {
  ::memset(&hash_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&user_id_) -
      reinterpret_cast<char*>(&hash_)) + sizeof(user_id_));
  _cached_size_ = 0;
}

TL_session_resetAuthorization::~TL_session_resetAuthorization() {
  // @@protoc_insertion_point(destructor:mtproto.TL_session_resetAuthorization)
  SharedDtor();
}

void TL_session_resetAuthorization::SharedDtor() {
}

void TL_session_resetAuthorization::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TL_session_resetAuthorization::descriptor() {
  protobuf_service_2etl_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_service_2etl_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TL_session_resetAuthorization& TL_session_resetAuthorization::default_instance() {
  protobuf_service_2etl_2eproto::InitDefaults();
  return *internal_default_instance();
}

TL_session_resetAuthorization* TL_session_resetAuthorization::New(::google::protobuf::Arena* arena) const {
  TL_session_resetAuthorization* n = new TL_session_resetAuthorization;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TL_session_resetAuthorization::Swap(TL_session_resetAuthorization* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TL_session_resetAuthorization::InternalSwap(TL_session_resetAuthorization* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata TL_session_resetAuthorization::GetMetadata() const {
  protobuf_service_2etl_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_service_2etl_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TL_session_resetAuthorization

// int32 user_id = 1;
void TL_session_resetAuthorization::clear_user_id() {
  user_id_ = 0;
}
::google::protobuf::int32 TL_session_resetAuthorization::user_id() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_session_resetAuthorization.user_id)
  return user_id_;
}
void TL_session_resetAuthorization::set_user_id(::google::protobuf::int32 value) {
  
  user_id_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_session_resetAuthorization.user_id)
}

// int64 hash = 2;
void TL_session_resetAuthorization::clear_hash() {
  hash_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 TL_session_resetAuthorization::hash() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_session_resetAuthorization.hash)
  return hash_;
}
void TL_session_resetAuthorization::set_hash(::google::protobuf::int64 value) {
  
  hash_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_session_resetAuthorization.hash)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TL_session_getLayer::kAuthKeyIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TL_session_getLayer::TL_session_getLayer()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_service_2etl_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.TL_session_getLayer)
}
TL_session_getLayer::TL_session_getLayer(const TL_session_getLayer& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  auth_key_id_ = from.auth_key_id_;
  // @@protoc_insertion_point(copy_constructor:mtproto.TL_session_getLayer)
}

void TL_session_getLayer::SharedCtor() {
  auth_key_id_ = GOOGLE_LONGLONG(0);
  _cached_size_ = 0;
}

TL_session_getLayer::~TL_session_getLayer() {
  // @@protoc_insertion_point(destructor:mtproto.TL_session_getLayer)
  SharedDtor();
}

void TL_session_getLayer::SharedDtor() {
}

void TL_session_getLayer::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TL_session_getLayer::descriptor() {
  protobuf_service_2etl_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_service_2etl_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TL_session_getLayer& TL_session_getLayer::default_instance() {
  protobuf_service_2etl_2eproto::InitDefaults();
  return *internal_default_instance();
}

TL_session_getLayer* TL_session_getLayer::New(::google::protobuf::Arena* arena) const {
  TL_session_getLayer* n = new TL_session_getLayer;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TL_session_getLayer::Swap(TL_session_getLayer* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TL_session_getLayer::InternalSwap(TL_session_getLayer* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata TL_session_getLayer::GetMetadata() const {
  protobuf_service_2etl_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_service_2etl_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TL_session_getLayer

// int64 auth_key_id = 1;
void TL_session_getLayer::clear_auth_key_id() {
  auth_key_id_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 TL_session_getLayer::auth_key_id() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_session_getLayer.auth_key_id)
  return auth_key_id_;
}
void TL_session_getLayer::set_auth_key_id(::google::protobuf::int64 value) {
  
  auth_key_id_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_session_getLayer.auth_key_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TL_session_getUserId::kAuthKeyIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TL_session_getUserId::TL_session_getUserId()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_service_2etl_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.TL_session_getUserId)
}
TL_session_getUserId::TL_session_getUserId(const TL_session_getUserId& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  auth_key_id_ = from.auth_key_id_;
  // @@protoc_insertion_point(copy_constructor:mtproto.TL_session_getUserId)
}

void TL_session_getUserId::SharedCtor() {
  auth_key_id_ = GOOGLE_LONGLONG(0);
  _cached_size_ = 0;
}

TL_session_getUserId::~TL_session_getUserId() {
  // @@protoc_insertion_point(destructor:mtproto.TL_session_getUserId)
  SharedDtor();
}

void TL_session_getUserId::SharedDtor() {
}

void TL_session_getUserId::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TL_session_getUserId::descriptor() {
  protobuf_service_2etl_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_service_2etl_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TL_session_getUserId& TL_session_getUserId::default_instance() {
  protobuf_service_2etl_2eproto::InitDefaults();
  return *internal_default_instance();
}

TL_session_getUserId* TL_session_getUserId::New(::google::protobuf::Arena* arena) const {
  TL_session_getUserId* n = new TL_session_getUserId;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TL_session_getUserId::Swap(TL_session_getUserId* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TL_session_getUserId::InternalSwap(TL_session_getUserId* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata TL_session_getUserId::GetMetadata() const {
  protobuf_service_2etl_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_service_2etl_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TL_session_getUserId

// int64 auth_key_id = 1;
void TL_session_getUserId::clear_auth_key_id() {
  auth_key_id_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 TL_session_getUserId::auth_key_id() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_session_getUserId.auth_key_id)
  return auth_key_id_;
}
void TL_session_getUserId::set_auth_key_id(::google::protobuf::int64 value) {
  
  auth_key_id_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_session_getUserId.auth_key_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TL_session_queryAuthKey::kAuthKeyIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TL_session_queryAuthKey::TL_session_queryAuthKey()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_service_2etl_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.TL_session_queryAuthKey)
}
TL_session_queryAuthKey::TL_session_queryAuthKey(const TL_session_queryAuthKey& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  auth_key_id_ = from.auth_key_id_;
  // @@protoc_insertion_point(copy_constructor:mtproto.TL_session_queryAuthKey)
}

void TL_session_queryAuthKey::SharedCtor() {
  auth_key_id_ = GOOGLE_LONGLONG(0);
  _cached_size_ = 0;
}

TL_session_queryAuthKey::~TL_session_queryAuthKey() {
  // @@protoc_insertion_point(destructor:mtproto.TL_session_queryAuthKey)
  SharedDtor();
}

void TL_session_queryAuthKey::SharedDtor() {
}

void TL_session_queryAuthKey::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TL_session_queryAuthKey::descriptor() {
  protobuf_service_2etl_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_service_2etl_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TL_session_queryAuthKey& TL_session_queryAuthKey::default_instance() {
  protobuf_service_2etl_2eproto::InitDefaults();
  return *internal_default_instance();
}

TL_session_queryAuthKey* TL_session_queryAuthKey::New(::google::protobuf::Arena* arena) const {
  TL_session_queryAuthKey* n = new TL_session_queryAuthKey;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TL_session_queryAuthKey::Swap(TL_session_queryAuthKey* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TL_session_queryAuthKey::InternalSwap(TL_session_queryAuthKey* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata TL_session_queryAuthKey::GetMetadata() const {
  protobuf_service_2etl_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_service_2etl_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TL_session_queryAuthKey

// int64 auth_key_id = 1;
void TL_session_queryAuthKey::clear_auth_key_id() {
  auth_key_id_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 TL_session_queryAuthKey::auth_key_id() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_session_queryAuthKey.auth_key_id)
  return auth_key_id_;
}
void TL_session_queryAuthKey::set_auth_key_id(::google::protobuf::int64 value) {
  
  auth_key_id_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_session_queryAuthKey.auth_key_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TL_session_setAuthKey::kAuthKeyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TL_session_setAuthKey::TL_session_setAuthKey()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_service_2etl_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.TL_session_setAuthKey)
}
TL_session_setAuthKey::TL_session_setAuthKey(const TL_session_setAuthKey& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_auth_key()) {
    auth_key_ = new ::mtproto::AuthKeyInfo(*from.auth_key_);
  } else {
    auth_key_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:mtproto.TL_session_setAuthKey)
}

void TL_session_setAuthKey::SharedCtor() {
  auth_key_ = NULL;
  _cached_size_ = 0;
}

TL_session_setAuthKey::~TL_session_setAuthKey() {
  // @@protoc_insertion_point(destructor:mtproto.TL_session_setAuthKey)
  SharedDtor();
}

void TL_session_setAuthKey::SharedDtor() {
  if (this != internal_default_instance()) delete auth_key_;
}

void TL_session_setAuthKey::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TL_session_setAuthKey::descriptor() {
  protobuf_service_2etl_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_service_2etl_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TL_session_setAuthKey& TL_session_setAuthKey::default_instance() {
  protobuf_service_2etl_2eproto::InitDefaults();
  return *internal_default_instance();
}

TL_session_setAuthKey* TL_session_setAuthKey::New(::google::protobuf::Arena* arena) const {
  TL_session_setAuthKey* n = new TL_session_setAuthKey;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TL_session_setAuthKey::Swap(TL_session_setAuthKey* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TL_session_setAuthKey::InternalSwap(TL_session_setAuthKey* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata TL_session_setAuthKey::GetMetadata() const {
  protobuf_service_2etl_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_service_2etl_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TL_session_setAuthKey

// .mtproto.AuthKeyInfo auth_key = 1;
bool TL_session_setAuthKey::has_auth_key() const {
  return this != internal_default_instance() && auth_key_ != NULL;
}
void TL_session_setAuthKey::clear_auth_key() {
  if (GetArenaNoVirtual() == NULL && auth_key_ != NULL) delete auth_key_;
  auth_key_ = NULL;
}
const ::mtproto::AuthKeyInfo& TL_session_setAuthKey::auth_key() const {
  const ::mtproto::AuthKeyInfo* p = auth_key_;
  // @@protoc_insertion_point(field_get:mtproto.TL_session_setAuthKey.auth_key)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::AuthKeyInfo*>(
      &::mtproto::_AuthKeyInfo_default_instance_);
}
::mtproto::AuthKeyInfo* TL_session_setAuthKey::mutable_auth_key() {
  
  if (auth_key_ == NULL) {
    auth_key_ = new ::mtproto::AuthKeyInfo;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_session_setAuthKey.auth_key)
  return auth_key_;
}
::mtproto::AuthKeyInfo* TL_session_setAuthKey::release_auth_key() {
  // @@protoc_insertion_point(field_release:mtproto.TL_session_setAuthKey.auth_key)
  
  ::mtproto::AuthKeyInfo* temp = auth_key_;
  auth_key_ = NULL;
  return temp;
}
void TL_session_setAuthKey::set_allocated_auth_key(::mtproto::AuthKeyInfo* auth_key) {
  delete auth_key_;
  auth_key_ = auth_key;
  if (auth_key) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_session_setAuthKey.auth_key)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TL_session_bindAuthKeyUser::kAuthKeyIdFieldNumber;
const int TL_session_bindAuthKeyUser::kUserIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TL_session_bindAuthKeyUser::TL_session_bindAuthKeyUser()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_service_2etl_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.TL_session_bindAuthKeyUser)
}
TL_session_bindAuthKeyUser::TL_session_bindAuthKeyUser(const TL_session_bindAuthKeyUser& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&auth_key_id_, &from.auth_key_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&user_id_) -
    reinterpret_cast<char*>(&auth_key_id_)) + sizeof(user_id_));
  // @@protoc_insertion_point(copy_constructor:mtproto.TL_session_bindAuthKeyUser)
}

void TL_session_bindAuthKeyUser::SharedCtor() {
  ::memset(&auth_key_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&user_id_) -
      reinterpret_cast<char*>(&auth_key_id_)) + sizeof(user_id_));
  _cached_size_ = 0;
}

TL_session_bindAuthKeyUser::~TL_session_bindAuthKeyUser() {
  // @@protoc_insertion_point(destructor:mtproto.TL_session_bindAuthKeyUser)
  SharedDtor();
}

void TL_session_bindAuthKeyUser::SharedDtor() {
}

void TL_session_bindAuthKeyUser::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TL_session_bindAuthKeyUser::descriptor() {
  protobuf_service_2etl_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_service_2etl_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TL_session_bindAuthKeyUser& TL_session_bindAuthKeyUser::default_instance() {
  protobuf_service_2etl_2eproto::InitDefaults();
  return *internal_default_instance();
}

TL_session_bindAuthKeyUser* TL_session_bindAuthKeyUser::New(::google::protobuf::Arena* arena) const {
  TL_session_bindAuthKeyUser* n = new TL_session_bindAuthKeyUser;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TL_session_bindAuthKeyUser::Swap(TL_session_bindAuthKeyUser* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TL_session_bindAuthKeyUser::InternalSwap(TL_session_bindAuthKeyUser* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata TL_session_bindAuthKeyUser::GetMetadata() const {
  protobuf_service_2etl_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_service_2etl_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TL_session_bindAuthKeyUser

// int64 auth_key_id = 1;
void TL_session_bindAuthKeyUser::clear_auth_key_id() {
  auth_key_id_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 TL_session_bindAuthKeyUser::auth_key_id() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_session_bindAuthKeyUser.auth_key_id)
  return auth_key_id_;
}
void TL_session_bindAuthKeyUser::set_auth_key_id(::google::protobuf::int64 value) {
  
  auth_key_id_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_session_bindAuthKeyUser.auth_key_id)
}

// int32 user_id = 2;
void TL_session_bindAuthKeyUser::clear_user_id() {
  user_id_ = 0;
}
::google::protobuf::int32 TL_session_bindAuthKeyUser::user_id() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_session_bindAuthKeyUser.user_id)
  return user_id_;
}
void TL_session_bindAuthKeyUser::set_user_id(::google::protobuf::int32 value) {
  
  user_id_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_session_bindAuthKeyUser.user_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TL_session_unbindAuthKeyUser::kAuthKeyIdFieldNumber;
const int TL_session_unbindAuthKeyUser::kUserIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TL_session_unbindAuthKeyUser::TL_session_unbindAuthKeyUser()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_service_2etl_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.TL_session_unbindAuthKeyUser)
}
TL_session_unbindAuthKeyUser::TL_session_unbindAuthKeyUser(const TL_session_unbindAuthKeyUser& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&auth_key_id_, &from.auth_key_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&user_id_) -
    reinterpret_cast<char*>(&auth_key_id_)) + sizeof(user_id_));
  // @@protoc_insertion_point(copy_constructor:mtproto.TL_session_unbindAuthKeyUser)
}

void TL_session_unbindAuthKeyUser::SharedCtor() {
  ::memset(&auth_key_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&user_id_) -
      reinterpret_cast<char*>(&auth_key_id_)) + sizeof(user_id_));
  _cached_size_ = 0;
}

TL_session_unbindAuthKeyUser::~TL_session_unbindAuthKeyUser() {
  // @@protoc_insertion_point(destructor:mtproto.TL_session_unbindAuthKeyUser)
  SharedDtor();
}

void TL_session_unbindAuthKeyUser::SharedDtor() {
}

void TL_session_unbindAuthKeyUser::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TL_session_unbindAuthKeyUser::descriptor() {
  protobuf_service_2etl_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_service_2etl_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TL_session_unbindAuthKeyUser& TL_session_unbindAuthKeyUser::default_instance() {
  protobuf_service_2etl_2eproto::InitDefaults();
  return *internal_default_instance();
}

TL_session_unbindAuthKeyUser* TL_session_unbindAuthKeyUser::New(::google::protobuf::Arena* arena) const {
  TL_session_unbindAuthKeyUser* n = new TL_session_unbindAuthKeyUser;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TL_session_unbindAuthKeyUser::Swap(TL_session_unbindAuthKeyUser* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TL_session_unbindAuthKeyUser::InternalSwap(TL_session_unbindAuthKeyUser* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata TL_session_unbindAuthKeyUser::GetMetadata() const {
  protobuf_service_2etl_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_service_2etl_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TL_session_unbindAuthKeyUser

// int64 auth_key_id = 1;
void TL_session_unbindAuthKeyUser::clear_auth_key_id() {
  auth_key_id_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 TL_session_unbindAuthKeyUser::auth_key_id() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_session_unbindAuthKeyUser.auth_key_id)
  return auth_key_id_;
}
void TL_session_unbindAuthKeyUser::set_auth_key_id(::google::protobuf::int64 value) {
  
  auth_key_id_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_session_unbindAuthKeyUser.auth_key_id)
}

// int32 user_id = 2;
void TL_session_unbindAuthKeyUser::clear_user_id() {
  user_id_ = 0;
}
::google::protobuf::int32 TL_session_unbindAuthKeyUser::user_id() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_session_unbindAuthKeyUser.user_id)
  return user_id_;
}
void TL_session_unbindAuthKeyUser::set_user_id(::google::protobuf::int32 value) {
  
  user_id_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_session_unbindAuthKeyUser.user_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TL_sync_syncUpdates::kUserIdFieldNumber;
const int TL_sync_syncUpdates::kAuthKeyIdFieldNumber;
const int TL_sync_syncUpdates::kServerIdFieldNumber;
const int TL_sync_syncUpdates::kUpdatesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TL_sync_syncUpdates::TL_sync_syncUpdates()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_service_2etl_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.TL_sync_syncUpdates)
}
TL_sync_syncUpdates::TL_sync_syncUpdates(const TL_sync_syncUpdates& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_updates()) {
    updates_ = new ::mtproto::Updates(*from.updates_);
  } else {
    updates_ = NULL;
  }
  ::memcpy(&auth_key_id_, &from.auth_key_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&server_id_) -
    reinterpret_cast<char*>(&auth_key_id_)) + sizeof(server_id_));
  // @@protoc_insertion_point(copy_constructor:mtproto.TL_sync_syncUpdates)
}

void TL_sync_syncUpdates::SharedCtor() {
  ::memset(&updates_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&server_id_) -
      reinterpret_cast<char*>(&updates_)) + sizeof(server_id_));
  _cached_size_ = 0;
}

TL_sync_syncUpdates::~TL_sync_syncUpdates() {
  // @@protoc_insertion_point(destructor:mtproto.TL_sync_syncUpdates)
  SharedDtor();
}

void TL_sync_syncUpdates::SharedDtor() {
  if (this != internal_default_instance()) delete updates_;
}

void TL_sync_syncUpdates::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TL_sync_syncUpdates::descriptor() {
  protobuf_service_2etl_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_service_2etl_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TL_sync_syncUpdates& TL_sync_syncUpdates::default_instance() {
  protobuf_service_2etl_2eproto::InitDefaults();
  return *internal_default_instance();
}

TL_sync_syncUpdates* TL_sync_syncUpdates::New(::google::protobuf::Arena* arena) const {
  TL_sync_syncUpdates* n = new TL_sync_syncUpdates;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TL_sync_syncUpdates::Swap(TL_sync_syncUpdates* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TL_sync_syncUpdates::InternalSwap(TL_sync_syncUpdates* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata TL_sync_syncUpdates::GetMetadata() const {
  protobuf_service_2etl_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_service_2etl_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TL_sync_syncUpdates

// int32 user_id = 2;
void TL_sync_syncUpdates::clear_user_id() {
  user_id_ = 0;
}
::google::protobuf::int32 TL_sync_syncUpdates::user_id() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_sync_syncUpdates.user_id)
  return user_id_;
}
void TL_sync_syncUpdates::set_user_id(::google::protobuf::int32 value) {
  
  user_id_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_sync_syncUpdates.user_id)
}

// int64 auth_key_id = 3;
void TL_sync_syncUpdates::clear_auth_key_id() {
  auth_key_id_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 TL_sync_syncUpdates::auth_key_id() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_sync_syncUpdates.auth_key_id)
  return auth_key_id_;
}
void TL_sync_syncUpdates::set_auth_key_id(::google::protobuf::int64 value) {
  
  auth_key_id_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_sync_syncUpdates.auth_key_id)
}

// int32 server_id = 4;
void TL_sync_syncUpdates::clear_server_id() {
  server_id_ = 0;
}
::google::protobuf::int32 TL_sync_syncUpdates::server_id() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_sync_syncUpdates.server_id)
  return server_id_;
}
void TL_sync_syncUpdates::set_server_id(::google::protobuf::int32 value) {
  
  server_id_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_sync_syncUpdates.server_id)
}

// .mtproto.Updates updates = 5;
bool TL_sync_syncUpdates::has_updates() const {
  return this != internal_default_instance() && updates_ != NULL;
}
void TL_sync_syncUpdates::clear_updates() {
  if (GetArenaNoVirtual() == NULL && updates_ != NULL) delete updates_;
  updates_ = NULL;
}
const ::mtproto::Updates& TL_sync_syncUpdates::updates() const {
  const ::mtproto::Updates* p = updates_;
  // @@protoc_insertion_point(field_get:mtproto.TL_sync_syncUpdates.updates)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::Updates*>(
      &::mtproto::_Updates_default_instance_);
}
::mtproto::Updates* TL_sync_syncUpdates::mutable_updates() {
  
  if (updates_ == NULL) {
    updates_ = new ::mtproto::Updates;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_sync_syncUpdates.updates)
  return updates_;
}
::mtproto::Updates* TL_sync_syncUpdates::release_updates() {
  // @@protoc_insertion_point(field_release:mtproto.TL_sync_syncUpdates.updates)
  
  ::mtproto::Updates* temp = updates_;
  updates_ = NULL;
  return temp;
}
void TL_sync_syncUpdates::set_allocated_updates(::mtproto::Updates* updates) {
  delete updates_;
  updates_ = updates;
  if (updates) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_sync_syncUpdates.updates)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TL_sync_pushUpdates::kUserIdFieldNumber;
const int TL_sync_pushUpdates::kUpdatesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TL_sync_pushUpdates::TL_sync_pushUpdates()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_service_2etl_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.TL_sync_pushUpdates)
}
TL_sync_pushUpdates::TL_sync_pushUpdates(const TL_sync_pushUpdates& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_updates()) {
    updates_ = new ::mtproto::Updates(*from.updates_);
  } else {
    updates_ = NULL;
  }
  user_id_ = from.user_id_;
  // @@protoc_insertion_point(copy_constructor:mtproto.TL_sync_pushUpdates)
}

void TL_sync_pushUpdates::SharedCtor() {
  ::memset(&updates_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&user_id_) -
      reinterpret_cast<char*>(&updates_)) + sizeof(user_id_));
  _cached_size_ = 0;
}

TL_sync_pushUpdates::~TL_sync_pushUpdates() {
  // @@protoc_insertion_point(destructor:mtproto.TL_sync_pushUpdates)
  SharedDtor();
}

void TL_sync_pushUpdates::SharedDtor() {
  if (this != internal_default_instance()) delete updates_;
}

void TL_sync_pushUpdates::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TL_sync_pushUpdates::descriptor() {
  protobuf_service_2etl_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_service_2etl_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TL_sync_pushUpdates& TL_sync_pushUpdates::default_instance() {
  protobuf_service_2etl_2eproto::InitDefaults();
  return *internal_default_instance();
}

TL_sync_pushUpdates* TL_sync_pushUpdates::New(::google::protobuf::Arena* arena) const {
  TL_sync_pushUpdates* n = new TL_sync_pushUpdates;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TL_sync_pushUpdates::Swap(TL_sync_pushUpdates* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TL_sync_pushUpdates::InternalSwap(TL_sync_pushUpdates* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata TL_sync_pushUpdates::GetMetadata() const {
  protobuf_service_2etl_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_service_2etl_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TL_sync_pushUpdates

// int32 user_id = 1;
void TL_sync_pushUpdates::clear_user_id() {
  user_id_ = 0;
}
::google::protobuf::int32 TL_sync_pushUpdates::user_id() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_sync_pushUpdates.user_id)
  return user_id_;
}
void TL_sync_pushUpdates::set_user_id(::google::protobuf::int32 value) {
  
  user_id_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_sync_pushUpdates.user_id)
}

// .mtproto.Updates updates = 2;
bool TL_sync_pushUpdates::has_updates() const {
  return this != internal_default_instance() && updates_ != NULL;
}
void TL_sync_pushUpdates::clear_updates() {
  if (GetArenaNoVirtual() == NULL && updates_ != NULL) delete updates_;
  updates_ = NULL;
}
const ::mtproto::Updates& TL_sync_pushUpdates::updates() const {
  const ::mtproto::Updates* p = updates_;
  // @@protoc_insertion_point(field_get:mtproto.TL_sync_pushUpdates.updates)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::Updates*>(
      &::mtproto::_Updates_default_instance_);
}
::mtproto::Updates* TL_sync_pushUpdates::mutable_updates() {
  
  if (updates_ == NULL) {
    updates_ = new ::mtproto::Updates;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_sync_pushUpdates.updates)
  return updates_;
}
::mtproto::Updates* TL_sync_pushUpdates::release_updates() {
  // @@protoc_insertion_point(field_release:mtproto.TL_sync_pushUpdates.updates)
  
  ::mtproto::Updates* temp = updates_;
  updates_ = NULL;
  return temp;
}
void TL_sync_pushUpdates::set_allocated_updates(::mtproto::Updates* updates) {
  delete updates_;
  updates_ = updates;
  if (updates) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_sync_pushUpdates.updates)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TL_sync_syncChannelUpdates::kChannelIdFieldNumber;
const int TL_sync_syncChannelUpdates::kUserIdFieldNumber;
const int TL_sync_syncChannelUpdates::kAuthKeyIdFieldNumber;
const int TL_sync_syncChannelUpdates::kServerIdFieldNumber;
const int TL_sync_syncChannelUpdates::kUpdatesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TL_sync_syncChannelUpdates::TL_sync_syncChannelUpdates()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_service_2etl_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.TL_sync_syncChannelUpdates)
}
TL_sync_syncChannelUpdates::TL_sync_syncChannelUpdates(const TL_sync_syncChannelUpdates& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_updates()) {
    updates_ = new ::mtproto::Updates(*from.updates_);
  } else {
    updates_ = NULL;
  }
  ::memcpy(&channel_id_, &from.channel_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&server_id_) -
    reinterpret_cast<char*>(&channel_id_)) + sizeof(server_id_));
  // @@protoc_insertion_point(copy_constructor:mtproto.TL_sync_syncChannelUpdates)
}

void TL_sync_syncChannelUpdates::SharedCtor() {
  ::memset(&updates_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&server_id_) -
      reinterpret_cast<char*>(&updates_)) + sizeof(server_id_));
  _cached_size_ = 0;
}

TL_sync_syncChannelUpdates::~TL_sync_syncChannelUpdates() {
  // @@protoc_insertion_point(destructor:mtproto.TL_sync_syncChannelUpdates)
  SharedDtor();
}

void TL_sync_syncChannelUpdates::SharedDtor() {
  if (this != internal_default_instance()) delete updates_;
}

void TL_sync_syncChannelUpdates::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TL_sync_syncChannelUpdates::descriptor() {
  protobuf_service_2etl_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_service_2etl_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TL_sync_syncChannelUpdates& TL_sync_syncChannelUpdates::default_instance() {
  protobuf_service_2etl_2eproto::InitDefaults();
  return *internal_default_instance();
}

TL_sync_syncChannelUpdates* TL_sync_syncChannelUpdates::New(::google::protobuf::Arena* arena) const {
  TL_sync_syncChannelUpdates* n = new TL_sync_syncChannelUpdates;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TL_sync_syncChannelUpdates::Swap(TL_sync_syncChannelUpdates* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TL_sync_syncChannelUpdates::InternalSwap(TL_sync_syncChannelUpdates* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata TL_sync_syncChannelUpdates::GetMetadata() const {
  protobuf_service_2etl_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_service_2etl_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TL_sync_syncChannelUpdates

// int32 channel_id = 2;
void TL_sync_syncChannelUpdates::clear_channel_id() {
  channel_id_ = 0;
}
::google::protobuf::int32 TL_sync_syncChannelUpdates::channel_id() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_sync_syncChannelUpdates.channel_id)
  return channel_id_;
}
void TL_sync_syncChannelUpdates::set_channel_id(::google::protobuf::int32 value) {
  
  channel_id_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_sync_syncChannelUpdates.channel_id)
}

// int32 user_id = 3;
void TL_sync_syncChannelUpdates::clear_user_id() {
  user_id_ = 0;
}
::google::protobuf::int32 TL_sync_syncChannelUpdates::user_id() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_sync_syncChannelUpdates.user_id)
  return user_id_;
}
void TL_sync_syncChannelUpdates::set_user_id(::google::protobuf::int32 value) {
  
  user_id_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_sync_syncChannelUpdates.user_id)
}

// int64 auth_key_id = 4;
void TL_sync_syncChannelUpdates::clear_auth_key_id() {
  auth_key_id_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 TL_sync_syncChannelUpdates::auth_key_id() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_sync_syncChannelUpdates.auth_key_id)
  return auth_key_id_;
}
void TL_sync_syncChannelUpdates::set_auth_key_id(::google::protobuf::int64 value) {
  
  auth_key_id_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_sync_syncChannelUpdates.auth_key_id)
}

// int32 server_id = 5;
void TL_sync_syncChannelUpdates::clear_server_id() {
  server_id_ = 0;
}
::google::protobuf::int32 TL_sync_syncChannelUpdates::server_id() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_sync_syncChannelUpdates.server_id)
  return server_id_;
}
void TL_sync_syncChannelUpdates::set_server_id(::google::protobuf::int32 value) {
  
  server_id_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_sync_syncChannelUpdates.server_id)
}

// .mtproto.Updates updates = 6;
bool TL_sync_syncChannelUpdates::has_updates() const {
  return this != internal_default_instance() && updates_ != NULL;
}
void TL_sync_syncChannelUpdates::clear_updates() {
  if (GetArenaNoVirtual() == NULL && updates_ != NULL) delete updates_;
  updates_ = NULL;
}
const ::mtproto::Updates& TL_sync_syncChannelUpdates::updates() const {
  const ::mtproto::Updates* p = updates_;
  // @@protoc_insertion_point(field_get:mtproto.TL_sync_syncChannelUpdates.updates)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::Updates*>(
      &::mtproto::_Updates_default_instance_);
}
::mtproto::Updates* TL_sync_syncChannelUpdates::mutable_updates() {
  
  if (updates_ == NULL) {
    updates_ = new ::mtproto::Updates;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_sync_syncChannelUpdates.updates)
  return updates_;
}
::mtproto::Updates* TL_sync_syncChannelUpdates::release_updates() {
  // @@protoc_insertion_point(field_release:mtproto.TL_sync_syncChannelUpdates.updates)
  
  ::mtproto::Updates* temp = updates_;
  updates_ = NULL;
  return temp;
}
void TL_sync_syncChannelUpdates::set_allocated_updates(::mtproto::Updates* updates) {
  delete updates_;
  updates_ = updates;
  if (updates) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_sync_syncChannelUpdates.updates)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TL_sync_pushChannelUpdates::kChannelIdFieldNumber;
const int TL_sync_pushChannelUpdates::kUserIdFieldNumber;
const int TL_sync_pushChannelUpdates::kUpdatesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TL_sync_pushChannelUpdates::TL_sync_pushChannelUpdates()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_service_2etl_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.TL_sync_pushChannelUpdates)
}
TL_sync_pushChannelUpdates::TL_sync_pushChannelUpdates(const TL_sync_pushChannelUpdates& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_updates()) {
    updates_ = new ::mtproto::Updates(*from.updates_);
  } else {
    updates_ = NULL;
  }
  ::memcpy(&channel_id_, &from.channel_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&user_id_) -
    reinterpret_cast<char*>(&channel_id_)) + sizeof(user_id_));
  // @@protoc_insertion_point(copy_constructor:mtproto.TL_sync_pushChannelUpdates)
}

void TL_sync_pushChannelUpdates::SharedCtor() {
  ::memset(&updates_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&user_id_) -
      reinterpret_cast<char*>(&updates_)) + sizeof(user_id_));
  _cached_size_ = 0;
}

TL_sync_pushChannelUpdates::~TL_sync_pushChannelUpdates() {
  // @@protoc_insertion_point(destructor:mtproto.TL_sync_pushChannelUpdates)
  SharedDtor();
}

void TL_sync_pushChannelUpdates::SharedDtor() {
  if (this != internal_default_instance()) delete updates_;
}

void TL_sync_pushChannelUpdates::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TL_sync_pushChannelUpdates::descriptor() {
  protobuf_service_2etl_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_service_2etl_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TL_sync_pushChannelUpdates& TL_sync_pushChannelUpdates::default_instance() {
  protobuf_service_2etl_2eproto::InitDefaults();
  return *internal_default_instance();
}

TL_sync_pushChannelUpdates* TL_sync_pushChannelUpdates::New(::google::protobuf::Arena* arena) const {
  TL_sync_pushChannelUpdates* n = new TL_sync_pushChannelUpdates;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TL_sync_pushChannelUpdates::Swap(TL_sync_pushChannelUpdates* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TL_sync_pushChannelUpdates::InternalSwap(TL_sync_pushChannelUpdates* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata TL_sync_pushChannelUpdates::GetMetadata() const {
  protobuf_service_2etl_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_service_2etl_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TL_sync_pushChannelUpdates

// int32 channel_id = 1;
void TL_sync_pushChannelUpdates::clear_channel_id() {
  channel_id_ = 0;
}
::google::protobuf::int32 TL_sync_pushChannelUpdates::channel_id() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_sync_pushChannelUpdates.channel_id)
  return channel_id_;
}
void TL_sync_pushChannelUpdates::set_channel_id(::google::protobuf::int32 value) {
  
  channel_id_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_sync_pushChannelUpdates.channel_id)
}

// int32 user_id = 2;
void TL_sync_pushChannelUpdates::clear_user_id() {
  user_id_ = 0;
}
::google::protobuf::int32 TL_sync_pushChannelUpdates::user_id() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_sync_pushChannelUpdates.user_id)
  return user_id_;
}
void TL_sync_pushChannelUpdates::set_user_id(::google::protobuf::int32 value) {
  
  user_id_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_sync_pushChannelUpdates.user_id)
}

// .mtproto.Updates updates = 3;
bool TL_sync_pushChannelUpdates::has_updates() const {
  return this != internal_default_instance() && updates_ != NULL;
}
void TL_sync_pushChannelUpdates::clear_updates() {
  if (GetArenaNoVirtual() == NULL && updates_ != NULL) delete updates_;
  updates_ = NULL;
}
const ::mtproto::Updates& TL_sync_pushChannelUpdates::updates() const {
  const ::mtproto::Updates* p = updates_;
  // @@protoc_insertion_point(field_get:mtproto.TL_sync_pushChannelUpdates.updates)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::Updates*>(
      &::mtproto::_Updates_default_instance_);
}
::mtproto::Updates* TL_sync_pushChannelUpdates::mutable_updates() {
  
  if (updates_ == NULL) {
    updates_ = new ::mtproto::Updates;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_sync_pushChannelUpdates.updates)
  return updates_;
}
::mtproto::Updates* TL_sync_pushChannelUpdates::release_updates() {
  // @@protoc_insertion_point(field_release:mtproto.TL_sync_pushChannelUpdates.updates)
  
  ::mtproto::Updates* temp = updates_;
  updates_ = NULL;
  return temp;
}
void TL_sync_pushChannelUpdates::set_allocated_updates(::mtproto::Updates* updates) {
  delete updates_;
  updates_ = updates;
  if (updates) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_sync_pushChannelUpdates.updates)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TL_sync_pushRpcResult::kServerIdFieldNumber;
const int TL_sync_pushRpcResult::kAuthKeyIdFieldNumber;
const int TL_sync_pushRpcResult::kReqMsgIdFieldNumber;
const int TL_sync_pushRpcResult::kResultFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TL_sync_pushRpcResult::TL_sync_pushRpcResult()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_service_2etl_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.TL_sync_pushRpcResult)
}
TL_sync_pushRpcResult::TL_sync_pushRpcResult(const TL_sync_pushRpcResult& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  result_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.result().size() > 0) {
    result_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.result_);
  }
  ::memcpy(&auth_key_id_, &from.auth_key_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&server_id_) -
    reinterpret_cast<char*>(&auth_key_id_)) + sizeof(server_id_));
  // @@protoc_insertion_point(copy_constructor:mtproto.TL_sync_pushRpcResult)
}

void TL_sync_pushRpcResult::SharedCtor() {
  result_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&auth_key_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&server_id_) -
      reinterpret_cast<char*>(&auth_key_id_)) + sizeof(server_id_));
  _cached_size_ = 0;
}

TL_sync_pushRpcResult::~TL_sync_pushRpcResult() {
  // @@protoc_insertion_point(destructor:mtproto.TL_sync_pushRpcResult)
  SharedDtor();
}

void TL_sync_pushRpcResult::SharedDtor() {
  result_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void TL_sync_pushRpcResult::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TL_sync_pushRpcResult::descriptor() {
  protobuf_service_2etl_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_service_2etl_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TL_sync_pushRpcResult& TL_sync_pushRpcResult::default_instance() {
  protobuf_service_2etl_2eproto::InitDefaults();
  return *internal_default_instance();
}

TL_sync_pushRpcResult* TL_sync_pushRpcResult::New(::google::protobuf::Arena* arena) const {
  TL_sync_pushRpcResult* n = new TL_sync_pushRpcResult;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TL_sync_pushRpcResult::Swap(TL_sync_pushRpcResult* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TL_sync_pushRpcResult::InternalSwap(TL_sync_pushRpcResult* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata TL_sync_pushRpcResult::GetMetadata() const {
  protobuf_service_2etl_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_service_2etl_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TL_sync_pushRpcResult

// int32 server_id = 1;
void TL_sync_pushRpcResult::clear_server_id() {
  server_id_ = 0;
}
::google::protobuf::int32 TL_sync_pushRpcResult::server_id() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_sync_pushRpcResult.server_id)
  return server_id_;
}
void TL_sync_pushRpcResult::set_server_id(::google::protobuf::int32 value) {
  
  server_id_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_sync_pushRpcResult.server_id)
}

// int64 auth_key_id = 2;
void TL_sync_pushRpcResult::clear_auth_key_id() {
  auth_key_id_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 TL_sync_pushRpcResult::auth_key_id() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_sync_pushRpcResult.auth_key_id)
  return auth_key_id_;
}
void TL_sync_pushRpcResult::set_auth_key_id(::google::protobuf::int64 value) {
  
  auth_key_id_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_sync_pushRpcResult.auth_key_id)
}

// int64 req_msg_id = 3;
void TL_sync_pushRpcResult::clear_req_msg_id() {
  req_msg_id_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 TL_sync_pushRpcResult::req_msg_id() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_sync_pushRpcResult.req_msg_id)
  return req_msg_id_;
}
void TL_sync_pushRpcResult::set_req_msg_id(::google::protobuf::int64 value) {
  
  req_msg_id_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_sync_pushRpcResult.req_msg_id)
}

// bytes result = 4;
void TL_sync_pushRpcResult::clear_result() {
  result_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& TL_sync_pushRpcResult::result() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_sync_pushRpcResult.result)
  return result_.GetNoArena();
}
void TL_sync_pushRpcResult::set_result(const ::std::string& value) {
  
  result_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtproto.TL_sync_pushRpcResult.result)
}
#if LANG_CXX11
void TL_sync_pushRpcResult::set_result(::std::string&& value) {
  
  result_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mtproto.TL_sync_pushRpcResult.result)
}
#endif
void TL_sync_pushRpcResult::set_result(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  result_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtproto.TL_sync_pushRpcResult.result)
}
void TL_sync_pushRpcResult::set_result(const void* value, size_t size) {
  
  result_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtproto.TL_sync_pushRpcResult.result)
}
::std::string* TL_sync_pushRpcResult::mutable_result() {
  
  // @@protoc_insertion_point(field_mutable:mtproto.TL_sync_pushRpcResult.result)
  return result_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* TL_sync_pushRpcResult::release_result() {
  // @@protoc_insertion_point(field_release:mtproto.TL_sync_pushRpcResult.result)
  
  return result_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TL_sync_pushRpcResult::set_allocated_result(::std::string* result) {
  if (result != NULL) {
    
  } else {
    
  }
  result_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), result);
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_sync_pushRpcResult.result)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TL_sync_getState::kAuthKeyIdFieldNumber;
const int TL_sync_getState::kUserIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TL_sync_getState::TL_sync_getState()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_service_2etl_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.TL_sync_getState)
}
TL_sync_getState::TL_sync_getState(const TL_sync_getState& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&auth_key_id_, &from.auth_key_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&user_id_) -
    reinterpret_cast<char*>(&auth_key_id_)) + sizeof(user_id_));
  // @@protoc_insertion_point(copy_constructor:mtproto.TL_sync_getState)
}

void TL_sync_getState::SharedCtor() {
  ::memset(&auth_key_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&user_id_) -
      reinterpret_cast<char*>(&auth_key_id_)) + sizeof(user_id_));
  _cached_size_ = 0;
}

TL_sync_getState::~TL_sync_getState() {
  // @@protoc_insertion_point(destructor:mtproto.TL_sync_getState)
  SharedDtor();
}

void TL_sync_getState::SharedDtor() {
}

void TL_sync_getState::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TL_sync_getState::descriptor() {
  protobuf_service_2etl_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_service_2etl_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TL_sync_getState& TL_sync_getState::default_instance() {
  protobuf_service_2etl_2eproto::InitDefaults();
  return *internal_default_instance();
}

TL_sync_getState* TL_sync_getState::New(::google::protobuf::Arena* arena) const {
  TL_sync_getState* n = new TL_sync_getState;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TL_sync_getState::Swap(TL_sync_getState* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TL_sync_getState::InternalSwap(TL_sync_getState* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata TL_sync_getState::GetMetadata() const {
  protobuf_service_2etl_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_service_2etl_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TL_sync_getState

// int64 auth_key_id = 1;
void TL_sync_getState::clear_auth_key_id() {
  auth_key_id_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 TL_sync_getState::auth_key_id() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_sync_getState.auth_key_id)
  return auth_key_id_;
}
void TL_sync_getState::set_auth_key_id(::google::protobuf::int64 value) {
  
  auth_key_id_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_sync_getState.auth_key_id)
}

// int32 user_id = 2;
void TL_sync_getState::clear_user_id() {
  user_id_ = 0;
}
::google::protobuf::int32 TL_sync_getState::user_id() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_sync_getState.user_id)
  return user_id_;
}
void TL_sync_getState::set_user_id(::google::protobuf::int32 value) {
  
  user_id_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_sync_getState.user_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TL_sync_getDifference::kAuthKeyIdFieldNumber;
const int TL_sync_getDifference::kUserIdFieldNumber;
const int TL_sync_getDifference::kPtsFieldNumber;
const int TL_sync_getDifference::kPtsTotalLimitFieldNumber;
const int TL_sync_getDifference::kDateFieldNumber;
const int TL_sync_getDifference::kQtsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TL_sync_getDifference::TL_sync_getDifference()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_service_2etl_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.TL_sync_getDifference)
}
TL_sync_getDifference::TL_sync_getDifference(const TL_sync_getDifference& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&auth_key_id_, &from.auth_key_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&qts_) -
    reinterpret_cast<char*>(&auth_key_id_)) + sizeof(qts_));
  // @@protoc_insertion_point(copy_constructor:mtproto.TL_sync_getDifference)
}

void TL_sync_getDifference::SharedCtor() {
  ::memset(&auth_key_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&qts_) -
      reinterpret_cast<char*>(&auth_key_id_)) + sizeof(qts_));
  _cached_size_ = 0;
}

TL_sync_getDifference::~TL_sync_getDifference() {
  // @@protoc_insertion_point(destructor:mtproto.TL_sync_getDifference)
  SharedDtor();
}

void TL_sync_getDifference::SharedDtor() {
}

void TL_sync_getDifference::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TL_sync_getDifference::descriptor() {
  protobuf_service_2etl_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_service_2etl_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TL_sync_getDifference& TL_sync_getDifference::default_instance() {
  protobuf_service_2etl_2eproto::InitDefaults();
  return *internal_default_instance();
}

TL_sync_getDifference* TL_sync_getDifference::New(::google::protobuf::Arena* arena) const {
  TL_sync_getDifference* n = new TL_sync_getDifference;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TL_sync_getDifference::Swap(TL_sync_getDifference* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TL_sync_getDifference::InternalSwap(TL_sync_getDifference* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata TL_sync_getDifference::GetMetadata() const {
  protobuf_service_2etl_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_service_2etl_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TL_sync_getDifference

// int64 auth_key_id = 2;
void TL_sync_getDifference::clear_auth_key_id() {
  auth_key_id_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 TL_sync_getDifference::auth_key_id() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_sync_getDifference.auth_key_id)
  return auth_key_id_;
}
void TL_sync_getDifference::set_auth_key_id(::google::protobuf::int64 value) {
  
  auth_key_id_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_sync_getDifference.auth_key_id)
}

// int32 user_id = 3;
void TL_sync_getDifference::clear_user_id() {
  user_id_ = 0;
}
::google::protobuf::int32 TL_sync_getDifference::user_id() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_sync_getDifference.user_id)
  return user_id_;
}
void TL_sync_getDifference::set_user_id(::google::protobuf::int32 value) {
  
  user_id_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_sync_getDifference.user_id)
}

// int32 pts = 4;
void TL_sync_getDifference::clear_pts() {
  pts_ = 0;
}
::google::protobuf::int32 TL_sync_getDifference::pts() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_sync_getDifference.pts)
  return pts_;
}
void TL_sync_getDifference::set_pts(::google::protobuf::int32 value) {
  
  pts_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_sync_getDifference.pts)
}

// int32 pts_total_limit = 5;
void TL_sync_getDifference::clear_pts_total_limit() {
  pts_total_limit_ = 0;
}
::google::protobuf::int32 TL_sync_getDifference::pts_total_limit() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_sync_getDifference.pts_total_limit)
  return pts_total_limit_;
}
void TL_sync_getDifference::set_pts_total_limit(::google::protobuf::int32 value) {
  
  pts_total_limit_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_sync_getDifference.pts_total_limit)
}

// int32 date = 6;
void TL_sync_getDifference::clear_date() {
  date_ = 0;
}
::google::protobuf::int32 TL_sync_getDifference::date() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_sync_getDifference.date)
  return date_;
}
void TL_sync_getDifference::set_date(::google::protobuf::int32 value) {
  
  date_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_sync_getDifference.date)
}

// int32 qts = 7;
void TL_sync_getDifference::clear_qts() {
  qts_ = 0;
}
::google::protobuf::int32 TL_sync_getDifference::qts() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_sync_getDifference.qts)
  return qts_;
}
void TL_sync_getDifference::set_qts(::google::protobuf::int32 value) {
  
  qts_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_sync_getDifference.qts)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TL_sync_getChannelDifference::kAuthKeyIdFieldNumber;
const int TL_sync_getChannelDifference::kUserIdFieldNumber;
const int TL_sync_getChannelDifference::kForceFieldNumber;
const int TL_sync_getChannelDifference::kChannelFieldNumber;
const int TL_sync_getChannelDifference::kFilterFieldNumber;
const int TL_sync_getChannelDifference::kPtsFieldNumber;
const int TL_sync_getChannelDifference::kLimitFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TL_sync_getChannelDifference::TL_sync_getChannelDifference()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_service_2etl_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.TL_sync_getChannelDifference)
}
TL_sync_getChannelDifference::TL_sync_getChannelDifference(const TL_sync_getChannelDifference& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_channel()) {
    channel_ = new ::mtproto::InputChannel(*from.channel_);
  } else {
    channel_ = NULL;
  }
  if (from.has_filter()) {
    filter_ = new ::mtproto::ChannelMessagesFilter(*from.filter_);
  } else {
    filter_ = NULL;
  }
  ::memcpy(&auth_key_id_, &from.auth_key_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&limit_) -
    reinterpret_cast<char*>(&auth_key_id_)) + sizeof(limit_));
  // @@protoc_insertion_point(copy_constructor:mtproto.TL_sync_getChannelDifference)
}

void TL_sync_getChannelDifference::SharedCtor() {
  ::memset(&channel_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&limit_) -
      reinterpret_cast<char*>(&channel_)) + sizeof(limit_));
  _cached_size_ = 0;
}

TL_sync_getChannelDifference::~TL_sync_getChannelDifference() {
  // @@protoc_insertion_point(destructor:mtproto.TL_sync_getChannelDifference)
  SharedDtor();
}

void TL_sync_getChannelDifference::SharedDtor() {
  if (this != internal_default_instance()) delete channel_;
  if (this != internal_default_instance()) delete filter_;
}

void TL_sync_getChannelDifference::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TL_sync_getChannelDifference::descriptor() {
  protobuf_service_2etl_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_service_2etl_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TL_sync_getChannelDifference& TL_sync_getChannelDifference::default_instance() {
  protobuf_service_2etl_2eproto::InitDefaults();
  return *internal_default_instance();
}

TL_sync_getChannelDifference* TL_sync_getChannelDifference::New(::google::protobuf::Arena* arena) const {
  TL_sync_getChannelDifference* n = new TL_sync_getChannelDifference;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TL_sync_getChannelDifference::Swap(TL_sync_getChannelDifference* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TL_sync_getChannelDifference::InternalSwap(TL_sync_getChannelDifference* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata TL_sync_getChannelDifference::GetMetadata() const {
  protobuf_service_2etl_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_service_2etl_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TL_sync_getChannelDifference

// int64 auth_key_id = 2;
void TL_sync_getChannelDifference::clear_auth_key_id() {
  auth_key_id_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 TL_sync_getChannelDifference::auth_key_id() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_sync_getChannelDifference.auth_key_id)
  return auth_key_id_;
}
void TL_sync_getChannelDifference::set_auth_key_id(::google::protobuf::int64 value) {
  
  auth_key_id_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_sync_getChannelDifference.auth_key_id)
}

// int32 user_id = 3;
void TL_sync_getChannelDifference::clear_user_id() {
  user_id_ = 0;
}
::google::protobuf::int32 TL_sync_getChannelDifference::user_id() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_sync_getChannelDifference.user_id)
  return user_id_;
}
void TL_sync_getChannelDifference::set_user_id(::google::protobuf::int32 value) {
  
  user_id_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_sync_getChannelDifference.user_id)
}

// bool force = 4;
void TL_sync_getChannelDifference::clear_force() {
  force_ = false;
}
bool TL_sync_getChannelDifference::force() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_sync_getChannelDifference.force)
  return force_;
}
void TL_sync_getChannelDifference::set_force(bool value) {
  
  force_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_sync_getChannelDifference.force)
}

// .mtproto.InputChannel channel = 5;
bool TL_sync_getChannelDifference::has_channel() const {
  return this != internal_default_instance() && channel_ != NULL;
}
void TL_sync_getChannelDifference::clear_channel() {
  if (GetArenaNoVirtual() == NULL && channel_ != NULL) delete channel_;
  channel_ = NULL;
}
const ::mtproto::InputChannel& TL_sync_getChannelDifference::channel() const {
  const ::mtproto::InputChannel* p = channel_;
  // @@protoc_insertion_point(field_get:mtproto.TL_sync_getChannelDifference.channel)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::InputChannel*>(
      &::mtproto::_InputChannel_default_instance_);
}
::mtproto::InputChannel* TL_sync_getChannelDifference::mutable_channel() {
  
  if (channel_ == NULL) {
    channel_ = new ::mtproto::InputChannel;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_sync_getChannelDifference.channel)
  return channel_;
}
::mtproto::InputChannel* TL_sync_getChannelDifference::release_channel() {
  // @@protoc_insertion_point(field_release:mtproto.TL_sync_getChannelDifference.channel)
  
  ::mtproto::InputChannel* temp = channel_;
  channel_ = NULL;
  return temp;
}
void TL_sync_getChannelDifference::set_allocated_channel(::mtproto::InputChannel* channel) {
  delete channel_;
  channel_ = channel;
  if (channel) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_sync_getChannelDifference.channel)
}

// .mtproto.ChannelMessagesFilter filter = 6;
bool TL_sync_getChannelDifference::has_filter() const {
  return this != internal_default_instance() && filter_ != NULL;
}
void TL_sync_getChannelDifference::clear_filter() {
  if (GetArenaNoVirtual() == NULL && filter_ != NULL) delete filter_;
  filter_ = NULL;
}
const ::mtproto::ChannelMessagesFilter& TL_sync_getChannelDifference::filter() const {
  const ::mtproto::ChannelMessagesFilter* p = filter_;
  // @@protoc_insertion_point(field_get:mtproto.TL_sync_getChannelDifference.filter)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::ChannelMessagesFilter*>(
      &::mtproto::_ChannelMessagesFilter_default_instance_);
}
::mtproto::ChannelMessagesFilter* TL_sync_getChannelDifference::mutable_filter() {
  
  if (filter_ == NULL) {
    filter_ = new ::mtproto::ChannelMessagesFilter;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_sync_getChannelDifference.filter)
  return filter_;
}
::mtproto::ChannelMessagesFilter* TL_sync_getChannelDifference::release_filter() {
  // @@protoc_insertion_point(field_release:mtproto.TL_sync_getChannelDifference.filter)
  
  ::mtproto::ChannelMessagesFilter* temp = filter_;
  filter_ = NULL;
  return temp;
}
void TL_sync_getChannelDifference::set_allocated_filter(::mtproto::ChannelMessagesFilter* filter) {
  delete filter_;
  filter_ = filter;
  if (filter) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_sync_getChannelDifference.filter)
}

// int32 pts = 7;
void TL_sync_getChannelDifference::clear_pts() {
  pts_ = 0;
}
::google::protobuf::int32 TL_sync_getChannelDifference::pts() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_sync_getChannelDifference.pts)
  return pts_;
}
void TL_sync_getChannelDifference::set_pts(::google::protobuf::int32 value) {
  
  pts_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_sync_getChannelDifference.pts)
}

// int32 limit = 8;
void TL_sync_getChannelDifference::clear_limit() {
  limit_ = 0;
}
::google::protobuf::int32 TL_sync_getChannelDifference::limit() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_sync_getChannelDifference.limit)
  return limit_;
}
void TL_sync_getChannelDifference::set_limit(::google::protobuf::int32 value) {
  
  limit_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_sync_getChannelDifference.limit)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace mtproto

// @@protoc_insertion_point(global_scope)
