// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: schema.tl.transport.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "schema.tl.transport.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace mtproto {
class MsgsAck_DataDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<MsgsAck_Data>
     _instance;
} _MsgsAck_Data_default_instance_;
class MsgsAckDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<MsgsAck>
     _instance;
} _MsgsAck_default_instance_;
class TL_msgs_ackDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TL_msgs_ack>
     _instance;
} _TL_msgs_ack_default_instance_;
class BadMsgNotification_DataDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<BadMsgNotification_Data>
     _instance;
} _BadMsgNotification_Data_default_instance_;
class BadMsgNotificationDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<BadMsgNotification>
     _instance;
} _BadMsgNotification_default_instance_;
class TL_bad_msg_notificationDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TL_bad_msg_notification>
     _instance;
} _TL_bad_msg_notification_default_instance_;
class TL_bad_server_saltDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TL_bad_server_salt>
     _instance;
} _TL_bad_server_salt_default_instance_;
class FutureSalt_DataDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<FutureSalt_Data>
     _instance;
} _FutureSalt_Data_default_instance_;
class FutureSaltDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<FutureSalt>
     _instance;
} _FutureSalt_default_instance_;
class TL_future_saltDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TL_future_salt>
     _instance;
} _TL_future_salt_default_instance_;
class help_ConfigSimple_DataDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<help_ConfigSimple_Data>
     _instance;
} _help_ConfigSimple_Data_default_instance_;
class help_ConfigSimpleDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<help_ConfigSimple>
     _instance;
} _help_ConfigSimple_default_instance_;
class TL_help_configSimpleDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TL_help_configSimple>
     _instance;
} _TL_help_configSimple_default_instance_;
class MsgResendReq_DataDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<MsgResendReq_Data>
     _instance;
} _MsgResendReq_Data_default_instance_;
class MsgResendReqDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<MsgResendReq>
     _instance;
} _MsgResendReq_default_instance_;
class TL_msg_resend_reqDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TL_msg_resend_req>
     _instance;
} _TL_msg_resend_req_default_instance_;
class NewSession_DataDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<NewSession_Data>
     _instance;
} _NewSession_Data_default_instance_;
class NewSessionDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<NewSession>
     _instance;
} _NewSession_default_instance_;
class TL_new_session_createdDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TL_new_session_created>
     _instance;
} _TL_new_session_created_default_instance_;
class IpPort_DataDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<IpPort_Data>
     _instance;
} _IpPort_Data_default_instance_;
class IpPortDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<IpPort>
     _instance;
} _IpPort_default_instance_;
class TL_ipPortDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TL_ipPort>
     _instance;
} _TL_ipPort_default_instance_;
class TL_ipPortSecretDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TL_ipPortSecret>
     _instance;
} _TL_ipPortSecret_default_instance_;
class MsgsStateReq_DataDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<MsgsStateReq_Data>
     _instance;
} _MsgsStateReq_Data_default_instance_;
class MsgsStateReqDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<MsgsStateReq>
     _instance;
} _MsgsStateReq_default_instance_;
class TL_msgs_state_reqDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TL_msgs_state_req>
     _instance;
} _TL_msgs_state_req_default_instance_;
class MsgsStateInfo_DataDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<MsgsStateInfo_Data>
     _instance;
} _MsgsStateInfo_Data_default_instance_;
class MsgsStateInfoDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<MsgsStateInfo>
     _instance;
} _MsgsStateInfo_default_instance_;
class TL_msgs_state_infoDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TL_msgs_state_info>
     _instance;
} _TL_msgs_state_info_default_instance_;
class MsgsAllInfo_DataDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<MsgsAllInfo_Data>
     _instance;
} _MsgsAllInfo_Data_default_instance_;
class MsgsAllInfoDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<MsgsAllInfo>
     _instance;
} _MsgsAllInfo_default_instance_;
class TL_msgs_all_infoDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TL_msgs_all_info>
     _instance;
} _TL_msgs_all_info_default_instance_;
class MsgDetailedInfo_DataDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<MsgDetailedInfo_Data>
     _instance;
} _MsgDetailedInfo_Data_default_instance_;
class MsgDetailedInfoDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<MsgDetailedInfo>
     _instance;
} _MsgDetailedInfo_default_instance_;
class TL_msg_detailed_infoDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TL_msg_detailed_info>
     _instance;
} _TL_msg_detailed_info_default_instance_;
class TL_msg_new_detailed_infoDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TL_msg_new_detailed_info>
     _instance;
} _TL_msg_new_detailed_info_default_instance_;
class AccessPointRule_DataDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<AccessPointRule_Data>
     _instance;
} _AccessPointRule_Data_default_instance_;
class AccessPointRuleDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<AccessPointRule>
     _instance;
} _AccessPointRule_default_instance_;
class TL_accessPointRuleDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TL_accessPointRule>
     _instance;
} _TL_accessPointRule_default_instance_;
class RpcDropAnswer_DataDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<RpcDropAnswer_Data>
     _instance;
} _RpcDropAnswer_Data_default_instance_;
class RpcDropAnswerDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<RpcDropAnswer>
     _instance;
} _RpcDropAnswer_default_instance_;
class TL_rpc_answer_unknownDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TL_rpc_answer_unknown>
     _instance;
} _TL_rpc_answer_unknown_default_instance_;
class TL_rpc_answer_dropped_runningDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TL_rpc_answer_dropped_running>
     _instance;
} _TL_rpc_answer_dropped_running_default_instance_;
class TL_rpc_answer_droppedDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TL_rpc_answer_dropped>
     _instance;
} _TL_rpc_answer_dropped_default_instance_;
class Pong_DataDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<Pong_Data>
     _instance;
} _Pong_Data_default_instance_;
class PongDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<Pong>
     _instance;
} _Pong_default_instance_;
class TL_pongDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TL_pong>
     _instance;
} _TL_pong_default_instance_;
class DestroySessionRes_DataDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<DestroySessionRes_Data>
     _instance;
} _DestroySessionRes_Data_default_instance_;
class DestroySessionResDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<DestroySessionRes>
     _instance;
} _DestroySessionRes_default_instance_;
class TL_destroy_session_okDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TL_destroy_session_ok>
     _instance;
} _TL_destroy_session_ok_default_instance_;
class TL_destroy_session_noneDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TL_destroy_session_none>
     _instance;
} _TL_destroy_session_none_default_instance_;
class HttpWait_DataDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<HttpWait_Data>
     _instance;
} _HttpWait_Data_default_instance_;
class HttpWaitDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<HttpWait>
     _instance;
} _HttpWait_default_instance_;
class TL_http_waitDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TL_http_wait>
     _instance;
} _TL_http_wait_default_instance_;
class RpcError_DataDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<RpcError_Data>
     _instance;
} _RpcError_Data_default_instance_;
class RpcErrorDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<RpcError>
     _instance;
} _RpcError_default_instance_;
class TL_rpc_errorDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TL_rpc_error>
     _instance;
} _TL_rpc_error_default_instance_;
class FutureSalts_DataDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<FutureSalts_Data>
     _instance;
} _FutureSalts_Data_default_instance_;
class FutureSaltsDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<FutureSalts>
     _instance;
} _FutureSalts_default_instance_;
class TL_future_saltsDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TL_future_salts>
     _instance;
} _TL_future_salts_default_instance_;

namespace protobuf_schema_2etl_2etransport_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[60];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgsAck_Data, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgsAck_Data, msg_ids_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgsAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgsAck, constructor_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgsAck, data2_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_msgs_ack, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_msgs_ack, data2_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BadMsgNotification_Data, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BadMsgNotification_Data, bad_msg_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BadMsgNotification_Data, bad_msg_seqno_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BadMsgNotification_Data, error_code_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BadMsgNotification_Data, new_server_salt_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BadMsgNotification, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BadMsgNotification, constructor_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BadMsgNotification, data2_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_bad_msg_notification, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_bad_msg_notification, data2_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_bad_server_salt, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_bad_server_salt, data2_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FutureSalt_Data, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FutureSalt_Data, valid_since_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FutureSalt_Data, valid_until_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FutureSalt_Data, salt_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FutureSalt, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FutureSalt, constructor_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FutureSalt, data2_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_future_salt, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_future_salt, data2_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(help_ConfigSimple_Data, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(help_ConfigSimple_Data, date_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(help_ConfigSimple_Data, expires_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(help_ConfigSimple_Data, rules_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(help_ConfigSimple, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(help_ConfigSimple, constructor_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(help_ConfigSimple, data2_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_help_configSimple, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_help_configSimple, data2_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgResendReq_Data, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgResendReq_Data, msg_ids_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgResendReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgResendReq, constructor_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgResendReq, data2_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_msg_resend_req, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_msg_resend_req, data2_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NewSession_Data, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NewSession_Data, first_msg_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NewSession_Data, unique_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NewSession_Data, server_salt_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NewSession, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NewSession, constructor_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NewSession, data2_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_new_session_created, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_new_session_created, data2_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(IpPort_Data, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(IpPort_Data, ipv4_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(IpPort_Data, port_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(IpPort_Data, secret_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(IpPort, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(IpPort, constructor_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(IpPort, data2_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_ipPort, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_ipPort, data2_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_ipPortSecret, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_ipPortSecret, data2_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgsStateReq_Data, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgsStateReq_Data, msg_ids_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgsStateReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgsStateReq, constructor_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgsStateReq, data2_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_msgs_state_req, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_msgs_state_req, data2_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgsStateInfo_Data, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgsStateInfo_Data, req_msg_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgsStateInfo_Data, info_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgsStateInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgsStateInfo, constructor_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgsStateInfo, data2_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_msgs_state_info, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_msgs_state_info, data2_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgsAllInfo_Data, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgsAllInfo_Data, msg_ids_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgsAllInfo_Data, info_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgsAllInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgsAllInfo, constructor_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgsAllInfo, data2_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_msgs_all_info, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_msgs_all_info, data2_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDetailedInfo_Data, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDetailedInfo_Data, msg_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDetailedInfo_Data, answer_msg_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDetailedInfo_Data, bytes_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDetailedInfo_Data, status_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDetailedInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDetailedInfo, constructor_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDetailedInfo, data2_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_msg_detailed_info, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_msg_detailed_info, data2_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_msg_new_detailed_info, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_msg_new_detailed_info, data2_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AccessPointRule_Data, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AccessPointRule_Data, phone_prefix_rules_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AccessPointRule_Data, dc_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AccessPointRule_Data, ips_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AccessPointRule, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AccessPointRule, constructor_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AccessPointRule, data2_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_accessPointRule, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_accessPointRule, data2_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RpcDropAnswer_Data, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RpcDropAnswer_Data, msg_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RpcDropAnswer_Data, seq_no_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RpcDropAnswer_Data, bytes_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RpcDropAnswer, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RpcDropAnswer, constructor_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RpcDropAnswer, data2_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_rpc_answer_unknown, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_rpc_answer_unknown, data2_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_rpc_answer_dropped_running, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_rpc_answer_dropped_running, data2_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_rpc_answer_dropped, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_rpc_answer_dropped, data2_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Pong_Data, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Pong_Data, msg_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Pong_Data, ping_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Pong, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Pong, constructor_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Pong, data2_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_pong, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_pong, data2_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DestroySessionRes_Data, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DestroySessionRes_Data, session_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DestroySessionRes, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DestroySessionRes, constructor_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DestroySessionRes, data2_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_destroy_session_ok, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_destroy_session_ok, data2_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_destroy_session_none, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_destroy_session_none, data2_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HttpWait_Data, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HttpWait_Data, max_delay_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HttpWait_Data, wait_after_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HttpWait_Data, max_wait_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HttpWait, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HttpWait, constructor_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HttpWait, data2_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_http_wait, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_http_wait, data2_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RpcError_Data, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RpcError_Data, error_code_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RpcError_Data, error_message_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RpcError, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RpcError, constructor_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RpcError, data2_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_rpc_error, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_rpc_error, data2_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FutureSalts_Data, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FutureSalts_Data, req_msg_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FutureSalts_Data, now_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FutureSalts_Data, salts_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FutureSalts, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FutureSalts, constructor_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FutureSalts, data2_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_future_salts, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_future_salts, data2_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(MsgsAck_Data)},
  { 6, -1, sizeof(MsgsAck)},
  { 13, -1, sizeof(TL_msgs_ack)},
  { 19, -1, sizeof(BadMsgNotification_Data)},
  { 28, -1, sizeof(BadMsgNotification)},
  { 35, -1, sizeof(TL_bad_msg_notification)},
  { 41, -1, sizeof(TL_bad_server_salt)},
  { 47, -1, sizeof(FutureSalt_Data)},
  { 55, -1, sizeof(FutureSalt)},
  { 62, -1, sizeof(TL_future_salt)},
  { 68, -1, sizeof(help_ConfigSimple_Data)},
  { 76, -1, sizeof(help_ConfigSimple)},
  { 83, -1, sizeof(TL_help_configSimple)},
  { 89, -1, sizeof(MsgResendReq_Data)},
  { 95, -1, sizeof(MsgResendReq)},
  { 102, -1, sizeof(TL_msg_resend_req)},
  { 108, -1, sizeof(NewSession_Data)},
  { 116, -1, sizeof(NewSession)},
  { 123, -1, sizeof(TL_new_session_created)},
  { 129, -1, sizeof(IpPort_Data)},
  { 137, -1, sizeof(IpPort)},
  { 144, -1, sizeof(TL_ipPort)},
  { 150, -1, sizeof(TL_ipPortSecret)},
  { 156, -1, sizeof(MsgsStateReq_Data)},
  { 162, -1, sizeof(MsgsStateReq)},
  { 169, -1, sizeof(TL_msgs_state_req)},
  { 175, -1, sizeof(MsgsStateInfo_Data)},
  { 182, -1, sizeof(MsgsStateInfo)},
  { 189, -1, sizeof(TL_msgs_state_info)},
  { 195, -1, sizeof(MsgsAllInfo_Data)},
  { 202, -1, sizeof(MsgsAllInfo)},
  { 209, -1, sizeof(TL_msgs_all_info)},
  { 215, -1, sizeof(MsgDetailedInfo_Data)},
  { 224, -1, sizeof(MsgDetailedInfo)},
  { 231, -1, sizeof(TL_msg_detailed_info)},
  { 237, -1, sizeof(TL_msg_new_detailed_info)},
  { 243, -1, sizeof(AccessPointRule_Data)},
  { 251, -1, sizeof(AccessPointRule)},
  { 258, -1, sizeof(TL_accessPointRule)},
  { 264, -1, sizeof(RpcDropAnswer_Data)},
  { 272, -1, sizeof(RpcDropAnswer)},
  { 279, -1, sizeof(TL_rpc_answer_unknown)},
  { 285, -1, sizeof(TL_rpc_answer_dropped_running)},
  { 291, -1, sizeof(TL_rpc_answer_dropped)},
  { 297, -1, sizeof(Pong_Data)},
  { 304, -1, sizeof(Pong)},
  { 311, -1, sizeof(TL_pong)},
  { 317, -1, sizeof(DestroySessionRes_Data)},
  { 323, -1, sizeof(DestroySessionRes)},
  { 330, -1, sizeof(TL_destroy_session_ok)},
  { 336, -1, sizeof(TL_destroy_session_none)},
  { 342, -1, sizeof(HttpWait_Data)},
  { 350, -1, sizeof(HttpWait)},
  { 357, -1, sizeof(TL_http_wait)},
  { 363, -1, sizeof(RpcError_Data)},
  { 370, -1, sizeof(RpcError)},
  { 377, -1, sizeof(TL_rpc_error)},
  { 383, -1, sizeof(FutureSalts_Data)},
  { 391, -1, sizeof(FutureSalts)},
  { 398, -1, sizeof(TL_future_salts)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_MsgsAck_Data_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_MsgsAck_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TL_msgs_ack_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_BadMsgNotification_Data_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_BadMsgNotification_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TL_bad_msg_notification_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TL_bad_server_salt_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_FutureSalt_Data_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_FutureSalt_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TL_future_salt_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_help_ConfigSimple_Data_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_help_ConfigSimple_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TL_help_configSimple_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_MsgResendReq_Data_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_MsgResendReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TL_msg_resend_req_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_NewSession_Data_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_NewSession_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TL_new_session_created_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_IpPort_Data_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_IpPort_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TL_ipPort_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TL_ipPortSecret_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_MsgsStateReq_Data_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_MsgsStateReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TL_msgs_state_req_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_MsgsStateInfo_Data_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_MsgsStateInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TL_msgs_state_info_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_MsgsAllInfo_Data_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_MsgsAllInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TL_msgs_all_info_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_MsgDetailedInfo_Data_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_MsgDetailedInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TL_msg_detailed_info_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TL_msg_new_detailed_info_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_AccessPointRule_Data_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_AccessPointRule_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TL_accessPointRule_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_RpcDropAnswer_Data_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_RpcDropAnswer_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TL_rpc_answer_unknown_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TL_rpc_answer_dropped_running_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TL_rpc_answer_dropped_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Pong_Data_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Pong_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TL_pong_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_DestroySessionRes_Data_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_DestroySessionRes_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TL_destroy_session_ok_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TL_destroy_session_none_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_HttpWait_Data_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_HttpWait_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TL_http_wait_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_RpcError_Data_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_RpcError_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TL_rpc_error_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_FutureSalts_Data_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_FutureSalts_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TL_future_salts_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "schema.tl.transport.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 60);
}

}  // namespace
void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  ::mtproto::protobuf_schema_2etl_2ecrc32_2eproto::InitDefaults();
  _MsgsAck_Data_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_MsgsAck_Data_default_instance_);_MsgsAck_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_MsgsAck_default_instance_);_TL_msgs_ack_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TL_msgs_ack_default_instance_);_BadMsgNotification_Data_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_BadMsgNotification_Data_default_instance_);_BadMsgNotification_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_BadMsgNotification_default_instance_);_TL_bad_msg_notification_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TL_bad_msg_notification_default_instance_);_TL_bad_server_salt_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TL_bad_server_salt_default_instance_);_FutureSalt_Data_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_FutureSalt_Data_default_instance_);_FutureSalt_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_FutureSalt_default_instance_);_TL_future_salt_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TL_future_salt_default_instance_);_help_ConfigSimple_Data_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_help_ConfigSimple_Data_default_instance_);_help_ConfigSimple_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_help_ConfigSimple_default_instance_);_TL_help_configSimple_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TL_help_configSimple_default_instance_);_MsgResendReq_Data_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_MsgResendReq_Data_default_instance_);_MsgResendReq_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_MsgResendReq_default_instance_);_TL_msg_resend_req_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TL_msg_resend_req_default_instance_);_NewSession_Data_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_NewSession_Data_default_instance_);_NewSession_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_NewSession_default_instance_);_TL_new_session_created_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TL_new_session_created_default_instance_);_IpPort_Data_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_IpPort_Data_default_instance_);_IpPort_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_IpPort_default_instance_);_TL_ipPort_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TL_ipPort_default_instance_);_TL_ipPortSecret_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TL_ipPortSecret_default_instance_);_MsgsStateReq_Data_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_MsgsStateReq_Data_default_instance_);_MsgsStateReq_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_MsgsStateReq_default_instance_);_TL_msgs_state_req_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TL_msgs_state_req_default_instance_);_MsgsStateInfo_Data_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_MsgsStateInfo_Data_default_instance_);_MsgsStateInfo_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_MsgsStateInfo_default_instance_);_TL_msgs_state_info_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TL_msgs_state_info_default_instance_);_MsgsAllInfo_Data_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_MsgsAllInfo_Data_default_instance_);_MsgsAllInfo_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_MsgsAllInfo_default_instance_);_TL_msgs_all_info_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TL_msgs_all_info_default_instance_);_MsgDetailedInfo_Data_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_MsgDetailedInfo_Data_default_instance_);_MsgDetailedInfo_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_MsgDetailedInfo_default_instance_);_TL_msg_detailed_info_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TL_msg_detailed_info_default_instance_);_TL_msg_new_detailed_info_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TL_msg_new_detailed_info_default_instance_);_AccessPointRule_Data_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_AccessPointRule_Data_default_instance_);_AccessPointRule_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_AccessPointRule_default_instance_);_TL_accessPointRule_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TL_accessPointRule_default_instance_);_RpcDropAnswer_Data_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_RpcDropAnswer_Data_default_instance_);_RpcDropAnswer_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_RpcDropAnswer_default_instance_);_TL_rpc_answer_unknown_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TL_rpc_answer_unknown_default_instance_);_TL_rpc_answer_dropped_running_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TL_rpc_answer_dropped_running_default_instance_);_TL_rpc_answer_dropped_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TL_rpc_answer_dropped_default_instance_);_Pong_Data_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_Pong_Data_default_instance_);_Pong_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_Pong_default_instance_);_TL_pong_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TL_pong_default_instance_);_DestroySessionRes_Data_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_DestroySessionRes_Data_default_instance_);_DestroySessionRes_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_DestroySessionRes_default_instance_);_TL_destroy_session_ok_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TL_destroy_session_ok_default_instance_);_TL_destroy_session_none_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TL_destroy_session_none_default_instance_);_HttpWait_Data_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_HttpWait_Data_default_instance_);_HttpWait_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_HttpWait_default_instance_);_TL_http_wait_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TL_http_wait_default_instance_);_RpcError_Data_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_RpcError_Data_default_instance_);_RpcError_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_RpcError_default_instance_);_TL_rpc_error_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TL_rpc_error_default_instance_);_FutureSalts_Data_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_FutureSalts_Data_default_instance_);_FutureSalts_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_FutureSalts_default_instance_);_TL_future_salts_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TL_future_salts_default_instance_);_MsgsAck_default_instance_._instance.get_mutable()->data2_ = const_cast< ::mtproto::MsgsAck_Data*>(
      ::mtproto::MsgsAck_Data::internal_default_instance());
  _TL_msgs_ack_default_instance_._instance.get_mutable()->data2_ = const_cast< ::mtproto::MsgsAck_Data*>(
      ::mtproto::MsgsAck_Data::internal_default_instance());
  _BadMsgNotification_default_instance_._instance.get_mutable()->data2_ = const_cast< ::mtproto::BadMsgNotification_Data*>(
      ::mtproto::BadMsgNotification_Data::internal_default_instance());
  _TL_bad_msg_notification_default_instance_._instance.get_mutable()->data2_ = const_cast< ::mtproto::BadMsgNotification_Data*>(
      ::mtproto::BadMsgNotification_Data::internal_default_instance());
  _TL_bad_server_salt_default_instance_._instance.get_mutable()->data2_ = const_cast< ::mtproto::BadMsgNotification_Data*>(
      ::mtproto::BadMsgNotification_Data::internal_default_instance());
  _FutureSalt_default_instance_._instance.get_mutable()->data2_ = const_cast< ::mtproto::FutureSalt_Data*>(
      ::mtproto::FutureSalt_Data::internal_default_instance());
  _TL_future_salt_default_instance_._instance.get_mutable()->data2_ = const_cast< ::mtproto::FutureSalt_Data*>(
      ::mtproto::FutureSalt_Data::internal_default_instance());
  _help_ConfigSimple_default_instance_._instance.get_mutable()->data2_ = const_cast< ::mtproto::help_ConfigSimple_Data*>(
      ::mtproto::help_ConfigSimple_Data::internal_default_instance());
  _TL_help_configSimple_default_instance_._instance.get_mutable()->data2_ = const_cast< ::mtproto::help_ConfigSimple_Data*>(
      ::mtproto::help_ConfigSimple_Data::internal_default_instance());
  _MsgResendReq_default_instance_._instance.get_mutable()->data2_ = const_cast< ::mtproto::MsgResendReq_Data*>(
      ::mtproto::MsgResendReq_Data::internal_default_instance());
  _TL_msg_resend_req_default_instance_._instance.get_mutable()->data2_ = const_cast< ::mtproto::MsgResendReq_Data*>(
      ::mtproto::MsgResendReq_Data::internal_default_instance());
  _NewSession_default_instance_._instance.get_mutable()->data2_ = const_cast< ::mtproto::NewSession_Data*>(
      ::mtproto::NewSession_Data::internal_default_instance());
  _TL_new_session_created_default_instance_._instance.get_mutable()->data2_ = const_cast< ::mtproto::NewSession_Data*>(
      ::mtproto::NewSession_Data::internal_default_instance());
  _IpPort_default_instance_._instance.get_mutable()->data2_ = const_cast< ::mtproto::IpPort_Data*>(
      ::mtproto::IpPort_Data::internal_default_instance());
  _TL_ipPort_default_instance_._instance.get_mutable()->data2_ = const_cast< ::mtproto::IpPort_Data*>(
      ::mtproto::IpPort_Data::internal_default_instance());
  _TL_ipPortSecret_default_instance_._instance.get_mutable()->data2_ = const_cast< ::mtproto::IpPort_Data*>(
      ::mtproto::IpPort_Data::internal_default_instance());
  _MsgsStateReq_default_instance_._instance.get_mutable()->data2_ = const_cast< ::mtproto::MsgsStateReq_Data*>(
      ::mtproto::MsgsStateReq_Data::internal_default_instance());
  _TL_msgs_state_req_default_instance_._instance.get_mutable()->data2_ = const_cast< ::mtproto::MsgsStateReq_Data*>(
      ::mtproto::MsgsStateReq_Data::internal_default_instance());
  _MsgsStateInfo_default_instance_._instance.get_mutable()->data2_ = const_cast< ::mtproto::MsgsStateInfo_Data*>(
      ::mtproto::MsgsStateInfo_Data::internal_default_instance());
  _TL_msgs_state_info_default_instance_._instance.get_mutable()->data2_ = const_cast< ::mtproto::MsgsStateInfo_Data*>(
      ::mtproto::MsgsStateInfo_Data::internal_default_instance());
  _MsgsAllInfo_default_instance_._instance.get_mutable()->data2_ = const_cast< ::mtproto::MsgsAllInfo_Data*>(
      ::mtproto::MsgsAllInfo_Data::internal_default_instance());
  _TL_msgs_all_info_default_instance_._instance.get_mutable()->data2_ = const_cast< ::mtproto::MsgsAllInfo_Data*>(
      ::mtproto::MsgsAllInfo_Data::internal_default_instance());
  _MsgDetailedInfo_default_instance_._instance.get_mutable()->data2_ = const_cast< ::mtproto::MsgDetailedInfo_Data*>(
      ::mtproto::MsgDetailedInfo_Data::internal_default_instance());
  _TL_msg_detailed_info_default_instance_._instance.get_mutable()->data2_ = const_cast< ::mtproto::MsgDetailedInfo_Data*>(
      ::mtproto::MsgDetailedInfo_Data::internal_default_instance());
  _TL_msg_new_detailed_info_default_instance_._instance.get_mutable()->data2_ = const_cast< ::mtproto::MsgDetailedInfo_Data*>(
      ::mtproto::MsgDetailedInfo_Data::internal_default_instance());
  _AccessPointRule_default_instance_._instance.get_mutable()->data2_ = const_cast< ::mtproto::AccessPointRule_Data*>(
      ::mtproto::AccessPointRule_Data::internal_default_instance());
  _TL_accessPointRule_default_instance_._instance.get_mutable()->data2_ = const_cast< ::mtproto::AccessPointRule_Data*>(
      ::mtproto::AccessPointRule_Data::internal_default_instance());
  _RpcDropAnswer_default_instance_._instance.get_mutable()->data2_ = const_cast< ::mtproto::RpcDropAnswer_Data*>(
      ::mtproto::RpcDropAnswer_Data::internal_default_instance());
  _TL_rpc_answer_unknown_default_instance_._instance.get_mutable()->data2_ = const_cast< ::mtproto::RpcDropAnswer_Data*>(
      ::mtproto::RpcDropAnswer_Data::internal_default_instance());
  _TL_rpc_answer_dropped_running_default_instance_._instance.get_mutable()->data2_ = const_cast< ::mtproto::RpcDropAnswer_Data*>(
      ::mtproto::RpcDropAnswer_Data::internal_default_instance());
  _TL_rpc_answer_dropped_default_instance_._instance.get_mutable()->data2_ = const_cast< ::mtproto::RpcDropAnswer_Data*>(
      ::mtproto::RpcDropAnswer_Data::internal_default_instance());
  _Pong_default_instance_._instance.get_mutable()->data2_ = const_cast< ::mtproto::Pong_Data*>(
      ::mtproto::Pong_Data::internal_default_instance());
  _TL_pong_default_instance_._instance.get_mutable()->data2_ = const_cast< ::mtproto::Pong_Data*>(
      ::mtproto::Pong_Data::internal_default_instance());
  _DestroySessionRes_default_instance_._instance.get_mutable()->data2_ = const_cast< ::mtproto::DestroySessionRes_Data*>(
      ::mtproto::DestroySessionRes_Data::internal_default_instance());
  _TL_destroy_session_ok_default_instance_._instance.get_mutable()->data2_ = const_cast< ::mtproto::DestroySessionRes_Data*>(
      ::mtproto::DestroySessionRes_Data::internal_default_instance());
  _TL_destroy_session_none_default_instance_._instance.get_mutable()->data2_ = const_cast< ::mtproto::DestroySessionRes_Data*>(
      ::mtproto::DestroySessionRes_Data::internal_default_instance());
  _HttpWait_default_instance_._instance.get_mutable()->data2_ = const_cast< ::mtproto::HttpWait_Data*>(
      ::mtproto::HttpWait_Data::internal_default_instance());
  _TL_http_wait_default_instance_._instance.get_mutable()->data2_ = const_cast< ::mtproto::HttpWait_Data*>(
      ::mtproto::HttpWait_Data::internal_default_instance());
  _RpcError_default_instance_._instance.get_mutable()->data2_ = const_cast< ::mtproto::RpcError_Data*>(
      ::mtproto::RpcError_Data::internal_default_instance());
  _TL_rpc_error_default_instance_._instance.get_mutable()->data2_ = const_cast< ::mtproto::RpcError_Data*>(
      ::mtproto::RpcError_Data::internal_default_instance());
  _FutureSalts_default_instance_._instance.get_mutable()->data2_ = const_cast< ::mtproto::FutureSalts_Data*>(
      ::mtproto::FutureSalts_Data::internal_default_instance());
  _TL_future_salts_default_instance_._instance.get_mutable()->data2_ = const_cast< ::mtproto::FutureSalts_Data*>(
      ::mtproto::FutureSalts_Data::internal_default_instance());
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
namespace {
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\031schema.tl.transport.proto\022\007mtproto\032\025sc"
      "hema.tl.crc32.proto\"\037\n\014MsgsAck_Data\022\017\n\007m"
      "sg_ids\030\001 \003(\003\"\\\n\007MsgsAck\022+\n\013constructor\030\001"
      " \001(\0162\026.mtproto.TLConstructor\022$\n\005data2\030\002 "
      "\001(\0132\025.mtproto.MsgsAck_Data\"3\n\013TL_msgs_ac"
      "k\022$\n\005data2\030\002 \001(\0132\025.mtproto.MsgsAck_Data\""
      "q\n\027BadMsgNotification_Data\022\022\n\nbad_msg_id"
      "\030\001 \001(\003\022\025\n\rbad_msg_seqno\030\002 \001(\005\022\022\n\nerror_c"
      "ode\030\003 \001(\005\022\027\n\017new_server_salt\030\004 \001(\003\"r\n\022Ba"
      "dMsgNotification\022+\n\013constructor\030\001 \001(\0162\026."
      "mtproto.TLConstructor\022/\n\005data2\030\002 \001(\0132 .m"
      "tproto.BadMsgNotification_Data\"J\n\027TL_bad"
      "_msg_notification\022/\n\005data2\030\002 \001(\0132 .mtpro"
      "to.BadMsgNotification_Data\"E\n\022TL_bad_ser"
      "ver_salt\022/\n\005data2\030\002 \001(\0132 .mtproto.BadMsg"
      "Notification_Data\"I\n\017FutureSalt_Data\022\023\n\013"
      "valid_since\030\001 \001(\005\022\023\n\013valid_until\030\002 \001(\005\022\014"
      "\n\004salt\030\003 \001(\003\"b\n\nFutureSalt\022+\n\013constructo"
      "r\030\001 \001(\0162\026.mtproto.TLConstructor\022\'\n\005data2"
      "\030\002 \001(\0132\030.mtproto.FutureSalt_Data\"9\n\016TL_f"
      "uture_salt\022\'\n\005data2\030\002 \001(\0132\030.mtproto.Futu"
      "reSalt_Data\"`\n\026help_ConfigSimple_Data\022\014\n"
      "\004date\030\001 \001(\005\022\017\n\007expires\030\002 \001(\005\022\'\n\005rules\030\003 "
      "\003(\0132\030.mtproto.AccessPointRule\"p\n\021help_Co"
      "nfigSimple\022+\n\013constructor\030\001 \001(\0162\026.mtprot"
      "o.TLConstructor\022.\n\005data2\030\002 \001(\0132\037.mtproto"
      ".help_ConfigSimple_Data\"F\n\024TL_help_confi"
      "gSimple\022.\n\005data2\030\002 \001(\0132\037.mtproto.help_Co"
      "nfigSimple_Data\"$\n\021MsgResendReq_Data\022\017\n\007"
      "msg_ids\030\001 \003(\003\"f\n\014MsgResendReq\022+\n\013constru"
      "ctor\030\001 \001(\0162\026.mtproto.TLConstructor\022)\n\005da"
      "ta2\030\002 \001(\0132\032.mtproto.MsgResendReq_Data\">\n"
      "\021TL_msg_resend_req\022)\n\005data2\030\002 \001(\0132\032.mtpr"
      "oto.MsgResendReq_Data\"O\n\017NewSession_Data"
      "\022\024\n\014first_msg_id\030\001 \001(\003\022\021\n\tunique_id\030\002 \001("
      "\003\022\023\n\013server_salt\030\003 \001(\003\"b\n\nNewSession\022+\n\013"
      "constructor\030\001 \001(\0162\026.mtproto.TLConstructo"
      "r\022\'\n\005data2\030\002 \001(\0132\030.mtproto.NewSession_Da"
      "ta\"A\n\026TL_new_session_created\022\'\n\005data2\030\002 "
      "\001(\0132\030.mtproto.NewSession_Data\"9\n\013IpPort_"
      "Data\022\014\n\004ipv4\030\001 \001(\005\022\014\n\004port\030\002 \001(\005\022\016\n\006secr"
      "et\030\003 \001(\014\"Z\n\006IpPort\022+\n\013constructor\030\001 \001(\0162"
      "\026.mtproto.TLConstructor\022#\n\005data2\030\002 \001(\0132\024"
      ".mtproto.IpPort_Data\"0\n\tTL_ipPort\022#\n\005dat"
      "a2\030\002 \001(\0132\024.mtproto.IpPort_Data\"6\n\017TL_ipP"
      "ortSecret\022#\n\005data2\030\002 \001(\0132\024.mtproto.IpPor"
      "t_Data\"$\n\021MsgsStateReq_Data\022\017\n\007msg_ids\030\001"
      " \003(\003\"f\n\014MsgsStateReq\022+\n\013constructor\030\001 \001("
      "\0162\026.mtproto.TLConstructor\022)\n\005data2\030\002 \001(\013"
      "2\032.mtproto.MsgsStateReq_Data\">\n\021TL_msgs_"
      "state_req\022)\n\005data2\030\002 \001(\0132\032.mtproto.MsgsS"
      "tateReq_Data\"6\n\022MsgsStateInfo_Data\022\022\n\nre"
      "q_msg_id\030\001 \001(\003\022\014\n\004info\030\002 \001(\t\"h\n\rMsgsStat"
      "eInfo\022+\n\013constructor\030\001 \001(\0162\026.mtproto.TLC"
      "onstructor\022*\n\005data2\030\002 \001(\0132\033.mtproto.Msgs"
      "StateInfo_Data\"@\n\022TL_msgs_state_info\022*\n\005"
      "data2\030\002 \001(\0132\033.mtproto.MsgsStateInfo_Data"
      "\"1\n\020MsgsAllInfo_Data\022\017\n\007msg_ids\030\001 \003(\003\022\014\n"
      "\004info\030\002 \001(\t\"d\n\013MsgsAllInfo\022+\n\013constructo"
      "r\030\001 \001(\0162\026.mtproto.TLConstructor\022(\n\005data2"
      "\030\002 \001(\0132\031.mtproto.MsgsAllInfo_Data\"<\n\020TL_"
      "msgs_all_info\022(\n\005data2\030\002 \001(\0132\031.mtproto.M"
      "sgsAllInfo_Data\"\\\n\024MsgDetailedInfo_Data\022"
      "\016\n\006msg_id\030\001 \001(\003\022\025\n\ranswer_msg_id\030\002 \001(\003\022\r"
      "\n\005bytes\030\003 \001(\005\022\016\n\006status\030\004 \001(\005\"l\n\017MsgDeta"
      "iledInfo\022+\n\013constructor\030\001 \001(\0162\026.mtproto."
      "TLConstructor\022,\n\005data2\030\002 \001(\0132\035.mtproto.M"
      "sgDetailedInfo_Data\"D\n\024TL_msg_detailed_i"
      "nfo\022,\n\005data2\030\002 \001(\0132\035.mtproto.MsgDetailed"
      "Info_Data\"H\n\030TL_msg_new_detailed_info\022,\n"
      "\005data2\030\002 \001(\0132\035.mtproto.MsgDetailedInfo_D"
      "ata\"_\n\024AccessPointRule_Data\022\032\n\022phone_pre"
      "fix_rules\030\001 \001(\t\022\r\n\005dc_id\030\002 \001(\005\022\034\n\003ips\030\003 "
      "\003(\0132\017.mtproto.IpPort\"l\n\017AccessPointRule\022"
      "+\n\013constructor\030\001 \001(\0162\026.mtproto.TLConstru"
      "ctor\022,\n\005data2\030\002 \001(\0132\035.mtproto.AccessPoin"
      "tRule_Data\"B\n\022TL_accessPointRule\022,\n\005data"
      "2\030\002 \001(\0132\035.mtproto.AccessPointRule_Data\"C"
      "\n\022RpcDropAnswer_Data\022\016\n\006msg_id\030\001 \001(\003\022\016\n\006"
      "seq_no\030\002 \001(\005\022\r\n\005bytes\030\003 \001(\005\"h\n\rRpcDropAn"
      "swer\022+\n\013constructor\030\001 \001(\0162\026.mtproto.TLCo"
      "nstructor\022*\n\005data2\030\002 \001(\0132\033.mtproto.RpcDr"
      "opAnswer_Data\"C\n\025TL_rpc_answer_unknown\022*"
      "\n\005data2\030\002 \001(\0132\033.mtproto.RpcDropAnswer_Da"
      "ta\"K\n\035TL_rpc_answer_dropped_running\022*\n\005d"
      "ata2\030\002 \001(\0132\033.mtproto.RpcDropAnswer_Data\""
      "C\n\025TL_rpc_answer_dropped\022*\n\005data2\030\002 \001(\0132"
      "\033.mtproto.RpcDropAnswer_Data\",\n\tPong_Dat"
      "a\022\016\n\006msg_id\030\001 \001(\003\022\017\n\007ping_id\030\002 \001(\003\"V\n\004Po"
      "ng\022+\n\013constructor\030\001 \001(\0162\026.mtproto.TLCons"
      "tructor\022!\n\005data2\030\002 \001(\0132\022.mtproto.Pong_Da"
      "ta\",\n\007TL_pong\022!\n\005data2\030\002 \001(\0132\022.mtproto.P"
      "ong_Data\",\n\026DestroySessionRes_Data\022\022\n\nse"
      "ssion_id\030\001 \001(\003\"p\n\021DestroySessionRes\022+\n\013c"
      "onstructor\030\001 \001(\0162\026.mtproto.TLConstructor"
      "\022.\n\005data2\030\002 \001(\0132\037.mtproto.DestroySession"
      "Res_Data\"G\n\025TL_destroy_session_ok\022.\n\005dat"
      "a2\030\002 \001(\0132\037.mtproto.DestroySessionRes_Dat"
      "a\"I\n\027TL_destroy_session_none\022.\n\005data2\030\002 "
      "\001(\0132\037.mtproto.DestroySessionRes_Data\"H\n\r"
      "HttpWait_Data\022\021\n\tmax_delay\030\001 \001(\005\022\022\n\nwait"
      "_after\030\002 \001(\005\022\020\n\010max_wait\030\003 \001(\005\"^\n\010HttpWa"
      "it\022+\n\013constructor\030\001 \001(\0162\026.mtproto.TLCons"
      "tructor\022%\n\005data2\030\002 \001(\0132\026.mtproto.HttpWai"
      "t_Data\"5\n\014TL_http_wait\022%\n\005data2\030\002 \001(\0132\026."
      "mtproto.HttpWait_Data\":\n\rRpcError_Data\022\022"
      "\n\nerror_code\030\001 \001(\005\022\025\n\rerror_message\030\002 \001("
      "\t\"^\n\010RpcError\022+\n\013constructor\030\001 \001(\0162\026.mtp"
      "roto.TLConstructor\022%\n\005data2\030\002 \001(\0132\026.mtpr"
      "oto.RpcError_Data\"5\n\014TL_rpc_error\022%\n\005dat"
      "a2\030\002 \001(\0132\026.mtproto.RpcError_Data\"[\n\020Futu"
      "reSalts_Data\022\022\n\nreq_msg_id\030\001 \001(\003\022\013\n\003now\030"
      "\002 \001(\005\022&\n\005salts\030\003 \003(\0132\027.mtproto.TL_future"
      "_salt\"d\n\013FutureSalts\022+\n\013constructor\030\001 \001("
      "\0162\026.mtproto.TLConstructor\022(\n\005data2\030\002 \001(\013"
      "2\031.mtproto.FutureSalts_Data\";\n\017TL_future"
      "_salts\022(\n\005data2\030\002 \001(\0132\031.mtproto.FutureSa"
      "lts_DataB(\n\033com.nebulaim.engine.mtprotoB"
      "\007MTProtoH\002b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 4738);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "schema.tl.transport.proto", &protobuf_RegisterTypes);
  ::mtproto::protobuf_schema_2etl_2ecrc32_2eproto::AddDescriptors();
}
} // anonymous namespace

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_schema_2etl_2etransport_2eproto


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MsgsAck_Data::kMsgIdsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MsgsAck_Data::MsgsAck_Data()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_schema_2etl_2etransport_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.MsgsAck_Data)
}
MsgsAck_Data::MsgsAck_Data(const MsgsAck_Data& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      msg_ids_(from.msg_ids_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:mtproto.MsgsAck_Data)
}

void MsgsAck_Data::SharedCtor() {
  _cached_size_ = 0;
}

MsgsAck_Data::~MsgsAck_Data() {
  // @@protoc_insertion_point(destructor:mtproto.MsgsAck_Data)
  SharedDtor();
}

void MsgsAck_Data::SharedDtor() {
}

void MsgsAck_Data::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgsAck_Data::descriptor() {
  protobuf_schema_2etl_2etransport_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2etransport_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MsgsAck_Data& MsgsAck_Data::default_instance() {
  protobuf_schema_2etl_2etransport_2eproto::InitDefaults();
  return *internal_default_instance();
}

MsgsAck_Data* MsgsAck_Data::New(::google::protobuf::Arena* arena) const {
  MsgsAck_Data* n = new MsgsAck_Data;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MsgsAck_Data::Swap(MsgsAck_Data* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MsgsAck_Data::InternalSwap(MsgsAck_Data* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata MsgsAck_Data::GetMetadata() const {
  protobuf_schema_2etl_2etransport_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2etransport_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MsgsAck_Data

// repeated int64 msg_ids = 1;
int MsgsAck_Data::msg_ids_size() const {
  return msg_ids_.size();
}
void MsgsAck_Data::clear_msg_ids() {
  msg_ids_.Clear();
}
::google::protobuf::int64 MsgsAck_Data::msg_ids(int index) const {
  // @@protoc_insertion_point(field_get:mtproto.MsgsAck_Data.msg_ids)
  return msg_ids_.Get(index);
}
void MsgsAck_Data::set_msg_ids(int index, ::google::protobuf::int64 value) {
  msg_ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:mtproto.MsgsAck_Data.msg_ids)
}
void MsgsAck_Data::add_msg_ids(::google::protobuf::int64 value) {
  msg_ids_.Add(value);
  // @@protoc_insertion_point(field_add:mtproto.MsgsAck_Data.msg_ids)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
MsgsAck_Data::msg_ids() const {
  // @@protoc_insertion_point(field_list:mtproto.MsgsAck_Data.msg_ids)
  return msg_ids_;
}
::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
MsgsAck_Data::mutable_msg_ids() {
  // @@protoc_insertion_point(field_mutable_list:mtproto.MsgsAck_Data.msg_ids)
  return &msg_ids_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MsgsAck::kConstructorFieldNumber;
const int MsgsAck::kData2FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MsgsAck::MsgsAck()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_schema_2etl_2etransport_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.MsgsAck)
}
MsgsAck::MsgsAck(const MsgsAck& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_data2()) {
    data2_ = new ::mtproto::MsgsAck_Data(*from.data2_);
  } else {
    data2_ = NULL;
  }
  constructor_ = from.constructor_;
  // @@protoc_insertion_point(copy_constructor:mtproto.MsgsAck)
}

void MsgsAck::SharedCtor() {
  ::memset(&data2_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&constructor_) -
      reinterpret_cast<char*>(&data2_)) + sizeof(constructor_));
  _cached_size_ = 0;
}

MsgsAck::~MsgsAck() {
  // @@protoc_insertion_point(destructor:mtproto.MsgsAck)
  SharedDtor();
}

void MsgsAck::SharedDtor() {
  if (this != internal_default_instance()) delete data2_;
}

void MsgsAck::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgsAck::descriptor() {
  protobuf_schema_2etl_2etransport_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2etransport_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MsgsAck& MsgsAck::default_instance() {
  protobuf_schema_2etl_2etransport_2eproto::InitDefaults();
  return *internal_default_instance();
}

MsgsAck* MsgsAck::New(::google::protobuf::Arena* arena) const {
  MsgsAck* n = new MsgsAck;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MsgsAck::Swap(MsgsAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MsgsAck::InternalSwap(MsgsAck* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata MsgsAck::GetMetadata() const {
  protobuf_schema_2etl_2etransport_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2etransport_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MsgsAck

// .mtproto.TLConstructor constructor = 1;
void MsgsAck::clear_constructor() {
  constructor_ = 0;
}
::mtproto::TLConstructor MsgsAck::constructor() const {
  // @@protoc_insertion_point(field_get:mtproto.MsgsAck.constructor)
  return static_cast< ::mtproto::TLConstructor >(constructor_);
}
void MsgsAck::set_constructor(::mtproto::TLConstructor value) {
  
  constructor_ = value;
  // @@protoc_insertion_point(field_set:mtproto.MsgsAck.constructor)
}

// .mtproto.MsgsAck_Data data2 = 2;
bool MsgsAck::has_data2() const {
  return this != internal_default_instance() && data2_ != NULL;
}
void MsgsAck::clear_data2() {
  if (GetArenaNoVirtual() == NULL && data2_ != NULL) delete data2_;
  data2_ = NULL;
}
const ::mtproto::MsgsAck_Data& MsgsAck::data2() const {
  const ::mtproto::MsgsAck_Data* p = data2_;
  // @@protoc_insertion_point(field_get:mtproto.MsgsAck.data2)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::MsgsAck_Data*>(
      &::mtproto::_MsgsAck_Data_default_instance_);
}
::mtproto::MsgsAck_Data* MsgsAck::mutable_data2() {
  
  if (data2_ == NULL) {
    data2_ = new ::mtproto::MsgsAck_Data;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.MsgsAck.data2)
  return data2_;
}
::mtproto::MsgsAck_Data* MsgsAck::release_data2() {
  // @@protoc_insertion_point(field_release:mtproto.MsgsAck.data2)
  
  ::mtproto::MsgsAck_Data* temp = data2_;
  data2_ = NULL;
  return temp;
}
void MsgsAck::set_allocated_data2(::mtproto::MsgsAck_Data* data2) {
  delete data2_;
  data2_ = data2;
  if (data2) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.MsgsAck.data2)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TL_msgs_ack::kData2FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TL_msgs_ack::TL_msgs_ack()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_schema_2etl_2etransport_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.TL_msgs_ack)
}
TL_msgs_ack::TL_msgs_ack(const TL_msgs_ack& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_data2()) {
    data2_ = new ::mtproto::MsgsAck_Data(*from.data2_);
  } else {
    data2_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:mtproto.TL_msgs_ack)
}

void TL_msgs_ack::SharedCtor() {
  data2_ = NULL;
  _cached_size_ = 0;
}

TL_msgs_ack::~TL_msgs_ack() {
  // @@protoc_insertion_point(destructor:mtproto.TL_msgs_ack)
  SharedDtor();
}

void TL_msgs_ack::SharedDtor() {
  if (this != internal_default_instance()) delete data2_;
}

void TL_msgs_ack::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TL_msgs_ack::descriptor() {
  protobuf_schema_2etl_2etransport_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2etransport_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TL_msgs_ack& TL_msgs_ack::default_instance() {
  protobuf_schema_2etl_2etransport_2eproto::InitDefaults();
  return *internal_default_instance();
}

TL_msgs_ack* TL_msgs_ack::New(::google::protobuf::Arena* arena) const {
  TL_msgs_ack* n = new TL_msgs_ack;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TL_msgs_ack::Swap(TL_msgs_ack* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TL_msgs_ack::InternalSwap(TL_msgs_ack* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata TL_msgs_ack::GetMetadata() const {
  protobuf_schema_2etl_2etransport_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2etransport_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TL_msgs_ack

// .mtproto.MsgsAck_Data data2 = 2;
bool TL_msgs_ack::has_data2() const {
  return this != internal_default_instance() && data2_ != NULL;
}
void TL_msgs_ack::clear_data2() {
  if (GetArenaNoVirtual() == NULL && data2_ != NULL) delete data2_;
  data2_ = NULL;
}
const ::mtproto::MsgsAck_Data& TL_msgs_ack::data2() const {
  const ::mtproto::MsgsAck_Data* p = data2_;
  // @@protoc_insertion_point(field_get:mtproto.TL_msgs_ack.data2)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::MsgsAck_Data*>(
      &::mtproto::_MsgsAck_Data_default_instance_);
}
::mtproto::MsgsAck_Data* TL_msgs_ack::mutable_data2() {
  
  if (data2_ == NULL) {
    data2_ = new ::mtproto::MsgsAck_Data;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_msgs_ack.data2)
  return data2_;
}
::mtproto::MsgsAck_Data* TL_msgs_ack::release_data2() {
  // @@protoc_insertion_point(field_release:mtproto.TL_msgs_ack.data2)
  
  ::mtproto::MsgsAck_Data* temp = data2_;
  data2_ = NULL;
  return temp;
}
void TL_msgs_ack::set_allocated_data2(::mtproto::MsgsAck_Data* data2) {
  delete data2_;
  data2_ = data2;
  if (data2) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_msgs_ack.data2)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BadMsgNotification_Data::kBadMsgIdFieldNumber;
const int BadMsgNotification_Data::kBadMsgSeqnoFieldNumber;
const int BadMsgNotification_Data::kErrorCodeFieldNumber;
const int BadMsgNotification_Data::kNewServerSaltFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BadMsgNotification_Data::BadMsgNotification_Data()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_schema_2etl_2etransport_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.BadMsgNotification_Data)
}
BadMsgNotification_Data::BadMsgNotification_Data(const BadMsgNotification_Data& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&bad_msg_id_, &from.bad_msg_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&new_server_salt_) -
    reinterpret_cast<char*>(&bad_msg_id_)) + sizeof(new_server_salt_));
  // @@protoc_insertion_point(copy_constructor:mtproto.BadMsgNotification_Data)
}

void BadMsgNotification_Data::SharedCtor() {
  ::memset(&bad_msg_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&new_server_salt_) -
      reinterpret_cast<char*>(&bad_msg_id_)) + sizeof(new_server_salt_));
  _cached_size_ = 0;
}

BadMsgNotification_Data::~BadMsgNotification_Data() {
  // @@protoc_insertion_point(destructor:mtproto.BadMsgNotification_Data)
  SharedDtor();
}

void BadMsgNotification_Data::SharedDtor() {
}

void BadMsgNotification_Data::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BadMsgNotification_Data::descriptor() {
  protobuf_schema_2etl_2etransport_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2etransport_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BadMsgNotification_Data& BadMsgNotification_Data::default_instance() {
  protobuf_schema_2etl_2etransport_2eproto::InitDefaults();
  return *internal_default_instance();
}

BadMsgNotification_Data* BadMsgNotification_Data::New(::google::protobuf::Arena* arena) const {
  BadMsgNotification_Data* n = new BadMsgNotification_Data;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BadMsgNotification_Data::Swap(BadMsgNotification_Data* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BadMsgNotification_Data::InternalSwap(BadMsgNotification_Data* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata BadMsgNotification_Data::GetMetadata() const {
  protobuf_schema_2etl_2etransport_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2etransport_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BadMsgNotification_Data

// int64 bad_msg_id = 1;
void BadMsgNotification_Data::clear_bad_msg_id() {
  bad_msg_id_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 BadMsgNotification_Data::bad_msg_id() const {
  // @@protoc_insertion_point(field_get:mtproto.BadMsgNotification_Data.bad_msg_id)
  return bad_msg_id_;
}
void BadMsgNotification_Data::set_bad_msg_id(::google::protobuf::int64 value) {
  
  bad_msg_id_ = value;
  // @@protoc_insertion_point(field_set:mtproto.BadMsgNotification_Data.bad_msg_id)
}

// int32 bad_msg_seqno = 2;
void BadMsgNotification_Data::clear_bad_msg_seqno() {
  bad_msg_seqno_ = 0;
}
::google::protobuf::int32 BadMsgNotification_Data::bad_msg_seqno() const {
  // @@protoc_insertion_point(field_get:mtproto.BadMsgNotification_Data.bad_msg_seqno)
  return bad_msg_seqno_;
}
void BadMsgNotification_Data::set_bad_msg_seqno(::google::protobuf::int32 value) {
  
  bad_msg_seqno_ = value;
  // @@protoc_insertion_point(field_set:mtproto.BadMsgNotification_Data.bad_msg_seqno)
}

// int32 error_code = 3;
void BadMsgNotification_Data::clear_error_code() {
  error_code_ = 0;
}
::google::protobuf::int32 BadMsgNotification_Data::error_code() const {
  // @@protoc_insertion_point(field_get:mtproto.BadMsgNotification_Data.error_code)
  return error_code_;
}
void BadMsgNotification_Data::set_error_code(::google::protobuf::int32 value) {
  
  error_code_ = value;
  // @@protoc_insertion_point(field_set:mtproto.BadMsgNotification_Data.error_code)
}

// int64 new_server_salt = 4;
void BadMsgNotification_Data::clear_new_server_salt() {
  new_server_salt_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 BadMsgNotification_Data::new_server_salt() const {
  // @@protoc_insertion_point(field_get:mtproto.BadMsgNotification_Data.new_server_salt)
  return new_server_salt_;
}
void BadMsgNotification_Data::set_new_server_salt(::google::protobuf::int64 value) {
  
  new_server_salt_ = value;
  // @@protoc_insertion_point(field_set:mtproto.BadMsgNotification_Data.new_server_salt)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BadMsgNotification::kConstructorFieldNumber;
const int BadMsgNotification::kData2FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BadMsgNotification::BadMsgNotification()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_schema_2etl_2etransport_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.BadMsgNotification)
}
BadMsgNotification::BadMsgNotification(const BadMsgNotification& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_data2()) {
    data2_ = new ::mtproto::BadMsgNotification_Data(*from.data2_);
  } else {
    data2_ = NULL;
  }
  constructor_ = from.constructor_;
  // @@protoc_insertion_point(copy_constructor:mtproto.BadMsgNotification)
}

void BadMsgNotification::SharedCtor() {
  ::memset(&data2_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&constructor_) -
      reinterpret_cast<char*>(&data2_)) + sizeof(constructor_));
  _cached_size_ = 0;
}

BadMsgNotification::~BadMsgNotification() {
  // @@protoc_insertion_point(destructor:mtproto.BadMsgNotification)
  SharedDtor();
}

void BadMsgNotification::SharedDtor() {
  if (this != internal_default_instance()) delete data2_;
}

void BadMsgNotification::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BadMsgNotification::descriptor() {
  protobuf_schema_2etl_2etransport_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2etransport_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BadMsgNotification& BadMsgNotification::default_instance() {
  protobuf_schema_2etl_2etransport_2eproto::InitDefaults();
  return *internal_default_instance();
}

BadMsgNotification* BadMsgNotification::New(::google::protobuf::Arena* arena) const {
  BadMsgNotification* n = new BadMsgNotification;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BadMsgNotification::Swap(BadMsgNotification* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BadMsgNotification::InternalSwap(BadMsgNotification* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata BadMsgNotification::GetMetadata() const {
  protobuf_schema_2etl_2etransport_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2etransport_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BadMsgNotification

// .mtproto.TLConstructor constructor = 1;
void BadMsgNotification::clear_constructor() {
  constructor_ = 0;
}
::mtproto::TLConstructor BadMsgNotification::constructor() const {
  // @@protoc_insertion_point(field_get:mtproto.BadMsgNotification.constructor)
  return static_cast< ::mtproto::TLConstructor >(constructor_);
}
void BadMsgNotification::set_constructor(::mtproto::TLConstructor value) {
  
  constructor_ = value;
  // @@protoc_insertion_point(field_set:mtproto.BadMsgNotification.constructor)
}

// .mtproto.BadMsgNotification_Data data2 = 2;
bool BadMsgNotification::has_data2() const {
  return this != internal_default_instance() && data2_ != NULL;
}
void BadMsgNotification::clear_data2() {
  if (GetArenaNoVirtual() == NULL && data2_ != NULL) delete data2_;
  data2_ = NULL;
}
const ::mtproto::BadMsgNotification_Data& BadMsgNotification::data2() const {
  const ::mtproto::BadMsgNotification_Data* p = data2_;
  // @@protoc_insertion_point(field_get:mtproto.BadMsgNotification.data2)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::BadMsgNotification_Data*>(
      &::mtproto::_BadMsgNotification_Data_default_instance_);
}
::mtproto::BadMsgNotification_Data* BadMsgNotification::mutable_data2() {
  
  if (data2_ == NULL) {
    data2_ = new ::mtproto::BadMsgNotification_Data;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.BadMsgNotification.data2)
  return data2_;
}
::mtproto::BadMsgNotification_Data* BadMsgNotification::release_data2() {
  // @@protoc_insertion_point(field_release:mtproto.BadMsgNotification.data2)
  
  ::mtproto::BadMsgNotification_Data* temp = data2_;
  data2_ = NULL;
  return temp;
}
void BadMsgNotification::set_allocated_data2(::mtproto::BadMsgNotification_Data* data2) {
  delete data2_;
  data2_ = data2;
  if (data2) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.BadMsgNotification.data2)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TL_bad_msg_notification::kData2FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TL_bad_msg_notification::TL_bad_msg_notification()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_schema_2etl_2etransport_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.TL_bad_msg_notification)
}
TL_bad_msg_notification::TL_bad_msg_notification(const TL_bad_msg_notification& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_data2()) {
    data2_ = new ::mtproto::BadMsgNotification_Data(*from.data2_);
  } else {
    data2_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:mtproto.TL_bad_msg_notification)
}

void TL_bad_msg_notification::SharedCtor() {
  data2_ = NULL;
  _cached_size_ = 0;
}

TL_bad_msg_notification::~TL_bad_msg_notification() {
  // @@protoc_insertion_point(destructor:mtproto.TL_bad_msg_notification)
  SharedDtor();
}

void TL_bad_msg_notification::SharedDtor() {
  if (this != internal_default_instance()) delete data2_;
}

void TL_bad_msg_notification::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TL_bad_msg_notification::descriptor() {
  protobuf_schema_2etl_2etransport_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2etransport_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TL_bad_msg_notification& TL_bad_msg_notification::default_instance() {
  protobuf_schema_2etl_2etransport_2eproto::InitDefaults();
  return *internal_default_instance();
}

TL_bad_msg_notification* TL_bad_msg_notification::New(::google::protobuf::Arena* arena) const {
  TL_bad_msg_notification* n = new TL_bad_msg_notification;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TL_bad_msg_notification::Swap(TL_bad_msg_notification* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TL_bad_msg_notification::InternalSwap(TL_bad_msg_notification* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata TL_bad_msg_notification::GetMetadata() const {
  protobuf_schema_2etl_2etransport_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2etransport_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TL_bad_msg_notification

// .mtproto.BadMsgNotification_Data data2 = 2;
bool TL_bad_msg_notification::has_data2() const {
  return this != internal_default_instance() && data2_ != NULL;
}
void TL_bad_msg_notification::clear_data2() {
  if (GetArenaNoVirtual() == NULL && data2_ != NULL) delete data2_;
  data2_ = NULL;
}
const ::mtproto::BadMsgNotification_Data& TL_bad_msg_notification::data2() const {
  const ::mtproto::BadMsgNotification_Data* p = data2_;
  // @@protoc_insertion_point(field_get:mtproto.TL_bad_msg_notification.data2)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::BadMsgNotification_Data*>(
      &::mtproto::_BadMsgNotification_Data_default_instance_);
}
::mtproto::BadMsgNotification_Data* TL_bad_msg_notification::mutable_data2() {
  
  if (data2_ == NULL) {
    data2_ = new ::mtproto::BadMsgNotification_Data;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_bad_msg_notification.data2)
  return data2_;
}
::mtproto::BadMsgNotification_Data* TL_bad_msg_notification::release_data2() {
  // @@protoc_insertion_point(field_release:mtproto.TL_bad_msg_notification.data2)
  
  ::mtproto::BadMsgNotification_Data* temp = data2_;
  data2_ = NULL;
  return temp;
}
void TL_bad_msg_notification::set_allocated_data2(::mtproto::BadMsgNotification_Data* data2) {
  delete data2_;
  data2_ = data2;
  if (data2) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_bad_msg_notification.data2)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TL_bad_server_salt::kData2FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TL_bad_server_salt::TL_bad_server_salt()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_schema_2etl_2etransport_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.TL_bad_server_salt)
}
TL_bad_server_salt::TL_bad_server_salt(const TL_bad_server_salt& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_data2()) {
    data2_ = new ::mtproto::BadMsgNotification_Data(*from.data2_);
  } else {
    data2_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:mtproto.TL_bad_server_salt)
}

void TL_bad_server_salt::SharedCtor() {
  data2_ = NULL;
  _cached_size_ = 0;
}

TL_bad_server_salt::~TL_bad_server_salt() {
  // @@protoc_insertion_point(destructor:mtproto.TL_bad_server_salt)
  SharedDtor();
}

void TL_bad_server_salt::SharedDtor() {
  if (this != internal_default_instance()) delete data2_;
}

void TL_bad_server_salt::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TL_bad_server_salt::descriptor() {
  protobuf_schema_2etl_2etransport_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2etransport_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TL_bad_server_salt& TL_bad_server_salt::default_instance() {
  protobuf_schema_2etl_2etransport_2eproto::InitDefaults();
  return *internal_default_instance();
}

TL_bad_server_salt* TL_bad_server_salt::New(::google::protobuf::Arena* arena) const {
  TL_bad_server_salt* n = new TL_bad_server_salt;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TL_bad_server_salt::Swap(TL_bad_server_salt* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TL_bad_server_salt::InternalSwap(TL_bad_server_salt* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata TL_bad_server_salt::GetMetadata() const {
  protobuf_schema_2etl_2etransport_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2etransport_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TL_bad_server_salt

// .mtproto.BadMsgNotification_Data data2 = 2;
bool TL_bad_server_salt::has_data2() const {
  return this != internal_default_instance() && data2_ != NULL;
}
void TL_bad_server_salt::clear_data2() {
  if (GetArenaNoVirtual() == NULL && data2_ != NULL) delete data2_;
  data2_ = NULL;
}
const ::mtproto::BadMsgNotification_Data& TL_bad_server_salt::data2() const {
  const ::mtproto::BadMsgNotification_Data* p = data2_;
  // @@protoc_insertion_point(field_get:mtproto.TL_bad_server_salt.data2)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::BadMsgNotification_Data*>(
      &::mtproto::_BadMsgNotification_Data_default_instance_);
}
::mtproto::BadMsgNotification_Data* TL_bad_server_salt::mutable_data2() {
  
  if (data2_ == NULL) {
    data2_ = new ::mtproto::BadMsgNotification_Data;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_bad_server_salt.data2)
  return data2_;
}
::mtproto::BadMsgNotification_Data* TL_bad_server_salt::release_data2() {
  // @@protoc_insertion_point(field_release:mtproto.TL_bad_server_salt.data2)
  
  ::mtproto::BadMsgNotification_Data* temp = data2_;
  data2_ = NULL;
  return temp;
}
void TL_bad_server_salt::set_allocated_data2(::mtproto::BadMsgNotification_Data* data2) {
  delete data2_;
  data2_ = data2;
  if (data2) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_bad_server_salt.data2)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FutureSalt_Data::kValidSinceFieldNumber;
const int FutureSalt_Data::kValidUntilFieldNumber;
const int FutureSalt_Data::kSaltFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FutureSalt_Data::FutureSalt_Data()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_schema_2etl_2etransport_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.FutureSalt_Data)
}
FutureSalt_Data::FutureSalt_Data(const FutureSalt_Data& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&valid_since_, &from.valid_since_,
    static_cast<size_t>(reinterpret_cast<char*>(&salt_) -
    reinterpret_cast<char*>(&valid_since_)) + sizeof(salt_));
  // @@protoc_insertion_point(copy_constructor:mtproto.FutureSalt_Data)
}

void FutureSalt_Data::SharedCtor() {
  ::memset(&valid_since_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&salt_) -
      reinterpret_cast<char*>(&valid_since_)) + sizeof(salt_));
  _cached_size_ = 0;
}

FutureSalt_Data::~FutureSalt_Data() {
  // @@protoc_insertion_point(destructor:mtproto.FutureSalt_Data)
  SharedDtor();
}

void FutureSalt_Data::SharedDtor() {
}

void FutureSalt_Data::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FutureSalt_Data::descriptor() {
  protobuf_schema_2etl_2etransport_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2etransport_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const FutureSalt_Data& FutureSalt_Data::default_instance() {
  protobuf_schema_2etl_2etransport_2eproto::InitDefaults();
  return *internal_default_instance();
}

FutureSalt_Data* FutureSalt_Data::New(::google::protobuf::Arena* arena) const {
  FutureSalt_Data* n = new FutureSalt_Data;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void FutureSalt_Data::Swap(FutureSalt_Data* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FutureSalt_Data::InternalSwap(FutureSalt_Data* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata FutureSalt_Data::GetMetadata() const {
  protobuf_schema_2etl_2etransport_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2etransport_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// FutureSalt_Data

// int32 valid_since = 1;
void FutureSalt_Data::clear_valid_since() {
  valid_since_ = 0;
}
::google::protobuf::int32 FutureSalt_Data::valid_since() const {
  // @@protoc_insertion_point(field_get:mtproto.FutureSalt_Data.valid_since)
  return valid_since_;
}
void FutureSalt_Data::set_valid_since(::google::protobuf::int32 value) {
  
  valid_since_ = value;
  // @@protoc_insertion_point(field_set:mtproto.FutureSalt_Data.valid_since)
}

// int32 valid_until = 2;
void FutureSalt_Data::clear_valid_until() {
  valid_until_ = 0;
}
::google::protobuf::int32 FutureSalt_Data::valid_until() const {
  // @@protoc_insertion_point(field_get:mtproto.FutureSalt_Data.valid_until)
  return valid_until_;
}
void FutureSalt_Data::set_valid_until(::google::protobuf::int32 value) {
  
  valid_until_ = value;
  // @@protoc_insertion_point(field_set:mtproto.FutureSalt_Data.valid_until)
}

// int64 salt = 3;
void FutureSalt_Data::clear_salt() {
  salt_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 FutureSalt_Data::salt() const {
  // @@protoc_insertion_point(field_get:mtproto.FutureSalt_Data.salt)
  return salt_;
}
void FutureSalt_Data::set_salt(::google::protobuf::int64 value) {
  
  salt_ = value;
  // @@protoc_insertion_point(field_set:mtproto.FutureSalt_Data.salt)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FutureSalt::kConstructorFieldNumber;
const int FutureSalt::kData2FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FutureSalt::FutureSalt()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_schema_2etl_2etransport_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.FutureSalt)
}
FutureSalt::FutureSalt(const FutureSalt& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_data2()) {
    data2_ = new ::mtproto::FutureSalt_Data(*from.data2_);
  } else {
    data2_ = NULL;
  }
  constructor_ = from.constructor_;
  // @@protoc_insertion_point(copy_constructor:mtproto.FutureSalt)
}

void FutureSalt::SharedCtor() {
  ::memset(&data2_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&constructor_) -
      reinterpret_cast<char*>(&data2_)) + sizeof(constructor_));
  _cached_size_ = 0;
}

FutureSalt::~FutureSalt() {
  // @@protoc_insertion_point(destructor:mtproto.FutureSalt)
  SharedDtor();
}

void FutureSalt::SharedDtor() {
  if (this != internal_default_instance()) delete data2_;
}

void FutureSalt::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FutureSalt::descriptor() {
  protobuf_schema_2etl_2etransport_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2etransport_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const FutureSalt& FutureSalt::default_instance() {
  protobuf_schema_2etl_2etransport_2eproto::InitDefaults();
  return *internal_default_instance();
}

FutureSalt* FutureSalt::New(::google::protobuf::Arena* arena) const {
  FutureSalt* n = new FutureSalt;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void FutureSalt::Swap(FutureSalt* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FutureSalt::InternalSwap(FutureSalt* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata FutureSalt::GetMetadata() const {
  protobuf_schema_2etl_2etransport_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2etransport_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// FutureSalt

// .mtproto.TLConstructor constructor = 1;
void FutureSalt::clear_constructor() {
  constructor_ = 0;
}
::mtproto::TLConstructor FutureSalt::constructor() const {
  // @@protoc_insertion_point(field_get:mtproto.FutureSalt.constructor)
  return static_cast< ::mtproto::TLConstructor >(constructor_);
}
void FutureSalt::set_constructor(::mtproto::TLConstructor value) {
  
  constructor_ = value;
  // @@protoc_insertion_point(field_set:mtproto.FutureSalt.constructor)
}

// .mtproto.FutureSalt_Data data2 = 2;
bool FutureSalt::has_data2() const {
  return this != internal_default_instance() && data2_ != NULL;
}
void FutureSalt::clear_data2() {
  if (GetArenaNoVirtual() == NULL && data2_ != NULL) delete data2_;
  data2_ = NULL;
}
const ::mtproto::FutureSalt_Data& FutureSalt::data2() const {
  const ::mtproto::FutureSalt_Data* p = data2_;
  // @@protoc_insertion_point(field_get:mtproto.FutureSalt.data2)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::FutureSalt_Data*>(
      &::mtproto::_FutureSalt_Data_default_instance_);
}
::mtproto::FutureSalt_Data* FutureSalt::mutable_data2() {
  
  if (data2_ == NULL) {
    data2_ = new ::mtproto::FutureSalt_Data;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.FutureSalt.data2)
  return data2_;
}
::mtproto::FutureSalt_Data* FutureSalt::release_data2() {
  // @@protoc_insertion_point(field_release:mtproto.FutureSalt.data2)
  
  ::mtproto::FutureSalt_Data* temp = data2_;
  data2_ = NULL;
  return temp;
}
void FutureSalt::set_allocated_data2(::mtproto::FutureSalt_Data* data2) {
  delete data2_;
  data2_ = data2;
  if (data2) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.FutureSalt.data2)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TL_future_salt::kData2FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TL_future_salt::TL_future_salt()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_schema_2etl_2etransport_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.TL_future_salt)
}
TL_future_salt::TL_future_salt(const TL_future_salt& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_data2()) {
    data2_ = new ::mtproto::FutureSalt_Data(*from.data2_);
  } else {
    data2_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:mtproto.TL_future_salt)
}

void TL_future_salt::SharedCtor() {
  data2_ = NULL;
  _cached_size_ = 0;
}

TL_future_salt::~TL_future_salt() {
  // @@protoc_insertion_point(destructor:mtproto.TL_future_salt)
  SharedDtor();
}

void TL_future_salt::SharedDtor() {
  if (this != internal_default_instance()) delete data2_;
}

void TL_future_salt::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TL_future_salt::descriptor() {
  protobuf_schema_2etl_2etransport_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2etransport_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TL_future_salt& TL_future_salt::default_instance() {
  protobuf_schema_2etl_2etransport_2eproto::InitDefaults();
  return *internal_default_instance();
}

TL_future_salt* TL_future_salt::New(::google::protobuf::Arena* arena) const {
  TL_future_salt* n = new TL_future_salt;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TL_future_salt::Swap(TL_future_salt* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TL_future_salt::InternalSwap(TL_future_salt* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata TL_future_salt::GetMetadata() const {
  protobuf_schema_2etl_2etransport_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2etransport_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TL_future_salt

// .mtproto.FutureSalt_Data data2 = 2;
bool TL_future_salt::has_data2() const {
  return this != internal_default_instance() && data2_ != NULL;
}
void TL_future_salt::clear_data2() {
  if (GetArenaNoVirtual() == NULL && data2_ != NULL) delete data2_;
  data2_ = NULL;
}
const ::mtproto::FutureSalt_Data& TL_future_salt::data2() const {
  const ::mtproto::FutureSalt_Data* p = data2_;
  // @@protoc_insertion_point(field_get:mtproto.TL_future_salt.data2)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::FutureSalt_Data*>(
      &::mtproto::_FutureSalt_Data_default_instance_);
}
::mtproto::FutureSalt_Data* TL_future_salt::mutable_data2() {
  
  if (data2_ == NULL) {
    data2_ = new ::mtproto::FutureSalt_Data;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_future_salt.data2)
  return data2_;
}
::mtproto::FutureSalt_Data* TL_future_salt::release_data2() {
  // @@protoc_insertion_point(field_release:mtproto.TL_future_salt.data2)
  
  ::mtproto::FutureSalt_Data* temp = data2_;
  data2_ = NULL;
  return temp;
}
void TL_future_salt::set_allocated_data2(::mtproto::FutureSalt_Data* data2) {
  delete data2_;
  data2_ = data2;
  if (data2) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_future_salt.data2)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int help_ConfigSimple_Data::kDateFieldNumber;
const int help_ConfigSimple_Data::kExpiresFieldNumber;
const int help_ConfigSimple_Data::kRulesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

help_ConfigSimple_Data::help_ConfigSimple_Data()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_schema_2etl_2etransport_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.help_ConfigSimple_Data)
}
help_ConfigSimple_Data::help_ConfigSimple_Data(const help_ConfigSimple_Data& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      rules_(from.rules_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&date_, &from.date_,
    static_cast<size_t>(reinterpret_cast<char*>(&expires_) -
    reinterpret_cast<char*>(&date_)) + sizeof(expires_));
  // @@protoc_insertion_point(copy_constructor:mtproto.help_ConfigSimple_Data)
}

void help_ConfigSimple_Data::SharedCtor() {
  ::memset(&date_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&expires_) -
      reinterpret_cast<char*>(&date_)) + sizeof(expires_));
  _cached_size_ = 0;
}

help_ConfigSimple_Data::~help_ConfigSimple_Data() {
  // @@protoc_insertion_point(destructor:mtproto.help_ConfigSimple_Data)
  SharedDtor();
}

void help_ConfigSimple_Data::SharedDtor() {
}

void help_ConfigSimple_Data::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* help_ConfigSimple_Data::descriptor() {
  protobuf_schema_2etl_2etransport_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2etransport_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const help_ConfigSimple_Data& help_ConfigSimple_Data::default_instance() {
  protobuf_schema_2etl_2etransport_2eproto::InitDefaults();
  return *internal_default_instance();
}

help_ConfigSimple_Data* help_ConfigSimple_Data::New(::google::protobuf::Arena* arena) const {
  help_ConfigSimple_Data* n = new help_ConfigSimple_Data;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void help_ConfigSimple_Data::Swap(help_ConfigSimple_Data* other) {
  if (other == this) return;
  InternalSwap(other);
}
void help_ConfigSimple_Data::InternalSwap(help_ConfigSimple_Data* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata help_ConfigSimple_Data::GetMetadata() const {
  protobuf_schema_2etl_2etransport_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2etransport_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// help_ConfigSimple_Data

// int32 date = 1;
void help_ConfigSimple_Data::clear_date() {
  date_ = 0;
}
::google::protobuf::int32 help_ConfigSimple_Data::date() const {
  // @@protoc_insertion_point(field_get:mtproto.help_ConfigSimple_Data.date)
  return date_;
}
void help_ConfigSimple_Data::set_date(::google::protobuf::int32 value) {
  
  date_ = value;
  // @@protoc_insertion_point(field_set:mtproto.help_ConfigSimple_Data.date)
}

// int32 expires = 2;
void help_ConfigSimple_Data::clear_expires() {
  expires_ = 0;
}
::google::protobuf::int32 help_ConfigSimple_Data::expires() const {
  // @@protoc_insertion_point(field_get:mtproto.help_ConfigSimple_Data.expires)
  return expires_;
}
void help_ConfigSimple_Data::set_expires(::google::protobuf::int32 value) {
  
  expires_ = value;
  // @@protoc_insertion_point(field_set:mtproto.help_ConfigSimple_Data.expires)
}

// repeated .mtproto.AccessPointRule rules = 3;
int help_ConfigSimple_Data::rules_size() const {
  return rules_.size();
}
void help_ConfigSimple_Data::clear_rules() {
  rules_.Clear();
}
const ::mtproto::AccessPointRule& help_ConfigSimple_Data::rules(int index) const {
  // @@protoc_insertion_point(field_get:mtproto.help_ConfigSimple_Data.rules)
  return rules_.Get(index);
}
::mtproto::AccessPointRule* help_ConfigSimple_Data::mutable_rules(int index) {
  // @@protoc_insertion_point(field_mutable:mtproto.help_ConfigSimple_Data.rules)
  return rules_.Mutable(index);
}
::mtproto::AccessPointRule* help_ConfigSimple_Data::add_rules() {
  // @@protoc_insertion_point(field_add:mtproto.help_ConfigSimple_Data.rules)
  return rules_.Add();
}
::google::protobuf::RepeatedPtrField< ::mtproto::AccessPointRule >*
help_ConfigSimple_Data::mutable_rules() {
  // @@protoc_insertion_point(field_mutable_list:mtproto.help_ConfigSimple_Data.rules)
  return &rules_;
}
const ::google::protobuf::RepeatedPtrField< ::mtproto::AccessPointRule >&
help_ConfigSimple_Data::rules() const {
  // @@protoc_insertion_point(field_list:mtproto.help_ConfigSimple_Data.rules)
  return rules_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int help_ConfigSimple::kConstructorFieldNumber;
const int help_ConfigSimple::kData2FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

help_ConfigSimple::help_ConfigSimple()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_schema_2etl_2etransport_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.help_ConfigSimple)
}
help_ConfigSimple::help_ConfigSimple(const help_ConfigSimple& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_data2()) {
    data2_ = new ::mtproto::help_ConfigSimple_Data(*from.data2_);
  } else {
    data2_ = NULL;
  }
  constructor_ = from.constructor_;
  // @@protoc_insertion_point(copy_constructor:mtproto.help_ConfigSimple)
}

void help_ConfigSimple::SharedCtor() {
  ::memset(&data2_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&constructor_) -
      reinterpret_cast<char*>(&data2_)) + sizeof(constructor_));
  _cached_size_ = 0;
}

help_ConfigSimple::~help_ConfigSimple() {
  // @@protoc_insertion_point(destructor:mtproto.help_ConfigSimple)
  SharedDtor();
}

void help_ConfigSimple::SharedDtor() {
  if (this != internal_default_instance()) delete data2_;
}

void help_ConfigSimple::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* help_ConfigSimple::descriptor() {
  protobuf_schema_2etl_2etransport_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2etransport_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const help_ConfigSimple& help_ConfigSimple::default_instance() {
  protobuf_schema_2etl_2etransport_2eproto::InitDefaults();
  return *internal_default_instance();
}

help_ConfigSimple* help_ConfigSimple::New(::google::protobuf::Arena* arena) const {
  help_ConfigSimple* n = new help_ConfigSimple;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void help_ConfigSimple::Swap(help_ConfigSimple* other) {
  if (other == this) return;
  InternalSwap(other);
}
void help_ConfigSimple::InternalSwap(help_ConfigSimple* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata help_ConfigSimple::GetMetadata() const {
  protobuf_schema_2etl_2etransport_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2etransport_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// help_ConfigSimple

// .mtproto.TLConstructor constructor = 1;
void help_ConfigSimple::clear_constructor() {
  constructor_ = 0;
}
::mtproto::TLConstructor help_ConfigSimple::constructor() const {
  // @@protoc_insertion_point(field_get:mtproto.help_ConfigSimple.constructor)
  return static_cast< ::mtproto::TLConstructor >(constructor_);
}
void help_ConfigSimple::set_constructor(::mtproto::TLConstructor value) {
  
  constructor_ = value;
  // @@protoc_insertion_point(field_set:mtproto.help_ConfigSimple.constructor)
}

// .mtproto.help_ConfigSimple_Data data2 = 2;
bool help_ConfigSimple::has_data2() const {
  return this != internal_default_instance() && data2_ != NULL;
}
void help_ConfigSimple::clear_data2() {
  if (GetArenaNoVirtual() == NULL && data2_ != NULL) delete data2_;
  data2_ = NULL;
}
const ::mtproto::help_ConfigSimple_Data& help_ConfigSimple::data2() const {
  const ::mtproto::help_ConfigSimple_Data* p = data2_;
  // @@protoc_insertion_point(field_get:mtproto.help_ConfigSimple.data2)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::help_ConfigSimple_Data*>(
      &::mtproto::_help_ConfigSimple_Data_default_instance_);
}
::mtproto::help_ConfigSimple_Data* help_ConfigSimple::mutable_data2() {
  
  if (data2_ == NULL) {
    data2_ = new ::mtproto::help_ConfigSimple_Data;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.help_ConfigSimple.data2)
  return data2_;
}
::mtproto::help_ConfigSimple_Data* help_ConfigSimple::release_data2() {
  // @@protoc_insertion_point(field_release:mtproto.help_ConfigSimple.data2)
  
  ::mtproto::help_ConfigSimple_Data* temp = data2_;
  data2_ = NULL;
  return temp;
}
void help_ConfigSimple::set_allocated_data2(::mtproto::help_ConfigSimple_Data* data2) {
  delete data2_;
  data2_ = data2;
  if (data2) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.help_ConfigSimple.data2)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TL_help_configSimple::kData2FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TL_help_configSimple::TL_help_configSimple()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_schema_2etl_2etransport_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.TL_help_configSimple)
}
TL_help_configSimple::TL_help_configSimple(const TL_help_configSimple& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_data2()) {
    data2_ = new ::mtproto::help_ConfigSimple_Data(*from.data2_);
  } else {
    data2_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:mtproto.TL_help_configSimple)
}

void TL_help_configSimple::SharedCtor() {
  data2_ = NULL;
  _cached_size_ = 0;
}

TL_help_configSimple::~TL_help_configSimple() {
  // @@protoc_insertion_point(destructor:mtproto.TL_help_configSimple)
  SharedDtor();
}

void TL_help_configSimple::SharedDtor() {
  if (this != internal_default_instance()) delete data2_;
}

void TL_help_configSimple::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TL_help_configSimple::descriptor() {
  protobuf_schema_2etl_2etransport_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2etransport_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TL_help_configSimple& TL_help_configSimple::default_instance() {
  protobuf_schema_2etl_2etransport_2eproto::InitDefaults();
  return *internal_default_instance();
}

TL_help_configSimple* TL_help_configSimple::New(::google::protobuf::Arena* arena) const {
  TL_help_configSimple* n = new TL_help_configSimple;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TL_help_configSimple::Swap(TL_help_configSimple* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TL_help_configSimple::InternalSwap(TL_help_configSimple* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata TL_help_configSimple::GetMetadata() const {
  protobuf_schema_2etl_2etransport_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2etransport_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TL_help_configSimple

// .mtproto.help_ConfigSimple_Data data2 = 2;
bool TL_help_configSimple::has_data2() const {
  return this != internal_default_instance() && data2_ != NULL;
}
void TL_help_configSimple::clear_data2() {
  if (GetArenaNoVirtual() == NULL && data2_ != NULL) delete data2_;
  data2_ = NULL;
}
const ::mtproto::help_ConfigSimple_Data& TL_help_configSimple::data2() const {
  const ::mtproto::help_ConfigSimple_Data* p = data2_;
  // @@protoc_insertion_point(field_get:mtproto.TL_help_configSimple.data2)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::help_ConfigSimple_Data*>(
      &::mtproto::_help_ConfigSimple_Data_default_instance_);
}
::mtproto::help_ConfigSimple_Data* TL_help_configSimple::mutable_data2() {
  
  if (data2_ == NULL) {
    data2_ = new ::mtproto::help_ConfigSimple_Data;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_help_configSimple.data2)
  return data2_;
}
::mtproto::help_ConfigSimple_Data* TL_help_configSimple::release_data2() {
  // @@protoc_insertion_point(field_release:mtproto.TL_help_configSimple.data2)
  
  ::mtproto::help_ConfigSimple_Data* temp = data2_;
  data2_ = NULL;
  return temp;
}
void TL_help_configSimple::set_allocated_data2(::mtproto::help_ConfigSimple_Data* data2) {
  delete data2_;
  data2_ = data2;
  if (data2) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_help_configSimple.data2)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MsgResendReq_Data::kMsgIdsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MsgResendReq_Data::MsgResendReq_Data()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_schema_2etl_2etransport_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.MsgResendReq_Data)
}
MsgResendReq_Data::MsgResendReq_Data(const MsgResendReq_Data& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      msg_ids_(from.msg_ids_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:mtproto.MsgResendReq_Data)
}

void MsgResendReq_Data::SharedCtor() {
  _cached_size_ = 0;
}

MsgResendReq_Data::~MsgResendReq_Data() {
  // @@protoc_insertion_point(destructor:mtproto.MsgResendReq_Data)
  SharedDtor();
}

void MsgResendReq_Data::SharedDtor() {
}

void MsgResendReq_Data::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgResendReq_Data::descriptor() {
  protobuf_schema_2etl_2etransport_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2etransport_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MsgResendReq_Data& MsgResendReq_Data::default_instance() {
  protobuf_schema_2etl_2etransport_2eproto::InitDefaults();
  return *internal_default_instance();
}

MsgResendReq_Data* MsgResendReq_Data::New(::google::protobuf::Arena* arena) const {
  MsgResendReq_Data* n = new MsgResendReq_Data;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MsgResendReq_Data::Swap(MsgResendReq_Data* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MsgResendReq_Data::InternalSwap(MsgResendReq_Data* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata MsgResendReq_Data::GetMetadata() const {
  protobuf_schema_2etl_2etransport_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2etransport_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MsgResendReq_Data

// repeated int64 msg_ids = 1;
int MsgResendReq_Data::msg_ids_size() const {
  return msg_ids_.size();
}
void MsgResendReq_Data::clear_msg_ids() {
  msg_ids_.Clear();
}
::google::protobuf::int64 MsgResendReq_Data::msg_ids(int index) const {
  // @@protoc_insertion_point(field_get:mtproto.MsgResendReq_Data.msg_ids)
  return msg_ids_.Get(index);
}
void MsgResendReq_Data::set_msg_ids(int index, ::google::protobuf::int64 value) {
  msg_ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:mtproto.MsgResendReq_Data.msg_ids)
}
void MsgResendReq_Data::add_msg_ids(::google::protobuf::int64 value) {
  msg_ids_.Add(value);
  // @@protoc_insertion_point(field_add:mtproto.MsgResendReq_Data.msg_ids)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
MsgResendReq_Data::msg_ids() const {
  // @@protoc_insertion_point(field_list:mtproto.MsgResendReq_Data.msg_ids)
  return msg_ids_;
}
::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
MsgResendReq_Data::mutable_msg_ids() {
  // @@protoc_insertion_point(field_mutable_list:mtproto.MsgResendReq_Data.msg_ids)
  return &msg_ids_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MsgResendReq::kConstructorFieldNumber;
const int MsgResendReq::kData2FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MsgResendReq::MsgResendReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_schema_2etl_2etransport_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.MsgResendReq)
}
MsgResendReq::MsgResendReq(const MsgResendReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_data2()) {
    data2_ = new ::mtproto::MsgResendReq_Data(*from.data2_);
  } else {
    data2_ = NULL;
  }
  constructor_ = from.constructor_;
  // @@protoc_insertion_point(copy_constructor:mtproto.MsgResendReq)
}

void MsgResendReq::SharedCtor() {
  ::memset(&data2_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&constructor_) -
      reinterpret_cast<char*>(&data2_)) + sizeof(constructor_));
  _cached_size_ = 0;
}

MsgResendReq::~MsgResendReq() {
  // @@protoc_insertion_point(destructor:mtproto.MsgResendReq)
  SharedDtor();
}

void MsgResendReq::SharedDtor() {
  if (this != internal_default_instance()) delete data2_;
}

void MsgResendReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgResendReq::descriptor() {
  protobuf_schema_2etl_2etransport_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2etransport_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MsgResendReq& MsgResendReq::default_instance() {
  protobuf_schema_2etl_2etransport_2eproto::InitDefaults();
  return *internal_default_instance();
}

MsgResendReq* MsgResendReq::New(::google::protobuf::Arena* arena) const {
  MsgResendReq* n = new MsgResendReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MsgResendReq::Swap(MsgResendReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MsgResendReq::InternalSwap(MsgResendReq* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata MsgResendReq::GetMetadata() const {
  protobuf_schema_2etl_2etransport_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2etransport_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MsgResendReq

// .mtproto.TLConstructor constructor = 1;
void MsgResendReq::clear_constructor() {
  constructor_ = 0;
}
::mtproto::TLConstructor MsgResendReq::constructor() const {
  // @@protoc_insertion_point(field_get:mtproto.MsgResendReq.constructor)
  return static_cast< ::mtproto::TLConstructor >(constructor_);
}
void MsgResendReq::set_constructor(::mtproto::TLConstructor value) {
  
  constructor_ = value;
  // @@protoc_insertion_point(field_set:mtproto.MsgResendReq.constructor)
}

// .mtproto.MsgResendReq_Data data2 = 2;
bool MsgResendReq::has_data2() const {
  return this != internal_default_instance() && data2_ != NULL;
}
void MsgResendReq::clear_data2() {
  if (GetArenaNoVirtual() == NULL && data2_ != NULL) delete data2_;
  data2_ = NULL;
}
const ::mtproto::MsgResendReq_Data& MsgResendReq::data2() const {
  const ::mtproto::MsgResendReq_Data* p = data2_;
  // @@protoc_insertion_point(field_get:mtproto.MsgResendReq.data2)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::MsgResendReq_Data*>(
      &::mtproto::_MsgResendReq_Data_default_instance_);
}
::mtproto::MsgResendReq_Data* MsgResendReq::mutable_data2() {
  
  if (data2_ == NULL) {
    data2_ = new ::mtproto::MsgResendReq_Data;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.MsgResendReq.data2)
  return data2_;
}
::mtproto::MsgResendReq_Data* MsgResendReq::release_data2() {
  // @@protoc_insertion_point(field_release:mtproto.MsgResendReq.data2)
  
  ::mtproto::MsgResendReq_Data* temp = data2_;
  data2_ = NULL;
  return temp;
}
void MsgResendReq::set_allocated_data2(::mtproto::MsgResendReq_Data* data2) {
  delete data2_;
  data2_ = data2;
  if (data2) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.MsgResendReq.data2)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TL_msg_resend_req::kData2FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TL_msg_resend_req::TL_msg_resend_req()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_schema_2etl_2etransport_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.TL_msg_resend_req)
}
TL_msg_resend_req::TL_msg_resend_req(const TL_msg_resend_req& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_data2()) {
    data2_ = new ::mtproto::MsgResendReq_Data(*from.data2_);
  } else {
    data2_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:mtproto.TL_msg_resend_req)
}

void TL_msg_resend_req::SharedCtor() {
  data2_ = NULL;
  _cached_size_ = 0;
}

TL_msg_resend_req::~TL_msg_resend_req() {
  // @@protoc_insertion_point(destructor:mtproto.TL_msg_resend_req)
  SharedDtor();
}

void TL_msg_resend_req::SharedDtor() {
  if (this != internal_default_instance()) delete data2_;
}

void TL_msg_resend_req::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TL_msg_resend_req::descriptor() {
  protobuf_schema_2etl_2etransport_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2etransport_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TL_msg_resend_req& TL_msg_resend_req::default_instance() {
  protobuf_schema_2etl_2etransport_2eproto::InitDefaults();
  return *internal_default_instance();
}

TL_msg_resend_req* TL_msg_resend_req::New(::google::protobuf::Arena* arena) const {
  TL_msg_resend_req* n = new TL_msg_resend_req;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TL_msg_resend_req::Swap(TL_msg_resend_req* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TL_msg_resend_req::InternalSwap(TL_msg_resend_req* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata TL_msg_resend_req::GetMetadata() const {
  protobuf_schema_2etl_2etransport_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2etransport_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TL_msg_resend_req

// .mtproto.MsgResendReq_Data data2 = 2;
bool TL_msg_resend_req::has_data2() const {
  return this != internal_default_instance() && data2_ != NULL;
}
void TL_msg_resend_req::clear_data2() {
  if (GetArenaNoVirtual() == NULL && data2_ != NULL) delete data2_;
  data2_ = NULL;
}
const ::mtproto::MsgResendReq_Data& TL_msg_resend_req::data2() const {
  const ::mtproto::MsgResendReq_Data* p = data2_;
  // @@protoc_insertion_point(field_get:mtproto.TL_msg_resend_req.data2)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::MsgResendReq_Data*>(
      &::mtproto::_MsgResendReq_Data_default_instance_);
}
::mtproto::MsgResendReq_Data* TL_msg_resend_req::mutable_data2() {
  
  if (data2_ == NULL) {
    data2_ = new ::mtproto::MsgResendReq_Data;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_msg_resend_req.data2)
  return data2_;
}
::mtproto::MsgResendReq_Data* TL_msg_resend_req::release_data2() {
  // @@protoc_insertion_point(field_release:mtproto.TL_msg_resend_req.data2)
  
  ::mtproto::MsgResendReq_Data* temp = data2_;
  data2_ = NULL;
  return temp;
}
void TL_msg_resend_req::set_allocated_data2(::mtproto::MsgResendReq_Data* data2) {
  delete data2_;
  data2_ = data2;
  if (data2) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_msg_resend_req.data2)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int NewSession_Data::kFirstMsgIdFieldNumber;
const int NewSession_Data::kUniqueIdFieldNumber;
const int NewSession_Data::kServerSaltFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

NewSession_Data::NewSession_Data()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_schema_2etl_2etransport_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.NewSession_Data)
}
NewSession_Data::NewSession_Data(const NewSession_Data& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&first_msg_id_, &from.first_msg_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&server_salt_) -
    reinterpret_cast<char*>(&first_msg_id_)) + sizeof(server_salt_));
  // @@protoc_insertion_point(copy_constructor:mtproto.NewSession_Data)
}

void NewSession_Data::SharedCtor() {
  ::memset(&first_msg_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&server_salt_) -
      reinterpret_cast<char*>(&first_msg_id_)) + sizeof(server_salt_));
  _cached_size_ = 0;
}

NewSession_Data::~NewSession_Data() {
  // @@protoc_insertion_point(destructor:mtproto.NewSession_Data)
  SharedDtor();
}

void NewSession_Data::SharedDtor() {
}

void NewSession_Data::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* NewSession_Data::descriptor() {
  protobuf_schema_2etl_2etransport_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2etransport_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const NewSession_Data& NewSession_Data::default_instance() {
  protobuf_schema_2etl_2etransport_2eproto::InitDefaults();
  return *internal_default_instance();
}

NewSession_Data* NewSession_Data::New(::google::protobuf::Arena* arena) const {
  NewSession_Data* n = new NewSession_Data;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void NewSession_Data::Swap(NewSession_Data* other) {
  if (other == this) return;
  InternalSwap(other);
}
void NewSession_Data::InternalSwap(NewSession_Data* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata NewSession_Data::GetMetadata() const {
  protobuf_schema_2etl_2etransport_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2etransport_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// NewSession_Data

// int64 first_msg_id = 1;
void NewSession_Data::clear_first_msg_id() {
  first_msg_id_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 NewSession_Data::first_msg_id() const {
  // @@protoc_insertion_point(field_get:mtproto.NewSession_Data.first_msg_id)
  return first_msg_id_;
}
void NewSession_Data::set_first_msg_id(::google::protobuf::int64 value) {
  
  first_msg_id_ = value;
  // @@protoc_insertion_point(field_set:mtproto.NewSession_Data.first_msg_id)
}

// int64 unique_id = 2;
void NewSession_Data::clear_unique_id() {
  unique_id_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 NewSession_Data::unique_id() const {
  // @@protoc_insertion_point(field_get:mtproto.NewSession_Data.unique_id)
  return unique_id_;
}
void NewSession_Data::set_unique_id(::google::protobuf::int64 value) {
  
  unique_id_ = value;
  // @@protoc_insertion_point(field_set:mtproto.NewSession_Data.unique_id)
}

// int64 server_salt = 3;
void NewSession_Data::clear_server_salt() {
  server_salt_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 NewSession_Data::server_salt() const {
  // @@protoc_insertion_point(field_get:mtproto.NewSession_Data.server_salt)
  return server_salt_;
}
void NewSession_Data::set_server_salt(::google::protobuf::int64 value) {
  
  server_salt_ = value;
  // @@protoc_insertion_point(field_set:mtproto.NewSession_Data.server_salt)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int NewSession::kConstructorFieldNumber;
const int NewSession::kData2FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

NewSession::NewSession()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_schema_2etl_2etransport_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.NewSession)
}
NewSession::NewSession(const NewSession& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_data2()) {
    data2_ = new ::mtproto::NewSession_Data(*from.data2_);
  } else {
    data2_ = NULL;
  }
  constructor_ = from.constructor_;
  // @@protoc_insertion_point(copy_constructor:mtproto.NewSession)
}

void NewSession::SharedCtor() {
  ::memset(&data2_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&constructor_) -
      reinterpret_cast<char*>(&data2_)) + sizeof(constructor_));
  _cached_size_ = 0;
}

NewSession::~NewSession() {
  // @@protoc_insertion_point(destructor:mtproto.NewSession)
  SharedDtor();
}

void NewSession::SharedDtor() {
  if (this != internal_default_instance()) delete data2_;
}

void NewSession::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* NewSession::descriptor() {
  protobuf_schema_2etl_2etransport_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2etransport_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const NewSession& NewSession::default_instance() {
  protobuf_schema_2etl_2etransport_2eproto::InitDefaults();
  return *internal_default_instance();
}

NewSession* NewSession::New(::google::protobuf::Arena* arena) const {
  NewSession* n = new NewSession;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void NewSession::Swap(NewSession* other) {
  if (other == this) return;
  InternalSwap(other);
}
void NewSession::InternalSwap(NewSession* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata NewSession::GetMetadata() const {
  protobuf_schema_2etl_2etransport_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2etransport_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// NewSession

// .mtproto.TLConstructor constructor = 1;
void NewSession::clear_constructor() {
  constructor_ = 0;
}
::mtproto::TLConstructor NewSession::constructor() const {
  // @@protoc_insertion_point(field_get:mtproto.NewSession.constructor)
  return static_cast< ::mtproto::TLConstructor >(constructor_);
}
void NewSession::set_constructor(::mtproto::TLConstructor value) {
  
  constructor_ = value;
  // @@protoc_insertion_point(field_set:mtproto.NewSession.constructor)
}

// .mtproto.NewSession_Data data2 = 2;
bool NewSession::has_data2() const {
  return this != internal_default_instance() && data2_ != NULL;
}
void NewSession::clear_data2() {
  if (GetArenaNoVirtual() == NULL && data2_ != NULL) delete data2_;
  data2_ = NULL;
}
const ::mtproto::NewSession_Data& NewSession::data2() const {
  const ::mtproto::NewSession_Data* p = data2_;
  // @@protoc_insertion_point(field_get:mtproto.NewSession.data2)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::NewSession_Data*>(
      &::mtproto::_NewSession_Data_default_instance_);
}
::mtproto::NewSession_Data* NewSession::mutable_data2() {
  
  if (data2_ == NULL) {
    data2_ = new ::mtproto::NewSession_Data;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.NewSession.data2)
  return data2_;
}
::mtproto::NewSession_Data* NewSession::release_data2() {
  // @@protoc_insertion_point(field_release:mtproto.NewSession.data2)
  
  ::mtproto::NewSession_Data* temp = data2_;
  data2_ = NULL;
  return temp;
}
void NewSession::set_allocated_data2(::mtproto::NewSession_Data* data2) {
  delete data2_;
  data2_ = data2;
  if (data2) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.NewSession.data2)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TL_new_session_created::kData2FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TL_new_session_created::TL_new_session_created()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_schema_2etl_2etransport_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.TL_new_session_created)
}
TL_new_session_created::TL_new_session_created(const TL_new_session_created& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_data2()) {
    data2_ = new ::mtproto::NewSession_Data(*from.data2_);
  } else {
    data2_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:mtproto.TL_new_session_created)
}

void TL_new_session_created::SharedCtor() {
  data2_ = NULL;
  _cached_size_ = 0;
}

TL_new_session_created::~TL_new_session_created() {
  // @@protoc_insertion_point(destructor:mtproto.TL_new_session_created)
  SharedDtor();
}

void TL_new_session_created::SharedDtor() {
  if (this != internal_default_instance()) delete data2_;
}

void TL_new_session_created::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TL_new_session_created::descriptor() {
  protobuf_schema_2etl_2etransport_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2etransport_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TL_new_session_created& TL_new_session_created::default_instance() {
  protobuf_schema_2etl_2etransport_2eproto::InitDefaults();
  return *internal_default_instance();
}

TL_new_session_created* TL_new_session_created::New(::google::protobuf::Arena* arena) const {
  TL_new_session_created* n = new TL_new_session_created;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TL_new_session_created::Swap(TL_new_session_created* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TL_new_session_created::InternalSwap(TL_new_session_created* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata TL_new_session_created::GetMetadata() const {
  protobuf_schema_2etl_2etransport_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2etransport_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TL_new_session_created

// .mtproto.NewSession_Data data2 = 2;
bool TL_new_session_created::has_data2() const {
  return this != internal_default_instance() && data2_ != NULL;
}
void TL_new_session_created::clear_data2() {
  if (GetArenaNoVirtual() == NULL && data2_ != NULL) delete data2_;
  data2_ = NULL;
}
const ::mtproto::NewSession_Data& TL_new_session_created::data2() const {
  const ::mtproto::NewSession_Data* p = data2_;
  // @@protoc_insertion_point(field_get:mtproto.TL_new_session_created.data2)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::NewSession_Data*>(
      &::mtproto::_NewSession_Data_default_instance_);
}
::mtproto::NewSession_Data* TL_new_session_created::mutable_data2() {
  
  if (data2_ == NULL) {
    data2_ = new ::mtproto::NewSession_Data;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_new_session_created.data2)
  return data2_;
}
::mtproto::NewSession_Data* TL_new_session_created::release_data2() {
  // @@protoc_insertion_point(field_release:mtproto.TL_new_session_created.data2)
  
  ::mtproto::NewSession_Data* temp = data2_;
  data2_ = NULL;
  return temp;
}
void TL_new_session_created::set_allocated_data2(::mtproto::NewSession_Data* data2) {
  delete data2_;
  data2_ = data2;
  if (data2) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_new_session_created.data2)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int IpPort_Data::kIpv4FieldNumber;
const int IpPort_Data::kPortFieldNumber;
const int IpPort_Data::kSecretFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

IpPort_Data::IpPort_Data()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_schema_2etl_2etransport_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.IpPort_Data)
}
IpPort_Data::IpPort_Data(const IpPort_Data& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  secret_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.secret().size() > 0) {
    secret_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.secret_);
  }
  ::memcpy(&ipv4_, &from.ipv4_,
    static_cast<size_t>(reinterpret_cast<char*>(&port_) -
    reinterpret_cast<char*>(&ipv4_)) + sizeof(port_));
  // @@protoc_insertion_point(copy_constructor:mtproto.IpPort_Data)
}

void IpPort_Data::SharedCtor() {
  secret_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&ipv4_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&port_) -
      reinterpret_cast<char*>(&ipv4_)) + sizeof(port_));
  _cached_size_ = 0;
}

IpPort_Data::~IpPort_Data() {
  // @@protoc_insertion_point(destructor:mtproto.IpPort_Data)
  SharedDtor();
}

void IpPort_Data::SharedDtor() {
  secret_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void IpPort_Data::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* IpPort_Data::descriptor() {
  protobuf_schema_2etl_2etransport_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2etransport_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const IpPort_Data& IpPort_Data::default_instance() {
  protobuf_schema_2etl_2etransport_2eproto::InitDefaults();
  return *internal_default_instance();
}

IpPort_Data* IpPort_Data::New(::google::protobuf::Arena* arena) const {
  IpPort_Data* n = new IpPort_Data;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void IpPort_Data::Swap(IpPort_Data* other) {
  if (other == this) return;
  InternalSwap(other);
}
void IpPort_Data::InternalSwap(IpPort_Data* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata IpPort_Data::GetMetadata() const {
  protobuf_schema_2etl_2etransport_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2etransport_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// IpPort_Data

// int32 ipv4 = 1;
void IpPort_Data::clear_ipv4() {
  ipv4_ = 0;
}
::google::protobuf::int32 IpPort_Data::ipv4() const {
  // @@protoc_insertion_point(field_get:mtproto.IpPort_Data.ipv4)
  return ipv4_;
}
void IpPort_Data::set_ipv4(::google::protobuf::int32 value) {
  
  ipv4_ = value;
  // @@protoc_insertion_point(field_set:mtproto.IpPort_Data.ipv4)
}

// int32 port = 2;
void IpPort_Data::clear_port() {
  port_ = 0;
}
::google::protobuf::int32 IpPort_Data::port() const {
  // @@protoc_insertion_point(field_get:mtproto.IpPort_Data.port)
  return port_;
}
void IpPort_Data::set_port(::google::protobuf::int32 value) {
  
  port_ = value;
  // @@protoc_insertion_point(field_set:mtproto.IpPort_Data.port)
}

// bytes secret = 3;
void IpPort_Data::clear_secret() {
  secret_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& IpPort_Data::secret() const {
  // @@protoc_insertion_point(field_get:mtproto.IpPort_Data.secret)
  return secret_.GetNoArena();
}
void IpPort_Data::set_secret(const ::std::string& value) {
  
  secret_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtproto.IpPort_Data.secret)
}
#if LANG_CXX11
void IpPort_Data::set_secret(::std::string&& value) {
  
  secret_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mtproto.IpPort_Data.secret)
}
#endif
void IpPort_Data::set_secret(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  secret_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtproto.IpPort_Data.secret)
}
void IpPort_Data::set_secret(const void* value, size_t size) {
  
  secret_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtproto.IpPort_Data.secret)
}
::std::string* IpPort_Data::mutable_secret() {
  
  // @@protoc_insertion_point(field_mutable:mtproto.IpPort_Data.secret)
  return secret_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* IpPort_Data::release_secret() {
  // @@protoc_insertion_point(field_release:mtproto.IpPort_Data.secret)
  
  return secret_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void IpPort_Data::set_allocated_secret(::std::string* secret) {
  if (secret != NULL) {
    
  } else {
    
  }
  secret_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), secret);
  // @@protoc_insertion_point(field_set_allocated:mtproto.IpPort_Data.secret)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int IpPort::kConstructorFieldNumber;
const int IpPort::kData2FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

IpPort::IpPort()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_schema_2etl_2etransport_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.IpPort)
}
IpPort::IpPort(const IpPort& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_data2()) {
    data2_ = new ::mtproto::IpPort_Data(*from.data2_);
  } else {
    data2_ = NULL;
  }
  constructor_ = from.constructor_;
  // @@protoc_insertion_point(copy_constructor:mtproto.IpPort)
}

void IpPort::SharedCtor() {
  ::memset(&data2_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&constructor_) -
      reinterpret_cast<char*>(&data2_)) + sizeof(constructor_));
  _cached_size_ = 0;
}

IpPort::~IpPort() {
  // @@protoc_insertion_point(destructor:mtproto.IpPort)
  SharedDtor();
}

void IpPort::SharedDtor() {
  if (this != internal_default_instance()) delete data2_;
}

void IpPort::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* IpPort::descriptor() {
  protobuf_schema_2etl_2etransport_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2etransport_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const IpPort& IpPort::default_instance() {
  protobuf_schema_2etl_2etransport_2eproto::InitDefaults();
  return *internal_default_instance();
}

IpPort* IpPort::New(::google::protobuf::Arena* arena) const {
  IpPort* n = new IpPort;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void IpPort::Swap(IpPort* other) {
  if (other == this) return;
  InternalSwap(other);
}
void IpPort::InternalSwap(IpPort* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata IpPort::GetMetadata() const {
  protobuf_schema_2etl_2etransport_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2etransport_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// IpPort

// .mtproto.TLConstructor constructor = 1;
void IpPort::clear_constructor() {
  constructor_ = 0;
}
::mtproto::TLConstructor IpPort::constructor() const {
  // @@protoc_insertion_point(field_get:mtproto.IpPort.constructor)
  return static_cast< ::mtproto::TLConstructor >(constructor_);
}
void IpPort::set_constructor(::mtproto::TLConstructor value) {
  
  constructor_ = value;
  // @@protoc_insertion_point(field_set:mtproto.IpPort.constructor)
}

// .mtproto.IpPort_Data data2 = 2;
bool IpPort::has_data2() const {
  return this != internal_default_instance() && data2_ != NULL;
}
void IpPort::clear_data2() {
  if (GetArenaNoVirtual() == NULL && data2_ != NULL) delete data2_;
  data2_ = NULL;
}
const ::mtproto::IpPort_Data& IpPort::data2() const {
  const ::mtproto::IpPort_Data* p = data2_;
  // @@protoc_insertion_point(field_get:mtproto.IpPort.data2)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::IpPort_Data*>(
      &::mtproto::_IpPort_Data_default_instance_);
}
::mtproto::IpPort_Data* IpPort::mutable_data2() {
  
  if (data2_ == NULL) {
    data2_ = new ::mtproto::IpPort_Data;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.IpPort.data2)
  return data2_;
}
::mtproto::IpPort_Data* IpPort::release_data2() {
  // @@protoc_insertion_point(field_release:mtproto.IpPort.data2)
  
  ::mtproto::IpPort_Data* temp = data2_;
  data2_ = NULL;
  return temp;
}
void IpPort::set_allocated_data2(::mtproto::IpPort_Data* data2) {
  delete data2_;
  data2_ = data2;
  if (data2) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.IpPort.data2)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TL_ipPort::kData2FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TL_ipPort::TL_ipPort()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_schema_2etl_2etransport_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.TL_ipPort)
}
TL_ipPort::TL_ipPort(const TL_ipPort& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_data2()) {
    data2_ = new ::mtproto::IpPort_Data(*from.data2_);
  } else {
    data2_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:mtproto.TL_ipPort)
}

void TL_ipPort::SharedCtor() {
  data2_ = NULL;
  _cached_size_ = 0;
}

TL_ipPort::~TL_ipPort() {
  // @@protoc_insertion_point(destructor:mtproto.TL_ipPort)
  SharedDtor();
}

void TL_ipPort::SharedDtor() {
  if (this != internal_default_instance()) delete data2_;
}

void TL_ipPort::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TL_ipPort::descriptor() {
  protobuf_schema_2etl_2etransport_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2etransport_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TL_ipPort& TL_ipPort::default_instance() {
  protobuf_schema_2etl_2etransport_2eproto::InitDefaults();
  return *internal_default_instance();
}

TL_ipPort* TL_ipPort::New(::google::protobuf::Arena* arena) const {
  TL_ipPort* n = new TL_ipPort;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TL_ipPort::Swap(TL_ipPort* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TL_ipPort::InternalSwap(TL_ipPort* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata TL_ipPort::GetMetadata() const {
  protobuf_schema_2etl_2etransport_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2etransport_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TL_ipPort

// .mtproto.IpPort_Data data2 = 2;
bool TL_ipPort::has_data2() const {
  return this != internal_default_instance() && data2_ != NULL;
}
void TL_ipPort::clear_data2() {
  if (GetArenaNoVirtual() == NULL && data2_ != NULL) delete data2_;
  data2_ = NULL;
}
const ::mtproto::IpPort_Data& TL_ipPort::data2() const {
  const ::mtproto::IpPort_Data* p = data2_;
  // @@protoc_insertion_point(field_get:mtproto.TL_ipPort.data2)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::IpPort_Data*>(
      &::mtproto::_IpPort_Data_default_instance_);
}
::mtproto::IpPort_Data* TL_ipPort::mutable_data2() {
  
  if (data2_ == NULL) {
    data2_ = new ::mtproto::IpPort_Data;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_ipPort.data2)
  return data2_;
}
::mtproto::IpPort_Data* TL_ipPort::release_data2() {
  // @@protoc_insertion_point(field_release:mtproto.TL_ipPort.data2)
  
  ::mtproto::IpPort_Data* temp = data2_;
  data2_ = NULL;
  return temp;
}
void TL_ipPort::set_allocated_data2(::mtproto::IpPort_Data* data2) {
  delete data2_;
  data2_ = data2;
  if (data2) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_ipPort.data2)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TL_ipPortSecret::kData2FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TL_ipPortSecret::TL_ipPortSecret()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_schema_2etl_2etransport_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.TL_ipPortSecret)
}
TL_ipPortSecret::TL_ipPortSecret(const TL_ipPortSecret& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_data2()) {
    data2_ = new ::mtproto::IpPort_Data(*from.data2_);
  } else {
    data2_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:mtproto.TL_ipPortSecret)
}

void TL_ipPortSecret::SharedCtor() {
  data2_ = NULL;
  _cached_size_ = 0;
}

TL_ipPortSecret::~TL_ipPortSecret() {
  // @@protoc_insertion_point(destructor:mtproto.TL_ipPortSecret)
  SharedDtor();
}

void TL_ipPortSecret::SharedDtor() {
  if (this != internal_default_instance()) delete data2_;
}

void TL_ipPortSecret::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TL_ipPortSecret::descriptor() {
  protobuf_schema_2etl_2etransport_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2etransport_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TL_ipPortSecret& TL_ipPortSecret::default_instance() {
  protobuf_schema_2etl_2etransport_2eproto::InitDefaults();
  return *internal_default_instance();
}

TL_ipPortSecret* TL_ipPortSecret::New(::google::protobuf::Arena* arena) const {
  TL_ipPortSecret* n = new TL_ipPortSecret;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TL_ipPortSecret::Swap(TL_ipPortSecret* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TL_ipPortSecret::InternalSwap(TL_ipPortSecret* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata TL_ipPortSecret::GetMetadata() const {
  protobuf_schema_2etl_2etransport_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2etransport_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TL_ipPortSecret

// .mtproto.IpPort_Data data2 = 2;
bool TL_ipPortSecret::has_data2() const {
  return this != internal_default_instance() && data2_ != NULL;
}
void TL_ipPortSecret::clear_data2() {
  if (GetArenaNoVirtual() == NULL && data2_ != NULL) delete data2_;
  data2_ = NULL;
}
const ::mtproto::IpPort_Data& TL_ipPortSecret::data2() const {
  const ::mtproto::IpPort_Data* p = data2_;
  // @@protoc_insertion_point(field_get:mtproto.TL_ipPortSecret.data2)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::IpPort_Data*>(
      &::mtproto::_IpPort_Data_default_instance_);
}
::mtproto::IpPort_Data* TL_ipPortSecret::mutable_data2() {
  
  if (data2_ == NULL) {
    data2_ = new ::mtproto::IpPort_Data;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_ipPortSecret.data2)
  return data2_;
}
::mtproto::IpPort_Data* TL_ipPortSecret::release_data2() {
  // @@protoc_insertion_point(field_release:mtproto.TL_ipPortSecret.data2)
  
  ::mtproto::IpPort_Data* temp = data2_;
  data2_ = NULL;
  return temp;
}
void TL_ipPortSecret::set_allocated_data2(::mtproto::IpPort_Data* data2) {
  delete data2_;
  data2_ = data2;
  if (data2) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_ipPortSecret.data2)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MsgsStateReq_Data::kMsgIdsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MsgsStateReq_Data::MsgsStateReq_Data()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_schema_2etl_2etransport_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.MsgsStateReq_Data)
}
MsgsStateReq_Data::MsgsStateReq_Data(const MsgsStateReq_Data& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      msg_ids_(from.msg_ids_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:mtproto.MsgsStateReq_Data)
}

void MsgsStateReq_Data::SharedCtor() {
  _cached_size_ = 0;
}

MsgsStateReq_Data::~MsgsStateReq_Data() {
  // @@protoc_insertion_point(destructor:mtproto.MsgsStateReq_Data)
  SharedDtor();
}

void MsgsStateReq_Data::SharedDtor() {
}

void MsgsStateReq_Data::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgsStateReq_Data::descriptor() {
  protobuf_schema_2etl_2etransport_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2etransport_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MsgsStateReq_Data& MsgsStateReq_Data::default_instance() {
  protobuf_schema_2etl_2etransport_2eproto::InitDefaults();
  return *internal_default_instance();
}

MsgsStateReq_Data* MsgsStateReq_Data::New(::google::protobuf::Arena* arena) const {
  MsgsStateReq_Data* n = new MsgsStateReq_Data;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MsgsStateReq_Data::Swap(MsgsStateReq_Data* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MsgsStateReq_Data::InternalSwap(MsgsStateReq_Data* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata MsgsStateReq_Data::GetMetadata() const {
  protobuf_schema_2etl_2etransport_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2etransport_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MsgsStateReq_Data

// repeated int64 msg_ids = 1;
int MsgsStateReq_Data::msg_ids_size() const {
  return msg_ids_.size();
}
void MsgsStateReq_Data::clear_msg_ids() {
  msg_ids_.Clear();
}
::google::protobuf::int64 MsgsStateReq_Data::msg_ids(int index) const {
  // @@protoc_insertion_point(field_get:mtproto.MsgsStateReq_Data.msg_ids)
  return msg_ids_.Get(index);
}
void MsgsStateReq_Data::set_msg_ids(int index, ::google::protobuf::int64 value) {
  msg_ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:mtproto.MsgsStateReq_Data.msg_ids)
}
void MsgsStateReq_Data::add_msg_ids(::google::protobuf::int64 value) {
  msg_ids_.Add(value);
  // @@protoc_insertion_point(field_add:mtproto.MsgsStateReq_Data.msg_ids)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
MsgsStateReq_Data::msg_ids() const {
  // @@protoc_insertion_point(field_list:mtproto.MsgsStateReq_Data.msg_ids)
  return msg_ids_;
}
::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
MsgsStateReq_Data::mutable_msg_ids() {
  // @@protoc_insertion_point(field_mutable_list:mtproto.MsgsStateReq_Data.msg_ids)
  return &msg_ids_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MsgsStateReq::kConstructorFieldNumber;
const int MsgsStateReq::kData2FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MsgsStateReq::MsgsStateReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_schema_2etl_2etransport_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.MsgsStateReq)
}
MsgsStateReq::MsgsStateReq(const MsgsStateReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_data2()) {
    data2_ = new ::mtproto::MsgsStateReq_Data(*from.data2_);
  } else {
    data2_ = NULL;
  }
  constructor_ = from.constructor_;
  // @@protoc_insertion_point(copy_constructor:mtproto.MsgsStateReq)
}

void MsgsStateReq::SharedCtor() {
  ::memset(&data2_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&constructor_) -
      reinterpret_cast<char*>(&data2_)) + sizeof(constructor_));
  _cached_size_ = 0;
}

MsgsStateReq::~MsgsStateReq() {
  // @@protoc_insertion_point(destructor:mtproto.MsgsStateReq)
  SharedDtor();
}

void MsgsStateReq::SharedDtor() {
  if (this != internal_default_instance()) delete data2_;
}

void MsgsStateReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgsStateReq::descriptor() {
  protobuf_schema_2etl_2etransport_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2etransport_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MsgsStateReq& MsgsStateReq::default_instance() {
  protobuf_schema_2etl_2etransport_2eproto::InitDefaults();
  return *internal_default_instance();
}

MsgsStateReq* MsgsStateReq::New(::google::protobuf::Arena* arena) const {
  MsgsStateReq* n = new MsgsStateReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MsgsStateReq::Swap(MsgsStateReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MsgsStateReq::InternalSwap(MsgsStateReq* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata MsgsStateReq::GetMetadata() const {
  protobuf_schema_2etl_2etransport_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2etransport_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MsgsStateReq

// .mtproto.TLConstructor constructor = 1;
void MsgsStateReq::clear_constructor() {
  constructor_ = 0;
}
::mtproto::TLConstructor MsgsStateReq::constructor() const {
  // @@protoc_insertion_point(field_get:mtproto.MsgsStateReq.constructor)
  return static_cast< ::mtproto::TLConstructor >(constructor_);
}
void MsgsStateReq::set_constructor(::mtproto::TLConstructor value) {
  
  constructor_ = value;
  // @@protoc_insertion_point(field_set:mtproto.MsgsStateReq.constructor)
}

// .mtproto.MsgsStateReq_Data data2 = 2;
bool MsgsStateReq::has_data2() const {
  return this != internal_default_instance() && data2_ != NULL;
}
void MsgsStateReq::clear_data2() {
  if (GetArenaNoVirtual() == NULL && data2_ != NULL) delete data2_;
  data2_ = NULL;
}
const ::mtproto::MsgsStateReq_Data& MsgsStateReq::data2() const {
  const ::mtproto::MsgsStateReq_Data* p = data2_;
  // @@protoc_insertion_point(field_get:mtproto.MsgsStateReq.data2)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::MsgsStateReq_Data*>(
      &::mtproto::_MsgsStateReq_Data_default_instance_);
}
::mtproto::MsgsStateReq_Data* MsgsStateReq::mutable_data2() {
  
  if (data2_ == NULL) {
    data2_ = new ::mtproto::MsgsStateReq_Data;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.MsgsStateReq.data2)
  return data2_;
}
::mtproto::MsgsStateReq_Data* MsgsStateReq::release_data2() {
  // @@protoc_insertion_point(field_release:mtproto.MsgsStateReq.data2)
  
  ::mtproto::MsgsStateReq_Data* temp = data2_;
  data2_ = NULL;
  return temp;
}
void MsgsStateReq::set_allocated_data2(::mtproto::MsgsStateReq_Data* data2) {
  delete data2_;
  data2_ = data2;
  if (data2) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.MsgsStateReq.data2)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TL_msgs_state_req::kData2FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TL_msgs_state_req::TL_msgs_state_req()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_schema_2etl_2etransport_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.TL_msgs_state_req)
}
TL_msgs_state_req::TL_msgs_state_req(const TL_msgs_state_req& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_data2()) {
    data2_ = new ::mtproto::MsgsStateReq_Data(*from.data2_);
  } else {
    data2_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:mtproto.TL_msgs_state_req)
}

void TL_msgs_state_req::SharedCtor() {
  data2_ = NULL;
  _cached_size_ = 0;
}

TL_msgs_state_req::~TL_msgs_state_req() {
  // @@protoc_insertion_point(destructor:mtproto.TL_msgs_state_req)
  SharedDtor();
}

void TL_msgs_state_req::SharedDtor() {
  if (this != internal_default_instance()) delete data2_;
}

void TL_msgs_state_req::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TL_msgs_state_req::descriptor() {
  protobuf_schema_2etl_2etransport_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2etransport_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TL_msgs_state_req& TL_msgs_state_req::default_instance() {
  protobuf_schema_2etl_2etransport_2eproto::InitDefaults();
  return *internal_default_instance();
}

TL_msgs_state_req* TL_msgs_state_req::New(::google::protobuf::Arena* arena) const {
  TL_msgs_state_req* n = new TL_msgs_state_req;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TL_msgs_state_req::Swap(TL_msgs_state_req* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TL_msgs_state_req::InternalSwap(TL_msgs_state_req* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata TL_msgs_state_req::GetMetadata() const {
  protobuf_schema_2etl_2etransport_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2etransport_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TL_msgs_state_req

// .mtproto.MsgsStateReq_Data data2 = 2;
bool TL_msgs_state_req::has_data2() const {
  return this != internal_default_instance() && data2_ != NULL;
}
void TL_msgs_state_req::clear_data2() {
  if (GetArenaNoVirtual() == NULL && data2_ != NULL) delete data2_;
  data2_ = NULL;
}
const ::mtproto::MsgsStateReq_Data& TL_msgs_state_req::data2() const {
  const ::mtproto::MsgsStateReq_Data* p = data2_;
  // @@protoc_insertion_point(field_get:mtproto.TL_msgs_state_req.data2)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::MsgsStateReq_Data*>(
      &::mtproto::_MsgsStateReq_Data_default_instance_);
}
::mtproto::MsgsStateReq_Data* TL_msgs_state_req::mutable_data2() {
  
  if (data2_ == NULL) {
    data2_ = new ::mtproto::MsgsStateReq_Data;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_msgs_state_req.data2)
  return data2_;
}
::mtproto::MsgsStateReq_Data* TL_msgs_state_req::release_data2() {
  // @@protoc_insertion_point(field_release:mtproto.TL_msgs_state_req.data2)
  
  ::mtproto::MsgsStateReq_Data* temp = data2_;
  data2_ = NULL;
  return temp;
}
void TL_msgs_state_req::set_allocated_data2(::mtproto::MsgsStateReq_Data* data2) {
  delete data2_;
  data2_ = data2;
  if (data2) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_msgs_state_req.data2)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MsgsStateInfo_Data::kReqMsgIdFieldNumber;
const int MsgsStateInfo_Data::kInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MsgsStateInfo_Data::MsgsStateInfo_Data()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_schema_2etl_2etransport_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.MsgsStateInfo_Data)
}
MsgsStateInfo_Data::MsgsStateInfo_Data(const MsgsStateInfo_Data& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  info_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.info().size() > 0) {
    info_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.info_);
  }
  req_msg_id_ = from.req_msg_id_;
  // @@protoc_insertion_point(copy_constructor:mtproto.MsgsStateInfo_Data)
}

void MsgsStateInfo_Data::SharedCtor() {
  info_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  req_msg_id_ = GOOGLE_LONGLONG(0);
  _cached_size_ = 0;
}

MsgsStateInfo_Data::~MsgsStateInfo_Data() {
  // @@protoc_insertion_point(destructor:mtproto.MsgsStateInfo_Data)
  SharedDtor();
}

void MsgsStateInfo_Data::SharedDtor() {
  info_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void MsgsStateInfo_Data::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgsStateInfo_Data::descriptor() {
  protobuf_schema_2etl_2etransport_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2etransport_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MsgsStateInfo_Data& MsgsStateInfo_Data::default_instance() {
  protobuf_schema_2etl_2etransport_2eproto::InitDefaults();
  return *internal_default_instance();
}

MsgsStateInfo_Data* MsgsStateInfo_Data::New(::google::protobuf::Arena* arena) const {
  MsgsStateInfo_Data* n = new MsgsStateInfo_Data;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MsgsStateInfo_Data::Swap(MsgsStateInfo_Data* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MsgsStateInfo_Data::InternalSwap(MsgsStateInfo_Data* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata MsgsStateInfo_Data::GetMetadata() const {
  protobuf_schema_2etl_2etransport_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2etransport_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MsgsStateInfo_Data

// int64 req_msg_id = 1;
void MsgsStateInfo_Data::clear_req_msg_id() {
  req_msg_id_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 MsgsStateInfo_Data::req_msg_id() const {
  // @@protoc_insertion_point(field_get:mtproto.MsgsStateInfo_Data.req_msg_id)
  return req_msg_id_;
}
void MsgsStateInfo_Data::set_req_msg_id(::google::protobuf::int64 value) {
  
  req_msg_id_ = value;
  // @@protoc_insertion_point(field_set:mtproto.MsgsStateInfo_Data.req_msg_id)
}

// string info = 2;
void MsgsStateInfo_Data::clear_info() {
  info_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& MsgsStateInfo_Data::info() const {
  // @@protoc_insertion_point(field_get:mtproto.MsgsStateInfo_Data.info)
  return info_.GetNoArena();
}
void MsgsStateInfo_Data::set_info(const ::std::string& value) {
  
  info_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtproto.MsgsStateInfo_Data.info)
}
#if LANG_CXX11
void MsgsStateInfo_Data::set_info(::std::string&& value) {
  
  info_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mtproto.MsgsStateInfo_Data.info)
}
#endif
void MsgsStateInfo_Data::set_info(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  info_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtproto.MsgsStateInfo_Data.info)
}
void MsgsStateInfo_Data::set_info(const char* value, size_t size) {
  
  info_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtproto.MsgsStateInfo_Data.info)
}
::std::string* MsgsStateInfo_Data::mutable_info() {
  
  // @@protoc_insertion_point(field_mutable:mtproto.MsgsStateInfo_Data.info)
  return info_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* MsgsStateInfo_Data::release_info() {
  // @@protoc_insertion_point(field_release:mtproto.MsgsStateInfo_Data.info)
  
  return info_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MsgsStateInfo_Data::set_allocated_info(::std::string* info) {
  if (info != NULL) {
    
  } else {
    
  }
  info_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), info);
  // @@protoc_insertion_point(field_set_allocated:mtproto.MsgsStateInfo_Data.info)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MsgsStateInfo::kConstructorFieldNumber;
const int MsgsStateInfo::kData2FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MsgsStateInfo::MsgsStateInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_schema_2etl_2etransport_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.MsgsStateInfo)
}
MsgsStateInfo::MsgsStateInfo(const MsgsStateInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_data2()) {
    data2_ = new ::mtproto::MsgsStateInfo_Data(*from.data2_);
  } else {
    data2_ = NULL;
  }
  constructor_ = from.constructor_;
  // @@protoc_insertion_point(copy_constructor:mtproto.MsgsStateInfo)
}

void MsgsStateInfo::SharedCtor() {
  ::memset(&data2_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&constructor_) -
      reinterpret_cast<char*>(&data2_)) + sizeof(constructor_));
  _cached_size_ = 0;
}

MsgsStateInfo::~MsgsStateInfo() {
  // @@protoc_insertion_point(destructor:mtproto.MsgsStateInfo)
  SharedDtor();
}

void MsgsStateInfo::SharedDtor() {
  if (this != internal_default_instance()) delete data2_;
}

void MsgsStateInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgsStateInfo::descriptor() {
  protobuf_schema_2etl_2etransport_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2etransport_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MsgsStateInfo& MsgsStateInfo::default_instance() {
  protobuf_schema_2etl_2etransport_2eproto::InitDefaults();
  return *internal_default_instance();
}

MsgsStateInfo* MsgsStateInfo::New(::google::protobuf::Arena* arena) const {
  MsgsStateInfo* n = new MsgsStateInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MsgsStateInfo::Swap(MsgsStateInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MsgsStateInfo::InternalSwap(MsgsStateInfo* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata MsgsStateInfo::GetMetadata() const {
  protobuf_schema_2etl_2etransport_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2etransport_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MsgsStateInfo

// .mtproto.TLConstructor constructor = 1;
void MsgsStateInfo::clear_constructor() {
  constructor_ = 0;
}
::mtproto::TLConstructor MsgsStateInfo::constructor() const {
  // @@protoc_insertion_point(field_get:mtproto.MsgsStateInfo.constructor)
  return static_cast< ::mtproto::TLConstructor >(constructor_);
}
void MsgsStateInfo::set_constructor(::mtproto::TLConstructor value) {
  
  constructor_ = value;
  // @@protoc_insertion_point(field_set:mtproto.MsgsStateInfo.constructor)
}

// .mtproto.MsgsStateInfo_Data data2 = 2;
bool MsgsStateInfo::has_data2() const {
  return this != internal_default_instance() && data2_ != NULL;
}
void MsgsStateInfo::clear_data2() {
  if (GetArenaNoVirtual() == NULL && data2_ != NULL) delete data2_;
  data2_ = NULL;
}
const ::mtproto::MsgsStateInfo_Data& MsgsStateInfo::data2() const {
  const ::mtproto::MsgsStateInfo_Data* p = data2_;
  // @@protoc_insertion_point(field_get:mtproto.MsgsStateInfo.data2)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::MsgsStateInfo_Data*>(
      &::mtproto::_MsgsStateInfo_Data_default_instance_);
}
::mtproto::MsgsStateInfo_Data* MsgsStateInfo::mutable_data2() {
  
  if (data2_ == NULL) {
    data2_ = new ::mtproto::MsgsStateInfo_Data;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.MsgsStateInfo.data2)
  return data2_;
}
::mtproto::MsgsStateInfo_Data* MsgsStateInfo::release_data2() {
  // @@protoc_insertion_point(field_release:mtproto.MsgsStateInfo.data2)
  
  ::mtproto::MsgsStateInfo_Data* temp = data2_;
  data2_ = NULL;
  return temp;
}
void MsgsStateInfo::set_allocated_data2(::mtproto::MsgsStateInfo_Data* data2) {
  delete data2_;
  data2_ = data2;
  if (data2) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.MsgsStateInfo.data2)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TL_msgs_state_info::kData2FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TL_msgs_state_info::TL_msgs_state_info()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_schema_2etl_2etransport_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.TL_msgs_state_info)
}
TL_msgs_state_info::TL_msgs_state_info(const TL_msgs_state_info& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_data2()) {
    data2_ = new ::mtproto::MsgsStateInfo_Data(*from.data2_);
  } else {
    data2_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:mtproto.TL_msgs_state_info)
}

void TL_msgs_state_info::SharedCtor() {
  data2_ = NULL;
  _cached_size_ = 0;
}

TL_msgs_state_info::~TL_msgs_state_info() {
  // @@protoc_insertion_point(destructor:mtproto.TL_msgs_state_info)
  SharedDtor();
}

void TL_msgs_state_info::SharedDtor() {
  if (this != internal_default_instance()) delete data2_;
}

void TL_msgs_state_info::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TL_msgs_state_info::descriptor() {
  protobuf_schema_2etl_2etransport_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2etransport_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TL_msgs_state_info& TL_msgs_state_info::default_instance() {
  protobuf_schema_2etl_2etransport_2eproto::InitDefaults();
  return *internal_default_instance();
}

TL_msgs_state_info* TL_msgs_state_info::New(::google::protobuf::Arena* arena) const {
  TL_msgs_state_info* n = new TL_msgs_state_info;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TL_msgs_state_info::Swap(TL_msgs_state_info* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TL_msgs_state_info::InternalSwap(TL_msgs_state_info* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata TL_msgs_state_info::GetMetadata() const {
  protobuf_schema_2etl_2etransport_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2etransport_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TL_msgs_state_info

// .mtproto.MsgsStateInfo_Data data2 = 2;
bool TL_msgs_state_info::has_data2() const {
  return this != internal_default_instance() && data2_ != NULL;
}
void TL_msgs_state_info::clear_data2() {
  if (GetArenaNoVirtual() == NULL && data2_ != NULL) delete data2_;
  data2_ = NULL;
}
const ::mtproto::MsgsStateInfo_Data& TL_msgs_state_info::data2() const {
  const ::mtproto::MsgsStateInfo_Data* p = data2_;
  // @@protoc_insertion_point(field_get:mtproto.TL_msgs_state_info.data2)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::MsgsStateInfo_Data*>(
      &::mtproto::_MsgsStateInfo_Data_default_instance_);
}
::mtproto::MsgsStateInfo_Data* TL_msgs_state_info::mutable_data2() {
  
  if (data2_ == NULL) {
    data2_ = new ::mtproto::MsgsStateInfo_Data;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_msgs_state_info.data2)
  return data2_;
}
::mtproto::MsgsStateInfo_Data* TL_msgs_state_info::release_data2() {
  // @@protoc_insertion_point(field_release:mtproto.TL_msgs_state_info.data2)
  
  ::mtproto::MsgsStateInfo_Data* temp = data2_;
  data2_ = NULL;
  return temp;
}
void TL_msgs_state_info::set_allocated_data2(::mtproto::MsgsStateInfo_Data* data2) {
  delete data2_;
  data2_ = data2;
  if (data2) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_msgs_state_info.data2)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MsgsAllInfo_Data::kMsgIdsFieldNumber;
const int MsgsAllInfo_Data::kInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MsgsAllInfo_Data::MsgsAllInfo_Data()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_schema_2etl_2etransport_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.MsgsAllInfo_Data)
}
MsgsAllInfo_Data::MsgsAllInfo_Data(const MsgsAllInfo_Data& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      msg_ids_(from.msg_ids_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  info_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.info().size() > 0) {
    info_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.info_);
  }
  // @@protoc_insertion_point(copy_constructor:mtproto.MsgsAllInfo_Data)
}

void MsgsAllInfo_Data::SharedCtor() {
  info_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

MsgsAllInfo_Data::~MsgsAllInfo_Data() {
  // @@protoc_insertion_point(destructor:mtproto.MsgsAllInfo_Data)
  SharedDtor();
}

void MsgsAllInfo_Data::SharedDtor() {
  info_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void MsgsAllInfo_Data::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgsAllInfo_Data::descriptor() {
  protobuf_schema_2etl_2etransport_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2etransport_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MsgsAllInfo_Data& MsgsAllInfo_Data::default_instance() {
  protobuf_schema_2etl_2etransport_2eproto::InitDefaults();
  return *internal_default_instance();
}

MsgsAllInfo_Data* MsgsAllInfo_Data::New(::google::protobuf::Arena* arena) const {
  MsgsAllInfo_Data* n = new MsgsAllInfo_Data;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MsgsAllInfo_Data::Swap(MsgsAllInfo_Data* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MsgsAllInfo_Data::InternalSwap(MsgsAllInfo_Data* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata MsgsAllInfo_Data::GetMetadata() const {
  protobuf_schema_2etl_2etransport_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2etransport_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MsgsAllInfo_Data

// repeated int64 msg_ids = 1;
int MsgsAllInfo_Data::msg_ids_size() const {
  return msg_ids_.size();
}
void MsgsAllInfo_Data::clear_msg_ids() {
  msg_ids_.Clear();
}
::google::protobuf::int64 MsgsAllInfo_Data::msg_ids(int index) const {
  // @@protoc_insertion_point(field_get:mtproto.MsgsAllInfo_Data.msg_ids)
  return msg_ids_.Get(index);
}
void MsgsAllInfo_Data::set_msg_ids(int index, ::google::protobuf::int64 value) {
  msg_ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:mtproto.MsgsAllInfo_Data.msg_ids)
}
void MsgsAllInfo_Data::add_msg_ids(::google::protobuf::int64 value) {
  msg_ids_.Add(value);
  // @@protoc_insertion_point(field_add:mtproto.MsgsAllInfo_Data.msg_ids)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
MsgsAllInfo_Data::msg_ids() const {
  // @@protoc_insertion_point(field_list:mtproto.MsgsAllInfo_Data.msg_ids)
  return msg_ids_;
}
::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
MsgsAllInfo_Data::mutable_msg_ids() {
  // @@protoc_insertion_point(field_mutable_list:mtproto.MsgsAllInfo_Data.msg_ids)
  return &msg_ids_;
}

// string info = 2;
void MsgsAllInfo_Data::clear_info() {
  info_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& MsgsAllInfo_Data::info() const {
  // @@protoc_insertion_point(field_get:mtproto.MsgsAllInfo_Data.info)
  return info_.GetNoArena();
}
void MsgsAllInfo_Data::set_info(const ::std::string& value) {
  
  info_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtproto.MsgsAllInfo_Data.info)
}
#if LANG_CXX11
void MsgsAllInfo_Data::set_info(::std::string&& value) {
  
  info_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mtproto.MsgsAllInfo_Data.info)
}
#endif
void MsgsAllInfo_Data::set_info(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  info_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtproto.MsgsAllInfo_Data.info)
}
void MsgsAllInfo_Data::set_info(const char* value, size_t size) {
  
  info_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtproto.MsgsAllInfo_Data.info)
}
::std::string* MsgsAllInfo_Data::mutable_info() {
  
  // @@protoc_insertion_point(field_mutable:mtproto.MsgsAllInfo_Data.info)
  return info_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* MsgsAllInfo_Data::release_info() {
  // @@protoc_insertion_point(field_release:mtproto.MsgsAllInfo_Data.info)
  
  return info_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MsgsAllInfo_Data::set_allocated_info(::std::string* info) {
  if (info != NULL) {
    
  } else {
    
  }
  info_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), info);
  // @@protoc_insertion_point(field_set_allocated:mtproto.MsgsAllInfo_Data.info)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MsgsAllInfo::kConstructorFieldNumber;
const int MsgsAllInfo::kData2FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MsgsAllInfo::MsgsAllInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_schema_2etl_2etransport_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.MsgsAllInfo)
}
MsgsAllInfo::MsgsAllInfo(const MsgsAllInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_data2()) {
    data2_ = new ::mtproto::MsgsAllInfo_Data(*from.data2_);
  } else {
    data2_ = NULL;
  }
  constructor_ = from.constructor_;
  // @@protoc_insertion_point(copy_constructor:mtproto.MsgsAllInfo)
}

void MsgsAllInfo::SharedCtor() {
  ::memset(&data2_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&constructor_) -
      reinterpret_cast<char*>(&data2_)) + sizeof(constructor_));
  _cached_size_ = 0;
}

MsgsAllInfo::~MsgsAllInfo() {
  // @@protoc_insertion_point(destructor:mtproto.MsgsAllInfo)
  SharedDtor();
}

void MsgsAllInfo::SharedDtor() {
  if (this != internal_default_instance()) delete data2_;
}

void MsgsAllInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgsAllInfo::descriptor() {
  protobuf_schema_2etl_2etransport_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2etransport_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MsgsAllInfo& MsgsAllInfo::default_instance() {
  protobuf_schema_2etl_2etransport_2eproto::InitDefaults();
  return *internal_default_instance();
}

MsgsAllInfo* MsgsAllInfo::New(::google::protobuf::Arena* arena) const {
  MsgsAllInfo* n = new MsgsAllInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MsgsAllInfo::Swap(MsgsAllInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MsgsAllInfo::InternalSwap(MsgsAllInfo* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata MsgsAllInfo::GetMetadata() const {
  protobuf_schema_2etl_2etransport_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2etransport_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MsgsAllInfo

// .mtproto.TLConstructor constructor = 1;
void MsgsAllInfo::clear_constructor() {
  constructor_ = 0;
}
::mtproto::TLConstructor MsgsAllInfo::constructor() const {
  // @@protoc_insertion_point(field_get:mtproto.MsgsAllInfo.constructor)
  return static_cast< ::mtproto::TLConstructor >(constructor_);
}
void MsgsAllInfo::set_constructor(::mtproto::TLConstructor value) {
  
  constructor_ = value;
  // @@protoc_insertion_point(field_set:mtproto.MsgsAllInfo.constructor)
}

// .mtproto.MsgsAllInfo_Data data2 = 2;
bool MsgsAllInfo::has_data2() const {
  return this != internal_default_instance() && data2_ != NULL;
}
void MsgsAllInfo::clear_data2() {
  if (GetArenaNoVirtual() == NULL && data2_ != NULL) delete data2_;
  data2_ = NULL;
}
const ::mtproto::MsgsAllInfo_Data& MsgsAllInfo::data2() const {
  const ::mtproto::MsgsAllInfo_Data* p = data2_;
  // @@protoc_insertion_point(field_get:mtproto.MsgsAllInfo.data2)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::MsgsAllInfo_Data*>(
      &::mtproto::_MsgsAllInfo_Data_default_instance_);
}
::mtproto::MsgsAllInfo_Data* MsgsAllInfo::mutable_data2() {
  
  if (data2_ == NULL) {
    data2_ = new ::mtproto::MsgsAllInfo_Data;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.MsgsAllInfo.data2)
  return data2_;
}
::mtproto::MsgsAllInfo_Data* MsgsAllInfo::release_data2() {
  // @@protoc_insertion_point(field_release:mtproto.MsgsAllInfo.data2)
  
  ::mtproto::MsgsAllInfo_Data* temp = data2_;
  data2_ = NULL;
  return temp;
}
void MsgsAllInfo::set_allocated_data2(::mtproto::MsgsAllInfo_Data* data2) {
  delete data2_;
  data2_ = data2;
  if (data2) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.MsgsAllInfo.data2)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TL_msgs_all_info::kData2FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TL_msgs_all_info::TL_msgs_all_info()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_schema_2etl_2etransport_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.TL_msgs_all_info)
}
TL_msgs_all_info::TL_msgs_all_info(const TL_msgs_all_info& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_data2()) {
    data2_ = new ::mtproto::MsgsAllInfo_Data(*from.data2_);
  } else {
    data2_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:mtproto.TL_msgs_all_info)
}

void TL_msgs_all_info::SharedCtor() {
  data2_ = NULL;
  _cached_size_ = 0;
}

TL_msgs_all_info::~TL_msgs_all_info() {
  // @@protoc_insertion_point(destructor:mtproto.TL_msgs_all_info)
  SharedDtor();
}

void TL_msgs_all_info::SharedDtor() {
  if (this != internal_default_instance()) delete data2_;
}

void TL_msgs_all_info::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TL_msgs_all_info::descriptor() {
  protobuf_schema_2etl_2etransport_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2etransport_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TL_msgs_all_info& TL_msgs_all_info::default_instance() {
  protobuf_schema_2etl_2etransport_2eproto::InitDefaults();
  return *internal_default_instance();
}

TL_msgs_all_info* TL_msgs_all_info::New(::google::protobuf::Arena* arena) const {
  TL_msgs_all_info* n = new TL_msgs_all_info;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TL_msgs_all_info::Swap(TL_msgs_all_info* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TL_msgs_all_info::InternalSwap(TL_msgs_all_info* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata TL_msgs_all_info::GetMetadata() const {
  protobuf_schema_2etl_2etransport_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2etransport_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TL_msgs_all_info

// .mtproto.MsgsAllInfo_Data data2 = 2;
bool TL_msgs_all_info::has_data2() const {
  return this != internal_default_instance() && data2_ != NULL;
}
void TL_msgs_all_info::clear_data2() {
  if (GetArenaNoVirtual() == NULL && data2_ != NULL) delete data2_;
  data2_ = NULL;
}
const ::mtproto::MsgsAllInfo_Data& TL_msgs_all_info::data2() const {
  const ::mtproto::MsgsAllInfo_Data* p = data2_;
  // @@protoc_insertion_point(field_get:mtproto.TL_msgs_all_info.data2)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::MsgsAllInfo_Data*>(
      &::mtproto::_MsgsAllInfo_Data_default_instance_);
}
::mtproto::MsgsAllInfo_Data* TL_msgs_all_info::mutable_data2() {
  
  if (data2_ == NULL) {
    data2_ = new ::mtproto::MsgsAllInfo_Data;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_msgs_all_info.data2)
  return data2_;
}
::mtproto::MsgsAllInfo_Data* TL_msgs_all_info::release_data2() {
  // @@protoc_insertion_point(field_release:mtproto.TL_msgs_all_info.data2)
  
  ::mtproto::MsgsAllInfo_Data* temp = data2_;
  data2_ = NULL;
  return temp;
}
void TL_msgs_all_info::set_allocated_data2(::mtproto::MsgsAllInfo_Data* data2) {
  delete data2_;
  data2_ = data2;
  if (data2) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_msgs_all_info.data2)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MsgDetailedInfo_Data::kMsgIdFieldNumber;
const int MsgDetailedInfo_Data::kAnswerMsgIdFieldNumber;
const int MsgDetailedInfo_Data::kBytesFieldNumber;
const int MsgDetailedInfo_Data::kStatusFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MsgDetailedInfo_Data::MsgDetailedInfo_Data()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_schema_2etl_2etransport_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.MsgDetailedInfo_Data)
}
MsgDetailedInfo_Data::MsgDetailedInfo_Data(const MsgDetailedInfo_Data& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&msg_id_, &from.msg_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&status_) -
    reinterpret_cast<char*>(&msg_id_)) + sizeof(status_));
  // @@protoc_insertion_point(copy_constructor:mtproto.MsgDetailedInfo_Data)
}

void MsgDetailedInfo_Data::SharedCtor() {
  ::memset(&msg_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&status_) -
      reinterpret_cast<char*>(&msg_id_)) + sizeof(status_));
  _cached_size_ = 0;
}

MsgDetailedInfo_Data::~MsgDetailedInfo_Data() {
  // @@protoc_insertion_point(destructor:mtproto.MsgDetailedInfo_Data)
  SharedDtor();
}

void MsgDetailedInfo_Data::SharedDtor() {
}

void MsgDetailedInfo_Data::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgDetailedInfo_Data::descriptor() {
  protobuf_schema_2etl_2etransport_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2etransport_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MsgDetailedInfo_Data& MsgDetailedInfo_Data::default_instance() {
  protobuf_schema_2etl_2etransport_2eproto::InitDefaults();
  return *internal_default_instance();
}

MsgDetailedInfo_Data* MsgDetailedInfo_Data::New(::google::protobuf::Arena* arena) const {
  MsgDetailedInfo_Data* n = new MsgDetailedInfo_Data;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MsgDetailedInfo_Data::Swap(MsgDetailedInfo_Data* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MsgDetailedInfo_Data::InternalSwap(MsgDetailedInfo_Data* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata MsgDetailedInfo_Data::GetMetadata() const {
  protobuf_schema_2etl_2etransport_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2etransport_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MsgDetailedInfo_Data

// int64 msg_id = 1;
void MsgDetailedInfo_Data::clear_msg_id() {
  msg_id_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 MsgDetailedInfo_Data::msg_id() const {
  // @@protoc_insertion_point(field_get:mtproto.MsgDetailedInfo_Data.msg_id)
  return msg_id_;
}
void MsgDetailedInfo_Data::set_msg_id(::google::protobuf::int64 value) {
  
  msg_id_ = value;
  // @@protoc_insertion_point(field_set:mtproto.MsgDetailedInfo_Data.msg_id)
}

// int64 answer_msg_id = 2;
void MsgDetailedInfo_Data::clear_answer_msg_id() {
  answer_msg_id_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 MsgDetailedInfo_Data::answer_msg_id() const {
  // @@protoc_insertion_point(field_get:mtproto.MsgDetailedInfo_Data.answer_msg_id)
  return answer_msg_id_;
}
void MsgDetailedInfo_Data::set_answer_msg_id(::google::protobuf::int64 value) {
  
  answer_msg_id_ = value;
  // @@protoc_insertion_point(field_set:mtproto.MsgDetailedInfo_Data.answer_msg_id)
}

// int32 bytes = 3;
void MsgDetailedInfo_Data::clear_bytes() {
  bytes_ = 0;
}
::google::protobuf::int32 MsgDetailedInfo_Data::bytes() const {
  // @@protoc_insertion_point(field_get:mtproto.MsgDetailedInfo_Data.bytes)
  return bytes_;
}
void MsgDetailedInfo_Data::set_bytes(::google::protobuf::int32 value) {
  
  bytes_ = value;
  // @@protoc_insertion_point(field_set:mtproto.MsgDetailedInfo_Data.bytes)
}

// int32 status = 4;
void MsgDetailedInfo_Data::clear_status() {
  status_ = 0;
}
::google::protobuf::int32 MsgDetailedInfo_Data::status() const {
  // @@protoc_insertion_point(field_get:mtproto.MsgDetailedInfo_Data.status)
  return status_;
}
void MsgDetailedInfo_Data::set_status(::google::protobuf::int32 value) {
  
  status_ = value;
  // @@protoc_insertion_point(field_set:mtproto.MsgDetailedInfo_Data.status)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MsgDetailedInfo::kConstructorFieldNumber;
const int MsgDetailedInfo::kData2FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MsgDetailedInfo::MsgDetailedInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_schema_2etl_2etransport_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.MsgDetailedInfo)
}
MsgDetailedInfo::MsgDetailedInfo(const MsgDetailedInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_data2()) {
    data2_ = new ::mtproto::MsgDetailedInfo_Data(*from.data2_);
  } else {
    data2_ = NULL;
  }
  constructor_ = from.constructor_;
  // @@protoc_insertion_point(copy_constructor:mtproto.MsgDetailedInfo)
}

void MsgDetailedInfo::SharedCtor() {
  ::memset(&data2_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&constructor_) -
      reinterpret_cast<char*>(&data2_)) + sizeof(constructor_));
  _cached_size_ = 0;
}

MsgDetailedInfo::~MsgDetailedInfo() {
  // @@protoc_insertion_point(destructor:mtproto.MsgDetailedInfo)
  SharedDtor();
}

void MsgDetailedInfo::SharedDtor() {
  if (this != internal_default_instance()) delete data2_;
}

void MsgDetailedInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgDetailedInfo::descriptor() {
  protobuf_schema_2etl_2etransport_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2etransport_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MsgDetailedInfo& MsgDetailedInfo::default_instance() {
  protobuf_schema_2etl_2etransport_2eproto::InitDefaults();
  return *internal_default_instance();
}

MsgDetailedInfo* MsgDetailedInfo::New(::google::protobuf::Arena* arena) const {
  MsgDetailedInfo* n = new MsgDetailedInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MsgDetailedInfo::Swap(MsgDetailedInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MsgDetailedInfo::InternalSwap(MsgDetailedInfo* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata MsgDetailedInfo::GetMetadata() const {
  protobuf_schema_2etl_2etransport_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2etransport_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MsgDetailedInfo

// .mtproto.TLConstructor constructor = 1;
void MsgDetailedInfo::clear_constructor() {
  constructor_ = 0;
}
::mtproto::TLConstructor MsgDetailedInfo::constructor() const {
  // @@protoc_insertion_point(field_get:mtproto.MsgDetailedInfo.constructor)
  return static_cast< ::mtproto::TLConstructor >(constructor_);
}
void MsgDetailedInfo::set_constructor(::mtproto::TLConstructor value) {
  
  constructor_ = value;
  // @@protoc_insertion_point(field_set:mtproto.MsgDetailedInfo.constructor)
}

// .mtproto.MsgDetailedInfo_Data data2 = 2;
bool MsgDetailedInfo::has_data2() const {
  return this != internal_default_instance() && data2_ != NULL;
}
void MsgDetailedInfo::clear_data2() {
  if (GetArenaNoVirtual() == NULL && data2_ != NULL) delete data2_;
  data2_ = NULL;
}
const ::mtproto::MsgDetailedInfo_Data& MsgDetailedInfo::data2() const {
  const ::mtproto::MsgDetailedInfo_Data* p = data2_;
  // @@protoc_insertion_point(field_get:mtproto.MsgDetailedInfo.data2)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::MsgDetailedInfo_Data*>(
      &::mtproto::_MsgDetailedInfo_Data_default_instance_);
}
::mtproto::MsgDetailedInfo_Data* MsgDetailedInfo::mutable_data2() {
  
  if (data2_ == NULL) {
    data2_ = new ::mtproto::MsgDetailedInfo_Data;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.MsgDetailedInfo.data2)
  return data2_;
}
::mtproto::MsgDetailedInfo_Data* MsgDetailedInfo::release_data2() {
  // @@protoc_insertion_point(field_release:mtproto.MsgDetailedInfo.data2)
  
  ::mtproto::MsgDetailedInfo_Data* temp = data2_;
  data2_ = NULL;
  return temp;
}
void MsgDetailedInfo::set_allocated_data2(::mtproto::MsgDetailedInfo_Data* data2) {
  delete data2_;
  data2_ = data2;
  if (data2) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.MsgDetailedInfo.data2)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TL_msg_detailed_info::kData2FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TL_msg_detailed_info::TL_msg_detailed_info()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_schema_2etl_2etransport_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.TL_msg_detailed_info)
}
TL_msg_detailed_info::TL_msg_detailed_info(const TL_msg_detailed_info& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_data2()) {
    data2_ = new ::mtproto::MsgDetailedInfo_Data(*from.data2_);
  } else {
    data2_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:mtproto.TL_msg_detailed_info)
}

void TL_msg_detailed_info::SharedCtor() {
  data2_ = NULL;
  _cached_size_ = 0;
}

TL_msg_detailed_info::~TL_msg_detailed_info() {
  // @@protoc_insertion_point(destructor:mtproto.TL_msg_detailed_info)
  SharedDtor();
}

void TL_msg_detailed_info::SharedDtor() {
  if (this != internal_default_instance()) delete data2_;
}

void TL_msg_detailed_info::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TL_msg_detailed_info::descriptor() {
  protobuf_schema_2etl_2etransport_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2etransport_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TL_msg_detailed_info& TL_msg_detailed_info::default_instance() {
  protobuf_schema_2etl_2etransport_2eproto::InitDefaults();
  return *internal_default_instance();
}

TL_msg_detailed_info* TL_msg_detailed_info::New(::google::protobuf::Arena* arena) const {
  TL_msg_detailed_info* n = new TL_msg_detailed_info;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TL_msg_detailed_info::Swap(TL_msg_detailed_info* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TL_msg_detailed_info::InternalSwap(TL_msg_detailed_info* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata TL_msg_detailed_info::GetMetadata() const {
  protobuf_schema_2etl_2etransport_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2etransport_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TL_msg_detailed_info

// .mtproto.MsgDetailedInfo_Data data2 = 2;
bool TL_msg_detailed_info::has_data2() const {
  return this != internal_default_instance() && data2_ != NULL;
}
void TL_msg_detailed_info::clear_data2() {
  if (GetArenaNoVirtual() == NULL && data2_ != NULL) delete data2_;
  data2_ = NULL;
}
const ::mtproto::MsgDetailedInfo_Data& TL_msg_detailed_info::data2() const {
  const ::mtproto::MsgDetailedInfo_Data* p = data2_;
  // @@protoc_insertion_point(field_get:mtproto.TL_msg_detailed_info.data2)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::MsgDetailedInfo_Data*>(
      &::mtproto::_MsgDetailedInfo_Data_default_instance_);
}
::mtproto::MsgDetailedInfo_Data* TL_msg_detailed_info::mutable_data2() {
  
  if (data2_ == NULL) {
    data2_ = new ::mtproto::MsgDetailedInfo_Data;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_msg_detailed_info.data2)
  return data2_;
}
::mtproto::MsgDetailedInfo_Data* TL_msg_detailed_info::release_data2() {
  // @@protoc_insertion_point(field_release:mtproto.TL_msg_detailed_info.data2)
  
  ::mtproto::MsgDetailedInfo_Data* temp = data2_;
  data2_ = NULL;
  return temp;
}
void TL_msg_detailed_info::set_allocated_data2(::mtproto::MsgDetailedInfo_Data* data2) {
  delete data2_;
  data2_ = data2;
  if (data2) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_msg_detailed_info.data2)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TL_msg_new_detailed_info::kData2FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TL_msg_new_detailed_info::TL_msg_new_detailed_info()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_schema_2etl_2etransport_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.TL_msg_new_detailed_info)
}
TL_msg_new_detailed_info::TL_msg_new_detailed_info(const TL_msg_new_detailed_info& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_data2()) {
    data2_ = new ::mtproto::MsgDetailedInfo_Data(*from.data2_);
  } else {
    data2_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:mtproto.TL_msg_new_detailed_info)
}

void TL_msg_new_detailed_info::SharedCtor() {
  data2_ = NULL;
  _cached_size_ = 0;
}

TL_msg_new_detailed_info::~TL_msg_new_detailed_info() {
  // @@protoc_insertion_point(destructor:mtproto.TL_msg_new_detailed_info)
  SharedDtor();
}

void TL_msg_new_detailed_info::SharedDtor() {
  if (this != internal_default_instance()) delete data2_;
}

void TL_msg_new_detailed_info::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TL_msg_new_detailed_info::descriptor() {
  protobuf_schema_2etl_2etransport_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2etransport_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TL_msg_new_detailed_info& TL_msg_new_detailed_info::default_instance() {
  protobuf_schema_2etl_2etransport_2eproto::InitDefaults();
  return *internal_default_instance();
}

TL_msg_new_detailed_info* TL_msg_new_detailed_info::New(::google::protobuf::Arena* arena) const {
  TL_msg_new_detailed_info* n = new TL_msg_new_detailed_info;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TL_msg_new_detailed_info::Swap(TL_msg_new_detailed_info* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TL_msg_new_detailed_info::InternalSwap(TL_msg_new_detailed_info* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata TL_msg_new_detailed_info::GetMetadata() const {
  protobuf_schema_2etl_2etransport_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2etransport_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TL_msg_new_detailed_info

// .mtproto.MsgDetailedInfo_Data data2 = 2;
bool TL_msg_new_detailed_info::has_data2() const {
  return this != internal_default_instance() && data2_ != NULL;
}
void TL_msg_new_detailed_info::clear_data2() {
  if (GetArenaNoVirtual() == NULL && data2_ != NULL) delete data2_;
  data2_ = NULL;
}
const ::mtproto::MsgDetailedInfo_Data& TL_msg_new_detailed_info::data2() const {
  const ::mtproto::MsgDetailedInfo_Data* p = data2_;
  // @@protoc_insertion_point(field_get:mtproto.TL_msg_new_detailed_info.data2)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::MsgDetailedInfo_Data*>(
      &::mtproto::_MsgDetailedInfo_Data_default_instance_);
}
::mtproto::MsgDetailedInfo_Data* TL_msg_new_detailed_info::mutable_data2() {
  
  if (data2_ == NULL) {
    data2_ = new ::mtproto::MsgDetailedInfo_Data;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_msg_new_detailed_info.data2)
  return data2_;
}
::mtproto::MsgDetailedInfo_Data* TL_msg_new_detailed_info::release_data2() {
  // @@protoc_insertion_point(field_release:mtproto.TL_msg_new_detailed_info.data2)
  
  ::mtproto::MsgDetailedInfo_Data* temp = data2_;
  data2_ = NULL;
  return temp;
}
void TL_msg_new_detailed_info::set_allocated_data2(::mtproto::MsgDetailedInfo_Data* data2) {
  delete data2_;
  data2_ = data2;
  if (data2) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_msg_new_detailed_info.data2)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AccessPointRule_Data::kPhonePrefixRulesFieldNumber;
const int AccessPointRule_Data::kDcIdFieldNumber;
const int AccessPointRule_Data::kIpsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AccessPointRule_Data::AccessPointRule_Data()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_schema_2etl_2etransport_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.AccessPointRule_Data)
}
AccessPointRule_Data::AccessPointRule_Data(const AccessPointRule_Data& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      ips_(from.ips_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  phone_prefix_rules_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.phone_prefix_rules().size() > 0) {
    phone_prefix_rules_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.phone_prefix_rules_);
  }
  dc_id_ = from.dc_id_;
  // @@protoc_insertion_point(copy_constructor:mtproto.AccessPointRule_Data)
}

void AccessPointRule_Data::SharedCtor() {
  phone_prefix_rules_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  dc_id_ = 0;
  _cached_size_ = 0;
}

AccessPointRule_Data::~AccessPointRule_Data() {
  // @@protoc_insertion_point(destructor:mtproto.AccessPointRule_Data)
  SharedDtor();
}

void AccessPointRule_Data::SharedDtor() {
  phone_prefix_rules_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void AccessPointRule_Data::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AccessPointRule_Data::descriptor() {
  protobuf_schema_2etl_2etransport_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2etransport_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AccessPointRule_Data& AccessPointRule_Data::default_instance() {
  protobuf_schema_2etl_2etransport_2eproto::InitDefaults();
  return *internal_default_instance();
}

AccessPointRule_Data* AccessPointRule_Data::New(::google::protobuf::Arena* arena) const {
  AccessPointRule_Data* n = new AccessPointRule_Data;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AccessPointRule_Data::Swap(AccessPointRule_Data* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AccessPointRule_Data::InternalSwap(AccessPointRule_Data* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata AccessPointRule_Data::GetMetadata() const {
  protobuf_schema_2etl_2etransport_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2etransport_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AccessPointRule_Data

// string phone_prefix_rules = 1;
void AccessPointRule_Data::clear_phone_prefix_rules() {
  phone_prefix_rules_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& AccessPointRule_Data::phone_prefix_rules() const {
  // @@protoc_insertion_point(field_get:mtproto.AccessPointRule_Data.phone_prefix_rules)
  return phone_prefix_rules_.GetNoArena();
}
void AccessPointRule_Data::set_phone_prefix_rules(const ::std::string& value) {
  
  phone_prefix_rules_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtproto.AccessPointRule_Data.phone_prefix_rules)
}
#if LANG_CXX11
void AccessPointRule_Data::set_phone_prefix_rules(::std::string&& value) {
  
  phone_prefix_rules_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mtproto.AccessPointRule_Data.phone_prefix_rules)
}
#endif
void AccessPointRule_Data::set_phone_prefix_rules(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  phone_prefix_rules_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtproto.AccessPointRule_Data.phone_prefix_rules)
}
void AccessPointRule_Data::set_phone_prefix_rules(const char* value, size_t size) {
  
  phone_prefix_rules_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtproto.AccessPointRule_Data.phone_prefix_rules)
}
::std::string* AccessPointRule_Data::mutable_phone_prefix_rules() {
  
  // @@protoc_insertion_point(field_mutable:mtproto.AccessPointRule_Data.phone_prefix_rules)
  return phone_prefix_rules_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AccessPointRule_Data::release_phone_prefix_rules() {
  // @@protoc_insertion_point(field_release:mtproto.AccessPointRule_Data.phone_prefix_rules)
  
  return phone_prefix_rules_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AccessPointRule_Data::set_allocated_phone_prefix_rules(::std::string* phone_prefix_rules) {
  if (phone_prefix_rules != NULL) {
    
  } else {
    
  }
  phone_prefix_rules_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), phone_prefix_rules);
  // @@protoc_insertion_point(field_set_allocated:mtproto.AccessPointRule_Data.phone_prefix_rules)
}

// int32 dc_id = 2;
void AccessPointRule_Data::clear_dc_id() {
  dc_id_ = 0;
}
::google::protobuf::int32 AccessPointRule_Data::dc_id() const {
  // @@protoc_insertion_point(field_get:mtproto.AccessPointRule_Data.dc_id)
  return dc_id_;
}
void AccessPointRule_Data::set_dc_id(::google::protobuf::int32 value) {
  
  dc_id_ = value;
  // @@protoc_insertion_point(field_set:mtproto.AccessPointRule_Data.dc_id)
}

// repeated .mtproto.IpPort ips = 3;
int AccessPointRule_Data::ips_size() const {
  return ips_.size();
}
void AccessPointRule_Data::clear_ips() {
  ips_.Clear();
}
const ::mtproto::IpPort& AccessPointRule_Data::ips(int index) const {
  // @@protoc_insertion_point(field_get:mtproto.AccessPointRule_Data.ips)
  return ips_.Get(index);
}
::mtproto::IpPort* AccessPointRule_Data::mutable_ips(int index) {
  // @@protoc_insertion_point(field_mutable:mtproto.AccessPointRule_Data.ips)
  return ips_.Mutable(index);
}
::mtproto::IpPort* AccessPointRule_Data::add_ips() {
  // @@protoc_insertion_point(field_add:mtproto.AccessPointRule_Data.ips)
  return ips_.Add();
}
::google::protobuf::RepeatedPtrField< ::mtproto::IpPort >*
AccessPointRule_Data::mutable_ips() {
  // @@protoc_insertion_point(field_mutable_list:mtproto.AccessPointRule_Data.ips)
  return &ips_;
}
const ::google::protobuf::RepeatedPtrField< ::mtproto::IpPort >&
AccessPointRule_Data::ips() const {
  // @@protoc_insertion_point(field_list:mtproto.AccessPointRule_Data.ips)
  return ips_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AccessPointRule::kConstructorFieldNumber;
const int AccessPointRule::kData2FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AccessPointRule::AccessPointRule()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_schema_2etl_2etransport_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.AccessPointRule)
}
AccessPointRule::AccessPointRule(const AccessPointRule& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_data2()) {
    data2_ = new ::mtproto::AccessPointRule_Data(*from.data2_);
  } else {
    data2_ = NULL;
  }
  constructor_ = from.constructor_;
  // @@protoc_insertion_point(copy_constructor:mtproto.AccessPointRule)
}

void AccessPointRule::SharedCtor() {
  ::memset(&data2_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&constructor_) -
      reinterpret_cast<char*>(&data2_)) + sizeof(constructor_));
  _cached_size_ = 0;
}

AccessPointRule::~AccessPointRule() {
  // @@protoc_insertion_point(destructor:mtproto.AccessPointRule)
  SharedDtor();
}

void AccessPointRule::SharedDtor() {
  if (this != internal_default_instance()) delete data2_;
}

void AccessPointRule::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AccessPointRule::descriptor() {
  protobuf_schema_2etl_2etransport_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2etransport_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AccessPointRule& AccessPointRule::default_instance() {
  protobuf_schema_2etl_2etransport_2eproto::InitDefaults();
  return *internal_default_instance();
}

AccessPointRule* AccessPointRule::New(::google::protobuf::Arena* arena) const {
  AccessPointRule* n = new AccessPointRule;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AccessPointRule::Swap(AccessPointRule* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AccessPointRule::InternalSwap(AccessPointRule* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata AccessPointRule::GetMetadata() const {
  protobuf_schema_2etl_2etransport_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2etransport_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AccessPointRule

// .mtproto.TLConstructor constructor = 1;
void AccessPointRule::clear_constructor() {
  constructor_ = 0;
}
::mtproto::TLConstructor AccessPointRule::constructor() const {
  // @@protoc_insertion_point(field_get:mtproto.AccessPointRule.constructor)
  return static_cast< ::mtproto::TLConstructor >(constructor_);
}
void AccessPointRule::set_constructor(::mtproto::TLConstructor value) {
  
  constructor_ = value;
  // @@protoc_insertion_point(field_set:mtproto.AccessPointRule.constructor)
}

// .mtproto.AccessPointRule_Data data2 = 2;
bool AccessPointRule::has_data2() const {
  return this != internal_default_instance() && data2_ != NULL;
}
void AccessPointRule::clear_data2() {
  if (GetArenaNoVirtual() == NULL && data2_ != NULL) delete data2_;
  data2_ = NULL;
}
const ::mtproto::AccessPointRule_Data& AccessPointRule::data2() const {
  const ::mtproto::AccessPointRule_Data* p = data2_;
  // @@protoc_insertion_point(field_get:mtproto.AccessPointRule.data2)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::AccessPointRule_Data*>(
      &::mtproto::_AccessPointRule_Data_default_instance_);
}
::mtproto::AccessPointRule_Data* AccessPointRule::mutable_data2() {
  
  if (data2_ == NULL) {
    data2_ = new ::mtproto::AccessPointRule_Data;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.AccessPointRule.data2)
  return data2_;
}
::mtproto::AccessPointRule_Data* AccessPointRule::release_data2() {
  // @@protoc_insertion_point(field_release:mtproto.AccessPointRule.data2)
  
  ::mtproto::AccessPointRule_Data* temp = data2_;
  data2_ = NULL;
  return temp;
}
void AccessPointRule::set_allocated_data2(::mtproto::AccessPointRule_Data* data2) {
  delete data2_;
  data2_ = data2;
  if (data2) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.AccessPointRule.data2)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TL_accessPointRule::kData2FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TL_accessPointRule::TL_accessPointRule()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_schema_2etl_2etransport_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.TL_accessPointRule)
}
TL_accessPointRule::TL_accessPointRule(const TL_accessPointRule& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_data2()) {
    data2_ = new ::mtproto::AccessPointRule_Data(*from.data2_);
  } else {
    data2_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:mtproto.TL_accessPointRule)
}

void TL_accessPointRule::SharedCtor() {
  data2_ = NULL;
  _cached_size_ = 0;
}

TL_accessPointRule::~TL_accessPointRule() {
  // @@protoc_insertion_point(destructor:mtproto.TL_accessPointRule)
  SharedDtor();
}

void TL_accessPointRule::SharedDtor() {
  if (this != internal_default_instance()) delete data2_;
}

void TL_accessPointRule::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TL_accessPointRule::descriptor() {
  protobuf_schema_2etl_2etransport_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2etransport_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TL_accessPointRule& TL_accessPointRule::default_instance() {
  protobuf_schema_2etl_2etransport_2eproto::InitDefaults();
  return *internal_default_instance();
}

TL_accessPointRule* TL_accessPointRule::New(::google::protobuf::Arena* arena) const {
  TL_accessPointRule* n = new TL_accessPointRule;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TL_accessPointRule::Swap(TL_accessPointRule* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TL_accessPointRule::InternalSwap(TL_accessPointRule* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata TL_accessPointRule::GetMetadata() const {
  protobuf_schema_2etl_2etransport_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2etransport_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TL_accessPointRule

// .mtproto.AccessPointRule_Data data2 = 2;
bool TL_accessPointRule::has_data2() const {
  return this != internal_default_instance() && data2_ != NULL;
}
void TL_accessPointRule::clear_data2() {
  if (GetArenaNoVirtual() == NULL && data2_ != NULL) delete data2_;
  data2_ = NULL;
}
const ::mtproto::AccessPointRule_Data& TL_accessPointRule::data2() const {
  const ::mtproto::AccessPointRule_Data* p = data2_;
  // @@protoc_insertion_point(field_get:mtproto.TL_accessPointRule.data2)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::AccessPointRule_Data*>(
      &::mtproto::_AccessPointRule_Data_default_instance_);
}
::mtproto::AccessPointRule_Data* TL_accessPointRule::mutable_data2() {
  
  if (data2_ == NULL) {
    data2_ = new ::mtproto::AccessPointRule_Data;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_accessPointRule.data2)
  return data2_;
}
::mtproto::AccessPointRule_Data* TL_accessPointRule::release_data2() {
  // @@protoc_insertion_point(field_release:mtproto.TL_accessPointRule.data2)
  
  ::mtproto::AccessPointRule_Data* temp = data2_;
  data2_ = NULL;
  return temp;
}
void TL_accessPointRule::set_allocated_data2(::mtproto::AccessPointRule_Data* data2) {
  delete data2_;
  data2_ = data2;
  if (data2) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_accessPointRule.data2)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RpcDropAnswer_Data::kMsgIdFieldNumber;
const int RpcDropAnswer_Data::kSeqNoFieldNumber;
const int RpcDropAnswer_Data::kBytesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RpcDropAnswer_Data::RpcDropAnswer_Data()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_schema_2etl_2etransport_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.RpcDropAnswer_Data)
}
RpcDropAnswer_Data::RpcDropAnswer_Data(const RpcDropAnswer_Data& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&msg_id_, &from.msg_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&bytes_) -
    reinterpret_cast<char*>(&msg_id_)) + sizeof(bytes_));
  // @@protoc_insertion_point(copy_constructor:mtproto.RpcDropAnswer_Data)
}

void RpcDropAnswer_Data::SharedCtor() {
  ::memset(&msg_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&bytes_) -
      reinterpret_cast<char*>(&msg_id_)) + sizeof(bytes_));
  _cached_size_ = 0;
}

RpcDropAnswer_Data::~RpcDropAnswer_Data() {
  // @@protoc_insertion_point(destructor:mtproto.RpcDropAnswer_Data)
  SharedDtor();
}

void RpcDropAnswer_Data::SharedDtor() {
}

void RpcDropAnswer_Data::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RpcDropAnswer_Data::descriptor() {
  protobuf_schema_2etl_2etransport_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2etransport_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RpcDropAnswer_Data& RpcDropAnswer_Data::default_instance() {
  protobuf_schema_2etl_2etransport_2eproto::InitDefaults();
  return *internal_default_instance();
}

RpcDropAnswer_Data* RpcDropAnswer_Data::New(::google::protobuf::Arena* arena) const {
  RpcDropAnswer_Data* n = new RpcDropAnswer_Data;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RpcDropAnswer_Data::Swap(RpcDropAnswer_Data* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RpcDropAnswer_Data::InternalSwap(RpcDropAnswer_Data* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata RpcDropAnswer_Data::GetMetadata() const {
  protobuf_schema_2etl_2etransport_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2etransport_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RpcDropAnswer_Data

// int64 msg_id = 1;
void RpcDropAnswer_Data::clear_msg_id() {
  msg_id_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 RpcDropAnswer_Data::msg_id() const {
  // @@protoc_insertion_point(field_get:mtproto.RpcDropAnswer_Data.msg_id)
  return msg_id_;
}
void RpcDropAnswer_Data::set_msg_id(::google::protobuf::int64 value) {
  
  msg_id_ = value;
  // @@protoc_insertion_point(field_set:mtproto.RpcDropAnswer_Data.msg_id)
}

// int32 seq_no = 2;
void RpcDropAnswer_Data::clear_seq_no() {
  seq_no_ = 0;
}
::google::protobuf::int32 RpcDropAnswer_Data::seq_no() const {
  // @@protoc_insertion_point(field_get:mtproto.RpcDropAnswer_Data.seq_no)
  return seq_no_;
}
void RpcDropAnswer_Data::set_seq_no(::google::protobuf::int32 value) {
  
  seq_no_ = value;
  // @@protoc_insertion_point(field_set:mtproto.RpcDropAnswer_Data.seq_no)
}

// int32 bytes = 3;
void RpcDropAnswer_Data::clear_bytes() {
  bytes_ = 0;
}
::google::protobuf::int32 RpcDropAnswer_Data::bytes() const {
  // @@protoc_insertion_point(field_get:mtproto.RpcDropAnswer_Data.bytes)
  return bytes_;
}
void RpcDropAnswer_Data::set_bytes(::google::protobuf::int32 value) {
  
  bytes_ = value;
  // @@protoc_insertion_point(field_set:mtproto.RpcDropAnswer_Data.bytes)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RpcDropAnswer::kConstructorFieldNumber;
const int RpcDropAnswer::kData2FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RpcDropAnswer::RpcDropAnswer()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_schema_2etl_2etransport_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.RpcDropAnswer)
}
RpcDropAnswer::RpcDropAnswer(const RpcDropAnswer& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_data2()) {
    data2_ = new ::mtproto::RpcDropAnswer_Data(*from.data2_);
  } else {
    data2_ = NULL;
  }
  constructor_ = from.constructor_;
  // @@protoc_insertion_point(copy_constructor:mtproto.RpcDropAnswer)
}

void RpcDropAnswer::SharedCtor() {
  ::memset(&data2_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&constructor_) -
      reinterpret_cast<char*>(&data2_)) + sizeof(constructor_));
  _cached_size_ = 0;
}

RpcDropAnswer::~RpcDropAnswer() {
  // @@protoc_insertion_point(destructor:mtproto.RpcDropAnswer)
  SharedDtor();
}

void RpcDropAnswer::SharedDtor() {
  if (this != internal_default_instance()) delete data2_;
}

void RpcDropAnswer::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RpcDropAnswer::descriptor() {
  protobuf_schema_2etl_2etransport_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2etransport_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RpcDropAnswer& RpcDropAnswer::default_instance() {
  protobuf_schema_2etl_2etransport_2eproto::InitDefaults();
  return *internal_default_instance();
}

RpcDropAnswer* RpcDropAnswer::New(::google::protobuf::Arena* arena) const {
  RpcDropAnswer* n = new RpcDropAnswer;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RpcDropAnswer::Swap(RpcDropAnswer* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RpcDropAnswer::InternalSwap(RpcDropAnswer* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata RpcDropAnswer::GetMetadata() const {
  protobuf_schema_2etl_2etransport_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2etransport_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RpcDropAnswer

// .mtproto.TLConstructor constructor = 1;
void RpcDropAnswer::clear_constructor() {
  constructor_ = 0;
}
::mtproto::TLConstructor RpcDropAnswer::constructor() const {
  // @@protoc_insertion_point(field_get:mtproto.RpcDropAnswer.constructor)
  return static_cast< ::mtproto::TLConstructor >(constructor_);
}
void RpcDropAnswer::set_constructor(::mtproto::TLConstructor value) {
  
  constructor_ = value;
  // @@protoc_insertion_point(field_set:mtproto.RpcDropAnswer.constructor)
}

// .mtproto.RpcDropAnswer_Data data2 = 2;
bool RpcDropAnswer::has_data2() const {
  return this != internal_default_instance() && data2_ != NULL;
}
void RpcDropAnswer::clear_data2() {
  if (GetArenaNoVirtual() == NULL && data2_ != NULL) delete data2_;
  data2_ = NULL;
}
const ::mtproto::RpcDropAnswer_Data& RpcDropAnswer::data2() const {
  const ::mtproto::RpcDropAnswer_Data* p = data2_;
  // @@protoc_insertion_point(field_get:mtproto.RpcDropAnswer.data2)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::RpcDropAnswer_Data*>(
      &::mtproto::_RpcDropAnswer_Data_default_instance_);
}
::mtproto::RpcDropAnswer_Data* RpcDropAnswer::mutable_data2() {
  
  if (data2_ == NULL) {
    data2_ = new ::mtproto::RpcDropAnswer_Data;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.RpcDropAnswer.data2)
  return data2_;
}
::mtproto::RpcDropAnswer_Data* RpcDropAnswer::release_data2() {
  // @@protoc_insertion_point(field_release:mtproto.RpcDropAnswer.data2)
  
  ::mtproto::RpcDropAnswer_Data* temp = data2_;
  data2_ = NULL;
  return temp;
}
void RpcDropAnswer::set_allocated_data2(::mtproto::RpcDropAnswer_Data* data2) {
  delete data2_;
  data2_ = data2;
  if (data2) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.RpcDropAnswer.data2)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TL_rpc_answer_unknown::kData2FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TL_rpc_answer_unknown::TL_rpc_answer_unknown()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_schema_2etl_2etransport_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.TL_rpc_answer_unknown)
}
TL_rpc_answer_unknown::TL_rpc_answer_unknown(const TL_rpc_answer_unknown& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_data2()) {
    data2_ = new ::mtproto::RpcDropAnswer_Data(*from.data2_);
  } else {
    data2_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:mtproto.TL_rpc_answer_unknown)
}

void TL_rpc_answer_unknown::SharedCtor() {
  data2_ = NULL;
  _cached_size_ = 0;
}

TL_rpc_answer_unknown::~TL_rpc_answer_unknown() {
  // @@protoc_insertion_point(destructor:mtproto.TL_rpc_answer_unknown)
  SharedDtor();
}

void TL_rpc_answer_unknown::SharedDtor() {
  if (this != internal_default_instance()) delete data2_;
}

void TL_rpc_answer_unknown::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TL_rpc_answer_unknown::descriptor() {
  protobuf_schema_2etl_2etransport_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2etransport_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TL_rpc_answer_unknown& TL_rpc_answer_unknown::default_instance() {
  protobuf_schema_2etl_2etransport_2eproto::InitDefaults();
  return *internal_default_instance();
}

TL_rpc_answer_unknown* TL_rpc_answer_unknown::New(::google::protobuf::Arena* arena) const {
  TL_rpc_answer_unknown* n = new TL_rpc_answer_unknown;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TL_rpc_answer_unknown::Swap(TL_rpc_answer_unknown* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TL_rpc_answer_unknown::InternalSwap(TL_rpc_answer_unknown* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata TL_rpc_answer_unknown::GetMetadata() const {
  protobuf_schema_2etl_2etransport_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2etransport_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TL_rpc_answer_unknown

// .mtproto.RpcDropAnswer_Data data2 = 2;
bool TL_rpc_answer_unknown::has_data2() const {
  return this != internal_default_instance() && data2_ != NULL;
}
void TL_rpc_answer_unknown::clear_data2() {
  if (GetArenaNoVirtual() == NULL && data2_ != NULL) delete data2_;
  data2_ = NULL;
}
const ::mtproto::RpcDropAnswer_Data& TL_rpc_answer_unknown::data2() const {
  const ::mtproto::RpcDropAnswer_Data* p = data2_;
  // @@protoc_insertion_point(field_get:mtproto.TL_rpc_answer_unknown.data2)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::RpcDropAnswer_Data*>(
      &::mtproto::_RpcDropAnswer_Data_default_instance_);
}
::mtproto::RpcDropAnswer_Data* TL_rpc_answer_unknown::mutable_data2() {
  
  if (data2_ == NULL) {
    data2_ = new ::mtproto::RpcDropAnswer_Data;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_rpc_answer_unknown.data2)
  return data2_;
}
::mtproto::RpcDropAnswer_Data* TL_rpc_answer_unknown::release_data2() {
  // @@protoc_insertion_point(field_release:mtproto.TL_rpc_answer_unknown.data2)
  
  ::mtproto::RpcDropAnswer_Data* temp = data2_;
  data2_ = NULL;
  return temp;
}
void TL_rpc_answer_unknown::set_allocated_data2(::mtproto::RpcDropAnswer_Data* data2) {
  delete data2_;
  data2_ = data2;
  if (data2) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_rpc_answer_unknown.data2)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TL_rpc_answer_dropped_running::kData2FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TL_rpc_answer_dropped_running::TL_rpc_answer_dropped_running()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_schema_2etl_2etransport_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.TL_rpc_answer_dropped_running)
}
TL_rpc_answer_dropped_running::TL_rpc_answer_dropped_running(const TL_rpc_answer_dropped_running& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_data2()) {
    data2_ = new ::mtproto::RpcDropAnswer_Data(*from.data2_);
  } else {
    data2_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:mtproto.TL_rpc_answer_dropped_running)
}

void TL_rpc_answer_dropped_running::SharedCtor() {
  data2_ = NULL;
  _cached_size_ = 0;
}

TL_rpc_answer_dropped_running::~TL_rpc_answer_dropped_running() {
  // @@protoc_insertion_point(destructor:mtproto.TL_rpc_answer_dropped_running)
  SharedDtor();
}

void TL_rpc_answer_dropped_running::SharedDtor() {
  if (this != internal_default_instance()) delete data2_;
}

void TL_rpc_answer_dropped_running::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TL_rpc_answer_dropped_running::descriptor() {
  protobuf_schema_2etl_2etransport_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2etransport_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TL_rpc_answer_dropped_running& TL_rpc_answer_dropped_running::default_instance() {
  protobuf_schema_2etl_2etransport_2eproto::InitDefaults();
  return *internal_default_instance();
}

TL_rpc_answer_dropped_running* TL_rpc_answer_dropped_running::New(::google::protobuf::Arena* arena) const {
  TL_rpc_answer_dropped_running* n = new TL_rpc_answer_dropped_running;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TL_rpc_answer_dropped_running::Swap(TL_rpc_answer_dropped_running* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TL_rpc_answer_dropped_running::InternalSwap(TL_rpc_answer_dropped_running* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata TL_rpc_answer_dropped_running::GetMetadata() const {
  protobuf_schema_2etl_2etransport_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2etransport_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TL_rpc_answer_dropped_running

// .mtproto.RpcDropAnswer_Data data2 = 2;
bool TL_rpc_answer_dropped_running::has_data2() const {
  return this != internal_default_instance() && data2_ != NULL;
}
void TL_rpc_answer_dropped_running::clear_data2() {
  if (GetArenaNoVirtual() == NULL && data2_ != NULL) delete data2_;
  data2_ = NULL;
}
const ::mtproto::RpcDropAnswer_Data& TL_rpc_answer_dropped_running::data2() const {
  const ::mtproto::RpcDropAnswer_Data* p = data2_;
  // @@protoc_insertion_point(field_get:mtproto.TL_rpc_answer_dropped_running.data2)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::RpcDropAnswer_Data*>(
      &::mtproto::_RpcDropAnswer_Data_default_instance_);
}
::mtproto::RpcDropAnswer_Data* TL_rpc_answer_dropped_running::mutable_data2() {
  
  if (data2_ == NULL) {
    data2_ = new ::mtproto::RpcDropAnswer_Data;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_rpc_answer_dropped_running.data2)
  return data2_;
}
::mtproto::RpcDropAnswer_Data* TL_rpc_answer_dropped_running::release_data2() {
  // @@protoc_insertion_point(field_release:mtproto.TL_rpc_answer_dropped_running.data2)
  
  ::mtproto::RpcDropAnswer_Data* temp = data2_;
  data2_ = NULL;
  return temp;
}
void TL_rpc_answer_dropped_running::set_allocated_data2(::mtproto::RpcDropAnswer_Data* data2) {
  delete data2_;
  data2_ = data2;
  if (data2) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_rpc_answer_dropped_running.data2)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TL_rpc_answer_dropped::kData2FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TL_rpc_answer_dropped::TL_rpc_answer_dropped()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_schema_2etl_2etransport_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.TL_rpc_answer_dropped)
}
TL_rpc_answer_dropped::TL_rpc_answer_dropped(const TL_rpc_answer_dropped& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_data2()) {
    data2_ = new ::mtproto::RpcDropAnswer_Data(*from.data2_);
  } else {
    data2_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:mtproto.TL_rpc_answer_dropped)
}

void TL_rpc_answer_dropped::SharedCtor() {
  data2_ = NULL;
  _cached_size_ = 0;
}

TL_rpc_answer_dropped::~TL_rpc_answer_dropped() {
  // @@protoc_insertion_point(destructor:mtproto.TL_rpc_answer_dropped)
  SharedDtor();
}

void TL_rpc_answer_dropped::SharedDtor() {
  if (this != internal_default_instance()) delete data2_;
}

void TL_rpc_answer_dropped::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TL_rpc_answer_dropped::descriptor() {
  protobuf_schema_2etl_2etransport_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2etransport_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TL_rpc_answer_dropped& TL_rpc_answer_dropped::default_instance() {
  protobuf_schema_2etl_2etransport_2eproto::InitDefaults();
  return *internal_default_instance();
}

TL_rpc_answer_dropped* TL_rpc_answer_dropped::New(::google::protobuf::Arena* arena) const {
  TL_rpc_answer_dropped* n = new TL_rpc_answer_dropped;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TL_rpc_answer_dropped::Swap(TL_rpc_answer_dropped* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TL_rpc_answer_dropped::InternalSwap(TL_rpc_answer_dropped* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata TL_rpc_answer_dropped::GetMetadata() const {
  protobuf_schema_2etl_2etransport_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2etransport_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TL_rpc_answer_dropped

// .mtproto.RpcDropAnswer_Data data2 = 2;
bool TL_rpc_answer_dropped::has_data2() const {
  return this != internal_default_instance() && data2_ != NULL;
}
void TL_rpc_answer_dropped::clear_data2() {
  if (GetArenaNoVirtual() == NULL && data2_ != NULL) delete data2_;
  data2_ = NULL;
}
const ::mtproto::RpcDropAnswer_Data& TL_rpc_answer_dropped::data2() const {
  const ::mtproto::RpcDropAnswer_Data* p = data2_;
  // @@protoc_insertion_point(field_get:mtproto.TL_rpc_answer_dropped.data2)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::RpcDropAnswer_Data*>(
      &::mtproto::_RpcDropAnswer_Data_default_instance_);
}
::mtproto::RpcDropAnswer_Data* TL_rpc_answer_dropped::mutable_data2() {
  
  if (data2_ == NULL) {
    data2_ = new ::mtproto::RpcDropAnswer_Data;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_rpc_answer_dropped.data2)
  return data2_;
}
::mtproto::RpcDropAnswer_Data* TL_rpc_answer_dropped::release_data2() {
  // @@protoc_insertion_point(field_release:mtproto.TL_rpc_answer_dropped.data2)
  
  ::mtproto::RpcDropAnswer_Data* temp = data2_;
  data2_ = NULL;
  return temp;
}
void TL_rpc_answer_dropped::set_allocated_data2(::mtproto::RpcDropAnswer_Data* data2) {
  delete data2_;
  data2_ = data2;
  if (data2) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_rpc_answer_dropped.data2)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Pong_Data::kMsgIdFieldNumber;
const int Pong_Data::kPingIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Pong_Data::Pong_Data()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_schema_2etl_2etransport_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.Pong_Data)
}
Pong_Data::Pong_Data(const Pong_Data& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&msg_id_, &from.msg_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&ping_id_) -
    reinterpret_cast<char*>(&msg_id_)) + sizeof(ping_id_));
  // @@protoc_insertion_point(copy_constructor:mtproto.Pong_Data)
}

void Pong_Data::SharedCtor() {
  ::memset(&msg_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ping_id_) -
      reinterpret_cast<char*>(&msg_id_)) + sizeof(ping_id_));
  _cached_size_ = 0;
}

Pong_Data::~Pong_Data() {
  // @@protoc_insertion_point(destructor:mtproto.Pong_Data)
  SharedDtor();
}

void Pong_Data::SharedDtor() {
}

void Pong_Data::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Pong_Data::descriptor() {
  protobuf_schema_2etl_2etransport_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2etransport_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Pong_Data& Pong_Data::default_instance() {
  protobuf_schema_2etl_2etransport_2eproto::InitDefaults();
  return *internal_default_instance();
}

Pong_Data* Pong_Data::New(::google::protobuf::Arena* arena) const {
  Pong_Data* n = new Pong_Data;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Pong_Data::Swap(Pong_Data* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Pong_Data::InternalSwap(Pong_Data* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata Pong_Data::GetMetadata() const {
  protobuf_schema_2etl_2etransport_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2etransport_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Pong_Data

// int64 msg_id = 1;
void Pong_Data::clear_msg_id() {
  msg_id_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 Pong_Data::msg_id() const {
  // @@protoc_insertion_point(field_get:mtproto.Pong_Data.msg_id)
  return msg_id_;
}
void Pong_Data::set_msg_id(::google::protobuf::int64 value) {
  
  msg_id_ = value;
  // @@protoc_insertion_point(field_set:mtproto.Pong_Data.msg_id)
}

// int64 ping_id = 2;
void Pong_Data::clear_ping_id() {
  ping_id_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 Pong_Data::ping_id() const {
  // @@protoc_insertion_point(field_get:mtproto.Pong_Data.ping_id)
  return ping_id_;
}
void Pong_Data::set_ping_id(::google::protobuf::int64 value) {
  
  ping_id_ = value;
  // @@protoc_insertion_point(field_set:mtproto.Pong_Data.ping_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Pong::kConstructorFieldNumber;
const int Pong::kData2FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Pong::Pong()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_schema_2etl_2etransport_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.Pong)
}
Pong::Pong(const Pong& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_data2()) {
    data2_ = new ::mtproto::Pong_Data(*from.data2_);
  } else {
    data2_ = NULL;
  }
  constructor_ = from.constructor_;
  // @@protoc_insertion_point(copy_constructor:mtproto.Pong)
}

void Pong::SharedCtor() {
  ::memset(&data2_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&constructor_) -
      reinterpret_cast<char*>(&data2_)) + sizeof(constructor_));
  _cached_size_ = 0;
}

Pong::~Pong() {
  // @@protoc_insertion_point(destructor:mtproto.Pong)
  SharedDtor();
}

void Pong::SharedDtor() {
  if (this != internal_default_instance()) delete data2_;
}

void Pong::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Pong::descriptor() {
  protobuf_schema_2etl_2etransport_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2etransport_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Pong& Pong::default_instance() {
  protobuf_schema_2etl_2etransport_2eproto::InitDefaults();
  return *internal_default_instance();
}

Pong* Pong::New(::google::protobuf::Arena* arena) const {
  Pong* n = new Pong;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Pong::Swap(Pong* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Pong::InternalSwap(Pong* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata Pong::GetMetadata() const {
  protobuf_schema_2etl_2etransport_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2etransport_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Pong

// .mtproto.TLConstructor constructor = 1;
void Pong::clear_constructor() {
  constructor_ = 0;
}
::mtproto::TLConstructor Pong::constructor() const {
  // @@protoc_insertion_point(field_get:mtproto.Pong.constructor)
  return static_cast< ::mtproto::TLConstructor >(constructor_);
}
void Pong::set_constructor(::mtproto::TLConstructor value) {
  
  constructor_ = value;
  // @@protoc_insertion_point(field_set:mtproto.Pong.constructor)
}

// .mtproto.Pong_Data data2 = 2;
bool Pong::has_data2() const {
  return this != internal_default_instance() && data2_ != NULL;
}
void Pong::clear_data2() {
  if (GetArenaNoVirtual() == NULL && data2_ != NULL) delete data2_;
  data2_ = NULL;
}
const ::mtproto::Pong_Data& Pong::data2() const {
  const ::mtproto::Pong_Data* p = data2_;
  // @@protoc_insertion_point(field_get:mtproto.Pong.data2)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::Pong_Data*>(
      &::mtproto::_Pong_Data_default_instance_);
}
::mtproto::Pong_Data* Pong::mutable_data2() {
  
  if (data2_ == NULL) {
    data2_ = new ::mtproto::Pong_Data;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.Pong.data2)
  return data2_;
}
::mtproto::Pong_Data* Pong::release_data2() {
  // @@protoc_insertion_point(field_release:mtproto.Pong.data2)
  
  ::mtproto::Pong_Data* temp = data2_;
  data2_ = NULL;
  return temp;
}
void Pong::set_allocated_data2(::mtproto::Pong_Data* data2) {
  delete data2_;
  data2_ = data2;
  if (data2) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.Pong.data2)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TL_pong::kData2FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TL_pong::TL_pong()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_schema_2etl_2etransport_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.TL_pong)
}
TL_pong::TL_pong(const TL_pong& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_data2()) {
    data2_ = new ::mtproto::Pong_Data(*from.data2_);
  } else {
    data2_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:mtproto.TL_pong)
}

void TL_pong::SharedCtor() {
  data2_ = NULL;
  _cached_size_ = 0;
}

TL_pong::~TL_pong() {
  // @@protoc_insertion_point(destructor:mtproto.TL_pong)
  SharedDtor();
}

void TL_pong::SharedDtor() {
  if (this != internal_default_instance()) delete data2_;
}

void TL_pong::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TL_pong::descriptor() {
  protobuf_schema_2etl_2etransport_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2etransport_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TL_pong& TL_pong::default_instance() {
  protobuf_schema_2etl_2etransport_2eproto::InitDefaults();
  return *internal_default_instance();
}

TL_pong* TL_pong::New(::google::protobuf::Arena* arena) const {
  TL_pong* n = new TL_pong;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TL_pong::Swap(TL_pong* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TL_pong::InternalSwap(TL_pong* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata TL_pong::GetMetadata() const {
  protobuf_schema_2etl_2etransport_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2etransport_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TL_pong

// .mtproto.Pong_Data data2 = 2;
bool TL_pong::has_data2() const {
  return this != internal_default_instance() && data2_ != NULL;
}
void TL_pong::clear_data2() {
  if (GetArenaNoVirtual() == NULL && data2_ != NULL) delete data2_;
  data2_ = NULL;
}
const ::mtproto::Pong_Data& TL_pong::data2() const {
  const ::mtproto::Pong_Data* p = data2_;
  // @@protoc_insertion_point(field_get:mtproto.TL_pong.data2)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::Pong_Data*>(
      &::mtproto::_Pong_Data_default_instance_);
}
::mtproto::Pong_Data* TL_pong::mutable_data2() {
  
  if (data2_ == NULL) {
    data2_ = new ::mtproto::Pong_Data;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_pong.data2)
  return data2_;
}
::mtproto::Pong_Data* TL_pong::release_data2() {
  // @@protoc_insertion_point(field_release:mtproto.TL_pong.data2)
  
  ::mtproto::Pong_Data* temp = data2_;
  data2_ = NULL;
  return temp;
}
void TL_pong::set_allocated_data2(::mtproto::Pong_Data* data2) {
  delete data2_;
  data2_ = data2;
  if (data2) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_pong.data2)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DestroySessionRes_Data::kSessionIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DestroySessionRes_Data::DestroySessionRes_Data()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_schema_2etl_2etransport_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.DestroySessionRes_Data)
}
DestroySessionRes_Data::DestroySessionRes_Data(const DestroySessionRes_Data& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  session_id_ = from.session_id_;
  // @@protoc_insertion_point(copy_constructor:mtproto.DestroySessionRes_Data)
}

void DestroySessionRes_Data::SharedCtor() {
  session_id_ = GOOGLE_LONGLONG(0);
  _cached_size_ = 0;
}

DestroySessionRes_Data::~DestroySessionRes_Data() {
  // @@protoc_insertion_point(destructor:mtproto.DestroySessionRes_Data)
  SharedDtor();
}

void DestroySessionRes_Data::SharedDtor() {
}

void DestroySessionRes_Data::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DestroySessionRes_Data::descriptor() {
  protobuf_schema_2etl_2etransport_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2etransport_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DestroySessionRes_Data& DestroySessionRes_Data::default_instance() {
  protobuf_schema_2etl_2etransport_2eproto::InitDefaults();
  return *internal_default_instance();
}

DestroySessionRes_Data* DestroySessionRes_Data::New(::google::protobuf::Arena* arena) const {
  DestroySessionRes_Data* n = new DestroySessionRes_Data;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DestroySessionRes_Data::Swap(DestroySessionRes_Data* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DestroySessionRes_Data::InternalSwap(DestroySessionRes_Data* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata DestroySessionRes_Data::GetMetadata() const {
  protobuf_schema_2etl_2etransport_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2etransport_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DestroySessionRes_Data

// int64 session_id = 1;
void DestroySessionRes_Data::clear_session_id() {
  session_id_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 DestroySessionRes_Data::session_id() const {
  // @@protoc_insertion_point(field_get:mtproto.DestroySessionRes_Data.session_id)
  return session_id_;
}
void DestroySessionRes_Data::set_session_id(::google::protobuf::int64 value) {
  
  session_id_ = value;
  // @@protoc_insertion_point(field_set:mtproto.DestroySessionRes_Data.session_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DestroySessionRes::kConstructorFieldNumber;
const int DestroySessionRes::kData2FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DestroySessionRes::DestroySessionRes()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_schema_2etl_2etransport_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.DestroySessionRes)
}
DestroySessionRes::DestroySessionRes(const DestroySessionRes& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_data2()) {
    data2_ = new ::mtproto::DestroySessionRes_Data(*from.data2_);
  } else {
    data2_ = NULL;
  }
  constructor_ = from.constructor_;
  // @@protoc_insertion_point(copy_constructor:mtproto.DestroySessionRes)
}

void DestroySessionRes::SharedCtor() {
  ::memset(&data2_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&constructor_) -
      reinterpret_cast<char*>(&data2_)) + sizeof(constructor_));
  _cached_size_ = 0;
}

DestroySessionRes::~DestroySessionRes() {
  // @@protoc_insertion_point(destructor:mtproto.DestroySessionRes)
  SharedDtor();
}

void DestroySessionRes::SharedDtor() {
  if (this != internal_default_instance()) delete data2_;
}

void DestroySessionRes::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DestroySessionRes::descriptor() {
  protobuf_schema_2etl_2etransport_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2etransport_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DestroySessionRes& DestroySessionRes::default_instance() {
  protobuf_schema_2etl_2etransport_2eproto::InitDefaults();
  return *internal_default_instance();
}

DestroySessionRes* DestroySessionRes::New(::google::protobuf::Arena* arena) const {
  DestroySessionRes* n = new DestroySessionRes;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DestroySessionRes::Swap(DestroySessionRes* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DestroySessionRes::InternalSwap(DestroySessionRes* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata DestroySessionRes::GetMetadata() const {
  protobuf_schema_2etl_2etransport_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2etransport_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DestroySessionRes

// .mtproto.TLConstructor constructor = 1;
void DestroySessionRes::clear_constructor() {
  constructor_ = 0;
}
::mtproto::TLConstructor DestroySessionRes::constructor() const {
  // @@protoc_insertion_point(field_get:mtproto.DestroySessionRes.constructor)
  return static_cast< ::mtproto::TLConstructor >(constructor_);
}
void DestroySessionRes::set_constructor(::mtproto::TLConstructor value) {
  
  constructor_ = value;
  // @@protoc_insertion_point(field_set:mtproto.DestroySessionRes.constructor)
}

// .mtproto.DestroySessionRes_Data data2 = 2;
bool DestroySessionRes::has_data2() const {
  return this != internal_default_instance() && data2_ != NULL;
}
void DestroySessionRes::clear_data2() {
  if (GetArenaNoVirtual() == NULL && data2_ != NULL) delete data2_;
  data2_ = NULL;
}
const ::mtproto::DestroySessionRes_Data& DestroySessionRes::data2() const {
  const ::mtproto::DestroySessionRes_Data* p = data2_;
  // @@protoc_insertion_point(field_get:mtproto.DestroySessionRes.data2)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::DestroySessionRes_Data*>(
      &::mtproto::_DestroySessionRes_Data_default_instance_);
}
::mtproto::DestroySessionRes_Data* DestroySessionRes::mutable_data2() {
  
  if (data2_ == NULL) {
    data2_ = new ::mtproto::DestroySessionRes_Data;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.DestroySessionRes.data2)
  return data2_;
}
::mtproto::DestroySessionRes_Data* DestroySessionRes::release_data2() {
  // @@protoc_insertion_point(field_release:mtproto.DestroySessionRes.data2)
  
  ::mtproto::DestroySessionRes_Data* temp = data2_;
  data2_ = NULL;
  return temp;
}
void DestroySessionRes::set_allocated_data2(::mtproto::DestroySessionRes_Data* data2) {
  delete data2_;
  data2_ = data2;
  if (data2) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.DestroySessionRes.data2)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TL_destroy_session_ok::kData2FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TL_destroy_session_ok::TL_destroy_session_ok()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_schema_2etl_2etransport_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.TL_destroy_session_ok)
}
TL_destroy_session_ok::TL_destroy_session_ok(const TL_destroy_session_ok& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_data2()) {
    data2_ = new ::mtproto::DestroySessionRes_Data(*from.data2_);
  } else {
    data2_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:mtproto.TL_destroy_session_ok)
}

void TL_destroy_session_ok::SharedCtor() {
  data2_ = NULL;
  _cached_size_ = 0;
}

TL_destroy_session_ok::~TL_destroy_session_ok() {
  // @@protoc_insertion_point(destructor:mtproto.TL_destroy_session_ok)
  SharedDtor();
}

void TL_destroy_session_ok::SharedDtor() {
  if (this != internal_default_instance()) delete data2_;
}

void TL_destroy_session_ok::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TL_destroy_session_ok::descriptor() {
  protobuf_schema_2etl_2etransport_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2etransport_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TL_destroy_session_ok& TL_destroy_session_ok::default_instance() {
  protobuf_schema_2etl_2etransport_2eproto::InitDefaults();
  return *internal_default_instance();
}

TL_destroy_session_ok* TL_destroy_session_ok::New(::google::protobuf::Arena* arena) const {
  TL_destroy_session_ok* n = new TL_destroy_session_ok;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TL_destroy_session_ok::Swap(TL_destroy_session_ok* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TL_destroy_session_ok::InternalSwap(TL_destroy_session_ok* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata TL_destroy_session_ok::GetMetadata() const {
  protobuf_schema_2etl_2etransport_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2etransport_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TL_destroy_session_ok

// .mtproto.DestroySessionRes_Data data2 = 2;
bool TL_destroy_session_ok::has_data2() const {
  return this != internal_default_instance() && data2_ != NULL;
}
void TL_destroy_session_ok::clear_data2() {
  if (GetArenaNoVirtual() == NULL && data2_ != NULL) delete data2_;
  data2_ = NULL;
}
const ::mtproto::DestroySessionRes_Data& TL_destroy_session_ok::data2() const {
  const ::mtproto::DestroySessionRes_Data* p = data2_;
  // @@protoc_insertion_point(field_get:mtproto.TL_destroy_session_ok.data2)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::DestroySessionRes_Data*>(
      &::mtproto::_DestroySessionRes_Data_default_instance_);
}
::mtproto::DestroySessionRes_Data* TL_destroy_session_ok::mutable_data2() {
  
  if (data2_ == NULL) {
    data2_ = new ::mtproto::DestroySessionRes_Data;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_destroy_session_ok.data2)
  return data2_;
}
::mtproto::DestroySessionRes_Data* TL_destroy_session_ok::release_data2() {
  // @@protoc_insertion_point(field_release:mtproto.TL_destroy_session_ok.data2)
  
  ::mtproto::DestroySessionRes_Data* temp = data2_;
  data2_ = NULL;
  return temp;
}
void TL_destroy_session_ok::set_allocated_data2(::mtproto::DestroySessionRes_Data* data2) {
  delete data2_;
  data2_ = data2;
  if (data2) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_destroy_session_ok.data2)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TL_destroy_session_none::kData2FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TL_destroy_session_none::TL_destroy_session_none()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_schema_2etl_2etransport_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.TL_destroy_session_none)
}
TL_destroy_session_none::TL_destroy_session_none(const TL_destroy_session_none& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_data2()) {
    data2_ = new ::mtproto::DestroySessionRes_Data(*from.data2_);
  } else {
    data2_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:mtproto.TL_destroy_session_none)
}

void TL_destroy_session_none::SharedCtor() {
  data2_ = NULL;
  _cached_size_ = 0;
}

TL_destroy_session_none::~TL_destroy_session_none() {
  // @@protoc_insertion_point(destructor:mtproto.TL_destroy_session_none)
  SharedDtor();
}

void TL_destroy_session_none::SharedDtor() {
  if (this != internal_default_instance()) delete data2_;
}

void TL_destroy_session_none::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TL_destroy_session_none::descriptor() {
  protobuf_schema_2etl_2etransport_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2etransport_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TL_destroy_session_none& TL_destroy_session_none::default_instance() {
  protobuf_schema_2etl_2etransport_2eproto::InitDefaults();
  return *internal_default_instance();
}

TL_destroy_session_none* TL_destroy_session_none::New(::google::protobuf::Arena* arena) const {
  TL_destroy_session_none* n = new TL_destroy_session_none;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TL_destroy_session_none::Swap(TL_destroy_session_none* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TL_destroy_session_none::InternalSwap(TL_destroy_session_none* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata TL_destroy_session_none::GetMetadata() const {
  protobuf_schema_2etl_2etransport_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2etransport_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TL_destroy_session_none

// .mtproto.DestroySessionRes_Data data2 = 2;
bool TL_destroy_session_none::has_data2() const {
  return this != internal_default_instance() && data2_ != NULL;
}
void TL_destroy_session_none::clear_data2() {
  if (GetArenaNoVirtual() == NULL && data2_ != NULL) delete data2_;
  data2_ = NULL;
}
const ::mtproto::DestroySessionRes_Data& TL_destroy_session_none::data2() const {
  const ::mtproto::DestroySessionRes_Data* p = data2_;
  // @@protoc_insertion_point(field_get:mtproto.TL_destroy_session_none.data2)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::DestroySessionRes_Data*>(
      &::mtproto::_DestroySessionRes_Data_default_instance_);
}
::mtproto::DestroySessionRes_Data* TL_destroy_session_none::mutable_data2() {
  
  if (data2_ == NULL) {
    data2_ = new ::mtproto::DestroySessionRes_Data;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_destroy_session_none.data2)
  return data2_;
}
::mtproto::DestroySessionRes_Data* TL_destroy_session_none::release_data2() {
  // @@protoc_insertion_point(field_release:mtproto.TL_destroy_session_none.data2)
  
  ::mtproto::DestroySessionRes_Data* temp = data2_;
  data2_ = NULL;
  return temp;
}
void TL_destroy_session_none::set_allocated_data2(::mtproto::DestroySessionRes_Data* data2) {
  delete data2_;
  data2_ = data2;
  if (data2) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_destroy_session_none.data2)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int HttpWait_Data::kMaxDelayFieldNumber;
const int HttpWait_Data::kWaitAfterFieldNumber;
const int HttpWait_Data::kMaxWaitFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HttpWait_Data::HttpWait_Data()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_schema_2etl_2etransport_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.HttpWait_Data)
}
HttpWait_Data::HttpWait_Data(const HttpWait_Data& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&max_delay_, &from.max_delay_,
    static_cast<size_t>(reinterpret_cast<char*>(&max_wait_) -
    reinterpret_cast<char*>(&max_delay_)) + sizeof(max_wait_));
  // @@protoc_insertion_point(copy_constructor:mtproto.HttpWait_Data)
}

void HttpWait_Data::SharedCtor() {
  ::memset(&max_delay_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&max_wait_) -
      reinterpret_cast<char*>(&max_delay_)) + sizeof(max_wait_));
  _cached_size_ = 0;
}

HttpWait_Data::~HttpWait_Data() {
  // @@protoc_insertion_point(destructor:mtproto.HttpWait_Data)
  SharedDtor();
}

void HttpWait_Data::SharedDtor() {
}

void HttpWait_Data::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* HttpWait_Data::descriptor() {
  protobuf_schema_2etl_2etransport_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2etransport_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const HttpWait_Data& HttpWait_Data::default_instance() {
  protobuf_schema_2etl_2etransport_2eproto::InitDefaults();
  return *internal_default_instance();
}

HttpWait_Data* HttpWait_Data::New(::google::protobuf::Arena* arena) const {
  HttpWait_Data* n = new HttpWait_Data;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void HttpWait_Data::Swap(HttpWait_Data* other) {
  if (other == this) return;
  InternalSwap(other);
}
void HttpWait_Data::InternalSwap(HttpWait_Data* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata HttpWait_Data::GetMetadata() const {
  protobuf_schema_2etl_2etransport_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2etransport_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// HttpWait_Data

// int32 max_delay = 1;
void HttpWait_Data::clear_max_delay() {
  max_delay_ = 0;
}
::google::protobuf::int32 HttpWait_Data::max_delay() const {
  // @@protoc_insertion_point(field_get:mtproto.HttpWait_Data.max_delay)
  return max_delay_;
}
void HttpWait_Data::set_max_delay(::google::protobuf::int32 value) {
  
  max_delay_ = value;
  // @@protoc_insertion_point(field_set:mtproto.HttpWait_Data.max_delay)
}

// int32 wait_after = 2;
void HttpWait_Data::clear_wait_after() {
  wait_after_ = 0;
}
::google::protobuf::int32 HttpWait_Data::wait_after() const {
  // @@protoc_insertion_point(field_get:mtproto.HttpWait_Data.wait_after)
  return wait_after_;
}
void HttpWait_Data::set_wait_after(::google::protobuf::int32 value) {
  
  wait_after_ = value;
  // @@protoc_insertion_point(field_set:mtproto.HttpWait_Data.wait_after)
}

// int32 max_wait = 3;
void HttpWait_Data::clear_max_wait() {
  max_wait_ = 0;
}
::google::protobuf::int32 HttpWait_Data::max_wait() const {
  // @@protoc_insertion_point(field_get:mtproto.HttpWait_Data.max_wait)
  return max_wait_;
}
void HttpWait_Data::set_max_wait(::google::protobuf::int32 value) {
  
  max_wait_ = value;
  // @@protoc_insertion_point(field_set:mtproto.HttpWait_Data.max_wait)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int HttpWait::kConstructorFieldNumber;
const int HttpWait::kData2FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HttpWait::HttpWait()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_schema_2etl_2etransport_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.HttpWait)
}
HttpWait::HttpWait(const HttpWait& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_data2()) {
    data2_ = new ::mtproto::HttpWait_Data(*from.data2_);
  } else {
    data2_ = NULL;
  }
  constructor_ = from.constructor_;
  // @@protoc_insertion_point(copy_constructor:mtproto.HttpWait)
}

void HttpWait::SharedCtor() {
  ::memset(&data2_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&constructor_) -
      reinterpret_cast<char*>(&data2_)) + sizeof(constructor_));
  _cached_size_ = 0;
}

HttpWait::~HttpWait() {
  // @@protoc_insertion_point(destructor:mtproto.HttpWait)
  SharedDtor();
}

void HttpWait::SharedDtor() {
  if (this != internal_default_instance()) delete data2_;
}

void HttpWait::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* HttpWait::descriptor() {
  protobuf_schema_2etl_2etransport_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2etransport_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const HttpWait& HttpWait::default_instance() {
  protobuf_schema_2etl_2etransport_2eproto::InitDefaults();
  return *internal_default_instance();
}

HttpWait* HttpWait::New(::google::protobuf::Arena* arena) const {
  HttpWait* n = new HttpWait;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void HttpWait::Swap(HttpWait* other) {
  if (other == this) return;
  InternalSwap(other);
}
void HttpWait::InternalSwap(HttpWait* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata HttpWait::GetMetadata() const {
  protobuf_schema_2etl_2etransport_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2etransport_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// HttpWait

// .mtproto.TLConstructor constructor = 1;
void HttpWait::clear_constructor() {
  constructor_ = 0;
}
::mtproto::TLConstructor HttpWait::constructor() const {
  // @@protoc_insertion_point(field_get:mtproto.HttpWait.constructor)
  return static_cast< ::mtproto::TLConstructor >(constructor_);
}
void HttpWait::set_constructor(::mtproto::TLConstructor value) {
  
  constructor_ = value;
  // @@protoc_insertion_point(field_set:mtproto.HttpWait.constructor)
}

// .mtproto.HttpWait_Data data2 = 2;
bool HttpWait::has_data2() const {
  return this != internal_default_instance() && data2_ != NULL;
}
void HttpWait::clear_data2() {
  if (GetArenaNoVirtual() == NULL && data2_ != NULL) delete data2_;
  data2_ = NULL;
}
const ::mtproto::HttpWait_Data& HttpWait::data2() const {
  const ::mtproto::HttpWait_Data* p = data2_;
  // @@protoc_insertion_point(field_get:mtproto.HttpWait.data2)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::HttpWait_Data*>(
      &::mtproto::_HttpWait_Data_default_instance_);
}
::mtproto::HttpWait_Data* HttpWait::mutable_data2() {
  
  if (data2_ == NULL) {
    data2_ = new ::mtproto::HttpWait_Data;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.HttpWait.data2)
  return data2_;
}
::mtproto::HttpWait_Data* HttpWait::release_data2() {
  // @@protoc_insertion_point(field_release:mtproto.HttpWait.data2)
  
  ::mtproto::HttpWait_Data* temp = data2_;
  data2_ = NULL;
  return temp;
}
void HttpWait::set_allocated_data2(::mtproto::HttpWait_Data* data2) {
  delete data2_;
  data2_ = data2;
  if (data2) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.HttpWait.data2)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TL_http_wait::kData2FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TL_http_wait::TL_http_wait()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_schema_2etl_2etransport_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.TL_http_wait)
}
TL_http_wait::TL_http_wait(const TL_http_wait& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_data2()) {
    data2_ = new ::mtproto::HttpWait_Data(*from.data2_);
  } else {
    data2_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:mtproto.TL_http_wait)
}

void TL_http_wait::SharedCtor() {
  data2_ = NULL;
  _cached_size_ = 0;
}

TL_http_wait::~TL_http_wait() {
  // @@protoc_insertion_point(destructor:mtproto.TL_http_wait)
  SharedDtor();
}

void TL_http_wait::SharedDtor() {
  if (this != internal_default_instance()) delete data2_;
}

void TL_http_wait::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TL_http_wait::descriptor() {
  protobuf_schema_2etl_2etransport_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2etransport_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TL_http_wait& TL_http_wait::default_instance() {
  protobuf_schema_2etl_2etransport_2eproto::InitDefaults();
  return *internal_default_instance();
}

TL_http_wait* TL_http_wait::New(::google::protobuf::Arena* arena) const {
  TL_http_wait* n = new TL_http_wait;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TL_http_wait::Swap(TL_http_wait* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TL_http_wait::InternalSwap(TL_http_wait* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata TL_http_wait::GetMetadata() const {
  protobuf_schema_2etl_2etransport_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2etransport_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TL_http_wait

// .mtproto.HttpWait_Data data2 = 2;
bool TL_http_wait::has_data2() const {
  return this != internal_default_instance() && data2_ != NULL;
}
void TL_http_wait::clear_data2() {
  if (GetArenaNoVirtual() == NULL && data2_ != NULL) delete data2_;
  data2_ = NULL;
}
const ::mtproto::HttpWait_Data& TL_http_wait::data2() const {
  const ::mtproto::HttpWait_Data* p = data2_;
  // @@protoc_insertion_point(field_get:mtproto.TL_http_wait.data2)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::HttpWait_Data*>(
      &::mtproto::_HttpWait_Data_default_instance_);
}
::mtproto::HttpWait_Data* TL_http_wait::mutable_data2() {
  
  if (data2_ == NULL) {
    data2_ = new ::mtproto::HttpWait_Data;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_http_wait.data2)
  return data2_;
}
::mtproto::HttpWait_Data* TL_http_wait::release_data2() {
  // @@protoc_insertion_point(field_release:mtproto.TL_http_wait.data2)
  
  ::mtproto::HttpWait_Data* temp = data2_;
  data2_ = NULL;
  return temp;
}
void TL_http_wait::set_allocated_data2(::mtproto::HttpWait_Data* data2) {
  delete data2_;
  data2_ = data2;
  if (data2) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_http_wait.data2)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RpcError_Data::kErrorCodeFieldNumber;
const int RpcError_Data::kErrorMessageFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RpcError_Data::RpcError_Data()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_schema_2etl_2etransport_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.RpcError_Data)
}
RpcError_Data::RpcError_Data(const RpcError_Data& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  error_message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.error_message().size() > 0) {
    error_message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.error_message_);
  }
  error_code_ = from.error_code_;
  // @@protoc_insertion_point(copy_constructor:mtproto.RpcError_Data)
}

void RpcError_Data::SharedCtor() {
  error_message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  error_code_ = 0;
  _cached_size_ = 0;
}

RpcError_Data::~RpcError_Data() {
  // @@protoc_insertion_point(destructor:mtproto.RpcError_Data)
  SharedDtor();
}

void RpcError_Data::SharedDtor() {
  error_message_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void RpcError_Data::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RpcError_Data::descriptor() {
  protobuf_schema_2etl_2etransport_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2etransport_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RpcError_Data& RpcError_Data::default_instance() {
  protobuf_schema_2etl_2etransport_2eproto::InitDefaults();
  return *internal_default_instance();
}

RpcError_Data* RpcError_Data::New(::google::protobuf::Arena* arena) const {
  RpcError_Data* n = new RpcError_Data;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RpcError_Data::Swap(RpcError_Data* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RpcError_Data::InternalSwap(RpcError_Data* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata RpcError_Data::GetMetadata() const {
  protobuf_schema_2etl_2etransport_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2etransport_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RpcError_Data

// int32 error_code = 1;
void RpcError_Data::clear_error_code() {
  error_code_ = 0;
}
::google::protobuf::int32 RpcError_Data::error_code() const {
  // @@protoc_insertion_point(field_get:mtproto.RpcError_Data.error_code)
  return error_code_;
}
void RpcError_Data::set_error_code(::google::protobuf::int32 value) {
  
  error_code_ = value;
  // @@protoc_insertion_point(field_set:mtproto.RpcError_Data.error_code)
}

// string error_message = 2;
void RpcError_Data::clear_error_message() {
  error_message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& RpcError_Data::error_message() const {
  // @@protoc_insertion_point(field_get:mtproto.RpcError_Data.error_message)
  return error_message_.GetNoArena();
}
void RpcError_Data::set_error_message(const ::std::string& value) {
  
  error_message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtproto.RpcError_Data.error_message)
}
#if LANG_CXX11
void RpcError_Data::set_error_message(::std::string&& value) {
  
  error_message_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mtproto.RpcError_Data.error_message)
}
#endif
void RpcError_Data::set_error_message(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  error_message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtproto.RpcError_Data.error_message)
}
void RpcError_Data::set_error_message(const char* value, size_t size) {
  
  error_message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtproto.RpcError_Data.error_message)
}
::std::string* RpcError_Data::mutable_error_message() {
  
  // @@protoc_insertion_point(field_mutable:mtproto.RpcError_Data.error_message)
  return error_message_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* RpcError_Data::release_error_message() {
  // @@protoc_insertion_point(field_release:mtproto.RpcError_Data.error_message)
  
  return error_message_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RpcError_Data::set_allocated_error_message(::std::string* error_message) {
  if (error_message != NULL) {
    
  } else {
    
  }
  error_message_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), error_message);
  // @@protoc_insertion_point(field_set_allocated:mtproto.RpcError_Data.error_message)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RpcError::kConstructorFieldNumber;
const int RpcError::kData2FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RpcError::RpcError()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_schema_2etl_2etransport_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.RpcError)
}
RpcError::RpcError(const RpcError& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_data2()) {
    data2_ = new ::mtproto::RpcError_Data(*from.data2_);
  } else {
    data2_ = NULL;
  }
  constructor_ = from.constructor_;
  // @@protoc_insertion_point(copy_constructor:mtproto.RpcError)
}

void RpcError::SharedCtor() {
  ::memset(&data2_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&constructor_) -
      reinterpret_cast<char*>(&data2_)) + sizeof(constructor_));
  _cached_size_ = 0;
}

RpcError::~RpcError() {
  // @@protoc_insertion_point(destructor:mtproto.RpcError)
  SharedDtor();
}

void RpcError::SharedDtor() {
  if (this != internal_default_instance()) delete data2_;
}

void RpcError::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RpcError::descriptor() {
  protobuf_schema_2etl_2etransport_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2etransport_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RpcError& RpcError::default_instance() {
  protobuf_schema_2etl_2etransport_2eproto::InitDefaults();
  return *internal_default_instance();
}

RpcError* RpcError::New(::google::protobuf::Arena* arena) const {
  RpcError* n = new RpcError;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RpcError::Swap(RpcError* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RpcError::InternalSwap(RpcError* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata RpcError::GetMetadata() const {
  protobuf_schema_2etl_2etransport_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2etransport_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RpcError

// .mtproto.TLConstructor constructor = 1;
void RpcError::clear_constructor() {
  constructor_ = 0;
}
::mtproto::TLConstructor RpcError::constructor() const {
  // @@protoc_insertion_point(field_get:mtproto.RpcError.constructor)
  return static_cast< ::mtproto::TLConstructor >(constructor_);
}
void RpcError::set_constructor(::mtproto::TLConstructor value) {
  
  constructor_ = value;
  // @@protoc_insertion_point(field_set:mtproto.RpcError.constructor)
}

// .mtproto.RpcError_Data data2 = 2;
bool RpcError::has_data2() const {
  return this != internal_default_instance() && data2_ != NULL;
}
void RpcError::clear_data2() {
  if (GetArenaNoVirtual() == NULL && data2_ != NULL) delete data2_;
  data2_ = NULL;
}
const ::mtproto::RpcError_Data& RpcError::data2() const {
  const ::mtproto::RpcError_Data* p = data2_;
  // @@protoc_insertion_point(field_get:mtproto.RpcError.data2)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::RpcError_Data*>(
      &::mtproto::_RpcError_Data_default_instance_);
}
::mtproto::RpcError_Data* RpcError::mutable_data2() {
  
  if (data2_ == NULL) {
    data2_ = new ::mtproto::RpcError_Data;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.RpcError.data2)
  return data2_;
}
::mtproto::RpcError_Data* RpcError::release_data2() {
  // @@protoc_insertion_point(field_release:mtproto.RpcError.data2)
  
  ::mtproto::RpcError_Data* temp = data2_;
  data2_ = NULL;
  return temp;
}
void RpcError::set_allocated_data2(::mtproto::RpcError_Data* data2) {
  delete data2_;
  data2_ = data2;
  if (data2) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.RpcError.data2)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TL_rpc_error::kData2FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TL_rpc_error::TL_rpc_error()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_schema_2etl_2etransport_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.TL_rpc_error)
}
TL_rpc_error::TL_rpc_error(const TL_rpc_error& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_data2()) {
    data2_ = new ::mtproto::RpcError_Data(*from.data2_);
  } else {
    data2_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:mtproto.TL_rpc_error)
}

void TL_rpc_error::SharedCtor() {
  data2_ = NULL;
  _cached_size_ = 0;
}

TL_rpc_error::~TL_rpc_error() {
  // @@protoc_insertion_point(destructor:mtproto.TL_rpc_error)
  SharedDtor();
}

void TL_rpc_error::SharedDtor() {
  if (this != internal_default_instance()) delete data2_;
}

void TL_rpc_error::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TL_rpc_error::descriptor() {
  protobuf_schema_2etl_2etransport_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2etransport_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TL_rpc_error& TL_rpc_error::default_instance() {
  protobuf_schema_2etl_2etransport_2eproto::InitDefaults();
  return *internal_default_instance();
}

TL_rpc_error* TL_rpc_error::New(::google::protobuf::Arena* arena) const {
  TL_rpc_error* n = new TL_rpc_error;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TL_rpc_error::Swap(TL_rpc_error* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TL_rpc_error::InternalSwap(TL_rpc_error* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata TL_rpc_error::GetMetadata() const {
  protobuf_schema_2etl_2etransport_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2etransport_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TL_rpc_error

// .mtproto.RpcError_Data data2 = 2;
bool TL_rpc_error::has_data2() const {
  return this != internal_default_instance() && data2_ != NULL;
}
void TL_rpc_error::clear_data2() {
  if (GetArenaNoVirtual() == NULL && data2_ != NULL) delete data2_;
  data2_ = NULL;
}
const ::mtproto::RpcError_Data& TL_rpc_error::data2() const {
  const ::mtproto::RpcError_Data* p = data2_;
  // @@protoc_insertion_point(field_get:mtproto.TL_rpc_error.data2)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::RpcError_Data*>(
      &::mtproto::_RpcError_Data_default_instance_);
}
::mtproto::RpcError_Data* TL_rpc_error::mutable_data2() {
  
  if (data2_ == NULL) {
    data2_ = new ::mtproto::RpcError_Data;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_rpc_error.data2)
  return data2_;
}
::mtproto::RpcError_Data* TL_rpc_error::release_data2() {
  // @@protoc_insertion_point(field_release:mtproto.TL_rpc_error.data2)
  
  ::mtproto::RpcError_Data* temp = data2_;
  data2_ = NULL;
  return temp;
}
void TL_rpc_error::set_allocated_data2(::mtproto::RpcError_Data* data2) {
  delete data2_;
  data2_ = data2;
  if (data2) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_rpc_error.data2)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FutureSalts_Data::kReqMsgIdFieldNumber;
const int FutureSalts_Data::kNowFieldNumber;
const int FutureSalts_Data::kSaltsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FutureSalts_Data::FutureSalts_Data()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_schema_2etl_2etransport_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.FutureSalts_Data)
}
FutureSalts_Data::FutureSalts_Data(const FutureSalts_Data& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      salts_(from.salts_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&req_msg_id_, &from.req_msg_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&now_) -
    reinterpret_cast<char*>(&req_msg_id_)) + sizeof(now_));
  // @@protoc_insertion_point(copy_constructor:mtproto.FutureSalts_Data)
}

void FutureSalts_Data::SharedCtor() {
  ::memset(&req_msg_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&now_) -
      reinterpret_cast<char*>(&req_msg_id_)) + sizeof(now_));
  _cached_size_ = 0;
}

FutureSalts_Data::~FutureSalts_Data() {
  // @@protoc_insertion_point(destructor:mtproto.FutureSalts_Data)
  SharedDtor();
}

void FutureSalts_Data::SharedDtor() {
}

void FutureSalts_Data::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FutureSalts_Data::descriptor() {
  protobuf_schema_2etl_2etransport_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2etransport_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const FutureSalts_Data& FutureSalts_Data::default_instance() {
  protobuf_schema_2etl_2etransport_2eproto::InitDefaults();
  return *internal_default_instance();
}

FutureSalts_Data* FutureSalts_Data::New(::google::protobuf::Arena* arena) const {
  FutureSalts_Data* n = new FutureSalts_Data;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void FutureSalts_Data::Swap(FutureSalts_Data* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FutureSalts_Data::InternalSwap(FutureSalts_Data* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata FutureSalts_Data::GetMetadata() const {
  protobuf_schema_2etl_2etransport_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2etransport_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// FutureSalts_Data

// int64 req_msg_id = 1;
void FutureSalts_Data::clear_req_msg_id() {
  req_msg_id_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 FutureSalts_Data::req_msg_id() const {
  // @@protoc_insertion_point(field_get:mtproto.FutureSalts_Data.req_msg_id)
  return req_msg_id_;
}
void FutureSalts_Data::set_req_msg_id(::google::protobuf::int64 value) {
  
  req_msg_id_ = value;
  // @@protoc_insertion_point(field_set:mtproto.FutureSalts_Data.req_msg_id)
}

// int32 now = 2;
void FutureSalts_Data::clear_now() {
  now_ = 0;
}
::google::protobuf::int32 FutureSalts_Data::now() const {
  // @@protoc_insertion_point(field_get:mtproto.FutureSalts_Data.now)
  return now_;
}
void FutureSalts_Data::set_now(::google::protobuf::int32 value) {
  
  now_ = value;
  // @@protoc_insertion_point(field_set:mtproto.FutureSalts_Data.now)
}

// repeated .mtproto.TL_future_salt salts = 3;
int FutureSalts_Data::salts_size() const {
  return salts_.size();
}
void FutureSalts_Data::clear_salts() {
  salts_.Clear();
}
const ::mtproto::TL_future_salt& FutureSalts_Data::salts(int index) const {
  // @@protoc_insertion_point(field_get:mtproto.FutureSalts_Data.salts)
  return salts_.Get(index);
}
::mtproto::TL_future_salt* FutureSalts_Data::mutable_salts(int index) {
  // @@protoc_insertion_point(field_mutable:mtproto.FutureSalts_Data.salts)
  return salts_.Mutable(index);
}
::mtproto::TL_future_salt* FutureSalts_Data::add_salts() {
  // @@protoc_insertion_point(field_add:mtproto.FutureSalts_Data.salts)
  return salts_.Add();
}
::google::protobuf::RepeatedPtrField< ::mtproto::TL_future_salt >*
FutureSalts_Data::mutable_salts() {
  // @@protoc_insertion_point(field_mutable_list:mtproto.FutureSalts_Data.salts)
  return &salts_;
}
const ::google::protobuf::RepeatedPtrField< ::mtproto::TL_future_salt >&
FutureSalts_Data::salts() const {
  // @@protoc_insertion_point(field_list:mtproto.FutureSalts_Data.salts)
  return salts_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FutureSalts::kConstructorFieldNumber;
const int FutureSalts::kData2FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FutureSalts::FutureSalts()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_schema_2etl_2etransport_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.FutureSalts)
}
FutureSalts::FutureSalts(const FutureSalts& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_data2()) {
    data2_ = new ::mtproto::FutureSalts_Data(*from.data2_);
  } else {
    data2_ = NULL;
  }
  constructor_ = from.constructor_;
  // @@protoc_insertion_point(copy_constructor:mtproto.FutureSalts)
}

void FutureSalts::SharedCtor() {
  ::memset(&data2_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&constructor_) -
      reinterpret_cast<char*>(&data2_)) + sizeof(constructor_));
  _cached_size_ = 0;
}

FutureSalts::~FutureSalts() {
  // @@protoc_insertion_point(destructor:mtproto.FutureSalts)
  SharedDtor();
}

void FutureSalts::SharedDtor() {
  if (this != internal_default_instance()) delete data2_;
}

void FutureSalts::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FutureSalts::descriptor() {
  protobuf_schema_2etl_2etransport_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2etransport_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const FutureSalts& FutureSalts::default_instance() {
  protobuf_schema_2etl_2etransport_2eproto::InitDefaults();
  return *internal_default_instance();
}

FutureSalts* FutureSalts::New(::google::protobuf::Arena* arena) const {
  FutureSalts* n = new FutureSalts;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void FutureSalts::Swap(FutureSalts* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FutureSalts::InternalSwap(FutureSalts* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata FutureSalts::GetMetadata() const {
  protobuf_schema_2etl_2etransport_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2etransport_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// FutureSalts

// .mtproto.TLConstructor constructor = 1;
void FutureSalts::clear_constructor() {
  constructor_ = 0;
}
::mtproto::TLConstructor FutureSalts::constructor() const {
  // @@protoc_insertion_point(field_get:mtproto.FutureSalts.constructor)
  return static_cast< ::mtproto::TLConstructor >(constructor_);
}
void FutureSalts::set_constructor(::mtproto::TLConstructor value) {
  
  constructor_ = value;
  // @@protoc_insertion_point(field_set:mtproto.FutureSalts.constructor)
}

// .mtproto.FutureSalts_Data data2 = 2;
bool FutureSalts::has_data2() const {
  return this != internal_default_instance() && data2_ != NULL;
}
void FutureSalts::clear_data2() {
  if (GetArenaNoVirtual() == NULL && data2_ != NULL) delete data2_;
  data2_ = NULL;
}
const ::mtproto::FutureSalts_Data& FutureSalts::data2() const {
  const ::mtproto::FutureSalts_Data* p = data2_;
  // @@protoc_insertion_point(field_get:mtproto.FutureSalts.data2)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::FutureSalts_Data*>(
      &::mtproto::_FutureSalts_Data_default_instance_);
}
::mtproto::FutureSalts_Data* FutureSalts::mutable_data2() {
  
  if (data2_ == NULL) {
    data2_ = new ::mtproto::FutureSalts_Data;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.FutureSalts.data2)
  return data2_;
}
::mtproto::FutureSalts_Data* FutureSalts::release_data2() {
  // @@protoc_insertion_point(field_release:mtproto.FutureSalts.data2)
  
  ::mtproto::FutureSalts_Data* temp = data2_;
  data2_ = NULL;
  return temp;
}
void FutureSalts::set_allocated_data2(::mtproto::FutureSalts_Data* data2) {
  delete data2_;
  data2_ = data2;
  if (data2) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.FutureSalts.data2)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TL_future_salts::kData2FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TL_future_salts::TL_future_salts()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_schema_2etl_2etransport_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.TL_future_salts)
}
TL_future_salts::TL_future_salts(const TL_future_salts& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_data2()) {
    data2_ = new ::mtproto::FutureSalts_Data(*from.data2_);
  } else {
    data2_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:mtproto.TL_future_salts)
}

void TL_future_salts::SharedCtor() {
  data2_ = NULL;
  _cached_size_ = 0;
}

TL_future_salts::~TL_future_salts() {
  // @@protoc_insertion_point(destructor:mtproto.TL_future_salts)
  SharedDtor();
}

void TL_future_salts::SharedDtor() {
  if (this != internal_default_instance()) delete data2_;
}

void TL_future_salts::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TL_future_salts::descriptor() {
  protobuf_schema_2etl_2etransport_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2etransport_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TL_future_salts& TL_future_salts::default_instance() {
  protobuf_schema_2etl_2etransport_2eproto::InitDefaults();
  return *internal_default_instance();
}

TL_future_salts* TL_future_salts::New(::google::protobuf::Arena* arena) const {
  TL_future_salts* n = new TL_future_salts;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TL_future_salts::Swap(TL_future_salts* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TL_future_salts::InternalSwap(TL_future_salts* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata TL_future_salts::GetMetadata() const {
  protobuf_schema_2etl_2etransport_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2etransport_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TL_future_salts

// .mtproto.FutureSalts_Data data2 = 2;
bool TL_future_salts::has_data2() const {
  return this != internal_default_instance() && data2_ != NULL;
}
void TL_future_salts::clear_data2() {
  if (GetArenaNoVirtual() == NULL && data2_ != NULL) delete data2_;
  data2_ = NULL;
}
const ::mtproto::FutureSalts_Data& TL_future_salts::data2() const {
  const ::mtproto::FutureSalts_Data* p = data2_;
  // @@protoc_insertion_point(field_get:mtproto.TL_future_salts.data2)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::FutureSalts_Data*>(
      &::mtproto::_FutureSalts_Data_default_instance_);
}
::mtproto::FutureSalts_Data* TL_future_salts::mutable_data2() {
  
  if (data2_ == NULL) {
    data2_ = new ::mtproto::FutureSalts_Data;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_future_salts.data2)
  return data2_;
}
::mtproto::FutureSalts_Data* TL_future_salts::release_data2() {
  // @@protoc_insertion_point(field_release:mtproto.TL_future_salts.data2)
  
  ::mtproto::FutureSalts_Data* temp = data2_;
  data2_ = NULL;
  return temp;
}
void TL_future_salts::set_allocated_data2(::mtproto::FutureSalts_Data* data2) {
  delete data2_;
  data2_ = data2;
  if (data2) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_future_salts.data2)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace mtproto

// @@protoc_insertion_point(global_scope)
