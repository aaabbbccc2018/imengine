// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: nbfs_service.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "nbfs_service.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace mtproto {
class UploadPhotoFileRequestDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<UploadPhotoFileRequest>
     _instance;
} _UploadPhotoFileRequest_default_instance_;
class GetPhotoFileDataRequestDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<GetPhotoFileDataRequest>
     _instance;
} _GetPhotoFileDataRequest_default_instance_;
class PhotoDataRspDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<PhotoDataRsp>
     _instance;
} _PhotoDataRsp_default_instance_;
class NbfsUploadedPhotoMediaDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<NbfsUploadedPhotoMedia>
     _instance;
} _NbfsUploadedPhotoMedia_default_instance_;
class NbfsUploadedDocumentMediaDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<NbfsUploadedDocumentMedia>
     _instance;
} _NbfsUploadedDocumentMedia_default_instance_;
class DocumentIdDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<DocumentId>
     _instance;
} _DocumentId_default_instance_;
class DocumentAttributeListDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<DocumentAttributeList>
     _instance;
} _DocumentAttributeList_default_instance_;
class DocumentIdListDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<DocumentIdList>
     _instance;
} _DocumentIdList_default_instance_;
class DocumentListDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<DocumentList>
     _instance;
} _DocumentList_default_instance_;

namespace protobuf_nbfs_5fservice_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[9];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UploadPhotoFileRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UploadPhotoFileRequest, ownerid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UploadPhotoFileRequest, file_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetPhotoFileDataRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetPhotoFileDataRequest, photo_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PhotoDataRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PhotoDataRsp, photo_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PhotoDataRsp, access_hash_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PhotoDataRsp, date_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PhotoDataRsp, size_list_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NbfsUploadedPhotoMedia, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NbfsUploadedPhotoMedia, ownerid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NbfsUploadedPhotoMedia, media_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NbfsUploadedDocumentMedia, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NbfsUploadedDocumentMedia, ownerid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NbfsUploadedDocumentMedia, media_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DocumentId, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DocumentId, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DocumentId, access_hash_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DocumentId, version_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DocumentAttributeList, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DocumentAttributeList, attributes_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DocumentIdList, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DocumentIdList, id_list_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DocumentList, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DocumentList, documents_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(UploadPhotoFileRequest)},
  { 7, -1, sizeof(GetPhotoFileDataRequest)},
  { 13, -1, sizeof(PhotoDataRsp)},
  { 22, -1, sizeof(NbfsUploadedPhotoMedia)},
  { 29, -1, sizeof(NbfsUploadedDocumentMedia)},
  { 36, -1, sizeof(DocumentId)},
  { 44, -1, sizeof(DocumentAttributeList)},
  { 50, -1, sizeof(DocumentIdList)},
  { 56, -1, sizeof(DocumentList)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_UploadPhotoFileRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GetPhotoFileDataRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_PhotoDataRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_NbfsUploadedPhotoMedia_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_NbfsUploadedDocumentMedia_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_DocumentId_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_DocumentAttributeList_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_DocumentIdList_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_DocumentList_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "nbfs_service.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 9);
}

}  // namespace
void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  ::mtproto::protobuf_schema_2etl_2esync_2eproto::InitDefaults();
  _UploadPhotoFileRequest_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_UploadPhotoFileRequest_default_instance_);_GetPhotoFileDataRequest_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_GetPhotoFileDataRequest_default_instance_);_PhotoDataRsp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_PhotoDataRsp_default_instance_);_NbfsUploadedPhotoMedia_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_NbfsUploadedPhotoMedia_default_instance_);_NbfsUploadedDocumentMedia_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_NbfsUploadedDocumentMedia_default_instance_);_DocumentId_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_DocumentId_default_instance_);_DocumentAttributeList_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_DocumentAttributeList_default_instance_);_DocumentIdList_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_DocumentIdList_default_instance_);_DocumentList_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_DocumentList_default_instance_);_UploadPhotoFileRequest_default_instance_._instance.get_mutable()->file_ = const_cast< ::mtproto::InputFile*>(
      ::mtproto::InputFile::internal_default_instance());
  _NbfsUploadedPhotoMedia_default_instance_._instance.get_mutable()->media_ = const_cast< ::mtproto::TL_inputMediaUploadedPhoto*>(
      ::mtproto::TL_inputMediaUploadedPhoto::internal_default_instance());
  _NbfsUploadedDocumentMedia_default_instance_._instance.get_mutable()->media_ = const_cast< ::mtproto::TL_inputMediaUploadedDocument*>(
      ::mtproto::TL_inputMediaUploadedDocument::internal_default_instance());
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
namespace {
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\022nbfs_service.proto\022\007mtproto\032\024schema.tl"
      ".sync.proto\"K\n\026UploadPhotoFileRequest\022\017\n"
      "\007ownerId\030\001 \001(\003\022 \n\004file\030\002 \001(\0132\022.mtproto.I"
      "nputFile\"+\n\027GetPhotoFileDataRequest\022\020\n\010p"
      "hoto_id\030\001 \001(\003\"j\n\014PhotoDataRsp\022\020\n\010photo_i"
      "d\030\001 \001(\003\022\023\n\013access_hash\030\002 \001(\003\022\014\n\004date\030\003 \001"
      "(\005\022%\n\tsize_list\030\004 \003(\0132\022.mtproto.PhotoSiz"
      "e\"]\n\026NbfsUploadedPhotoMedia\022\017\n\007ownerId\030\001"
      " \001(\003\0222\n\005media\030\002 \001(\0132#.mtproto.TL_inputMe"
      "diaUploadedPhoto\"c\n\031NbfsUploadedDocument"
      "Media\022\017\n\007ownerId\030\001 \001(\003\0225\n\005media\030\002 \001(\0132&."
      "mtproto.TL_inputMediaUploadedDocument\">\n"
      "\nDocumentId\022\n\n\002id\030\001 \001(\003\022\023\n\013access_hash\030\002"
      " \001(\003\022\017\n\007version\030\003 \001(\005\"G\n\025DocumentAttribu"
      "teList\022.\n\nattributes\030\001 \003(\0132\032.mtproto.Doc"
      "umentAttribute\"!\n\016DocumentIdList\022\017\n\007id_l"
      "ist\030\001 \003(\003\"4\n\014DocumentList\022$\n\tdocuments\030\001"
      " \003(\0132\021.mtproto.Document2\356\003\n\007RPCNbfs\022N\n\024n"
      "bfs_uploadPhotoFile\022\037.mtproto.UploadPhot"
      "oFileRequest\032\025.mtproto.PhotoDataRsp\022P\n\025n"
      "bfs_getPhotoFileData\022 .mtproto.GetPhotoF"
      "ileDataRequest\032\025.mtproto.PhotoDataRsp\022Y\n"
      "\027nbfs_uploadedPhotoMedia\022\037.mtproto.NbfsU"
      "ploadedPhotoMedia\032\035.mtproto.TL_messageMe"
      "diaPhoto\022b\n\032nbfs_uploadedDocumentMedia\022\""
      ".mtproto.NbfsUploadedDocumentMedia\032 .mtp"
      "roto.TL_messageMediaDocument\022:\n\020nbfs_get"
      "Document\022\023.mtproto.DocumentId\032\021.mtproto."
      "Document\022F\n\024nbfs_getDocumentList\022\027.mtpro"
      "to.DocumentIdList\032\025.mtproto.DocumentList"
      "B%\n\023com.nebulaim.zprotoB\nZProtoNbfsH\002P\001b"
      "\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 1247);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "nbfs_service.proto", &protobuf_RegisterTypes);
  ::mtproto::protobuf_schema_2etl_2esync_2eproto::AddDescriptors();
}
} // anonymous namespace

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_nbfs_5fservice_2eproto


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UploadPhotoFileRequest::kOwnerIdFieldNumber;
const int UploadPhotoFileRequest::kFileFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UploadPhotoFileRequest::UploadPhotoFileRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_nbfs_5fservice_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.UploadPhotoFileRequest)
}
UploadPhotoFileRequest::UploadPhotoFileRequest(const UploadPhotoFileRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_file()) {
    file_ = new ::mtproto::InputFile(*from.file_);
  } else {
    file_ = NULL;
  }
  ownerid_ = from.ownerid_;
  // @@protoc_insertion_point(copy_constructor:mtproto.UploadPhotoFileRequest)
}

void UploadPhotoFileRequest::SharedCtor() {
  ::memset(&file_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ownerid_) -
      reinterpret_cast<char*>(&file_)) + sizeof(ownerid_));
  _cached_size_ = 0;
}

UploadPhotoFileRequest::~UploadPhotoFileRequest() {
  // @@protoc_insertion_point(destructor:mtproto.UploadPhotoFileRequest)
  SharedDtor();
}

void UploadPhotoFileRequest::SharedDtor() {
  if (this != internal_default_instance()) delete file_;
}

void UploadPhotoFileRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UploadPhotoFileRequest::descriptor() {
  protobuf_nbfs_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_nbfs_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UploadPhotoFileRequest& UploadPhotoFileRequest::default_instance() {
  protobuf_nbfs_5fservice_2eproto::InitDefaults();
  return *internal_default_instance();
}

UploadPhotoFileRequest* UploadPhotoFileRequest::New(::google::protobuf::Arena* arena) const {
  UploadPhotoFileRequest* n = new UploadPhotoFileRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UploadPhotoFileRequest::Swap(UploadPhotoFileRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UploadPhotoFileRequest::InternalSwap(UploadPhotoFileRequest* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata UploadPhotoFileRequest::GetMetadata() const {
  protobuf_nbfs_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_nbfs_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// UploadPhotoFileRequest

// int64 ownerId = 1;
void UploadPhotoFileRequest::clear_ownerid() {
  ownerid_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 UploadPhotoFileRequest::ownerid() const {
  // @@protoc_insertion_point(field_get:mtproto.UploadPhotoFileRequest.ownerId)
  return ownerid_;
}
void UploadPhotoFileRequest::set_ownerid(::google::protobuf::int64 value) {
  
  ownerid_ = value;
  // @@protoc_insertion_point(field_set:mtproto.UploadPhotoFileRequest.ownerId)
}

// .mtproto.InputFile file = 2;
bool UploadPhotoFileRequest::has_file() const {
  return this != internal_default_instance() && file_ != NULL;
}
void UploadPhotoFileRequest::clear_file() {
  if (GetArenaNoVirtual() == NULL && file_ != NULL) delete file_;
  file_ = NULL;
}
const ::mtproto::InputFile& UploadPhotoFileRequest::file() const {
  const ::mtproto::InputFile* p = file_;
  // @@protoc_insertion_point(field_get:mtproto.UploadPhotoFileRequest.file)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::InputFile*>(
      &::mtproto::_InputFile_default_instance_);
}
::mtproto::InputFile* UploadPhotoFileRequest::mutable_file() {
  
  if (file_ == NULL) {
    file_ = new ::mtproto::InputFile;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.UploadPhotoFileRequest.file)
  return file_;
}
::mtproto::InputFile* UploadPhotoFileRequest::release_file() {
  // @@protoc_insertion_point(field_release:mtproto.UploadPhotoFileRequest.file)
  
  ::mtproto::InputFile* temp = file_;
  file_ = NULL;
  return temp;
}
void UploadPhotoFileRequest::set_allocated_file(::mtproto::InputFile* file) {
  delete file_;
  file_ = file;
  if (file) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.UploadPhotoFileRequest.file)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetPhotoFileDataRequest::kPhotoIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetPhotoFileDataRequest::GetPhotoFileDataRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_nbfs_5fservice_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.GetPhotoFileDataRequest)
}
GetPhotoFileDataRequest::GetPhotoFileDataRequest(const GetPhotoFileDataRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  photo_id_ = from.photo_id_;
  // @@protoc_insertion_point(copy_constructor:mtproto.GetPhotoFileDataRequest)
}

void GetPhotoFileDataRequest::SharedCtor() {
  photo_id_ = GOOGLE_LONGLONG(0);
  _cached_size_ = 0;
}

GetPhotoFileDataRequest::~GetPhotoFileDataRequest() {
  // @@protoc_insertion_point(destructor:mtproto.GetPhotoFileDataRequest)
  SharedDtor();
}

void GetPhotoFileDataRequest::SharedDtor() {
}

void GetPhotoFileDataRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetPhotoFileDataRequest::descriptor() {
  protobuf_nbfs_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_nbfs_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetPhotoFileDataRequest& GetPhotoFileDataRequest::default_instance() {
  protobuf_nbfs_5fservice_2eproto::InitDefaults();
  return *internal_default_instance();
}

GetPhotoFileDataRequest* GetPhotoFileDataRequest::New(::google::protobuf::Arena* arena) const {
  GetPhotoFileDataRequest* n = new GetPhotoFileDataRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetPhotoFileDataRequest::Swap(GetPhotoFileDataRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetPhotoFileDataRequest::InternalSwap(GetPhotoFileDataRequest* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata GetPhotoFileDataRequest::GetMetadata() const {
  protobuf_nbfs_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_nbfs_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetPhotoFileDataRequest

// int64 photo_id = 1;
void GetPhotoFileDataRequest::clear_photo_id() {
  photo_id_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 GetPhotoFileDataRequest::photo_id() const {
  // @@protoc_insertion_point(field_get:mtproto.GetPhotoFileDataRequest.photo_id)
  return photo_id_;
}
void GetPhotoFileDataRequest::set_photo_id(::google::protobuf::int64 value) {
  
  photo_id_ = value;
  // @@protoc_insertion_point(field_set:mtproto.GetPhotoFileDataRequest.photo_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PhotoDataRsp::kPhotoIdFieldNumber;
const int PhotoDataRsp::kAccessHashFieldNumber;
const int PhotoDataRsp::kDateFieldNumber;
const int PhotoDataRsp::kSizeListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PhotoDataRsp::PhotoDataRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_nbfs_5fservice_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.PhotoDataRsp)
}
PhotoDataRsp::PhotoDataRsp(const PhotoDataRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      size_list_(from.size_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&photo_id_, &from.photo_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&date_) -
    reinterpret_cast<char*>(&photo_id_)) + sizeof(date_));
  // @@protoc_insertion_point(copy_constructor:mtproto.PhotoDataRsp)
}

void PhotoDataRsp::SharedCtor() {
  ::memset(&photo_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&date_) -
      reinterpret_cast<char*>(&photo_id_)) + sizeof(date_));
  _cached_size_ = 0;
}

PhotoDataRsp::~PhotoDataRsp() {
  // @@protoc_insertion_point(destructor:mtproto.PhotoDataRsp)
  SharedDtor();
}

void PhotoDataRsp::SharedDtor() {
}

void PhotoDataRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PhotoDataRsp::descriptor() {
  protobuf_nbfs_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_nbfs_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PhotoDataRsp& PhotoDataRsp::default_instance() {
  protobuf_nbfs_5fservice_2eproto::InitDefaults();
  return *internal_default_instance();
}

PhotoDataRsp* PhotoDataRsp::New(::google::protobuf::Arena* arena) const {
  PhotoDataRsp* n = new PhotoDataRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PhotoDataRsp::Swap(PhotoDataRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PhotoDataRsp::InternalSwap(PhotoDataRsp* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata PhotoDataRsp::GetMetadata() const {
  protobuf_nbfs_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_nbfs_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PhotoDataRsp

// int64 photo_id = 1;
void PhotoDataRsp::clear_photo_id() {
  photo_id_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 PhotoDataRsp::photo_id() const {
  // @@protoc_insertion_point(field_get:mtproto.PhotoDataRsp.photo_id)
  return photo_id_;
}
void PhotoDataRsp::set_photo_id(::google::protobuf::int64 value) {
  
  photo_id_ = value;
  // @@protoc_insertion_point(field_set:mtproto.PhotoDataRsp.photo_id)
}

// int64 access_hash = 2;
void PhotoDataRsp::clear_access_hash() {
  access_hash_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 PhotoDataRsp::access_hash() const {
  // @@protoc_insertion_point(field_get:mtproto.PhotoDataRsp.access_hash)
  return access_hash_;
}
void PhotoDataRsp::set_access_hash(::google::protobuf::int64 value) {
  
  access_hash_ = value;
  // @@protoc_insertion_point(field_set:mtproto.PhotoDataRsp.access_hash)
}

// int32 date = 3;
void PhotoDataRsp::clear_date() {
  date_ = 0;
}
::google::protobuf::int32 PhotoDataRsp::date() const {
  // @@protoc_insertion_point(field_get:mtproto.PhotoDataRsp.date)
  return date_;
}
void PhotoDataRsp::set_date(::google::protobuf::int32 value) {
  
  date_ = value;
  // @@protoc_insertion_point(field_set:mtproto.PhotoDataRsp.date)
}

// repeated .mtproto.PhotoSize size_list = 4;
int PhotoDataRsp::size_list_size() const {
  return size_list_.size();
}
void PhotoDataRsp::clear_size_list() {
  size_list_.Clear();
}
const ::mtproto::PhotoSize& PhotoDataRsp::size_list(int index) const {
  // @@protoc_insertion_point(field_get:mtproto.PhotoDataRsp.size_list)
  return size_list_.Get(index);
}
::mtproto::PhotoSize* PhotoDataRsp::mutable_size_list(int index) {
  // @@protoc_insertion_point(field_mutable:mtproto.PhotoDataRsp.size_list)
  return size_list_.Mutable(index);
}
::mtproto::PhotoSize* PhotoDataRsp::add_size_list() {
  // @@protoc_insertion_point(field_add:mtproto.PhotoDataRsp.size_list)
  return size_list_.Add();
}
::google::protobuf::RepeatedPtrField< ::mtproto::PhotoSize >*
PhotoDataRsp::mutable_size_list() {
  // @@protoc_insertion_point(field_mutable_list:mtproto.PhotoDataRsp.size_list)
  return &size_list_;
}
const ::google::protobuf::RepeatedPtrField< ::mtproto::PhotoSize >&
PhotoDataRsp::size_list() const {
  // @@protoc_insertion_point(field_list:mtproto.PhotoDataRsp.size_list)
  return size_list_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int NbfsUploadedPhotoMedia::kOwnerIdFieldNumber;
const int NbfsUploadedPhotoMedia::kMediaFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

NbfsUploadedPhotoMedia::NbfsUploadedPhotoMedia()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_nbfs_5fservice_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.NbfsUploadedPhotoMedia)
}
NbfsUploadedPhotoMedia::NbfsUploadedPhotoMedia(const NbfsUploadedPhotoMedia& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_media()) {
    media_ = new ::mtproto::TL_inputMediaUploadedPhoto(*from.media_);
  } else {
    media_ = NULL;
  }
  ownerid_ = from.ownerid_;
  // @@protoc_insertion_point(copy_constructor:mtproto.NbfsUploadedPhotoMedia)
}

void NbfsUploadedPhotoMedia::SharedCtor() {
  ::memset(&media_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ownerid_) -
      reinterpret_cast<char*>(&media_)) + sizeof(ownerid_));
  _cached_size_ = 0;
}

NbfsUploadedPhotoMedia::~NbfsUploadedPhotoMedia() {
  // @@protoc_insertion_point(destructor:mtproto.NbfsUploadedPhotoMedia)
  SharedDtor();
}

void NbfsUploadedPhotoMedia::SharedDtor() {
  if (this != internal_default_instance()) delete media_;
}

void NbfsUploadedPhotoMedia::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* NbfsUploadedPhotoMedia::descriptor() {
  protobuf_nbfs_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_nbfs_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const NbfsUploadedPhotoMedia& NbfsUploadedPhotoMedia::default_instance() {
  protobuf_nbfs_5fservice_2eproto::InitDefaults();
  return *internal_default_instance();
}

NbfsUploadedPhotoMedia* NbfsUploadedPhotoMedia::New(::google::protobuf::Arena* arena) const {
  NbfsUploadedPhotoMedia* n = new NbfsUploadedPhotoMedia;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void NbfsUploadedPhotoMedia::Swap(NbfsUploadedPhotoMedia* other) {
  if (other == this) return;
  InternalSwap(other);
}
void NbfsUploadedPhotoMedia::InternalSwap(NbfsUploadedPhotoMedia* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata NbfsUploadedPhotoMedia::GetMetadata() const {
  protobuf_nbfs_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_nbfs_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// NbfsUploadedPhotoMedia

// int64 ownerId = 1;
void NbfsUploadedPhotoMedia::clear_ownerid() {
  ownerid_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 NbfsUploadedPhotoMedia::ownerid() const {
  // @@protoc_insertion_point(field_get:mtproto.NbfsUploadedPhotoMedia.ownerId)
  return ownerid_;
}
void NbfsUploadedPhotoMedia::set_ownerid(::google::protobuf::int64 value) {
  
  ownerid_ = value;
  // @@protoc_insertion_point(field_set:mtproto.NbfsUploadedPhotoMedia.ownerId)
}

// .mtproto.TL_inputMediaUploadedPhoto media = 2;
bool NbfsUploadedPhotoMedia::has_media() const {
  return this != internal_default_instance() && media_ != NULL;
}
void NbfsUploadedPhotoMedia::clear_media() {
  if (GetArenaNoVirtual() == NULL && media_ != NULL) delete media_;
  media_ = NULL;
}
const ::mtproto::TL_inputMediaUploadedPhoto& NbfsUploadedPhotoMedia::media() const {
  const ::mtproto::TL_inputMediaUploadedPhoto* p = media_;
  // @@protoc_insertion_point(field_get:mtproto.NbfsUploadedPhotoMedia.media)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::TL_inputMediaUploadedPhoto*>(
      &::mtproto::_TL_inputMediaUploadedPhoto_default_instance_);
}
::mtproto::TL_inputMediaUploadedPhoto* NbfsUploadedPhotoMedia::mutable_media() {
  
  if (media_ == NULL) {
    media_ = new ::mtproto::TL_inputMediaUploadedPhoto;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.NbfsUploadedPhotoMedia.media)
  return media_;
}
::mtproto::TL_inputMediaUploadedPhoto* NbfsUploadedPhotoMedia::release_media() {
  // @@protoc_insertion_point(field_release:mtproto.NbfsUploadedPhotoMedia.media)
  
  ::mtproto::TL_inputMediaUploadedPhoto* temp = media_;
  media_ = NULL;
  return temp;
}
void NbfsUploadedPhotoMedia::set_allocated_media(::mtproto::TL_inputMediaUploadedPhoto* media) {
  delete media_;
  media_ = media;
  if (media) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.NbfsUploadedPhotoMedia.media)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int NbfsUploadedDocumentMedia::kOwnerIdFieldNumber;
const int NbfsUploadedDocumentMedia::kMediaFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

NbfsUploadedDocumentMedia::NbfsUploadedDocumentMedia()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_nbfs_5fservice_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.NbfsUploadedDocumentMedia)
}
NbfsUploadedDocumentMedia::NbfsUploadedDocumentMedia(const NbfsUploadedDocumentMedia& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_media()) {
    media_ = new ::mtproto::TL_inputMediaUploadedDocument(*from.media_);
  } else {
    media_ = NULL;
  }
  ownerid_ = from.ownerid_;
  // @@protoc_insertion_point(copy_constructor:mtproto.NbfsUploadedDocumentMedia)
}

void NbfsUploadedDocumentMedia::SharedCtor() {
  ::memset(&media_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ownerid_) -
      reinterpret_cast<char*>(&media_)) + sizeof(ownerid_));
  _cached_size_ = 0;
}

NbfsUploadedDocumentMedia::~NbfsUploadedDocumentMedia() {
  // @@protoc_insertion_point(destructor:mtproto.NbfsUploadedDocumentMedia)
  SharedDtor();
}

void NbfsUploadedDocumentMedia::SharedDtor() {
  if (this != internal_default_instance()) delete media_;
}

void NbfsUploadedDocumentMedia::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* NbfsUploadedDocumentMedia::descriptor() {
  protobuf_nbfs_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_nbfs_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const NbfsUploadedDocumentMedia& NbfsUploadedDocumentMedia::default_instance() {
  protobuf_nbfs_5fservice_2eproto::InitDefaults();
  return *internal_default_instance();
}

NbfsUploadedDocumentMedia* NbfsUploadedDocumentMedia::New(::google::protobuf::Arena* arena) const {
  NbfsUploadedDocumentMedia* n = new NbfsUploadedDocumentMedia;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void NbfsUploadedDocumentMedia::Swap(NbfsUploadedDocumentMedia* other) {
  if (other == this) return;
  InternalSwap(other);
}
void NbfsUploadedDocumentMedia::InternalSwap(NbfsUploadedDocumentMedia* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata NbfsUploadedDocumentMedia::GetMetadata() const {
  protobuf_nbfs_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_nbfs_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// NbfsUploadedDocumentMedia

// int64 ownerId = 1;
void NbfsUploadedDocumentMedia::clear_ownerid() {
  ownerid_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 NbfsUploadedDocumentMedia::ownerid() const {
  // @@protoc_insertion_point(field_get:mtproto.NbfsUploadedDocumentMedia.ownerId)
  return ownerid_;
}
void NbfsUploadedDocumentMedia::set_ownerid(::google::protobuf::int64 value) {
  
  ownerid_ = value;
  // @@protoc_insertion_point(field_set:mtproto.NbfsUploadedDocumentMedia.ownerId)
}

// .mtproto.TL_inputMediaUploadedDocument media = 2;
bool NbfsUploadedDocumentMedia::has_media() const {
  return this != internal_default_instance() && media_ != NULL;
}
void NbfsUploadedDocumentMedia::clear_media() {
  if (GetArenaNoVirtual() == NULL && media_ != NULL) delete media_;
  media_ = NULL;
}
const ::mtproto::TL_inputMediaUploadedDocument& NbfsUploadedDocumentMedia::media() const {
  const ::mtproto::TL_inputMediaUploadedDocument* p = media_;
  // @@protoc_insertion_point(field_get:mtproto.NbfsUploadedDocumentMedia.media)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::TL_inputMediaUploadedDocument*>(
      &::mtproto::_TL_inputMediaUploadedDocument_default_instance_);
}
::mtproto::TL_inputMediaUploadedDocument* NbfsUploadedDocumentMedia::mutable_media() {
  
  if (media_ == NULL) {
    media_ = new ::mtproto::TL_inputMediaUploadedDocument;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.NbfsUploadedDocumentMedia.media)
  return media_;
}
::mtproto::TL_inputMediaUploadedDocument* NbfsUploadedDocumentMedia::release_media() {
  // @@protoc_insertion_point(field_release:mtproto.NbfsUploadedDocumentMedia.media)
  
  ::mtproto::TL_inputMediaUploadedDocument* temp = media_;
  media_ = NULL;
  return temp;
}
void NbfsUploadedDocumentMedia::set_allocated_media(::mtproto::TL_inputMediaUploadedDocument* media) {
  delete media_;
  media_ = media;
  if (media) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.NbfsUploadedDocumentMedia.media)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DocumentId::kIdFieldNumber;
const int DocumentId::kAccessHashFieldNumber;
const int DocumentId::kVersionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DocumentId::DocumentId()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_nbfs_5fservice_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.DocumentId)
}
DocumentId::DocumentId(const DocumentId& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&version_) -
    reinterpret_cast<char*>(&id_)) + sizeof(version_));
  // @@protoc_insertion_point(copy_constructor:mtproto.DocumentId)
}

void DocumentId::SharedCtor() {
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&version_) -
      reinterpret_cast<char*>(&id_)) + sizeof(version_));
  _cached_size_ = 0;
}

DocumentId::~DocumentId() {
  // @@protoc_insertion_point(destructor:mtproto.DocumentId)
  SharedDtor();
}

void DocumentId::SharedDtor() {
}

void DocumentId::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DocumentId::descriptor() {
  protobuf_nbfs_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_nbfs_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DocumentId& DocumentId::default_instance() {
  protobuf_nbfs_5fservice_2eproto::InitDefaults();
  return *internal_default_instance();
}

DocumentId* DocumentId::New(::google::protobuf::Arena* arena) const {
  DocumentId* n = new DocumentId;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DocumentId::Swap(DocumentId* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DocumentId::InternalSwap(DocumentId* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata DocumentId::GetMetadata() const {
  protobuf_nbfs_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_nbfs_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DocumentId

// int64 id = 1;
void DocumentId::clear_id() {
  id_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 DocumentId::id() const {
  // @@protoc_insertion_point(field_get:mtproto.DocumentId.id)
  return id_;
}
void DocumentId::set_id(::google::protobuf::int64 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:mtproto.DocumentId.id)
}

// int64 access_hash = 2;
void DocumentId::clear_access_hash() {
  access_hash_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 DocumentId::access_hash() const {
  // @@protoc_insertion_point(field_get:mtproto.DocumentId.access_hash)
  return access_hash_;
}
void DocumentId::set_access_hash(::google::protobuf::int64 value) {
  
  access_hash_ = value;
  // @@protoc_insertion_point(field_set:mtproto.DocumentId.access_hash)
}

// int32 version = 3;
void DocumentId::clear_version() {
  version_ = 0;
}
::google::protobuf::int32 DocumentId::version() const {
  // @@protoc_insertion_point(field_get:mtproto.DocumentId.version)
  return version_;
}
void DocumentId::set_version(::google::protobuf::int32 value) {
  
  version_ = value;
  // @@protoc_insertion_point(field_set:mtproto.DocumentId.version)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DocumentAttributeList::kAttributesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DocumentAttributeList::DocumentAttributeList()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_nbfs_5fservice_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.DocumentAttributeList)
}
DocumentAttributeList::DocumentAttributeList(const DocumentAttributeList& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      attributes_(from.attributes_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:mtproto.DocumentAttributeList)
}

void DocumentAttributeList::SharedCtor() {
  _cached_size_ = 0;
}

DocumentAttributeList::~DocumentAttributeList() {
  // @@protoc_insertion_point(destructor:mtproto.DocumentAttributeList)
  SharedDtor();
}

void DocumentAttributeList::SharedDtor() {
}

void DocumentAttributeList::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DocumentAttributeList::descriptor() {
  protobuf_nbfs_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_nbfs_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DocumentAttributeList& DocumentAttributeList::default_instance() {
  protobuf_nbfs_5fservice_2eproto::InitDefaults();
  return *internal_default_instance();
}

DocumentAttributeList* DocumentAttributeList::New(::google::protobuf::Arena* arena) const {
  DocumentAttributeList* n = new DocumentAttributeList;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DocumentAttributeList::Swap(DocumentAttributeList* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DocumentAttributeList::InternalSwap(DocumentAttributeList* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata DocumentAttributeList::GetMetadata() const {
  protobuf_nbfs_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_nbfs_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DocumentAttributeList

// repeated .mtproto.DocumentAttribute attributes = 1;
int DocumentAttributeList::attributes_size() const {
  return attributes_.size();
}
void DocumentAttributeList::clear_attributes() {
  attributes_.Clear();
}
const ::mtproto::DocumentAttribute& DocumentAttributeList::attributes(int index) const {
  // @@protoc_insertion_point(field_get:mtproto.DocumentAttributeList.attributes)
  return attributes_.Get(index);
}
::mtproto::DocumentAttribute* DocumentAttributeList::mutable_attributes(int index) {
  // @@protoc_insertion_point(field_mutable:mtproto.DocumentAttributeList.attributes)
  return attributes_.Mutable(index);
}
::mtproto::DocumentAttribute* DocumentAttributeList::add_attributes() {
  // @@protoc_insertion_point(field_add:mtproto.DocumentAttributeList.attributes)
  return attributes_.Add();
}
::google::protobuf::RepeatedPtrField< ::mtproto::DocumentAttribute >*
DocumentAttributeList::mutable_attributes() {
  // @@protoc_insertion_point(field_mutable_list:mtproto.DocumentAttributeList.attributes)
  return &attributes_;
}
const ::google::protobuf::RepeatedPtrField< ::mtproto::DocumentAttribute >&
DocumentAttributeList::attributes() const {
  // @@protoc_insertion_point(field_list:mtproto.DocumentAttributeList.attributes)
  return attributes_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DocumentIdList::kIdListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DocumentIdList::DocumentIdList()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_nbfs_5fservice_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.DocumentIdList)
}
DocumentIdList::DocumentIdList(const DocumentIdList& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      id_list_(from.id_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:mtproto.DocumentIdList)
}

void DocumentIdList::SharedCtor() {
  _cached_size_ = 0;
}

DocumentIdList::~DocumentIdList() {
  // @@protoc_insertion_point(destructor:mtproto.DocumentIdList)
  SharedDtor();
}

void DocumentIdList::SharedDtor() {
}

void DocumentIdList::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DocumentIdList::descriptor() {
  protobuf_nbfs_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_nbfs_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DocumentIdList& DocumentIdList::default_instance() {
  protobuf_nbfs_5fservice_2eproto::InitDefaults();
  return *internal_default_instance();
}

DocumentIdList* DocumentIdList::New(::google::protobuf::Arena* arena) const {
  DocumentIdList* n = new DocumentIdList;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DocumentIdList::Swap(DocumentIdList* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DocumentIdList::InternalSwap(DocumentIdList* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata DocumentIdList::GetMetadata() const {
  protobuf_nbfs_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_nbfs_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DocumentIdList

// repeated int64 id_list = 1;
int DocumentIdList::id_list_size() const {
  return id_list_.size();
}
void DocumentIdList::clear_id_list() {
  id_list_.Clear();
}
::google::protobuf::int64 DocumentIdList::id_list(int index) const {
  // @@protoc_insertion_point(field_get:mtproto.DocumentIdList.id_list)
  return id_list_.Get(index);
}
void DocumentIdList::set_id_list(int index, ::google::protobuf::int64 value) {
  id_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:mtproto.DocumentIdList.id_list)
}
void DocumentIdList::add_id_list(::google::protobuf::int64 value) {
  id_list_.Add(value);
  // @@protoc_insertion_point(field_add:mtproto.DocumentIdList.id_list)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
DocumentIdList::id_list() const {
  // @@protoc_insertion_point(field_list:mtproto.DocumentIdList.id_list)
  return id_list_;
}
::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
DocumentIdList::mutable_id_list() {
  // @@protoc_insertion_point(field_mutable_list:mtproto.DocumentIdList.id_list)
  return &id_list_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DocumentList::kDocumentsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DocumentList::DocumentList()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_nbfs_5fservice_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.DocumentList)
}
DocumentList::DocumentList(const DocumentList& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      documents_(from.documents_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:mtproto.DocumentList)
}

void DocumentList::SharedCtor() {
  _cached_size_ = 0;
}

DocumentList::~DocumentList() {
  // @@protoc_insertion_point(destructor:mtproto.DocumentList)
  SharedDtor();
}

void DocumentList::SharedDtor() {
}

void DocumentList::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DocumentList::descriptor() {
  protobuf_nbfs_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_nbfs_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DocumentList& DocumentList::default_instance() {
  protobuf_nbfs_5fservice_2eproto::InitDefaults();
  return *internal_default_instance();
}

DocumentList* DocumentList::New(::google::protobuf::Arena* arena) const {
  DocumentList* n = new DocumentList;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DocumentList::Swap(DocumentList* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DocumentList::InternalSwap(DocumentList* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata DocumentList::GetMetadata() const {
  protobuf_nbfs_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_nbfs_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DocumentList

// repeated .mtproto.Document documents = 1;
int DocumentList::documents_size() const {
  return documents_.size();
}
void DocumentList::clear_documents() {
  documents_.Clear();
}
const ::mtproto::Document& DocumentList::documents(int index) const {
  // @@protoc_insertion_point(field_get:mtproto.DocumentList.documents)
  return documents_.Get(index);
}
::mtproto::Document* DocumentList::mutable_documents(int index) {
  // @@protoc_insertion_point(field_mutable:mtproto.DocumentList.documents)
  return documents_.Mutable(index);
}
::mtproto::Document* DocumentList::add_documents() {
  // @@protoc_insertion_point(field_add:mtproto.DocumentList.documents)
  return documents_.Add();
}
::google::protobuf::RepeatedPtrField< ::mtproto::Document >*
DocumentList::mutable_documents() {
  // @@protoc_insertion_point(field_mutable_list:mtproto.DocumentList.documents)
  return &documents_;
}
const ::google::protobuf::RepeatedPtrField< ::mtproto::Document >&
DocumentList::documents() const {
  // @@protoc_insertion_point(field_list:mtproto.DocumentList.documents)
  return documents_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace mtproto

// @@protoc_insertion_point(global_scope)
