// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: schema.tl.sync_service.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "schema.tl.sync_service.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace mtproto {
class TL_langpack_getLanguagesLayer70DefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TL_langpack_getLanguagesLayer70>
     _instance;
} _TL_langpack_getLanguagesLayer70_default_instance_;
class TL_help_getSchemeDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TL_help_getScheme>
     _instance;
} _TL_help_getScheme_default_instance_;
class TL_messages_readHistoryLayer2DefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TL_messages_readHistoryLayer2>
     _instance;
} _TL_messages_readHistoryLayer2_default_instance_;
class TL_help_getInviteTextLayer46DefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TL_help_getInviteTextLayer46>
     _instance;
} _TL_help_getInviteTextLayer46_default_instance_;
class TL_help_getAppUpdateLayer46DefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TL_help_getAppUpdateLayer46>
     _instance;
} _TL_help_getAppUpdateLayer46_default_instance_;
class TL_updates_getChannelDifferenceLayer46DefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TL_updates_getChannelDifferenceLayer46>
     _instance;
} _TL_updates_getChannelDifferenceLayer46_default_instance_;
class TL_auth_sendCodeLayer51DefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TL_auth_sendCodeLayer51>
     _instance;
} _TL_auth_sendCodeLayer51_default_instance_;
class TL_messages_getHistoryLayer51DefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TL_messages_getHistoryLayer51>
     _instance;
} _TL_messages_getHistoryLayer51_default_instance_;
class TL_initConnectionLayer68DefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TL_initConnectionLayer68>
     _instance;
} _TL_initConnectionLayer68_default_instance_;
class TL_messages_searchLayer68DefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TL_messages_searchLayer68>
     _instance;
} _TL_messages_searchLayer68_default_instance_;
class TL_account_registerDeviceLayer71DefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TL_account_registerDeviceLayer71>
     _instance;
} _TL_account_registerDeviceLayer71_default_instance_;
class TL_account_unregisterDeviceLayer71DefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TL_account_unregisterDeviceLayer71>
     _instance;
} _TL_account_unregisterDeviceLayer71_default_instance_;
class TL_langpack_getLangPackLayer71DefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TL_langpack_getLangPackLayer71>
     _instance;
} _TL_langpack_getLangPackLayer71_default_instance_;
class TL_invokeAfterMsgDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TL_invokeAfterMsg>
     _instance;
} _TL_invokeAfterMsg_default_instance_;
class TL_invokeAfterMsgsDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TL_invokeAfterMsgs>
     _instance;
} _TL_invokeAfterMsgs_default_instance_;
class TL_initConnectionDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TL_initConnection>
     _instance;
} _TL_initConnection_default_instance_;
class TL_invokeWithLayerDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TL_invokeWithLayer>
     _instance;
} _TL_invokeWithLayer_default_instance_;
class TL_invokeWithoutUpdatesDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TL_invokeWithoutUpdates>
     _instance;
} _TL_invokeWithoutUpdates_default_instance_;
class TL_invokeWithMessagesRangeDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TL_invokeWithMessagesRange>
     _instance;
} _TL_invokeWithMessagesRange_default_instance_;
class TL_invokeWithTakeoutDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TL_invokeWithTakeout>
     _instance;
} _TL_invokeWithTakeout_default_instance_;
class TL_auth_sendCodeDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TL_auth_sendCode>
     _instance;
} _TL_auth_sendCode_default_instance_;
class TL_auth_signUpDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TL_auth_signUp>
     _instance;
} _TL_auth_signUp_default_instance_;
class TL_auth_signInDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TL_auth_signIn>
     _instance;
} _TL_auth_signIn_default_instance_;
class TL_auth_logOutDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TL_auth_logOut>
     _instance;
} _TL_auth_logOut_default_instance_;
class TL_auth_resetAuthorizationsDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TL_auth_resetAuthorizations>
     _instance;
} _TL_auth_resetAuthorizations_default_instance_;
class TL_auth_exportAuthorizationDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TL_auth_exportAuthorization>
     _instance;
} _TL_auth_exportAuthorization_default_instance_;
class TL_auth_importAuthorizationDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TL_auth_importAuthorization>
     _instance;
} _TL_auth_importAuthorization_default_instance_;
class TL_auth_bindTempAuthKeyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TL_auth_bindTempAuthKey>
     _instance;
} _TL_auth_bindTempAuthKey_default_instance_;
class TL_auth_importBotAuthorizationDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TL_auth_importBotAuthorization>
     _instance;
} _TL_auth_importBotAuthorization_default_instance_;
class TL_auth_checkPasswordDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TL_auth_checkPassword>
     _instance;
} _TL_auth_checkPassword_default_instance_;
class TL_auth_requestPasswordRecoveryDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TL_auth_requestPasswordRecovery>
     _instance;
} _TL_auth_requestPasswordRecovery_default_instance_;
class TL_auth_recoverPasswordDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TL_auth_recoverPassword>
     _instance;
} _TL_auth_recoverPassword_default_instance_;
class TL_auth_resendCodeDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TL_auth_resendCode>
     _instance;
} _TL_auth_resendCode_default_instance_;
class TL_auth_cancelCodeDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TL_auth_cancelCode>
     _instance;
} _TL_auth_cancelCode_default_instance_;
class TL_auth_dropTempAuthKeysDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TL_auth_dropTempAuthKeys>
     _instance;
} _TL_auth_dropTempAuthKeys_default_instance_;
class TL_account_registerDeviceDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TL_account_registerDevice>
     _instance;
} _TL_account_registerDevice_default_instance_;
class TL_account_unregisterDeviceDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TL_account_unregisterDevice>
     _instance;
} _TL_account_unregisterDevice_default_instance_;
class TL_account_updateNotifySettingsDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TL_account_updateNotifySettings>
     _instance;
} _TL_account_updateNotifySettings_default_instance_;
class TL_account_getNotifySettingsDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TL_account_getNotifySettings>
     _instance;
} _TL_account_getNotifySettings_default_instance_;
class TL_account_resetNotifySettingsDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TL_account_resetNotifySettings>
     _instance;
} _TL_account_resetNotifySettings_default_instance_;
class TL_account_updateProfileDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TL_account_updateProfile>
     _instance;
} _TL_account_updateProfile_default_instance_;
class TL_account_updateStatusDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TL_account_updateStatus>
     _instance;
} _TL_account_updateStatus_default_instance_;
class TL_account_getWallPapersDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TL_account_getWallPapers>
     _instance;
} _TL_account_getWallPapers_default_instance_;
class TL_account_reportPeerDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TL_account_reportPeer>
     _instance;
} _TL_account_reportPeer_default_instance_;
class TL_account_checkUsernameDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TL_account_checkUsername>
     _instance;
} _TL_account_checkUsername_default_instance_;
class TL_account_updateUsernameDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TL_account_updateUsername>
     _instance;
} _TL_account_updateUsername_default_instance_;
class TL_account_getPrivacyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TL_account_getPrivacy>
     _instance;
} _TL_account_getPrivacy_default_instance_;
class TL_account_setPrivacyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TL_account_setPrivacy>
     _instance;
} _TL_account_setPrivacy_default_instance_;
class TL_account_deleteAccountDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TL_account_deleteAccount>
     _instance;
} _TL_account_deleteAccount_default_instance_;
class TL_account_getAccountTTLDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TL_account_getAccountTTL>
     _instance;
} _TL_account_getAccountTTL_default_instance_;
class TL_account_setAccountTTLDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TL_account_setAccountTTL>
     _instance;
} _TL_account_setAccountTTL_default_instance_;
class TL_account_sendChangePhoneCodeDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TL_account_sendChangePhoneCode>
     _instance;
} _TL_account_sendChangePhoneCode_default_instance_;
class TL_account_changePhoneDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TL_account_changePhone>
     _instance;
} _TL_account_changePhone_default_instance_;
class TL_account_updateDeviceLockedDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TL_account_updateDeviceLocked>
     _instance;
} _TL_account_updateDeviceLocked_default_instance_;
class TL_account_getAuthorizationsDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TL_account_getAuthorizations>
     _instance;
} _TL_account_getAuthorizations_default_instance_;
class TL_account_resetAuthorizationDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TL_account_resetAuthorization>
     _instance;
} _TL_account_resetAuthorization_default_instance_;
class TL_account_getPasswordDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TL_account_getPassword>
     _instance;
} _TL_account_getPassword_default_instance_;
class TL_account_getPasswordSettingsDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TL_account_getPasswordSettings>
     _instance;
} _TL_account_getPasswordSettings_default_instance_;
class TL_account_updatePasswordSettingsDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TL_account_updatePasswordSettings>
     _instance;
} _TL_account_updatePasswordSettings_default_instance_;
class TL_account_sendConfirmPhoneCodeDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TL_account_sendConfirmPhoneCode>
     _instance;
} _TL_account_sendConfirmPhoneCode_default_instance_;
class TL_account_confirmPhoneDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TL_account_confirmPhone>
     _instance;
} _TL_account_confirmPhone_default_instance_;
class TL_account_getTmpPasswordDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TL_account_getTmpPassword>
     _instance;
} _TL_account_getTmpPassword_default_instance_;
class TL_account_getWebAuthorizationsDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TL_account_getWebAuthorizations>
     _instance;
} _TL_account_getWebAuthorizations_default_instance_;
class TL_account_resetWebAuthorizationDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TL_account_resetWebAuthorization>
     _instance;
} _TL_account_resetWebAuthorization_default_instance_;
class TL_account_resetWebAuthorizationsDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TL_account_resetWebAuthorizations>
     _instance;
} _TL_account_resetWebAuthorizations_default_instance_;
class TL_account_getAllSecureValuesDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TL_account_getAllSecureValues>
     _instance;
} _TL_account_getAllSecureValues_default_instance_;
class TL_account_getSecureValueDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TL_account_getSecureValue>
     _instance;
} _TL_account_getSecureValue_default_instance_;
class TL_account_saveSecureValueDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TL_account_saveSecureValue>
     _instance;
} _TL_account_saveSecureValue_default_instance_;
class TL_account_deleteSecureValueDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TL_account_deleteSecureValue>
     _instance;
} _TL_account_deleteSecureValue_default_instance_;
class TL_account_getAuthorizationFormDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TL_account_getAuthorizationForm>
     _instance;
} _TL_account_getAuthorizationForm_default_instance_;
class TL_account_acceptAuthorizationDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TL_account_acceptAuthorization>
     _instance;
} _TL_account_acceptAuthorization_default_instance_;
class TL_account_sendVerifyPhoneCodeDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TL_account_sendVerifyPhoneCode>
     _instance;
} _TL_account_sendVerifyPhoneCode_default_instance_;
class TL_account_verifyPhoneDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TL_account_verifyPhone>
     _instance;
} _TL_account_verifyPhone_default_instance_;
class TL_account_sendVerifyEmailCodeDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TL_account_sendVerifyEmailCode>
     _instance;
} _TL_account_sendVerifyEmailCode_default_instance_;
class TL_account_verifyEmailDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TL_account_verifyEmail>
     _instance;
} _TL_account_verifyEmail_default_instance_;
class TL_account_initTakeoutSessionDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TL_account_initTakeoutSession>
     _instance;
} _TL_account_initTakeoutSession_default_instance_;
class TL_account_finishTakeoutSessionDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TL_account_finishTakeoutSession>
     _instance;
} _TL_account_finishTakeoutSession_default_instance_;
class TL_users_getUsersDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TL_users_getUsers>
     _instance;
} _TL_users_getUsers_default_instance_;
class TL_users_getFullUserDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TL_users_getFullUser>
     _instance;
} _TL_users_getFullUser_default_instance_;
class TL_users_setSecureValueErrorsDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TL_users_setSecureValueErrors>
     _instance;
} _TL_users_setSecureValueErrors_default_instance_;
class TL_contacts_getStatusesDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TL_contacts_getStatuses>
     _instance;
} _TL_contacts_getStatuses_default_instance_;
class TL_contacts_getContactsDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TL_contacts_getContacts>
     _instance;
} _TL_contacts_getContacts_default_instance_;
class TL_contacts_importContactsDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TL_contacts_importContacts>
     _instance;
} _TL_contacts_importContacts_default_instance_;
class TL_contacts_deleteContactDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TL_contacts_deleteContact>
     _instance;
} _TL_contacts_deleteContact_default_instance_;
class TL_contacts_deleteContactsDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TL_contacts_deleteContacts>
     _instance;
} _TL_contacts_deleteContacts_default_instance_;
class TL_contacts_blockDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TL_contacts_block>
     _instance;
} _TL_contacts_block_default_instance_;
class TL_contacts_unblockDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TL_contacts_unblock>
     _instance;
} _TL_contacts_unblock_default_instance_;
class TL_contacts_getBlockedDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TL_contacts_getBlocked>
     _instance;
} _TL_contacts_getBlocked_default_instance_;
class TL_contacts_exportCardDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TL_contacts_exportCard>
     _instance;
} _TL_contacts_exportCard_default_instance_;
class TL_contacts_importCardDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TL_contacts_importCard>
     _instance;
} _TL_contacts_importCard_default_instance_;
class TL_contacts_searchDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TL_contacts_search>
     _instance;
} _TL_contacts_search_default_instance_;
class TL_contacts_resolveUsernameDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TL_contacts_resolveUsername>
     _instance;
} _TL_contacts_resolveUsername_default_instance_;
class TL_contacts_getTopPeersDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TL_contacts_getTopPeers>
     _instance;
} _TL_contacts_getTopPeers_default_instance_;
class TL_contacts_resetTopPeerRatingDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TL_contacts_resetTopPeerRating>
     _instance;
} _TL_contacts_resetTopPeerRating_default_instance_;
class TL_contacts_resetSavedDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TL_contacts_resetSaved>
     _instance;
} _TL_contacts_resetSaved_default_instance_;
class TL_contacts_getSavedDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TL_contacts_getSaved>
     _instance;
} _TL_contacts_getSaved_default_instance_;
class TL_contacts_toggleTopPeersDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TL_contacts_toggleTopPeers>
     _instance;
} _TL_contacts_toggleTopPeers_default_instance_;
class TL_messages_getMessagesDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TL_messages_getMessages>
     _instance;
} _TL_messages_getMessages_default_instance_;
class TL_messages_getDialogsDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TL_messages_getDialogs>
     _instance;
} _TL_messages_getDialogs_default_instance_;
class TL_messages_getHistoryDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TL_messages_getHistory>
     _instance;
} _TL_messages_getHistory_default_instance_;
class TL_messages_searchDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TL_messages_search>
     _instance;
} _TL_messages_search_default_instance_;
class TL_messages_readHistoryDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TL_messages_readHistory>
     _instance;
} _TL_messages_readHistory_default_instance_;
class TL_messages_deleteHistoryDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TL_messages_deleteHistory>
     _instance;
} _TL_messages_deleteHistory_default_instance_;
class TL_messages_deleteMessagesDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TL_messages_deleteMessages>
     _instance;
} _TL_messages_deleteMessages_default_instance_;
class TL_messages_receivedMessagesDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TL_messages_receivedMessages>
     _instance;
} _TL_messages_receivedMessages_default_instance_;
class TL_messages_setTypingDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TL_messages_setTyping>
     _instance;
} _TL_messages_setTyping_default_instance_;
class TL_messages_sendMessageDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TL_messages_sendMessage>
     _instance;
} _TL_messages_sendMessage_default_instance_;
class TL_messages_sendMediaDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TL_messages_sendMedia>
     _instance;
} _TL_messages_sendMedia_default_instance_;
class TL_messages_forwardMessagesDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TL_messages_forwardMessages>
     _instance;
} _TL_messages_forwardMessages_default_instance_;
class TL_messages_reportSpamDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TL_messages_reportSpam>
     _instance;
} _TL_messages_reportSpam_default_instance_;
class TL_messages_hideReportSpamDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TL_messages_hideReportSpam>
     _instance;
} _TL_messages_hideReportSpam_default_instance_;
class TL_messages_getPeerSettingsDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TL_messages_getPeerSettings>
     _instance;
} _TL_messages_getPeerSettings_default_instance_;
class TL_messages_reportDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TL_messages_report>
     _instance;
} _TL_messages_report_default_instance_;
class TL_messages_getChatsDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TL_messages_getChats>
     _instance;
} _TL_messages_getChats_default_instance_;
class TL_messages_getFullChatDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TL_messages_getFullChat>
     _instance;
} _TL_messages_getFullChat_default_instance_;
class TL_messages_editChatTitleDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TL_messages_editChatTitle>
     _instance;
} _TL_messages_editChatTitle_default_instance_;
class TL_messages_editChatPhotoDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TL_messages_editChatPhoto>
     _instance;
} _TL_messages_editChatPhoto_default_instance_;
class TL_messages_addChatUserDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TL_messages_addChatUser>
     _instance;
} _TL_messages_addChatUser_default_instance_;
class TL_messages_deleteChatUserDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TL_messages_deleteChatUser>
     _instance;
} _TL_messages_deleteChatUser_default_instance_;
class TL_messages_createChatDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TL_messages_createChat>
     _instance;
} _TL_messages_createChat_default_instance_;
class TL_messages_getDhConfigDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TL_messages_getDhConfig>
     _instance;
} _TL_messages_getDhConfig_default_instance_;
class TL_messages_requestEncryptionDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TL_messages_requestEncryption>
     _instance;
} _TL_messages_requestEncryption_default_instance_;
class TL_messages_acceptEncryptionDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TL_messages_acceptEncryption>
     _instance;
} _TL_messages_acceptEncryption_default_instance_;
class TL_messages_discardEncryptionDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TL_messages_discardEncryption>
     _instance;
} _TL_messages_discardEncryption_default_instance_;
class TL_messages_setEncryptedTypingDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TL_messages_setEncryptedTyping>
     _instance;
} _TL_messages_setEncryptedTyping_default_instance_;
class TL_messages_readEncryptedHistoryDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TL_messages_readEncryptedHistory>
     _instance;
} _TL_messages_readEncryptedHistory_default_instance_;
class TL_messages_sendEncryptedDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TL_messages_sendEncrypted>
     _instance;
} _TL_messages_sendEncrypted_default_instance_;
class TL_messages_sendEncryptedFileDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TL_messages_sendEncryptedFile>
     _instance;
} _TL_messages_sendEncryptedFile_default_instance_;
class TL_messages_sendEncryptedServiceDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TL_messages_sendEncryptedService>
     _instance;
} _TL_messages_sendEncryptedService_default_instance_;
class TL_messages_receivedQueueDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TL_messages_receivedQueue>
     _instance;
} _TL_messages_receivedQueue_default_instance_;
class TL_messages_reportEncryptedSpamDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TL_messages_reportEncryptedSpam>
     _instance;
} _TL_messages_reportEncryptedSpam_default_instance_;
class TL_messages_readMessageContentsDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TL_messages_readMessageContents>
     _instance;
} _TL_messages_readMessageContents_default_instance_;
class TL_messages_getStickersDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TL_messages_getStickers>
     _instance;
} _TL_messages_getStickers_default_instance_;
class TL_messages_getAllStickersDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TL_messages_getAllStickers>
     _instance;
} _TL_messages_getAllStickers_default_instance_;
class TL_messages_getWebPagePreviewDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TL_messages_getWebPagePreview>
     _instance;
} _TL_messages_getWebPagePreview_default_instance_;
class TL_messages_exportChatInviteDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TL_messages_exportChatInvite>
     _instance;
} _TL_messages_exportChatInvite_default_instance_;
class TL_messages_checkChatInviteDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TL_messages_checkChatInvite>
     _instance;
} _TL_messages_checkChatInvite_default_instance_;
class TL_messages_importChatInviteDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TL_messages_importChatInvite>
     _instance;
} _TL_messages_importChatInvite_default_instance_;
class TL_messages_getStickerSetDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TL_messages_getStickerSet>
     _instance;
} _TL_messages_getStickerSet_default_instance_;
class TL_messages_installStickerSetDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TL_messages_installStickerSet>
     _instance;
} _TL_messages_installStickerSet_default_instance_;
class TL_messages_uninstallStickerSetDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TL_messages_uninstallStickerSet>
     _instance;
} _TL_messages_uninstallStickerSet_default_instance_;
class TL_messages_startBotDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TL_messages_startBot>
     _instance;
} _TL_messages_startBot_default_instance_;
class TL_messages_getMessagesViewsDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TL_messages_getMessagesViews>
     _instance;
} _TL_messages_getMessagesViews_default_instance_;
class TL_messages_toggleChatAdminsDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TL_messages_toggleChatAdmins>
     _instance;
} _TL_messages_toggleChatAdmins_default_instance_;
class TL_messages_editChatAdminDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TL_messages_editChatAdmin>
     _instance;
} _TL_messages_editChatAdmin_default_instance_;
class TL_messages_migrateChatDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TL_messages_migrateChat>
     _instance;
} _TL_messages_migrateChat_default_instance_;
class TL_messages_searchGlobalDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TL_messages_searchGlobal>
     _instance;
} _TL_messages_searchGlobal_default_instance_;
class TL_messages_reorderStickerSetsDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TL_messages_reorderStickerSets>
     _instance;
} _TL_messages_reorderStickerSets_default_instance_;
class TL_messages_getDocumentByHashDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TL_messages_getDocumentByHash>
     _instance;
} _TL_messages_getDocumentByHash_default_instance_;
class TL_messages_searchGifsDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TL_messages_searchGifs>
     _instance;
} _TL_messages_searchGifs_default_instance_;
class TL_messages_getSavedGifsDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TL_messages_getSavedGifs>
     _instance;
} _TL_messages_getSavedGifs_default_instance_;
class TL_messages_saveGifDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TL_messages_saveGif>
     _instance;
} _TL_messages_saveGif_default_instance_;
class TL_messages_getInlineBotResultsDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TL_messages_getInlineBotResults>
     _instance;
} _TL_messages_getInlineBotResults_default_instance_;
class TL_messages_setInlineBotResultsDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TL_messages_setInlineBotResults>
     _instance;
} _TL_messages_setInlineBotResults_default_instance_;
class TL_messages_sendInlineBotResultDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TL_messages_sendInlineBotResult>
     _instance;
} _TL_messages_sendInlineBotResult_default_instance_;
class TL_messages_getMessageEditDataDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TL_messages_getMessageEditData>
     _instance;
} _TL_messages_getMessageEditData_default_instance_;
class TL_messages_editMessageDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TL_messages_editMessage>
     _instance;
} _TL_messages_editMessage_default_instance_;
class TL_messages_editInlineBotMessageDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TL_messages_editInlineBotMessage>
     _instance;
} _TL_messages_editInlineBotMessage_default_instance_;
class TL_messages_getBotCallbackAnswerDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TL_messages_getBotCallbackAnswer>
     _instance;
} _TL_messages_getBotCallbackAnswer_default_instance_;
class TL_messages_setBotCallbackAnswerDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TL_messages_setBotCallbackAnswer>
     _instance;
} _TL_messages_setBotCallbackAnswer_default_instance_;
class TL_messages_getPeerDialogsDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TL_messages_getPeerDialogs>
     _instance;
} _TL_messages_getPeerDialogs_default_instance_;
class TL_messages_saveDraftDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TL_messages_saveDraft>
     _instance;
} _TL_messages_saveDraft_default_instance_;
class TL_messages_getAllDraftsDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TL_messages_getAllDrafts>
     _instance;
} _TL_messages_getAllDrafts_default_instance_;
class TL_messages_getFeaturedStickersDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TL_messages_getFeaturedStickers>
     _instance;
} _TL_messages_getFeaturedStickers_default_instance_;
class TL_messages_readFeaturedStickersDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TL_messages_readFeaturedStickers>
     _instance;
} _TL_messages_readFeaturedStickers_default_instance_;
class TL_messages_getRecentStickersDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TL_messages_getRecentStickers>
     _instance;
} _TL_messages_getRecentStickers_default_instance_;
class TL_messages_saveRecentStickerDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TL_messages_saveRecentSticker>
     _instance;
} _TL_messages_saveRecentSticker_default_instance_;
class TL_messages_clearRecentStickersDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TL_messages_clearRecentStickers>
     _instance;
} _TL_messages_clearRecentStickers_default_instance_;
class TL_messages_getArchivedStickersDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TL_messages_getArchivedStickers>
     _instance;
} _TL_messages_getArchivedStickers_default_instance_;
class TL_messages_getMaskStickersDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TL_messages_getMaskStickers>
     _instance;
} _TL_messages_getMaskStickers_default_instance_;
class TL_messages_getAttachedStickersDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TL_messages_getAttachedStickers>
     _instance;
} _TL_messages_getAttachedStickers_default_instance_;
class TL_messages_setGameScoreDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TL_messages_setGameScore>
     _instance;
} _TL_messages_setGameScore_default_instance_;
class TL_messages_setInlineGameScoreDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TL_messages_setInlineGameScore>
     _instance;
} _TL_messages_setInlineGameScore_default_instance_;
class TL_messages_getGameHighScoresDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TL_messages_getGameHighScores>
     _instance;
} _TL_messages_getGameHighScores_default_instance_;
class TL_messages_getInlineGameHighScoresDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TL_messages_getInlineGameHighScores>
     _instance;
} _TL_messages_getInlineGameHighScores_default_instance_;
class TL_messages_getCommonChatsDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TL_messages_getCommonChats>
     _instance;
} _TL_messages_getCommonChats_default_instance_;
class TL_messages_getAllChatsDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TL_messages_getAllChats>
     _instance;
} _TL_messages_getAllChats_default_instance_;
class TL_messages_getWebPageDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TL_messages_getWebPage>
     _instance;
} _TL_messages_getWebPage_default_instance_;
class TL_messages_toggleDialogPinDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TL_messages_toggleDialogPin>
     _instance;
} _TL_messages_toggleDialogPin_default_instance_;
class TL_messages_reorderPinnedDialogsDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TL_messages_reorderPinnedDialogs>
     _instance;
} _TL_messages_reorderPinnedDialogs_default_instance_;
class TL_messages_getPinnedDialogsDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TL_messages_getPinnedDialogs>
     _instance;
} _TL_messages_getPinnedDialogs_default_instance_;
class TL_messages_setBotShippingResultsDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TL_messages_setBotShippingResults>
     _instance;
} _TL_messages_setBotShippingResults_default_instance_;
class TL_messages_setBotPrecheckoutResultsDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TL_messages_setBotPrecheckoutResults>
     _instance;
} _TL_messages_setBotPrecheckoutResults_default_instance_;
class TL_messages_uploadMediaDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TL_messages_uploadMedia>
     _instance;
} _TL_messages_uploadMedia_default_instance_;
class TL_messages_sendScreenshotNotificationDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TL_messages_sendScreenshotNotification>
     _instance;
} _TL_messages_sendScreenshotNotification_default_instance_;
class TL_messages_getFavedStickersDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TL_messages_getFavedStickers>
     _instance;
} _TL_messages_getFavedStickers_default_instance_;
class TL_messages_faveStickerDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TL_messages_faveSticker>
     _instance;
} _TL_messages_faveSticker_default_instance_;
class TL_messages_getUnreadMentionsDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TL_messages_getUnreadMentions>
     _instance;
} _TL_messages_getUnreadMentions_default_instance_;
class TL_messages_readMentionsDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TL_messages_readMentions>
     _instance;
} _TL_messages_readMentions_default_instance_;
class TL_messages_getRecentLocationsDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TL_messages_getRecentLocations>
     _instance;
} _TL_messages_getRecentLocations_default_instance_;
class TL_messages_sendMultiMediaDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TL_messages_sendMultiMedia>
     _instance;
} _TL_messages_sendMultiMedia_default_instance_;
class TL_messages_uploadEncryptedFileDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TL_messages_uploadEncryptedFile>
     _instance;
} _TL_messages_uploadEncryptedFile_default_instance_;
class TL_messages_searchStickerSetsDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TL_messages_searchStickerSets>
     _instance;
} _TL_messages_searchStickerSets_default_instance_;
class TL_messages_getSplitRangesDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TL_messages_getSplitRanges>
     _instance;
} _TL_messages_getSplitRanges_default_instance_;
class TL_messages_markDialogUnreadDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TL_messages_markDialogUnread>
     _instance;
} _TL_messages_markDialogUnread_default_instance_;
class TL_messages_getDialogUnreadMarksDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TL_messages_getDialogUnreadMarks>
     _instance;
} _TL_messages_getDialogUnreadMarks_default_instance_;
class TL_messages_clearAllDraftsDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TL_messages_clearAllDrafts>
     _instance;
} _TL_messages_clearAllDrafts_default_instance_;
class TL_updates_getStateDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TL_updates_getState>
     _instance;
} _TL_updates_getState_default_instance_;
class TL_updates_getDifferenceDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TL_updates_getDifference>
     _instance;
} _TL_updates_getDifference_default_instance_;
class TL_updates_getChannelDifferenceDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TL_updates_getChannelDifference>
     _instance;
} _TL_updates_getChannelDifference_default_instance_;
class TL_photos_updateProfilePhotoDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TL_photos_updateProfilePhoto>
     _instance;
} _TL_photos_updateProfilePhoto_default_instance_;
class TL_photos_uploadProfilePhotoDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TL_photos_uploadProfilePhoto>
     _instance;
} _TL_photos_uploadProfilePhoto_default_instance_;
class TL_photos_deletePhotosDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TL_photos_deletePhotos>
     _instance;
} _TL_photos_deletePhotos_default_instance_;
class TL_photos_getUserPhotosDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TL_photos_getUserPhotos>
     _instance;
} _TL_photos_getUserPhotos_default_instance_;
class TL_upload_saveFilePartDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TL_upload_saveFilePart>
     _instance;
} _TL_upload_saveFilePart_default_instance_;
class TL_upload_getFileDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TL_upload_getFile>
     _instance;
} _TL_upload_getFile_default_instance_;
class TL_upload_saveBigFilePartDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TL_upload_saveBigFilePart>
     _instance;
} _TL_upload_saveBigFilePart_default_instance_;
class TL_upload_getWebFileDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TL_upload_getWebFile>
     _instance;
} _TL_upload_getWebFile_default_instance_;
class TL_upload_getCdnFileDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TL_upload_getCdnFile>
     _instance;
} _TL_upload_getCdnFile_default_instance_;
class TL_upload_reuploadCdnFileDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TL_upload_reuploadCdnFile>
     _instance;
} _TL_upload_reuploadCdnFile_default_instance_;
class TL_upload_getCdnFileHashesDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TL_upload_getCdnFileHashes>
     _instance;
} _TL_upload_getCdnFileHashes_default_instance_;
class TL_upload_getFileHashesDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TL_upload_getFileHashes>
     _instance;
} _TL_upload_getFileHashes_default_instance_;
class TL_help_getConfigDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TL_help_getConfig>
     _instance;
} _TL_help_getConfig_default_instance_;
class TL_help_getNearestDcDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TL_help_getNearestDc>
     _instance;
} _TL_help_getNearestDc_default_instance_;
class TL_help_getAppUpdateDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TL_help_getAppUpdate>
     _instance;
} _TL_help_getAppUpdate_default_instance_;
class TL_help_saveAppLogDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TL_help_saveAppLog>
     _instance;
} _TL_help_saveAppLog_default_instance_;
class TL_help_getInviteTextDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TL_help_getInviteText>
     _instance;
} _TL_help_getInviteText_default_instance_;
class TL_help_getSupportDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TL_help_getSupport>
     _instance;
} _TL_help_getSupport_default_instance_;
class TL_help_getAppChangelogDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TL_help_getAppChangelog>
     _instance;
} _TL_help_getAppChangelog_default_instance_;
class TL_help_setBotUpdatesStatusDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TL_help_setBotUpdatesStatus>
     _instance;
} _TL_help_setBotUpdatesStatus_default_instance_;
class TL_help_getCdnConfigDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TL_help_getCdnConfig>
     _instance;
} _TL_help_getCdnConfig_default_instance_;
class TL_help_getRecentMeUrlsDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TL_help_getRecentMeUrls>
     _instance;
} _TL_help_getRecentMeUrls_default_instance_;
class TL_help_getProxyDataDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TL_help_getProxyData>
     _instance;
} _TL_help_getProxyData_default_instance_;
class TL_help_getTermsOfServiceUpdateDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TL_help_getTermsOfServiceUpdate>
     _instance;
} _TL_help_getTermsOfServiceUpdate_default_instance_;
class TL_help_acceptTermsOfServiceDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TL_help_acceptTermsOfService>
     _instance;
} _TL_help_acceptTermsOfService_default_instance_;
class TL_help_getDeepLinkInfoDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TL_help_getDeepLinkInfo>
     _instance;
} _TL_help_getDeepLinkInfo_default_instance_;
class TL_help_getPassportConfigDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TL_help_getPassportConfig>
     _instance;
} _TL_help_getPassportConfig_default_instance_;
class TL_channels_readHistoryDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TL_channels_readHistory>
     _instance;
} _TL_channels_readHistory_default_instance_;
class TL_channels_deleteMessagesDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TL_channels_deleteMessages>
     _instance;
} _TL_channels_deleteMessages_default_instance_;
class TL_channels_deleteUserHistoryDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TL_channels_deleteUserHistory>
     _instance;
} _TL_channels_deleteUserHistory_default_instance_;
class TL_channels_reportSpamDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TL_channels_reportSpam>
     _instance;
} _TL_channels_reportSpam_default_instance_;
class TL_channels_getMessagesDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TL_channels_getMessages>
     _instance;
} _TL_channels_getMessages_default_instance_;
class TL_channels_getParticipantsDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TL_channels_getParticipants>
     _instance;
} _TL_channels_getParticipants_default_instance_;
class TL_channels_getParticipantDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TL_channels_getParticipant>
     _instance;
} _TL_channels_getParticipant_default_instance_;
class TL_channels_getChannelsDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TL_channels_getChannels>
     _instance;
} _TL_channels_getChannels_default_instance_;
class TL_channels_getFullChannelDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TL_channels_getFullChannel>
     _instance;
} _TL_channels_getFullChannel_default_instance_;
class TL_channels_createChannelDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TL_channels_createChannel>
     _instance;
} _TL_channels_createChannel_default_instance_;
class TL_channels_editAboutDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TL_channels_editAbout>
     _instance;
} _TL_channels_editAbout_default_instance_;
class TL_channels_editAdminDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TL_channels_editAdmin>
     _instance;
} _TL_channels_editAdmin_default_instance_;
class TL_channels_editTitleDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TL_channels_editTitle>
     _instance;
} _TL_channels_editTitle_default_instance_;
class TL_channels_editPhotoDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TL_channels_editPhoto>
     _instance;
} _TL_channels_editPhoto_default_instance_;
class TL_channels_checkUsernameDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TL_channels_checkUsername>
     _instance;
} _TL_channels_checkUsername_default_instance_;
class TL_channels_updateUsernameDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TL_channels_updateUsername>
     _instance;
} _TL_channels_updateUsername_default_instance_;
class TL_channels_joinChannelDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TL_channels_joinChannel>
     _instance;
} _TL_channels_joinChannel_default_instance_;
class TL_channels_leaveChannelDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TL_channels_leaveChannel>
     _instance;
} _TL_channels_leaveChannel_default_instance_;
class TL_channels_inviteToChannelDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TL_channels_inviteToChannel>
     _instance;
} _TL_channels_inviteToChannel_default_instance_;
class TL_channels_exportInviteDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TL_channels_exportInvite>
     _instance;
} _TL_channels_exportInvite_default_instance_;
class TL_channels_deleteChannelDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TL_channels_deleteChannel>
     _instance;
} _TL_channels_deleteChannel_default_instance_;
class TL_channels_toggleInvitesDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TL_channels_toggleInvites>
     _instance;
} _TL_channels_toggleInvites_default_instance_;
class TL_channels_exportMessageLinkDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TL_channels_exportMessageLink>
     _instance;
} _TL_channels_exportMessageLink_default_instance_;
class TL_channels_toggleSignaturesDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TL_channels_toggleSignatures>
     _instance;
} _TL_channels_toggleSignatures_default_instance_;
class TL_channels_updatePinnedMessageDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TL_channels_updatePinnedMessage>
     _instance;
} _TL_channels_updatePinnedMessage_default_instance_;
class TL_channels_getAdminedPublicChannelsDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TL_channels_getAdminedPublicChannels>
     _instance;
} _TL_channels_getAdminedPublicChannels_default_instance_;
class TL_channels_editBannedDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TL_channels_editBanned>
     _instance;
} _TL_channels_editBanned_default_instance_;
class TL_channels_getAdminLogDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TL_channels_getAdminLog>
     _instance;
} _TL_channels_getAdminLog_default_instance_;
class TL_channels_setStickersDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TL_channels_setStickers>
     _instance;
} _TL_channels_setStickers_default_instance_;
class TL_channels_readMessageContentsDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TL_channels_readMessageContents>
     _instance;
} _TL_channels_readMessageContents_default_instance_;
class TL_channels_deleteHistoryDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TL_channels_deleteHistory>
     _instance;
} _TL_channels_deleteHistory_default_instance_;
class TL_channels_togglePreHistoryHiddenDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TL_channels_togglePreHistoryHidden>
     _instance;
} _TL_channels_togglePreHistoryHidden_default_instance_;
class TL_channels_getLeftChannelsDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TL_channels_getLeftChannels>
     _instance;
} _TL_channels_getLeftChannels_default_instance_;
class TL_bots_sendCustomRequestDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TL_bots_sendCustomRequest>
     _instance;
} _TL_bots_sendCustomRequest_default_instance_;
class TL_bots_answerWebhookJSONQueryDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TL_bots_answerWebhookJSONQuery>
     _instance;
} _TL_bots_answerWebhookJSONQuery_default_instance_;
class TL_payments_getPaymentFormDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TL_payments_getPaymentForm>
     _instance;
} _TL_payments_getPaymentForm_default_instance_;
class TL_payments_getPaymentReceiptDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TL_payments_getPaymentReceipt>
     _instance;
} _TL_payments_getPaymentReceipt_default_instance_;
class TL_payments_validateRequestedInfoDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TL_payments_validateRequestedInfo>
     _instance;
} _TL_payments_validateRequestedInfo_default_instance_;
class TL_payments_sendPaymentFormDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TL_payments_sendPaymentForm>
     _instance;
} _TL_payments_sendPaymentForm_default_instance_;
class TL_payments_getSavedInfoDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TL_payments_getSavedInfo>
     _instance;
} _TL_payments_getSavedInfo_default_instance_;
class TL_payments_clearSavedInfoDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TL_payments_clearSavedInfo>
     _instance;
} _TL_payments_clearSavedInfo_default_instance_;
class TL_stickers_createStickerSetDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TL_stickers_createStickerSet>
     _instance;
} _TL_stickers_createStickerSet_default_instance_;
class TL_stickers_removeStickerFromSetDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TL_stickers_removeStickerFromSet>
     _instance;
} _TL_stickers_removeStickerFromSet_default_instance_;
class TL_stickers_changeStickerPositionDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TL_stickers_changeStickerPosition>
     _instance;
} _TL_stickers_changeStickerPosition_default_instance_;
class TL_stickers_addStickerToSetDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TL_stickers_addStickerToSet>
     _instance;
} _TL_stickers_addStickerToSet_default_instance_;
class TL_phone_getCallConfigDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TL_phone_getCallConfig>
     _instance;
} _TL_phone_getCallConfig_default_instance_;
class TL_phone_requestCallDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TL_phone_requestCall>
     _instance;
} _TL_phone_requestCall_default_instance_;
class TL_phone_acceptCallDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TL_phone_acceptCall>
     _instance;
} _TL_phone_acceptCall_default_instance_;
class TL_phone_confirmCallDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TL_phone_confirmCall>
     _instance;
} _TL_phone_confirmCall_default_instance_;
class TL_phone_receivedCallDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TL_phone_receivedCall>
     _instance;
} _TL_phone_receivedCall_default_instance_;
class TL_phone_discardCallDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TL_phone_discardCall>
     _instance;
} _TL_phone_discardCall_default_instance_;
class TL_phone_setCallRatingDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TL_phone_setCallRating>
     _instance;
} _TL_phone_setCallRating_default_instance_;
class TL_phone_saveCallDebugDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TL_phone_saveCallDebug>
     _instance;
} _TL_phone_saveCallDebug_default_instance_;
class TL_langpack_getLangPackDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TL_langpack_getLangPack>
     _instance;
} _TL_langpack_getLangPack_default_instance_;
class TL_langpack_getStringsDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TL_langpack_getStrings>
     _instance;
} _TL_langpack_getStrings_default_instance_;
class TL_langpack_getDifferenceDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TL_langpack_getDifference>
     _instance;
} _TL_langpack_getDifference_default_instance_;
class TL_langpack_getLanguagesDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TL_langpack_getLanguages>
     _instance;
} _TL_langpack_getLanguages_default_instance_;
class Vector_LangPackLanguageDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<Vector_LangPackLanguage>
     _instance;
} _Vector_LangPackLanguage_default_instance_;
class Vector_WallPaperDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<Vector_WallPaper>
     _instance;
} _Vector_WallPaper_default_instance_;
class Vector_SecureValueDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<Vector_SecureValue>
     _instance;
} _Vector_SecureValue_default_instance_;
class Vector_UserDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<Vector_User>
     _instance;
} _Vector_User_default_instance_;
class Vector_ContactStatusDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<Vector_ContactStatus>
     _instance;
} _Vector_ContactStatus_default_instance_;
class Vector_intDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<Vector_int>
     _instance;
} _Vector_int_default_instance_;
class Vector_SavedContactDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<Vector_SavedContact>
     _instance;
} _Vector_SavedContact_default_instance_;
class Vector_ReceivedNotifyMessageDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<Vector_ReceivedNotifyMessage>
     _instance;
} _Vector_ReceivedNotifyMessage_default_instance_;
class Vector_longDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<Vector_long>
     _instance;
} _Vector_long_default_instance_;
class Vector_StickerSetCoveredDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<Vector_StickerSetCovered>
     _instance;
} _Vector_StickerSetCovered_default_instance_;
class Vector_MessageRangeDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<Vector_MessageRange>
     _instance;
} _Vector_MessageRange_default_instance_;
class Vector_DialogPeerDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<Vector_DialogPeer>
     _instance;
} _Vector_DialogPeer_default_instance_;
class Vector_FileHashDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<Vector_FileHash>
     _instance;
} _Vector_FileHash_default_instance_;
class Vector_LangPackStringDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<Vector_LangPackString>
     _instance;
} _Vector_LangPackString_default_instance_;

namespace protobuf_schema_2etl_2esync_5fservice_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[298];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_langpack_getLanguagesLayer70, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_help_getScheme, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_help_getScheme, version_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_readHistoryLayer2, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_readHistoryLayer2, peer_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_readHistoryLayer2, max_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_readHistoryLayer2, offset_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_help_getInviteTextLayer46, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_help_getInviteTextLayer46, lang_code_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_help_getAppUpdateLayer46, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_help_getAppUpdateLayer46, device_model_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_help_getAppUpdateLayer46, system_version_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_help_getAppUpdateLayer46, app_version_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_help_getAppUpdateLayer46, lang_code_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_updates_getChannelDifferenceLayer46, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_updates_getChannelDifferenceLayer46, channel_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_updates_getChannelDifferenceLayer46, filter_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_updates_getChannelDifferenceLayer46, pts_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_updates_getChannelDifferenceLayer46, limit_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_auth_sendCodeLayer51, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_auth_sendCodeLayer51, allow_flashcall_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_auth_sendCodeLayer51, phone_number_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_auth_sendCodeLayer51, current_number_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_auth_sendCodeLayer51, api_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_auth_sendCodeLayer51, api_hash_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_auth_sendCodeLayer51, lang_code_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_getHistoryLayer51, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_getHistoryLayer51, peer_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_getHistoryLayer51, offset_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_getHistoryLayer51, offset_date_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_getHistoryLayer51, add_offset_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_getHistoryLayer51, limit_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_getHistoryLayer51, max_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_getHistoryLayer51, min_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_initConnectionLayer68, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_initConnectionLayer68, api_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_initConnectionLayer68, device_model_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_initConnectionLayer68, system_version_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_initConnectionLayer68, app_version_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_initConnectionLayer68, system_lang_code_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_initConnectionLayer68, lang_pack_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_initConnectionLayer68, lang_code_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_initConnectionLayer68, query_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_searchLayer68, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_searchLayer68, peer_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_searchLayer68, q_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_searchLayer68, from_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_searchLayer68, filter_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_searchLayer68, min_date_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_searchLayer68, max_date_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_searchLayer68, offset_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_searchLayer68, max_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_searchLayer68, limit_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_account_registerDeviceLayer71, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_account_registerDeviceLayer71, token_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_account_registerDeviceLayer71, token_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_account_unregisterDeviceLayer71, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_account_unregisterDeviceLayer71, token_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_account_unregisterDeviceLayer71, token_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_langpack_getLangPackLayer71, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_langpack_getLangPackLayer71, lang_code_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_invokeAfterMsg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_invokeAfterMsg, msg_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_invokeAfterMsg, query_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_invokeAfterMsgs, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_invokeAfterMsgs, msg_ids_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_invokeAfterMsgs, query_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_initConnection, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_initConnection, api_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_initConnection, device_model_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_initConnection, system_version_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_initConnection, app_version_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_initConnection, system_lang_code_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_initConnection, lang_pack_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_initConnection, lang_code_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_initConnection, proxy_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_initConnection, query_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_invokeWithLayer, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_invokeWithLayer, layer_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_invokeWithLayer, query_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_invokeWithoutUpdates, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_invokeWithoutUpdates, query_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_invokeWithMessagesRange, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_invokeWithMessagesRange, range_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_invokeWithMessagesRange, query_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_invokeWithTakeout, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_invokeWithTakeout, takeout_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_invokeWithTakeout, query_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_auth_sendCode, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_auth_sendCode, allow_flashcall_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_auth_sendCode, phone_number_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_auth_sendCode, current_number_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_auth_sendCode, api_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_auth_sendCode, api_hash_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_auth_signUp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_auth_signUp, phone_number_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_auth_signUp, phone_code_hash_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_auth_signUp, phone_code_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_auth_signUp, first_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_auth_signUp, last_name_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_auth_signIn, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_auth_signIn, phone_number_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_auth_signIn, phone_code_hash_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_auth_signIn, phone_code_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_auth_logOut, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_auth_resetAuthorizations, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_auth_exportAuthorization, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_auth_exportAuthorization, dc_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_auth_importAuthorization, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_auth_importAuthorization, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_auth_importAuthorization, bytes_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_auth_bindTempAuthKey, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_auth_bindTempAuthKey, perm_auth_key_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_auth_bindTempAuthKey, nonce_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_auth_bindTempAuthKey, expires_at_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_auth_bindTempAuthKey, encrypted_message_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_auth_importBotAuthorization, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_auth_importBotAuthorization, flags_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_auth_importBotAuthorization, api_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_auth_importBotAuthorization, api_hash_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_auth_importBotAuthorization, bot_auth_token_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_auth_checkPassword, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_auth_checkPassword, password_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_auth_requestPasswordRecovery, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_auth_recoverPassword, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_auth_recoverPassword, code_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_auth_resendCode, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_auth_resendCode, phone_number_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_auth_resendCode, phone_code_hash_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_auth_cancelCode, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_auth_cancelCode, phone_number_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_auth_cancelCode, phone_code_hash_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_auth_dropTempAuthKeys, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_auth_dropTempAuthKeys, except_auth_keys_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_account_registerDevice, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_account_registerDevice, token_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_account_registerDevice, token_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_account_registerDevice, app_sandbox_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_account_registerDevice, secret_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_account_registerDevice, other_uids_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_account_unregisterDevice, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_account_unregisterDevice, token_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_account_unregisterDevice, token_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_account_unregisterDevice, other_uids_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_account_updateNotifySettings, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_account_updateNotifySettings, peer_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_account_updateNotifySettings, settings_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_account_getNotifySettings, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_account_getNotifySettings, peer_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_account_resetNotifySettings, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_account_updateProfile, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_account_updateProfile, first_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_account_updateProfile, last_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_account_updateProfile, about_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_account_updateStatus, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_account_updateStatus, offline_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_account_getWallPapers, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_account_reportPeer, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_account_reportPeer, peer_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_account_reportPeer, reason_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_account_checkUsername, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_account_checkUsername, username_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_account_updateUsername, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_account_updateUsername, username_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_account_getPrivacy, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_account_getPrivacy, key_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_account_setPrivacy, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_account_setPrivacy, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_account_setPrivacy, rules_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_account_deleteAccount, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_account_deleteAccount, reason_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_account_getAccountTTL, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_account_setAccountTTL, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_account_setAccountTTL, ttl_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_account_sendChangePhoneCode, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_account_sendChangePhoneCode, allow_flashcall_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_account_sendChangePhoneCode, phone_number_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_account_sendChangePhoneCode, current_number_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_account_changePhone, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_account_changePhone, phone_number_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_account_changePhone, phone_code_hash_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_account_changePhone, phone_code_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_account_updateDeviceLocked, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_account_updateDeviceLocked, period_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_account_getAuthorizations, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_account_resetAuthorization, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_account_resetAuthorization, hash_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_account_getPassword, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_account_getPasswordSettings, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_account_getPasswordSettings, password_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_account_updatePasswordSettings, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_account_updatePasswordSettings, password_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_account_updatePasswordSettings, new_settings_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_account_sendConfirmPhoneCode, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_account_sendConfirmPhoneCode, allow_flashcall_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_account_sendConfirmPhoneCode, hash_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_account_sendConfirmPhoneCode, current_number_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_account_confirmPhone, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_account_confirmPhone, phone_code_hash_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_account_confirmPhone, phone_code_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_account_getTmpPassword, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_account_getTmpPassword, password_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_account_getTmpPassword, period_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_account_getWebAuthorizations, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_account_resetWebAuthorization, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_account_resetWebAuthorization, hash_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_account_resetWebAuthorizations, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_account_getAllSecureValues, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_account_getSecureValue, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_account_getSecureValue, types_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_account_saveSecureValue, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_account_saveSecureValue, value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_account_saveSecureValue, secure_secret_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_account_deleteSecureValue, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_account_deleteSecureValue, types_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_account_getAuthorizationForm, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_account_getAuthorizationForm, bot_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_account_getAuthorizationForm, scope_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_account_getAuthorizationForm, public_key_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_account_acceptAuthorization, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_account_acceptAuthorization, bot_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_account_acceptAuthorization, scope_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_account_acceptAuthorization, public_key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_account_acceptAuthorization, value_hashes_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_account_acceptAuthorization, credentials_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_account_sendVerifyPhoneCode, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_account_sendVerifyPhoneCode, allow_flashcall_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_account_sendVerifyPhoneCode, phone_number_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_account_sendVerifyPhoneCode, current_number_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_account_verifyPhone, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_account_verifyPhone, phone_number_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_account_verifyPhone, phone_code_hash_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_account_verifyPhone, phone_code_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_account_sendVerifyEmailCode, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_account_sendVerifyEmailCode, email_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_account_verifyEmail, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_account_verifyEmail, email_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_account_verifyEmail, code_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_account_initTakeoutSession, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_account_initTakeoutSession, contacts_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_account_initTakeoutSession, message_users_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_account_initTakeoutSession, message_chats_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_account_initTakeoutSession, message_megagroups_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_account_initTakeoutSession, message_channels_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_account_initTakeoutSession, files_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_account_initTakeoutSession, file_max_size_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_account_finishTakeoutSession, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_account_finishTakeoutSession, success_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_users_getUsers, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_users_getUsers, id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_users_getFullUser, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_users_getFullUser, id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_users_setSecureValueErrors, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_users_setSecureValueErrors, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_users_setSecureValueErrors, errors_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_contacts_getStatuses, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_contacts_getContacts, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_contacts_getContacts, hash_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_contacts_importContacts, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_contacts_importContacts, contacts_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_contacts_deleteContact, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_contacts_deleteContact, id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_contacts_deleteContacts, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_contacts_deleteContacts, id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_contacts_block, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_contacts_block, id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_contacts_unblock, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_contacts_unblock, id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_contacts_getBlocked, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_contacts_getBlocked, offset_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_contacts_getBlocked, limit_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_contacts_exportCard, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_contacts_importCard, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_contacts_importCard, export_card_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_contacts_search, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_contacts_search, q_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_contacts_search, limit_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_contacts_resolveUsername, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_contacts_resolveUsername, username_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_contacts_getTopPeers, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_contacts_getTopPeers, correspondents_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_contacts_getTopPeers, bots_pm_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_contacts_getTopPeers, bots_inline_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_contacts_getTopPeers, phone_calls_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_contacts_getTopPeers, groups_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_contacts_getTopPeers, channels_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_contacts_getTopPeers, offset_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_contacts_getTopPeers, limit_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_contacts_getTopPeers, hash_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_contacts_resetTopPeerRating, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_contacts_resetTopPeerRating, category_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_contacts_resetTopPeerRating, peer_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_contacts_resetSaved, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_contacts_getSaved, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_contacts_toggleTopPeers, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_contacts_toggleTopPeers, enabled_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_getMessages, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_getMessages, id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_getDialogs, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_getDialogs, exclude_pinned_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_getDialogs, offset_date_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_getDialogs, offset_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_getDialogs, offset_peer_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_getDialogs, limit_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_getDialogs, hash_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_getHistory, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_getHistory, peer_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_getHistory, offset_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_getHistory, offset_date_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_getHistory, add_offset_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_getHistory, limit_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_getHistory, max_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_getHistory, min_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_getHistory, hash_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_search, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_search, peer_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_search, q_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_search, from_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_search, filter_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_search, min_date_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_search, max_date_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_search, offset_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_search, add_offset_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_search, limit_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_search, max_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_search, min_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_search, hash_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_readHistory, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_readHistory, peer_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_readHistory, max_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_deleteHistory, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_deleteHistory, just_clear_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_deleteHistory, peer_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_deleteHistory, max_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_deleteMessages, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_deleteMessages, revoke_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_deleteMessages, id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_receivedMessages, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_receivedMessages, max_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_setTyping, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_setTyping, peer_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_setTyping, action_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_sendMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_sendMessage, no_webpage_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_sendMessage, silent_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_sendMessage, background_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_sendMessage, clear_draft_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_sendMessage, peer_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_sendMessage, reply_to_msg_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_sendMessage, message_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_sendMessage, random_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_sendMessage, reply_markup_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_sendMessage, entities_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_sendMedia, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_sendMedia, silent_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_sendMedia, background_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_sendMedia, clear_draft_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_sendMedia, peer_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_sendMedia, reply_to_msg_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_sendMedia, media_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_sendMedia, message_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_sendMedia, random_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_sendMedia, reply_markup_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_sendMedia, entities_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_forwardMessages, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_forwardMessages, silent_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_forwardMessages, background_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_forwardMessages, with_my_score_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_forwardMessages, grouped_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_forwardMessages, from_peer_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_forwardMessages, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_forwardMessages, random_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_forwardMessages, to_peer_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_reportSpam, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_reportSpam, peer_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_hideReportSpam, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_hideReportSpam, peer_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_getPeerSettings, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_getPeerSettings, peer_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_report, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_report, peer_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_report, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_report, reason_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_getChats, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_getChats, id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_getFullChat, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_getFullChat, chat_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_editChatTitle, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_editChatTitle, chat_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_editChatTitle, title_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_editChatPhoto, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_editChatPhoto, chat_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_editChatPhoto, photo_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_addChatUser, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_addChatUser, chat_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_addChatUser, user_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_addChatUser, fwd_limit_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_deleteChatUser, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_deleteChatUser, chat_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_deleteChatUser, user_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_createChat, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_createChat, users_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_createChat, title_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_getDhConfig, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_getDhConfig, version_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_getDhConfig, random_length_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_requestEncryption, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_requestEncryption, user_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_requestEncryption, random_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_requestEncryption, g_a_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_acceptEncryption, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_acceptEncryption, peer_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_acceptEncryption, g_b_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_acceptEncryption, key_fingerprint_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_discardEncryption, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_discardEncryption, chat_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_setEncryptedTyping, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_setEncryptedTyping, peer_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_setEncryptedTyping, typing_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_readEncryptedHistory, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_readEncryptedHistory, peer_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_readEncryptedHistory, max_date_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_sendEncrypted, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_sendEncrypted, peer_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_sendEncrypted, random_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_sendEncrypted, data_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_sendEncryptedFile, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_sendEncryptedFile, peer_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_sendEncryptedFile, random_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_sendEncryptedFile, data_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_sendEncryptedFile, file_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_sendEncryptedService, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_sendEncryptedService, peer_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_sendEncryptedService, random_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_sendEncryptedService, data_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_receivedQueue, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_receivedQueue, max_qts_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_reportEncryptedSpam, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_reportEncryptedSpam, peer_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_readMessageContents, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_readMessageContents, id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_getStickers, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_getStickers, emoticon_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_getStickers, hash_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_getAllStickers, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_getAllStickers, hash_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_getWebPagePreview, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_getWebPagePreview, message_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_getWebPagePreview, entities_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_exportChatInvite, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_exportChatInvite, chat_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_checkChatInvite, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_checkChatInvite, hash_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_importChatInvite, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_importChatInvite, hash_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_getStickerSet, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_getStickerSet, stickerset_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_installStickerSet, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_installStickerSet, stickerset_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_installStickerSet, archived_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_uninstallStickerSet, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_uninstallStickerSet, stickerset_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_startBot, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_startBot, bot_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_startBot, peer_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_startBot, random_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_startBot, start_param_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_getMessagesViews, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_getMessagesViews, peer_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_getMessagesViews, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_getMessagesViews, increment_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_toggleChatAdmins, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_toggleChatAdmins, chat_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_toggleChatAdmins, enabled_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_editChatAdmin, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_editChatAdmin, chat_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_editChatAdmin, user_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_editChatAdmin, is_admin_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_migrateChat, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_migrateChat, chat_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_searchGlobal, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_searchGlobal, q_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_searchGlobal, offset_date_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_searchGlobal, offset_peer_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_searchGlobal, offset_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_searchGlobal, limit_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_reorderStickerSets, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_reorderStickerSets, masks_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_reorderStickerSets, order_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_getDocumentByHash, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_getDocumentByHash, sha256_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_getDocumentByHash, size_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_getDocumentByHash, mime_type_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_searchGifs, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_searchGifs, q_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_searchGifs, offset_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_getSavedGifs, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_getSavedGifs, hash_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_saveGif, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_saveGif, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_saveGif, unsave_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_getInlineBotResults, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_getInlineBotResults, bot_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_getInlineBotResults, peer_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_getInlineBotResults, geo_point_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_getInlineBotResults, query_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_getInlineBotResults, offset_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_setInlineBotResults, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_setInlineBotResults, gallery_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_setInlineBotResults, private__),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_setInlineBotResults, query_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_setInlineBotResults, results_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_setInlineBotResults, cache_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_setInlineBotResults, next_offset_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_setInlineBotResults, switch_pm_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_sendInlineBotResult, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_sendInlineBotResult, silent_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_sendInlineBotResult, background_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_sendInlineBotResult, clear_draft_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_sendInlineBotResult, peer_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_sendInlineBotResult, reply_to_msg_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_sendInlineBotResult, random_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_sendInlineBotResult, query_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_sendInlineBotResult, id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_getMessageEditData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_getMessageEditData, peer_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_getMessageEditData, id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_editMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_editMessage, no_webpage_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_editMessage, stop_geo_live_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_editMessage, peer_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_editMessage, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_editMessage, message_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_editMessage, media_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_editMessage, reply_markup_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_editMessage, entities_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_editMessage, geo_point_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_editInlineBotMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_editInlineBotMessage, no_webpage_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_editInlineBotMessage, stop_geo_live_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_editInlineBotMessage, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_editInlineBotMessage, message_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_editInlineBotMessage, media_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_editInlineBotMessage, reply_markup_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_editInlineBotMessage, entities_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_editInlineBotMessage, geo_point_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_getBotCallbackAnswer, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_getBotCallbackAnswer, game_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_getBotCallbackAnswer, peer_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_getBotCallbackAnswer, msg_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_getBotCallbackAnswer, data_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_setBotCallbackAnswer, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_setBotCallbackAnswer, alert_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_setBotCallbackAnswer, query_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_setBotCallbackAnswer, message_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_setBotCallbackAnswer, url_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_setBotCallbackAnswer, cache_time_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_getPeerDialogs, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_getPeerDialogs, peers_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_saveDraft, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_saveDraft, no_webpage_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_saveDraft, reply_to_msg_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_saveDraft, peer_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_saveDraft, message_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_saveDraft, entities_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_getAllDrafts, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_getFeaturedStickers, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_getFeaturedStickers, hash_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_readFeaturedStickers, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_readFeaturedStickers, id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_getRecentStickers, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_getRecentStickers, attached_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_getRecentStickers, hash_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_saveRecentSticker, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_saveRecentSticker, attached_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_saveRecentSticker, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_saveRecentSticker, unsave_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_clearRecentStickers, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_clearRecentStickers, attached_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_getArchivedStickers, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_getArchivedStickers, masks_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_getArchivedStickers, offset_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_getArchivedStickers, limit_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_getMaskStickers, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_getMaskStickers, hash_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_getAttachedStickers, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_getAttachedStickers, media_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_setGameScore, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_setGameScore, edit_message_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_setGameScore, force_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_setGameScore, peer_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_setGameScore, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_setGameScore, user_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_setGameScore, score_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_setInlineGameScore, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_setInlineGameScore, edit_message_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_setInlineGameScore, force_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_setInlineGameScore, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_setInlineGameScore, user_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_setInlineGameScore, score_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_getGameHighScores, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_getGameHighScores, peer_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_getGameHighScores, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_getGameHighScores, user_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_getInlineGameHighScores, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_getInlineGameHighScores, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_getInlineGameHighScores, user_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_getCommonChats, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_getCommonChats, user_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_getCommonChats, max_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_getCommonChats, limit_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_getAllChats, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_getAllChats, except_ids_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_getWebPage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_getWebPage, url_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_getWebPage, hash_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_toggleDialogPin, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_toggleDialogPin, pinned_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_toggleDialogPin, peer_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_reorderPinnedDialogs, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_reorderPinnedDialogs, force_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_reorderPinnedDialogs, order_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_getPinnedDialogs, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_setBotShippingResults, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_setBotShippingResults, query_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_setBotShippingResults, error_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_setBotShippingResults, shipping_options_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_setBotPrecheckoutResults, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_setBotPrecheckoutResults, success_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_setBotPrecheckoutResults, query_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_setBotPrecheckoutResults, error_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_uploadMedia, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_uploadMedia, peer_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_uploadMedia, media_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_sendScreenshotNotification, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_sendScreenshotNotification, peer_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_sendScreenshotNotification, reply_to_msg_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_sendScreenshotNotification, random_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_getFavedStickers, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_getFavedStickers, hash_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_faveSticker, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_faveSticker, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_faveSticker, unfave_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_getUnreadMentions, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_getUnreadMentions, peer_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_getUnreadMentions, offset_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_getUnreadMentions, add_offset_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_getUnreadMentions, limit_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_getUnreadMentions, max_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_getUnreadMentions, min_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_readMentions, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_readMentions, peer_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_getRecentLocations, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_getRecentLocations, peer_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_getRecentLocations, limit_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_getRecentLocations, hash_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_sendMultiMedia, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_sendMultiMedia, silent_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_sendMultiMedia, background_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_sendMultiMedia, clear_draft_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_sendMultiMedia, peer_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_sendMultiMedia, reply_to_msg_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_sendMultiMedia, multi_media_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_uploadEncryptedFile, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_uploadEncryptedFile, peer_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_uploadEncryptedFile, file_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_searchStickerSets, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_searchStickerSets, exclude_featured_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_searchStickerSets, q_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_searchStickerSets, hash_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_getSplitRanges, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_markDialogUnread, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_markDialogUnread, unread_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_markDialogUnread, peer_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_getDialogUnreadMarks, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_messages_clearAllDrafts, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_updates_getState, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_updates_getDifference, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_updates_getDifference, pts_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_updates_getDifference, pts_total_limit_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_updates_getDifference, date_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_updates_getDifference, qts_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_updates_getChannelDifference, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_updates_getChannelDifference, force_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_updates_getChannelDifference, channel_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_updates_getChannelDifference, filter_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_updates_getChannelDifference, pts_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_updates_getChannelDifference, limit_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_photos_updateProfilePhoto, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_photos_updateProfilePhoto, id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_photos_uploadProfilePhoto, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_photos_uploadProfilePhoto, file_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_photos_deletePhotos, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_photos_deletePhotos, id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_photos_getUserPhotos, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_photos_getUserPhotos, user_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_photos_getUserPhotos, offset_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_photos_getUserPhotos, max_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_photos_getUserPhotos, limit_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_upload_saveFilePart, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_upload_saveFilePart, file_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_upload_saveFilePart, file_part_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_upload_saveFilePart, bytes_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_upload_getFile, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_upload_getFile, location_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_upload_getFile, offset_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_upload_getFile, limit_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_upload_saveBigFilePart, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_upload_saveBigFilePart, file_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_upload_saveBigFilePart, file_part_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_upload_saveBigFilePart, file_total_parts_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_upload_saveBigFilePart, bytes_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_upload_getWebFile, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_upload_getWebFile, location_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_upload_getWebFile, offset_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_upload_getWebFile, limit_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_upload_getCdnFile, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_upload_getCdnFile, file_token_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_upload_getCdnFile, offset_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_upload_getCdnFile, limit_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_upload_reuploadCdnFile, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_upload_reuploadCdnFile, file_token_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_upload_reuploadCdnFile, request_token_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_upload_getCdnFileHashes, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_upload_getCdnFileHashes, file_token_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_upload_getCdnFileHashes, offset_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_upload_getFileHashes, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_upload_getFileHashes, location_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_upload_getFileHashes, offset_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_help_getConfig, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_help_getNearestDc, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_help_getAppUpdate, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_help_getAppUpdate, source_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_help_saveAppLog, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_help_saveAppLog, events_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_help_getInviteText, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_help_getSupport, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_help_getAppChangelog, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_help_getAppChangelog, prev_app_version_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_help_setBotUpdatesStatus, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_help_setBotUpdatesStatus, pending_updates_count_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_help_setBotUpdatesStatus, message_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_help_getCdnConfig, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_help_getRecentMeUrls, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_help_getRecentMeUrls, referer_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_help_getProxyData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_help_getTermsOfServiceUpdate, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_help_acceptTermsOfService, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_help_acceptTermsOfService, id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_help_getDeepLinkInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_help_getDeepLinkInfo, path_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_help_getPassportConfig, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_help_getPassportConfig, hash_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_channels_readHistory, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_channels_readHistory, channel_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_channels_readHistory, max_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_channels_deleteMessages, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_channels_deleteMessages, channel_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_channels_deleteMessages, id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_channels_deleteUserHistory, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_channels_deleteUserHistory, channel_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_channels_deleteUserHistory, user_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_channels_reportSpam, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_channels_reportSpam, channel_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_channels_reportSpam, user_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_channels_reportSpam, id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_channels_getMessages, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_channels_getMessages, channel_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_channels_getMessages, id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_channels_getParticipants, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_channels_getParticipants, channel_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_channels_getParticipants, filter_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_channels_getParticipants, offset_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_channels_getParticipants, limit_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_channels_getParticipants, hash_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_channels_getParticipant, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_channels_getParticipant, channel_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_channels_getParticipant, user_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_channels_getChannels, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_channels_getChannels, id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_channels_getFullChannel, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_channels_getFullChannel, channel_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_channels_createChannel, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_channels_createChannel, broadcast_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_channels_createChannel, megagroup_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_channels_createChannel, title_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_channels_createChannel, about_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_channels_editAbout, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_channels_editAbout, channel_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_channels_editAbout, about_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_channels_editAdmin, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_channels_editAdmin, channel_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_channels_editAdmin, user_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_channels_editAdmin, admin_rights_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_channels_editTitle, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_channels_editTitle, channel_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_channels_editTitle, title_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_channels_editPhoto, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_channels_editPhoto, channel_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_channels_editPhoto, photo_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_channels_checkUsername, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_channels_checkUsername, channel_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_channels_checkUsername, username_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_channels_updateUsername, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_channels_updateUsername, channel_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_channels_updateUsername, username_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_channels_joinChannel, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_channels_joinChannel, channel_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_channels_leaveChannel, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_channels_leaveChannel, channel_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_channels_inviteToChannel, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_channels_inviteToChannel, channel_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_channels_inviteToChannel, users_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_channels_exportInvite, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_channels_exportInvite, channel_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_channels_deleteChannel, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_channels_deleteChannel, channel_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_channels_toggleInvites, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_channels_toggleInvites, channel_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_channels_toggleInvites, enabled_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_channels_exportMessageLink, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_channels_exportMessageLink, channel_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_channels_exportMessageLink, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_channels_exportMessageLink, grouped_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_channels_toggleSignatures, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_channels_toggleSignatures, channel_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_channels_toggleSignatures, enabled_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_channels_updatePinnedMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_channels_updatePinnedMessage, silent_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_channels_updatePinnedMessage, channel_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_channels_updatePinnedMessage, id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_channels_getAdminedPublicChannels, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_channels_editBanned, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_channels_editBanned, channel_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_channels_editBanned, user_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_channels_editBanned, banned_rights_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_channels_getAdminLog, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_channels_getAdminLog, channel_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_channels_getAdminLog, q_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_channels_getAdminLog, events_filter_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_channels_getAdminLog, admins_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_channels_getAdminLog, max_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_channels_getAdminLog, min_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_channels_getAdminLog, limit_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_channels_setStickers, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_channels_setStickers, channel_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_channels_setStickers, stickerset_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_channels_readMessageContents, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_channels_readMessageContents, channel_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_channels_readMessageContents, id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_channels_deleteHistory, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_channels_deleteHistory, channel_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_channels_deleteHistory, max_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_channels_togglePreHistoryHidden, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_channels_togglePreHistoryHidden, channel_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_channels_togglePreHistoryHidden, enabled_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_channels_getLeftChannels, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_channels_getLeftChannels, offset_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_bots_sendCustomRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_bots_sendCustomRequest, custom_method_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_bots_sendCustomRequest, params_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_bots_answerWebhookJSONQuery, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_bots_answerWebhookJSONQuery, query_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_bots_answerWebhookJSONQuery, data_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_payments_getPaymentForm, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_payments_getPaymentForm, msg_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_payments_getPaymentReceipt, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_payments_getPaymentReceipt, msg_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_payments_validateRequestedInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_payments_validateRequestedInfo, save_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_payments_validateRequestedInfo, msg_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_payments_validateRequestedInfo, info_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_payments_sendPaymentForm, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_payments_sendPaymentForm, msg_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_payments_sendPaymentForm, requested_info_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_payments_sendPaymentForm, shipping_option_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_payments_sendPaymentForm, credentials_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_payments_getSavedInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_payments_clearSavedInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_payments_clearSavedInfo, credentials_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_payments_clearSavedInfo, info_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_stickers_createStickerSet, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_stickers_createStickerSet, masks_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_stickers_createStickerSet, user_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_stickers_createStickerSet, title_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_stickers_createStickerSet, short_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_stickers_createStickerSet, stickers_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_stickers_removeStickerFromSet, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_stickers_removeStickerFromSet, sticker_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_stickers_changeStickerPosition, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_stickers_changeStickerPosition, sticker_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_stickers_changeStickerPosition, position_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_stickers_addStickerToSet, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_stickers_addStickerToSet, stickerset_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_stickers_addStickerToSet, sticker_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_phone_getCallConfig, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_phone_requestCall, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_phone_requestCall, user_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_phone_requestCall, random_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_phone_requestCall, g_a_hash_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_phone_requestCall, protocol_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_phone_acceptCall, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_phone_acceptCall, peer_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_phone_acceptCall, g_b_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_phone_acceptCall, protocol_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_phone_confirmCall, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_phone_confirmCall, peer_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_phone_confirmCall, g_a_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_phone_confirmCall, key_fingerprint_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_phone_confirmCall, protocol_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_phone_receivedCall, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_phone_receivedCall, peer_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_phone_discardCall, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_phone_discardCall, peer_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_phone_discardCall, duration_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_phone_discardCall, reason_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_phone_discardCall, connection_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_phone_setCallRating, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_phone_setCallRating, peer_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_phone_setCallRating, rating_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_phone_setCallRating, comment_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_phone_saveCallDebug, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_phone_saveCallDebug, peer_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_phone_saveCallDebug, debug_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_langpack_getLangPack, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_langpack_getLangPack, lang_pack_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_langpack_getLangPack, lang_code_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_langpack_getStrings, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_langpack_getStrings, lang_pack_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_langpack_getStrings, lang_code_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_langpack_getStrings, keys_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_langpack_getDifference, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_langpack_getDifference, from_version_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_langpack_getLanguages, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TL_langpack_getLanguages, lang_pack_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Vector_LangPackLanguage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Vector_LangPackLanguage, datas_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Vector_WallPaper, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Vector_WallPaper, datas_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Vector_SecureValue, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Vector_SecureValue, datas_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Vector_User, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Vector_User, datas_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Vector_ContactStatus, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Vector_ContactStatus, datas_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Vector_int, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Vector_int, datas_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Vector_SavedContact, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Vector_SavedContact, datas_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Vector_ReceivedNotifyMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Vector_ReceivedNotifyMessage, datas_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Vector_long, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Vector_long, datas_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Vector_StickerSetCovered, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Vector_StickerSetCovered, datas_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Vector_MessageRange, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Vector_MessageRange, datas_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Vector_DialogPeer, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Vector_DialogPeer, datas_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Vector_FileHash, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Vector_FileHash, datas_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Vector_LangPackString, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Vector_LangPackString, datas_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(TL_langpack_getLanguagesLayer70)},
  { 5, -1, sizeof(TL_help_getScheme)},
  { 11, -1, sizeof(TL_messages_readHistoryLayer2)},
  { 19, -1, sizeof(TL_help_getInviteTextLayer46)},
  { 25, -1, sizeof(TL_help_getAppUpdateLayer46)},
  { 34, -1, sizeof(TL_updates_getChannelDifferenceLayer46)},
  { 43, -1, sizeof(TL_auth_sendCodeLayer51)},
  { 54, -1, sizeof(TL_messages_getHistoryLayer51)},
  { 66, -1, sizeof(TL_initConnectionLayer68)},
  { 79, -1, sizeof(TL_messages_searchLayer68)},
  { 93, -1, sizeof(TL_account_registerDeviceLayer71)},
  { 100, -1, sizeof(TL_account_unregisterDeviceLayer71)},
  { 107, -1, sizeof(TL_langpack_getLangPackLayer71)},
  { 113, -1, sizeof(TL_invokeAfterMsg)},
  { 120, -1, sizeof(TL_invokeAfterMsgs)},
  { 127, -1, sizeof(TL_initConnection)},
  { 141, -1, sizeof(TL_invokeWithLayer)},
  { 148, -1, sizeof(TL_invokeWithoutUpdates)},
  { 154, -1, sizeof(TL_invokeWithMessagesRange)},
  { 161, -1, sizeof(TL_invokeWithTakeout)},
  { 168, -1, sizeof(TL_auth_sendCode)},
  { 178, -1, sizeof(TL_auth_signUp)},
  { 188, -1, sizeof(TL_auth_signIn)},
  { 196, -1, sizeof(TL_auth_logOut)},
  { 201, -1, sizeof(TL_auth_resetAuthorizations)},
  { 206, -1, sizeof(TL_auth_exportAuthorization)},
  { 212, -1, sizeof(TL_auth_importAuthorization)},
  { 219, -1, sizeof(TL_auth_bindTempAuthKey)},
  { 228, -1, sizeof(TL_auth_importBotAuthorization)},
  { 237, -1, sizeof(TL_auth_checkPassword)},
  { 243, -1, sizeof(TL_auth_requestPasswordRecovery)},
  { 248, -1, sizeof(TL_auth_recoverPassword)},
  { 254, -1, sizeof(TL_auth_resendCode)},
  { 261, -1, sizeof(TL_auth_cancelCode)},
  { 268, -1, sizeof(TL_auth_dropTempAuthKeys)},
  { 274, -1, sizeof(TL_account_registerDevice)},
  { 284, -1, sizeof(TL_account_unregisterDevice)},
  { 292, -1, sizeof(TL_account_updateNotifySettings)},
  { 299, -1, sizeof(TL_account_getNotifySettings)},
  { 305, -1, sizeof(TL_account_resetNotifySettings)},
  { 310, -1, sizeof(TL_account_updateProfile)},
  { 318, -1, sizeof(TL_account_updateStatus)},
  { 324, -1, sizeof(TL_account_getWallPapers)},
  { 329, -1, sizeof(TL_account_reportPeer)},
  { 336, -1, sizeof(TL_account_checkUsername)},
  { 342, -1, sizeof(TL_account_updateUsername)},
  { 348, -1, sizeof(TL_account_getPrivacy)},
  { 354, -1, sizeof(TL_account_setPrivacy)},
  { 361, -1, sizeof(TL_account_deleteAccount)},
  { 367, -1, sizeof(TL_account_getAccountTTL)},
  { 372, -1, sizeof(TL_account_setAccountTTL)},
  { 378, -1, sizeof(TL_account_sendChangePhoneCode)},
  { 386, -1, sizeof(TL_account_changePhone)},
  { 394, -1, sizeof(TL_account_updateDeviceLocked)},
  { 400, -1, sizeof(TL_account_getAuthorizations)},
  { 405, -1, sizeof(TL_account_resetAuthorization)},
  { 411, -1, sizeof(TL_account_getPassword)},
  { 416, -1, sizeof(TL_account_getPasswordSettings)},
  { 422, -1, sizeof(TL_account_updatePasswordSettings)},
  { 429, -1, sizeof(TL_account_sendConfirmPhoneCode)},
  { 437, -1, sizeof(TL_account_confirmPhone)},
  { 444, -1, sizeof(TL_account_getTmpPassword)},
  { 451, -1, sizeof(TL_account_getWebAuthorizations)},
  { 456, -1, sizeof(TL_account_resetWebAuthorization)},
  { 462, -1, sizeof(TL_account_resetWebAuthorizations)},
  { 467, -1, sizeof(TL_account_getAllSecureValues)},
  { 472, -1, sizeof(TL_account_getSecureValue)},
  { 478, -1, sizeof(TL_account_saveSecureValue)},
  { 485, -1, sizeof(TL_account_deleteSecureValue)},
  { 491, -1, sizeof(TL_account_getAuthorizationForm)},
  { 499, -1, sizeof(TL_account_acceptAuthorization)},
  { 509, -1, sizeof(TL_account_sendVerifyPhoneCode)},
  { 517, -1, sizeof(TL_account_verifyPhone)},
  { 525, -1, sizeof(TL_account_sendVerifyEmailCode)},
  { 531, -1, sizeof(TL_account_verifyEmail)},
  { 538, -1, sizeof(TL_account_initTakeoutSession)},
  { 550, -1, sizeof(TL_account_finishTakeoutSession)},
  { 556, -1, sizeof(TL_users_getUsers)},
  { 562, -1, sizeof(TL_users_getFullUser)},
  { 568, -1, sizeof(TL_users_setSecureValueErrors)},
  { 575, -1, sizeof(TL_contacts_getStatuses)},
  { 580, -1, sizeof(TL_contacts_getContacts)},
  { 586, -1, sizeof(TL_contacts_importContacts)},
  { 592, -1, sizeof(TL_contacts_deleteContact)},
  { 598, -1, sizeof(TL_contacts_deleteContacts)},
  { 604, -1, sizeof(TL_contacts_block)},
  { 610, -1, sizeof(TL_contacts_unblock)},
  { 616, -1, sizeof(TL_contacts_getBlocked)},
  { 623, -1, sizeof(TL_contacts_exportCard)},
  { 628, -1, sizeof(TL_contacts_importCard)},
  { 634, -1, sizeof(TL_contacts_search)},
  { 641, -1, sizeof(TL_contacts_resolveUsername)},
  { 647, -1, sizeof(TL_contacts_getTopPeers)},
  { 661, -1, sizeof(TL_contacts_resetTopPeerRating)},
  { 668, -1, sizeof(TL_contacts_resetSaved)},
  { 673, -1, sizeof(TL_contacts_getSaved)},
  { 678, -1, sizeof(TL_contacts_toggleTopPeers)},
  { 684, -1, sizeof(TL_messages_getMessages)},
  { 690, -1, sizeof(TL_messages_getDialogs)},
  { 701, -1, sizeof(TL_messages_getHistory)},
  { 714, -1, sizeof(TL_messages_search)},
  { 731, -1, sizeof(TL_messages_readHistory)},
  { 738, -1, sizeof(TL_messages_deleteHistory)},
  { 746, -1, sizeof(TL_messages_deleteMessages)},
  { 753, -1, sizeof(TL_messages_receivedMessages)},
  { 759, -1, sizeof(TL_messages_setTyping)},
  { 766, -1, sizeof(TL_messages_sendMessage)},
  { 781, -1, sizeof(TL_messages_sendMedia)},
  { 796, -1, sizeof(TL_messages_forwardMessages)},
  { 809, -1, sizeof(TL_messages_reportSpam)},
  { 815, -1, sizeof(TL_messages_hideReportSpam)},
  { 821, -1, sizeof(TL_messages_getPeerSettings)},
  { 827, -1, sizeof(TL_messages_report)},
  { 835, -1, sizeof(TL_messages_getChats)},
  { 841, -1, sizeof(TL_messages_getFullChat)},
  { 847, -1, sizeof(TL_messages_editChatTitle)},
  { 854, -1, sizeof(TL_messages_editChatPhoto)},
  { 861, -1, sizeof(TL_messages_addChatUser)},
  { 869, -1, sizeof(TL_messages_deleteChatUser)},
  { 876, -1, sizeof(TL_messages_createChat)},
  { 883, -1, sizeof(TL_messages_getDhConfig)},
  { 890, -1, sizeof(TL_messages_requestEncryption)},
  { 898, -1, sizeof(TL_messages_acceptEncryption)},
  { 906, -1, sizeof(TL_messages_discardEncryption)},
  { 912, -1, sizeof(TL_messages_setEncryptedTyping)},
  { 919, -1, sizeof(TL_messages_readEncryptedHistory)},
  { 926, -1, sizeof(TL_messages_sendEncrypted)},
  { 934, -1, sizeof(TL_messages_sendEncryptedFile)},
  { 943, -1, sizeof(TL_messages_sendEncryptedService)},
  { 951, -1, sizeof(TL_messages_receivedQueue)},
  { 957, -1, sizeof(TL_messages_reportEncryptedSpam)},
  { 963, -1, sizeof(TL_messages_readMessageContents)},
  { 969, -1, sizeof(TL_messages_getStickers)},
  { 976, -1, sizeof(TL_messages_getAllStickers)},
  { 982, -1, sizeof(TL_messages_getWebPagePreview)},
  { 989, -1, sizeof(TL_messages_exportChatInvite)},
  { 995, -1, sizeof(TL_messages_checkChatInvite)},
  { 1001, -1, sizeof(TL_messages_importChatInvite)},
  { 1007, -1, sizeof(TL_messages_getStickerSet)},
  { 1013, -1, sizeof(TL_messages_installStickerSet)},
  { 1020, -1, sizeof(TL_messages_uninstallStickerSet)},
  { 1026, -1, sizeof(TL_messages_startBot)},
  { 1035, -1, sizeof(TL_messages_getMessagesViews)},
  { 1043, -1, sizeof(TL_messages_toggleChatAdmins)},
  { 1050, -1, sizeof(TL_messages_editChatAdmin)},
  { 1058, -1, sizeof(TL_messages_migrateChat)},
  { 1064, -1, sizeof(TL_messages_searchGlobal)},
  { 1074, -1, sizeof(TL_messages_reorderStickerSets)},
  { 1081, -1, sizeof(TL_messages_getDocumentByHash)},
  { 1089, -1, sizeof(TL_messages_searchGifs)},
  { 1096, -1, sizeof(TL_messages_getSavedGifs)},
  { 1102, -1, sizeof(TL_messages_saveGif)},
  { 1109, -1, sizeof(TL_messages_getInlineBotResults)},
  { 1119, -1, sizeof(TL_messages_setInlineBotResults)},
  { 1131, -1, sizeof(TL_messages_sendInlineBotResult)},
  { 1144, -1, sizeof(TL_messages_getMessageEditData)},
  { 1151, -1, sizeof(TL_messages_editMessage)},
  { 1165, -1, sizeof(TL_messages_editInlineBotMessage)},
  { 1178, -1, sizeof(TL_messages_getBotCallbackAnswer)},
  { 1187, -1, sizeof(TL_messages_setBotCallbackAnswer)},
  { 1197, -1, sizeof(TL_messages_getPeerDialogs)},
  { 1203, -1, sizeof(TL_messages_saveDraft)},
  { 1213, -1, sizeof(TL_messages_getAllDrafts)},
  { 1218, -1, sizeof(TL_messages_getFeaturedStickers)},
  { 1224, -1, sizeof(TL_messages_readFeaturedStickers)},
  { 1230, -1, sizeof(TL_messages_getRecentStickers)},
  { 1237, -1, sizeof(TL_messages_saveRecentSticker)},
  { 1245, -1, sizeof(TL_messages_clearRecentStickers)},
  { 1251, -1, sizeof(TL_messages_getArchivedStickers)},
  { 1259, -1, sizeof(TL_messages_getMaskStickers)},
  { 1265, -1, sizeof(TL_messages_getAttachedStickers)},
  { 1271, -1, sizeof(TL_messages_setGameScore)},
  { 1282, -1, sizeof(TL_messages_setInlineGameScore)},
  { 1292, -1, sizeof(TL_messages_getGameHighScores)},
  { 1300, -1, sizeof(TL_messages_getInlineGameHighScores)},
  { 1307, -1, sizeof(TL_messages_getCommonChats)},
  { 1315, -1, sizeof(TL_messages_getAllChats)},
  { 1321, -1, sizeof(TL_messages_getWebPage)},
  { 1328, -1, sizeof(TL_messages_toggleDialogPin)},
  { 1335, -1, sizeof(TL_messages_reorderPinnedDialogs)},
  { 1342, -1, sizeof(TL_messages_getPinnedDialogs)},
  { 1347, -1, sizeof(TL_messages_setBotShippingResults)},
  { 1355, -1, sizeof(TL_messages_setBotPrecheckoutResults)},
  { 1363, -1, sizeof(TL_messages_uploadMedia)},
  { 1370, -1, sizeof(TL_messages_sendScreenshotNotification)},
  { 1378, -1, sizeof(TL_messages_getFavedStickers)},
  { 1384, -1, sizeof(TL_messages_faveSticker)},
  { 1391, -1, sizeof(TL_messages_getUnreadMentions)},
  { 1402, -1, sizeof(TL_messages_readMentions)},
  { 1408, -1, sizeof(TL_messages_getRecentLocations)},
  { 1416, -1, sizeof(TL_messages_sendMultiMedia)},
  { 1427, -1, sizeof(TL_messages_uploadEncryptedFile)},
  { 1434, -1, sizeof(TL_messages_searchStickerSets)},
  { 1442, -1, sizeof(TL_messages_getSplitRanges)},
  { 1447, -1, sizeof(TL_messages_markDialogUnread)},
  { 1454, -1, sizeof(TL_messages_getDialogUnreadMarks)},
  { 1459, -1, sizeof(TL_messages_clearAllDrafts)},
  { 1464, -1, sizeof(TL_updates_getState)},
  { 1469, -1, sizeof(TL_updates_getDifference)},
  { 1478, -1, sizeof(TL_updates_getChannelDifference)},
  { 1488, -1, sizeof(TL_photos_updateProfilePhoto)},
  { 1494, -1, sizeof(TL_photos_uploadProfilePhoto)},
  { 1500, -1, sizeof(TL_photos_deletePhotos)},
  { 1506, -1, sizeof(TL_photos_getUserPhotos)},
  { 1515, -1, sizeof(TL_upload_saveFilePart)},
  { 1523, -1, sizeof(TL_upload_getFile)},
  { 1531, -1, sizeof(TL_upload_saveBigFilePart)},
  { 1540, -1, sizeof(TL_upload_getWebFile)},
  { 1548, -1, sizeof(TL_upload_getCdnFile)},
  { 1556, -1, sizeof(TL_upload_reuploadCdnFile)},
  { 1563, -1, sizeof(TL_upload_getCdnFileHashes)},
  { 1570, -1, sizeof(TL_upload_getFileHashes)},
  { 1577, -1, sizeof(TL_help_getConfig)},
  { 1582, -1, sizeof(TL_help_getNearestDc)},
  { 1587, -1, sizeof(TL_help_getAppUpdate)},
  { 1593, -1, sizeof(TL_help_saveAppLog)},
  { 1599, -1, sizeof(TL_help_getInviteText)},
  { 1604, -1, sizeof(TL_help_getSupport)},
  { 1609, -1, sizeof(TL_help_getAppChangelog)},
  { 1615, -1, sizeof(TL_help_setBotUpdatesStatus)},
  { 1622, -1, sizeof(TL_help_getCdnConfig)},
  { 1627, -1, sizeof(TL_help_getRecentMeUrls)},
  { 1633, -1, sizeof(TL_help_getProxyData)},
  { 1638, -1, sizeof(TL_help_getTermsOfServiceUpdate)},
  { 1643, -1, sizeof(TL_help_acceptTermsOfService)},
  { 1649, -1, sizeof(TL_help_getDeepLinkInfo)},
  { 1655, -1, sizeof(TL_help_getPassportConfig)},
  { 1661, -1, sizeof(TL_channels_readHistory)},
  { 1668, -1, sizeof(TL_channels_deleteMessages)},
  { 1675, -1, sizeof(TL_channels_deleteUserHistory)},
  { 1682, -1, sizeof(TL_channels_reportSpam)},
  { 1690, -1, sizeof(TL_channels_getMessages)},
  { 1697, -1, sizeof(TL_channels_getParticipants)},
  { 1707, -1, sizeof(TL_channels_getParticipant)},
  { 1714, -1, sizeof(TL_channels_getChannels)},
  { 1720, -1, sizeof(TL_channels_getFullChannel)},
  { 1726, -1, sizeof(TL_channels_createChannel)},
  { 1735, -1, sizeof(TL_channels_editAbout)},
  { 1742, -1, sizeof(TL_channels_editAdmin)},
  { 1750, -1, sizeof(TL_channels_editTitle)},
  { 1757, -1, sizeof(TL_channels_editPhoto)},
  { 1764, -1, sizeof(TL_channels_checkUsername)},
  { 1771, -1, sizeof(TL_channels_updateUsername)},
  { 1778, -1, sizeof(TL_channels_joinChannel)},
  { 1784, -1, sizeof(TL_channels_leaveChannel)},
  { 1790, -1, sizeof(TL_channels_inviteToChannel)},
  { 1797, -1, sizeof(TL_channels_exportInvite)},
  { 1803, -1, sizeof(TL_channels_deleteChannel)},
  { 1809, -1, sizeof(TL_channels_toggleInvites)},
  { 1816, -1, sizeof(TL_channels_exportMessageLink)},
  { 1824, -1, sizeof(TL_channels_toggleSignatures)},
  { 1831, -1, sizeof(TL_channels_updatePinnedMessage)},
  { 1839, -1, sizeof(TL_channels_getAdminedPublicChannels)},
  { 1844, -1, sizeof(TL_channels_editBanned)},
  { 1852, -1, sizeof(TL_channels_getAdminLog)},
  { 1864, -1, sizeof(TL_channels_setStickers)},
  { 1871, -1, sizeof(TL_channels_readMessageContents)},
  { 1878, -1, sizeof(TL_channels_deleteHistory)},
  { 1885, -1, sizeof(TL_channels_togglePreHistoryHidden)},
  { 1892, -1, sizeof(TL_channels_getLeftChannels)},
  { 1898, -1, sizeof(TL_bots_sendCustomRequest)},
  { 1905, -1, sizeof(TL_bots_answerWebhookJSONQuery)},
  { 1912, -1, sizeof(TL_payments_getPaymentForm)},
  { 1918, -1, sizeof(TL_payments_getPaymentReceipt)},
  { 1924, -1, sizeof(TL_payments_validateRequestedInfo)},
  { 1932, -1, sizeof(TL_payments_sendPaymentForm)},
  { 1941, -1, sizeof(TL_payments_getSavedInfo)},
  { 1946, -1, sizeof(TL_payments_clearSavedInfo)},
  { 1953, -1, sizeof(TL_stickers_createStickerSet)},
  { 1963, -1, sizeof(TL_stickers_removeStickerFromSet)},
  { 1969, -1, sizeof(TL_stickers_changeStickerPosition)},
  { 1976, -1, sizeof(TL_stickers_addStickerToSet)},
  { 1983, -1, sizeof(TL_phone_getCallConfig)},
  { 1988, -1, sizeof(TL_phone_requestCall)},
  { 1997, -1, sizeof(TL_phone_acceptCall)},
  { 2005, -1, sizeof(TL_phone_confirmCall)},
  { 2014, -1, sizeof(TL_phone_receivedCall)},
  { 2020, -1, sizeof(TL_phone_discardCall)},
  { 2029, -1, sizeof(TL_phone_setCallRating)},
  { 2037, -1, sizeof(TL_phone_saveCallDebug)},
  { 2044, -1, sizeof(TL_langpack_getLangPack)},
  { 2051, -1, sizeof(TL_langpack_getStrings)},
  { 2059, -1, sizeof(TL_langpack_getDifference)},
  { 2065, -1, sizeof(TL_langpack_getLanguages)},
  { 2071, -1, sizeof(Vector_LangPackLanguage)},
  { 2077, -1, sizeof(Vector_WallPaper)},
  { 2083, -1, sizeof(Vector_SecureValue)},
  { 2089, -1, sizeof(Vector_User)},
  { 2095, -1, sizeof(Vector_ContactStatus)},
  { 2101, -1, sizeof(Vector_int)},
  { 2107, -1, sizeof(Vector_SavedContact)},
  { 2113, -1, sizeof(Vector_ReceivedNotifyMessage)},
  { 2119, -1, sizeof(Vector_long)},
  { 2125, -1, sizeof(Vector_StickerSetCovered)},
  { 2131, -1, sizeof(Vector_MessageRange)},
  { 2137, -1, sizeof(Vector_DialogPeer)},
  { 2143, -1, sizeof(Vector_FileHash)},
  { 2149, -1, sizeof(Vector_LangPackString)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_TL_langpack_getLanguagesLayer70_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TL_help_getScheme_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TL_messages_readHistoryLayer2_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TL_help_getInviteTextLayer46_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TL_help_getAppUpdateLayer46_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TL_updates_getChannelDifferenceLayer46_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TL_auth_sendCodeLayer51_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TL_messages_getHistoryLayer51_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TL_initConnectionLayer68_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TL_messages_searchLayer68_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TL_account_registerDeviceLayer71_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TL_account_unregisterDeviceLayer71_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TL_langpack_getLangPackLayer71_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TL_invokeAfterMsg_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TL_invokeAfterMsgs_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TL_initConnection_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TL_invokeWithLayer_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TL_invokeWithoutUpdates_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TL_invokeWithMessagesRange_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TL_invokeWithTakeout_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TL_auth_sendCode_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TL_auth_signUp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TL_auth_signIn_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TL_auth_logOut_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TL_auth_resetAuthorizations_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TL_auth_exportAuthorization_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TL_auth_importAuthorization_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TL_auth_bindTempAuthKey_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TL_auth_importBotAuthorization_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TL_auth_checkPassword_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TL_auth_requestPasswordRecovery_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TL_auth_recoverPassword_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TL_auth_resendCode_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TL_auth_cancelCode_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TL_auth_dropTempAuthKeys_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TL_account_registerDevice_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TL_account_unregisterDevice_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TL_account_updateNotifySettings_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TL_account_getNotifySettings_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TL_account_resetNotifySettings_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TL_account_updateProfile_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TL_account_updateStatus_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TL_account_getWallPapers_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TL_account_reportPeer_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TL_account_checkUsername_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TL_account_updateUsername_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TL_account_getPrivacy_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TL_account_setPrivacy_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TL_account_deleteAccount_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TL_account_getAccountTTL_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TL_account_setAccountTTL_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TL_account_sendChangePhoneCode_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TL_account_changePhone_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TL_account_updateDeviceLocked_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TL_account_getAuthorizations_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TL_account_resetAuthorization_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TL_account_getPassword_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TL_account_getPasswordSettings_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TL_account_updatePasswordSettings_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TL_account_sendConfirmPhoneCode_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TL_account_confirmPhone_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TL_account_getTmpPassword_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TL_account_getWebAuthorizations_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TL_account_resetWebAuthorization_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TL_account_resetWebAuthorizations_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TL_account_getAllSecureValues_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TL_account_getSecureValue_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TL_account_saveSecureValue_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TL_account_deleteSecureValue_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TL_account_getAuthorizationForm_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TL_account_acceptAuthorization_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TL_account_sendVerifyPhoneCode_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TL_account_verifyPhone_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TL_account_sendVerifyEmailCode_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TL_account_verifyEmail_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TL_account_initTakeoutSession_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TL_account_finishTakeoutSession_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TL_users_getUsers_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TL_users_getFullUser_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TL_users_setSecureValueErrors_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TL_contacts_getStatuses_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TL_contacts_getContacts_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TL_contacts_importContacts_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TL_contacts_deleteContact_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TL_contacts_deleteContacts_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TL_contacts_block_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TL_contacts_unblock_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TL_contacts_getBlocked_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TL_contacts_exportCard_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TL_contacts_importCard_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TL_contacts_search_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TL_contacts_resolveUsername_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TL_contacts_getTopPeers_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TL_contacts_resetTopPeerRating_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TL_contacts_resetSaved_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TL_contacts_getSaved_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TL_contacts_toggleTopPeers_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TL_messages_getMessages_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TL_messages_getDialogs_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TL_messages_getHistory_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TL_messages_search_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TL_messages_readHistory_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TL_messages_deleteHistory_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TL_messages_deleteMessages_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TL_messages_receivedMessages_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TL_messages_setTyping_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TL_messages_sendMessage_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TL_messages_sendMedia_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TL_messages_forwardMessages_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TL_messages_reportSpam_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TL_messages_hideReportSpam_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TL_messages_getPeerSettings_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TL_messages_report_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TL_messages_getChats_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TL_messages_getFullChat_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TL_messages_editChatTitle_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TL_messages_editChatPhoto_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TL_messages_addChatUser_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TL_messages_deleteChatUser_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TL_messages_createChat_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TL_messages_getDhConfig_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TL_messages_requestEncryption_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TL_messages_acceptEncryption_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TL_messages_discardEncryption_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TL_messages_setEncryptedTyping_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TL_messages_readEncryptedHistory_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TL_messages_sendEncrypted_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TL_messages_sendEncryptedFile_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TL_messages_sendEncryptedService_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TL_messages_receivedQueue_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TL_messages_reportEncryptedSpam_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TL_messages_readMessageContents_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TL_messages_getStickers_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TL_messages_getAllStickers_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TL_messages_getWebPagePreview_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TL_messages_exportChatInvite_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TL_messages_checkChatInvite_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TL_messages_importChatInvite_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TL_messages_getStickerSet_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TL_messages_installStickerSet_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TL_messages_uninstallStickerSet_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TL_messages_startBot_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TL_messages_getMessagesViews_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TL_messages_toggleChatAdmins_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TL_messages_editChatAdmin_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TL_messages_migrateChat_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TL_messages_searchGlobal_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TL_messages_reorderStickerSets_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TL_messages_getDocumentByHash_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TL_messages_searchGifs_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TL_messages_getSavedGifs_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TL_messages_saveGif_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TL_messages_getInlineBotResults_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TL_messages_setInlineBotResults_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TL_messages_sendInlineBotResult_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TL_messages_getMessageEditData_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TL_messages_editMessage_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TL_messages_editInlineBotMessage_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TL_messages_getBotCallbackAnswer_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TL_messages_setBotCallbackAnswer_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TL_messages_getPeerDialogs_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TL_messages_saveDraft_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TL_messages_getAllDrafts_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TL_messages_getFeaturedStickers_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TL_messages_readFeaturedStickers_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TL_messages_getRecentStickers_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TL_messages_saveRecentSticker_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TL_messages_clearRecentStickers_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TL_messages_getArchivedStickers_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TL_messages_getMaskStickers_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TL_messages_getAttachedStickers_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TL_messages_setGameScore_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TL_messages_setInlineGameScore_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TL_messages_getGameHighScores_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TL_messages_getInlineGameHighScores_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TL_messages_getCommonChats_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TL_messages_getAllChats_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TL_messages_getWebPage_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TL_messages_toggleDialogPin_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TL_messages_reorderPinnedDialogs_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TL_messages_getPinnedDialogs_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TL_messages_setBotShippingResults_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TL_messages_setBotPrecheckoutResults_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TL_messages_uploadMedia_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TL_messages_sendScreenshotNotification_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TL_messages_getFavedStickers_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TL_messages_faveSticker_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TL_messages_getUnreadMentions_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TL_messages_readMentions_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TL_messages_getRecentLocations_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TL_messages_sendMultiMedia_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TL_messages_uploadEncryptedFile_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TL_messages_searchStickerSets_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TL_messages_getSplitRanges_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TL_messages_markDialogUnread_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TL_messages_getDialogUnreadMarks_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TL_messages_clearAllDrafts_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TL_updates_getState_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TL_updates_getDifference_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TL_updates_getChannelDifference_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TL_photos_updateProfilePhoto_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TL_photos_uploadProfilePhoto_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TL_photos_deletePhotos_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TL_photos_getUserPhotos_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TL_upload_saveFilePart_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TL_upload_getFile_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TL_upload_saveBigFilePart_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TL_upload_getWebFile_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TL_upload_getCdnFile_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TL_upload_reuploadCdnFile_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TL_upload_getCdnFileHashes_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TL_upload_getFileHashes_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TL_help_getConfig_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TL_help_getNearestDc_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TL_help_getAppUpdate_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TL_help_saveAppLog_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TL_help_getInviteText_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TL_help_getSupport_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TL_help_getAppChangelog_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TL_help_setBotUpdatesStatus_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TL_help_getCdnConfig_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TL_help_getRecentMeUrls_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TL_help_getProxyData_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TL_help_getTermsOfServiceUpdate_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TL_help_acceptTermsOfService_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TL_help_getDeepLinkInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TL_help_getPassportConfig_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TL_channels_readHistory_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TL_channels_deleteMessages_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TL_channels_deleteUserHistory_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TL_channels_reportSpam_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TL_channels_getMessages_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TL_channels_getParticipants_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TL_channels_getParticipant_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TL_channels_getChannels_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TL_channels_getFullChannel_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TL_channels_createChannel_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TL_channels_editAbout_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TL_channels_editAdmin_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TL_channels_editTitle_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TL_channels_editPhoto_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TL_channels_checkUsername_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TL_channels_updateUsername_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TL_channels_joinChannel_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TL_channels_leaveChannel_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TL_channels_inviteToChannel_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TL_channels_exportInvite_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TL_channels_deleteChannel_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TL_channels_toggleInvites_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TL_channels_exportMessageLink_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TL_channels_toggleSignatures_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TL_channels_updatePinnedMessage_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TL_channels_getAdminedPublicChannels_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TL_channels_editBanned_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TL_channels_getAdminLog_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TL_channels_setStickers_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TL_channels_readMessageContents_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TL_channels_deleteHistory_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TL_channels_togglePreHistoryHidden_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TL_channels_getLeftChannels_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TL_bots_sendCustomRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TL_bots_answerWebhookJSONQuery_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TL_payments_getPaymentForm_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TL_payments_getPaymentReceipt_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TL_payments_validateRequestedInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TL_payments_sendPaymentForm_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TL_payments_getSavedInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TL_payments_clearSavedInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TL_stickers_createStickerSet_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TL_stickers_removeStickerFromSet_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TL_stickers_changeStickerPosition_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TL_stickers_addStickerToSet_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TL_phone_getCallConfig_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TL_phone_requestCall_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TL_phone_acceptCall_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TL_phone_confirmCall_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TL_phone_receivedCall_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TL_phone_discardCall_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TL_phone_setCallRating_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TL_phone_saveCallDebug_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TL_langpack_getLangPack_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TL_langpack_getStrings_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TL_langpack_getDifference_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TL_langpack_getLanguages_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Vector_LangPackLanguage_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Vector_WallPaper_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Vector_SecureValue_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Vector_User_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Vector_ContactStatus_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Vector_int_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Vector_SavedContact_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Vector_ReceivedNotifyMessage_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Vector_long_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Vector_StickerSetCovered_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Vector_MessageRange_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Vector_DialogPeer_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Vector_FileHash_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Vector_LangPackString_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "schema.tl.sync_service.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 298);
}

}  // namespace
void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  ::mtproto::protobuf_schema_2etl_2ecore_5ftypes_2eproto::InitDefaults();
  ::mtproto::protobuf_schema_2etl_2esync_2eproto::InitDefaults();
  _TL_langpack_getLanguagesLayer70_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TL_langpack_getLanguagesLayer70_default_instance_);_TL_help_getScheme_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TL_help_getScheme_default_instance_);_TL_messages_readHistoryLayer2_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TL_messages_readHistoryLayer2_default_instance_);_TL_help_getInviteTextLayer46_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TL_help_getInviteTextLayer46_default_instance_);_TL_help_getAppUpdateLayer46_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TL_help_getAppUpdateLayer46_default_instance_);_TL_updates_getChannelDifferenceLayer46_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TL_updates_getChannelDifferenceLayer46_default_instance_);_TL_auth_sendCodeLayer51_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TL_auth_sendCodeLayer51_default_instance_);_TL_messages_getHistoryLayer51_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TL_messages_getHistoryLayer51_default_instance_);_TL_initConnectionLayer68_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TL_initConnectionLayer68_default_instance_);_TL_messages_searchLayer68_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TL_messages_searchLayer68_default_instance_);_TL_account_registerDeviceLayer71_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TL_account_registerDeviceLayer71_default_instance_);_TL_account_unregisterDeviceLayer71_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TL_account_unregisterDeviceLayer71_default_instance_);_TL_langpack_getLangPackLayer71_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TL_langpack_getLangPackLayer71_default_instance_);_TL_invokeAfterMsg_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TL_invokeAfterMsg_default_instance_);_TL_invokeAfterMsgs_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TL_invokeAfterMsgs_default_instance_);_TL_initConnection_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TL_initConnection_default_instance_);_TL_invokeWithLayer_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TL_invokeWithLayer_default_instance_);_TL_invokeWithoutUpdates_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TL_invokeWithoutUpdates_default_instance_);_TL_invokeWithMessagesRange_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TL_invokeWithMessagesRange_default_instance_);_TL_invokeWithTakeout_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TL_invokeWithTakeout_default_instance_);_TL_auth_sendCode_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TL_auth_sendCode_default_instance_);_TL_auth_signUp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TL_auth_signUp_default_instance_);_TL_auth_signIn_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TL_auth_signIn_default_instance_);_TL_auth_logOut_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TL_auth_logOut_default_instance_);_TL_auth_resetAuthorizations_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TL_auth_resetAuthorizations_default_instance_);_TL_auth_exportAuthorization_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TL_auth_exportAuthorization_default_instance_);_TL_auth_importAuthorization_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TL_auth_importAuthorization_default_instance_);_TL_auth_bindTempAuthKey_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TL_auth_bindTempAuthKey_default_instance_);_TL_auth_importBotAuthorization_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TL_auth_importBotAuthorization_default_instance_);_TL_auth_checkPassword_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TL_auth_checkPassword_default_instance_);_TL_auth_requestPasswordRecovery_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TL_auth_requestPasswordRecovery_default_instance_);_TL_auth_recoverPassword_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TL_auth_recoverPassword_default_instance_);_TL_auth_resendCode_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TL_auth_resendCode_default_instance_);_TL_auth_cancelCode_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TL_auth_cancelCode_default_instance_);_TL_auth_dropTempAuthKeys_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TL_auth_dropTempAuthKeys_default_instance_);_TL_account_registerDevice_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TL_account_registerDevice_default_instance_);_TL_account_unregisterDevice_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TL_account_unregisterDevice_default_instance_);_TL_account_updateNotifySettings_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TL_account_updateNotifySettings_default_instance_);_TL_account_getNotifySettings_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TL_account_getNotifySettings_default_instance_);_TL_account_resetNotifySettings_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TL_account_resetNotifySettings_default_instance_);_TL_account_updateProfile_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TL_account_updateProfile_default_instance_);_TL_account_updateStatus_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TL_account_updateStatus_default_instance_);_TL_account_getWallPapers_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TL_account_getWallPapers_default_instance_);_TL_account_reportPeer_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TL_account_reportPeer_default_instance_);_TL_account_checkUsername_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TL_account_checkUsername_default_instance_);_TL_account_updateUsername_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TL_account_updateUsername_default_instance_);_TL_account_getPrivacy_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TL_account_getPrivacy_default_instance_);_TL_account_setPrivacy_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TL_account_setPrivacy_default_instance_);_TL_account_deleteAccount_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TL_account_deleteAccount_default_instance_);_TL_account_getAccountTTL_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TL_account_getAccountTTL_default_instance_);_TL_account_setAccountTTL_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TL_account_setAccountTTL_default_instance_);_TL_account_sendChangePhoneCode_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TL_account_sendChangePhoneCode_default_instance_);_TL_account_changePhone_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TL_account_changePhone_default_instance_);_TL_account_updateDeviceLocked_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TL_account_updateDeviceLocked_default_instance_);_TL_account_getAuthorizations_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TL_account_getAuthorizations_default_instance_);_TL_account_resetAuthorization_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TL_account_resetAuthorization_default_instance_);_TL_account_getPassword_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TL_account_getPassword_default_instance_);_TL_account_getPasswordSettings_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TL_account_getPasswordSettings_default_instance_);_TL_account_updatePasswordSettings_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TL_account_updatePasswordSettings_default_instance_);_TL_account_sendConfirmPhoneCode_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TL_account_sendConfirmPhoneCode_default_instance_);_TL_account_confirmPhone_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TL_account_confirmPhone_default_instance_);_TL_account_getTmpPassword_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TL_account_getTmpPassword_default_instance_);_TL_account_getWebAuthorizations_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TL_account_getWebAuthorizations_default_instance_);_TL_account_resetWebAuthorization_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TL_account_resetWebAuthorization_default_instance_);_TL_account_resetWebAuthorizations_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TL_account_resetWebAuthorizations_default_instance_);_TL_account_getAllSecureValues_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TL_account_getAllSecureValues_default_instance_);_TL_account_getSecureValue_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TL_account_getSecureValue_default_instance_);_TL_account_saveSecureValue_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TL_account_saveSecureValue_default_instance_);_TL_account_deleteSecureValue_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TL_account_deleteSecureValue_default_instance_);_TL_account_getAuthorizationForm_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TL_account_getAuthorizationForm_default_instance_);_TL_account_acceptAuthorization_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TL_account_acceptAuthorization_default_instance_);_TL_account_sendVerifyPhoneCode_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TL_account_sendVerifyPhoneCode_default_instance_);_TL_account_verifyPhone_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TL_account_verifyPhone_default_instance_);_TL_account_sendVerifyEmailCode_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TL_account_sendVerifyEmailCode_default_instance_);_TL_account_verifyEmail_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TL_account_verifyEmail_default_instance_);_TL_account_initTakeoutSession_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TL_account_initTakeoutSession_default_instance_);_TL_account_finishTakeoutSession_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TL_account_finishTakeoutSession_default_instance_);_TL_users_getUsers_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TL_users_getUsers_default_instance_);_TL_users_getFullUser_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TL_users_getFullUser_default_instance_);_TL_users_setSecureValueErrors_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TL_users_setSecureValueErrors_default_instance_);_TL_contacts_getStatuses_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TL_contacts_getStatuses_default_instance_);_TL_contacts_getContacts_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TL_contacts_getContacts_default_instance_);_TL_contacts_importContacts_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TL_contacts_importContacts_default_instance_);_TL_contacts_deleteContact_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TL_contacts_deleteContact_default_instance_);_TL_contacts_deleteContacts_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TL_contacts_deleteContacts_default_instance_);_TL_contacts_block_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TL_contacts_block_default_instance_);_TL_contacts_unblock_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TL_contacts_unblock_default_instance_);_TL_contacts_getBlocked_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TL_contacts_getBlocked_default_instance_);_TL_contacts_exportCard_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TL_contacts_exportCard_default_instance_);_TL_contacts_importCard_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TL_contacts_importCard_default_instance_);_TL_contacts_search_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TL_contacts_search_default_instance_);_TL_contacts_resolveUsername_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TL_contacts_resolveUsername_default_instance_);_TL_contacts_getTopPeers_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TL_contacts_getTopPeers_default_instance_);_TL_contacts_resetTopPeerRating_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TL_contacts_resetTopPeerRating_default_instance_);_TL_contacts_resetSaved_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TL_contacts_resetSaved_default_instance_);_TL_contacts_getSaved_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TL_contacts_getSaved_default_instance_);_TL_contacts_toggleTopPeers_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TL_contacts_toggleTopPeers_default_instance_);_TL_messages_getMessages_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TL_messages_getMessages_default_instance_);_TL_messages_getDialogs_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TL_messages_getDialogs_default_instance_);_TL_messages_getHistory_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TL_messages_getHistory_default_instance_);_TL_messages_search_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TL_messages_search_default_instance_);_TL_messages_readHistory_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TL_messages_readHistory_default_instance_);_TL_messages_deleteHistory_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TL_messages_deleteHistory_default_instance_);_TL_messages_deleteMessages_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TL_messages_deleteMessages_default_instance_);_TL_messages_receivedMessages_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TL_messages_receivedMessages_default_instance_);_TL_messages_setTyping_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TL_messages_setTyping_default_instance_);_TL_messages_sendMessage_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TL_messages_sendMessage_default_instance_);_TL_messages_sendMedia_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TL_messages_sendMedia_default_instance_);_TL_messages_forwardMessages_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TL_messages_forwardMessages_default_instance_);_TL_messages_reportSpam_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TL_messages_reportSpam_default_instance_);_TL_messages_hideReportSpam_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TL_messages_hideReportSpam_default_instance_);_TL_messages_getPeerSettings_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TL_messages_getPeerSettings_default_instance_);_TL_messages_report_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TL_messages_report_default_instance_);_TL_messages_getChats_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TL_messages_getChats_default_instance_);_TL_messages_getFullChat_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TL_messages_getFullChat_default_instance_);_TL_messages_editChatTitle_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TL_messages_editChatTitle_default_instance_);_TL_messages_editChatPhoto_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TL_messages_editChatPhoto_default_instance_);_TL_messages_addChatUser_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TL_messages_addChatUser_default_instance_);_TL_messages_deleteChatUser_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TL_messages_deleteChatUser_default_instance_);_TL_messages_createChat_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TL_messages_createChat_default_instance_);_TL_messages_getDhConfig_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TL_messages_getDhConfig_default_instance_);_TL_messages_requestEncryption_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TL_messages_requestEncryption_default_instance_);_TL_messages_acceptEncryption_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TL_messages_acceptEncryption_default_instance_);_TL_messages_discardEncryption_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TL_messages_discardEncryption_default_instance_);_TL_messages_setEncryptedTyping_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TL_messages_setEncryptedTyping_default_instance_);_TL_messages_readEncryptedHistory_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TL_messages_readEncryptedHistory_default_instance_);_TL_messages_sendEncrypted_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TL_messages_sendEncrypted_default_instance_);_TL_messages_sendEncryptedFile_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TL_messages_sendEncryptedFile_default_instance_);_TL_messages_sendEncryptedService_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TL_messages_sendEncryptedService_default_instance_);_TL_messages_receivedQueue_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TL_messages_receivedQueue_default_instance_);_TL_messages_reportEncryptedSpam_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TL_messages_reportEncryptedSpam_default_instance_);_TL_messages_readMessageContents_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TL_messages_readMessageContents_default_instance_);_TL_messages_getStickers_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TL_messages_getStickers_default_instance_);_TL_messages_getAllStickers_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TL_messages_getAllStickers_default_instance_);_TL_messages_getWebPagePreview_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TL_messages_getWebPagePreview_default_instance_);_TL_messages_exportChatInvite_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TL_messages_exportChatInvite_default_instance_);_TL_messages_checkChatInvite_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TL_messages_checkChatInvite_default_instance_);_TL_messages_importChatInvite_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TL_messages_importChatInvite_default_instance_);_TL_messages_getStickerSet_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TL_messages_getStickerSet_default_instance_);_TL_messages_installStickerSet_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TL_messages_installStickerSet_default_instance_);_TL_messages_uninstallStickerSet_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TL_messages_uninstallStickerSet_default_instance_);_TL_messages_startBot_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TL_messages_startBot_default_instance_);_TL_messages_getMessagesViews_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TL_messages_getMessagesViews_default_instance_);_TL_messages_toggleChatAdmins_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TL_messages_toggleChatAdmins_default_instance_);_TL_messages_editChatAdmin_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TL_messages_editChatAdmin_default_instance_);_TL_messages_migrateChat_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TL_messages_migrateChat_default_instance_);_TL_messages_searchGlobal_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TL_messages_searchGlobal_default_instance_);_TL_messages_reorderStickerSets_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TL_messages_reorderStickerSets_default_instance_);_TL_messages_getDocumentByHash_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TL_messages_getDocumentByHash_default_instance_);_TL_messages_searchGifs_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TL_messages_searchGifs_default_instance_);_TL_messages_getSavedGifs_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TL_messages_getSavedGifs_default_instance_);_TL_messages_saveGif_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TL_messages_saveGif_default_instance_);_TL_messages_getInlineBotResults_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TL_messages_getInlineBotResults_default_instance_);_TL_messages_setInlineBotResults_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TL_messages_setInlineBotResults_default_instance_);_TL_messages_sendInlineBotResult_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TL_messages_sendInlineBotResult_default_instance_);_TL_messages_getMessageEditData_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TL_messages_getMessageEditData_default_instance_);_TL_messages_editMessage_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TL_messages_editMessage_default_instance_);_TL_messages_editInlineBotMessage_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TL_messages_editInlineBotMessage_default_instance_);_TL_messages_getBotCallbackAnswer_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TL_messages_getBotCallbackAnswer_default_instance_);_TL_messages_setBotCallbackAnswer_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TL_messages_setBotCallbackAnswer_default_instance_);_TL_messages_getPeerDialogs_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TL_messages_getPeerDialogs_default_instance_);_TL_messages_saveDraft_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TL_messages_saveDraft_default_instance_);_TL_messages_getAllDrafts_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TL_messages_getAllDrafts_default_instance_);_TL_messages_getFeaturedStickers_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TL_messages_getFeaturedStickers_default_instance_);_TL_messages_readFeaturedStickers_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TL_messages_readFeaturedStickers_default_instance_);_TL_messages_getRecentStickers_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TL_messages_getRecentStickers_default_instance_);_TL_messages_saveRecentSticker_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TL_messages_saveRecentSticker_default_instance_);_TL_messages_clearRecentStickers_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TL_messages_clearRecentStickers_default_instance_);_TL_messages_getArchivedStickers_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TL_messages_getArchivedStickers_default_instance_);_TL_messages_getMaskStickers_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TL_messages_getMaskStickers_default_instance_);_TL_messages_getAttachedStickers_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TL_messages_getAttachedStickers_default_instance_);_TL_messages_setGameScore_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TL_messages_setGameScore_default_instance_);_TL_messages_setInlineGameScore_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TL_messages_setInlineGameScore_default_instance_);_TL_messages_getGameHighScores_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TL_messages_getGameHighScores_default_instance_);_TL_messages_getInlineGameHighScores_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TL_messages_getInlineGameHighScores_default_instance_);_TL_messages_getCommonChats_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TL_messages_getCommonChats_default_instance_);_TL_messages_getAllChats_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TL_messages_getAllChats_default_instance_);_TL_messages_getWebPage_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TL_messages_getWebPage_default_instance_);_TL_messages_toggleDialogPin_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TL_messages_toggleDialogPin_default_instance_);_TL_messages_reorderPinnedDialogs_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TL_messages_reorderPinnedDialogs_default_instance_);_TL_messages_getPinnedDialogs_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TL_messages_getPinnedDialogs_default_instance_);_TL_messages_setBotShippingResults_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TL_messages_setBotShippingResults_default_instance_);_TL_messages_setBotPrecheckoutResults_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TL_messages_setBotPrecheckoutResults_default_instance_);_TL_messages_uploadMedia_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TL_messages_uploadMedia_default_instance_);_TL_messages_sendScreenshotNotification_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TL_messages_sendScreenshotNotification_default_instance_);_TL_messages_getFavedStickers_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TL_messages_getFavedStickers_default_instance_);_TL_messages_faveSticker_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TL_messages_faveSticker_default_instance_);_TL_messages_getUnreadMentions_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TL_messages_getUnreadMentions_default_instance_);_TL_messages_readMentions_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TL_messages_readMentions_default_instance_);_TL_messages_getRecentLocations_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TL_messages_getRecentLocations_default_instance_);_TL_messages_sendMultiMedia_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TL_messages_sendMultiMedia_default_instance_);_TL_messages_uploadEncryptedFile_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TL_messages_uploadEncryptedFile_default_instance_);_TL_messages_searchStickerSets_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TL_messages_searchStickerSets_default_instance_);_TL_messages_getSplitRanges_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TL_messages_getSplitRanges_default_instance_);_TL_messages_markDialogUnread_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TL_messages_markDialogUnread_default_instance_);_TL_messages_getDialogUnreadMarks_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TL_messages_getDialogUnreadMarks_default_instance_);_TL_messages_clearAllDrafts_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TL_messages_clearAllDrafts_default_instance_);_TL_updates_getState_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TL_updates_getState_default_instance_);_TL_updates_getDifference_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TL_updates_getDifference_default_instance_);_TL_updates_getChannelDifference_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TL_updates_getChannelDifference_default_instance_);_TL_photos_updateProfilePhoto_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TL_photos_updateProfilePhoto_default_instance_);_TL_photos_uploadProfilePhoto_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TL_photos_uploadProfilePhoto_default_instance_);_TL_photos_deletePhotos_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TL_photos_deletePhotos_default_instance_);_TL_photos_getUserPhotos_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TL_photos_getUserPhotos_default_instance_);_TL_upload_saveFilePart_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TL_upload_saveFilePart_default_instance_);_TL_upload_getFile_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TL_upload_getFile_default_instance_);_TL_upload_saveBigFilePart_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TL_upload_saveBigFilePart_default_instance_);_TL_upload_getWebFile_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TL_upload_getWebFile_default_instance_);_TL_upload_getCdnFile_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TL_upload_getCdnFile_default_instance_);_TL_upload_reuploadCdnFile_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TL_upload_reuploadCdnFile_default_instance_);_TL_upload_getCdnFileHashes_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TL_upload_getCdnFileHashes_default_instance_);_TL_upload_getFileHashes_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TL_upload_getFileHashes_default_instance_);_TL_help_getConfig_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TL_help_getConfig_default_instance_);_TL_help_getNearestDc_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TL_help_getNearestDc_default_instance_);_TL_help_getAppUpdate_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TL_help_getAppUpdate_default_instance_);_TL_help_saveAppLog_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TL_help_saveAppLog_default_instance_);_TL_help_getInviteText_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TL_help_getInviteText_default_instance_);_TL_help_getSupport_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TL_help_getSupport_default_instance_);_TL_help_getAppChangelog_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TL_help_getAppChangelog_default_instance_);_TL_help_setBotUpdatesStatus_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TL_help_setBotUpdatesStatus_default_instance_);_TL_help_getCdnConfig_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TL_help_getCdnConfig_default_instance_);_TL_help_getRecentMeUrls_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TL_help_getRecentMeUrls_default_instance_);_TL_help_getProxyData_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TL_help_getProxyData_default_instance_);_TL_help_getTermsOfServiceUpdate_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TL_help_getTermsOfServiceUpdate_default_instance_);_TL_help_acceptTermsOfService_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TL_help_acceptTermsOfService_default_instance_);_TL_help_getDeepLinkInfo_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TL_help_getDeepLinkInfo_default_instance_);_TL_help_getPassportConfig_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TL_help_getPassportConfig_default_instance_);_TL_channels_readHistory_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TL_channels_readHistory_default_instance_);_TL_channels_deleteMessages_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TL_channels_deleteMessages_default_instance_);_TL_channels_deleteUserHistory_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TL_channels_deleteUserHistory_default_instance_);_TL_channels_reportSpam_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TL_channels_reportSpam_default_instance_);_TL_channels_getMessages_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TL_channels_getMessages_default_instance_);_TL_channels_getParticipants_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TL_channels_getParticipants_default_instance_);_TL_channels_getParticipant_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TL_channels_getParticipant_default_instance_);_TL_channels_getChannels_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TL_channels_getChannels_default_instance_);_TL_channels_getFullChannel_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TL_channels_getFullChannel_default_instance_);_TL_channels_createChannel_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TL_channels_createChannel_default_instance_);_TL_channels_editAbout_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TL_channels_editAbout_default_instance_);_TL_channels_editAdmin_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TL_channels_editAdmin_default_instance_);_TL_channels_editTitle_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TL_channels_editTitle_default_instance_);_TL_channels_editPhoto_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TL_channels_editPhoto_default_instance_);_TL_channels_checkUsername_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TL_channels_checkUsername_default_instance_);_TL_channels_updateUsername_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TL_channels_updateUsername_default_instance_);_TL_channels_joinChannel_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TL_channels_joinChannel_default_instance_);_TL_channels_leaveChannel_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TL_channels_leaveChannel_default_instance_);_TL_channels_inviteToChannel_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TL_channels_inviteToChannel_default_instance_);_TL_channels_exportInvite_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TL_channels_exportInvite_default_instance_);_TL_channels_deleteChannel_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TL_channels_deleteChannel_default_instance_);_TL_channels_toggleInvites_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TL_channels_toggleInvites_default_instance_);_TL_channels_exportMessageLink_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TL_channels_exportMessageLink_default_instance_);_TL_channels_toggleSignatures_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TL_channels_toggleSignatures_default_instance_);_TL_channels_updatePinnedMessage_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TL_channels_updatePinnedMessage_default_instance_);_TL_channels_getAdminedPublicChannels_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TL_channels_getAdminedPublicChannels_default_instance_);_TL_channels_editBanned_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TL_channels_editBanned_default_instance_);_TL_channels_getAdminLog_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TL_channels_getAdminLog_default_instance_);_TL_channels_setStickers_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TL_channels_setStickers_default_instance_);_TL_channels_readMessageContents_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TL_channels_readMessageContents_default_instance_);_TL_channels_deleteHistory_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TL_channels_deleteHistory_default_instance_);_TL_channels_togglePreHistoryHidden_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TL_channels_togglePreHistoryHidden_default_instance_);_TL_channels_getLeftChannels_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TL_channels_getLeftChannels_default_instance_);_TL_bots_sendCustomRequest_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TL_bots_sendCustomRequest_default_instance_);_TL_bots_answerWebhookJSONQuery_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TL_bots_answerWebhookJSONQuery_default_instance_);_TL_payments_getPaymentForm_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TL_payments_getPaymentForm_default_instance_);_TL_payments_getPaymentReceipt_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TL_payments_getPaymentReceipt_default_instance_);_TL_payments_validateRequestedInfo_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TL_payments_validateRequestedInfo_default_instance_);_TL_payments_sendPaymentForm_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TL_payments_sendPaymentForm_default_instance_);_TL_payments_getSavedInfo_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TL_payments_getSavedInfo_default_instance_);_TL_payments_clearSavedInfo_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TL_payments_clearSavedInfo_default_instance_);_TL_stickers_createStickerSet_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TL_stickers_createStickerSet_default_instance_);_TL_stickers_removeStickerFromSet_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TL_stickers_removeStickerFromSet_default_instance_);_TL_stickers_changeStickerPosition_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TL_stickers_changeStickerPosition_default_instance_);_TL_stickers_addStickerToSet_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TL_stickers_addStickerToSet_default_instance_);_TL_phone_getCallConfig_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TL_phone_getCallConfig_default_instance_);_TL_phone_requestCall_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TL_phone_requestCall_default_instance_);_TL_phone_acceptCall_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TL_phone_acceptCall_default_instance_);_TL_phone_confirmCall_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TL_phone_confirmCall_default_instance_);_TL_phone_receivedCall_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TL_phone_receivedCall_default_instance_);_TL_phone_discardCall_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TL_phone_discardCall_default_instance_);_TL_phone_setCallRating_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TL_phone_setCallRating_default_instance_);_TL_phone_saveCallDebug_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TL_phone_saveCallDebug_default_instance_);_TL_langpack_getLangPack_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TL_langpack_getLangPack_default_instance_);_TL_langpack_getStrings_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TL_langpack_getStrings_default_instance_);_TL_langpack_getDifference_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TL_langpack_getDifference_default_instance_);_TL_langpack_getLanguages_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TL_langpack_getLanguages_default_instance_);_Vector_LangPackLanguage_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_Vector_LangPackLanguage_default_instance_);_Vector_WallPaper_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_Vector_WallPaper_default_instance_);_Vector_SecureValue_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_Vector_SecureValue_default_instance_);_Vector_User_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_Vector_User_default_instance_);_Vector_ContactStatus_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_Vector_ContactStatus_default_instance_);_Vector_int_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_Vector_int_default_instance_);_Vector_SavedContact_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_Vector_SavedContact_default_instance_);_Vector_ReceivedNotifyMessage_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_Vector_ReceivedNotifyMessage_default_instance_);_Vector_long_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_Vector_long_default_instance_);_Vector_StickerSetCovered_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_Vector_StickerSetCovered_default_instance_);_Vector_MessageRange_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_Vector_MessageRange_default_instance_);_Vector_DialogPeer_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_Vector_DialogPeer_default_instance_);_Vector_FileHash_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_Vector_FileHash_default_instance_);_Vector_LangPackString_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_Vector_LangPackString_default_instance_);_TL_messages_readHistoryLayer2_default_instance_._instance.get_mutable()->peer_ = const_cast< ::mtproto::InputPeer*>(
      ::mtproto::InputPeer::internal_default_instance());
  _TL_updates_getChannelDifferenceLayer46_default_instance_._instance.get_mutable()->channel_ = const_cast< ::mtproto::InputChannel*>(
      ::mtproto::InputChannel::internal_default_instance());
  _TL_updates_getChannelDifferenceLayer46_default_instance_._instance.get_mutable()->filter_ = const_cast< ::mtproto::ChannelMessagesFilter*>(
      ::mtproto::ChannelMessagesFilter::internal_default_instance());
  _TL_auth_sendCodeLayer51_default_instance_._instance.get_mutable()->current_number_ = const_cast< ::mtproto::Bool*>(
      ::mtproto::Bool::internal_default_instance());
  _TL_messages_getHistoryLayer51_default_instance_._instance.get_mutable()->peer_ = const_cast< ::mtproto::InputPeer*>(
      ::mtproto::InputPeer::internal_default_instance());
  _TL_messages_searchLayer68_default_instance_._instance.get_mutable()->peer_ = const_cast< ::mtproto::InputPeer*>(
      ::mtproto::InputPeer::internal_default_instance());
  _TL_messages_searchLayer68_default_instance_._instance.get_mutable()->from_id_ = const_cast< ::mtproto::InputUser*>(
      ::mtproto::InputUser::internal_default_instance());
  _TL_messages_searchLayer68_default_instance_._instance.get_mutable()->filter_ = const_cast< ::mtproto::MessagesFilter*>(
      ::mtproto::MessagesFilter::internal_default_instance());
  _TL_initConnection_default_instance_._instance.get_mutable()->proxy_ = const_cast< ::mtproto::InputClientProxy*>(
      ::mtproto::InputClientProxy::internal_default_instance());
  _TL_invokeWithMessagesRange_default_instance_._instance.get_mutable()->range_ = const_cast< ::mtproto::MessageRange*>(
      ::mtproto::MessageRange::internal_default_instance());
  _TL_auth_sendCode_default_instance_._instance.get_mutable()->current_number_ = const_cast< ::mtproto::Bool*>(
      ::mtproto::Bool::internal_default_instance());
  _TL_auth_checkPassword_default_instance_._instance.get_mutable()->password_ = const_cast< ::mtproto::InputCheckPasswordSRP*>(
      ::mtproto::InputCheckPasswordSRP::internal_default_instance());
  _TL_account_registerDevice_default_instance_._instance.get_mutable()->app_sandbox_ = const_cast< ::mtproto::Bool*>(
      ::mtproto::Bool::internal_default_instance());
  _TL_account_updateNotifySettings_default_instance_._instance.get_mutable()->peer_ = const_cast< ::mtproto::InputNotifyPeer*>(
      ::mtproto::InputNotifyPeer::internal_default_instance());
  _TL_account_updateNotifySettings_default_instance_._instance.get_mutable()->settings_ = const_cast< ::mtproto::InputPeerNotifySettings*>(
      ::mtproto::InputPeerNotifySettings::internal_default_instance());
  _TL_account_getNotifySettings_default_instance_._instance.get_mutable()->peer_ = const_cast< ::mtproto::InputNotifyPeer*>(
      ::mtproto::InputNotifyPeer::internal_default_instance());
  _TL_account_updateStatus_default_instance_._instance.get_mutable()->offline_ = const_cast< ::mtproto::Bool*>(
      ::mtproto::Bool::internal_default_instance());
  _TL_account_reportPeer_default_instance_._instance.get_mutable()->peer_ = const_cast< ::mtproto::InputPeer*>(
      ::mtproto::InputPeer::internal_default_instance());
  _TL_account_reportPeer_default_instance_._instance.get_mutable()->reason_ = const_cast< ::mtproto::ReportReason*>(
      ::mtproto::ReportReason::internal_default_instance());
  _TL_account_getPrivacy_default_instance_._instance.get_mutable()->key_ = const_cast< ::mtproto::InputPrivacyKey*>(
      ::mtproto::InputPrivacyKey::internal_default_instance());
  _TL_account_setPrivacy_default_instance_._instance.get_mutable()->key_ = const_cast< ::mtproto::InputPrivacyKey*>(
      ::mtproto::InputPrivacyKey::internal_default_instance());
  _TL_account_setAccountTTL_default_instance_._instance.get_mutable()->ttl_ = const_cast< ::mtproto::AccountDaysTTL*>(
      ::mtproto::AccountDaysTTL::internal_default_instance());
  _TL_account_sendChangePhoneCode_default_instance_._instance.get_mutable()->current_number_ = const_cast< ::mtproto::Bool*>(
      ::mtproto::Bool::internal_default_instance());
  _TL_account_getPasswordSettings_default_instance_._instance.get_mutable()->password_ = const_cast< ::mtproto::InputCheckPasswordSRP*>(
      ::mtproto::InputCheckPasswordSRP::internal_default_instance());
  _TL_account_updatePasswordSettings_default_instance_._instance.get_mutable()->password_ = const_cast< ::mtproto::InputCheckPasswordSRP*>(
      ::mtproto::InputCheckPasswordSRP::internal_default_instance());
  _TL_account_updatePasswordSettings_default_instance_._instance.get_mutable()->new_settings_ = const_cast< ::mtproto::account_PasswordInputSettings*>(
      ::mtproto::account_PasswordInputSettings::internal_default_instance());
  _TL_account_sendConfirmPhoneCode_default_instance_._instance.get_mutable()->current_number_ = const_cast< ::mtproto::Bool*>(
      ::mtproto::Bool::internal_default_instance());
  _TL_account_getTmpPassword_default_instance_._instance.get_mutable()->password_ = const_cast< ::mtproto::InputCheckPasswordSRP*>(
      ::mtproto::InputCheckPasswordSRP::internal_default_instance());
  _TL_account_saveSecureValue_default_instance_._instance.get_mutable()->value_ = const_cast< ::mtproto::InputSecureValue*>(
      ::mtproto::InputSecureValue::internal_default_instance());
  _TL_account_acceptAuthorization_default_instance_._instance.get_mutable()->credentials_ = const_cast< ::mtproto::SecureCredentialsEncrypted*>(
      ::mtproto::SecureCredentialsEncrypted::internal_default_instance());
  _TL_account_sendVerifyPhoneCode_default_instance_._instance.get_mutable()->current_number_ = const_cast< ::mtproto::Bool*>(
      ::mtproto::Bool::internal_default_instance());
  _TL_users_getFullUser_default_instance_._instance.get_mutable()->id_ = const_cast< ::mtproto::InputUser*>(
      ::mtproto::InputUser::internal_default_instance());
  _TL_users_setSecureValueErrors_default_instance_._instance.get_mutable()->id_ = const_cast< ::mtproto::InputUser*>(
      ::mtproto::InputUser::internal_default_instance());
  _TL_contacts_deleteContact_default_instance_._instance.get_mutable()->id_ = const_cast< ::mtproto::InputUser*>(
      ::mtproto::InputUser::internal_default_instance());
  _TL_contacts_block_default_instance_._instance.get_mutable()->id_ = const_cast< ::mtproto::InputUser*>(
      ::mtproto::InputUser::internal_default_instance());
  _TL_contacts_unblock_default_instance_._instance.get_mutable()->id_ = const_cast< ::mtproto::InputUser*>(
      ::mtproto::InputUser::internal_default_instance());
  _TL_contacts_resetTopPeerRating_default_instance_._instance.get_mutable()->category_ = const_cast< ::mtproto::TopPeerCategory*>(
      ::mtproto::TopPeerCategory::internal_default_instance());
  _TL_contacts_resetTopPeerRating_default_instance_._instance.get_mutable()->peer_ = const_cast< ::mtproto::InputPeer*>(
      ::mtproto::InputPeer::internal_default_instance());
  _TL_contacts_toggleTopPeers_default_instance_._instance.get_mutable()->enabled_ = const_cast< ::mtproto::Bool*>(
      ::mtproto::Bool::internal_default_instance());
  _TL_messages_getDialogs_default_instance_._instance.get_mutable()->offset_peer_ = const_cast< ::mtproto::InputPeer*>(
      ::mtproto::InputPeer::internal_default_instance());
  _TL_messages_getHistory_default_instance_._instance.get_mutable()->peer_ = const_cast< ::mtproto::InputPeer*>(
      ::mtproto::InputPeer::internal_default_instance());
  _TL_messages_search_default_instance_._instance.get_mutable()->peer_ = const_cast< ::mtproto::InputPeer*>(
      ::mtproto::InputPeer::internal_default_instance());
  _TL_messages_search_default_instance_._instance.get_mutable()->from_id_ = const_cast< ::mtproto::InputUser*>(
      ::mtproto::InputUser::internal_default_instance());
  _TL_messages_search_default_instance_._instance.get_mutable()->filter_ = const_cast< ::mtproto::MessagesFilter*>(
      ::mtproto::MessagesFilter::internal_default_instance());
  _TL_messages_readHistory_default_instance_._instance.get_mutable()->peer_ = const_cast< ::mtproto::InputPeer*>(
      ::mtproto::InputPeer::internal_default_instance());
  _TL_messages_deleteHistory_default_instance_._instance.get_mutable()->peer_ = const_cast< ::mtproto::InputPeer*>(
      ::mtproto::InputPeer::internal_default_instance());
  _TL_messages_setTyping_default_instance_._instance.get_mutable()->peer_ = const_cast< ::mtproto::InputPeer*>(
      ::mtproto::InputPeer::internal_default_instance());
  _TL_messages_setTyping_default_instance_._instance.get_mutable()->action_ = const_cast< ::mtproto::SendMessageAction*>(
      ::mtproto::SendMessageAction::internal_default_instance());
  _TL_messages_sendMessage_default_instance_._instance.get_mutable()->peer_ = const_cast< ::mtproto::InputPeer*>(
      ::mtproto::InputPeer::internal_default_instance());
  _TL_messages_sendMessage_default_instance_._instance.get_mutable()->reply_markup_ = const_cast< ::mtproto::ReplyMarkup*>(
      ::mtproto::ReplyMarkup::internal_default_instance());
  _TL_messages_sendMedia_default_instance_._instance.get_mutable()->peer_ = const_cast< ::mtproto::InputPeer*>(
      ::mtproto::InputPeer::internal_default_instance());
  _TL_messages_sendMedia_default_instance_._instance.get_mutable()->media_ = const_cast< ::mtproto::InputMedia*>(
      ::mtproto::InputMedia::internal_default_instance());
  _TL_messages_sendMedia_default_instance_._instance.get_mutable()->reply_markup_ = const_cast< ::mtproto::ReplyMarkup*>(
      ::mtproto::ReplyMarkup::internal_default_instance());
  _TL_messages_forwardMessages_default_instance_._instance.get_mutable()->from_peer_ = const_cast< ::mtproto::InputPeer*>(
      ::mtproto::InputPeer::internal_default_instance());
  _TL_messages_forwardMessages_default_instance_._instance.get_mutable()->to_peer_ = const_cast< ::mtproto::InputPeer*>(
      ::mtproto::InputPeer::internal_default_instance());
  _TL_messages_reportSpam_default_instance_._instance.get_mutable()->peer_ = const_cast< ::mtproto::InputPeer*>(
      ::mtproto::InputPeer::internal_default_instance());
  _TL_messages_hideReportSpam_default_instance_._instance.get_mutable()->peer_ = const_cast< ::mtproto::InputPeer*>(
      ::mtproto::InputPeer::internal_default_instance());
  _TL_messages_getPeerSettings_default_instance_._instance.get_mutable()->peer_ = const_cast< ::mtproto::InputPeer*>(
      ::mtproto::InputPeer::internal_default_instance());
  _TL_messages_report_default_instance_._instance.get_mutable()->peer_ = const_cast< ::mtproto::InputPeer*>(
      ::mtproto::InputPeer::internal_default_instance());
  _TL_messages_report_default_instance_._instance.get_mutable()->reason_ = const_cast< ::mtproto::ReportReason*>(
      ::mtproto::ReportReason::internal_default_instance());
  _TL_messages_editChatPhoto_default_instance_._instance.get_mutable()->photo_ = const_cast< ::mtproto::InputChatPhoto*>(
      ::mtproto::InputChatPhoto::internal_default_instance());
  _TL_messages_addChatUser_default_instance_._instance.get_mutable()->user_id_ = const_cast< ::mtproto::InputUser*>(
      ::mtproto::InputUser::internal_default_instance());
  _TL_messages_deleteChatUser_default_instance_._instance.get_mutable()->user_id_ = const_cast< ::mtproto::InputUser*>(
      ::mtproto::InputUser::internal_default_instance());
  _TL_messages_requestEncryption_default_instance_._instance.get_mutable()->user_id_ = const_cast< ::mtproto::InputUser*>(
      ::mtproto::InputUser::internal_default_instance());
  _TL_messages_acceptEncryption_default_instance_._instance.get_mutable()->peer_ = const_cast< ::mtproto::InputEncryptedChat*>(
      ::mtproto::InputEncryptedChat::internal_default_instance());
  _TL_messages_setEncryptedTyping_default_instance_._instance.get_mutable()->peer_ = const_cast< ::mtproto::InputEncryptedChat*>(
      ::mtproto::InputEncryptedChat::internal_default_instance());
  _TL_messages_setEncryptedTyping_default_instance_._instance.get_mutable()->typing_ = const_cast< ::mtproto::Bool*>(
      ::mtproto::Bool::internal_default_instance());
  _TL_messages_readEncryptedHistory_default_instance_._instance.get_mutable()->peer_ = const_cast< ::mtproto::InputEncryptedChat*>(
      ::mtproto::InputEncryptedChat::internal_default_instance());
  _TL_messages_sendEncrypted_default_instance_._instance.get_mutable()->peer_ = const_cast< ::mtproto::InputEncryptedChat*>(
      ::mtproto::InputEncryptedChat::internal_default_instance());
  _TL_messages_sendEncryptedFile_default_instance_._instance.get_mutable()->peer_ = const_cast< ::mtproto::InputEncryptedChat*>(
      ::mtproto::InputEncryptedChat::internal_default_instance());
  _TL_messages_sendEncryptedFile_default_instance_._instance.get_mutable()->file_ = const_cast< ::mtproto::InputEncryptedFile*>(
      ::mtproto::InputEncryptedFile::internal_default_instance());
  _TL_messages_sendEncryptedService_default_instance_._instance.get_mutable()->peer_ = const_cast< ::mtproto::InputEncryptedChat*>(
      ::mtproto::InputEncryptedChat::internal_default_instance());
  _TL_messages_reportEncryptedSpam_default_instance_._instance.get_mutable()->peer_ = const_cast< ::mtproto::InputEncryptedChat*>(
      ::mtproto::InputEncryptedChat::internal_default_instance());
  _TL_messages_getStickerSet_default_instance_._instance.get_mutable()->stickerset_ = const_cast< ::mtproto::InputStickerSet*>(
      ::mtproto::InputStickerSet::internal_default_instance());
  _TL_messages_installStickerSet_default_instance_._instance.get_mutable()->stickerset_ = const_cast< ::mtproto::InputStickerSet*>(
      ::mtproto::InputStickerSet::internal_default_instance());
  _TL_messages_installStickerSet_default_instance_._instance.get_mutable()->archived_ = const_cast< ::mtproto::Bool*>(
      ::mtproto::Bool::internal_default_instance());
  _TL_messages_uninstallStickerSet_default_instance_._instance.get_mutable()->stickerset_ = const_cast< ::mtproto::InputStickerSet*>(
      ::mtproto::InputStickerSet::internal_default_instance());
  _TL_messages_startBot_default_instance_._instance.get_mutable()->bot_ = const_cast< ::mtproto::InputUser*>(
      ::mtproto::InputUser::internal_default_instance());
  _TL_messages_startBot_default_instance_._instance.get_mutable()->peer_ = const_cast< ::mtproto::InputPeer*>(
      ::mtproto::InputPeer::internal_default_instance());
  _TL_messages_getMessagesViews_default_instance_._instance.get_mutable()->peer_ = const_cast< ::mtproto::InputPeer*>(
      ::mtproto::InputPeer::internal_default_instance());
  _TL_messages_getMessagesViews_default_instance_._instance.get_mutable()->increment_ = const_cast< ::mtproto::Bool*>(
      ::mtproto::Bool::internal_default_instance());
  _TL_messages_toggleChatAdmins_default_instance_._instance.get_mutable()->enabled_ = const_cast< ::mtproto::Bool*>(
      ::mtproto::Bool::internal_default_instance());
  _TL_messages_editChatAdmin_default_instance_._instance.get_mutable()->user_id_ = const_cast< ::mtproto::InputUser*>(
      ::mtproto::InputUser::internal_default_instance());
  _TL_messages_editChatAdmin_default_instance_._instance.get_mutable()->is_admin_ = const_cast< ::mtproto::Bool*>(
      ::mtproto::Bool::internal_default_instance());
  _TL_messages_searchGlobal_default_instance_._instance.get_mutable()->offset_peer_ = const_cast< ::mtproto::InputPeer*>(
      ::mtproto::InputPeer::internal_default_instance());
  _TL_messages_saveGif_default_instance_._instance.get_mutable()->id_ = const_cast< ::mtproto::InputDocument*>(
      ::mtproto::InputDocument::internal_default_instance());
  _TL_messages_saveGif_default_instance_._instance.get_mutable()->unsave_ = const_cast< ::mtproto::Bool*>(
      ::mtproto::Bool::internal_default_instance());
  _TL_messages_getInlineBotResults_default_instance_._instance.get_mutable()->bot_ = const_cast< ::mtproto::InputUser*>(
      ::mtproto::InputUser::internal_default_instance());
  _TL_messages_getInlineBotResults_default_instance_._instance.get_mutable()->peer_ = const_cast< ::mtproto::InputPeer*>(
      ::mtproto::InputPeer::internal_default_instance());
  _TL_messages_getInlineBotResults_default_instance_._instance.get_mutable()->geo_point_ = const_cast< ::mtproto::InputGeoPoint*>(
      ::mtproto::InputGeoPoint::internal_default_instance());
  _TL_messages_setInlineBotResults_default_instance_._instance.get_mutable()->switch_pm_ = const_cast< ::mtproto::InlineBotSwitchPM*>(
      ::mtproto::InlineBotSwitchPM::internal_default_instance());
  _TL_messages_sendInlineBotResult_default_instance_._instance.get_mutable()->peer_ = const_cast< ::mtproto::InputPeer*>(
      ::mtproto::InputPeer::internal_default_instance());
  _TL_messages_getMessageEditData_default_instance_._instance.get_mutable()->peer_ = const_cast< ::mtproto::InputPeer*>(
      ::mtproto::InputPeer::internal_default_instance());
  _TL_messages_editMessage_default_instance_._instance.get_mutable()->peer_ = const_cast< ::mtproto::InputPeer*>(
      ::mtproto::InputPeer::internal_default_instance());
  _TL_messages_editMessage_default_instance_._instance.get_mutable()->media_ = const_cast< ::mtproto::InputMedia*>(
      ::mtproto::InputMedia::internal_default_instance());
  _TL_messages_editMessage_default_instance_._instance.get_mutable()->reply_markup_ = const_cast< ::mtproto::ReplyMarkup*>(
      ::mtproto::ReplyMarkup::internal_default_instance());
  _TL_messages_editMessage_default_instance_._instance.get_mutable()->geo_point_ = const_cast< ::mtproto::InputGeoPoint*>(
      ::mtproto::InputGeoPoint::internal_default_instance());
  _TL_messages_editInlineBotMessage_default_instance_._instance.get_mutable()->id_ = const_cast< ::mtproto::InputBotInlineMessageID*>(
      ::mtproto::InputBotInlineMessageID::internal_default_instance());
  _TL_messages_editInlineBotMessage_default_instance_._instance.get_mutable()->media_ = const_cast< ::mtproto::InputMedia*>(
      ::mtproto::InputMedia::internal_default_instance());
  _TL_messages_editInlineBotMessage_default_instance_._instance.get_mutable()->reply_markup_ = const_cast< ::mtproto::ReplyMarkup*>(
      ::mtproto::ReplyMarkup::internal_default_instance());
  _TL_messages_editInlineBotMessage_default_instance_._instance.get_mutable()->geo_point_ = const_cast< ::mtproto::InputGeoPoint*>(
      ::mtproto::InputGeoPoint::internal_default_instance());
  _TL_messages_getBotCallbackAnswer_default_instance_._instance.get_mutable()->peer_ = const_cast< ::mtproto::InputPeer*>(
      ::mtproto::InputPeer::internal_default_instance());
  _TL_messages_saveDraft_default_instance_._instance.get_mutable()->peer_ = const_cast< ::mtproto::InputPeer*>(
      ::mtproto::InputPeer::internal_default_instance());
  _TL_messages_saveRecentSticker_default_instance_._instance.get_mutable()->id_ = const_cast< ::mtproto::InputDocument*>(
      ::mtproto::InputDocument::internal_default_instance());
  _TL_messages_saveRecentSticker_default_instance_._instance.get_mutable()->unsave_ = const_cast< ::mtproto::Bool*>(
      ::mtproto::Bool::internal_default_instance());
  _TL_messages_getAttachedStickers_default_instance_._instance.get_mutable()->media_ = const_cast< ::mtproto::InputStickeredMedia*>(
      ::mtproto::InputStickeredMedia::internal_default_instance());
  _TL_messages_setGameScore_default_instance_._instance.get_mutable()->peer_ = const_cast< ::mtproto::InputPeer*>(
      ::mtproto::InputPeer::internal_default_instance());
  _TL_messages_setGameScore_default_instance_._instance.get_mutable()->user_id_ = const_cast< ::mtproto::InputUser*>(
      ::mtproto::InputUser::internal_default_instance());
  _TL_messages_setInlineGameScore_default_instance_._instance.get_mutable()->id_ = const_cast< ::mtproto::InputBotInlineMessageID*>(
      ::mtproto::InputBotInlineMessageID::internal_default_instance());
  _TL_messages_setInlineGameScore_default_instance_._instance.get_mutable()->user_id_ = const_cast< ::mtproto::InputUser*>(
      ::mtproto::InputUser::internal_default_instance());
  _TL_messages_getGameHighScores_default_instance_._instance.get_mutable()->peer_ = const_cast< ::mtproto::InputPeer*>(
      ::mtproto::InputPeer::internal_default_instance());
  _TL_messages_getGameHighScores_default_instance_._instance.get_mutable()->user_id_ = const_cast< ::mtproto::InputUser*>(
      ::mtproto::InputUser::internal_default_instance());
  _TL_messages_getInlineGameHighScores_default_instance_._instance.get_mutable()->id_ = const_cast< ::mtproto::InputBotInlineMessageID*>(
      ::mtproto::InputBotInlineMessageID::internal_default_instance());
  _TL_messages_getInlineGameHighScores_default_instance_._instance.get_mutable()->user_id_ = const_cast< ::mtproto::InputUser*>(
      ::mtproto::InputUser::internal_default_instance());
  _TL_messages_getCommonChats_default_instance_._instance.get_mutable()->user_id_ = const_cast< ::mtproto::InputUser*>(
      ::mtproto::InputUser::internal_default_instance());
  _TL_messages_toggleDialogPin_default_instance_._instance.get_mutable()->peer_ = const_cast< ::mtproto::InputDialogPeer*>(
      ::mtproto::InputDialogPeer::internal_default_instance());
  _TL_messages_uploadMedia_default_instance_._instance.get_mutable()->peer_ = const_cast< ::mtproto::InputPeer*>(
      ::mtproto::InputPeer::internal_default_instance());
  _TL_messages_uploadMedia_default_instance_._instance.get_mutable()->media_ = const_cast< ::mtproto::InputMedia*>(
      ::mtproto::InputMedia::internal_default_instance());
  _TL_messages_sendScreenshotNotification_default_instance_._instance.get_mutable()->peer_ = const_cast< ::mtproto::InputPeer*>(
      ::mtproto::InputPeer::internal_default_instance());
  _TL_messages_faveSticker_default_instance_._instance.get_mutable()->id_ = const_cast< ::mtproto::InputDocument*>(
      ::mtproto::InputDocument::internal_default_instance());
  _TL_messages_faveSticker_default_instance_._instance.get_mutable()->unfave_ = const_cast< ::mtproto::Bool*>(
      ::mtproto::Bool::internal_default_instance());
  _TL_messages_getUnreadMentions_default_instance_._instance.get_mutable()->peer_ = const_cast< ::mtproto::InputPeer*>(
      ::mtproto::InputPeer::internal_default_instance());
  _TL_messages_readMentions_default_instance_._instance.get_mutable()->peer_ = const_cast< ::mtproto::InputPeer*>(
      ::mtproto::InputPeer::internal_default_instance());
  _TL_messages_getRecentLocations_default_instance_._instance.get_mutable()->peer_ = const_cast< ::mtproto::InputPeer*>(
      ::mtproto::InputPeer::internal_default_instance());
  _TL_messages_sendMultiMedia_default_instance_._instance.get_mutable()->peer_ = const_cast< ::mtproto::InputPeer*>(
      ::mtproto::InputPeer::internal_default_instance());
  _TL_messages_uploadEncryptedFile_default_instance_._instance.get_mutable()->peer_ = const_cast< ::mtproto::InputEncryptedChat*>(
      ::mtproto::InputEncryptedChat::internal_default_instance());
  _TL_messages_uploadEncryptedFile_default_instance_._instance.get_mutable()->file_ = const_cast< ::mtproto::InputEncryptedFile*>(
      ::mtproto::InputEncryptedFile::internal_default_instance());
  _TL_messages_markDialogUnread_default_instance_._instance.get_mutable()->peer_ = const_cast< ::mtproto::InputDialogPeer*>(
      ::mtproto::InputDialogPeer::internal_default_instance());
  _TL_updates_getChannelDifference_default_instance_._instance.get_mutable()->channel_ = const_cast< ::mtproto::InputChannel*>(
      ::mtproto::InputChannel::internal_default_instance());
  _TL_updates_getChannelDifference_default_instance_._instance.get_mutable()->filter_ = const_cast< ::mtproto::ChannelMessagesFilter*>(
      ::mtproto::ChannelMessagesFilter::internal_default_instance());
  _TL_photos_updateProfilePhoto_default_instance_._instance.get_mutable()->id_ = const_cast< ::mtproto::InputPhoto*>(
      ::mtproto::InputPhoto::internal_default_instance());
  _TL_photos_uploadProfilePhoto_default_instance_._instance.get_mutable()->file_ = const_cast< ::mtproto::InputFile*>(
      ::mtproto::InputFile::internal_default_instance());
  _TL_photos_getUserPhotos_default_instance_._instance.get_mutable()->user_id_ = const_cast< ::mtproto::InputUser*>(
      ::mtproto::InputUser::internal_default_instance());
  _TL_upload_getFile_default_instance_._instance.get_mutable()->location_ = const_cast< ::mtproto::InputFileLocation*>(
      ::mtproto::InputFileLocation::internal_default_instance());
  _TL_upload_getWebFile_default_instance_._instance.get_mutable()->location_ = const_cast< ::mtproto::InputWebFileLocation*>(
      ::mtproto::InputWebFileLocation::internal_default_instance());
  _TL_upload_getFileHashes_default_instance_._instance.get_mutable()->location_ = const_cast< ::mtproto::InputFileLocation*>(
      ::mtproto::InputFileLocation::internal_default_instance());
  _TL_help_acceptTermsOfService_default_instance_._instance.get_mutable()->id_ = const_cast< ::mtproto::DataJSON*>(
      ::mtproto::DataJSON::internal_default_instance());
  _TL_channels_readHistory_default_instance_._instance.get_mutable()->channel_ = const_cast< ::mtproto::InputChannel*>(
      ::mtproto::InputChannel::internal_default_instance());
  _TL_channels_deleteMessages_default_instance_._instance.get_mutable()->channel_ = const_cast< ::mtproto::InputChannel*>(
      ::mtproto::InputChannel::internal_default_instance());
  _TL_channels_deleteUserHistory_default_instance_._instance.get_mutable()->channel_ = const_cast< ::mtproto::InputChannel*>(
      ::mtproto::InputChannel::internal_default_instance());
  _TL_channels_deleteUserHistory_default_instance_._instance.get_mutable()->user_id_ = const_cast< ::mtproto::InputUser*>(
      ::mtproto::InputUser::internal_default_instance());
  _TL_channels_reportSpam_default_instance_._instance.get_mutable()->channel_ = const_cast< ::mtproto::InputChannel*>(
      ::mtproto::InputChannel::internal_default_instance());
  _TL_channels_reportSpam_default_instance_._instance.get_mutable()->user_id_ = const_cast< ::mtproto::InputUser*>(
      ::mtproto::InputUser::internal_default_instance());
  _TL_channels_getMessages_default_instance_._instance.get_mutable()->channel_ = const_cast< ::mtproto::InputChannel*>(
      ::mtproto::InputChannel::internal_default_instance());
  _TL_channels_getParticipants_default_instance_._instance.get_mutable()->channel_ = const_cast< ::mtproto::InputChannel*>(
      ::mtproto::InputChannel::internal_default_instance());
  _TL_channels_getParticipants_default_instance_._instance.get_mutable()->filter_ = const_cast< ::mtproto::ChannelParticipantsFilter*>(
      ::mtproto::ChannelParticipantsFilter::internal_default_instance());
  _TL_channels_getParticipant_default_instance_._instance.get_mutable()->channel_ = const_cast< ::mtproto::InputChannel*>(
      ::mtproto::InputChannel::internal_default_instance());
  _TL_channels_getParticipant_default_instance_._instance.get_mutable()->user_id_ = const_cast< ::mtproto::InputUser*>(
      ::mtproto::InputUser::internal_default_instance());
  _TL_channels_getFullChannel_default_instance_._instance.get_mutable()->channel_ = const_cast< ::mtproto::InputChannel*>(
      ::mtproto::InputChannel::internal_default_instance());
  _TL_channels_editAbout_default_instance_._instance.get_mutable()->channel_ = const_cast< ::mtproto::InputChannel*>(
      ::mtproto::InputChannel::internal_default_instance());
  _TL_channels_editAdmin_default_instance_._instance.get_mutable()->channel_ = const_cast< ::mtproto::InputChannel*>(
      ::mtproto::InputChannel::internal_default_instance());
  _TL_channels_editAdmin_default_instance_._instance.get_mutable()->user_id_ = const_cast< ::mtproto::InputUser*>(
      ::mtproto::InputUser::internal_default_instance());
  _TL_channels_editAdmin_default_instance_._instance.get_mutable()->admin_rights_ = const_cast< ::mtproto::ChannelAdminRights*>(
      ::mtproto::ChannelAdminRights::internal_default_instance());
  _TL_channels_editTitle_default_instance_._instance.get_mutable()->channel_ = const_cast< ::mtproto::InputChannel*>(
      ::mtproto::InputChannel::internal_default_instance());
  _TL_channels_editPhoto_default_instance_._instance.get_mutable()->channel_ = const_cast< ::mtproto::InputChannel*>(
      ::mtproto::InputChannel::internal_default_instance());
  _TL_channels_editPhoto_default_instance_._instance.get_mutable()->photo_ = const_cast< ::mtproto::InputChatPhoto*>(
      ::mtproto::InputChatPhoto::internal_default_instance());
  _TL_channels_checkUsername_default_instance_._instance.get_mutable()->channel_ = const_cast< ::mtproto::InputChannel*>(
      ::mtproto::InputChannel::internal_default_instance());
  _TL_channels_updateUsername_default_instance_._instance.get_mutable()->channel_ = const_cast< ::mtproto::InputChannel*>(
      ::mtproto::InputChannel::internal_default_instance());
  _TL_channels_joinChannel_default_instance_._instance.get_mutable()->channel_ = const_cast< ::mtproto::InputChannel*>(
      ::mtproto::InputChannel::internal_default_instance());
  _TL_channels_leaveChannel_default_instance_._instance.get_mutable()->channel_ = const_cast< ::mtproto::InputChannel*>(
      ::mtproto::InputChannel::internal_default_instance());
  _TL_channels_inviteToChannel_default_instance_._instance.get_mutable()->channel_ = const_cast< ::mtproto::InputChannel*>(
      ::mtproto::InputChannel::internal_default_instance());
  _TL_channels_exportInvite_default_instance_._instance.get_mutable()->channel_ = const_cast< ::mtproto::InputChannel*>(
      ::mtproto::InputChannel::internal_default_instance());
  _TL_channels_deleteChannel_default_instance_._instance.get_mutable()->channel_ = const_cast< ::mtproto::InputChannel*>(
      ::mtproto::InputChannel::internal_default_instance());
  _TL_channels_toggleInvites_default_instance_._instance.get_mutable()->channel_ = const_cast< ::mtproto::InputChannel*>(
      ::mtproto::InputChannel::internal_default_instance());
  _TL_channels_toggleInvites_default_instance_._instance.get_mutable()->enabled_ = const_cast< ::mtproto::Bool*>(
      ::mtproto::Bool::internal_default_instance());
  _TL_channels_exportMessageLink_default_instance_._instance.get_mutable()->channel_ = const_cast< ::mtproto::InputChannel*>(
      ::mtproto::InputChannel::internal_default_instance());
  _TL_channels_exportMessageLink_default_instance_._instance.get_mutable()->grouped_ = const_cast< ::mtproto::Bool*>(
      ::mtproto::Bool::internal_default_instance());
  _TL_channels_toggleSignatures_default_instance_._instance.get_mutable()->channel_ = const_cast< ::mtproto::InputChannel*>(
      ::mtproto::InputChannel::internal_default_instance());
  _TL_channels_toggleSignatures_default_instance_._instance.get_mutable()->enabled_ = const_cast< ::mtproto::Bool*>(
      ::mtproto::Bool::internal_default_instance());
  _TL_channels_updatePinnedMessage_default_instance_._instance.get_mutable()->channel_ = const_cast< ::mtproto::InputChannel*>(
      ::mtproto::InputChannel::internal_default_instance());
  _TL_channels_editBanned_default_instance_._instance.get_mutable()->channel_ = const_cast< ::mtproto::InputChannel*>(
      ::mtproto::InputChannel::internal_default_instance());
  _TL_channels_editBanned_default_instance_._instance.get_mutable()->user_id_ = const_cast< ::mtproto::InputUser*>(
      ::mtproto::InputUser::internal_default_instance());
  _TL_channels_editBanned_default_instance_._instance.get_mutable()->banned_rights_ = const_cast< ::mtproto::ChannelBannedRights*>(
      ::mtproto::ChannelBannedRights::internal_default_instance());
  _TL_channels_getAdminLog_default_instance_._instance.get_mutable()->channel_ = const_cast< ::mtproto::InputChannel*>(
      ::mtproto::InputChannel::internal_default_instance());
  _TL_channels_getAdminLog_default_instance_._instance.get_mutable()->events_filter_ = const_cast< ::mtproto::ChannelAdminLogEventsFilter*>(
      ::mtproto::ChannelAdminLogEventsFilter::internal_default_instance());
  _TL_channels_setStickers_default_instance_._instance.get_mutable()->channel_ = const_cast< ::mtproto::InputChannel*>(
      ::mtproto::InputChannel::internal_default_instance());
  _TL_channels_setStickers_default_instance_._instance.get_mutable()->stickerset_ = const_cast< ::mtproto::InputStickerSet*>(
      ::mtproto::InputStickerSet::internal_default_instance());
  _TL_channels_readMessageContents_default_instance_._instance.get_mutable()->channel_ = const_cast< ::mtproto::InputChannel*>(
      ::mtproto::InputChannel::internal_default_instance());
  _TL_channels_deleteHistory_default_instance_._instance.get_mutable()->channel_ = const_cast< ::mtproto::InputChannel*>(
      ::mtproto::InputChannel::internal_default_instance());
  _TL_channels_togglePreHistoryHidden_default_instance_._instance.get_mutable()->channel_ = const_cast< ::mtproto::InputChannel*>(
      ::mtproto::InputChannel::internal_default_instance());
  _TL_channels_togglePreHistoryHidden_default_instance_._instance.get_mutable()->enabled_ = const_cast< ::mtproto::Bool*>(
      ::mtproto::Bool::internal_default_instance());
  _TL_bots_sendCustomRequest_default_instance_._instance.get_mutable()->params_ = const_cast< ::mtproto::DataJSON*>(
      ::mtproto::DataJSON::internal_default_instance());
  _TL_bots_answerWebhookJSONQuery_default_instance_._instance.get_mutable()->data_ = const_cast< ::mtproto::DataJSON*>(
      ::mtproto::DataJSON::internal_default_instance());
  _TL_payments_validateRequestedInfo_default_instance_._instance.get_mutable()->info_ = const_cast< ::mtproto::PaymentRequestedInfo*>(
      ::mtproto::PaymentRequestedInfo::internal_default_instance());
  _TL_payments_sendPaymentForm_default_instance_._instance.get_mutable()->credentials_ = const_cast< ::mtproto::InputPaymentCredentials*>(
      ::mtproto::InputPaymentCredentials::internal_default_instance());
  _TL_stickers_createStickerSet_default_instance_._instance.get_mutable()->user_id_ = const_cast< ::mtproto::InputUser*>(
      ::mtproto::InputUser::internal_default_instance());
  _TL_stickers_removeStickerFromSet_default_instance_._instance.get_mutable()->sticker_ = const_cast< ::mtproto::InputDocument*>(
      ::mtproto::InputDocument::internal_default_instance());
  _TL_stickers_changeStickerPosition_default_instance_._instance.get_mutable()->sticker_ = const_cast< ::mtproto::InputDocument*>(
      ::mtproto::InputDocument::internal_default_instance());
  _TL_stickers_addStickerToSet_default_instance_._instance.get_mutable()->stickerset_ = const_cast< ::mtproto::InputStickerSet*>(
      ::mtproto::InputStickerSet::internal_default_instance());
  _TL_stickers_addStickerToSet_default_instance_._instance.get_mutable()->sticker_ = const_cast< ::mtproto::InputStickerSetItem*>(
      ::mtproto::InputStickerSetItem::internal_default_instance());
  _TL_phone_requestCall_default_instance_._instance.get_mutable()->user_id_ = const_cast< ::mtproto::InputUser*>(
      ::mtproto::InputUser::internal_default_instance());
  _TL_phone_requestCall_default_instance_._instance.get_mutable()->protocol_ = const_cast< ::mtproto::PhoneCallProtocol*>(
      ::mtproto::PhoneCallProtocol::internal_default_instance());
  _TL_phone_acceptCall_default_instance_._instance.get_mutable()->peer_ = const_cast< ::mtproto::InputPhoneCall*>(
      ::mtproto::InputPhoneCall::internal_default_instance());
  _TL_phone_acceptCall_default_instance_._instance.get_mutable()->protocol_ = const_cast< ::mtproto::PhoneCallProtocol*>(
      ::mtproto::PhoneCallProtocol::internal_default_instance());
  _TL_phone_confirmCall_default_instance_._instance.get_mutable()->peer_ = const_cast< ::mtproto::InputPhoneCall*>(
      ::mtproto::InputPhoneCall::internal_default_instance());
  _TL_phone_confirmCall_default_instance_._instance.get_mutable()->protocol_ = const_cast< ::mtproto::PhoneCallProtocol*>(
      ::mtproto::PhoneCallProtocol::internal_default_instance());
  _TL_phone_receivedCall_default_instance_._instance.get_mutable()->peer_ = const_cast< ::mtproto::InputPhoneCall*>(
      ::mtproto::InputPhoneCall::internal_default_instance());
  _TL_phone_discardCall_default_instance_._instance.get_mutable()->peer_ = const_cast< ::mtproto::InputPhoneCall*>(
      ::mtproto::InputPhoneCall::internal_default_instance());
  _TL_phone_discardCall_default_instance_._instance.get_mutable()->reason_ = const_cast< ::mtproto::PhoneCallDiscardReason*>(
      ::mtproto::PhoneCallDiscardReason::internal_default_instance());
  _TL_phone_setCallRating_default_instance_._instance.get_mutable()->peer_ = const_cast< ::mtproto::InputPhoneCall*>(
      ::mtproto::InputPhoneCall::internal_default_instance());
  _TL_phone_saveCallDebug_default_instance_._instance.get_mutable()->peer_ = const_cast< ::mtproto::InputPhoneCall*>(
      ::mtproto::InputPhoneCall::internal_default_instance());
  _TL_phone_saveCallDebug_default_instance_._instance.get_mutable()->debug_ = const_cast< ::mtproto::DataJSON*>(
      ::mtproto::DataJSON::internal_default_instance());
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
namespace {
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\034schema.tl.sync_service.proto\022\007mtproto\032"
      "\032schema.tl.core_types.proto\032\024schema.tl.s"
      "ync.proto\"!\n\037TL_langpack_getLanguagesLay"
      "er70\"$\n\021TL_help_getScheme\022\017\n\007version\030\001 \001"
      "(\005\"a\n\035TL_messages_readHistoryLayer2\022 \n\004p"
      "eer\030\001 \001(\0132\022.mtproto.InputPeer\022\016\n\006max_id\030"
      "\002 \001(\005\022\016\n\006offset\030\003 \001(\005\"1\n\034TL_help_getInvi"
      "teTextLayer46\022\021\n\tlang_code\030\001 \001(\t\"s\n\033TL_h"
      "elp_getAppUpdateLayer46\022\024\n\014device_model\030"
      "\001 \001(\t\022\026\n\016system_version\030\002 \001(\t\022\023\n\013app_ver"
      "sion\030\003 \001(\t\022\021\n\tlang_code\030\004 \001(\t\"\234\001\n&TL_upd"
      "ates_getChannelDifferenceLayer46\022&\n\007chan"
      "nel\030\001 \001(\0132\025.mtproto.InputChannel\022.\n\006filt"
      "er\030\002 \001(\0132\036.mtproto.ChannelMessagesFilter"
      "\022\013\n\003pts\030\003 \001(\005\022\r\n\005limit\030\004 \001(\005\"\244\001\n\027TL_auth"
      "_sendCodeLayer51\022\027\n\017allow_flashcall\030\002 \001("
      "\010\022\024\n\014phone_number\030\003 \001(\t\022%\n\016current_numbe"
      "r\030\004 \001(\0132\r.mtproto.Bool\022\016\n\006api_id\030\005 \001(\005\022\020"
      "\n\010api_hash\030\006 \001(\t\022\021\n\tlang_code\030\007 \001(\t\"\254\001\n\035"
      "TL_messages_getHistoryLayer51\022 \n\004peer\030\001 "
      "\001(\0132\022.mtproto.InputPeer\022\021\n\toffset_id\030\002 \001"
      "(\005\022\023\n\013offset_date\030\003 \001(\005\022\022\n\nadd_offset\030\004 "
      "\001(\005\022\r\n\005limit\030\005 \001(\005\022\016\n\006max_id\030\006 \001(\005\022\016\n\006mi"
      "n_id\030\007 \001(\005\"\274\001\n\030TL_initConnectionLayer68\022"
      "\016\n\006api_id\030\001 \001(\005\022\024\n\014device_model\030\002 \001(\t\022\026\n"
      "\016system_version\030\003 \001(\t\022\023\n\013app_version\030\004 \001"
      "(\t\022\030\n\020system_lang_code\030\005 \001(\t\022\021\n\tlang_pac"
      "k\030\006 \001(\t\022\021\n\tlang_code\030\007 \001(\t\022\r\n\005query\030\010 \001("
      "\014\"\351\001\n\031TL_messages_searchLayer68\022 \n\004peer\030"
      "\002 \001(\0132\022.mtproto.InputPeer\022\t\n\001q\030\003 \001(\t\022#\n\007"
      "from_id\030\004 \001(\0132\022.mtproto.InputUser\022\'\n\006fil"
      "ter\030\005 \001(\0132\027.mtproto.MessagesFilter\022\020\n\010mi"
      "n_date\030\006 \001(\005\022\020\n\010max_date\030\007 \001(\005\022\016\n\006offset"
      "\030\010 \001(\005\022\016\n\006max_id\030\t \001(\005\022\r\n\005limit\030\n \001(\005\"E\n"
      " TL_account_registerDeviceLayer71\022\022\n\ntok"
      "en_type\030\001 \001(\005\022\r\n\005token\030\002 \001(\t\"G\n\"TL_accou"
      "nt_unregisterDeviceLayer71\022\022\n\ntoken_type"
      "\030\001 \001(\005\022\r\n\005token\030\002 \001(\t\"3\n\036TL_langpack_get"
      "LangPackLayer71\022\021\n\tlang_code\030\001 \001(\t\"2\n\021TL"
      "_invokeAfterMsg\022\016\n\006msg_id\030\001 \001(\003\022\r\n\005query"
      "\030\002 \001(\014\"4\n\022TL_invokeAfterMsgs\022\017\n\007msg_ids\030"
      "\001 \003(\003\022\r\n\005query\030\002 \001(\014\"\337\001\n\021TL_initConnecti"
      "on\022\016\n\006api_id\030\002 \001(\005\022\024\n\014device_model\030\003 \001(\t"
      "\022\026\n\016system_version\030\004 \001(\t\022\023\n\013app_version\030"
      "\005 \001(\t\022\030\n\020system_lang_code\030\006 \001(\t\022\021\n\tlang_"
      "pack\030\007 \001(\t\022\021\n\tlang_code\030\010 \001(\t\022(\n\005proxy\030\t"
      " \001(\0132\031.mtproto.InputClientProxy\022\r\n\005query"
      "\030\n \001(\014\"2\n\022TL_invokeWithLayer\022\r\n\005layer\030\001 "
      "\001(\005\022\r\n\005query\030\002 \001(\014\"(\n\027TL_invokeWithoutUp"
      "dates\022\r\n\005query\030\001 \001(\014\"Q\n\032TL_invokeWithMes"
      "sagesRange\022$\n\005range\030\001 \001(\0132\025.mtproto.Mess"
      "ageRange\022\r\n\005query\030\002 \001(\014\"9\n\024TL_invokeWith"
      "Takeout\022\022\n\ntakeout_id\030\001 \001(\003\022\r\n\005query\030\002 \001"
      "(\014\"\212\001\n\020TL_auth_sendCode\022\027\n\017allow_flashca"
      "ll\030\002 \001(\010\022\024\n\014phone_number\030\003 \001(\t\022%\n\016curren"
      "t_number\030\004 \001(\0132\r.mtproto.Bool\022\016\n\006api_id\030"
      "\005 \001(\005\022\020\n\010api_hash\030\006 \001(\t\"z\n\016TL_auth_signU"
      "p\022\024\n\014phone_number\030\001 \001(\t\022\027\n\017phone_code_ha"
      "sh\030\002 \001(\t\022\022\n\nphone_code\030\003 \001(\t\022\022\n\nfirst_na"
      "me\030\004 \001(\t\022\021\n\tlast_name\030\005 \001(\t\"S\n\016TL_auth_s"
      "ignIn\022\024\n\014phone_number\030\001 \001(\t\022\027\n\017phone_cod"
      "e_hash\030\002 \001(\t\022\022\n\nphone_code\030\003 \001(\t\"\020\n\016TL_a"
      "uth_logOut\"\035\n\033TL_auth_resetAuthorization"
      "s\",\n\033TL_auth_exportAuthorization\022\r\n\005dc_i"
      "d\030\001 \001(\005\"8\n\033TL_auth_importAuthorization\022\n"
      "\n\002id\030\001 \001(\005\022\r\n\005bytes\030\002 \001(\014\"q\n\027TL_auth_bin"
      "dTempAuthKey\022\030\n\020perm_auth_key_id\030\001 \001(\003\022\r"
      "\n\005nonce\030\002 \001(\003\022\022\n\nexpires_at\030\003 \001(\005\022\031\n\021enc"
      "rypted_message\030\004 \001(\014\"i\n\036TL_auth_importBo"
      "tAuthorization\022\r\n\005flags\030\001 \001(\005\022\016\n\006api_id\030"
      "\002 \001(\005\022\020\n\010api_hash\030\003 \001(\t\022\026\n\016bot_auth_toke"
      "n\030\004 \001(\t\"I\n\025TL_auth_checkPassword\0220\n\010pass"
      "word\030\001 \001(\0132\036.mtproto.InputCheckPasswordS"
      "RP\"!\n\037TL_auth_requestPasswordRecovery\"\'\n"
      "\027TL_auth_recoverPassword\022\014\n\004code\030\001 \001(\t\"C"
      "\n\022TL_auth_resendCode\022\024\n\014phone_number\030\001 \001"
      "(\t\022\027\n\017phone_code_hash\030\002 \001(\t\"C\n\022TL_auth_c"
      "ancelCode\022\024\n\014phone_number\030\001 \001(\t\022\027\n\017phone"
      "_code_hash\030\002 \001(\t\"4\n\030TL_auth_dropTempAuth"
      "Keys\022\030\n\020except_auth_keys\030\001 \003(\003\"\206\001\n\031TL_ac"
      "count_registerDevice\022\022\n\ntoken_type\030\001 \001(\005"
      "\022\r\n\005token\030\002 \001(\t\022\"\n\013app_sandbox\030\003 \001(\0132\r.m"
      "tproto.Bool\022\016\n\006secret\030\004 \001(\014\022\022\n\nother_uid"
      "s\030\005 \003(\005\"T\n\033TL_account_unregisterDevice\022\022"
      "\n\ntoken_type\030\001 \001(\005\022\r\n\005token\030\002 \001(\t\022\022\n\noth"
      "er_uids\030\003 \003(\005\"}\n\037TL_account_updateNotify"
      "Settings\022&\n\004peer\030\001 \001(\0132\030.mtproto.InputNo"
      "tifyPeer\0222\n\010settings\030\002 \001(\0132 .mtproto.Inp"
      "utPeerNotifySettings\"F\n\034TL_account_getNo"
      "tifySettings\022&\n\004peer\030\001 \001(\0132\030.mtproto.Inp"
      "utNotifyPeer\" \n\036TL_account_resetNotifySe"
      "ttings\"P\n\030TL_account_updateProfile\022\022\n\nfi"
      "rst_name\030\002 \001(\t\022\021\n\tlast_name\030\003 \001(\t\022\r\n\005abo"
      "ut\030\004 \001(\t\"9\n\027TL_account_updateStatus\022\036\n\007o"
      "ffline\030\001 \001(\0132\r.mtproto.Bool\"\032\n\030TL_accoun"
      "t_getWallPapers\"`\n\025TL_account_reportPeer"
      "\022 \n\004peer\030\001 \001(\0132\022.mtproto.InputPeer\022%\n\006re"
      "ason\030\002 \001(\0132\025.mtproto.ReportReason\",\n\030TL_"
      "account_checkUsername\022\020\n\010username\030\001 \001(\t\""
      "-\n\031TL_account_updateUsername\022\020\n\010username"
      "\030\001 \001(\t\">\n\025TL_account_getPrivacy\022%\n\003key\030\001"
      " \001(\0132\030.mtproto.InputPrivacyKey\"h\n\025TL_acc"
      "ount_setPrivacy\022%\n\003key\030\001 \001(\0132\030.mtproto.I"
      "nputPrivacyKey\022(\n\005rules\030\002 \003(\0132\031.mtproto."
      "InputPrivacyRule\"*\n\030TL_account_deleteAcc"
      "ount\022\016\n\006reason\030\001 \001(\t\"\032\n\030TL_account_getAc"
      "countTTL\"@\n\030TL_account_setAccountTTL\022$\n\003"
      "ttl\030\001 \001(\0132\027.mtproto.AccountDaysTTL\"v\n\036TL"
      "_account_sendChangePhoneCode\022\027\n\017allow_fl"
      "ashcall\030\002 \001(\010\022\024\n\014phone_number\030\003 \001(\t\022%\n\016c"
      "urrent_number\030\004 \001(\0132\r.mtproto.Bool\"[\n\026TL"
      "_account_changePhone\022\024\n\014phone_number\030\001 \001"
      "(\t\022\027\n\017phone_code_hash\030\002 \001(\t\022\022\n\nphone_cod"
      "e\030\003 \001(\t\"/\n\035TL_account_updateDeviceLocked"
      "\022\016\n\006period\030\001 \001(\005\"\036\n\034TL_account_getAuthor"
      "izations\"-\n\035TL_account_resetAuthorizatio"
      "n\022\014\n\004hash\030\001 \001(\003\"\030\n\026TL_account_getPasswor"
      "d\"R\n\036TL_account_getPasswordSettings\0220\n\010p"
      "assword\030\001 \001(\0132\036.mtproto.InputCheckPasswo"
      "rdSRP\"\223\001\n!TL_account_updatePasswordSetti"
      "ngs\0220\n\010password\030\001 \001(\0132\036.mtproto.InputChe"
      "ckPasswordSRP\022<\n\014new_settings\030\002 \001(\0132&.mt"
      "proto.account_PasswordInputSettings\"o\n\037T"
      "L_account_sendConfirmPhoneCode\022\027\n\017allow_"
      "flashcall\030\002 \001(\010\022\014\n\004hash\030\003 \001(\t\022%\n\016current"
      "_number\030\004 \001(\0132\r.mtproto.Bool\"F\n\027TL_accou"
      "nt_confirmPhone\022\027\n\017phone_code_hash\030\001 \001(\t"
      "\022\022\n\nphone_code\030\002 \001(\t\"]\n\031TL_account_getTm"
      "pPassword\0220\n\010password\030\001 \001(\0132\036.mtproto.In"
      "putCheckPasswordSRP\022\016\n\006period\030\002 \001(\005\"!\n\037T"
      "L_account_getWebAuthorizations\"0\n TL_acc"
      "ount_resetWebAuthorization\022\014\n\004hash\030\001 \001(\003"
      "\"#\n!TL_account_resetWebAuthorizations\"\037\n"
      "\035TL_account_getAllSecureValues\"D\n\031TL_acc"
      "ount_getSecureValue\022\'\n\005types\030\001 \003(\0132\030.mtp"
      "roto.SecureValueType\"`\n\032TL_account_saveS"
      "ecureValue\022(\n\005value\030\001 \001(\0132\031.mtproto.Inpu"
      "tSecureValue\022\030\n\020secure_secret_id\030\002 \001(\003\"G"
      "\n\034TL_account_deleteSecureValue\022\'\n\005types\030"
      "\001 \003(\0132\030.mtproto.SecureValueType\"T\n\037TL_ac"
      "count_getAuthorizationForm\022\016\n\006bot_id\030\001 \001"
      "(\005\022\r\n\005scope\030\002 \001(\t\022\022\n\npublic_key\030\003 \001(\t\"\275\001"
      "\n\036TL_account_acceptAuthorization\022\016\n\006bot_"
      "id\030\001 \001(\005\022\r\n\005scope\030\002 \001(\t\022\022\n\npublic_key\030\003 "
      "\001(\t\022.\n\014value_hashes\030\004 \003(\0132\030.mtproto.Secu"
      "reValueHash\0228\n\013credentials\030\005 \001(\0132#.mtpro"
      "to.SecureCredentialsEncrypted\"v\n\036TL_acco"
      "unt_sendVerifyPhoneCode\022\027\n\017allow_flashca"
      "ll\030\002 \001(\010\022\024\n\014phone_number\030\003 \001(\t\022%\n\016curren"
      "t_number\030\004 \001(\0132\r.mtproto.Bool\"[\n\026TL_acco"
      "unt_verifyPhone\022\024\n\014phone_number\030\001 \001(\t\022\027\n"
      "\017phone_code_hash\030\002 \001(\t\022\022\n\nphone_code\030\003 \001"
      "(\t\"/\n\036TL_account_sendVerifyEmailCode\022\r\n\005"
      "email\030\001 \001(\t\"5\n\026TL_account_verifyEmail\022\r\n"
      "\005email\030\001 \001(\t\022\014\n\004code\030\002 \001(\t\"\273\001\n\035TL_accoun"
      "t_initTakeoutSession\022\020\n\010contacts\030\002 \001(\010\022\025"
      "\n\rmessage_users\030\003 \001(\010\022\025\n\rmessage_chats\030\004"
      " \001(\010\022\032\n\022message_megagroups\030\005 \001(\010\022\030\n\020mess"
      "age_channels\030\006 \001(\010\022\r\n\005files\030\007 \001(\010\022\025\n\rfil"
      "e_max_size\030\010 \001(\005\"2\n\037TL_account_finishTak"
      "eoutSession\022\017\n\007success\030\002 \001(\010\"3\n\021TL_users"
      "_getUsers\022\036\n\002id\030\001 \003(\0132\022.mtproto.InputUse"
      "r\"6\n\024TL_users_getFullUser\022\036\n\002id\030\001 \001(\0132\022."
      "mtproto.InputUser\"j\n\035TL_users_setSecureV"
      "alueErrors\022\036\n\002id\030\001 \001(\0132\022.mtproto.InputUs"
      "er\022)\n\006errors\030\002 \003(\0132\031.mtproto.SecureValue"
      "Error\"\031\n\027TL_contacts_getStatuses\"\'\n\027TL_c"
      "ontacts_getContacts\022\014\n\004hash\030\001 \001(\005\"E\n\032TL_"
      "contacts_importContacts\022\'\n\010contacts\030\001 \003("
      "\0132\025.mtproto.InputContact\";\n\031TL_contacts_"
      "deleteContact\022\036\n\002id\030\001 \001(\0132\022.mtproto.Inpu"
      "tUser\"<\n\032TL_contacts_deleteContacts\022\036\n\002i"
      "d\030\001 \003(\0132\022.mtproto.InputUser\"3\n\021TL_contac"
      "ts_block\022\036\n\002id\030\001 \001(\0132\022.mtproto.InputUser"
      "\"5\n\023TL_contacts_unblock\022\036\n\002id\030\001 \001(\0132\022.mt"
      "proto.InputUser\"7\n\026TL_contacts_getBlocke"
      "d\022\016\n\006offset\030\001 \001(\005\022\r\n\005limit\030\002 \001(\005\"\030\n\026TL_c"
      "ontacts_exportCard\"-\n\026TL_contacts_import"
      "Card\022\023\n\013export_card\030\001 \003(\005\".\n\022TL_contacts"
      "_search\022\t\n\001q\030\001 \001(\t\022\r\n\005limit\030\002 \001(\005\"/\n\033TL_"
      "contacts_resolveUsername\022\020\n\010username\030\001 \001"
      "(\t\"\273\001\n\027TL_contacts_getTopPeers\022\026\n\016corres"
      "pondents\030\002 \001(\010\022\017\n\007bots_pm\030\003 \001(\010\022\023\n\013bots_"
      "inline\030\004 \001(\010\022\023\n\013phone_calls\030\005 \001(\010\022\016\n\006gro"
      "ups\030\006 \001(\010\022\020\n\010channels\030\007 \001(\010\022\016\n\006offset\030\010 "
      "\001(\005\022\r\n\005limit\030\t \001(\005\022\014\n\004hash\030\n \001(\005\"n\n\036TL_c"
      "ontacts_resetTopPeerRating\022*\n\010category\030\001"
      " \001(\0132\030.mtproto.TopPeerCategory\022 \n\004peer\030\002"
      " \001(\0132\022.mtproto.InputPeer\"\030\n\026TL_contacts_"
      "resetSaved\"\026\n\024TL_contacts_getSaved\"<\n\032TL"
      "_contacts_toggleTopPeers\022\036\n\007enabled\030\001 \001("
      "\0132\r.mtproto.Bool\"<\n\027TL_messages_getMessa"
      "ges\022!\n\002id\030\001 \003(\0132\025.mtproto.InputMessage\"\236"
      "\001\n\026TL_messages_getDialogs\022\026\n\016exclude_pin"
      "ned\030\002 \001(\010\022\023\n\013offset_date\030\003 \001(\005\022\021\n\toffset"
      "_id\030\004 \001(\005\022\'\n\013offset_peer\030\005 \001(\0132\022.mtproto"
      ".InputPeer\022\r\n\005limit\030\006 \001(\005\022\014\n\004hash\030\007 \001(\005\""
      "\263\001\n\026TL_messages_getHistory\022 \n\004peer\030\001 \001(\013"
      "2\022.mtproto.InputPeer\022\021\n\toffset_id\030\002 \001(\005\022"
      "\023\n\013offset_date\030\003 \001(\005\022\022\n\nadd_offset\030\004 \001(\005"
      "\022\r\n\005limit\030\005 \001(\005\022\016\n\006max_id\030\006 \001(\005\022\016\n\006min_i"
      "d\030\007 \001(\005\022\014\n\004hash\030\010 \001(\005\"\227\002\n\022TL_messages_se"
      "arch\022 \n\004peer\030\002 \001(\0132\022.mtproto.InputPeer\022\t"
      "\n\001q\030\003 \001(\t\022#\n\007from_id\030\004 \001(\0132\022.mtproto.Inp"
      "utUser\022\'\n\006filter\030\005 \001(\0132\027.mtproto.Message"
      "sFilter\022\020\n\010min_date\030\006 \001(\005\022\020\n\010max_date\030\007 "
      "\001(\005\022\021\n\toffset_id\030\010 \001(\005\022\022\n\nadd_offset\030\t \001"
      "(\005\022\r\n\005limit\030\n \001(\005\022\016\n\006max_id\030\013 \001(\005\022\016\n\006min"
      "_id\030\014 \001(\005\022\014\n\004hash\030\r \001(\005\"K\n\027TL_messages_r"
      "eadHistory\022 \n\004peer\030\001 \001(\0132\022.mtproto.Input"
      "Peer\022\016\n\006max_id\030\002 \001(\005\"a\n\031TL_messages_dele"
      "teHistory\022\022\n\njust_clear\030\002 \001(\010\022 \n\004peer\030\003 "
      "\001(\0132\022.mtproto.InputPeer\022\016\n\006max_id\030\004 \001(\005\""
      "8\n\032TL_messages_deleteMessages\022\016\n\006revoke\030"
      "\002 \001(\010\022\n\n\002id\030\003 \003(\005\".\n\034TL_messages_receive"
      "dMessages\022\016\n\006max_id\030\001 \001(\005\"e\n\025TL_messages"
      "_setTyping\022 \n\004peer\030\001 \001(\0132\022.mtproto.Input"
      "Peer\022*\n\006action\030\002 \001(\0132\032.mtproto.SendMessa"
      "geAction\"\233\002\n\027TL_messages_sendMessage\022\022\n\n"
      "no_webpage\030\002 \001(\010\022\016\n\006silent\030\003 \001(\010\022\022\n\nback"
      "ground\030\004 \001(\010\022\023\n\013clear_draft\030\005 \001(\010\022 \n\004pee"
      "r\030\006 \001(\0132\022.mtproto.InputPeer\022\027\n\017reply_to_"
      "msg_id\030\007 \001(\005\022\017\n\007message\030\010 \001(\t\022\021\n\trandom_"
      "id\030\t \001(\003\022*\n\014reply_markup\030\n \001(\0132\024.mtproto"
      ".ReplyMarkup\022(\n\010entities\030\013 \003(\0132\026.mtproto"
      ".MessageEntity\"\251\002\n\025TL_messages_sendMedia"
      "\022\016\n\006silent\030\002 \001(\010\022\022\n\nbackground\030\003 \001(\010\022\023\n\013"
      "clear_draft\030\004 \001(\010\022 \n\004peer\030\005 \001(\0132\022.mtprot"
      "o.InputPeer\022\027\n\017reply_to_msg_id\030\006 \001(\005\022\"\n\005"
      "media\030\007 \001(\0132\023.mtproto.InputMedia\022\017\n\007mess"
      "age\030\010 \001(\t\022\021\n\trandom_id\030\t \001(\003\022*\n\014reply_ma"
      "rkup\030\n \001(\0132\024.mtproto.ReplyMarkup\022(\n\010enti"
      "ties\030\013 \003(\0132\026.mtproto.MessageEntity\"\324\001\n\033T"
      "L_messages_forwardMessages\022\016\n\006silent\030\002 \001"
      "(\010\022\022\n\nbackground\030\003 \001(\010\022\025\n\rwith_my_score\030"
      "\004 \001(\010\022\017\n\007grouped\030\005 \001(\010\022%\n\tfrom_peer\030\006 \001("
      "\0132\022.mtproto.InputPeer\022\n\n\002id\030\007 \003(\005\022\021\n\tran"
      "dom_id\030\010 \003(\003\022#\n\007to_peer\030\t \001(\0132\022.mtproto."
      "InputPeer\":\n\026TL_messages_reportSpam\022 \n\004p"
      "eer\030\001 \001(\0132\022.mtproto.InputPeer\">\n\032TL_mess"
      "ages_hideReportSpam\022 \n\004peer\030\001 \001(\0132\022.mtpr"
      "oto.InputPeer\"\?\n\033TL_messages_getPeerSett"
      "ings\022 \n\004peer\030\001 \001(\0132\022.mtproto.InputPeer\"i"
      "\n\022TL_messages_report\022 \n\004peer\030\001 \001(\0132\022.mtp"
      "roto.InputPeer\022\n\n\002id\030\002 \003(\005\022%\n\006reason\030\003 \001"
      "(\0132\025.mtproto.ReportReason\"\"\n\024TL_messages"
      "_getChats\022\n\n\002id\030\001 \003(\005\"*\n\027TL_messages_get"
      "FullChat\022\017\n\007chat_id\030\001 \001(\005\";\n\031TL_messages"
      "_editChatTitle\022\017\n\007chat_id\030\001 \001(\005\022\r\n\005title"
      "\030\002 \001(\t\"T\n\031TL_messages_editChatPhoto\022\017\n\007c"
      "hat_id\030\001 \001(\005\022&\n\005photo\030\002 \001(\0132\027.mtproto.In"
      "putChatPhoto\"b\n\027TL_messages_addChatUser\022"
      "\017\n\007chat_id\030\001 \001(\005\022#\n\007user_id\030\002 \001(\0132\022.mtpr"
      "oto.InputUser\022\021\n\tfwd_limit\030\003 \001(\005\"R\n\032TL_m"
      "essages_deleteChatUser\022\017\n\007chat_id\030\001 \001(\005\022"
      "#\n\007user_id\030\002 \001(\0132\022.mtproto.InputUser\"J\n\026"
      "TL_messages_createChat\022!\n\005users\030\001 \003(\0132\022."
      "mtproto.InputUser\022\r\n\005title\030\002 \001(\t\"A\n\027TL_m"
      "essages_getDhConfig\022\017\n\007version\030\001 \001(\005\022\025\n\r"
      "random_length\030\002 \001(\005\"d\n\035TL_messages_reque"
      "stEncryption\022#\n\007user_id\030\001 \001(\0132\022.mtproto."
      "InputUser\022\021\n\trandom_id\030\002 \001(\005\022\013\n\003g_a\030\003 \001("
      "\014\"o\n\034TL_messages_acceptEncryption\022)\n\004pee"
      "r\030\001 \001(\0132\033.mtproto.InputEncryptedChat\022\013\n\003"
      "g_b\030\002 \001(\014\022\027\n\017key_fingerprint\030\003 \001(\003\"0\n\035TL"
      "_messages_discardEncryption\022\017\n\007chat_id\030\001"
      " \001(\005\"j\n\036TL_messages_setEncryptedTyping\022)"
      "\n\004peer\030\001 \001(\0132\033.mtproto.InputEncryptedCha"
      "t\022\035\n\006typing\030\002 \001(\0132\r.mtproto.Bool\"_\n TL_m"
      "essages_readEncryptedHistory\022)\n\004peer\030\001 \001"
      "(\0132\033.mtproto.InputEncryptedChat\022\020\n\010max_d"
      "ate\030\002 \001(\005\"g\n\031TL_messages_sendEncrypted\022)"
      "\n\004peer\030\001 \001(\0132\033.mtproto.InputEncryptedCha"
      "t\022\021\n\trandom_id\030\002 \001(\003\022\014\n\004data\030\003 \001(\014\"\226\001\n\035T"
      "L_messages_sendEncryptedFile\022)\n\004peer\030\001 \001"
      "(\0132\033.mtproto.InputEncryptedChat\022\021\n\trando"
      "m_id\030\002 \001(\003\022\014\n\004data\030\003 \001(\014\022)\n\004file\030\004 \001(\0132\033"
      ".mtproto.InputEncryptedFile\"n\n TL_messag"
      "es_sendEncryptedService\022)\n\004peer\030\001 \001(\0132\033."
      "mtproto.InputEncryptedChat\022\021\n\trandom_id\030"
      "\002 \001(\003\022\014\n\004data\030\003 \001(\014\",\n\031TL_messages_recei"
      "vedQueue\022\017\n\007max_qts\030\001 \001(\005\"L\n\037TL_messages"
      "_reportEncryptedSpam\022)\n\004peer\030\001 \001(\0132\033.mtp"
      "roto.InputEncryptedChat\"-\n\037TL_messages_r"
      "eadMessageContents\022\n\n\002id\030\001 \003(\005\"9\n\027TL_mes"
      "sages_getStickers\022\020\n\010emoticon\030\001 \001(\t\022\014\n\004h"
      "ash\030\002 \001(\005\"*\n\032TL_messages_getAllStickers\022"
      "\014\n\004hash\030\001 \001(\005\"Z\n\035TL_messages_getWebPageP"
      "review\022\017\n\007message\030\002 \001(\t\022(\n\010entities\030\003 \003("
      "\0132\026.mtproto.MessageEntity\"/\n\034TL_messages"
      "_exportChatInvite\022\017\n\007chat_id\030\001 \001(\005\"+\n\033TL"
      "_messages_checkChatInvite\022\014\n\004hash\030\001 \001(\t\""
      ",\n\034TL_messages_importChatInvite\022\014\n\004hash\030"
      "\001 \001(\t\"I\n\031TL_messages_getStickerSet\022,\n\nst"
      "ickerset\030\001 \001(\0132\030.mtproto.InputStickerSet"
      "\"n\n\035TL_messages_installStickerSet\022,\n\nsti"
      "ckerset\030\001 \001(\0132\030.mtproto.InputStickerSet\022"
      "\037\n\010archived\030\002 \001(\0132\r.mtproto.Bool\"O\n\037TL_m"
      "essages_uninstallStickerSet\022,\n\nstickerse"
      "t\030\001 \001(\0132\030.mtproto.InputStickerSet\"\201\001\n\024TL"
      "_messages_startBot\022\037\n\003bot\030\001 \001(\0132\022.mtprot"
      "o.InputUser\022 \n\004peer\030\002 \001(\0132\022.mtproto.Inpu"
      "tPeer\022\021\n\trandom_id\030\003 \001(\003\022\023\n\013start_param\030"
      "\004 \001(\t\"n\n\034TL_messages_getMessagesViews\022 \n"
      "\004peer\030\001 \001(\0132\022.mtproto.InputPeer\022\n\n\002id\030\002 "
      "\003(\005\022 \n\tincrement\030\003 \001(\0132\r.mtproto.Bool\"O\n"
      "\034TL_messages_toggleChatAdmins\022\017\n\007chat_id"
      "\030\001 \001(\005\022\036\n\007enabled\030\002 \001(\0132\r.mtproto.Bool\"r"
      "\n\031TL_messages_editChatAdmin\022\017\n\007chat_id\030\001"
      " \001(\005\022#\n\007user_id\030\002 \001(\0132\022.mtproto.InputUse"
      "r\022\037\n\010is_admin\030\003 \001(\0132\r.mtproto.Bool\"*\n\027TL"
      "_messages_migrateChat\022\017\n\007chat_id\030\001 \001(\005\"\205"
      "\001\n\030TL_messages_searchGlobal\022\t\n\001q\030\001 \001(\t\022\023"
      "\n\013offset_date\030\002 \001(\005\022\'\n\013offset_peer\030\003 \001(\013"
      "2\022.mtproto.InputPeer\022\021\n\toffset_id\030\004 \001(\005\022"
      "\r\n\005limit\030\005 \001(\005\">\n\036TL_messages_reorderSti"
      "ckerSets\022\r\n\005masks\030\002 \001(\010\022\r\n\005order\030\003 \003(\003\"P"
      "\n\035TL_messages_getDocumentByHash\022\016\n\006sha25"
      "6\030\001 \001(\014\022\014\n\004size\030\002 \001(\005\022\021\n\tmime_type\030\003 \001(\t"
      "\"3\n\026TL_messages_searchGifs\022\t\n\001q\030\001 \001(\t\022\016\n"
      "\006offset\030\002 \001(\005\"(\n\030TL_messages_getSavedGif"
      "s\022\014\n\004hash\030\001 \001(\005\"X\n\023TL_messages_saveGif\022\""
      "\n\002id\030\001 \001(\0132\026.mtproto.InputDocument\022\035\n\006un"
      "save\030\002 \001(\0132\r.mtproto.Bool\"\256\001\n\037TL_message"
      "s_getInlineBotResults\022\037\n\003bot\030\002 \001(\0132\022.mtp"
      "roto.InputUser\022 \n\004peer\030\003 \001(\0132\022.mtproto.I"
      "nputPeer\022)\n\tgeo_point\030\004 \001(\0132\026.mtproto.In"
      "putGeoPoint\022\r\n\005query\030\005 \001(\t\022\016\n\006offset\030\006 \001"
      "(\t\"\335\001\n\037TL_messages_setInlineBotResults\022\017"
      "\n\007gallery\030\002 \001(\010\022\017\n\007private\030\003 \001(\010\022\020\n\010quer"
      "y_id\030\004 \001(\003\022.\n\007results\030\005 \003(\0132\035.mtproto.In"
      "putBotInlineResult\022\022\n\ncache_time\030\006 \001(\005\022\023"
      "\n\013next_offset\030\007 \001(\t\022-\n\tswitch_pm\030\010 \001(\0132\032"
      ".mtproto.InlineBotSwitchPM\"\306\001\n\037TL_messag"
      "es_sendInlineBotResult\022\016\n\006silent\030\002 \001(\010\022\022"
      "\n\nbackground\030\003 \001(\010\022\023\n\013clear_draft\030\004 \001(\010\022"
      " \n\004peer\030\005 \001(\0132\022.mtproto.InputPeer\022\027\n\017rep"
      "ly_to_msg_id\030\006 \001(\005\022\021\n\trandom_id\030\007 \001(\003\022\020\n"
      "\010query_id\030\010 \001(\003\022\n\n\002id\030\t \001(\t\"N\n\036TL_messag"
      "es_getMessageEditData\022 \n\004peer\030\001 \001(\0132\022.mt"
      "proto.InputPeer\022\n\n\002id\030\002 \001(\005\"\250\002\n\027TL_messa"
      "ges_editMessage\022\022\n\nno_webpage\030\002 \001(\010\022\025\n\rs"
      "top_geo_live\030\003 \001(\010\022 \n\004peer\030\004 \001(\0132\022.mtpro"
      "to.InputPeer\022\n\n\002id\030\005 \001(\005\022\017\n\007message\030\006 \001("
      "\t\022\"\n\005media\030\007 \001(\0132\023.mtproto.InputMedia\022*\n"
      "\014reply_markup\030\010 \001(\0132\024.mtproto.ReplyMarku"
      "p\022(\n\010entities\030\t \003(\0132\026.mtproto.MessageEnt"
      "ity\022)\n\tgeo_point\030\n \001(\0132\026.mtproto.InputGe"
      "oPoint\"\261\002\n TL_messages_editInlineBotMess"
      "age\022\022\n\nno_webpage\030\002 \001(\010\022\025\n\rstop_geo_live"
      "\030\003 \001(\010\022,\n\002id\030\004 \001(\0132 .mtproto.InputBotInl"
      "ineMessageID\022\017\n\007message\030\005 \001(\t\022\"\n\005media\030\006"
      " \001(\0132\023.mtproto.InputMedia\022*\n\014reply_marku"
      "p\030\007 \001(\0132\024.mtproto.ReplyMarkup\022(\n\010entitie"
      "s\030\010 \003(\0132\026.mtproto.MessageEntity\022)\n\tgeo_p"
      "oint\030\t \001(\0132\026.mtproto.InputGeoPoint\"p\n TL"
      "_messages_getBotCallbackAnswer\022\014\n\004game\030\002"
      " \001(\010\022 \n\004peer\030\003 \001(\0132\022.mtproto.InputPeer\022\016"
      "\n\006msg_id\030\004 \001(\005\022\014\n\004data\030\005 \001(\014\"u\n TL_messa"
      "ges_setBotCallbackAnswer\022\r\n\005alert\030\002 \001(\010\022"
      "\020\n\010query_id\030\003 \001(\003\022\017\n\007message\030\004 \001(\t\022\013\n\003ur"
      "l\030\005 \001(\t\022\022\n\ncache_time\030\006 \001(\005\"E\n\032TL_messag"
      "es_getPeerDialogs\022\'\n\005peers\030\001 \003(\0132\030.mtpro"
      "to.InputDialogPeer\"\241\001\n\025TL_messages_saveD"
      "raft\022\022\n\nno_webpage\030\002 \001(\010\022\027\n\017reply_to_msg"
      "_id\030\003 \001(\005\022 \n\004peer\030\004 \001(\0132\022.mtproto.InputP"
      "eer\022\017\n\007message\030\005 \001(\t\022(\n\010entities\030\006 \003(\0132\026"
      ".mtproto.MessageEntity\"\032\n\030TL_messages_ge"
      "tAllDrafts\"/\n\037TL_messages_getFeaturedSti"
      "ckers\022\014\n\004hash\030\001 \001(\005\".\n TL_messages_readF"
      "eaturedStickers\022\n\n\002id\030\001 \003(\003\"\?\n\035TL_messag"
      "es_getRecentStickers\022\020\n\010attached\030\002 \001(\010\022\014"
      "\n\004hash\030\003 \001(\005\"t\n\035TL_messages_saveRecentSt"
      "icker\022\020\n\010attached\030\002 \001(\010\022\"\n\002id\030\003 \001(\0132\026.mt"
      "proto.InputDocument\022\035\n\006unsave\030\004 \001(\0132\r.mt"
      "proto.Bool\"3\n\037TL_messages_clearRecentSti"
      "ckers\022\020\n\010attached\030\002 \001(\010\"R\n\037TL_messages_g"
      "etArchivedStickers\022\r\n\005masks\030\002 \001(\010\022\021\n\toff"
      "set_id\030\003 \001(\003\022\r\n\005limit\030\004 \001(\005\"+\n\033TL_messag"
      "es_getMaskStickers\022\014\n\004hash\030\001 \001(\005\"N\n\037TL_m"
      "essages_getAttachedStickers\022+\n\005media\030\001 \001"
      "(\0132\034.mtproto.InputStickeredMedia\"\241\001\n\030TL_"
      "messages_setGameScore\022\024\n\014edit_message\030\002 "
      "\001(\010\022\r\n\005force\030\003 \001(\010\022 \n\004peer\030\004 \001(\0132\022.mtpro"
      "to.InputPeer\022\n\n\002id\030\005 \001(\005\022#\n\007user_id\030\006 \001("
      "\0132\022.mtproto.InputUser\022\r\n\005score\030\007 \001(\005\"\247\001\n"
      "\036TL_messages_setInlineGameScore\022\024\n\014edit_"
      "message\030\002 \001(\010\022\r\n\005force\030\003 \001(\010\022,\n\002id\030\004 \001(\013"
      "2 .mtproto.InputBotInlineMessageID\022#\n\007us"
      "er_id\030\005 \001(\0132\022.mtproto.InputUser\022\r\n\005score"
      "\030\006 \001(\005\"r\n\035TL_messages_getGameHighScores\022"
      " \n\004peer\030\001 \001(\0132\022.mtproto.InputPeer\022\n\n\002id\030"
      "\002 \001(\005\022#\n\007user_id\030\003 \001(\0132\022.mtproto.InputUs"
      "er\"x\n#TL_messages_getInlineGameHighScore"
      "s\022,\n\002id\030\001 \001(\0132 .mtproto.InputBotInlineMe"
      "ssageID\022#\n\007user_id\030\002 \001(\0132\022.mtproto.Input"
      "User\"`\n\032TL_messages_getCommonChats\022#\n\007us"
      "er_id\030\001 \001(\0132\022.mtproto.InputUser\022\016\n\006max_i"
      "d\030\002 \001(\005\022\r\n\005limit\030\003 \001(\005\"-\n\027TL_messages_ge"
      "tAllChats\022\022\n\nexcept_ids\030\001 \003(\005\"3\n\026TL_mess"
      "ages_getWebPage\022\013\n\003url\030\001 \001(\t\022\014\n\004hash\030\002 \001"
      "(\005\"U\n\033TL_messages_toggleDialogPin\022\016\n\006pin"
      "ned\030\002 \001(\010\022&\n\004peer\030\003 \001(\0132\030.mtproto.InputD"
      "ialogPeer\"Z\n TL_messages_reorderPinnedDi"
      "alogs\022\r\n\005force\030\002 \001(\010\022\'\n\005order\030\003 \003(\0132\030.mt"
      "proto.InputDialogPeer\"\036\n\034TL_messages_get"
      "PinnedDialogs\"w\n!TL_messages_setBotShipp"
      "ingResults\022\020\n\010query_id\030\002 \001(\003\022\r\n\005error\030\003 "
      "\001(\t\0221\n\020shipping_options\030\004 \003(\0132\027.mtproto."
      "ShippingOption\"X\n$TL_messages_setBotPrec"
      "heckoutResults\022\017\n\007success\030\002 \001(\010\022\020\n\010query"
      "_id\030\003 \001(\003\022\r\n\005error\030\004 \001(\t\"_\n\027TL_messages_"
      "uploadMedia\022 \n\004peer\030\001 \001(\0132\022.mtproto.Inpu"
      "tPeer\022\"\n\005media\030\002 \001(\0132\023.mtproto.InputMedi"
      "a\"v\n&TL_messages_sendScreenshotNotificat"
      "ion\022 \n\004peer\030\001 \001(\0132\022.mtproto.InputPeer\022\027\n"
      "\017reply_to_msg_id\030\002 \001(\005\022\021\n\trandom_id\030\003 \001("
      "\003\",\n\034TL_messages_getFavedStickers\022\014\n\004has"
      "h\030\001 \001(\005\"\\\n\027TL_messages_faveSticker\022\"\n\002id"
      "\030\001 \001(\0132\026.mtproto.InputDocument\022\035\n\006unfave"
      "\030\002 \001(\0132\r.mtproto.Bool\"\227\001\n\035TL_messages_ge"
      "tUnreadMentions\022 \n\004peer\030\001 \001(\0132\022.mtproto."
      "InputPeer\022\021\n\toffset_id\030\002 \001(\005\022\022\n\nadd_offs"
      "et\030\003 \001(\005\022\r\n\005limit\030\004 \001(\005\022\016\n\006max_id\030\005 \001(\005\022"
      "\016\n\006min_id\030\006 \001(\005\"<\n\030TL_messages_readMenti"
      "ons\022 \n\004peer\030\001 \001(\0132\022.mtproto.InputPeer\"_\n"
      "\036TL_messages_getRecentLocations\022 \n\004peer\030"
      "\001 \001(\0132\022.mtproto.InputPeer\022\r\n\005limit\030\002 \001(\005"
      "\022\014\n\004hash\030\003 \001(\005\"\300\001\n\032TL_messages_sendMulti"
      "Media\022\016\n\006silent\030\002 \001(\010\022\022\n\nbackground\030\003 \001("
      "\010\022\023\n\013clear_draft\030\004 \001(\010\022 \n\004peer\030\005 \001(\0132\022.m"
      "tproto.InputPeer\022\027\n\017reply_to_msg_id\030\006 \001("
      "\005\022.\n\013multi_media\030\007 \003(\0132\031.mtproto.InputSi"
      "ngleMedia\"w\n\037TL_messages_uploadEncrypted"
      "File\022)\n\004peer\030\001 \001(\0132\033.mtproto.InputEncryp"
      "tedChat\022)\n\004file\030\002 \001(\0132\033.mtproto.InputEnc"
      "ryptedFile\"R\n\035TL_messages_searchStickerS"
      "ets\022\030\n\020exclude_featured\030\002 \001(\010\022\t\n\001q\030\003 \001(\t"
      "\022\014\n\004hash\030\004 \001(\005\"\034\n\032TL_messages_getSplitRa"
      "nges\"V\n\034TL_messages_markDialogUnread\022\016\n\006"
      "unread\030\002 \001(\010\022&\n\004peer\030\003 \001(\0132\030.mtproto.Inp"
      "utDialogPeer\"\"\n TL_messages_getDialogUnr"
      "eadMarks\"\034\n\032TL_messages_clearAllDrafts\"\025"
      "\n\023TL_updates_getState\"[\n\030TL_updates_getD"
      "ifference\022\013\n\003pts\030\002 \001(\005\022\027\n\017pts_total_limi"
      "t\030\003 \001(\005\022\014\n\004date\030\004 \001(\005\022\013\n\003qts\030\005 \001(\005\"\244\001\n\037T"
      "L_updates_getChannelDifference\022\r\n\005force\030"
      "\002 \001(\010\022&\n\007channel\030\003 \001(\0132\025.mtproto.InputCh"
      "annel\022.\n\006filter\030\004 \001(\0132\036.mtproto.ChannelM"
      "essagesFilter\022\013\n\003pts\030\005 \001(\005\022\r\n\005limit\030\006 \001("
      "\005\"\?\n\034TL_photos_updateProfilePhoto\022\037\n\002id\030"
      "\001 \001(\0132\023.mtproto.InputPhoto\"@\n\034TL_photos_"
      "uploadProfilePhoto\022 \n\004file\030\001 \001(\0132\022.mtpro"
      "to.InputFile\"9\n\026TL_photos_deletePhotos\022\037"
      "\n\002id\030\001 \003(\0132\023.mtproto.InputPhoto\"m\n\027TL_ph"
      "otos_getUserPhotos\022#\n\007user_id\030\001 \001(\0132\022.mt"
      "proto.InputUser\022\016\n\006offset\030\002 \001(\005\022\016\n\006max_i"
      "d\030\003 \001(\003\022\r\n\005limit\030\004 \001(\005\"K\n\026TL_upload_save"
      "FilePart\022\017\n\007file_id\030\001 \001(\003\022\021\n\tfile_part\030\002"
      " \001(\005\022\r\n\005bytes\030\003 \001(\014\"`\n\021TL_upload_getFile"
      "\022,\n\010location\030\001 \001(\0132\032.mtproto.InputFileLo"
      "cation\022\016\n\006offset\030\002 \001(\005\022\r\n\005limit\030\003 \001(\005\"h\n"
      "\031TL_upload_saveBigFilePart\022\017\n\007file_id\030\001 "
      "\001(\003\022\021\n\tfile_part\030\002 \001(\005\022\030\n\020file_total_par"
      "ts\030\003 \001(\005\022\r\n\005bytes\030\004 \001(\014\"f\n\024TL_upload_get"
      "WebFile\022/\n\010location\030\001 \001(\0132\035.mtproto.Inpu"
      "tWebFileLocation\022\016\n\006offset\030\002 \001(\005\022\r\n\005limi"
      "t\030\003 \001(\005\"I\n\024TL_upload_getCdnFile\022\022\n\nfile_"
      "token\030\001 \001(\014\022\016\n\006offset\030\002 \001(\005\022\r\n\005limit\030\003 \001"
      "(\005\"F\n\031TL_upload_reuploadCdnFile\022\022\n\nfile_"
      "token\030\001 \001(\014\022\025\n\rrequest_token\030\002 \001(\014\"@\n\032TL"
      "_upload_getCdnFileHashes\022\022\n\nfile_token\030\001"
      " \001(\014\022\016\n\006offset\030\002 \001(\005\"W\n\027TL_upload_getFil"
      "eHashes\022,\n\010location\030\001 \001(\0132\032.mtproto.Inpu"
      "tFileLocation\022\016\n\006offset\030\002 \001(\005\"\023\n\021TL_help"
      "_getConfig\"\026\n\024TL_help_getNearestDc\"&\n\024TL"
      "_help_getAppUpdate\022\016\n\006source\030\001 \001(\t\"<\n\022TL"
      "_help_saveAppLog\022&\n\006events\030\001 \003(\0132\026.mtpro"
      "to.InputAppEvent\"\027\n\025TL_help_getInviteTex"
      "t\"\024\n\022TL_help_getSupport\"3\n\027TL_help_getAp"
      "pChangelog\022\030\n\020prev_app_version\030\001 \001(\t\"M\n\033"
      "TL_help_setBotUpdatesStatus\022\035\n\025pending_u"
      "pdates_count\030\001 \001(\005\022\017\n\007message\030\002 \001(\t\"\026\n\024T"
      "L_help_getCdnConfig\"*\n\027TL_help_getRecent"
      "MeUrls\022\017\n\007referer\030\001 \001(\t\"\026\n\024TL_help_getPr"
      "oxyData\"!\n\037TL_help_getTermsOfServiceUpda"
      "te\"=\n\034TL_help_acceptTermsOfService\022\035\n\002id"
      "\030\001 \001(\0132\021.mtproto.DataJSON\"\'\n\027TL_help_get"
      "DeepLinkInfo\022\014\n\004path\030\001 \001(\t\")\n\031TL_help_ge"
      "tPassportConfig\022\014\n\004hash\030\001 \001(\005\"Q\n\027TL_chan"
      "nels_readHistory\022&\n\007channel\030\001 \001(\0132\025.mtpr"
      "oto.InputChannel\022\016\n\006max_id\030\002 \001(\005\"P\n\032TL_c"
      "hannels_deleteMessages\022&\n\007channel\030\001 \001(\0132"
      "\025.mtproto.InputChannel\022\n\n\002id\030\002 \003(\005\"l\n\035TL"
      "_channels_deleteUserHistory\022&\n\007channel\030\001"
      " \001(\0132\025.mtproto.InputChannel\022#\n\007user_id\030\002"
      " \001(\0132\022.mtproto.InputUser\"q\n\026TL_channels_"
      "reportSpam\022&\n\007channel\030\001 \001(\0132\025.mtproto.In"
      "putChannel\022#\n\007user_id\030\002 \001(\0132\022.mtproto.In"
      "putUser\022\n\n\002id\030\003 \003(\005\"d\n\027TL_channels_getMe"
      "ssages\022&\n\007channel\030\001 \001(\0132\025.mtproto.InputC"
      "hannel\022!\n\002id\030\002 \003(\0132\025.mtproto.InputMessag"
      "e\"\246\001\n\033TL_channels_getParticipants\022&\n\007cha"
      "nnel\030\001 \001(\0132\025.mtproto.InputChannel\0222\n\006fil"
      "ter\030\002 \001(\0132\".mtproto.ChannelParticipantsF"
      "ilter\022\016\n\006offset\030\003 \001(\005\022\r\n\005limit\030\004 \001(\005\022\014\n\004"
      "hash\030\005 \001(\005\"i\n\032TL_channels_getParticipant"
      "\022&\n\007channel\030\001 \001(\0132\025.mtproto.InputChannel"
      "\022#\n\007user_id\030\002 \001(\0132\022.mtproto.InputUser\"<\n"
      "\027TL_channels_getChannels\022!\n\002id\030\001 \003(\0132\025.m"
      "tproto.InputChannel\"D\n\032TL_channels_getFu"
      "llChannel\022&\n\007channel\030\001 \001(\0132\025.mtproto.Inp"
      "utChannel\"_\n\031TL_channels_createChannel\022\021"
      "\n\tbroadcast\030\002 \001(\010\022\021\n\tmegagroup\030\003 \001(\010\022\r\n\005"
      "title\030\004 \001(\t\022\r\n\005about\030\005 \001(\t\"N\n\025TL_channel"
      "s_editAbout\022&\n\007channel\030\001 \001(\0132\025.mtproto.I"
      "nputChannel\022\r\n\005about\030\002 \001(\t\"\227\001\n\025TL_channe"
      "ls_editAdmin\022&\n\007channel\030\001 \001(\0132\025.mtproto."
      "InputChannel\022#\n\007user_id\030\002 \001(\0132\022.mtproto."
      "InputUser\0221\n\014admin_rights\030\003 \001(\0132\033.mtprot"
      "o.ChannelAdminRights\"N\n\025TL_channels_edit"
      "Title\022&\n\007channel\030\001 \001(\0132\025.mtproto.InputCh"
      "annel\022\r\n\005title\030\002 \001(\t\"g\n\025TL_channels_edit"
      "Photo\022&\n\007channel\030\001 \001(\0132\025.mtproto.InputCh"
      "annel\022&\n\005photo\030\002 \001(\0132\027.mtproto.InputChat"
      "Photo\"U\n\031TL_channels_checkUsername\022&\n\007ch"
      "annel\030\001 \001(\0132\025.mtproto.InputChannel\022\020\n\010us"
      "ername\030\002 \001(\t\"V\n\032TL_channels_updateUserna"
      "me\022&\n\007channel\030\001 \001(\0132\025.mtproto.InputChann"
      "el\022\020\n\010username\030\002 \001(\t\"A\n\027TL_channels_join"
      "Channel\022&\n\007channel\030\001 \001(\0132\025.mtproto.Input"
      "Channel\"B\n\030TL_channels_leaveChannel\022&\n\007c"
      "hannel\030\001 \001(\0132\025.mtproto.InputChannel\"h\n\033T"
      "L_channels_inviteToChannel\022&\n\007channel\030\001 "
      "\001(\0132\025.mtproto.InputChannel\022!\n\005users\030\002 \003("
      "\0132\022.mtproto.InputUser\"B\n\030TL_channels_exp"
      "ortInvite\022&\n\007channel\030\001 \001(\0132\025.mtproto.Inp"
      "utChannel\"C\n\031TL_channels_deleteChannel\022&"
      "\n\007channel\030\001 \001(\0132\025.mtproto.InputChannel\"c"
      "\n\031TL_channels_toggleInvites\022&\n\007channel\030\001"
      " \001(\0132\025.mtproto.InputChannel\022\036\n\007enabled\030\002"
      " \001(\0132\r.mtproto.Bool\"s\n\035TL_channels_expor"
      "tMessageLink\022&\n\007channel\030\001 \001(\0132\025.mtproto."
      "InputChannel\022\n\n\002id\030\002 \001(\005\022\036\n\007grouped\030\003 \001("
      "\0132\r.mtproto.Bool\"f\n\034TL_channels_toggleSi"
      "gnatures\022&\n\007channel\030\001 \001(\0132\025.mtproto.Inpu"
      "tChannel\022\036\n\007enabled\030\002 \001(\0132\r.mtproto.Bool"
      "\"e\n\037TL_channels_updatePinnedMessage\022\016\n\006s"
      "ilent\030\002 \001(\010\022&\n\007channel\030\003 \001(\0132\025.mtproto.I"
      "nputChannel\022\n\n\002id\030\004 \001(\005\"&\n$TL_channels_g"
      "etAdminedPublicChannels\"\232\001\n\026TL_channels_"
      "editBanned\022&\n\007channel\030\001 \001(\0132\025.mtproto.In"
      "putChannel\022#\n\007user_id\030\002 \001(\0132\022.mtproto.In"
      "putUser\0223\n\rbanned_rights\030\003 \001(\0132\034.mtproto"
      ".ChannelBannedRights\"\334\001\n\027TL_channels_get"
      "AdminLog\022&\n\007channel\030\002 \001(\0132\025.mtproto.Inpu"
      "tChannel\022\t\n\001q\030\003 \001(\t\022;\n\revents_filter\030\004 \001"
      "(\0132$.mtproto.ChannelAdminLogEventsFilter"
      "\022\"\n\006admins\030\005 \003(\0132\022.mtproto.InputUser\022\016\n\006"
      "max_id\030\006 \001(\003\022\016\n\006min_id\030\007 \001(\003\022\r\n\005limit\030\010 "
      "\001(\005\"o\n\027TL_channels_setStickers\022&\n\007channe"
      "l\030\001 \001(\0132\025.mtproto.InputChannel\022,\n\nsticke"
      "rset\030\002 \001(\0132\030.mtproto.InputStickerSet\"U\n\037"
      "TL_channels_readMessageContents\022&\n\007chann"
      "el\030\001 \001(\0132\025.mtproto.InputChannel\022\n\n\002id\030\002 "
      "\003(\005\"S\n\031TL_channels_deleteHistory\022&\n\007chan"
      "nel\030\001 \001(\0132\025.mtproto.InputChannel\022\016\n\006max_"
      "id\030\002 \001(\005\"l\n\"TL_channels_togglePreHistory"
      "Hidden\022&\n\007channel\030\001 \001(\0132\025.mtproto.InputC"
      "hannel\022\036\n\007enabled\030\002 \001(\0132\r.mtproto.Bool\"-"
      "\n\033TL_channels_getLeftChannels\022\016\n\006offset\030"
      "\001 \001(\005\"U\n\031TL_bots_sendCustomRequest\022\025\n\rcu"
      "stom_method\030\001 \001(\t\022!\n\006params\030\002 \001(\0132\021.mtpr"
      "oto.DataJSON\"S\n\036TL_bots_answerWebhookJSO"
      "NQuery\022\020\n\010query_id\030\001 \001(\003\022\037\n\004data\030\002 \001(\0132\021"
      ".mtproto.DataJSON\",\n\032TL_payments_getPaym"
      "entForm\022\016\n\006msg_id\030\001 \001(\005\"/\n\035TL_payments_g"
      "etPaymentReceipt\022\016\n\006msg_id\030\001 \001(\005\"n\n!TL_p"
      "ayments_validateRequestedInfo\022\014\n\004save\030\002 "
      "\001(\010\022\016\n\006msg_id\030\003 \001(\005\022+\n\004info\030\004 \001(\0132\035.mtpr"
      "oto.PaymentRequestedInfo\"\233\001\n\033TL_payments"
      "_sendPaymentForm\022\016\n\006msg_id\030\002 \001(\005\022\031\n\021requ"
      "ested_info_id\030\003 \001(\t\022\032\n\022shipping_option_i"
      "d\030\004 \001(\t\0225\n\013credentials\030\005 \001(\0132 .mtproto.I"
      "nputPaymentCredentials\"\032\n\030TL_payments_ge"
      "tSavedInfo\"\?\n\032TL_payments_clearSavedInfo"
      "\022\023\n\013credentials\030\002 \001(\010\022\014\n\004info\030\003 \001(\010\"\245\001\n\034"
      "TL_stickers_createStickerSet\022\r\n\005masks\030\002 "
      "\001(\010\022#\n\007user_id\030\003 \001(\0132\022.mtproto.InputUser"
      "\022\r\n\005title\030\004 \001(\t\022\022\n\nshort_name\030\005 \001(\t\022.\n\010s"
      "tickers\030\006 \003(\0132\034.mtproto.InputStickerSetI"
      "tem\"K\n TL_stickers_removeStickerFromSet\022"
      "\'\n\007sticker\030\001 \001(\0132\026.mtproto.InputDocument"
      "\"^\n!TL_stickers_changeStickerPosition\022\'\n"
      "\007sticker\030\001 \001(\0132\026.mtproto.InputDocument\022\020"
      "\n\010position\030\002 \001(\005\"z\n\033TL_stickers_addStick"
      "erToSet\022,\n\nstickerset\030\001 \001(\0132\030.mtproto.In"
      "putStickerSet\022-\n\007sticker\030\002 \001(\0132\034.mtproto"
      ".InputStickerSetItem\"\030\n\026TL_phone_getCall"
      "Config\"\216\001\n\024TL_phone_requestCall\022#\n\007user_"
      "id\030\001 \001(\0132\022.mtproto.InputUser\022\021\n\trandom_i"
      "d\030\002 \001(\005\022\020\n\010g_a_hash\030\003 \001(\014\022,\n\010protocol\030\004 "
      "\001(\0132\032.mtproto.PhoneCallProtocol\"w\n\023TL_ph"
      "one_acceptCall\022%\n\004peer\030\001 \001(\0132\027.mtproto.I"
      "nputPhoneCall\022\013\n\003g_b\030\002 \001(\014\022,\n\010protocol\030\003"
      " \001(\0132\032.mtproto.PhoneCallProtocol\"\221\001\n\024TL_"
      "phone_confirmCall\022%\n\004peer\030\001 \001(\0132\027.mtprot"
      "o.InputPhoneCall\022\013\n\003g_a\030\002 \001(\014\022\027\n\017key_fin"
      "gerprint\030\003 \001(\003\022,\n\010protocol\030\004 \001(\0132\032.mtpro"
      "to.PhoneCallProtocol\">\n\025TL_phone_receive"
      "dCall\022%\n\004peer\030\001 \001(\0132\027.mtproto.InputPhone"
      "Call\"\227\001\n\024TL_phone_discardCall\022%\n\004peer\030\001 "
      "\001(\0132\027.mtproto.InputPhoneCall\022\020\n\010duration"
      "\030\002 \001(\005\022/\n\006reason\030\003 \001(\0132\037.mtproto.PhoneCa"
      "llDiscardReason\022\025\n\rconnection_id\030\004 \001(\003\"`"
      "\n\026TL_phone_setCallRating\022%\n\004peer\030\001 \001(\0132\027"
      ".mtproto.InputPhoneCall\022\016\n\006rating\030\002 \001(\005\022"
      "\017\n\007comment\030\003 \001(\t\"a\n\026TL_phone_saveCallDeb"
      "ug\022%\n\004peer\030\001 \001(\0132\027.mtproto.InputPhoneCal"
      "l\022 \n\005debug\030\002 \001(\0132\021.mtproto.DataJSON\"\?\n\027T"
      "L_langpack_getLangPack\022\021\n\tlang_pack\030\001 \001("
      "\t\022\021\n\tlang_code\030\002 \001(\t\"L\n\026TL_langpack_getS"
      "trings\022\021\n\tlang_pack\030\001 \001(\t\022\021\n\tlang_code\030\002"
      " \001(\t\022\014\n\004keys\030\003 \003(\t\"1\n\031TL_langpack_getDif"
      "ference\022\024\n\014from_version\030\001 \001(\005\"-\n\030TL_lang"
      "pack_getLanguages\022\021\n\tlang_pack\030\001 \001(\t\"C\n\027"
      "Vector_LangPackLanguage\022(\n\005datas\030\001 \003(\0132\031"
      ".mtproto.LangPackLanguage\"5\n\020Vector_Wall"
      "Paper\022!\n\005datas\030\001 \003(\0132\022.mtproto.WallPaper"
      "\"9\n\022Vector_SecureValue\022#\n\005datas\030\001 \003(\0132\024."
      "mtproto.SecureValue\"+\n\013Vector_User\022\034\n\005da"
      "tas\030\001 \003(\0132\r.mtproto.User\"=\n\024Vector_Conta"
      "ctStatus\022%\n\005datas\030\001 \003(\0132\026.mtproto.Contac"
      "tStatus\"\033\n\nVector_int\022\r\n\005datas\030\001 \003(\005\";\n\023"
      "Vector_SavedContact\022$\n\005datas\030\001 \003(\0132\025.mtp"
      "roto.SavedContact\"M\n\034Vector_ReceivedNoti"
      "fyMessage\022-\n\005datas\030\001 \003(\0132\036.mtproto.Recei"
      "vedNotifyMessage\"\034\n\013Vector_long\022\r\n\005datas"
      "\030\001 \003(\003\"E\n\030Vector_StickerSetCovered\022)\n\005da"
      "tas\030\001 \003(\0132\032.mtproto.StickerSetCovered\";\n"
      "\023Vector_MessageRange\022$\n\005datas\030\001 \003(\0132\025.mt"
      "proto.MessageRange\"7\n\021Vector_DialogPeer\022"
      "\"\n\005datas\030\001 \003(\0132\023.mtproto.DialogPeer\"3\n\017V"
      "ector_FileHash\022 \n\005datas\030\001 \003(\0132\021.mtproto."
      "FileHash\"\?\n\025Vector_LangPackString\022&\n\005dat"
      "as\030\001 \003(\0132\027.mtproto.LangPackString2\312\013\n\007RP"
      "CHelp\022\?\n\016help_getScheme\022\032.mtproto.TL_hel"
      "p_getScheme\032\017.mtproto.Scheme\"\000\022^\n\031help_g"
      "etInviteTextLayer46\022%.mtproto.TL_help_ge"
      "tInviteTextLayer46\032\030.mtproto.help_Invite"
      "Text\"\000\022[\n\030help_getAppUpdateLayer46\022$.mtp"
      "roto.TL_help_getAppUpdateLayer46\032\027.mtpro"
      "to.help_AppUpdate\"\000\022\?\n\016help_getConfig\022\032."
      "mtproto.TL_help_getConfig\032\017.mtproto.Conf"
      "ig\"\000\022H\n\021help_getNearestDc\022\035.mtproto.TL_h"
      "elp_getNearestDc\032\022.mtproto.NearestDc\"\000\022M"
      "\n\021help_getAppUpdate\022\035.mtproto.TL_help_ge"
      "tAppUpdate\032\027.mtproto.help_AppUpdate\"\000\022\?\n"
      "\017help_saveAppLog\022\033.mtproto.TL_help_saveA"
      "ppLog\032\r.mtproto.Bool\"\000\022P\n\022help_getInvite"
      "Text\022\036.mtproto.TL_help_getInviteText\032\030.m"
      "tproto.help_InviteText\"\000\022G\n\017help_getSupp"
      "ort\022\033.mtproto.TL_help_getSupport\032\025.mtpro"
      "to.help_Support\"\000\022L\n\024help_getAppChangelo"
      "g\022 .mtproto.TL_help_getAppChangelog\032\020.mt"
      "proto.Updates\"\000\022Q\n\030help_setBotUpdatesSta"
      "tus\022$.mtproto.TL_help_setBotUpdatesStatu"
      "s\032\r.mtproto.Bool\"\000\022H\n\021help_getCdnConfig\022"
      "\035.mtproto.TL_help_getCdnConfig\032\022.mtproto"
      ".CdnConfig\"\000\022V\n\024help_getRecentMeUrls\022 .m"
      "tproto.TL_help_getRecentMeUrls\032\032.mtproto"
      ".help_RecentMeUrls\"\000\022M\n\021help_getProxyDat"
      "a\022\035.mtproto.TL_help_getProxyData\032\027.mtpro"
      "to.help_ProxyData\"\000\022n\n\034help_getTermsOfSe"
      "rviceUpdate\022(.mtproto.TL_help_getTermsOf"
      "ServiceUpdate\032\".mtproto.help_TermsOfServ"
      "iceUpdate\"\000\022S\n\031help_acceptTermsOfService"
      "\022%.mtproto.TL_help_acceptTermsOfService\032"
      "\r.mtproto.Bool\"\000\022V\n\024help_getDeepLinkInfo"
      "\022 .mtproto.TL_help_getDeepLinkInfo\032\032.mtp"
      "roto.help_DeepLinkInfo\"\000\022\\\n\026help_getPass"
      "portConfig\022\".mtproto.TL_help_getPassport"
      "Config\032\034.mtproto.help_PassportConfig\"\0002\223"
      "\005\n\tRPCUpload\022G\n\023upload_saveFilePart\022\037.mt"
      "proto.TL_upload_saveFilePart\032\r.mtproto.B"
      "ool\"\000\022D\n\016upload_getFile\022\032.mtproto.TL_upl"
      "oad_getFile\032\024.mtproto.upload_File\"\000\022M\n\026u"
      "pload_saveBigFilePart\022\".mtproto.TL_uploa"
      "d_saveBigFilePart\032\r.mtproto.Bool\"\000\022M\n\021up"
      "load_getWebFile\022\035.mtproto.TL_upload_getW"
      "ebFile\032\027.mtproto.upload_WebFile\"\000\022M\n\021upl"
      "oad_getCdnFile\022\035.mtproto.TL_upload_getCd"
      "nFile\032\027.mtproto.upload_CdnFile\"\000\022X\n\026uplo"
      "ad_reuploadCdnFile\022\".mtproto.TL_upload_r"
      "euploadCdnFile\032\030.mtproto.Vector_FileHash"
      "\"\000\022Z\n\027upload_getCdnFileHashes\022#.mtproto."
      "TL_upload_getCdnFileHashes\032\030.mtproto.Vec"
      "tor_FileHash\"\000\022T\n\024upload_getFileHashes\022 "
      ".mtproto.TL_upload_getFileHashes\032\030.mtpro"
      "to.Vector_FileHash\"\0002\214\013\n\013RPCContacts\022Y\n\024"
      "contacts_getStatuses\022 .mtproto.TL_contac"
      "ts_getStatuses\032\035.mtproto.Vector_ContactS"
      "tatus\"\000\022V\n\024contacts_getContacts\022 .mtprot"
      "o.TL_contacts_getContacts\032\032.mtproto.cont"
      "acts_Contacts\"\000\022d\n\027contacts_importContac"
      "ts\022#.mtproto.TL_contacts_importContacts\032"
      "\".mtproto.contacts_ImportedContacts\"\000\022V\n"
      "\026contacts_deleteContact\022\".mtproto.TL_con"
      "tacts_deleteContact\032\026.mtproto.contacts_L"
      "ink\"\000\022O\n\027contacts_deleteContacts\022#.mtpro"
      "to.TL_contacts_deleteContacts\032\r.mtproto."
      "Bool\"\000\022=\n\016contacts_block\022\032.mtproto.TL_co"
      "ntacts_block\032\r.mtproto.Bool\"\000\022A\n\020contact"
      "s_unblock\022\034.mtproto.TL_contacts_unblock\032"
      "\r.mtproto.Bool\"\000\022S\n\023contacts_getBlocked\022"
      "\037.mtproto.TL_contacts_getBlocked\032\031.mtpro"
      "to.contacts_Blocked\"\000\022M\n\023contacts_export"
      "Card\022\037.mtproto.TL_contacts_exportCard\032\023."
      "mtproto.Vector_int\"\000\022G\n\023contacts_importC"
      "ard\022\037.mtproto.TL_contacts_importCard\032\r.m"
      "tproto.User\"\000\022I\n\017contacts_search\022\033.mtpro"
      "to.TL_contacts_search\032\027.mtproto.contacts"
      "_Found\"\000\022b\n\030contacts_resolveUsername\022$.m"
      "tproto.TL_contacts_resolveUsername\032\036.mtp"
      "roto.contacts_ResolvedPeer\"\000\022V\n\024contacts"
      "_getTopPeers\022 .mtproto.TL_contacts_getTo"
      "pPeers\032\032.mtproto.contacts_TopPeers\"\000\022W\n\033"
      "contacts_resetTopPeerRating\022\'.mtproto.TL"
      "_contacts_resetTopPeerRating\032\r.mtproto.B"
      "ool\"\000\022G\n\023contacts_resetSaved\022\037.mtproto.T"
      "L_contacts_resetSaved\032\r.mtproto.Bool\"\000\022R"
      "\n\021contacts_getSaved\022\035.mtproto.TL_contact"
      "s_getSaved\032\034.mtproto.Vector_SavedContact"
      "\"\000\022O\n\027contacts_toggleTopPeers\022#.mtproto."
      "TL_contacts_toggleTopPeers\032\r.mtproto.Boo"
      "l\"\0002\255\003\n\013RPCStickers\022b\n\031stickers_createSt"
      "ickerSet\022%.mtproto.TL_stickers_createSti"
      "ckerSet\032\034.mtproto.messages_StickerSet\"\000\022"
      "j\n\035stickers_removeStickerFromSet\022).mtpro"
      "to.TL_stickers_removeStickerFromSet\032\034.mt"
      "proto.messages_StickerSet\"\000\022l\n\036stickers_"
      "changeStickerPosition\022*.mtproto.TL_stick"
      "ers_changeStickerPosition\032\034.mtproto.mess"
      "ages_StickerSet\"\000\022`\n\030stickers_addSticker"
      "ToSet\022$.mtproto.TL_stickers_addStickerTo"
      "Set\032\034.mtproto.messages_StickerSet\"\0002\343\036\n\n"
      "RPCAccount\022[\n\035account_registerDeviceLaye"
      "r71\022).mtproto.TL_account_registerDeviceL"
      "ayer71\032\r.mtproto.Bool\"\000\022_\n\037account_unreg"
      "isterDeviceLayer71\022+.mtproto.TL_account_"
      "unregisterDeviceLayer71\032\r.mtproto.Bool\"\000"
      "\022M\n\026account_registerDevice\022\".mtproto.TL_"
      "account_registerDevice\032\r.mtproto.Bool\"\000\022"
      "Q\n\030account_unregisterDevice\022$.mtproto.TL"
      "_account_unregisterDevice\032\r.mtproto.Bool"
      "\"\000\022Y\n\034account_updateNotifySettings\022(.mtp"
      "roto.TL_account_updateNotifySettings\032\r.m"
      "tproto.Bool\"\000\022a\n\031account_getNotifySettin"
      "gs\022%.mtproto.TL_account_getNotifySetting"
      "s\032\033.mtproto.PeerNotifySettings\"\000\022W\n\033acco"
      "unt_resetNotifySettings\022\'.mtproto.TL_acc"
      "ount_resetNotifySettings\032\r.mtproto.Bool\""
      "\000\022K\n\025account_updateProfile\022!.mtproto.TL_"
      "account_updateProfile\032\r.mtproto.User\"\000\022I"
      "\n\024account_updateStatus\022 .mtproto.TL_acco"
      "unt_updateStatus\032\r.mtproto.Bool\"\000\022W\n\025acc"
      "ount_getWallPapers\022!.mtproto.TL_account_"
      "getWallPapers\032\031.mtproto.Vector_WallPaper"
      "\"\000\022E\n\022account_reportPeer\022\036.mtproto.TL_ac"
      "count_reportPeer\032\r.mtproto.Bool\"\000\022K\n\025acc"
      "ount_checkUsername\022!.mtproto.TL_account_"
      "checkUsername\032\r.mtproto.Bool\"\000\022M\n\026accoun"
      "t_updateUsername\022\".mtproto.TL_account_up"
      "dateUsername\032\r.mtproto.User\"\000\022U\n\022account"
      "_getPrivacy\022\036.mtproto.TL_account_getPriv"
      "acy\032\035.mtproto.account_PrivacyRules\"\000\022U\n\022"
      "account_setPrivacy\022\036.mtproto.TL_account_"
      "setPrivacy\032\035.mtproto.account_PrivacyRule"
      "s\"\000\022K\n\025account_deleteAccount\022!.mtproto.T"
      "L_account_deleteAccount\032\r.mtproto.Bool\"\000"
      "\022U\n\025account_getAccountTTL\022!.mtproto.TL_a"
      "ccount_getAccountTTL\032\027.mtproto.AccountDa"
      "ysTTL\"\000\022K\n\025account_setAccountTTL\022!.mtpro"
      "to.TL_account_setAccountTTL\032\r.mtproto.Bo"
      "ol\"\000\022`\n\033account_sendChangePhoneCode\022\'.mt"
      "proto.TL_account_sendChangePhoneCode\032\026.m"
      "tproto.auth_SentCode\"\000\022G\n\023account_change"
      "Phone\022\037.mtproto.TL_account_changePhone\032\r"
      ".mtproto.User\"\000\022U\n\032account_updateDeviceL"
      "ocked\022&.mtproto.TL_account_updateDeviceL"
      "ocked\032\r.mtproto.Bool\"\000\022e\n\031account_getAut"
      "horizations\022%.mtproto.TL_account_getAuth"
      "orizations\032\037.mtproto.account_Authorizati"
      "ons\"\000\022U\n\032account_resetAuthorization\022&.mt"
      "proto.TL_account_resetAuthorization\032\r.mt"
      "proto.Bool\"\000\022S\n\023account_getPassword\022\037.mt"
      "proto.TL_account_getPassword\032\031.mtproto.a"
      "ccount_Password\"\000\022k\n\033account_getPassword"
      "Settings\022\'.mtproto.TL_account_getPasswor"
      "dSettings\032!.mtproto.account_PasswordSett"
      "ings\"\000\022]\n\036account_updatePasswordSettings"
      "\022*.mtproto.TL_account_updatePasswordSett"
      "ings\032\r.mtproto.Bool\"\000\022b\n\034account_sendCon"
      "firmPhoneCode\022(.mtproto.TL_account_sendC"
      "onfirmPhoneCode\032\026.mtproto.auth_SentCode\""
      "\000\022I\n\024account_confirmPhone\022 .mtproto.TL_a"
      "ccount_confirmPhone\032\r.mtproto.Bool\"\000\022\\\n\026"
      "account_getTmpPassword\022\".mtproto.TL_acco"
      "unt_getTmpPassword\032\034.mtproto.account_Tmp"
      "Password\"\000\022n\n\034account_getWebAuthorizatio"
      "ns\022(.mtproto.TL_account_getWebAuthorizat"
      "ions\032\".mtproto.account_WebAuthorizations"
      "\"\000\022[\n\035account_resetWebAuthorization\022).mt"
      "proto.TL_account_resetWebAuthorization\032\r"
      ".mtproto.Bool\"\000\022]\n\036account_resetWebAutho"
      "rizations\022*.mtproto.TL_account_resetWebA"
      "uthorizations\032\r.mtproto.Bool\"\000\022c\n\032accoun"
      "t_getAllSecureValues\022&.mtproto.TL_accoun"
      "t_getAllSecureValues\032\033.mtproto.Vector_Se"
      "cureValue\"\000\022[\n\026account_getSecureValue\022\"."
      "mtproto.TL_account_getSecureValue\032\033.mtpr"
      "oto.Vector_SecureValue\"\000\022V\n\027account_save"
      "SecureValue\022#.mtproto.TL_account_saveSec"
      "ureValue\032\024.mtproto.SecureValue\"\000\022S\n\031acco"
      "unt_deleteSecureValue\022%.mtproto.TL_accou"
      "nt_deleteSecureValue\032\r.mtproto.Bool\"\000\022n\n"
      "\034account_getAuthorizationForm\022(.mtproto."
      "TL_account_getAuthorizationForm\032\".mtprot"
      "o.account_AuthorizationForm\"\000\022W\n\033account"
      "_acceptAuthorization\022\'.mtproto.TL_accoun"
      "t_acceptAuthorization\032\r.mtproto.Bool\"\000\022`"
      "\n\033account_sendVerifyPhoneCode\022\'.mtproto."
      "TL_account_sendVerifyPhoneCode\032\026.mtproto"
      ".auth_SentCode\"\000\022G\n\023account_verifyPhone\022"
      "\037.mtproto.TL_account_verifyPhone\032\r.mtpro"
      "to.Bool\"\000\022h\n\033account_sendVerifyEmailCode"
      "\022\'.mtproto.TL_account_sendVerifyEmailCod"
      "e\032\036.mtproto.account_SentEmailCode\"\000\022G\n\023a"
      "ccount_verifyEmail\022\037.mtproto.TL_account_"
      "verifyEmail\032\r.mtproto.Bool\"\000\022`\n\032account_"
      "initTakeoutSession\022&.mtproto.TL_account_"
      "initTakeoutSession\032\030.mtproto.account_Tak"
      "eout\"\000\022Y\n\034account_finishTakeoutSession\022("
      ".mtproto.TL_account_finishTakeoutSession"
      "\032\r.mtproto.Bool\"\0002\265\001\n\007RPCBots\022Q\n\026bots_se"
      "ndCustomRequest\022\".mtproto.TL_bots_sendCu"
      "stomRequest\032\021.mtproto.DataJSON\"\000\022W\n\033bots"
      "_answerWebhookJSONQuery\022\'.mtproto.TL_bot"
      "s_answerWebhookJSONQuery\032\r.mtproto.Bool\""
      "\0002\351\004\n\010RPCPhone\022K\n\023phone_getCallConfig\022\037."
      "mtproto.TL_phone_getCallConfig\032\021.mtproto"
      ".DataJSON\"\000\022N\n\021phone_requestCall\022\035.mtpro"
      "to.TL_phone_requestCall\032\030.mtproto.phone_"
      "PhoneCall\"\000\022L\n\020phone_acceptCall\022\034.mtprot"
      "o.TL_phone_acceptCall\032\030.mtproto.phone_Ph"
      "oneCall\"\000\022N\n\021phone_confirmCall\022\035.mtproto"
      ".TL_phone_confirmCall\032\030.mtproto.phone_Ph"
      "oneCall\"\000\022E\n\022phone_receivedCall\022\036.mtprot"
      "o.TL_phone_receivedCall\032\r.mtproto.Bool\"\000"
      "\022F\n\021phone_discardCall\022\035.mtproto.TL_phone"
      "_discardCall\032\020.mtproto.Updates\"\000\022J\n\023phon"
      "e_setCallRating\022\037.mtproto.TL_phone_setCa"
      "llRating\032\020.mtproto.Updates\"\000\022G\n\023phone_sa"
      "veCallDebug\022\037.mtproto.TL_phone_saveCallD"
      "ebug\032\r.mtproto.Bool\"\0002\322\004\n\013RPCLangpack\022l\n"
      "\034langpack_getLanguagesLayer70\022(.mtproto."
      "TL_langpack_getLanguagesLayer70\032 .mtprot"
      "o.Vector_LangPackLanguage\"\000\022e\n\033langpack_"
      "getLangPackLayer71\022\'.mtproto.TL_langpack"
      "_getLangPackLayer71\032\033.mtproto.LangPackDi"
      "fference\"\000\022W\n\024langpack_getLangPack\022 .mtp"
      "roto.TL_langpack_getLangPack\032\033.mtproto.L"
      "angPackDifference\"\000\022X\n\023langpack_getStrin"
      "gs\022\037.mtproto.TL_langpack_getStrings\032\036.mt"
      "proto.Vector_LangPackString\"\000\022[\n\026langpac"
      "k_getDifference\022\".mtproto.TL_langpack_ge"
      "tDifference\032\033.mtproto.LangPackDifference"
      "\"\000\022^\n\025langpack_getLanguages\022!.mtproto.TL"
      "_langpack_getLanguages\032 .mtproto.Vector_"
      "LangPackLanguage\"\0002\253\n\n\007RPCAuth\022R\n\024auth_s"
      "endCodeLayer51\022 .mtproto.TL_auth_sendCod"
      "eLayer51\032\026.mtproto.auth_SentCode\"\000\022D\n\rau"
      "th_sendCode\022\031.mtproto.TL_auth_sendCode\032\026"
      ".mtproto.auth_SentCode\"\000\022E\n\013auth_signUp\022"
      "\027.mtproto.TL_auth_signUp\032\033.mtproto.auth_"
      "Authorization\"\000\022E\n\013auth_signIn\022\027.mtproto"
      ".TL_auth_signIn\032\033.mtproto.auth_Authoriza"
      "tion\"\000\0227\n\013auth_logOut\022\027.mtproto.TL_auth_"
      "logOut\032\r.mtproto.Bool\"\000\022Q\n\030auth_resetAut"
      "horizations\022$.mtproto.TL_auth_resetAutho"
      "rizations\032\r.mtproto.Bool\"\000\022g\n\030auth_expor"
      "tAuthorization\022$.mtproto.TL_auth_exportA"
      "uthorization\032#.mtproto.auth_ExportedAuth"
      "orization\"\000\022_\n\030auth_importAuthorization\022"
      "$.mtproto.TL_auth_importAuthorization\032\033."
      "mtproto.auth_Authorization\"\000\022I\n\024auth_bin"
      "dTempAuthKey\022 .mtproto.TL_auth_bindTempA"
      "uthKey\032\r.mtproto.Bool\"\000\022e\n\033auth_importBo"
      "tAuthorization\022\'.mtproto.TL_auth_importB"
      "otAuthorization\032\033.mtproto.auth_Authoriza"
      "tion\"\000\022S\n\022auth_checkPassword\022\036.mtproto.T"
      "L_auth_checkPassword\032\033.mtproto.auth_Auth"
      "orization\"\000\022j\n\034auth_requestPasswordRecov"
      "ery\022(.mtproto.TL_auth_requestPasswordRec"
      "overy\032\036.mtproto.auth_PasswordRecovery\"\000\022"
      "W\n\024auth_recoverPassword\022 .mtproto.TL_aut"
      "h_recoverPassword\032\033.mtproto.auth_Authori"
      "zation\"\000\022H\n\017auth_resendCode\022\033.mtproto.TL"
      "_auth_resendCode\032\026.mtproto.auth_SentCode"
      "\"\000\022\?\n\017auth_cancelCode\022\033.mtproto.TL_auth_"
      "cancelCode\032\r.mtproto.Bool\"\000\022K\n\025auth_drop"
      "TempAuthKeys\022!.mtproto.TL_auth_dropTempA"
      "uthKeys\032\r.mtproto.Bool\"\0002\355\002\n\tRPCPhotos\022_"
      "\n\031photos_updateProfilePhoto\022%.mtproto.TL"
      "_photos_updateProfilePhoto\032\031.mtproto.Use"
      "rProfilePhoto\"\000\022[\n\031photos_uploadProfileP"
      "hoto\022%.mtproto.TL_photos_uploadProfilePh"
      "oto\032\025.mtproto.photos_Photo\"\000\022N\n\023photos_d"
      "eletePhotos\022\037.mtproto.TL_photos_deletePh"
      "otos\032\024.mtproto.Vector_long\"\000\022R\n\024photos_g"
      "etUserPhotos\022 .mtproto.TL_photos_getUser"
      "Photos\032\026.mtproto.photos_Photos\"\0002\306\026\n\013RPC"
      "Channels\022I\n\024channels_readHistory\022 .mtpro"
      "to.TL_channels_readHistory\032\r.mtproto.Boo"
      "l\"\000\022d\n\027channels_deleteMessages\022#.mtproto"
      ".TL_channels_deleteMessages\032\".mtproto.me"
      "ssages_AffectedMessages\"\000\022i\n\032channels_de"
      "leteUserHistory\022&.mtproto.TL_channels_de"
      "leteUserHistory\032!.mtproto.messages_Affec"
      "tedHistory\"\000\022G\n\023channels_reportSpam\022\037.mt"
      "proto.TL_channels_reportSpam\032\r.mtproto.B"
      "ool\"\000\022V\n\024channels_getMessages\022 .mtproto."
      "TL_channels_getMessages\032\032.mtproto.messag"
      "es_Messages\"\000\022i\n\030channels_getParticipant"
      "s\022$.mtproto.TL_channels_getParticipants\032"
      "%.mtproto.channels_ChannelParticipants\"\000"
      "\022f\n\027channels_getParticipant\022#.mtproto.TL"
      "_channels_getParticipant\032$.mtproto.chann"
      "els_ChannelParticipant\"\000\022S\n\024channels_get"
      "Channels\022 .mtproto.TL_channels_getChanne"
      "ls\032\027.mtproto.messages_Chats\"\000\022\\\n\027channel"
      "s_getFullChannel\022#.mtproto.TL_channels_g"
      "etFullChannel\032\032.mtproto.messages_ChatFul"
      "l\"\000\022P\n\026channels_createChannel\022\".mtproto."
      "TL_channels_createChannel\032\020.mtproto.Upda"
      "tes\"\000\022E\n\022channels_editAbout\022\036.mtproto.TL"
      "_channels_editAbout\032\r.mtproto.Bool\"\000\022H\n\022"
      "channels_editAdmin\022\036.mtproto.TL_channels"
      "_editAdmin\032\020.mtproto.Updates\"\000\022H\n\022channe"
      "ls_editTitle\022\036.mtproto.TL_channels_editT"
      "itle\032\020.mtproto.Updates\"\000\022H\n\022channels_edi"
      "tPhoto\022\036.mtproto.TL_channels_editPhoto\032\020"
      ".mtproto.Updates\"\000\022M\n\026channels_checkUser"
      "name\022\".mtproto.TL_channels_checkUsername"
      "\032\r.mtproto.Bool\"\000\022O\n\027channels_updateUser"
      "name\022#.mtproto.TL_channels_updateUsernam"
      "e\032\r.mtproto.Bool\"\000\022L\n\024channels_joinChann"
      "el\022 .mtproto.TL_channels_joinChannel\032\020.m"
      "tproto.Updates\"\000\022N\n\025channels_leaveChanne"
      "l\022!.mtproto.TL_channels_leaveChannel\032\020.m"
      "tproto.Updates\"\000\022T\n\030channels_inviteToCha"
      "nnel\022$.mtproto.TL_channels_inviteToChann"
      "el\032\020.mtproto.Updates\"\000\022Y\n\025channels_expor"
      "tInvite\022!.mtproto.TL_channels_exportInvi"
      "te\032\033.mtproto.ExportedChatInvite\"\000\022P\n\026cha"
      "nnels_deleteChannel\022\".mtproto.TL_channel"
      "s_deleteChannel\032\020.mtproto.Updates\"\000\022P\n\026c"
      "hannels_toggleInvites\022\".mtproto.TL_chann"
      "els_toggleInvites\032\020.mtproto.Updates\"\000\022d\n"
      "\032channels_exportMessageLink\022&.mtproto.TL"
      "_channels_exportMessageLink\032\034.mtproto.Ex"
      "portedMessageLink\"\000\022V\n\031channels_toggleSi"
      "gnatures\022%.mtproto.TL_channels_toggleSig"
      "natures\032\020.mtproto.Updates\"\000\022\\\n\034channels_"
      "updatePinnedMessage\022(.mtproto.TL_channel"
      "s_updatePinnedMessage\032\020.mtproto.Updates\""
      "\000\022m\n!channels_getAdminedPublicChannels\022-"
      ".mtproto.TL_channels_getAdminedPublicCha"
      "nnels\032\027.mtproto.messages_Chats\"\000\022J\n\023chan"
      "nels_editBanned\022\037.mtproto.TL_channels_ed"
      "itBanned\032\020.mtproto.Updates\"\000\022]\n\024channels"
      "_getAdminLog\022 .mtproto.TL_channels_getAd"
      "minLog\032!.mtproto.channels_AdminLogResult"
      "s\"\000\022I\n\024channels_setStickers\022 .mtproto.TL"
      "_channels_setStickers\032\r.mtproto.Bool\"\000\022Y"
      "\n\034channels_readMessageContents\022(.mtproto"
      ".TL_channels_readMessageContents\032\r.mtpro"
      "to.Bool\"\000\022M\n\026channels_deleteHistory\022\".mt"
      "proto.TL_channels_deleteHistory\032\r.mtprot"
      "o.Bool\"\000\022b\n\037channels_togglePreHistoryHid"
      "den\022+.mtproto.TL_channels_togglePreHisto"
      "ryHidden\032\020.mtproto.Updates\"\000\022[\n\030channels"
      "_getLeftChannels\022$.mtproto.TL_channels_g"
      "etLeftChannels\032\027.mtproto.messages_Chats\""
      "\0002\343\004\n\013RPCPayments\022_\n\027payments_getPayment"
      "Form\022#.mtproto.TL_payments_getPaymentFor"
      "m\032\035.mtproto.payments_PaymentForm\"\000\022h\n\032pa"
      "yments_getPaymentReceipt\022&.mtproto.TL_pa"
      "yments_getPaymentReceipt\032 .mtproto.payme"
      "nts_PaymentReceipt\"\000\022x\n\036payments_validat"
      "eRequestedInfo\022*.mtproto.TL_payments_val"
      "idateRequestedInfo\032(.mtproto.payments_Va"
      "lidatedRequestedInfo\"\000\022c\n\030payments_sendP"
      "aymentForm\022$.mtproto.TL_payments_sendPay"
      "mentForm\032\037.mtproto.payments_PaymentResul"
      "t\"\000\022Y\n\025payments_getSavedInfo\022!.mtproto.T"
      "L_payments_getSavedInfo\032\033.mtproto.paymen"
      "ts_SavedInfo\"\000\022O\n\027payments_clearSavedInf"
      "o\022#.mtproto.TL_payments_clearSavedInfo\032\r"
      ".mtproto.Bool\"\0002\374I\n\013RPCMessages\022i\n\032messa"
      "ges_readHistoryLayer2\022&.mtproto.TL_messa"
      "ges_readHistoryLayer2\032!.mtproto.messages"
      "_AffectedHistory\"\000\022b\n\032messages_getHistor"
      "yLayer51\022&.mtproto.TL_messages_getHistor"
      "yLayer51\032\032.mtproto.messages_Messages\"\000\022Z"
      "\n\026messages_searchLayer68\022\".mtproto.TL_me"
      "ssages_searchLayer68\032\032.mtproto.messages_"
      "Messages\"\000\022V\n\024messages_getMessages\022 .mtp"
      "roto.TL_messages_getMessages\032\032.mtproto.m"
      "essages_Messages\"\000\022S\n\023messages_getDialog"
      "s\022\037.mtproto.TL_messages_getDialogs\032\031.mtp"
      "roto.messages_Dialogs\"\000\022T\n\023messages_getH"
      "istory\022\037.mtproto.TL_messages_getHistory\032"
      "\032.mtproto.messages_Messages\"\000\022L\n\017message"
      "s_search\022\033.mtproto.TL_messages_search\032\032."
      "mtproto.messages_Messages\"\000\022^\n\024messages_"
      "readHistory\022 .mtproto.TL_messages_readHi"
      "story\032\".mtproto.messages_AffectedMessage"
      "s\"\000\022a\n\026messages_deleteHistory\022\".mtproto."
      "TL_messages_deleteHistory\032!.mtproto.mess"
      "ages_AffectedHistory\"\000\022d\n\027messages_delet"
      "eMessages\022#.mtproto.TL_messages_deleteMe"
      "ssages\032\".mtproto.messages_AffectedMessag"
      "es\"\000\022k\n\031messages_receivedMessages\022%.mtpr"
      "oto.TL_messages_receivedMessages\032%.mtpro"
      "to.Vector_ReceivedNotifyMessage\"\000\022E\n\022mes"
      "sages_setTyping\022\036.mtproto.TL_messages_se"
      "tTyping\032\r.mtproto.Bool\"\000\022L\n\024messages_sen"
      "dMessage\022 .mtproto.TL_messages_sendMessa"
      "ge\032\020.mtproto.Updates\"\000\022H\n\022messages_sendM"
      "edia\022\036.mtproto.TL_messages_sendMedia\032\020.m"
      "tproto.Updates\"\000\022T\n\030messages_forwardMess"
      "ages\022$.mtproto.TL_messages_forwardMessag"
      "es\032\020.mtproto.Updates\"\000\022G\n\023messages_repor"
      "tSpam\022\037.mtproto.TL_messages_reportSpam\032\r"
      ".mtproto.Bool\"\000\022O\n\027messages_hideReportSp"
      "am\022#.mtproto.TL_messages_hideReportSpam\032"
      "\r.mtproto.Bool\"\000\022Y\n\030messages_getPeerSett"
      "ings\022$.mtproto.TL_messages_getPeerSettin"
      "gs\032\025.mtproto.PeerSettings\"\000\022\?\n\017messages_"
      "report\022\033.mtproto.TL_messages_report\032\r.mt"
      "proto.Bool\"\000\022M\n\021messages_getChats\022\035.mtpr"
      "oto.TL_messages_getChats\032\027.mtproto.messa"
      "ges_Chats\"\000\022V\n\024messages_getFullChat\022 .mt"
      "proto.TL_messages_getFullChat\032\032.mtproto."
      "messages_ChatFull\"\000\022P\n\026messages_editChat"
      "Title\022\".mtproto.TL_messages_editChatTitl"
      "e\032\020.mtproto.Updates\"\000\022P\n\026messages_editCh"
      "atPhoto\022\".mtproto.TL_messages_editChatPh"
      "oto\032\020.mtproto.Updates\"\000\022L\n\024messages_addC"
      "hatUser\022 .mtproto.TL_messages_addChatUse"
      "r\032\020.mtproto.Updates\"\000\022R\n\027messages_delete"
      "ChatUser\022#.mtproto.TL_messages_deleteCha"
      "tUser\032\020.mtproto.Updates\"\000\022J\n\023messages_cr"
      "eateChat\022\037.mtproto.TL_messages_createCha"
      "t\032\020.mtproto.Updates\"\000\022V\n\024messages_getDhC"
      "onfig\022 .mtproto.TL_messages_getDhConfig\032"
      "\032.mtproto.messages_DhConfig\"\000\022^\n\032message"
      "s_requestEncryption\022&.mtproto.TL_message"
      "s_requestEncryption\032\026.mtproto.EncryptedC"
      "hat\"\000\022\\\n\031messages_acceptEncryption\022%.mtp"
      "roto.TL_messages_acceptEncryption\032\026.mtpr"
      "oto.EncryptedChat\"\000\022U\n\032messages_discardE"
      "ncryption\022&.mtproto.TL_messages_discardE"
      "ncryption\032\r.mtproto.Bool\"\000\022W\n\033messages_s"
      "etEncryptedTyping\022\'.mtproto.TL_messages_"
      "setEncryptedTyping\032\r.mtproto.Bool\"\000\022[\n\035m"
      "essages_readEncryptedHistory\022).mtproto.T"
      "L_messages_readEncryptedHistory\032\r.mtprot"
      "o.Bool\"\000\022f\n\026messages_sendEncrypted\022\".mtp"
      "roto.TL_messages_sendEncrypted\032&.mtproto"
      ".messages_SentEncryptedMessage\"\000\022n\n\032mess"
      "ages_sendEncryptedFile\022&.mtproto.TL_mess"
      "ages_sendEncryptedFile\032&.mtproto.message"
      "s_SentEncryptedMessage\"\000\022t\n\035messages_sen"
      "dEncryptedService\022).mtproto.TL_messages_"
      "sendEncryptedService\032&.mtproto.messages_"
      "SentEncryptedMessage\"\000\022T\n\026messages_recei"
      "vedQueue\022\".mtproto.TL_messages_receivedQ"
      "ueue\032\024.mtproto.Vector_long\"\000\022Y\n\034messages"
      "_reportEncryptedSpam\022(.mtproto.TL_messag"
      "es_reportEncryptedSpam\032\r.mtproto.Bool\"\000\022"
      "n\n\034messages_readMessageContents\022(.mtprot"
      "o.TL_messages_readMessageContents\032\".mtpr"
      "oto.messages_AffectedMessages\"\000\022V\n\024messa"
      "ges_getStickers\022 .mtproto.TL_messages_ge"
      "tStickers\032\032.mtproto.messages_Stickers\"\000\022"
      "_\n\027messages_getAllStickers\022#.mtproto.TL_"
      "messages_getAllStickers\032\035.mtproto.messag"
      "es_AllStickers\"\000\022]\n\032messages_getWebPageP"
      "review\022&.mtproto.TL_messages_getWebPageP"
      "review\032\025.mtproto.MessageMedia\"\000\022a\n\031messa"
      "ges_exportChatInvite\022%.mtproto.TL_messag"
      "es_exportChatInvite\032\033.mtproto.ExportedCh"
      "atInvite\"\000\022W\n\030messages_checkChatInvite\022$"
      ".mtproto.TL_messages_checkChatInvite\032\023.m"
      "tproto.ChatInvite\"\000\022V\n\031messages_importCh"
      "atInvite\022%.mtproto.TL_messages_importCha"
      "tInvite\032\020.mtproto.Updates\"\000\022\\\n\026messages_"
      "getStickerSet\022\".mtproto.TL_messages_getS"
      "tickerSet\032\034.mtproto.messages_StickerSet\""
      "\000\022q\n\032messages_installStickerSet\022&.mtprot"
      "o.TL_messages_installStickerSet\032).mtprot"
      "o.messages_StickerSetInstallResult\"\000\022Y\n\034"
      "messages_uninstallStickerSet\022(.mtproto.T"
      "L_messages_uninstallStickerSet\032\r.mtproto"
      ".Bool\"\000\022F\n\021messages_startBot\022\035.mtproto.T"
      "L_messages_startBot\032\020.mtproto.Updates\"\000\022"
      "Y\n\031messages_getMessagesViews\022%.mtproto.T"
      "L_messages_getMessagesViews\032\023.mtproto.Ve"
      "ctor_int\"\000\022V\n\031messages_toggleChatAdmins\022"
      "%.mtproto.TL_messages_toggleChatAdmins\032\020"
      ".mtproto.Updates\"\000\022M\n\026messages_editChatA"
      "dmin\022\".mtproto.TL_messages_editChatAdmin"
      "\032\r.mtproto.Bool\"\000\022L\n\024messages_migrateCha"
      "t\022 .mtproto.TL_messages_migrateChat\032\020.mt"
      "proto.Updates\"\000\022X\n\025messages_searchGlobal"
      "\022!.mtproto.TL_messages_searchGlobal\032\032.mt"
      "proto.messages_Messages\"\000\022W\n\033messages_re"
      "orderStickerSets\022\'.mtproto.TL_messages_r"
      "eorderStickerSets\032\r.mtproto.Bool\"\000\022Y\n\032me"
      "ssages_getDocumentByHash\022&.mtproto.TL_me"
      "ssages_getDocumentByHash\032\021.mtproto.Docum"
      "ent\"\000\022U\n\023messages_searchGifs\022\037.mtproto.T"
      "L_messages_searchGifs\032\033.mtproto.messages"
      "_FoundGifs\"\000\022Y\n\025messages_getSavedGifs\022!."
      "mtproto.TL_messages_getSavedGifs\032\033.mtpro"
      "to.messages_SavedGifs\"\000\022A\n\020messages_save"
      "Gif\022\034.mtproto.TL_messages_saveGif\032\r.mtpr"
      "oto.Bool\"\000\022h\n\034messages_getInlineBotResul"
      "ts\022(.mtproto.TL_messages_getInlineBotRes"
      "ults\032\034.mtproto.messages_BotResults\"\000\022Y\n\034"
      "messages_setInlineBotResults\022(.mtproto.T"
      "L_messages_setInlineBotResults\032\r.mtproto"
      ".Bool\"\000\022\\\n\034messages_sendInlineBotResult\022"
      "(.mtproto.TL_messages_sendInlineBotResul"
      "t\032\020.mtproto.Updates\"\000\022k\n\033messages_getMes"
      "sageEditData\022\'.mtproto.TL_messages_getMe"
      "ssageEditData\032!.mtproto.messages_Message"
      "EditData\"\000\022L\n\024messages_editMessage\022 .mtp"
      "roto.TL_messages_editMessage\032\020.mtproto.U"
      "pdates\"\000\022[\n\035messages_editInlineBotMessag"
      "e\022).mtproto.TL_messages_editInlineBotMes"
      "sage\032\r.mtproto.Bool\"\000\022q\n\035messages_getBot"
      "CallbackAnswer\022).mtproto.TL_messages_get"
      "BotCallbackAnswer\032#.mtproto.messages_Bot"
      "CallbackAnswer\"\000\022[\n\035messages_setBotCallb"
      "ackAnswer\022).mtproto.TL_messages_setBotCa"
      "llbackAnswer\032\r.mtproto.Bool\"\000\022_\n\027message"
      "s_getPeerDialogs\022#.mtproto.TL_messages_g"
      "etPeerDialogs\032\035.mtproto.messages_PeerDia"
      "logs\"\000\022E\n\022messages_saveDraft\022\036.mtproto.T"
      "L_messages_saveDraft\032\r.mtproto.Bool\"\000\022N\n"
      "\025messages_getAllDrafts\022!.mtproto.TL_mess"
      "ages_getAllDrafts\032\020.mtproto.Updates\"\000\022n\n"
      "\034messages_getFeaturedStickers\022(.mtproto."
      "TL_messages_getFeaturedStickers\032\".mtprot"
      "o.messages_FeaturedStickers\"\000\022[\n\035message"
      "s_readFeaturedStickers\022).mtproto.TL_mess"
      "ages_readFeaturedStickers\032\r.mtproto.Bool"
      "\"\000\022h\n\032messages_getRecentStickers\022&.mtpro"
      "to.TL_messages_getRecentStickers\032 .mtpro"
      "to.messages_RecentStickers\"\000\022U\n\032messages"
      "_saveRecentSticker\022&.mtproto.TL_messages"
      "_saveRecentSticker\032\r.mtproto.Bool\"\000\022Y\n\034m"
      "essages_clearRecentStickers\022(.mtproto.TL"
      "_messages_clearRecentStickers\032\r.mtproto."
      "Bool\"\000\022n\n\034messages_getArchivedStickers\022("
      ".mtproto.TL_messages_getArchivedStickers"
      "\032\".mtproto.messages_ArchivedStickers\"\000\022a"
      "\n\030messages_getMaskStickers\022$.mtproto.TL_"
      "messages_getMaskStickers\032\035.mtproto.messa"
      "ges_AllStickers\"\000\022m\n\034messages_getAttache"
      "dStickers\022(.mtproto.TL_messages_getAttac"
      "hedStickers\032!.mtproto.Vector_StickerSetC"
      "overed\"\000\022N\n\025messages_setGameScore\022!.mtpr"
      "oto.TL_messages_setGameScore\032\020.mtproto.U"
      "pdates\"\000\022W\n\033messages_setInlineGameScore\022"
      "\'.mtproto.TL_messages_setInlineGameScore"
      "\032\r.mtproto.Bool\"\000\022d\n\032messages_getGameHig"
      "hScores\022&.mtproto.TL_messages_getGameHig"
      "hScores\032\034.mtproto.messages_HighScores\"\000\022"
      "p\n messages_getInlineGameHighScores\022,.mt"
      "proto.TL_messages_getInlineGameHighScore"
      "s\032\034.mtproto.messages_HighScores\"\000\022Y\n\027mes"
      "sages_getCommonChats\022#.mtproto.TL_messag"
      "es_getCommonChats\032\027.mtproto.messages_Cha"
      "ts\"\000\022S\n\024messages_getAllChats\022 .mtproto.T"
      "L_messages_getAllChats\032\027.mtproto.message"
      "s_Chats\"\000\022J\n\023messages_getWebPage\022\037.mtpro"
      "to.TL_messages_getWebPage\032\020.mtproto.WebP"
      "age\"\000\022Q\n\030messages_toggleDialogPin\022$.mtpr"
      "oto.TL_messages_toggleDialogPin\032\r.mtprot"
      "o.Bool\"\000\022[\n\035messages_reorderPinnedDialog"
      "s\022).mtproto.TL_messages_reorderPinnedDia"
      "logs\032\r.mtproto.Bool\"\000\022c\n\031messages_getPin"
      "nedDialogs\022%.mtproto.TL_messages_getPinn"
      "edDialogs\032\035.mtproto.messages_PeerDialogs"
      "\"\000\022]\n\036messages_setBotShippingResults\022*.m"
      "tproto.TL_messages_setBotShippingResults"
      "\032\r.mtproto.Bool\"\000\022c\n!messages_setBotPrec"
      "heckoutResults\022-.mtproto.TL_messages_set"
      "BotPrecheckoutResults\032\r.mtproto.Bool\"\000\022Q"
      "\n\024messages_uploadMedia\022 .mtproto.TL_mess"
      "ages_uploadMedia\032\025.mtproto.MessageMedia\""
      "\000\022j\n#messages_sendScreenshotNotification"
      "\022/.mtproto.TL_messages_sendScreenshotNot"
      "ification\032\020.mtproto.Updates\"\000\022e\n\031message"
      "s_getFavedStickers\022%.mtproto.TL_messages"
      "_getFavedStickers\032\037.mtproto.messages_Fav"
      "edStickers\"\000\022I\n\024messages_faveSticker\022 .m"
      "tproto.TL_messages_faveSticker\032\r.mtproto"
      ".Bool\"\000\022b\n\032messages_getUnreadMentions\022&."
      "mtproto.TL_messages_getUnreadMentions\032\032."
      "mtproto.messages_Messages\"\000\022_\n\025messages_"
      "readMentions\022!.mtproto.TL_messages_readM"
      "entions\032!.mtproto.messages_AffectedHisto"
      "ry\"\000\022d\n\033messages_getRecentLocations\022\'.mt"
      "proto.TL_messages_getRecentLocations\032\032.m"
      "tproto.messages_Messages\"\000\022R\n\027messages_s"
      "endMultiMedia\022#.mtproto.TL_messages_send"
      "MultiMedia\032\020.mtproto.Updates\"\000\022b\n\034messag"
      "es_uploadEncryptedFile\022(.mtproto.TL_mess"
      "ages_uploadEncryptedFile\032\026.mtproto.Encry"
      "ptedFile\"\000\022j\n\032messages_searchStickerSets"
      "\022&.mtproto.TL_messages_searchStickerSets"
      "\032\".mtproto.messages_FoundStickerSets\"\000\022^"
      "\n\027messages_getSplitRanges\022#.mtproto.TL_m"
      "essages_getSplitRanges\032\034.mtproto.Vector_"
      "MessageRange\"\000\022S\n\031messages_markDialogUnr"
      "ead\022%.mtproto.TL_messages_markDialogUnre"
      "ad\032\r.mtproto.Bool\"\000\022h\n\035messages_getDialo"
      "gUnreadMarks\022).mtproto.TL_messages_getDi"
      "alogUnreadMarks\032\032.mtproto.Vector_DialogP"
      "eer\"\000\022O\n\027messages_clearAllDrafts\022#.mtpro"
      "to.TL_messages_clearAllDrafts\032\r.mtproto."
      "Bool\"\0002\241\003\n\nRPCUpdates\022|\n#updates_getChan"
      "nelDifferenceLayer46\022/.mtproto.TL_update"
      "s_getChannelDifferenceLayer46\032\".mtproto."
      "updates_ChannelDifference\"\000\022J\n\020updates_g"
      "etState\022\034.mtproto.TL_updates_getState\032\026."
      "mtproto.updates_State\"\000\022Y\n\025updates_getDi"
      "fference\022!.mtproto.TL_updates_getDiffere"
      "nce\032\033.mtproto.updates_Difference\"\000\022n\n\034up"
      "dates_getChannelDifference\022(.mtproto.TL_"
      "updates_getChannelDifference\032\".mtproto.u"
      "pdates_ChannelDifference\"\0002\360\001\n\010RPCUsers\022"
      "D\n\016users_getUsers\022\032.mtproto.TL_users_get"
      "Users\032\024.mtproto.Vector_User\"\000\022G\n\021users_g"
      "etFullUser\022\035.mtproto.TL_users_getFullUse"
      "r\032\021.mtproto.UserFull\"\000\022U\n\032users_setSecur"
      "eValueErrors\022&.mtproto.TL_users_setSecur"
      "eValueErrors\032\r.mtproto.Bool\"\000B(\n\033com.neb"
      "ulaim.engine.mtprotoB\007MTProtoH\002b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 50559);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "schema.tl.sync_service.proto", &protobuf_RegisterTypes);
  ::mtproto::protobuf_schema_2etl_2ecore_5ftypes_2eproto::AddDescriptors();
  ::mtproto::protobuf_schema_2etl_2esync_2eproto::AddDescriptors();
}
} // anonymous namespace

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_schema_2etl_2esync_5fservice_2eproto


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TL_langpack_getLanguagesLayer70::TL_langpack_getLanguagesLayer70()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.TL_langpack_getLanguagesLayer70)
}
TL_langpack_getLanguagesLayer70::TL_langpack_getLanguagesLayer70(const TL_langpack_getLanguagesLayer70& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:mtproto.TL_langpack_getLanguagesLayer70)
}

void TL_langpack_getLanguagesLayer70::SharedCtor() {
  _cached_size_ = 0;
}

TL_langpack_getLanguagesLayer70::~TL_langpack_getLanguagesLayer70() {
  // @@protoc_insertion_point(destructor:mtproto.TL_langpack_getLanguagesLayer70)
  SharedDtor();
}

void TL_langpack_getLanguagesLayer70::SharedDtor() {
}

void TL_langpack_getLanguagesLayer70::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TL_langpack_getLanguagesLayer70::descriptor() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TL_langpack_getLanguagesLayer70& TL_langpack_getLanguagesLayer70::default_instance() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  return *internal_default_instance();
}

TL_langpack_getLanguagesLayer70* TL_langpack_getLanguagesLayer70::New(::google::protobuf::Arena* arena) const {
  TL_langpack_getLanguagesLayer70* n = new TL_langpack_getLanguagesLayer70;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TL_langpack_getLanguagesLayer70::Swap(TL_langpack_getLanguagesLayer70* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TL_langpack_getLanguagesLayer70::InternalSwap(TL_langpack_getLanguagesLayer70* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata TL_langpack_getLanguagesLayer70::GetMetadata() const {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TL_langpack_getLanguagesLayer70

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TL_help_getScheme::kVersionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TL_help_getScheme::TL_help_getScheme()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.TL_help_getScheme)
}
TL_help_getScheme::TL_help_getScheme(const TL_help_getScheme& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  version_ = from.version_;
  // @@protoc_insertion_point(copy_constructor:mtproto.TL_help_getScheme)
}

void TL_help_getScheme::SharedCtor() {
  version_ = 0;
  _cached_size_ = 0;
}

TL_help_getScheme::~TL_help_getScheme() {
  // @@protoc_insertion_point(destructor:mtproto.TL_help_getScheme)
  SharedDtor();
}

void TL_help_getScheme::SharedDtor() {
}

void TL_help_getScheme::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TL_help_getScheme::descriptor() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TL_help_getScheme& TL_help_getScheme::default_instance() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  return *internal_default_instance();
}

TL_help_getScheme* TL_help_getScheme::New(::google::protobuf::Arena* arena) const {
  TL_help_getScheme* n = new TL_help_getScheme;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TL_help_getScheme::Swap(TL_help_getScheme* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TL_help_getScheme::InternalSwap(TL_help_getScheme* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata TL_help_getScheme::GetMetadata() const {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TL_help_getScheme

// int32 version = 1;
void TL_help_getScheme::clear_version() {
  version_ = 0;
}
::google::protobuf::int32 TL_help_getScheme::version() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_help_getScheme.version)
  return version_;
}
void TL_help_getScheme::set_version(::google::protobuf::int32 value) {
  
  version_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_help_getScheme.version)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TL_messages_readHistoryLayer2::kPeerFieldNumber;
const int TL_messages_readHistoryLayer2::kMaxIdFieldNumber;
const int TL_messages_readHistoryLayer2::kOffsetFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TL_messages_readHistoryLayer2::TL_messages_readHistoryLayer2()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.TL_messages_readHistoryLayer2)
}
TL_messages_readHistoryLayer2::TL_messages_readHistoryLayer2(const TL_messages_readHistoryLayer2& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_peer()) {
    peer_ = new ::mtproto::InputPeer(*from.peer_);
  } else {
    peer_ = NULL;
  }
  ::memcpy(&max_id_, &from.max_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&offset_) -
    reinterpret_cast<char*>(&max_id_)) + sizeof(offset_));
  // @@protoc_insertion_point(copy_constructor:mtproto.TL_messages_readHistoryLayer2)
}

void TL_messages_readHistoryLayer2::SharedCtor() {
  ::memset(&peer_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&offset_) -
      reinterpret_cast<char*>(&peer_)) + sizeof(offset_));
  _cached_size_ = 0;
}

TL_messages_readHistoryLayer2::~TL_messages_readHistoryLayer2() {
  // @@protoc_insertion_point(destructor:mtproto.TL_messages_readHistoryLayer2)
  SharedDtor();
}

void TL_messages_readHistoryLayer2::SharedDtor() {
  if (this != internal_default_instance()) delete peer_;
}

void TL_messages_readHistoryLayer2::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TL_messages_readHistoryLayer2::descriptor() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TL_messages_readHistoryLayer2& TL_messages_readHistoryLayer2::default_instance() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  return *internal_default_instance();
}

TL_messages_readHistoryLayer2* TL_messages_readHistoryLayer2::New(::google::protobuf::Arena* arena) const {
  TL_messages_readHistoryLayer2* n = new TL_messages_readHistoryLayer2;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TL_messages_readHistoryLayer2::Swap(TL_messages_readHistoryLayer2* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TL_messages_readHistoryLayer2::InternalSwap(TL_messages_readHistoryLayer2* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata TL_messages_readHistoryLayer2::GetMetadata() const {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TL_messages_readHistoryLayer2

// .mtproto.InputPeer peer = 1;
bool TL_messages_readHistoryLayer2::has_peer() const {
  return this != internal_default_instance() && peer_ != NULL;
}
void TL_messages_readHistoryLayer2::clear_peer() {
  if (GetArenaNoVirtual() == NULL && peer_ != NULL) delete peer_;
  peer_ = NULL;
}
const ::mtproto::InputPeer& TL_messages_readHistoryLayer2::peer() const {
  const ::mtproto::InputPeer* p = peer_;
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_readHistoryLayer2.peer)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::InputPeer*>(
      &::mtproto::_InputPeer_default_instance_);
}
::mtproto::InputPeer* TL_messages_readHistoryLayer2::mutable_peer() {
  
  if (peer_ == NULL) {
    peer_ = new ::mtproto::InputPeer;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_messages_readHistoryLayer2.peer)
  return peer_;
}
::mtproto::InputPeer* TL_messages_readHistoryLayer2::release_peer() {
  // @@protoc_insertion_point(field_release:mtproto.TL_messages_readHistoryLayer2.peer)
  
  ::mtproto::InputPeer* temp = peer_;
  peer_ = NULL;
  return temp;
}
void TL_messages_readHistoryLayer2::set_allocated_peer(::mtproto::InputPeer* peer) {
  delete peer_;
  peer_ = peer;
  if (peer) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_messages_readHistoryLayer2.peer)
}

// int32 max_id = 2;
void TL_messages_readHistoryLayer2::clear_max_id() {
  max_id_ = 0;
}
::google::protobuf::int32 TL_messages_readHistoryLayer2::max_id() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_readHistoryLayer2.max_id)
  return max_id_;
}
void TL_messages_readHistoryLayer2::set_max_id(::google::protobuf::int32 value) {
  
  max_id_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_readHistoryLayer2.max_id)
}

// int32 offset = 3;
void TL_messages_readHistoryLayer2::clear_offset() {
  offset_ = 0;
}
::google::protobuf::int32 TL_messages_readHistoryLayer2::offset() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_readHistoryLayer2.offset)
  return offset_;
}
void TL_messages_readHistoryLayer2::set_offset(::google::protobuf::int32 value) {
  
  offset_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_readHistoryLayer2.offset)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TL_help_getInviteTextLayer46::kLangCodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TL_help_getInviteTextLayer46::TL_help_getInviteTextLayer46()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.TL_help_getInviteTextLayer46)
}
TL_help_getInviteTextLayer46::TL_help_getInviteTextLayer46(const TL_help_getInviteTextLayer46& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  lang_code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.lang_code().size() > 0) {
    lang_code_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.lang_code_);
  }
  // @@protoc_insertion_point(copy_constructor:mtproto.TL_help_getInviteTextLayer46)
}

void TL_help_getInviteTextLayer46::SharedCtor() {
  lang_code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

TL_help_getInviteTextLayer46::~TL_help_getInviteTextLayer46() {
  // @@protoc_insertion_point(destructor:mtproto.TL_help_getInviteTextLayer46)
  SharedDtor();
}

void TL_help_getInviteTextLayer46::SharedDtor() {
  lang_code_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void TL_help_getInviteTextLayer46::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TL_help_getInviteTextLayer46::descriptor() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TL_help_getInviteTextLayer46& TL_help_getInviteTextLayer46::default_instance() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  return *internal_default_instance();
}

TL_help_getInviteTextLayer46* TL_help_getInviteTextLayer46::New(::google::protobuf::Arena* arena) const {
  TL_help_getInviteTextLayer46* n = new TL_help_getInviteTextLayer46;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TL_help_getInviteTextLayer46::Swap(TL_help_getInviteTextLayer46* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TL_help_getInviteTextLayer46::InternalSwap(TL_help_getInviteTextLayer46* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata TL_help_getInviteTextLayer46::GetMetadata() const {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TL_help_getInviteTextLayer46

// string lang_code = 1;
void TL_help_getInviteTextLayer46::clear_lang_code() {
  lang_code_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& TL_help_getInviteTextLayer46::lang_code() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_help_getInviteTextLayer46.lang_code)
  return lang_code_.GetNoArena();
}
void TL_help_getInviteTextLayer46::set_lang_code(const ::std::string& value) {
  
  lang_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtproto.TL_help_getInviteTextLayer46.lang_code)
}
#if LANG_CXX11
void TL_help_getInviteTextLayer46::set_lang_code(::std::string&& value) {
  
  lang_code_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mtproto.TL_help_getInviteTextLayer46.lang_code)
}
#endif
void TL_help_getInviteTextLayer46::set_lang_code(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  lang_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtproto.TL_help_getInviteTextLayer46.lang_code)
}
void TL_help_getInviteTextLayer46::set_lang_code(const char* value, size_t size) {
  
  lang_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtproto.TL_help_getInviteTextLayer46.lang_code)
}
::std::string* TL_help_getInviteTextLayer46::mutable_lang_code() {
  
  // @@protoc_insertion_point(field_mutable:mtproto.TL_help_getInviteTextLayer46.lang_code)
  return lang_code_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* TL_help_getInviteTextLayer46::release_lang_code() {
  // @@protoc_insertion_point(field_release:mtproto.TL_help_getInviteTextLayer46.lang_code)
  
  return lang_code_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TL_help_getInviteTextLayer46::set_allocated_lang_code(::std::string* lang_code) {
  if (lang_code != NULL) {
    
  } else {
    
  }
  lang_code_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), lang_code);
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_help_getInviteTextLayer46.lang_code)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TL_help_getAppUpdateLayer46::kDeviceModelFieldNumber;
const int TL_help_getAppUpdateLayer46::kSystemVersionFieldNumber;
const int TL_help_getAppUpdateLayer46::kAppVersionFieldNumber;
const int TL_help_getAppUpdateLayer46::kLangCodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TL_help_getAppUpdateLayer46::TL_help_getAppUpdateLayer46()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.TL_help_getAppUpdateLayer46)
}
TL_help_getAppUpdateLayer46::TL_help_getAppUpdateLayer46(const TL_help_getAppUpdateLayer46& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  device_model_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.device_model().size() > 0) {
    device_model_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.device_model_);
  }
  system_version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.system_version().size() > 0) {
    system_version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.system_version_);
  }
  app_version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.app_version().size() > 0) {
    app_version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.app_version_);
  }
  lang_code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.lang_code().size() > 0) {
    lang_code_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.lang_code_);
  }
  // @@protoc_insertion_point(copy_constructor:mtproto.TL_help_getAppUpdateLayer46)
}

void TL_help_getAppUpdateLayer46::SharedCtor() {
  device_model_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  system_version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  app_version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  lang_code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

TL_help_getAppUpdateLayer46::~TL_help_getAppUpdateLayer46() {
  // @@protoc_insertion_point(destructor:mtproto.TL_help_getAppUpdateLayer46)
  SharedDtor();
}

void TL_help_getAppUpdateLayer46::SharedDtor() {
  device_model_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  system_version_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  app_version_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  lang_code_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void TL_help_getAppUpdateLayer46::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TL_help_getAppUpdateLayer46::descriptor() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TL_help_getAppUpdateLayer46& TL_help_getAppUpdateLayer46::default_instance() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  return *internal_default_instance();
}

TL_help_getAppUpdateLayer46* TL_help_getAppUpdateLayer46::New(::google::protobuf::Arena* arena) const {
  TL_help_getAppUpdateLayer46* n = new TL_help_getAppUpdateLayer46;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TL_help_getAppUpdateLayer46::Swap(TL_help_getAppUpdateLayer46* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TL_help_getAppUpdateLayer46::InternalSwap(TL_help_getAppUpdateLayer46* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata TL_help_getAppUpdateLayer46::GetMetadata() const {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TL_help_getAppUpdateLayer46

// string device_model = 1;
void TL_help_getAppUpdateLayer46::clear_device_model() {
  device_model_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& TL_help_getAppUpdateLayer46::device_model() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_help_getAppUpdateLayer46.device_model)
  return device_model_.GetNoArena();
}
void TL_help_getAppUpdateLayer46::set_device_model(const ::std::string& value) {
  
  device_model_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtproto.TL_help_getAppUpdateLayer46.device_model)
}
#if LANG_CXX11
void TL_help_getAppUpdateLayer46::set_device_model(::std::string&& value) {
  
  device_model_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mtproto.TL_help_getAppUpdateLayer46.device_model)
}
#endif
void TL_help_getAppUpdateLayer46::set_device_model(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  device_model_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtproto.TL_help_getAppUpdateLayer46.device_model)
}
void TL_help_getAppUpdateLayer46::set_device_model(const char* value, size_t size) {
  
  device_model_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtproto.TL_help_getAppUpdateLayer46.device_model)
}
::std::string* TL_help_getAppUpdateLayer46::mutable_device_model() {
  
  // @@protoc_insertion_point(field_mutable:mtproto.TL_help_getAppUpdateLayer46.device_model)
  return device_model_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* TL_help_getAppUpdateLayer46::release_device_model() {
  // @@protoc_insertion_point(field_release:mtproto.TL_help_getAppUpdateLayer46.device_model)
  
  return device_model_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TL_help_getAppUpdateLayer46::set_allocated_device_model(::std::string* device_model) {
  if (device_model != NULL) {
    
  } else {
    
  }
  device_model_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), device_model);
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_help_getAppUpdateLayer46.device_model)
}

// string system_version = 2;
void TL_help_getAppUpdateLayer46::clear_system_version() {
  system_version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& TL_help_getAppUpdateLayer46::system_version() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_help_getAppUpdateLayer46.system_version)
  return system_version_.GetNoArena();
}
void TL_help_getAppUpdateLayer46::set_system_version(const ::std::string& value) {
  
  system_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtproto.TL_help_getAppUpdateLayer46.system_version)
}
#if LANG_CXX11
void TL_help_getAppUpdateLayer46::set_system_version(::std::string&& value) {
  
  system_version_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mtproto.TL_help_getAppUpdateLayer46.system_version)
}
#endif
void TL_help_getAppUpdateLayer46::set_system_version(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  system_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtproto.TL_help_getAppUpdateLayer46.system_version)
}
void TL_help_getAppUpdateLayer46::set_system_version(const char* value, size_t size) {
  
  system_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtproto.TL_help_getAppUpdateLayer46.system_version)
}
::std::string* TL_help_getAppUpdateLayer46::mutable_system_version() {
  
  // @@protoc_insertion_point(field_mutable:mtproto.TL_help_getAppUpdateLayer46.system_version)
  return system_version_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* TL_help_getAppUpdateLayer46::release_system_version() {
  // @@protoc_insertion_point(field_release:mtproto.TL_help_getAppUpdateLayer46.system_version)
  
  return system_version_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TL_help_getAppUpdateLayer46::set_allocated_system_version(::std::string* system_version) {
  if (system_version != NULL) {
    
  } else {
    
  }
  system_version_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), system_version);
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_help_getAppUpdateLayer46.system_version)
}

// string app_version = 3;
void TL_help_getAppUpdateLayer46::clear_app_version() {
  app_version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& TL_help_getAppUpdateLayer46::app_version() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_help_getAppUpdateLayer46.app_version)
  return app_version_.GetNoArena();
}
void TL_help_getAppUpdateLayer46::set_app_version(const ::std::string& value) {
  
  app_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtproto.TL_help_getAppUpdateLayer46.app_version)
}
#if LANG_CXX11
void TL_help_getAppUpdateLayer46::set_app_version(::std::string&& value) {
  
  app_version_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mtproto.TL_help_getAppUpdateLayer46.app_version)
}
#endif
void TL_help_getAppUpdateLayer46::set_app_version(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  app_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtproto.TL_help_getAppUpdateLayer46.app_version)
}
void TL_help_getAppUpdateLayer46::set_app_version(const char* value, size_t size) {
  
  app_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtproto.TL_help_getAppUpdateLayer46.app_version)
}
::std::string* TL_help_getAppUpdateLayer46::mutable_app_version() {
  
  // @@protoc_insertion_point(field_mutable:mtproto.TL_help_getAppUpdateLayer46.app_version)
  return app_version_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* TL_help_getAppUpdateLayer46::release_app_version() {
  // @@protoc_insertion_point(field_release:mtproto.TL_help_getAppUpdateLayer46.app_version)
  
  return app_version_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TL_help_getAppUpdateLayer46::set_allocated_app_version(::std::string* app_version) {
  if (app_version != NULL) {
    
  } else {
    
  }
  app_version_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), app_version);
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_help_getAppUpdateLayer46.app_version)
}

// string lang_code = 4;
void TL_help_getAppUpdateLayer46::clear_lang_code() {
  lang_code_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& TL_help_getAppUpdateLayer46::lang_code() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_help_getAppUpdateLayer46.lang_code)
  return lang_code_.GetNoArena();
}
void TL_help_getAppUpdateLayer46::set_lang_code(const ::std::string& value) {
  
  lang_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtproto.TL_help_getAppUpdateLayer46.lang_code)
}
#if LANG_CXX11
void TL_help_getAppUpdateLayer46::set_lang_code(::std::string&& value) {
  
  lang_code_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mtproto.TL_help_getAppUpdateLayer46.lang_code)
}
#endif
void TL_help_getAppUpdateLayer46::set_lang_code(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  lang_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtproto.TL_help_getAppUpdateLayer46.lang_code)
}
void TL_help_getAppUpdateLayer46::set_lang_code(const char* value, size_t size) {
  
  lang_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtproto.TL_help_getAppUpdateLayer46.lang_code)
}
::std::string* TL_help_getAppUpdateLayer46::mutable_lang_code() {
  
  // @@protoc_insertion_point(field_mutable:mtproto.TL_help_getAppUpdateLayer46.lang_code)
  return lang_code_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* TL_help_getAppUpdateLayer46::release_lang_code() {
  // @@protoc_insertion_point(field_release:mtproto.TL_help_getAppUpdateLayer46.lang_code)
  
  return lang_code_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TL_help_getAppUpdateLayer46::set_allocated_lang_code(::std::string* lang_code) {
  if (lang_code != NULL) {
    
  } else {
    
  }
  lang_code_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), lang_code);
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_help_getAppUpdateLayer46.lang_code)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TL_updates_getChannelDifferenceLayer46::kChannelFieldNumber;
const int TL_updates_getChannelDifferenceLayer46::kFilterFieldNumber;
const int TL_updates_getChannelDifferenceLayer46::kPtsFieldNumber;
const int TL_updates_getChannelDifferenceLayer46::kLimitFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TL_updates_getChannelDifferenceLayer46::TL_updates_getChannelDifferenceLayer46()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.TL_updates_getChannelDifferenceLayer46)
}
TL_updates_getChannelDifferenceLayer46::TL_updates_getChannelDifferenceLayer46(const TL_updates_getChannelDifferenceLayer46& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_channel()) {
    channel_ = new ::mtproto::InputChannel(*from.channel_);
  } else {
    channel_ = NULL;
  }
  if (from.has_filter()) {
    filter_ = new ::mtproto::ChannelMessagesFilter(*from.filter_);
  } else {
    filter_ = NULL;
  }
  ::memcpy(&pts_, &from.pts_,
    static_cast<size_t>(reinterpret_cast<char*>(&limit_) -
    reinterpret_cast<char*>(&pts_)) + sizeof(limit_));
  // @@protoc_insertion_point(copy_constructor:mtproto.TL_updates_getChannelDifferenceLayer46)
}

void TL_updates_getChannelDifferenceLayer46::SharedCtor() {
  ::memset(&channel_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&limit_) -
      reinterpret_cast<char*>(&channel_)) + sizeof(limit_));
  _cached_size_ = 0;
}

TL_updates_getChannelDifferenceLayer46::~TL_updates_getChannelDifferenceLayer46() {
  // @@protoc_insertion_point(destructor:mtproto.TL_updates_getChannelDifferenceLayer46)
  SharedDtor();
}

void TL_updates_getChannelDifferenceLayer46::SharedDtor() {
  if (this != internal_default_instance()) delete channel_;
  if (this != internal_default_instance()) delete filter_;
}

void TL_updates_getChannelDifferenceLayer46::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TL_updates_getChannelDifferenceLayer46::descriptor() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TL_updates_getChannelDifferenceLayer46& TL_updates_getChannelDifferenceLayer46::default_instance() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  return *internal_default_instance();
}

TL_updates_getChannelDifferenceLayer46* TL_updates_getChannelDifferenceLayer46::New(::google::protobuf::Arena* arena) const {
  TL_updates_getChannelDifferenceLayer46* n = new TL_updates_getChannelDifferenceLayer46;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TL_updates_getChannelDifferenceLayer46::Swap(TL_updates_getChannelDifferenceLayer46* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TL_updates_getChannelDifferenceLayer46::InternalSwap(TL_updates_getChannelDifferenceLayer46* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata TL_updates_getChannelDifferenceLayer46::GetMetadata() const {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TL_updates_getChannelDifferenceLayer46

// .mtproto.InputChannel channel = 1;
bool TL_updates_getChannelDifferenceLayer46::has_channel() const {
  return this != internal_default_instance() && channel_ != NULL;
}
void TL_updates_getChannelDifferenceLayer46::clear_channel() {
  if (GetArenaNoVirtual() == NULL && channel_ != NULL) delete channel_;
  channel_ = NULL;
}
const ::mtproto::InputChannel& TL_updates_getChannelDifferenceLayer46::channel() const {
  const ::mtproto::InputChannel* p = channel_;
  // @@protoc_insertion_point(field_get:mtproto.TL_updates_getChannelDifferenceLayer46.channel)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::InputChannel*>(
      &::mtproto::_InputChannel_default_instance_);
}
::mtproto::InputChannel* TL_updates_getChannelDifferenceLayer46::mutable_channel() {
  
  if (channel_ == NULL) {
    channel_ = new ::mtproto::InputChannel;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_updates_getChannelDifferenceLayer46.channel)
  return channel_;
}
::mtproto::InputChannel* TL_updates_getChannelDifferenceLayer46::release_channel() {
  // @@protoc_insertion_point(field_release:mtproto.TL_updates_getChannelDifferenceLayer46.channel)
  
  ::mtproto::InputChannel* temp = channel_;
  channel_ = NULL;
  return temp;
}
void TL_updates_getChannelDifferenceLayer46::set_allocated_channel(::mtproto::InputChannel* channel) {
  delete channel_;
  channel_ = channel;
  if (channel) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_updates_getChannelDifferenceLayer46.channel)
}

// .mtproto.ChannelMessagesFilter filter = 2;
bool TL_updates_getChannelDifferenceLayer46::has_filter() const {
  return this != internal_default_instance() && filter_ != NULL;
}
void TL_updates_getChannelDifferenceLayer46::clear_filter() {
  if (GetArenaNoVirtual() == NULL && filter_ != NULL) delete filter_;
  filter_ = NULL;
}
const ::mtproto::ChannelMessagesFilter& TL_updates_getChannelDifferenceLayer46::filter() const {
  const ::mtproto::ChannelMessagesFilter* p = filter_;
  // @@protoc_insertion_point(field_get:mtproto.TL_updates_getChannelDifferenceLayer46.filter)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::ChannelMessagesFilter*>(
      &::mtproto::_ChannelMessagesFilter_default_instance_);
}
::mtproto::ChannelMessagesFilter* TL_updates_getChannelDifferenceLayer46::mutable_filter() {
  
  if (filter_ == NULL) {
    filter_ = new ::mtproto::ChannelMessagesFilter;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_updates_getChannelDifferenceLayer46.filter)
  return filter_;
}
::mtproto::ChannelMessagesFilter* TL_updates_getChannelDifferenceLayer46::release_filter() {
  // @@protoc_insertion_point(field_release:mtproto.TL_updates_getChannelDifferenceLayer46.filter)
  
  ::mtproto::ChannelMessagesFilter* temp = filter_;
  filter_ = NULL;
  return temp;
}
void TL_updates_getChannelDifferenceLayer46::set_allocated_filter(::mtproto::ChannelMessagesFilter* filter) {
  delete filter_;
  filter_ = filter;
  if (filter) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_updates_getChannelDifferenceLayer46.filter)
}

// int32 pts = 3;
void TL_updates_getChannelDifferenceLayer46::clear_pts() {
  pts_ = 0;
}
::google::protobuf::int32 TL_updates_getChannelDifferenceLayer46::pts() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_updates_getChannelDifferenceLayer46.pts)
  return pts_;
}
void TL_updates_getChannelDifferenceLayer46::set_pts(::google::protobuf::int32 value) {
  
  pts_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_updates_getChannelDifferenceLayer46.pts)
}

// int32 limit = 4;
void TL_updates_getChannelDifferenceLayer46::clear_limit() {
  limit_ = 0;
}
::google::protobuf::int32 TL_updates_getChannelDifferenceLayer46::limit() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_updates_getChannelDifferenceLayer46.limit)
  return limit_;
}
void TL_updates_getChannelDifferenceLayer46::set_limit(::google::protobuf::int32 value) {
  
  limit_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_updates_getChannelDifferenceLayer46.limit)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TL_auth_sendCodeLayer51::kAllowFlashcallFieldNumber;
const int TL_auth_sendCodeLayer51::kPhoneNumberFieldNumber;
const int TL_auth_sendCodeLayer51::kCurrentNumberFieldNumber;
const int TL_auth_sendCodeLayer51::kApiIdFieldNumber;
const int TL_auth_sendCodeLayer51::kApiHashFieldNumber;
const int TL_auth_sendCodeLayer51::kLangCodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TL_auth_sendCodeLayer51::TL_auth_sendCodeLayer51()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.TL_auth_sendCodeLayer51)
}
TL_auth_sendCodeLayer51::TL_auth_sendCodeLayer51(const TL_auth_sendCodeLayer51& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  phone_number_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.phone_number().size() > 0) {
    phone_number_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.phone_number_);
  }
  api_hash_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.api_hash().size() > 0) {
    api_hash_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.api_hash_);
  }
  lang_code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.lang_code().size() > 0) {
    lang_code_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.lang_code_);
  }
  if (from.has_current_number()) {
    current_number_ = new ::mtproto::Bool(*from.current_number_);
  } else {
    current_number_ = NULL;
  }
  ::memcpy(&allow_flashcall_, &from.allow_flashcall_,
    static_cast<size_t>(reinterpret_cast<char*>(&api_id_) -
    reinterpret_cast<char*>(&allow_flashcall_)) + sizeof(api_id_));
  // @@protoc_insertion_point(copy_constructor:mtproto.TL_auth_sendCodeLayer51)
}

void TL_auth_sendCodeLayer51::SharedCtor() {
  phone_number_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  api_hash_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  lang_code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&current_number_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&api_id_) -
      reinterpret_cast<char*>(&current_number_)) + sizeof(api_id_));
  _cached_size_ = 0;
}

TL_auth_sendCodeLayer51::~TL_auth_sendCodeLayer51() {
  // @@protoc_insertion_point(destructor:mtproto.TL_auth_sendCodeLayer51)
  SharedDtor();
}

void TL_auth_sendCodeLayer51::SharedDtor() {
  phone_number_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  api_hash_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  lang_code_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete current_number_;
}

void TL_auth_sendCodeLayer51::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TL_auth_sendCodeLayer51::descriptor() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TL_auth_sendCodeLayer51& TL_auth_sendCodeLayer51::default_instance() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  return *internal_default_instance();
}

TL_auth_sendCodeLayer51* TL_auth_sendCodeLayer51::New(::google::protobuf::Arena* arena) const {
  TL_auth_sendCodeLayer51* n = new TL_auth_sendCodeLayer51;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TL_auth_sendCodeLayer51::Swap(TL_auth_sendCodeLayer51* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TL_auth_sendCodeLayer51::InternalSwap(TL_auth_sendCodeLayer51* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata TL_auth_sendCodeLayer51::GetMetadata() const {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TL_auth_sendCodeLayer51

// bool allow_flashcall = 2;
void TL_auth_sendCodeLayer51::clear_allow_flashcall() {
  allow_flashcall_ = false;
}
bool TL_auth_sendCodeLayer51::allow_flashcall() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_auth_sendCodeLayer51.allow_flashcall)
  return allow_flashcall_;
}
void TL_auth_sendCodeLayer51::set_allow_flashcall(bool value) {
  
  allow_flashcall_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_auth_sendCodeLayer51.allow_flashcall)
}

// string phone_number = 3;
void TL_auth_sendCodeLayer51::clear_phone_number() {
  phone_number_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& TL_auth_sendCodeLayer51::phone_number() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_auth_sendCodeLayer51.phone_number)
  return phone_number_.GetNoArena();
}
void TL_auth_sendCodeLayer51::set_phone_number(const ::std::string& value) {
  
  phone_number_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtproto.TL_auth_sendCodeLayer51.phone_number)
}
#if LANG_CXX11
void TL_auth_sendCodeLayer51::set_phone_number(::std::string&& value) {
  
  phone_number_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mtproto.TL_auth_sendCodeLayer51.phone_number)
}
#endif
void TL_auth_sendCodeLayer51::set_phone_number(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  phone_number_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtproto.TL_auth_sendCodeLayer51.phone_number)
}
void TL_auth_sendCodeLayer51::set_phone_number(const char* value, size_t size) {
  
  phone_number_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtproto.TL_auth_sendCodeLayer51.phone_number)
}
::std::string* TL_auth_sendCodeLayer51::mutable_phone_number() {
  
  // @@protoc_insertion_point(field_mutable:mtproto.TL_auth_sendCodeLayer51.phone_number)
  return phone_number_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* TL_auth_sendCodeLayer51::release_phone_number() {
  // @@protoc_insertion_point(field_release:mtproto.TL_auth_sendCodeLayer51.phone_number)
  
  return phone_number_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TL_auth_sendCodeLayer51::set_allocated_phone_number(::std::string* phone_number) {
  if (phone_number != NULL) {
    
  } else {
    
  }
  phone_number_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), phone_number);
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_auth_sendCodeLayer51.phone_number)
}

// .mtproto.Bool current_number = 4;
bool TL_auth_sendCodeLayer51::has_current_number() const {
  return this != internal_default_instance() && current_number_ != NULL;
}
void TL_auth_sendCodeLayer51::clear_current_number() {
  if (GetArenaNoVirtual() == NULL && current_number_ != NULL) delete current_number_;
  current_number_ = NULL;
}
const ::mtproto::Bool& TL_auth_sendCodeLayer51::current_number() const {
  const ::mtproto::Bool* p = current_number_;
  // @@protoc_insertion_point(field_get:mtproto.TL_auth_sendCodeLayer51.current_number)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::Bool*>(
      &::mtproto::_Bool_default_instance_);
}
::mtproto::Bool* TL_auth_sendCodeLayer51::mutable_current_number() {
  
  if (current_number_ == NULL) {
    current_number_ = new ::mtproto::Bool;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_auth_sendCodeLayer51.current_number)
  return current_number_;
}
::mtproto::Bool* TL_auth_sendCodeLayer51::release_current_number() {
  // @@protoc_insertion_point(field_release:mtproto.TL_auth_sendCodeLayer51.current_number)
  
  ::mtproto::Bool* temp = current_number_;
  current_number_ = NULL;
  return temp;
}
void TL_auth_sendCodeLayer51::set_allocated_current_number(::mtproto::Bool* current_number) {
  delete current_number_;
  current_number_ = current_number;
  if (current_number) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_auth_sendCodeLayer51.current_number)
}

// int32 api_id = 5;
void TL_auth_sendCodeLayer51::clear_api_id() {
  api_id_ = 0;
}
::google::protobuf::int32 TL_auth_sendCodeLayer51::api_id() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_auth_sendCodeLayer51.api_id)
  return api_id_;
}
void TL_auth_sendCodeLayer51::set_api_id(::google::protobuf::int32 value) {
  
  api_id_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_auth_sendCodeLayer51.api_id)
}

// string api_hash = 6;
void TL_auth_sendCodeLayer51::clear_api_hash() {
  api_hash_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& TL_auth_sendCodeLayer51::api_hash() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_auth_sendCodeLayer51.api_hash)
  return api_hash_.GetNoArena();
}
void TL_auth_sendCodeLayer51::set_api_hash(const ::std::string& value) {
  
  api_hash_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtproto.TL_auth_sendCodeLayer51.api_hash)
}
#if LANG_CXX11
void TL_auth_sendCodeLayer51::set_api_hash(::std::string&& value) {
  
  api_hash_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mtproto.TL_auth_sendCodeLayer51.api_hash)
}
#endif
void TL_auth_sendCodeLayer51::set_api_hash(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  api_hash_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtproto.TL_auth_sendCodeLayer51.api_hash)
}
void TL_auth_sendCodeLayer51::set_api_hash(const char* value, size_t size) {
  
  api_hash_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtproto.TL_auth_sendCodeLayer51.api_hash)
}
::std::string* TL_auth_sendCodeLayer51::mutable_api_hash() {
  
  // @@protoc_insertion_point(field_mutable:mtproto.TL_auth_sendCodeLayer51.api_hash)
  return api_hash_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* TL_auth_sendCodeLayer51::release_api_hash() {
  // @@protoc_insertion_point(field_release:mtproto.TL_auth_sendCodeLayer51.api_hash)
  
  return api_hash_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TL_auth_sendCodeLayer51::set_allocated_api_hash(::std::string* api_hash) {
  if (api_hash != NULL) {
    
  } else {
    
  }
  api_hash_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), api_hash);
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_auth_sendCodeLayer51.api_hash)
}

// string lang_code = 7;
void TL_auth_sendCodeLayer51::clear_lang_code() {
  lang_code_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& TL_auth_sendCodeLayer51::lang_code() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_auth_sendCodeLayer51.lang_code)
  return lang_code_.GetNoArena();
}
void TL_auth_sendCodeLayer51::set_lang_code(const ::std::string& value) {
  
  lang_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtproto.TL_auth_sendCodeLayer51.lang_code)
}
#if LANG_CXX11
void TL_auth_sendCodeLayer51::set_lang_code(::std::string&& value) {
  
  lang_code_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mtproto.TL_auth_sendCodeLayer51.lang_code)
}
#endif
void TL_auth_sendCodeLayer51::set_lang_code(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  lang_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtproto.TL_auth_sendCodeLayer51.lang_code)
}
void TL_auth_sendCodeLayer51::set_lang_code(const char* value, size_t size) {
  
  lang_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtproto.TL_auth_sendCodeLayer51.lang_code)
}
::std::string* TL_auth_sendCodeLayer51::mutable_lang_code() {
  
  // @@protoc_insertion_point(field_mutable:mtproto.TL_auth_sendCodeLayer51.lang_code)
  return lang_code_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* TL_auth_sendCodeLayer51::release_lang_code() {
  // @@protoc_insertion_point(field_release:mtproto.TL_auth_sendCodeLayer51.lang_code)
  
  return lang_code_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TL_auth_sendCodeLayer51::set_allocated_lang_code(::std::string* lang_code) {
  if (lang_code != NULL) {
    
  } else {
    
  }
  lang_code_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), lang_code);
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_auth_sendCodeLayer51.lang_code)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TL_messages_getHistoryLayer51::kPeerFieldNumber;
const int TL_messages_getHistoryLayer51::kOffsetIdFieldNumber;
const int TL_messages_getHistoryLayer51::kOffsetDateFieldNumber;
const int TL_messages_getHistoryLayer51::kAddOffsetFieldNumber;
const int TL_messages_getHistoryLayer51::kLimitFieldNumber;
const int TL_messages_getHistoryLayer51::kMaxIdFieldNumber;
const int TL_messages_getHistoryLayer51::kMinIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TL_messages_getHistoryLayer51::TL_messages_getHistoryLayer51()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.TL_messages_getHistoryLayer51)
}
TL_messages_getHistoryLayer51::TL_messages_getHistoryLayer51(const TL_messages_getHistoryLayer51& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_peer()) {
    peer_ = new ::mtproto::InputPeer(*from.peer_);
  } else {
    peer_ = NULL;
  }
  ::memcpy(&offset_id_, &from.offset_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&min_id_) -
    reinterpret_cast<char*>(&offset_id_)) + sizeof(min_id_));
  // @@protoc_insertion_point(copy_constructor:mtproto.TL_messages_getHistoryLayer51)
}

void TL_messages_getHistoryLayer51::SharedCtor() {
  ::memset(&peer_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&min_id_) -
      reinterpret_cast<char*>(&peer_)) + sizeof(min_id_));
  _cached_size_ = 0;
}

TL_messages_getHistoryLayer51::~TL_messages_getHistoryLayer51() {
  // @@protoc_insertion_point(destructor:mtproto.TL_messages_getHistoryLayer51)
  SharedDtor();
}

void TL_messages_getHistoryLayer51::SharedDtor() {
  if (this != internal_default_instance()) delete peer_;
}

void TL_messages_getHistoryLayer51::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TL_messages_getHistoryLayer51::descriptor() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TL_messages_getHistoryLayer51& TL_messages_getHistoryLayer51::default_instance() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  return *internal_default_instance();
}

TL_messages_getHistoryLayer51* TL_messages_getHistoryLayer51::New(::google::protobuf::Arena* arena) const {
  TL_messages_getHistoryLayer51* n = new TL_messages_getHistoryLayer51;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TL_messages_getHistoryLayer51::Swap(TL_messages_getHistoryLayer51* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TL_messages_getHistoryLayer51::InternalSwap(TL_messages_getHistoryLayer51* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata TL_messages_getHistoryLayer51::GetMetadata() const {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TL_messages_getHistoryLayer51

// .mtproto.InputPeer peer = 1;
bool TL_messages_getHistoryLayer51::has_peer() const {
  return this != internal_default_instance() && peer_ != NULL;
}
void TL_messages_getHistoryLayer51::clear_peer() {
  if (GetArenaNoVirtual() == NULL && peer_ != NULL) delete peer_;
  peer_ = NULL;
}
const ::mtproto::InputPeer& TL_messages_getHistoryLayer51::peer() const {
  const ::mtproto::InputPeer* p = peer_;
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_getHistoryLayer51.peer)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::InputPeer*>(
      &::mtproto::_InputPeer_default_instance_);
}
::mtproto::InputPeer* TL_messages_getHistoryLayer51::mutable_peer() {
  
  if (peer_ == NULL) {
    peer_ = new ::mtproto::InputPeer;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_messages_getHistoryLayer51.peer)
  return peer_;
}
::mtproto::InputPeer* TL_messages_getHistoryLayer51::release_peer() {
  // @@protoc_insertion_point(field_release:mtproto.TL_messages_getHistoryLayer51.peer)
  
  ::mtproto::InputPeer* temp = peer_;
  peer_ = NULL;
  return temp;
}
void TL_messages_getHistoryLayer51::set_allocated_peer(::mtproto::InputPeer* peer) {
  delete peer_;
  peer_ = peer;
  if (peer) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_messages_getHistoryLayer51.peer)
}

// int32 offset_id = 2;
void TL_messages_getHistoryLayer51::clear_offset_id() {
  offset_id_ = 0;
}
::google::protobuf::int32 TL_messages_getHistoryLayer51::offset_id() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_getHistoryLayer51.offset_id)
  return offset_id_;
}
void TL_messages_getHistoryLayer51::set_offset_id(::google::protobuf::int32 value) {
  
  offset_id_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_getHistoryLayer51.offset_id)
}

// int32 offset_date = 3;
void TL_messages_getHistoryLayer51::clear_offset_date() {
  offset_date_ = 0;
}
::google::protobuf::int32 TL_messages_getHistoryLayer51::offset_date() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_getHistoryLayer51.offset_date)
  return offset_date_;
}
void TL_messages_getHistoryLayer51::set_offset_date(::google::protobuf::int32 value) {
  
  offset_date_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_getHistoryLayer51.offset_date)
}

// int32 add_offset = 4;
void TL_messages_getHistoryLayer51::clear_add_offset() {
  add_offset_ = 0;
}
::google::protobuf::int32 TL_messages_getHistoryLayer51::add_offset() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_getHistoryLayer51.add_offset)
  return add_offset_;
}
void TL_messages_getHistoryLayer51::set_add_offset(::google::protobuf::int32 value) {
  
  add_offset_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_getHistoryLayer51.add_offset)
}

// int32 limit = 5;
void TL_messages_getHistoryLayer51::clear_limit() {
  limit_ = 0;
}
::google::protobuf::int32 TL_messages_getHistoryLayer51::limit() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_getHistoryLayer51.limit)
  return limit_;
}
void TL_messages_getHistoryLayer51::set_limit(::google::protobuf::int32 value) {
  
  limit_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_getHistoryLayer51.limit)
}

// int32 max_id = 6;
void TL_messages_getHistoryLayer51::clear_max_id() {
  max_id_ = 0;
}
::google::protobuf::int32 TL_messages_getHistoryLayer51::max_id() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_getHistoryLayer51.max_id)
  return max_id_;
}
void TL_messages_getHistoryLayer51::set_max_id(::google::protobuf::int32 value) {
  
  max_id_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_getHistoryLayer51.max_id)
}

// int32 min_id = 7;
void TL_messages_getHistoryLayer51::clear_min_id() {
  min_id_ = 0;
}
::google::protobuf::int32 TL_messages_getHistoryLayer51::min_id() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_getHistoryLayer51.min_id)
  return min_id_;
}
void TL_messages_getHistoryLayer51::set_min_id(::google::protobuf::int32 value) {
  
  min_id_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_getHistoryLayer51.min_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TL_initConnectionLayer68::kApiIdFieldNumber;
const int TL_initConnectionLayer68::kDeviceModelFieldNumber;
const int TL_initConnectionLayer68::kSystemVersionFieldNumber;
const int TL_initConnectionLayer68::kAppVersionFieldNumber;
const int TL_initConnectionLayer68::kSystemLangCodeFieldNumber;
const int TL_initConnectionLayer68::kLangPackFieldNumber;
const int TL_initConnectionLayer68::kLangCodeFieldNumber;
const int TL_initConnectionLayer68::kQueryFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TL_initConnectionLayer68::TL_initConnectionLayer68()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.TL_initConnectionLayer68)
}
TL_initConnectionLayer68::TL_initConnectionLayer68(const TL_initConnectionLayer68& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  device_model_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.device_model().size() > 0) {
    device_model_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.device_model_);
  }
  system_version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.system_version().size() > 0) {
    system_version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.system_version_);
  }
  app_version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.app_version().size() > 0) {
    app_version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.app_version_);
  }
  system_lang_code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.system_lang_code().size() > 0) {
    system_lang_code_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.system_lang_code_);
  }
  lang_pack_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.lang_pack().size() > 0) {
    lang_pack_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.lang_pack_);
  }
  lang_code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.lang_code().size() > 0) {
    lang_code_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.lang_code_);
  }
  query_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.query().size() > 0) {
    query_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.query_);
  }
  api_id_ = from.api_id_;
  // @@protoc_insertion_point(copy_constructor:mtproto.TL_initConnectionLayer68)
}

void TL_initConnectionLayer68::SharedCtor() {
  device_model_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  system_version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  app_version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  system_lang_code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  lang_pack_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  lang_code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  query_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  api_id_ = 0;
  _cached_size_ = 0;
}

TL_initConnectionLayer68::~TL_initConnectionLayer68() {
  // @@protoc_insertion_point(destructor:mtproto.TL_initConnectionLayer68)
  SharedDtor();
}

void TL_initConnectionLayer68::SharedDtor() {
  device_model_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  system_version_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  app_version_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  system_lang_code_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  lang_pack_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  lang_code_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  query_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void TL_initConnectionLayer68::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TL_initConnectionLayer68::descriptor() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TL_initConnectionLayer68& TL_initConnectionLayer68::default_instance() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  return *internal_default_instance();
}

TL_initConnectionLayer68* TL_initConnectionLayer68::New(::google::protobuf::Arena* arena) const {
  TL_initConnectionLayer68* n = new TL_initConnectionLayer68;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TL_initConnectionLayer68::Swap(TL_initConnectionLayer68* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TL_initConnectionLayer68::InternalSwap(TL_initConnectionLayer68* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata TL_initConnectionLayer68::GetMetadata() const {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TL_initConnectionLayer68

// int32 api_id = 1;
void TL_initConnectionLayer68::clear_api_id() {
  api_id_ = 0;
}
::google::protobuf::int32 TL_initConnectionLayer68::api_id() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_initConnectionLayer68.api_id)
  return api_id_;
}
void TL_initConnectionLayer68::set_api_id(::google::protobuf::int32 value) {
  
  api_id_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_initConnectionLayer68.api_id)
}

// string device_model = 2;
void TL_initConnectionLayer68::clear_device_model() {
  device_model_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& TL_initConnectionLayer68::device_model() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_initConnectionLayer68.device_model)
  return device_model_.GetNoArena();
}
void TL_initConnectionLayer68::set_device_model(const ::std::string& value) {
  
  device_model_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtproto.TL_initConnectionLayer68.device_model)
}
#if LANG_CXX11
void TL_initConnectionLayer68::set_device_model(::std::string&& value) {
  
  device_model_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mtproto.TL_initConnectionLayer68.device_model)
}
#endif
void TL_initConnectionLayer68::set_device_model(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  device_model_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtproto.TL_initConnectionLayer68.device_model)
}
void TL_initConnectionLayer68::set_device_model(const char* value, size_t size) {
  
  device_model_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtproto.TL_initConnectionLayer68.device_model)
}
::std::string* TL_initConnectionLayer68::mutable_device_model() {
  
  // @@protoc_insertion_point(field_mutable:mtproto.TL_initConnectionLayer68.device_model)
  return device_model_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* TL_initConnectionLayer68::release_device_model() {
  // @@protoc_insertion_point(field_release:mtproto.TL_initConnectionLayer68.device_model)
  
  return device_model_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TL_initConnectionLayer68::set_allocated_device_model(::std::string* device_model) {
  if (device_model != NULL) {
    
  } else {
    
  }
  device_model_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), device_model);
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_initConnectionLayer68.device_model)
}

// string system_version = 3;
void TL_initConnectionLayer68::clear_system_version() {
  system_version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& TL_initConnectionLayer68::system_version() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_initConnectionLayer68.system_version)
  return system_version_.GetNoArena();
}
void TL_initConnectionLayer68::set_system_version(const ::std::string& value) {
  
  system_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtproto.TL_initConnectionLayer68.system_version)
}
#if LANG_CXX11
void TL_initConnectionLayer68::set_system_version(::std::string&& value) {
  
  system_version_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mtproto.TL_initConnectionLayer68.system_version)
}
#endif
void TL_initConnectionLayer68::set_system_version(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  system_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtproto.TL_initConnectionLayer68.system_version)
}
void TL_initConnectionLayer68::set_system_version(const char* value, size_t size) {
  
  system_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtproto.TL_initConnectionLayer68.system_version)
}
::std::string* TL_initConnectionLayer68::mutable_system_version() {
  
  // @@protoc_insertion_point(field_mutable:mtproto.TL_initConnectionLayer68.system_version)
  return system_version_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* TL_initConnectionLayer68::release_system_version() {
  // @@protoc_insertion_point(field_release:mtproto.TL_initConnectionLayer68.system_version)
  
  return system_version_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TL_initConnectionLayer68::set_allocated_system_version(::std::string* system_version) {
  if (system_version != NULL) {
    
  } else {
    
  }
  system_version_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), system_version);
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_initConnectionLayer68.system_version)
}

// string app_version = 4;
void TL_initConnectionLayer68::clear_app_version() {
  app_version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& TL_initConnectionLayer68::app_version() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_initConnectionLayer68.app_version)
  return app_version_.GetNoArena();
}
void TL_initConnectionLayer68::set_app_version(const ::std::string& value) {
  
  app_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtproto.TL_initConnectionLayer68.app_version)
}
#if LANG_CXX11
void TL_initConnectionLayer68::set_app_version(::std::string&& value) {
  
  app_version_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mtproto.TL_initConnectionLayer68.app_version)
}
#endif
void TL_initConnectionLayer68::set_app_version(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  app_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtproto.TL_initConnectionLayer68.app_version)
}
void TL_initConnectionLayer68::set_app_version(const char* value, size_t size) {
  
  app_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtproto.TL_initConnectionLayer68.app_version)
}
::std::string* TL_initConnectionLayer68::mutable_app_version() {
  
  // @@protoc_insertion_point(field_mutable:mtproto.TL_initConnectionLayer68.app_version)
  return app_version_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* TL_initConnectionLayer68::release_app_version() {
  // @@protoc_insertion_point(field_release:mtproto.TL_initConnectionLayer68.app_version)
  
  return app_version_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TL_initConnectionLayer68::set_allocated_app_version(::std::string* app_version) {
  if (app_version != NULL) {
    
  } else {
    
  }
  app_version_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), app_version);
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_initConnectionLayer68.app_version)
}

// string system_lang_code = 5;
void TL_initConnectionLayer68::clear_system_lang_code() {
  system_lang_code_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& TL_initConnectionLayer68::system_lang_code() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_initConnectionLayer68.system_lang_code)
  return system_lang_code_.GetNoArena();
}
void TL_initConnectionLayer68::set_system_lang_code(const ::std::string& value) {
  
  system_lang_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtproto.TL_initConnectionLayer68.system_lang_code)
}
#if LANG_CXX11
void TL_initConnectionLayer68::set_system_lang_code(::std::string&& value) {
  
  system_lang_code_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mtproto.TL_initConnectionLayer68.system_lang_code)
}
#endif
void TL_initConnectionLayer68::set_system_lang_code(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  system_lang_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtproto.TL_initConnectionLayer68.system_lang_code)
}
void TL_initConnectionLayer68::set_system_lang_code(const char* value, size_t size) {
  
  system_lang_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtproto.TL_initConnectionLayer68.system_lang_code)
}
::std::string* TL_initConnectionLayer68::mutable_system_lang_code() {
  
  // @@protoc_insertion_point(field_mutable:mtproto.TL_initConnectionLayer68.system_lang_code)
  return system_lang_code_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* TL_initConnectionLayer68::release_system_lang_code() {
  // @@protoc_insertion_point(field_release:mtproto.TL_initConnectionLayer68.system_lang_code)
  
  return system_lang_code_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TL_initConnectionLayer68::set_allocated_system_lang_code(::std::string* system_lang_code) {
  if (system_lang_code != NULL) {
    
  } else {
    
  }
  system_lang_code_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), system_lang_code);
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_initConnectionLayer68.system_lang_code)
}

// string lang_pack = 6;
void TL_initConnectionLayer68::clear_lang_pack() {
  lang_pack_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& TL_initConnectionLayer68::lang_pack() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_initConnectionLayer68.lang_pack)
  return lang_pack_.GetNoArena();
}
void TL_initConnectionLayer68::set_lang_pack(const ::std::string& value) {
  
  lang_pack_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtproto.TL_initConnectionLayer68.lang_pack)
}
#if LANG_CXX11
void TL_initConnectionLayer68::set_lang_pack(::std::string&& value) {
  
  lang_pack_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mtproto.TL_initConnectionLayer68.lang_pack)
}
#endif
void TL_initConnectionLayer68::set_lang_pack(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  lang_pack_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtproto.TL_initConnectionLayer68.lang_pack)
}
void TL_initConnectionLayer68::set_lang_pack(const char* value, size_t size) {
  
  lang_pack_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtproto.TL_initConnectionLayer68.lang_pack)
}
::std::string* TL_initConnectionLayer68::mutable_lang_pack() {
  
  // @@protoc_insertion_point(field_mutable:mtproto.TL_initConnectionLayer68.lang_pack)
  return lang_pack_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* TL_initConnectionLayer68::release_lang_pack() {
  // @@protoc_insertion_point(field_release:mtproto.TL_initConnectionLayer68.lang_pack)
  
  return lang_pack_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TL_initConnectionLayer68::set_allocated_lang_pack(::std::string* lang_pack) {
  if (lang_pack != NULL) {
    
  } else {
    
  }
  lang_pack_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), lang_pack);
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_initConnectionLayer68.lang_pack)
}

// string lang_code = 7;
void TL_initConnectionLayer68::clear_lang_code() {
  lang_code_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& TL_initConnectionLayer68::lang_code() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_initConnectionLayer68.lang_code)
  return lang_code_.GetNoArena();
}
void TL_initConnectionLayer68::set_lang_code(const ::std::string& value) {
  
  lang_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtproto.TL_initConnectionLayer68.lang_code)
}
#if LANG_CXX11
void TL_initConnectionLayer68::set_lang_code(::std::string&& value) {
  
  lang_code_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mtproto.TL_initConnectionLayer68.lang_code)
}
#endif
void TL_initConnectionLayer68::set_lang_code(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  lang_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtproto.TL_initConnectionLayer68.lang_code)
}
void TL_initConnectionLayer68::set_lang_code(const char* value, size_t size) {
  
  lang_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtproto.TL_initConnectionLayer68.lang_code)
}
::std::string* TL_initConnectionLayer68::mutable_lang_code() {
  
  // @@protoc_insertion_point(field_mutable:mtproto.TL_initConnectionLayer68.lang_code)
  return lang_code_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* TL_initConnectionLayer68::release_lang_code() {
  // @@protoc_insertion_point(field_release:mtproto.TL_initConnectionLayer68.lang_code)
  
  return lang_code_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TL_initConnectionLayer68::set_allocated_lang_code(::std::string* lang_code) {
  if (lang_code != NULL) {
    
  } else {
    
  }
  lang_code_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), lang_code);
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_initConnectionLayer68.lang_code)
}

// bytes query = 8;
void TL_initConnectionLayer68::clear_query() {
  query_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& TL_initConnectionLayer68::query() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_initConnectionLayer68.query)
  return query_.GetNoArena();
}
void TL_initConnectionLayer68::set_query(const ::std::string& value) {
  
  query_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtproto.TL_initConnectionLayer68.query)
}
#if LANG_CXX11
void TL_initConnectionLayer68::set_query(::std::string&& value) {
  
  query_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mtproto.TL_initConnectionLayer68.query)
}
#endif
void TL_initConnectionLayer68::set_query(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  query_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtproto.TL_initConnectionLayer68.query)
}
void TL_initConnectionLayer68::set_query(const void* value, size_t size) {
  
  query_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtproto.TL_initConnectionLayer68.query)
}
::std::string* TL_initConnectionLayer68::mutable_query() {
  
  // @@protoc_insertion_point(field_mutable:mtproto.TL_initConnectionLayer68.query)
  return query_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* TL_initConnectionLayer68::release_query() {
  // @@protoc_insertion_point(field_release:mtproto.TL_initConnectionLayer68.query)
  
  return query_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TL_initConnectionLayer68::set_allocated_query(::std::string* query) {
  if (query != NULL) {
    
  } else {
    
  }
  query_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), query);
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_initConnectionLayer68.query)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TL_messages_searchLayer68::kPeerFieldNumber;
const int TL_messages_searchLayer68::kQFieldNumber;
const int TL_messages_searchLayer68::kFromIdFieldNumber;
const int TL_messages_searchLayer68::kFilterFieldNumber;
const int TL_messages_searchLayer68::kMinDateFieldNumber;
const int TL_messages_searchLayer68::kMaxDateFieldNumber;
const int TL_messages_searchLayer68::kOffsetFieldNumber;
const int TL_messages_searchLayer68::kMaxIdFieldNumber;
const int TL_messages_searchLayer68::kLimitFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TL_messages_searchLayer68::TL_messages_searchLayer68()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.TL_messages_searchLayer68)
}
TL_messages_searchLayer68::TL_messages_searchLayer68(const TL_messages_searchLayer68& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  q_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.q().size() > 0) {
    q_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.q_);
  }
  if (from.has_peer()) {
    peer_ = new ::mtproto::InputPeer(*from.peer_);
  } else {
    peer_ = NULL;
  }
  if (from.has_from_id()) {
    from_id_ = new ::mtproto::InputUser(*from.from_id_);
  } else {
    from_id_ = NULL;
  }
  if (from.has_filter()) {
    filter_ = new ::mtproto::MessagesFilter(*from.filter_);
  } else {
    filter_ = NULL;
  }
  ::memcpy(&min_date_, &from.min_date_,
    static_cast<size_t>(reinterpret_cast<char*>(&limit_) -
    reinterpret_cast<char*>(&min_date_)) + sizeof(limit_));
  // @@protoc_insertion_point(copy_constructor:mtproto.TL_messages_searchLayer68)
}

void TL_messages_searchLayer68::SharedCtor() {
  q_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&peer_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&limit_) -
      reinterpret_cast<char*>(&peer_)) + sizeof(limit_));
  _cached_size_ = 0;
}

TL_messages_searchLayer68::~TL_messages_searchLayer68() {
  // @@protoc_insertion_point(destructor:mtproto.TL_messages_searchLayer68)
  SharedDtor();
}

void TL_messages_searchLayer68::SharedDtor() {
  q_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete peer_;
  if (this != internal_default_instance()) delete from_id_;
  if (this != internal_default_instance()) delete filter_;
}

void TL_messages_searchLayer68::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TL_messages_searchLayer68::descriptor() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TL_messages_searchLayer68& TL_messages_searchLayer68::default_instance() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  return *internal_default_instance();
}

TL_messages_searchLayer68* TL_messages_searchLayer68::New(::google::protobuf::Arena* arena) const {
  TL_messages_searchLayer68* n = new TL_messages_searchLayer68;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TL_messages_searchLayer68::Swap(TL_messages_searchLayer68* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TL_messages_searchLayer68::InternalSwap(TL_messages_searchLayer68* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata TL_messages_searchLayer68::GetMetadata() const {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TL_messages_searchLayer68

// .mtproto.InputPeer peer = 2;
bool TL_messages_searchLayer68::has_peer() const {
  return this != internal_default_instance() && peer_ != NULL;
}
void TL_messages_searchLayer68::clear_peer() {
  if (GetArenaNoVirtual() == NULL && peer_ != NULL) delete peer_;
  peer_ = NULL;
}
const ::mtproto::InputPeer& TL_messages_searchLayer68::peer() const {
  const ::mtproto::InputPeer* p = peer_;
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_searchLayer68.peer)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::InputPeer*>(
      &::mtproto::_InputPeer_default_instance_);
}
::mtproto::InputPeer* TL_messages_searchLayer68::mutable_peer() {
  
  if (peer_ == NULL) {
    peer_ = new ::mtproto::InputPeer;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_messages_searchLayer68.peer)
  return peer_;
}
::mtproto::InputPeer* TL_messages_searchLayer68::release_peer() {
  // @@protoc_insertion_point(field_release:mtproto.TL_messages_searchLayer68.peer)
  
  ::mtproto::InputPeer* temp = peer_;
  peer_ = NULL;
  return temp;
}
void TL_messages_searchLayer68::set_allocated_peer(::mtproto::InputPeer* peer) {
  delete peer_;
  peer_ = peer;
  if (peer) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_messages_searchLayer68.peer)
}

// string q = 3;
void TL_messages_searchLayer68::clear_q() {
  q_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& TL_messages_searchLayer68::q() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_searchLayer68.q)
  return q_.GetNoArena();
}
void TL_messages_searchLayer68::set_q(const ::std::string& value) {
  
  q_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_searchLayer68.q)
}
#if LANG_CXX11
void TL_messages_searchLayer68::set_q(::std::string&& value) {
  
  q_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mtproto.TL_messages_searchLayer68.q)
}
#endif
void TL_messages_searchLayer68::set_q(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  q_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtproto.TL_messages_searchLayer68.q)
}
void TL_messages_searchLayer68::set_q(const char* value, size_t size) {
  
  q_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtproto.TL_messages_searchLayer68.q)
}
::std::string* TL_messages_searchLayer68::mutable_q() {
  
  // @@protoc_insertion_point(field_mutable:mtproto.TL_messages_searchLayer68.q)
  return q_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* TL_messages_searchLayer68::release_q() {
  // @@protoc_insertion_point(field_release:mtproto.TL_messages_searchLayer68.q)
  
  return q_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TL_messages_searchLayer68::set_allocated_q(::std::string* q) {
  if (q != NULL) {
    
  } else {
    
  }
  q_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), q);
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_messages_searchLayer68.q)
}

// .mtproto.InputUser from_id = 4;
bool TL_messages_searchLayer68::has_from_id() const {
  return this != internal_default_instance() && from_id_ != NULL;
}
void TL_messages_searchLayer68::clear_from_id() {
  if (GetArenaNoVirtual() == NULL && from_id_ != NULL) delete from_id_;
  from_id_ = NULL;
}
const ::mtproto::InputUser& TL_messages_searchLayer68::from_id() const {
  const ::mtproto::InputUser* p = from_id_;
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_searchLayer68.from_id)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::InputUser*>(
      &::mtproto::_InputUser_default_instance_);
}
::mtproto::InputUser* TL_messages_searchLayer68::mutable_from_id() {
  
  if (from_id_ == NULL) {
    from_id_ = new ::mtproto::InputUser;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_messages_searchLayer68.from_id)
  return from_id_;
}
::mtproto::InputUser* TL_messages_searchLayer68::release_from_id() {
  // @@protoc_insertion_point(field_release:mtproto.TL_messages_searchLayer68.from_id)
  
  ::mtproto::InputUser* temp = from_id_;
  from_id_ = NULL;
  return temp;
}
void TL_messages_searchLayer68::set_allocated_from_id(::mtproto::InputUser* from_id) {
  delete from_id_;
  from_id_ = from_id;
  if (from_id) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_messages_searchLayer68.from_id)
}

// .mtproto.MessagesFilter filter = 5;
bool TL_messages_searchLayer68::has_filter() const {
  return this != internal_default_instance() && filter_ != NULL;
}
void TL_messages_searchLayer68::clear_filter() {
  if (GetArenaNoVirtual() == NULL && filter_ != NULL) delete filter_;
  filter_ = NULL;
}
const ::mtproto::MessagesFilter& TL_messages_searchLayer68::filter() const {
  const ::mtproto::MessagesFilter* p = filter_;
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_searchLayer68.filter)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::MessagesFilter*>(
      &::mtproto::_MessagesFilter_default_instance_);
}
::mtproto::MessagesFilter* TL_messages_searchLayer68::mutable_filter() {
  
  if (filter_ == NULL) {
    filter_ = new ::mtproto::MessagesFilter;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_messages_searchLayer68.filter)
  return filter_;
}
::mtproto::MessagesFilter* TL_messages_searchLayer68::release_filter() {
  // @@protoc_insertion_point(field_release:mtproto.TL_messages_searchLayer68.filter)
  
  ::mtproto::MessagesFilter* temp = filter_;
  filter_ = NULL;
  return temp;
}
void TL_messages_searchLayer68::set_allocated_filter(::mtproto::MessagesFilter* filter) {
  delete filter_;
  filter_ = filter;
  if (filter) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_messages_searchLayer68.filter)
}

// int32 min_date = 6;
void TL_messages_searchLayer68::clear_min_date() {
  min_date_ = 0;
}
::google::protobuf::int32 TL_messages_searchLayer68::min_date() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_searchLayer68.min_date)
  return min_date_;
}
void TL_messages_searchLayer68::set_min_date(::google::protobuf::int32 value) {
  
  min_date_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_searchLayer68.min_date)
}

// int32 max_date = 7;
void TL_messages_searchLayer68::clear_max_date() {
  max_date_ = 0;
}
::google::protobuf::int32 TL_messages_searchLayer68::max_date() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_searchLayer68.max_date)
  return max_date_;
}
void TL_messages_searchLayer68::set_max_date(::google::protobuf::int32 value) {
  
  max_date_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_searchLayer68.max_date)
}

// int32 offset = 8;
void TL_messages_searchLayer68::clear_offset() {
  offset_ = 0;
}
::google::protobuf::int32 TL_messages_searchLayer68::offset() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_searchLayer68.offset)
  return offset_;
}
void TL_messages_searchLayer68::set_offset(::google::protobuf::int32 value) {
  
  offset_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_searchLayer68.offset)
}

// int32 max_id = 9;
void TL_messages_searchLayer68::clear_max_id() {
  max_id_ = 0;
}
::google::protobuf::int32 TL_messages_searchLayer68::max_id() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_searchLayer68.max_id)
  return max_id_;
}
void TL_messages_searchLayer68::set_max_id(::google::protobuf::int32 value) {
  
  max_id_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_searchLayer68.max_id)
}

// int32 limit = 10;
void TL_messages_searchLayer68::clear_limit() {
  limit_ = 0;
}
::google::protobuf::int32 TL_messages_searchLayer68::limit() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_searchLayer68.limit)
  return limit_;
}
void TL_messages_searchLayer68::set_limit(::google::protobuf::int32 value) {
  
  limit_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_searchLayer68.limit)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TL_account_registerDeviceLayer71::kTokenTypeFieldNumber;
const int TL_account_registerDeviceLayer71::kTokenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TL_account_registerDeviceLayer71::TL_account_registerDeviceLayer71()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.TL_account_registerDeviceLayer71)
}
TL_account_registerDeviceLayer71::TL_account_registerDeviceLayer71(const TL_account_registerDeviceLayer71& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.token().size() > 0) {
    token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.token_);
  }
  token_type_ = from.token_type_;
  // @@protoc_insertion_point(copy_constructor:mtproto.TL_account_registerDeviceLayer71)
}

void TL_account_registerDeviceLayer71::SharedCtor() {
  token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  token_type_ = 0;
  _cached_size_ = 0;
}

TL_account_registerDeviceLayer71::~TL_account_registerDeviceLayer71() {
  // @@protoc_insertion_point(destructor:mtproto.TL_account_registerDeviceLayer71)
  SharedDtor();
}

void TL_account_registerDeviceLayer71::SharedDtor() {
  token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void TL_account_registerDeviceLayer71::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TL_account_registerDeviceLayer71::descriptor() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TL_account_registerDeviceLayer71& TL_account_registerDeviceLayer71::default_instance() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  return *internal_default_instance();
}

TL_account_registerDeviceLayer71* TL_account_registerDeviceLayer71::New(::google::protobuf::Arena* arena) const {
  TL_account_registerDeviceLayer71* n = new TL_account_registerDeviceLayer71;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TL_account_registerDeviceLayer71::Swap(TL_account_registerDeviceLayer71* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TL_account_registerDeviceLayer71::InternalSwap(TL_account_registerDeviceLayer71* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata TL_account_registerDeviceLayer71::GetMetadata() const {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TL_account_registerDeviceLayer71

// int32 token_type = 1;
void TL_account_registerDeviceLayer71::clear_token_type() {
  token_type_ = 0;
}
::google::protobuf::int32 TL_account_registerDeviceLayer71::token_type() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_account_registerDeviceLayer71.token_type)
  return token_type_;
}
void TL_account_registerDeviceLayer71::set_token_type(::google::protobuf::int32 value) {
  
  token_type_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_account_registerDeviceLayer71.token_type)
}

// string token = 2;
void TL_account_registerDeviceLayer71::clear_token() {
  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& TL_account_registerDeviceLayer71::token() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_account_registerDeviceLayer71.token)
  return token_.GetNoArena();
}
void TL_account_registerDeviceLayer71::set_token(const ::std::string& value) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtproto.TL_account_registerDeviceLayer71.token)
}
#if LANG_CXX11
void TL_account_registerDeviceLayer71::set_token(::std::string&& value) {
  
  token_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mtproto.TL_account_registerDeviceLayer71.token)
}
#endif
void TL_account_registerDeviceLayer71::set_token(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtproto.TL_account_registerDeviceLayer71.token)
}
void TL_account_registerDeviceLayer71::set_token(const char* value, size_t size) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtproto.TL_account_registerDeviceLayer71.token)
}
::std::string* TL_account_registerDeviceLayer71::mutable_token() {
  
  // @@protoc_insertion_point(field_mutable:mtproto.TL_account_registerDeviceLayer71.token)
  return token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* TL_account_registerDeviceLayer71::release_token() {
  // @@protoc_insertion_point(field_release:mtproto.TL_account_registerDeviceLayer71.token)
  
  return token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TL_account_registerDeviceLayer71::set_allocated_token(::std::string* token) {
  if (token != NULL) {
    
  } else {
    
  }
  token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), token);
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_account_registerDeviceLayer71.token)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TL_account_unregisterDeviceLayer71::kTokenTypeFieldNumber;
const int TL_account_unregisterDeviceLayer71::kTokenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TL_account_unregisterDeviceLayer71::TL_account_unregisterDeviceLayer71()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.TL_account_unregisterDeviceLayer71)
}
TL_account_unregisterDeviceLayer71::TL_account_unregisterDeviceLayer71(const TL_account_unregisterDeviceLayer71& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.token().size() > 0) {
    token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.token_);
  }
  token_type_ = from.token_type_;
  // @@protoc_insertion_point(copy_constructor:mtproto.TL_account_unregisterDeviceLayer71)
}

void TL_account_unregisterDeviceLayer71::SharedCtor() {
  token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  token_type_ = 0;
  _cached_size_ = 0;
}

TL_account_unregisterDeviceLayer71::~TL_account_unregisterDeviceLayer71() {
  // @@protoc_insertion_point(destructor:mtproto.TL_account_unregisterDeviceLayer71)
  SharedDtor();
}

void TL_account_unregisterDeviceLayer71::SharedDtor() {
  token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void TL_account_unregisterDeviceLayer71::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TL_account_unregisterDeviceLayer71::descriptor() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TL_account_unregisterDeviceLayer71& TL_account_unregisterDeviceLayer71::default_instance() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  return *internal_default_instance();
}

TL_account_unregisterDeviceLayer71* TL_account_unregisterDeviceLayer71::New(::google::protobuf::Arena* arena) const {
  TL_account_unregisterDeviceLayer71* n = new TL_account_unregisterDeviceLayer71;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TL_account_unregisterDeviceLayer71::Swap(TL_account_unregisterDeviceLayer71* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TL_account_unregisterDeviceLayer71::InternalSwap(TL_account_unregisterDeviceLayer71* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata TL_account_unregisterDeviceLayer71::GetMetadata() const {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TL_account_unregisterDeviceLayer71

// int32 token_type = 1;
void TL_account_unregisterDeviceLayer71::clear_token_type() {
  token_type_ = 0;
}
::google::protobuf::int32 TL_account_unregisterDeviceLayer71::token_type() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_account_unregisterDeviceLayer71.token_type)
  return token_type_;
}
void TL_account_unregisterDeviceLayer71::set_token_type(::google::protobuf::int32 value) {
  
  token_type_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_account_unregisterDeviceLayer71.token_type)
}

// string token = 2;
void TL_account_unregisterDeviceLayer71::clear_token() {
  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& TL_account_unregisterDeviceLayer71::token() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_account_unregisterDeviceLayer71.token)
  return token_.GetNoArena();
}
void TL_account_unregisterDeviceLayer71::set_token(const ::std::string& value) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtproto.TL_account_unregisterDeviceLayer71.token)
}
#if LANG_CXX11
void TL_account_unregisterDeviceLayer71::set_token(::std::string&& value) {
  
  token_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mtproto.TL_account_unregisterDeviceLayer71.token)
}
#endif
void TL_account_unregisterDeviceLayer71::set_token(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtproto.TL_account_unregisterDeviceLayer71.token)
}
void TL_account_unregisterDeviceLayer71::set_token(const char* value, size_t size) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtproto.TL_account_unregisterDeviceLayer71.token)
}
::std::string* TL_account_unregisterDeviceLayer71::mutable_token() {
  
  // @@protoc_insertion_point(field_mutable:mtproto.TL_account_unregisterDeviceLayer71.token)
  return token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* TL_account_unregisterDeviceLayer71::release_token() {
  // @@protoc_insertion_point(field_release:mtproto.TL_account_unregisterDeviceLayer71.token)
  
  return token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TL_account_unregisterDeviceLayer71::set_allocated_token(::std::string* token) {
  if (token != NULL) {
    
  } else {
    
  }
  token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), token);
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_account_unregisterDeviceLayer71.token)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TL_langpack_getLangPackLayer71::kLangCodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TL_langpack_getLangPackLayer71::TL_langpack_getLangPackLayer71()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.TL_langpack_getLangPackLayer71)
}
TL_langpack_getLangPackLayer71::TL_langpack_getLangPackLayer71(const TL_langpack_getLangPackLayer71& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  lang_code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.lang_code().size() > 0) {
    lang_code_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.lang_code_);
  }
  // @@protoc_insertion_point(copy_constructor:mtproto.TL_langpack_getLangPackLayer71)
}

void TL_langpack_getLangPackLayer71::SharedCtor() {
  lang_code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

TL_langpack_getLangPackLayer71::~TL_langpack_getLangPackLayer71() {
  // @@protoc_insertion_point(destructor:mtproto.TL_langpack_getLangPackLayer71)
  SharedDtor();
}

void TL_langpack_getLangPackLayer71::SharedDtor() {
  lang_code_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void TL_langpack_getLangPackLayer71::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TL_langpack_getLangPackLayer71::descriptor() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TL_langpack_getLangPackLayer71& TL_langpack_getLangPackLayer71::default_instance() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  return *internal_default_instance();
}

TL_langpack_getLangPackLayer71* TL_langpack_getLangPackLayer71::New(::google::protobuf::Arena* arena) const {
  TL_langpack_getLangPackLayer71* n = new TL_langpack_getLangPackLayer71;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TL_langpack_getLangPackLayer71::Swap(TL_langpack_getLangPackLayer71* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TL_langpack_getLangPackLayer71::InternalSwap(TL_langpack_getLangPackLayer71* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata TL_langpack_getLangPackLayer71::GetMetadata() const {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TL_langpack_getLangPackLayer71

// string lang_code = 1;
void TL_langpack_getLangPackLayer71::clear_lang_code() {
  lang_code_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& TL_langpack_getLangPackLayer71::lang_code() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_langpack_getLangPackLayer71.lang_code)
  return lang_code_.GetNoArena();
}
void TL_langpack_getLangPackLayer71::set_lang_code(const ::std::string& value) {
  
  lang_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtproto.TL_langpack_getLangPackLayer71.lang_code)
}
#if LANG_CXX11
void TL_langpack_getLangPackLayer71::set_lang_code(::std::string&& value) {
  
  lang_code_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mtproto.TL_langpack_getLangPackLayer71.lang_code)
}
#endif
void TL_langpack_getLangPackLayer71::set_lang_code(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  lang_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtproto.TL_langpack_getLangPackLayer71.lang_code)
}
void TL_langpack_getLangPackLayer71::set_lang_code(const char* value, size_t size) {
  
  lang_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtproto.TL_langpack_getLangPackLayer71.lang_code)
}
::std::string* TL_langpack_getLangPackLayer71::mutable_lang_code() {
  
  // @@protoc_insertion_point(field_mutable:mtproto.TL_langpack_getLangPackLayer71.lang_code)
  return lang_code_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* TL_langpack_getLangPackLayer71::release_lang_code() {
  // @@protoc_insertion_point(field_release:mtproto.TL_langpack_getLangPackLayer71.lang_code)
  
  return lang_code_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TL_langpack_getLangPackLayer71::set_allocated_lang_code(::std::string* lang_code) {
  if (lang_code != NULL) {
    
  } else {
    
  }
  lang_code_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), lang_code);
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_langpack_getLangPackLayer71.lang_code)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TL_invokeAfterMsg::kMsgIdFieldNumber;
const int TL_invokeAfterMsg::kQueryFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TL_invokeAfterMsg::TL_invokeAfterMsg()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.TL_invokeAfterMsg)
}
TL_invokeAfterMsg::TL_invokeAfterMsg(const TL_invokeAfterMsg& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  query_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.query().size() > 0) {
    query_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.query_);
  }
  msg_id_ = from.msg_id_;
  // @@protoc_insertion_point(copy_constructor:mtproto.TL_invokeAfterMsg)
}

void TL_invokeAfterMsg::SharedCtor() {
  query_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  msg_id_ = GOOGLE_LONGLONG(0);
  _cached_size_ = 0;
}

TL_invokeAfterMsg::~TL_invokeAfterMsg() {
  // @@protoc_insertion_point(destructor:mtproto.TL_invokeAfterMsg)
  SharedDtor();
}

void TL_invokeAfterMsg::SharedDtor() {
  query_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void TL_invokeAfterMsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TL_invokeAfterMsg::descriptor() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TL_invokeAfterMsg& TL_invokeAfterMsg::default_instance() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  return *internal_default_instance();
}

TL_invokeAfterMsg* TL_invokeAfterMsg::New(::google::protobuf::Arena* arena) const {
  TL_invokeAfterMsg* n = new TL_invokeAfterMsg;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TL_invokeAfterMsg::Swap(TL_invokeAfterMsg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TL_invokeAfterMsg::InternalSwap(TL_invokeAfterMsg* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata TL_invokeAfterMsg::GetMetadata() const {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TL_invokeAfterMsg

// int64 msg_id = 1;
void TL_invokeAfterMsg::clear_msg_id() {
  msg_id_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 TL_invokeAfterMsg::msg_id() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_invokeAfterMsg.msg_id)
  return msg_id_;
}
void TL_invokeAfterMsg::set_msg_id(::google::protobuf::int64 value) {
  
  msg_id_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_invokeAfterMsg.msg_id)
}

// bytes query = 2;
void TL_invokeAfterMsg::clear_query() {
  query_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& TL_invokeAfterMsg::query() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_invokeAfterMsg.query)
  return query_.GetNoArena();
}
void TL_invokeAfterMsg::set_query(const ::std::string& value) {
  
  query_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtproto.TL_invokeAfterMsg.query)
}
#if LANG_CXX11
void TL_invokeAfterMsg::set_query(::std::string&& value) {
  
  query_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mtproto.TL_invokeAfterMsg.query)
}
#endif
void TL_invokeAfterMsg::set_query(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  query_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtproto.TL_invokeAfterMsg.query)
}
void TL_invokeAfterMsg::set_query(const void* value, size_t size) {
  
  query_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtproto.TL_invokeAfterMsg.query)
}
::std::string* TL_invokeAfterMsg::mutable_query() {
  
  // @@protoc_insertion_point(field_mutable:mtproto.TL_invokeAfterMsg.query)
  return query_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* TL_invokeAfterMsg::release_query() {
  // @@protoc_insertion_point(field_release:mtproto.TL_invokeAfterMsg.query)
  
  return query_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TL_invokeAfterMsg::set_allocated_query(::std::string* query) {
  if (query != NULL) {
    
  } else {
    
  }
  query_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), query);
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_invokeAfterMsg.query)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TL_invokeAfterMsgs::kMsgIdsFieldNumber;
const int TL_invokeAfterMsgs::kQueryFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TL_invokeAfterMsgs::TL_invokeAfterMsgs()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.TL_invokeAfterMsgs)
}
TL_invokeAfterMsgs::TL_invokeAfterMsgs(const TL_invokeAfterMsgs& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      msg_ids_(from.msg_ids_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  query_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.query().size() > 0) {
    query_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.query_);
  }
  // @@protoc_insertion_point(copy_constructor:mtproto.TL_invokeAfterMsgs)
}

void TL_invokeAfterMsgs::SharedCtor() {
  query_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

TL_invokeAfterMsgs::~TL_invokeAfterMsgs() {
  // @@protoc_insertion_point(destructor:mtproto.TL_invokeAfterMsgs)
  SharedDtor();
}

void TL_invokeAfterMsgs::SharedDtor() {
  query_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void TL_invokeAfterMsgs::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TL_invokeAfterMsgs::descriptor() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TL_invokeAfterMsgs& TL_invokeAfterMsgs::default_instance() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  return *internal_default_instance();
}

TL_invokeAfterMsgs* TL_invokeAfterMsgs::New(::google::protobuf::Arena* arena) const {
  TL_invokeAfterMsgs* n = new TL_invokeAfterMsgs;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TL_invokeAfterMsgs::Swap(TL_invokeAfterMsgs* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TL_invokeAfterMsgs::InternalSwap(TL_invokeAfterMsgs* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata TL_invokeAfterMsgs::GetMetadata() const {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TL_invokeAfterMsgs

// repeated int64 msg_ids = 1;
int TL_invokeAfterMsgs::msg_ids_size() const {
  return msg_ids_.size();
}
void TL_invokeAfterMsgs::clear_msg_ids() {
  msg_ids_.Clear();
}
::google::protobuf::int64 TL_invokeAfterMsgs::msg_ids(int index) const {
  // @@protoc_insertion_point(field_get:mtproto.TL_invokeAfterMsgs.msg_ids)
  return msg_ids_.Get(index);
}
void TL_invokeAfterMsgs::set_msg_ids(int index, ::google::protobuf::int64 value) {
  msg_ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:mtproto.TL_invokeAfterMsgs.msg_ids)
}
void TL_invokeAfterMsgs::add_msg_ids(::google::protobuf::int64 value) {
  msg_ids_.Add(value);
  // @@protoc_insertion_point(field_add:mtproto.TL_invokeAfterMsgs.msg_ids)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
TL_invokeAfterMsgs::msg_ids() const {
  // @@protoc_insertion_point(field_list:mtproto.TL_invokeAfterMsgs.msg_ids)
  return msg_ids_;
}
::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
TL_invokeAfterMsgs::mutable_msg_ids() {
  // @@protoc_insertion_point(field_mutable_list:mtproto.TL_invokeAfterMsgs.msg_ids)
  return &msg_ids_;
}

// bytes query = 2;
void TL_invokeAfterMsgs::clear_query() {
  query_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& TL_invokeAfterMsgs::query() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_invokeAfterMsgs.query)
  return query_.GetNoArena();
}
void TL_invokeAfterMsgs::set_query(const ::std::string& value) {
  
  query_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtproto.TL_invokeAfterMsgs.query)
}
#if LANG_CXX11
void TL_invokeAfterMsgs::set_query(::std::string&& value) {
  
  query_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mtproto.TL_invokeAfterMsgs.query)
}
#endif
void TL_invokeAfterMsgs::set_query(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  query_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtproto.TL_invokeAfterMsgs.query)
}
void TL_invokeAfterMsgs::set_query(const void* value, size_t size) {
  
  query_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtproto.TL_invokeAfterMsgs.query)
}
::std::string* TL_invokeAfterMsgs::mutable_query() {
  
  // @@protoc_insertion_point(field_mutable:mtproto.TL_invokeAfterMsgs.query)
  return query_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* TL_invokeAfterMsgs::release_query() {
  // @@protoc_insertion_point(field_release:mtproto.TL_invokeAfterMsgs.query)
  
  return query_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TL_invokeAfterMsgs::set_allocated_query(::std::string* query) {
  if (query != NULL) {
    
  } else {
    
  }
  query_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), query);
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_invokeAfterMsgs.query)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TL_initConnection::kApiIdFieldNumber;
const int TL_initConnection::kDeviceModelFieldNumber;
const int TL_initConnection::kSystemVersionFieldNumber;
const int TL_initConnection::kAppVersionFieldNumber;
const int TL_initConnection::kSystemLangCodeFieldNumber;
const int TL_initConnection::kLangPackFieldNumber;
const int TL_initConnection::kLangCodeFieldNumber;
const int TL_initConnection::kProxyFieldNumber;
const int TL_initConnection::kQueryFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TL_initConnection::TL_initConnection()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.TL_initConnection)
}
TL_initConnection::TL_initConnection(const TL_initConnection& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  device_model_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.device_model().size() > 0) {
    device_model_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.device_model_);
  }
  system_version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.system_version().size() > 0) {
    system_version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.system_version_);
  }
  app_version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.app_version().size() > 0) {
    app_version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.app_version_);
  }
  system_lang_code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.system_lang_code().size() > 0) {
    system_lang_code_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.system_lang_code_);
  }
  lang_pack_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.lang_pack().size() > 0) {
    lang_pack_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.lang_pack_);
  }
  lang_code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.lang_code().size() > 0) {
    lang_code_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.lang_code_);
  }
  query_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.query().size() > 0) {
    query_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.query_);
  }
  if (from.has_proxy()) {
    proxy_ = new ::mtproto::InputClientProxy(*from.proxy_);
  } else {
    proxy_ = NULL;
  }
  api_id_ = from.api_id_;
  // @@protoc_insertion_point(copy_constructor:mtproto.TL_initConnection)
}

void TL_initConnection::SharedCtor() {
  device_model_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  system_version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  app_version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  system_lang_code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  lang_pack_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  lang_code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  query_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&proxy_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&api_id_) -
      reinterpret_cast<char*>(&proxy_)) + sizeof(api_id_));
  _cached_size_ = 0;
}

TL_initConnection::~TL_initConnection() {
  // @@protoc_insertion_point(destructor:mtproto.TL_initConnection)
  SharedDtor();
}

void TL_initConnection::SharedDtor() {
  device_model_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  system_version_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  app_version_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  system_lang_code_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  lang_pack_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  lang_code_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  query_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete proxy_;
}

void TL_initConnection::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TL_initConnection::descriptor() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TL_initConnection& TL_initConnection::default_instance() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  return *internal_default_instance();
}

TL_initConnection* TL_initConnection::New(::google::protobuf::Arena* arena) const {
  TL_initConnection* n = new TL_initConnection;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TL_initConnection::Swap(TL_initConnection* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TL_initConnection::InternalSwap(TL_initConnection* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata TL_initConnection::GetMetadata() const {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TL_initConnection

// int32 api_id = 2;
void TL_initConnection::clear_api_id() {
  api_id_ = 0;
}
::google::protobuf::int32 TL_initConnection::api_id() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_initConnection.api_id)
  return api_id_;
}
void TL_initConnection::set_api_id(::google::protobuf::int32 value) {
  
  api_id_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_initConnection.api_id)
}

// string device_model = 3;
void TL_initConnection::clear_device_model() {
  device_model_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& TL_initConnection::device_model() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_initConnection.device_model)
  return device_model_.GetNoArena();
}
void TL_initConnection::set_device_model(const ::std::string& value) {
  
  device_model_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtproto.TL_initConnection.device_model)
}
#if LANG_CXX11
void TL_initConnection::set_device_model(::std::string&& value) {
  
  device_model_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mtproto.TL_initConnection.device_model)
}
#endif
void TL_initConnection::set_device_model(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  device_model_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtproto.TL_initConnection.device_model)
}
void TL_initConnection::set_device_model(const char* value, size_t size) {
  
  device_model_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtproto.TL_initConnection.device_model)
}
::std::string* TL_initConnection::mutable_device_model() {
  
  // @@protoc_insertion_point(field_mutable:mtproto.TL_initConnection.device_model)
  return device_model_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* TL_initConnection::release_device_model() {
  // @@protoc_insertion_point(field_release:mtproto.TL_initConnection.device_model)
  
  return device_model_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TL_initConnection::set_allocated_device_model(::std::string* device_model) {
  if (device_model != NULL) {
    
  } else {
    
  }
  device_model_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), device_model);
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_initConnection.device_model)
}

// string system_version = 4;
void TL_initConnection::clear_system_version() {
  system_version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& TL_initConnection::system_version() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_initConnection.system_version)
  return system_version_.GetNoArena();
}
void TL_initConnection::set_system_version(const ::std::string& value) {
  
  system_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtproto.TL_initConnection.system_version)
}
#if LANG_CXX11
void TL_initConnection::set_system_version(::std::string&& value) {
  
  system_version_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mtproto.TL_initConnection.system_version)
}
#endif
void TL_initConnection::set_system_version(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  system_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtproto.TL_initConnection.system_version)
}
void TL_initConnection::set_system_version(const char* value, size_t size) {
  
  system_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtproto.TL_initConnection.system_version)
}
::std::string* TL_initConnection::mutable_system_version() {
  
  // @@protoc_insertion_point(field_mutable:mtproto.TL_initConnection.system_version)
  return system_version_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* TL_initConnection::release_system_version() {
  // @@protoc_insertion_point(field_release:mtproto.TL_initConnection.system_version)
  
  return system_version_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TL_initConnection::set_allocated_system_version(::std::string* system_version) {
  if (system_version != NULL) {
    
  } else {
    
  }
  system_version_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), system_version);
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_initConnection.system_version)
}

// string app_version = 5;
void TL_initConnection::clear_app_version() {
  app_version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& TL_initConnection::app_version() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_initConnection.app_version)
  return app_version_.GetNoArena();
}
void TL_initConnection::set_app_version(const ::std::string& value) {
  
  app_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtproto.TL_initConnection.app_version)
}
#if LANG_CXX11
void TL_initConnection::set_app_version(::std::string&& value) {
  
  app_version_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mtproto.TL_initConnection.app_version)
}
#endif
void TL_initConnection::set_app_version(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  app_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtproto.TL_initConnection.app_version)
}
void TL_initConnection::set_app_version(const char* value, size_t size) {
  
  app_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtproto.TL_initConnection.app_version)
}
::std::string* TL_initConnection::mutable_app_version() {
  
  // @@protoc_insertion_point(field_mutable:mtproto.TL_initConnection.app_version)
  return app_version_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* TL_initConnection::release_app_version() {
  // @@protoc_insertion_point(field_release:mtproto.TL_initConnection.app_version)
  
  return app_version_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TL_initConnection::set_allocated_app_version(::std::string* app_version) {
  if (app_version != NULL) {
    
  } else {
    
  }
  app_version_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), app_version);
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_initConnection.app_version)
}

// string system_lang_code = 6;
void TL_initConnection::clear_system_lang_code() {
  system_lang_code_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& TL_initConnection::system_lang_code() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_initConnection.system_lang_code)
  return system_lang_code_.GetNoArena();
}
void TL_initConnection::set_system_lang_code(const ::std::string& value) {
  
  system_lang_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtproto.TL_initConnection.system_lang_code)
}
#if LANG_CXX11
void TL_initConnection::set_system_lang_code(::std::string&& value) {
  
  system_lang_code_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mtproto.TL_initConnection.system_lang_code)
}
#endif
void TL_initConnection::set_system_lang_code(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  system_lang_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtproto.TL_initConnection.system_lang_code)
}
void TL_initConnection::set_system_lang_code(const char* value, size_t size) {
  
  system_lang_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtproto.TL_initConnection.system_lang_code)
}
::std::string* TL_initConnection::mutable_system_lang_code() {
  
  // @@protoc_insertion_point(field_mutable:mtproto.TL_initConnection.system_lang_code)
  return system_lang_code_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* TL_initConnection::release_system_lang_code() {
  // @@protoc_insertion_point(field_release:mtproto.TL_initConnection.system_lang_code)
  
  return system_lang_code_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TL_initConnection::set_allocated_system_lang_code(::std::string* system_lang_code) {
  if (system_lang_code != NULL) {
    
  } else {
    
  }
  system_lang_code_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), system_lang_code);
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_initConnection.system_lang_code)
}

// string lang_pack = 7;
void TL_initConnection::clear_lang_pack() {
  lang_pack_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& TL_initConnection::lang_pack() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_initConnection.lang_pack)
  return lang_pack_.GetNoArena();
}
void TL_initConnection::set_lang_pack(const ::std::string& value) {
  
  lang_pack_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtproto.TL_initConnection.lang_pack)
}
#if LANG_CXX11
void TL_initConnection::set_lang_pack(::std::string&& value) {
  
  lang_pack_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mtproto.TL_initConnection.lang_pack)
}
#endif
void TL_initConnection::set_lang_pack(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  lang_pack_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtproto.TL_initConnection.lang_pack)
}
void TL_initConnection::set_lang_pack(const char* value, size_t size) {
  
  lang_pack_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtproto.TL_initConnection.lang_pack)
}
::std::string* TL_initConnection::mutable_lang_pack() {
  
  // @@protoc_insertion_point(field_mutable:mtproto.TL_initConnection.lang_pack)
  return lang_pack_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* TL_initConnection::release_lang_pack() {
  // @@protoc_insertion_point(field_release:mtproto.TL_initConnection.lang_pack)
  
  return lang_pack_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TL_initConnection::set_allocated_lang_pack(::std::string* lang_pack) {
  if (lang_pack != NULL) {
    
  } else {
    
  }
  lang_pack_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), lang_pack);
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_initConnection.lang_pack)
}

// string lang_code = 8;
void TL_initConnection::clear_lang_code() {
  lang_code_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& TL_initConnection::lang_code() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_initConnection.lang_code)
  return lang_code_.GetNoArena();
}
void TL_initConnection::set_lang_code(const ::std::string& value) {
  
  lang_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtproto.TL_initConnection.lang_code)
}
#if LANG_CXX11
void TL_initConnection::set_lang_code(::std::string&& value) {
  
  lang_code_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mtproto.TL_initConnection.lang_code)
}
#endif
void TL_initConnection::set_lang_code(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  lang_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtproto.TL_initConnection.lang_code)
}
void TL_initConnection::set_lang_code(const char* value, size_t size) {
  
  lang_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtproto.TL_initConnection.lang_code)
}
::std::string* TL_initConnection::mutable_lang_code() {
  
  // @@protoc_insertion_point(field_mutable:mtproto.TL_initConnection.lang_code)
  return lang_code_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* TL_initConnection::release_lang_code() {
  // @@protoc_insertion_point(field_release:mtproto.TL_initConnection.lang_code)
  
  return lang_code_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TL_initConnection::set_allocated_lang_code(::std::string* lang_code) {
  if (lang_code != NULL) {
    
  } else {
    
  }
  lang_code_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), lang_code);
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_initConnection.lang_code)
}

// .mtproto.InputClientProxy proxy = 9;
bool TL_initConnection::has_proxy() const {
  return this != internal_default_instance() && proxy_ != NULL;
}
void TL_initConnection::clear_proxy() {
  if (GetArenaNoVirtual() == NULL && proxy_ != NULL) delete proxy_;
  proxy_ = NULL;
}
const ::mtproto::InputClientProxy& TL_initConnection::proxy() const {
  const ::mtproto::InputClientProxy* p = proxy_;
  // @@protoc_insertion_point(field_get:mtproto.TL_initConnection.proxy)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::InputClientProxy*>(
      &::mtproto::_InputClientProxy_default_instance_);
}
::mtproto::InputClientProxy* TL_initConnection::mutable_proxy() {
  
  if (proxy_ == NULL) {
    proxy_ = new ::mtproto::InputClientProxy;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_initConnection.proxy)
  return proxy_;
}
::mtproto::InputClientProxy* TL_initConnection::release_proxy() {
  // @@protoc_insertion_point(field_release:mtproto.TL_initConnection.proxy)
  
  ::mtproto::InputClientProxy* temp = proxy_;
  proxy_ = NULL;
  return temp;
}
void TL_initConnection::set_allocated_proxy(::mtproto::InputClientProxy* proxy) {
  delete proxy_;
  proxy_ = proxy;
  if (proxy) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_initConnection.proxy)
}

// bytes query = 10;
void TL_initConnection::clear_query() {
  query_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& TL_initConnection::query() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_initConnection.query)
  return query_.GetNoArena();
}
void TL_initConnection::set_query(const ::std::string& value) {
  
  query_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtproto.TL_initConnection.query)
}
#if LANG_CXX11
void TL_initConnection::set_query(::std::string&& value) {
  
  query_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mtproto.TL_initConnection.query)
}
#endif
void TL_initConnection::set_query(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  query_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtproto.TL_initConnection.query)
}
void TL_initConnection::set_query(const void* value, size_t size) {
  
  query_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtproto.TL_initConnection.query)
}
::std::string* TL_initConnection::mutable_query() {
  
  // @@protoc_insertion_point(field_mutable:mtproto.TL_initConnection.query)
  return query_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* TL_initConnection::release_query() {
  // @@protoc_insertion_point(field_release:mtproto.TL_initConnection.query)
  
  return query_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TL_initConnection::set_allocated_query(::std::string* query) {
  if (query != NULL) {
    
  } else {
    
  }
  query_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), query);
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_initConnection.query)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TL_invokeWithLayer::kLayerFieldNumber;
const int TL_invokeWithLayer::kQueryFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TL_invokeWithLayer::TL_invokeWithLayer()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.TL_invokeWithLayer)
}
TL_invokeWithLayer::TL_invokeWithLayer(const TL_invokeWithLayer& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  query_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.query().size() > 0) {
    query_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.query_);
  }
  layer_ = from.layer_;
  // @@protoc_insertion_point(copy_constructor:mtproto.TL_invokeWithLayer)
}

void TL_invokeWithLayer::SharedCtor() {
  query_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  layer_ = 0;
  _cached_size_ = 0;
}

TL_invokeWithLayer::~TL_invokeWithLayer() {
  // @@protoc_insertion_point(destructor:mtproto.TL_invokeWithLayer)
  SharedDtor();
}

void TL_invokeWithLayer::SharedDtor() {
  query_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void TL_invokeWithLayer::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TL_invokeWithLayer::descriptor() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TL_invokeWithLayer& TL_invokeWithLayer::default_instance() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  return *internal_default_instance();
}

TL_invokeWithLayer* TL_invokeWithLayer::New(::google::protobuf::Arena* arena) const {
  TL_invokeWithLayer* n = new TL_invokeWithLayer;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TL_invokeWithLayer::Swap(TL_invokeWithLayer* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TL_invokeWithLayer::InternalSwap(TL_invokeWithLayer* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata TL_invokeWithLayer::GetMetadata() const {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TL_invokeWithLayer

// int32 layer = 1;
void TL_invokeWithLayer::clear_layer() {
  layer_ = 0;
}
::google::protobuf::int32 TL_invokeWithLayer::layer() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_invokeWithLayer.layer)
  return layer_;
}
void TL_invokeWithLayer::set_layer(::google::protobuf::int32 value) {
  
  layer_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_invokeWithLayer.layer)
}

// bytes query = 2;
void TL_invokeWithLayer::clear_query() {
  query_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& TL_invokeWithLayer::query() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_invokeWithLayer.query)
  return query_.GetNoArena();
}
void TL_invokeWithLayer::set_query(const ::std::string& value) {
  
  query_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtproto.TL_invokeWithLayer.query)
}
#if LANG_CXX11
void TL_invokeWithLayer::set_query(::std::string&& value) {
  
  query_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mtproto.TL_invokeWithLayer.query)
}
#endif
void TL_invokeWithLayer::set_query(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  query_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtproto.TL_invokeWithLayer.query)
}
void TL_invokeWithLayer::set_query(const void* value, size_t size) {
  
  query_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtproto.TL_invokeWithLayer.query)
}
::std::string* TL_invokeWithLayer::mutable_query() {
  
  // @@protoc_insertion_point(field_mutable:mtproto.TL_invokeWithLayer.query)
  return query_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* TL_invokeWithLayer::release_query() {
  // @@protoc_insertion_point(field_release:mtproto.TL_invokeWithLayer.query)
  
  return query_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TL_invokeWithLayer::set_allocated_query(::std::string* query) {
  if (query != NULL) {
    
  } else {
    
  }
  query_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), query);
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_invokeWithLayer.query)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TL_invokeWithoutUpdates::kQueryFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TL_invokeWithoutUpdates::TL_invokeWithoutUpdates()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.TL_invokeWithoutUpdates)
}
TL_invokeWithoutUpdates::TL_invokeWithoutUpdates(const TL_invokeWithoutUpdates& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  query_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.query().size() > 0) {
    query_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.query_);
  }
  // @@protoc_insertion_point(copy_constructor:mtproto.TL_invokeWithoutUpdates)
}

void TL_invokeWithoutUpdates::SharedCtor() {
  query_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

TL_invokeWithoutUpdates::~TL_invokeWithoutUpdates() {
  // @@protoc_insertion_point(destructor:mtproto.TL_invokeWithoutUpdates)
  SharedDtor();
}

void TL_invokeWithoutUpdates::SharedDtor() {
  query_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void TL_invokeWithoutUpdates::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TL_invokeWithoutUpdates::descriptor() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TL_invokeWithoutUpdates& TL_invokeWithoutUpdates::default_instance() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  return *internal_default_instance();
}

TL_invokeWithoutUpdates* TL_invokeWithoutUpdates::New(::google::protobuf::Arena* arena) const {
  TL_invokeWithoutUpdates* n = new TL_invokeWithoutUpdates;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TL_invokeWithoutUpdates::Swap(TL_invokeWithoutUpdates* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TL_invokeWithoutUpdates::InternalSwap(TL_invokeWithoutUpdates* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata TL_invokeWithoutUpdates::GetMetadata() const {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TL_invokeWithoutUpdates

// bytes query = 1;
void TL_invokeWithoutUpdates::clear_query() {
  query_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& TL_invokeWithoutUpdates::query() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_invokeWithoutUpdates.query)
  return query_.GetNoArena();
}
void TL_invokeWithoutUpdates::set_query(const ::std::string& value) {
  
  query_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtproto.TL_invokeWithoutUpdates.query)
}
#if LANG_CXX11
void TL_invokeWithoutUpdates::set_query(::std::string&& value) {
  
  query_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mtproto.TL_invokeWithoutUpdates.query)
}
#endif
void TL_invokeWithoutUpdates::set_query(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  query_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtproto.TL_invokeWithoutUpdates.query)
}
void TL_invokeWithoutUpdates::set_query(const void* value, size_t size) {
  
  query_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtproto.TL_invokeWithoutUpdates.query)
}
::std::string* TL_invokeWithoutUpdates::mutable_query() {
  
  // @@protoc_insertion_point(field_mutable:mtproto.TL_invokeWithoutUpdates.query)
  return query_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* TL_invokeWithoutUpdates::release_query() {
  // @@protoc_insertion_point(field_release:mtproto.TL_invokeWithoutUpdates.query)
  
  return query_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TL_invokeWithoutUpdates::set_allocated_query(::std::string* query) {
  if (query != NULL) {
    
  } else {
    
  }
  query_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), query);
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_invokeWithoutUpdates.query)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TL_invokeWithMessagesRange::kRangeFieldNumber;
const int TL_invokeWithMessagesRange::kQueryFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TL_invokeWithMessagesRange::TL_invokeWithMessagesRange()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.TL_invokeWithMessagesRange)
}
TL_invokeWithMessagesRange::TL_invokeWithMessagesRange(const TL_invokeWithMessagesRange& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  query_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.query().size() > 0) {
    query_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.query_);
  }
  if (from.has_range()) {
    range_ = new ::mtproto::MessageRange(*from.range_);
  } else {
    range_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:mtproto.TL_invokeWithMessagesRange)
}

void TL_invokeWithMessagesRange::SharedCtor() {
  query_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  range_ = NULL;
  _cached_size_ = 0;
}

TL_invokeWithMessagesRange::~TL_invokeWithMessagesRange() {
  // @@protoc_insertion_point(destructor:mtproto.TL_invokeWithMessagesRange)
  SharedDtor();
}

void TL_invokeWithMessagesRange::SharedDtor() {
  query_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete range_;
}

void TL_invokeWithMessagesRange::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TL_invokeWithMessagesRange::descriptor() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TL_invokeWithMessagesRange& TL_invokeWithMessagesRange::default_instance() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  return *internal_default_instance();
}

TL_invokeWithMessagesRange* TL_invokeWithMessagesRange::New(::google::protobuf::Arena* arena) const {
  TL_invokeWithMessagesRange* n = new TL_invokeWithMessagesRange;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TL_invokeWithMessagesRange::Swap(TL_invokeWithMessagesRange* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TL_invokeWithMessagesRange::InternalSwap(TL_invokeWithMessagesRange* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata TL_invokeWithMessagesRange::GetMetadata() const {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TL_invokeWithMessagesRange

// .mtproto.MessageRange range = 1;
bool TL_invokeWithMessagesRange::has_range() const {
  return this != internal_default_instance() && range_ != NULL;
}
void TL_invokeWithMessagesRange::clear_range() {
  if (GetArenaNoVirtual() == NULL && range_ != NULL) delete range_;
  range_ = NULL;
}
const ::mtproto::MessageRange& TL_invokeWithMessagesRange::range() const {
  const ::mtproto::MessageRange* p = range_;
  // @@protoc_insertion_point(field_get:mtproto.TL_invokeWithMessagesRange.range)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::MessageRange*>(
      &::mtproto::_MessageRange_default_instance_);
}
::mtproto::MessageRange* TL_invokeWithMessagesRange::mutable_range() {
  
  if (range_ == NULL) {
    range_ = new ::mtproto::MessageRange;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_invokeWithMessagesRange.range)
  return range_;
}
::mtproto::MessageRange* TL_invokeWithMessagesRange::release_range() {
  // @@protoc_insertion_point(field_release:mtproto.TL_invokeWithMessagesRange.range)
  
  ::mtproto::MessageRange* temp = range_;
  range_ = NULL;
  return temp;
}
void TL_invokeWithMessagesRange::set_allocated_range(::mtproto::MessageRange* range) {
  delete range_;
  range_ = range;
  if (range) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_invokeWithMessagesRange.range)
}

// bytes query = 2;
void TL_invokeWithMessagesRange::clear_query() {
  query_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& TL_invokeWithMessagesRange::query() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_invokeWithMessagesRange.query)
  return query_.GetNoArena();
}
void TL_invokeWithMessagesRange::set_query(const ::std::string& value) {
  
  query_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtproto.TL_invokeWithMessagesRange.query)
}
#if LANG_CXX11
void TL_invokeWithMessagesRange::set_query(::std::string&& value) {
  
  query_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mtproto.TL_invokeWithMessagesRange.query)
}
#endif
void TL_invokeWithMessagesRange::set_query(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  query_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtproto.TL_invokeWithMessagesRange.query)
}
void TL_invokeWithMessagesRange::set_query(const void* value, size_t size) {
  
  query_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtproto.TL_invokeWithMessagesRange.query)
}
::std::string* TL_invokeWithMessagesRange::mutable_query() {
  
  // @@protoc_insertion_point(field_mutable:mtproto.TL_invokeWithMessagesRange.query)
  return query_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* TL_invokeWithMessagesRange::release_query() {
  // @@protoc_insertion_point(field_release:mtproto.TL_invokeWithMessagesRange.query)
  
  return query_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TL_invokeWithMessagesRange::set_allocated_query(::std::string* query) {
  if (query != NULL) {
    
  } else {
    
  }
  query_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), query);
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_invokeWithMessagesRange.query)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TL_invokeWithTakeout::kTakeoutIdFieldNumber;
const int TL_invokeWithTakeout::kQueryFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TL_invokeWithTakeout::TL_invokeWithTakeout()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.TL_invokeWithTakeout)
}
TL_invokeWithTakeout::TL_invokeWithTakeout(const TL_invokeWithTakeout& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  query_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.query().size() > 0) {
    query_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.query_);
  }
  takeout_id_ = from.takeout_id_;
  // @@protoc_insertion_point(copy_constructor:mtproto.TL_invokeWithTakeout)
}

void TL_invokeWithTakeout::SharedCtor() {
  query_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  takeout_id_ = GOOGLE_LONGLONG(0);
  _cached_size_ = 0;
}

TL_invokeWithTakeout::~TL_invokeWithTakeout() {
  // @@protoc_insertion_point(destructor:mtproto.TL_invokeWithTakeout)
  SharedDtor();
}

void TL_invokeWithTakeout::SharedDtor() {
  query_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void TL_invokeWithTakeout::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TL_invokeWithTakeout::descriptor() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TL_invokeWithTakeout& TL_invokeWithTakeout::default_instance() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  return *internal_default_instance();
}

TL_invokeWithTakeout* TL_invokeWithTakeout::New(::google::protobuf::Arena* arena) const {
  TL_invokeWithTakeout* n = new TL_invokeWithTakeout;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TL_invokeWithTakeout::Swap(TL_invokeWithTakeout* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TL_invokeWithTakeout::InternalSwap(TL_invokeWithTakeout* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata TL_invokeWithTakeout::GetMetadata() const {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TL_invokeWithTakeout

// int64 takeout_id = 1;
void TL_invokeWithTakeout::clear_takeout_id() {
  takeout_id_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 TL_invokeWithTakeout::takeout_id() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_invokeWithTakeout.takeout_id)
  return takeout_id_;
}
void TL_invokeWithTakeout::set_takeout_id(::google::protobuf::int64 value) {
  
  takeout_id_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_invokeWithTakeout.takeout_id)
}

// bytes query = 2;
void TL_invokeWithTakeout::clear_query() {
  query_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& TL_invokeWithTakeout::query() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_invokeWithTakeout.query)
  return query_.GetNoArena();
}
void TL_invokeWithTakeout::set_query(const ::std::string& value) {
  
  query_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtproto.TL_invokeWithTakeout.query)
}
#if LANG_CXX11
void TL_invokeWithTakeout::set_query(::std::string&& value) {
  
  query_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mtproto.TL_invokeWithTakeout.query)
}
#endif
void TL_invokeWithTakeout::set_query(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  query_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtproto.TL_invokeWithTakeout.query)
}
void TL_invokeWithTakeout::set_query(const void* value, size_t size) {
  
  query_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtproto.TL_invokeWithTakeout.query)
}
::std::string* TL_invokeWithTakeout::mutable_query() {
  
  // @@protoc_insertion_point(field_mutable:mtproto.TL_invokeWithTakeout.query)
  return query_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* TL_invokeWithTakeout::release_query() {
  // @@protoc_insertion_point(field_release:mtproto.TL_invokeWithTakeout.query)
  
  return query_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TL_invokeWithTakeout::set_allocated_query(::std::string* query) {
  if (query != NULL) {
    
  } else {
    
  }
  query_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), query);
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_invokeWithTakeout.query)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TL_auth_sendCode::kAllowFlashcallFieldNumber;
const int TL_auth_sendCode::kPhoneNumberFieldNumber;
const int TL_auth_sendCode::kCurrentNumberFieldNumber;
const int TL_auth_sendCode::kApiIdFieldNumber;
const int TL_auth_sendCode::kApiHashFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TL_auth_sendCode::TL_auth_sendCode()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.TL_auth_sendCode)
}
TL_auth_sendCode::TL_auth_sendCode(const TL_auth_sendCode& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  phone_number_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.phone_number().size() > 0) {
    phone_number_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.phone_number_);
  }
  api_hash_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.api_hash().size() > 0) {
    api_hash_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.api_hash_);
  }
  if (from.has_current_number()) {
    current_number_ = new ::mtproto::Bool(*from.current_number_);
  } else {
    current_number_ = NULL;
  }
  ::memcpy(&allow_flashcall_, &from.allow_flashcall_,
    static_cast<size_t>(reinterpret_cast<char*>(&api_id_) -
    reinterpret_cast<char*>(&allow_flashcall_)) + sizeof(api_id_));
  // @@protoc_insertion_point(copy_constructor:mtproto.TL_auth_sendCode)
}

void TL_auth_sendCode::SharedCtor() {
  phone_number_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  api_hash_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&current_number_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&api_id_) -
      reinterpret_cast<char*>(&current_number_)) + sizeof(api_id_));
  _cached_size_ = 0;
}

TL_auth_sendCode::~TL_auth_sendCode() {
  // @@protoc_insertion_point(destructor:mtproto.TL_auth_sendCode)
  SharedDtor();
}

void TL_auth_sendCode::SharedDtor() {
  phone_number_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  api_hash_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete current_number_;
}

void TL_auth_sendCode::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TL_auth_sendCode::descriptor() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TL_auth_sendCode& TL_auth_sendCode::default_instance() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  return *internal_default_instance();
}

TL_auth_sendCode* TL_auth_sendCode::New(::google::protobuf::Arena* arena) const {
  TL_auth_sendCode* n = new TL_auth_sendCode;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TL_auth_sendCode::Swap(TL_auth_sendCode* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TL_auth_sendCode::InternalSwap(TL_auth_sendCode* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata TL_auth_sendCode::GetMetadata() const {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TL_auth_sendCode

// bool allow_flashcall = 2;
void TL_auth_sendCode::clear_allow_flashcall() {
  allow_flashcall_ = false;
}
bool TL_auth_sendCode::allow_flashcall() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_auth_sendCode.allow_flashcall)
  return allow_flashcall_;
}
void TL_auth_sendCode::set_allow_flashcall(bool value) {
  
  allow_flashcall_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_auth_sendCode.allow_flashcall)
}

// string phone_number = 3;
void TL_auth_sendCode::clear_phone_number() {
  phone_number_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& TL_auth_sendCode::phone_number() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_auth_sendCode.phone_number)
  return phone_number_.GetNoArena();
}
void TL_auth_sendCode::set_phone_number(const ::std::string& value) {
  
  phone_number_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtproto.TL_auth_sendCode.phone_number)
}
#if LANG_CXX11
void TL_auth_sendCode::set_phone_number(::std::string&& value) {
  
  phone_number_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mtproto.TL_auth_sendCode.phone_number)
}
#endif
void TL_auth_sendCode::set_phone_number(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  phone_number_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtproto.TL_auth_sendCode.phone_number)
}
void TL_auth_sendCode::set_phone_number(const char* value, size_t size) {
  
  phone_number_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtproto.TL_auth_sendCode.phone_number)
}
::std::string* TL_auth_sendCode::mutable_phone_number() {
  
  // @@protoc_insertion_point(field_mutable:mtproto.TL_auth_sendCode.phone_number)
  return phone_number_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* TL_auth_sendCode::release_phone_number() {
  // @@protoc_insertion_point(field_release:mtproto.TL_auth_sendCode.phone_number)
  
  return phone_number_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TL_auth_sendCode::set_allocated_phone_number(::std::string* phone_number) {
  if (phone_number != NULL) {
    
  } else {
    
  }
  phone_number_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), phone_number);
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_auth_sendCode.phone_number)
}

// .mtproto.Bool current_number = 4;
bool TL_auth_sendCode::has_current_number() const {
  return this != internal_default_instance() && current_number_ != NULL;
}
void TL_auth_sendCode::clear_current_number() {
  if (GetArenaNoVirtual() == NULL && current_number_ != NULL) delete current_number_;
  current_number_ = NULL;
}
const ::mtproto::Bool& TL_auth_sendCode::current_number() const {
  const ::mtproto::Bool* p = current_number_;
  // @@protoc_insertion_point(field_get:mtproto.TL_auth_sendCode.current_number)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::Bool*>(
      &::mtproto::_Bool_default_instance_);
}
::mtproto::Bool* TL_auth_sendCode::mutable_current_number() {
  
  if (current_number_ == NULL) {
    current_number_ = new ::mtproto::Bool;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_auth_sendCode.current_number)
  return current_number_;
}
::mtproto::Bool* TL_auth_sendCode::release_current_number() {
  // @@protoc_insertion_point(field_release:mtproto.TL_auth_sendCode.current_number)
  
  ::mtproto::Bool* temp = current_number_;
  current_number_ = NULL;
  return temp;
}
void TL_auth_sendCode::set_allocated_current_number(::mtproto::Bool* current_number) {
  delete current_number_;
  current_number_ = current_number;
  if (current_number) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_auth_sendCode.current_number)
}

// int32 api_id = 5;
void TL_auth_sendCode::clear_api_id() {
  api_id_ = 0;
}
::google::protobuf::int32 TL_auth_sendCode::api_id() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_auth_sendCode.api_id)
  return api_id_;
}
void TL_auth_sendCode::set_api_id(::google::protobuf::int32 value) {
  
  api_id_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_auth_sendCode.api_id)
}

// string api_hash = 6;
void TL_auth_sendCode::clear_api_hash() {
  api_hash_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& TL_auth_sendCode::api_hash() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_auth_sendCode.api_hash)
  return api_hash_.GetNoArena();
}
void TL_auth_sendCode::set_api_hash(const ::std::string& value) {
  
  api_hash_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtproto.TL_auth_sendCode.api_hash)
}
#if LANG_CXX11
void TL_auth_sendCode::set_api_hash(::std::string&& value) {
  
  api_hash_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mtproto.TL_auth_sendCode.api_hash)
}
#endif
void TL_auth_sendCode::set_api_hash(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  api_hash_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtproto.TL_auth_sendCode.api_hash)
}
void TL_auth_sendCode::set_api_hash(const char* value, size_t size) {
  
  api_hash_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtproto.TL_auth_sendCode.api_hash)
}
::std::string* TL_auth_sendCode::mutable_api_hash() {
  
  // @@protoc_insertion_point(field_mutable:mtproto.TL_auth_sendCode.api_hash)
  return api_hash_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* TL_auth_sendCode::release_api_hash() {
  // @@protoc_insertion_point(field_release:mtproto.TL_auth_sendCode.api_hash)
  
  return api_hash_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TL_auth_sendCode::set_allocated_api_hash(::std::string* api_hash) {
  if (api_hash != NULL) {
    
  } else {
    
  }
  api_hash_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), api_hash);
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_auth_sendCode.api_hash)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TL_auth_signUp::kPhoneNumberFieldNumber;
const int TL_auth_signUp::kPhoneCodeHashFieldNumber;
const int TL_auth_signUp::kPhoneCodeFieldNumber;
const int TL_auth_signUp::kFirstNameFieldNumber;
const int TL_auth_signUp::kLastNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TL_auth_signUp::TL_auth_signUp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.TL_auth_signUp)
}
TL_auth_signUp::TL_auth_signUp(const TL_auth_signUp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  phone_number_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.phone_number().size() > 0) {
    phone_number_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.phone_number_);
  }
  phone_code_hash_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.phone_code_hash().size() > 0) {
    phone_code_hash_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.phone_code_hash_);
  }
  phone_code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.phone_code().size() > 0) {
    phone_code_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.phone_code_);
  }
  first_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.first_name().size() > 0) {
    first_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.first_name_);
  }
  last_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.last_name().size() > 0) {
    last_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.last_name_);
  }
  // @@protoc_insertion_point(copy_constructor:mtproto.TL_auth_signUp)
}

void TL_auth_signUp::SharedCtor() {
  phone_number_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  phone_code_hash_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  phone_code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  first_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  last_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

TL_auth_signUp::~TL_auth_signUp() {
  // @@protoc_insertion_point(destructor:mtproto.TL_auth_signUp)
  SharedDtor();
}

void TL_auth_signUp::SharedDtor() {
  phone_number_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  phone_code_hash_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  phone_code_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  first_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  last_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void TL_auth_signUp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TL_auth_signUp::descriptor() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TL_auth_signUp& TL_auth_signUp::default_instance() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  return *internal_default_instance();
}

TL_auth_signUp* TL_auth_signUp::New(::google::protobuf::Arena* arena) const {
  TL_auth_signUp* n = new TL_auth_signUp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TL_auth_signUp::Swap(TL_auth_signUp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TL_auth_signUp::InternalSwap(TL_auth_signUp* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata TL_auth_signUp::GetMetadata() const {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TL_auth_signUp

// string phone_number = 1;
void TL_auth_signUp::clear_phone_number() {
  phone_number_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& TL_auth_signUp::phone_number() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_auth_signUp.phone_number)
  return phone_number_.GetNoArena();
}
void TL_auth_signUp::set_phone_number(const ::std::string& value) {
  
  phone_number_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtproto.TL_auth_signUp.phone_number)
}
#if LANG_CXX11
void TL_auth_signUp::set_phone_number(::std::string&& value) {
  
  phone_number_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mtproto.TL_auth_signUp.phone_number)
}
#endif
void TL_auth_signUp::set_phone_number(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  phone_number_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtproto.TL_auth_signUp.phone_number)
}
void TL_auth_signUp::set_phone_number(const char* value, size_t size) {
  
  phone_number_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtproto.TL_auth_signUp.phone_number)
}
::std::string* TL_auth_signUp::mutable_phone_number() {
  
  // @@protoc_insertion_point(field_mutable:mtproto.TL_auth_signUp.phone_number)
  return phone_number_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* TL_auth_signUp::release_phone_number() {
  // @@protoc_insertion_point(field_release:mtproto.TL_auth_signUp.phone_number)
  
  return phone_number_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TL_auth_signUp::set_allocated_phone_number(::std::string* phone_number) {
  if (phone_number != NULL) {
    
  } else {
    
  }
  phone_number_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), phone_number);
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_auth_signUp.phone_number)
}

// string phone_code_hash = 2;
void TL_auth_signUp::clear_phone_code_hash() {
  phone_code_hash_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& TL_auth_signUp::phone_code_hash() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_auth_signUp.phone_code_hash)
  return phone_code_hash_.GetNoArena();
}
void TL_auth_signUp::set_phone_code_hash(const ::std::string& value) {
  
  phone_code_hash_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtproto.TL_auth_signUp.phone_code_hash)
}
#if LANG_CXX11
void TL_auth_signUp::set_phone_code_hash(::std::string&& value) {
  
  phone_code_hash_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mtproto.TL_auth_signUp.phone_code_hash)
}
#endif
void TL_auth_signUp::set_phone_code_hash(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  phone_code_hash_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtproto.TL_auth_signUp.phone_code_hash)
}
void TL_auth_signUp::set_phone_code_hash(const char* value, size_t size) {
  
  phone_code_hash_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtproto.TL_auth_signUp.phone_code_hash)
}
::std::string* TL_auth_signUp::mutable_phone_code_hash() {
  
  // @@protoc_insertion_point(field_mutable:mtproto.TL_auth_signUp.phone_code_hash)
  return phone_code_hash_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* TL_auth_signUp::release_phone_code_hash() {
  // @@protoc_insertion_point(field_release:mtproto.TL_auth_signUp.phone_code_hash)
  
  return phone_code_hash_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TL_auth_signUp::set_allocated_phone_code_hash(::std::string* phone_code_hash) {
  if (phone_code_hash != NULL) {
    
  } else {
    
  }
  phone_code_hash_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), phone_code_hash);
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_auth_signUp.phone_code_hash)
}

// string phone_code = 3;
void TL_auth_signUp::clear_phone_code() {
  phone_code_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& TL_auth_signUp::phone_code() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_auth_signUp.phone_code)
  return phone_code_.GetNoArena();
}
void TL_auth_signUp::set_phone_code(const ::std::string& value) {
  
  phone_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtproto.TL_auth_signUp.phone_code)
}
#if LANG_CXX11
void TL_auth_signUp::set_phone_code(::std::string&& value) {
  
  phone_code_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mtproto.TL_auth_signUp.phone_code)
}
#endif
void TL_auth_signUp::set_phone_code(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  phone_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtproto.TL_auth_signUp.phone_code)
}
void TL_auth_signUp::set_phone_code(const char* value, size_t size) {
  
  phone_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtproto.TL_auth_signUp.phone_code)
}
::std::string* TL_auth_signUp::mutable_phone_code() {
  
  // @@protoc_insertion_point(field_mutable:mtproto.TL_auth_signUp.phone_code)
  return phone_code_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* TL_auth_signUp::release_phone_code() {
  // @@protoc_insertion_point(field_release:mtproto.TL_auth_signUp.phone_code)
  
  return phone_code_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TL_auth_signUp::set_allocated_phone_code(::std::string* phone_code) {
  if (phone_code != NULL) {
    
  } else {
    
  }
  phone_code_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), phone_code);
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_auth_signUp.phone_code)
}

// string first_name = 4;
void TL_auth_signUp::clear_first_name() {
  first_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& TL_auth_signUp::first_name() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_auth_signUp.first_name)
  return first_name_.GetNoArena();
}
void TL_auth_signUp::set_first_name(const ::std::string& value) {
  
  first_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtproto.TL_auth_signUp.first_name)
}
#if LANG_CXX11
void TL_auth_signUp::set_first_name(::std::string&& value) {
  
  first_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mtproto.TL_auth_signUp.first_name)
}
#endif
void TL_auth_signUp::set_first_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  first_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtproto.TL_auth_signUp.first_name)
}
void TL_auth_signUp::set_first_name(const char* value, size_t size) {
  
  first_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtproto.TL_auth_signUp.first_name)
}
::std::string* TL_auth_signUp::mutable_first_name() {
  
  // @@protoc_insertion_point(field_mutable:mtproto.TL_auth_signUp.first_name)
  return first_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* TL_auth_signUp::release_first_name() {
  // @@protoc_insertion_point(field_release:mtproto.TL_auth_signUp.first_name)
  
  return first_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TL_auth_signUp::set_allocated_first_name(::std::string* first_name) {
  if (first_name != NULL) {
    
  } else {
    
  }
  first_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), first_name);
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_auth_signUp.first_name)
}

// string last_name = 5;
void TL_auth_signUp::clear_last_name() {
  last_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& TL_auth_signUp::last_name() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_auth_signUp.last_name)
  return last_name_.GetNoArena();
}
void TL_auth_signUp::set_last_name(const ::std::string& value) {
  
  last_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtproto.TL_auth_signUp.last_name)
}
#if LANG_CXX11
void TL_auth_signUp::set_last_name(::std::string&& value) {
  
  last_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mtproto.TL_auth_signUp.last_name)
}
#endif
void TL_auth_signUp::set_last_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  last_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtproto.TL_auth_signUp.last_name)
}
void TL_auth_signUp::set_last_name(const char* value, size_t size) {
  
  last_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtproto.TL_auth_signUp.last_name)
}
::std::string* TL_auth_signUp::mutable_last_name() {
  
  // @@protoc_insertion_point(field_mutable:mtproto.TL_auth_signUp.last_name)
  return last_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* TL_auth_signUp::release_last_name() {
  // @@protoc_insertion_point(field_release:mtproto.TL_auth_signUp.last_name)
  
  return last_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TL_auth_signUp::set_allocated_last_name(::std::string* last_name) {
  if (last_name != NULL) {
    
  } else {
    
  }
  last_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), last_name);
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_auth_signUp.last_name)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TL_auth_signIn::kPhoneNumberFieldNumber;
const int TL_auth_signIn::kPhoneCodeHashFieldNumber;
const int TL_auth_signIn::kPhoneCodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TL_auth_signIn::TL_auth_signIn()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.TL_auth_signIn)
}
TL_auth_signIn::TL_auth_signIn(const TL_auth_signIn& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  phone_number_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.phone_number().size() > 0) {
    phone_number_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.phone_number_);
  }
  phone_code_hash_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.phone_code_hash().size() > 0) {
    phone_code_hash_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.phone_code_hash_);
  }
  phone_code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.phone_code().size() > 0) {
    phone_code_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.phone_code_);
  }
  // @@protoc_insertion_point(copy_constructor:mtproto.TL_auth_signIn)
}

void TL_auth_signIn::SharedCtor() {
  phone_number_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  phone_code_hash_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  phone_code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

TL_auth_signIn::~TL_auth_signIn() {
  // @@protoc_insertion_point(destructor:mtproto.TL_auth_signIn)
  SharedDtor();
}

void TL_auth_signIn::SharedDtor() {
  phone_number_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  phone_code_hash_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  phone_code_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void TL_auth_signIn::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TL_auth_signIn::descriptor() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TL_auth_signIn& TL_auth_signIn::default_instance() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  return *internal_default_instance();
}

TL_auth_signIn* TL_auth_signIn::New(::google::protobuf::Arena* arena) const {
  TL_auth_signIn* n = new TL_auth_signIn;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TL_auth_signIn::Swap(TL_auth_signIn* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TL_auth_signIn::InternalSwap(TL_auth_signIn* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata TL_auth_signIn::GetMetadata() const {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TL_auth_signIn

// string phone_number = 1;
void TL_auth_signIn::clear_phone_number() {
  phone_number_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& TL_auth_signIn::phone_number() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_auth_signIn.phone_number)
  return phone_number_.GetNoArena();
}
void TL_auth_signIn::set_phone_number(const ::std::string& value) {
  
  phone_number_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtproto.TL_auth_signIn.phone_number)
}
#if LANG_CXX11
void TL_auth_signIn::set_phone_number(::std::string&& value) {
  
  phone_number_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mtproto.TL_auth_signIn.phone_number)
}
#endif
void TL_auth_signIn::set_phone_number(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  phone_number_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtproto.TL_auth_signIn.phone_number)
}
void TL_auth_signIn::set_phone_number(const char* value, size_t size) {
  
  phone_number_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtproto.TL_auth_signIn.phone_number)
}
::std::string* TL_auth_signIn::mutable_phone_number() {
  
  // @@protoc_insertion_point(field_mutable:mtproto.TL_auth_signIn.phone_number)
  return phone_number_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* TL_auth_signIn::release_phone_number() {
  // @@protoc_insertion_point(field_release:mtproto.TL_auth_signIn.phone_number)
  
  return phone_number_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TL_auth_signIn::set_allocated_phone_number(::std::string* phone_number) {
  if (phone_number != NULL) {
    
  } else {
    
  }
  phone_number_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), phone_number);
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_auth_signIn.phone_number)
}

// string phone_code_hash = 2;
void TL_auth_signIn::clear_phone_code_hash() {
  phone_code_hash_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& TL_auth_signIn::phone_code_hash() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_auth_signIn.phone_code_hash)
  return phone_code_hash_.GetNoArena();
}
void TL_auth_signIn::set_phone_code_hash(const ::std::string& value) {
  
  phone_code_hash_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtproto.TL_auth_signIn.phone_code_hash)
}
#if LANG_CXX11
void TL_auth_signIn::set_phone_code_hash(::std::string&& value) {
  
  phone_code_hash_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mtproto.TL_auth_signIn.phone_code_hash)
}
#endif
void TL_auth_signIn::set_phone_code_hash(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  phone_code_hash_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtproto.TL_auth_signIn.phone_code_hash)
}
void TL_auth_signIn::set_phone_code_hash(const char* value, size_t size) {
  
  phone_code_hash_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtproto.TL_auth_signIn.phone_code_hash)
}
::std::string* TL_auth_signIn::mutable_phone_code_hash() {
  
  // @@protoc_insertion_point(field_mutable:mtproto.TL_auth_signIn.phone_code_hash)
  return phone_code_hash_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* TL_auth_signIn::release_phone_code_hash() {
  // @@protoc_insertion_point(field_release:mtproto.TL_auth_signIn.phone_code_hash)
  
  return phone_code_hash_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TL_auth_signIn::set_allocated_phone_code_hash(::std::string* phone_code_hash) {
  if (phone_code_hash != NULL) {
    
  } else {
    
  }
  phone_code_hash_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), phone_code_hash);
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_auth_signIn.phone_code_hash)
}

// string phone_code = 3;
void TL_auth_signIn::clear_phone_code() {
  phone_code_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& TL_auth_signIn::phone_code() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_auth_signIn.phone_code)
  return phone_code_.GetNoArena();
}
void TL_auth_signIn::set_phone_code(const ::std::string& value) {
  
  phone_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtproto.TL_auth_signIn.phone_code)
}
#if LANG_CXX11
void TL_auth_signIn::set_phone_code(::std::string&& value) {
  
  phone_code_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mtproto.TL_auth_signIn.phone_code)
}
#endif
void TL_auth_signIn::set_phone_code(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  phone_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtproto.TL_auth_signIn.phone_code)
}
void TL_auth_signIn::set_phone_code(const char* value, size_t size) {
  
  phone_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtproto.TL_auth_signIn.phone_code)
}
::std::string* TL_auth_signIn::mutable_phone_code() {
  
  // @@protoc_insertion_point(field_mutable:mtproto.TL_auth_signIn.phone_code)
  return phone_code_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* TL_auth_signIn::release_phone_code() {
  // @@protoc_insertion_point(field_release:mtproto.TL_auth_signIn.phone_code)
  
  return phone_code_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TL_auth_signIn::set_allocated_phone_code(::std::string* phone_code) {
  if (phone_code != NULL) {
    
  } else {
    
  }
  phone_code_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), phone_code);
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_auth_signIn.phone_code)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TL_auth_logOut::TL_auth_logOut()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.TL_auth_logOut)
}
TL_auth_logOut::TL_auth_logOut(const TL_auth_logOut& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:mtproto.TL_auth_logOut)
}

void TL_auth_logOut::SharedCtor() {
  _cached_size_ = 0;
}

TL_auth_logOut::~TL_auth_logOut() {
  // @@protoc_insertion_point(destructor:mtproto.TL_auth_logOut)
  SharedDtor();
}

void TL_auth_logOut::SharedDtor() {
}

void TL_auth_logOut::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TL_auth_logOut::descriptor() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TL_auth_logOut& TL_auth_logOut::default_instance() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  return *internal_default_instance();
}

TL_auth_logOut* TL_auth_logOut::New(::google::protobuf::Arena* arena) const {
  TL_auth_logOut* n = new TL_auth_logOut;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TL_auth_logOut::Swap(TL_auth_logOut* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TL_auth_logOut::InternalSwap(TL_auth_logOut* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata TL_auth_logOut::GetMetadata() const {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TL_auth_logOut

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TL_auth_resetAuthorizations::TL_auth_resetAuthorizations()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.TL_auth_resetAuthorizations)
}
TL_auth_resetAuthorizations::TL_auth_resetAuthorizations(const TL_auth_resetAuthorizations& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:mtproto.TL_auth_resetAuthorizations)
}

void TL_auth_resetAuthorizations::SharedCtor() {
  _cached_size_ = 0;
}

TL_auth_resetAuthorizations::~TL_auth_resetAuthorizations() {
  // @@protoc_insertion_point(destructor:mtproto.TL_auth_resetAuthorizations)
  SharedDtor();
}

void TL_auth_resetAuthorizations::SharedDtor() {
}

void TL_auth_resetAuthorizations::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TL_auth_resetAuthorizations::descriptor() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TL_auth_resetAuthorizations& TL_auth_resetAuthorizations::default_instance() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  return *internal_default_instance();
}

TL_auth_resetAuthorizations* TL_auth_resetAuthorizations::New(::google::protobuf::Arena* arena) const {
  TL_auth_resetAuthorizations* n = new TL_auth_resetAuthorizations;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TL_auth_resetAuthorizations::Swap(TL_auth_resetAuthorizations* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TL_auth_resetAuthorizations::InternalSwap(TL_auth_resetAuthorizations* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata TL_auth_resetAuthorizations::GetMetadata() const {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TL_auth_resetAuthorizations

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TL_auth_exportAuthorization::kDcIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TL_auth_exportAuthorization::TL_auth_exportAuthorization()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.TL_auth_exportAuthorization)
}
TL_auth_exportAuthorization::TL_auth_exportAuthorization(const TL_auth_exportAuthorization& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  dc_id_ = from.dc_id_;
  // @@protoc_insertion_point(copy_constructor:mtproto.TL_auth_exportAuthorization)
}

void TL_auth_exportAuthorization::SharedCtor() {
  dc_id_ = 0;
  _cached_size_ = 0;
}

TL_auth_exportAuthorization::~TL_auth_exportAuthorization() {
  // @@protoc_insertion_point(destructor:mtproto.TL_auth_exportAuthorization)
  SharedDtor();
}

void TL_auth_exportAuthorization::SharedDtor() {
}

void TL_auth_exportAuthorization::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TL_auth_exportAuthorization::descriptor() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TL_auth_exportAuthorization& TL_auth_exportAuthorization::default_instance() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  return *internal_default_instance();
}

TL_auth_exportAuthorization* TL_auth_exportAuthorization::New(::google::protobuf::Arena* arena) const {
  TL_auth_exportAuthorization* n = new TL_auth_exportAuthorization;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TL_auth_exportAuthorization::Swap(TL_auth_exportAuthorization* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TL_auth_exportAuthorization::InternalSwap(TL_auth_exportAuthorization* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata TL_auth_exportAuthorization::GetMetadata() const {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TL_auth_exportAuthorization

// int32 dc_id = 1;
void TL_auth_exportAuthorization::clear_dc_id() {
  dc_id_ = 0;
}
::google::protobuf::int32 TL_auth_exportAuthorization::dc_id() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_auth_exportAuthorization.dc_id)
  return dc_id_;
}
void TL_auth_exportAuthorization::set_dc_id(::google::protobuf::int32 value) {
  
  dc_id_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_auth_exportAuthorization.dc_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TL_auth_importAuthorization::kIdFieldNumber;
const int TL_auth_importAuthorization::kBytesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TL_auth_importAuthorization::TL_auth_importAuthorization()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.TL_auth_importAuthorization)
}
TL_auth_importAuthorization::TL_auth_importAuthorization(const TL_auth_importAuthorization& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  bytes_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.bytes().size() > 0) {
    bytes_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.bytes_);
  }
  id_ = from.id_;
  // @@protoc_insertion_point(copy_constructor:mtproto.TL_auth_importAuthorization)
}

void TL_auth_importAuthorization::SharedCtor() {
  bytes_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  id_ = 0;
  _cached_size_ = 0;
}

TL_auth_importAuthorization::~TL_auth_importAuthorization() {
  // @@protoc_insertion_point(destructor:mtproto.TL_auth_importAuthorization)
  SharedDtor();
}

void TL_auth_importAuthorization::SharedDtor() {
  bytes_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void TL_auth_importAuthorization::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TL_auth_importAuthorization::descriptor() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TL_auth_importAuthorization& TL_auth_importAuthorization::default_instance() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  return *internal_default_instance();
}

TL_auth_importAuthorization* TL_auth_importAuthorization::New(::google::protobuf::Arena* arena) const {
  TL_auth_importAuthorization* n = new TL_auth_importAuthorization;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TL_auth_importAuthorization::Swap(TL_auth_importAuthorization* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TL_auth_importAuthorization::InternalSwap(TL_auth_importAuthorization* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata TL_auth_importAuthorization::GetMetadata() const {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TL_auth_importAuthorization

// int32 id = 1;
void TL_auth_importAuthorization::clear_id() {
  id_ = 0;
}
::google::protobuf::int32 TL_auth_importAuthorization::id() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_auth_importAuthorization.id)
  return id_;
}
void TL_auth_importAuthorization::set_id(::google::protobuf::int32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_auth_importAuthorization.id)
}

// bytes bytes = 2;
void TL_auth_importAuthorization::clear_bytes() {
  bytes_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& TL_auth_importAuthorization::bytes() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_auth_importAuthorization.bytes)
  return bytes_.GetNoArena();
}
void TL_auth_importAuthorization::set_bytes(const ::std::string& value) {
  
  bytes_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtproto.TL_auth_importAuthorization.bytes)
}
#if LANG_CXX11
void TL_auth_importAuthorization::set_bytes(::std::string&& value) {
  
  bytes_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mtproto.TL_auth_importAuthorization.bytes)
}
#endif
void TL_auth_importAuthorization::set_bytes(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  bytes_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtproto.TL_auth_importAuthorization.bytes)
}
void TL_auth_importAuthorization::set_bytes(const void* value, size_t size) {
  
  bytes_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtproto.TL_auth_importAuthorization.bytes)
}
::std::string* TL_auth_importAuthorization::mutable_bytes() {
  
  // @@protoc_insertion_point(field_mutable:mtproto.TL_auth_importAuthorization.bytes)
  return bytes_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* TL_auth_importAuthorization::release_bytes() {
  // @@protoc_insertion_point(field_release:mtproto.TL_auth_importAuthorization.bytes)
  
  return bytes_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TL_auth_importAuthorization::set_allocated_bytes(::std::string* bytes) {
  if (bytes != NULL) {
    
  } else {
    
  }
  bytes_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), bytes);
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_auth_importAuthorization.bytes)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TL_auth_bindTempAuthKey::kPermAuthKeyIdFieldNumber;
const int TL_auth_bindTempAuthKey::kNonceFieldNumber;
const int TL_auth_bindTempAuthKey::kExpiresAtFieldNumber;
const int TL_auth_bindTempAuthKey::kEncryptedMessageFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TL_auth_bindTempAuthKey::TL_auth_bindTempAuthKey()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.TL_auth_bindTempAuthKey)
}
TL_auth_bindTempAuthKey::TL_auth_bindTempAuthKey(const TL_auth_bindTempAuthKey& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  encrypted_message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.encrypted_message().size() > 0) {
    encrypted_message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.encrypted_message_);
  }
  ::memcpy(&perm_auth_key_id_, &from.perm_auth_key_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&expires_at_) -
    reinterpret_cast<char*>(&perm_auth_key_id_)) + sizeof(expires_at_));
  // @@protoc_insertion_point(copy_constructor:mtproto.TL_auth_bindTempAuthKey)
}

void TL_auth_bindTempAuthKey::SharedCtor() {
  encrypted_message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&perm_auth_key_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&expires_at_) -
      reinterpret_cast<char*>(&perm_auth_key_id_)) + sizeof(expires_at_));
  _cached_size_ = 0;
}

TL_auth_bindTempAuthKey::~TL_auth_bindTempAuthKey() {
  // @@protoc_insertion_point(destructor:mtproto.TL_auth_bindTempAuthKey)
  SharedDtor();
}

void TL_auth_bindTempAuthKey::SharedDtor() {
  encrypted_message_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void TL_auth_bindTempAuthKey::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TL_auth_bindTempAuthKey::descriptor() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TL_auth_bindTempAuthKey& TL_auth_bindTempAuthKey::default_instance() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  return *internal_default_instance();
}

TL_auth_bindTempAuthKey* TL_auth_bindTempAuthKey::New(::google::protobuf::Arena* arena) const {
  TL_auth_bindTempAuthKey* n = new TL_auth_bindTempAuthKey;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TL_auth_bindTempAuthKey::Swap(TL_auth_bindTempAuthKey* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TL_auth_bindTempAuthKey::InternalSwap(TL_auth_bindTempAuthKey* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata TL_auth_bindTempAuthKey::GetMetadata() const {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TL_auth_bindTempAuthKey

// int64 perm_auth_key_id = 1;
void TL_auth_bindTempAuthKey::clear_perm_auth_key_id() {
  perm_auth_key_id_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 TL_auth_bindTempAuthKey::perm_auth_key_id() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_auth_bindTempAuthKey.perm_auth_key_id)
  return perm_auth_key_id_;
}
void TL_auth_bindTempAuthKey::set_perm_auth_key_id(::google::protobuf::int64 value) {
  
  perm_auth_key_id_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_auth_bindTempAuthKey.perm_auth_key_id)
}

// int64 nonce = 2;
void TL_auth_bindTempAuthKey::clear_nonce() {
  nonce_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 TL_auth_bindTempAuthKey::nonce() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_auth_bindTempAuthKey.nonce)
  return nonce_;
}
void TL_auth_bindTempAuthKey::set_nonce(::google::protobuf::int64 value) {
  
  nonce_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_auth_bindTempAuthKey.nonce)
}

// int32 expires_at = 3;
void TL_auth_bindTempAuthKey::clear_expires_at() {
  expires_at_ = 0;
}
::google::protobuf::int32 TL_auth_bindTempAuthKey::expires_at() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_auth_bindTempAuthKey.expires_at)
  return expires_at_;
}
void TL_auth_bindTempAuthKey::set_expires_at(::google::protobuf::int32 value) {
  
  expires_at_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_auth_bindTempAuthKey.expires_at)
}

// bytes encrypted_message = 4;
void TL_auth_bindTempAuthKey::clear_encrypted_message() {
  encrypted_message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& TL_auth_bindTempAuthKey::encrypted_message() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_auth_bindTempAuthKey.encrypted_message)
  return encrypted_message_.GetNoArena();
}
void TL_auth_bindTempAuthKey::set_encrypted_message(const ::std::string& value) {
  
  encrypted_message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtproto.TL_auth_bindTempAuthKey.encrypted_message)
}
#if LANG_CXX11
void TL_auth_bindTempAuthKey::set_encrypted_message(::std::string&& value) {
  
  encrypted_message_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mtproto.TL_auth_bindTempAuthKey.encrypted_message)
}
#endif
void TL_auth_bindTempAuthKey::set_encrypted_message(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  encrypted_message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtproto.TL_auth_bindTempAuthKey.encrypted_message)
}
void TL_auth_bindTempAuthKey::set_encrypted_message(const void* value, size_t size) {
  
  encrypted_message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtproto.TL_auth_bindTempAuthKey.encrypted_message)
}
::std::string* TL_auth_bindTempAuthKey::mutable_encrypted_message() {
  
  // @@protoc_insertion_point(field_mutable:mtproto.TL_auth_bindTempAuthKey.encrypted_message)
  return encrypted_message_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* TL_auth_bindTempAuthKey::release_encrypted_message() {
  // @@protoc_insertion_point(field_release:mtproto.TL_auth_bindTempAuthKey.encrypted_message)
  
  return encrypted_message_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TL_auth_bindTempAuthKey::set_allocated_encrypted_message(::std::string* encrypted_message) {
  if (encrypted_message != NULL) {
    
  } else {
    
  }
  encrypted_message_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), encrypted_message);
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_auth_bindTempAuthKey.encrypted_message)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TL_auth_importBotAuthorization::kFlagsFieldNumber;
const int TL_auth_importBotAuthorization::kApiIdFieldNumber;
const int TL_auth_importBotAuthorization::kApiHashFieldNumber;
const int TL_auth_importBotAuthorization::kBotAuthTokenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TL_auth_importBotAuthorization::TL_auth_importBotAuthorization()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.TL_auth_importBotAuthorization)
}
TL_auth_importBotAuthorization::TL_auth_importBotAuthorization(const TL_auth_importBotAuthorization& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  api_hash_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.api_hash().size() > 0) {
    api_hash_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.api_hash_);
  }
  bot_auth_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.bot_auth_token().size() > 0) {
    bot_auth_token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.bot_auth_token_);
  }
  ::memcpy(&flags_, &from.flags_,
    static_cast<size_t>(reinterpret_cast<char*>(&api_id_) -
    reinterpret_cast<char*>(&flags_)) + sizeof(api_id_));
  // @@protoc_insertion_point(copy_constructor:mtproto.TL_auth_importBotAuthorization)
}

void TL_auth_importBotAuthorization::SharedCtor() {
  api_hash_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  bot_auth_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&flags_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&api_id_) -
      reinterpret_cast<char*>(&flags_)) + sizeof(api_id_));
  _cached_size_ = 0;
}

TL_auth_importBotAuthorization::~TL_auth_importBotAuthorization() {
  // @@protoc_insertion_point(destructor:mtproto.TL_auth_importBotAuthorization)
  SharedDtor();
}

void TL_auth_importBotAuthorization::SharedDtor() {
  api_hash_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  bot_auth_token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void TL_auth_importBotAuthorization::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TL_auth_importBotAuthorization::descriptor() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TL_auth_importBotAuthorization& TL_auth_importBotAuthorization::default_instance() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  return *internal_default_instance();
}

TL_auth_importBotAuthorization* TL_auth_importBotAuthorization::New(::google::protobuf::Arena* arena) const {
  TL_auth_importBotAuthorization* n = new TL_auth_importBotAuthorization;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TL_auth_importBotAuthorization::Swap(TL_auth_importBotAuthorization* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TL_auth_importBotAuthorization::InternalSwap(TL_auth_importBotAuthorization* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata TL_auth_importBotAuthorization::GetMetadata() const {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TL_auth_importBotAuthorization

// int32 flags = 1;
void TL_auth_importBotAuthorization::clear_flags() {
  flags_ = 0;
}
::google::protobuf::int32 TL_auth_importBotAuthorization::flags() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_auth_importBotAuthorization.flags)
  return flags_;
}
void TL_auth_importBotAuthorization::set_flags(::google::protobuf::int32 value) {
  
  flags_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_auth_importBotAuthorization.flags)
}

// int32 api_id = 2;
void TL_auth_importBotAuthorization::clear_api_id() {
  api_id_ = 0;
}
::google::protobuf::int32 TL_auth_importBotAuthorization::api_id() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_auth_importBotAuthorization.api_id)
  return api_id_;
}
void TL_auth_importBotAuthorization::set_api_id(::google::protobuf::int32 value) {
  
  api_id_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_auth_importBotAuthorization.api_id)
}

// string api_hash = 3;
void TL_auth_importBotAuthorization::clear_api_hash() {
  api_hash_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& TL_auth_importBotAuthorization::api_hash() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_auth_importBotAuthorization.api_hash)
  return api_hash_.GetNoArena();
}
void TL_auth_importBotAuthorization::set_api_hash(const ::std::string& value) {
  
  api_hash_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtproto.TL_auth_importBotAuthorization.api_hash)
}
#if LANG_CXX11
void TL_auth_importBotAuthorization::set_api_hash(::std::string&& value) {
  
  api_hash_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mtproto.TL_auth_importBotAuthorization.api_hash)
}
#endif
void TL_auth_importBotAuthorization::set_api_hash(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  api_hash_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtproto.TL_auth_importBotAuthorization.api_hash)
}
void TL_auth_importBotAuthorization::set_api_hash(const char* value, size_t size) {
  
  api_hash_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtproto.TL_auth_importBotAuthorization.api_hash)
}
::std::string* TL_auth_importBotAuthorization::mutable_api_hash() {
  
  // @@protoc_insertion_point(field_mutable:mtproto.TL_auth_importBotAuthorization.api_hash)
  return api_hash_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* TL_auth_importBotAuthorization::release_api_hash() {
  // @@protoc_insertion_point(field_release:mtproto.TL_auth_importBotAuthorization.api_hash)
  
  return api_hash_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TL_auth_importBotAuthorization::set_allocated_api_hash(::std::string* api_hash) {
  if (api_hash != NULL) {
    
  } else {
    
  }
  api_hash_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), api_hash);
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_auth_importBotAuthorization.api_hash)
}

// string bot_auth_token = 4;
void TL_auth_importBotAuthorization::clear_bot_auth_token() {
  bot_auth_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& TL_auth_importBotAuthorization::bot_auth_token() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_auth_importBotAuthorization.bot_auth_token)
  return bot_auth_token_.GetNoArena();
}
void TL_auth_importBotAuthorization::set_bot_auth_token(const ::std::string& value) {
  
  bot_auth_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtproto.TL_auth_importBotAuthorization.bot_auth_token)
}
#if LANG_CXX11
void TL_auth_importBotAuthorization::set_bot_auth_token(::std::string&& value) {
  
  bot_auth_token_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mtproto.TL_auth_importBotAuthorization.bot_auth_token)
}
#endif
void TL_auth_importBotAuthorization::set_bot_auth_token(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  bot_auth_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtproto.TL_auth_importBotAuthorization.bot_auth_token)
}
void TL_auth_importBotAuthorization::set_bot_auth_token(const char* value, size_t size) {
  
  bot_auth_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtproto.TL_auth_importBotAuthorization.bot_auth_token)
}
::std::string* TL_auth_importBotAuthorization::mutable_bot_auth_token() {
  
  // @@protoc_insertion_point(field_mutable:mtproto.TL_auth_importBotAuthorization.bot_auth_token)
  return bot_auth_token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* TL_auth_importBotAuthorization::release_bot_auth_token() {
  // @@protoc_insertion_point(field_release:mtproto.TL_auth_importBotAuthorization.bot_auth_token)
  
  return bot_auth_token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TL_auth_importBotAuthorization::set_allocated_bot_auth_token(::std::string* bot_auth_token) {
  if (bot_auth_token != NULL) {
    
  } else {
    
  }
  bot_auth_token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), bot_auth_token);
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_auth_importBotAuthorization.bot_auth_token)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TL_auth_checkPassword::kPasswordFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TL_auth_checkPassword::TL_auth_checkPassword()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.TL_auth_checkPassword)
}
TL_auth_checkPassword::TL_auth_checkPassword(const TL_auth_checkPassword& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_password()) {
    password_ = new ::mtproto::InputCheckPasswordSRP(*from.password_);
  } else {
    password_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:mtproto.TL_auth_checkPassword)
}

void TL_auth_checkPassword::SharedCtor() {
  password_ = NULL;
  _cached_size_ = 0;
}

TL_auth_checkPassword::~TL_auth_checkPassword() {
  // @@protoc_insertion_point(destructor:mtproto.TL_auth_checkPassword)
  SharedDtor();
}

void TL_auth_checkPassword::SharedDtor() {
  if (this != internal_default_instance()) delete password_;
}

void TL_auth_checkPassword::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TL_auth_checkPassword::descriptor() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TL_auth_checkPassword& TL_auth_checkPassword::default_instance() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  return *internal_default_instance();
}

TL_auth_checkPassword* TL_auth_checkPassword::New(::google::protobuf::Arena* arena) const {
  TL_auth_checkPassword* n = new TL_auth_checkPassword;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TL_auth_checkPassword::Swap(TL_auth_checkPassword* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TL_auth_checkPassword::InternalSwap(TL_auth_checkPassword* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata TL_auth_checkPassword::GetMetadata() const {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TL_auth_checkPassword

// .mtproto.InputCheckPasswordSRP password = 1;
bool TL_auth_checkPassword::has_password() const {
  return this != internal_default_instance() && password_ != NULL;
}
void TL_auth_checkPassword::clear_password() {
  if (GetArenaNoVirtual() == NULL && password_ != NULL) delete password_;
  password_ = NULL;
}
const ::mtproto::InputCheckPasswordSRP& TL_auth_checkPassword::password() const {
  const ::mtproto::InputCheckPasswordSRP* p = password_;
  // @@protoc_insertion_point(field_get:mtproto.TL_auth_checkPassword.password)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::InputCheckPasswordSRP*>(
      &::mtproto::_InputCheckPasswordSRP_default_instance_);
}
::mtproto::InputCheckPasswordSRP* TL_auth_checkPassword::mutable_password() {
  
  if (password_ == NULL) {
    password_ = new ::mtproto::InputCheckPasswordSRP;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_auth_checkPassword.password)
  return password_;
}
::mtproto::InputCheckPasswordSRP* TL_auth_checkPassword::release_password() {
  // @@protoc_insertion_point(field_release:mtproto.TL_auth_checkPassword.password)
  
  ::mtproto::InputCheckPasswordSRP* temp = password_;
  password_ = NULL;
  return temp;
}
void TL_auth_checkPassword::set_allocated_password(::mtproto::InputCheckPasswordSRP* password) {
  delete password_;
  password_ = password;
  if (password) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_auth_checkPassword.password)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TL_auth_requestPasswordRecovery::TL_auth_requestPasswordRecovery()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.TL_auth_requestPasswordRecovery)
}
TL_auth_requestPasswordRecovery::TL_auth_requestPasswordRecovery(const TL_auth_requestPasswordRecovery& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:mtproto.TL_auth_requestPasswordRecovery)
}

void TL_auth_requestPasswordRecovery::SharedCtor() {
  _cached_size_ = 0;
}

TL_auth_requestPasswordRecovery::~TL_auth_requestPasswordRecovery() {
  // @@protoc_insertion_point(destructor:mtproto.TL_auth_requestPasswordRecovery)
  SharedDtor();
}

void TL_auth_requestPasswordRecovery::SharedDtor() {
}

void TL_auth_requestPasswordRecovery::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TL_auth_requestPasswordRecovery::descriptor() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TL_auth_requestPasswordRecovery& TL_auth_requestPasswordRecovery::default_instance() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  return *internal_default_instance();
}

TL_auth_requestPasswordRecovery* TL_auth_requestPasswordRecovery::New(::google::protobuf::Arena* arena) const {
  TL_auth_requestPasswordRecovery* n = new TL_auth_requestPasswordRecovery;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TL_auth_requestPasswordRecovery::Swap(TL_auth_requestPasswordRecovery* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TL_auth_requestPasswordRecovery::InternalSwap(TL_auth_requestPasswordRecovery* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata TL_auth_requestPasswordRecovery::GetMetadata() const {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TL_auth_requestPasswordRecovery

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TL_auth_recoverPassword::kCodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TL_auth_recoverPassword::TL_auth_recoverPassword()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.TL_auth_recoverPassword)
}
TL_auth_recoverPassword::TL_auth_recoverPassword(const TL_auth_recoverPassword& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.code().size() > 0) {
    code_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.code_);
  }
  // @@protoc_insertion_point(copy_constructor:mtproto.TL_auth_recoverPassword)
}

void TL_auth_recoverPassword::SharedCtor() {
  code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

TL_auth_recoverPassword::~TL_auth_recoverPassword() {
  // @@protoc_insertion_point(destructor:mtproto.TL_auth_recoverPassword)
  SharedDtor();
}

void TL_auth_recoverPassword::SharedDtor() {
  code_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void TL_auth_recoverPassword::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TL_auth_recoverPassword::descriptor() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TL_auth_recoverPassword& TL_auth_recoverPassword::default_instance() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  return *internal_default_instance();
}

TL_auth_recoverPassword* TL_auth_recoverPassword::New(::google::protobuf::Arena* arena) const {
  TL_auth_recoverPassword* n = new TL_auth_recoverPassword;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TL_auth_recoverPassword::Swap(TL_auth_recoverPassword* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TL_auth_recoverPassword::InternalSwap(TL_auth_recoverPassword* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata TL_auth_recoverPassword::GetMetadata() const {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TL_auth_recoverPassword

// string code = 1;
void TL_auth_recoverPassword::clear_code() {
  code_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& TL_auth_recoverPassword::code() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_auth_recoverPassword.code)
  return code_.GetNoArena();
}
void TL_auth_recoverPassword::set_code(const ::std::string& value) {
  
  code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtproto.TL_auth_recoverPassword.code)
}
#if LANG_CXX11
void TL_auth_recoverPassword::set_code(::std::string&& value) {
  
  code_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mtproto.TL_auth_recoverPassword.code)
}
#endif
void TL_auth_recoverPassword::set_code(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtproto.TL_auth_recoverPassword.code)
}
void TL_auth_recoverPassword::set_code(const char* value, size_t size) {
  
  code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtproto.TL_auth_recoverPassword.code)
}
::std::string* TL_auth_recoverPassword::mutable_code() {
  
  // @@protoc_insertion_point(field_mutable:mtproto.TL_auth_recoverPassword.code)
  return code_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* TL_auth_recoverPassword::release_code() {
  // @@protoc_insertion_point(field_release:mtproto.TL_auth_recoverPassword.code)
  
  return code_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TL_auth_recoverPassword::set_allocated_code(::std::string* code) {
  if (code != NULL) {
    
  } else {
    
  }
  code_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), code);
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_auth_recoverPassword.code)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TL_auth_resendCode::kPhoneNumberFieldNumber;
const int TL_auth_resendCode::kPhoneCodeHashFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TL_auth_resendCode::TL_auth_resendCode()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.TL_auth_resendCode)
}
TL_auth_resendCode::TL_auth_resendCode(const TL_auth_resendCode& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  phone_number_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.phone_number().size() > 0) {
    phone_number_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.phone_number_);
  }
  phone_code_hash_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.phone_code_hash().size() > 0) {
    phone_code_hash_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.phone_code_hash_);
  }
  // @@protoc_insertion_point(copy_constructor:mtproto.TL_auth_resendCode)
}

void TL_auth_resendCode::SharedCtor() {
  phone_number_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  phone_code_hash_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

TL_auth_resendCode::~TL_auth_resendCode() {
  // @@protoc_insertion_point(destructor:mtproto.TL_auth_resendCode)
  SharedDtor();
}

void TL_auth_resendCode::SharedDtor() {
  phone_number_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  phone_code_hash_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void TL_auth_resendCode::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TL_auth_resendCode::descriptor() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TL_auth_resendCode& TL_auth_resendCode::default_instance() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  return *internal_default_instance();
}

TL_auth_resendCode* TL_auth_resendCode::New(::google::protobuf::Arena* arena) const {
  TL_auth_resendCode* n = new TL_auth_resendCode;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TL_auth_resendCode::Swap(TL_auth_resendCode* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TL_auth_resendCode::InternalSwap(TL_auth_resendCode* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata TL_auth_resendCode::GetMetadata() const {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TL_auth_resendCode

// string phone_number = 1;
void TL_auth_resendCode::clear_phone_number() {
  phone_number_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& TL_auth_resendCode::phone_number() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_auth_resendCode.phone_number)
  return phone_number_.GetNoArena();
}
void TL_auth_resendCode::set_phone_number(const ::std::string& value) {
  
  phone_number_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtproto.TL_auth_resendCode.phone_number)
}
#if LANG_CXX11
void TL_auth_resendCode::set_phone_number(::std::string&& value) {
  
  phone_number_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mtproto.TL_auth_resendCode.phone_number)
}
#endif
void TL_auth_resendCode::set_phone_number(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  phone_number_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtproto.TL_auth_resendCode.phone_number)
}
void TL_auth_resendCode::set_phone_number(const char* value, size_t size) {
  
  phone_number_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtproto.TL_auth_resendCode.phone_number)
}
::std::string* TL_auth_resendCode::mutable_phone_number() {
  
  // @@protoc_insertion_point(field_mutable:mtproto.TL_auth_resendCode.phone_number)
  return phone_number_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* TL_auth_resendCode::release_phone_number() {
  // @@protoc_insertion_point(field_release:mtproto.TL_auth_resendCode.phone_number)
  
  return phone_number_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TL_auth_resendCode::set_allocated_phone_number(::std::string* phone_number) {
  if (phone_number != NULL) {
    
  } else {
    
  }
  phone_number_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), phone_number);
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_auth_resendCode.phone_number)
}

// string phone_code_hash = 2;
void TL_auth_resendCode::clear_phone_code_hash() {
  phone_code_hash_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& TL_auth_resendCode::phone_code_hash() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_auth_resendCode.phone_code_hash)
  return phone_code_hash_.GetNoArena();
}
void TL_auth_resendCode::set_phone_code_hash(const ::std::string& value) {
  
  phone_code_hash_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtproto.TL_auth_resendCode.phone_code_hash)
}
#if LANG_CXX11
void TL_auth_resendCode::set_phone_code_hash(::std::string&& value) {
  
  phone_code_hash_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mtproto.TL_auth_resendCode.phone_code_hash)
}
#endif
void TL_auth_resendCode::set_phone_code_hash(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  phone_code_hash_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtproto.TL_auth_resendCode.phone_code_hash)
}
void TL_auth_resendCode::set_phone_code_hash(const char* value, size_t size) {
  
  phone_code_hash_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtproto.TL_auth_resendCode.phone_code_hash)
}
::std::string* TL_auth_resendCode::mutable_phone_code_hash() {
  
  // @@protoc_insertion_point(field_mutable:mtproto.TL_auth_resendCode.phone_code_hash)
  return phone_code_hash_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* TL_auth_resendCode::release_phone_code_hash() {
  // @@protoc_insertion_point(field_release:mtproto.TL_auth_resendCode.phone_code_hash)
  
  return phone_code_hash_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TL_auth_resendCode::set_allocated_phone_code_hash(::std::string* phone_code_hash) {
  if (phone_code_hash != NULL) {
    
  } else {
    
  }
  phone_code_hash_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), phone_code_hash);
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_auth_resendCode.phone_code_hash)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TL_auth_cancelCode::kPhoneNumberFieldNumber;
const int TL_auth_cancelCode::kPhoneCodeHashFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TL_auth_cancelCode::TL_auth_cancelCode()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.TL_auth_cancelCode)
}
TL_auth_cancelCode::TL_auth_cancelCode(const TL_auth_cancelCode& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  phone_number_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.phone_number().size() > 0) {
    phone_number_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.phone_number_);
  }
  phone_code_hash_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.phone_code_hash().size() > 0) {
    phone_code_hash_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.phone_code_hash_);
  }
  // @@protoc_insertion_point(copy_constructor:mtproto.TL_auth_cancelCode)
}

void TL_auth_cancelCode::SharedCtor() {
  phone_number_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  phone_code_hash_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

TL_auth_cancelCode::~TL_auth_cancelCode() {
  // @@protoc_insertion_point(destructor:mtproto.TL_auth_cancelCode)
  SharedDtor();
}

void TL_auth_cancelCode::SharedDtor() {
  phone_number_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  phone_code_hash_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void TL_auth_cancelCode::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TL_auth_cancelCode::descriptor() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TL_auth_cancelCode& TL_auth_cancelCode::default_instance() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  return *internal_default_instance();
}

TL_auth_cancelCode* TL_auth_cancelCode::New(::google::protobuf::Arena* arena) const {
  TL_auth_cancelCode* n = new TL_auth_cancelCode;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TL_auth_cancelCode::Swap(TL_auth_cancelCode* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TL_auth_cancelCode::InternalSwap(TL_auth_cancelCode* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata TL_auth_cancelCode::GetMetadata() const {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TL_auth_cancelCode

// string phone_number = 1;
void TL_auth_cancelCode::clear_phone_number() {
  phone_number_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& TL_auth_cancelCode::phone_number() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_auth_cancelCode.phone_number)
  return phone_number_.GetNoArena();
}
void TL_auth_cancelCode::set_phone_number(const ::std::string& value) {
  
  phone_number_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtproto.TL_auth_cancelCode.phone_number)
}
#if LANG_CXX11
void TL_auth_cancelCode::set_phone_number(::std::string&& value) {
  
  phone_number_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mtproto.TL_auth_cancelCode.phone_number)
}
#endif
void TL_auth_cancelCode::set_phone_number(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  phone_number_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtproto.TL_auth_cancelCode.phone_number)
}
void TL_auth_cancelCode::set_phone_number(const char* value, size_t size) {
  
  phone_number_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtproto.TL_auth_cancelCode.phone_number)
}
::std::string* TL_auth_cancelCode::mutable_phone_number() {
  
  // @@protoc_insertion_point(field_mutable:mtproto.TL_auth_cancelCode.phone_number)
  return phone_number_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* TL_auth_cancelCode::release_phone_number() {
  // @@protoc_insertion_point(field_release:mtproto.TL_auth_cancelCode.phone_number)
  
  return phone_number_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TL_auth_cancelCode::set_allocated_phone_number(::std::string* phone_number) {
  if (phone_number != NULL) {
    
  } else {
    
  }
  phone_number_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), phone_number);
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_auth_cancelCode.phone_number)
}

// string phone_code_hash = 2;
void TL_auth_cancelCode::clear_phone_code_hash() {
  phone_code_hash_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& TL_auth_cancelCode::phone_code_hash() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_auth_cancelCode.phone_code_hash)
  return phone_code_hash_.GetNoArena();
}
void TL_auth_cancelCode::set_phone_code_hash(const ::std::string& value) {
  
  phone_code_hash_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtproto.TL_auth_cancelCode.phone_code_hash)
}
#if LANG_CXX11
void TL_auth_cancelCode::set_phone_code_hash(::std::string&& value) {
  
  phone_code_hash_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mtproto.TL_auth_cancelCode.phone_code_hash)
}
#endif
void TL_auth_cancelCode::set_phone_code_hash(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  phone_code_hash_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtproto.TL_auth_cancelCode.phone_code_hash)
}
void TL_auth_cancelCode::set_phone_code_hash(const char* value, size_t size) {
  
  phone_code_hash_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtproto.TL_auth_cancelCode.phone_code_hash)
}
::std::string* TL_auth_cancelCode::mutable_phone_code_hash() {
  
  // @@protoc_insertion_point(field_mutable:mtproto.TL_auth_cancelCode.phone_code_hash)
  return phone_code_hash_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* TL_auth_cancelCode::release_phone_code_hash() {
  // @@protoc_insertion_point(field_release:mtproto.TL_auth_cancelCode.phone_code_hash)
  
  return phone_code_hash_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TL_auth_cancelCode::set_allocated_phone_code_hash(::std::string* phone_code_hash) {
  if (phone_code_hash != NULL) {
    
  } else {
    
  }
  phone_code_hash_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), phone_code_hash);
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_auth_cancelCode.phone_code_hash)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TL_auth_dropTempAuthKeys::kExceptAuthKeysFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TL_auth_dropTempAuthKeys::TL_auth_dropTempAuthKeys()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.TL_auth_dropTempAuthKeys)
}
TL_auth_dropTempAuthKeys::TL_auth_dropTempAuthKeys(const TL_auth_dropTempAuthKeys& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      except_auth_keys_(from.except_auth_keys_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:mtproto.TL_auth_dropTempAuthKeys)
}

void TL_auth_dropTempAuthKeys::SharedCtor() {
  _cached_size_ = 0;
}

TL_auth_dropTempAuthKeys::~TL_auth_dropTempAuthKeys() {
  // @@protoc_insertion_point(destructor:mtproto.TL_auth_dropTempAuthKeys)
  SharedDtor();
}

void TL_auth_dropTempAuthKeys::SharedDtor() {
}

void TL_auth_dropTempAuthKeys::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TL_auth_dropTempAuthKeys::descriptor() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TL_auth_dropTempAuthKeys& TL_auth_dropTempAuthKeys::default_instance() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  return *internal_default_instance();
}

TL_auth_dropTempAuthKeys* TL_auth_dropTempAuthKeys::New(::google::protobuf::Arena* arena) const {
  TL_auth_dropTempAuthKeys* n = new TL_auth_dropTempAuthKeys;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TL_auth_dropTempAuthKeys::Swap(TL_auth_dropTempAuthKeys* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TL_auth_dropTempAuthKeys::InternalSwap(TL_auth_dropTempAuthKeys* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata TL_auth_dropTempAuthKeys::GetMetadata() const {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TL_auth_dropTempAuthKeys

// repeated int64 except_auth_keys = 1;
int TL_auth_dropTempAuthKeys::except_auth_keys_size() const {
  return except_auth_keys_.size();
}
void TL_auth_dropTempAuthKeys::clear_except_auth_keys() {
  except_auth_keys_.Clear();
}
::google::protobuf::int64 TL_auth_dropTempAuthKeys::except_auth_keys(int index) const {
  // @@protoc_insertion_point(field_get:mtproto.TL_auth_dropTempAuthKeys.except_auth_keys)
  return except_auth_keys_.Get(index);
}
void TL_auth_dropTempAuthKeys::set_except_auth_keys(int index, ::google::protobuf::int64 value) {
  except_auth_keys_.Set(index, value);
  // @@protoc_insertion_point(field_set:mtproto.TL_auth_dropTempAuthKeys.except_auth_keys)
}
void TL_auth_dropTempAuthKeys::add_except_auth_keys(::google::protobuf::int64 value) {
  except_auth_keys_.Add(value);
  // @@protoc_insertion_point(field_add:mtproto.TL_auth_dropTempAuthKeys.except_auth_keys)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
TL_auth_dropTempAuthKeys::except_auth_keys() const {
  // @@protoc_insertion_point(field_list:mtproto.TL_auth_dropTempAuthKeys.except_auth_keys)
  return except_auth_keys_;
}
::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
TL_auth_dropTempAuthKeys::mutable_except_auth_keys() {
  // @@protoc_insertion_point(field_mutable_list:mtproto.TL_auth_dropTempAuthKeys.except_auth_keys)
  return &except_auth_keys_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TL_account_registerDevice::kTokenTypeFieldNumber;
const int TL_account_registerDevice::kTokenFieldNumber;
const int TL_account_registerDevice::kAppSandboxFieldNumber;
const int TL_account_registerDevice::kSecretFieldNumber;
const int TL_account_registerDevice::kOtherUidsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TL_account_registerDevice::TL_account_registerDevice()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.TL_account_registerDevice)
}
TL_account_registerDevice::TL_account_registerDevice(const TL_account_registerDevice& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      other_uids_(from.other_uids_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.token().size() > 0) {
    token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.token_);
  }
  secret_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.secret().size() > 0) {
    secret_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.secret_);
  }
  if (from.has_app_sandbox()) {
    app_sandbox_ = new ::mtproto::Bool(*from.app_sandbox_);
  } else {
    app_sandbox_ = NULL;
  }
  token_type_ = from.token_type_;
  // @@protoc_insertion_point(copy_constructor:mtproto.TL_account_registerDevice)
}

void TL_account_registerDevice::SharedCtor() {
  token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  secret_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&app_sandbox_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&token_type_) -
      reinterpret_cast<char*>(&app_sandbox_)) + sizeof(token_type_));
  _cached_size_ = 0;
}

TL_account_registerDevice::~TL_account_registerDevice() {
  // @@protoc_insertion_point(destructor:mtproto.TL_account_registerDevice)
  SharedDtor();
}

void TL_account_registerDevice::SharedDtor() {
  token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  secret_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete app_sandbox_;
}

void TL_account_registerDevice::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TL_account_registerDevice::descriptor() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TL_account_registerDevice& TL_account_registerDevice::default_instance() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  return *internal_default_instance();
}

TL_account_registerDevice* TL_account_registerDevice::New(::google::protobuf::Arena* arena) const {
  TL_account_registerDevice* n = new TL_account_registerDevice;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TL_account_registerDevice::Swap(TL_account_registerDevice* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TL_account_registerDevice::InternalSwap(TL_account_registerDevice* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata TL_account_registerDevice::GetMetadata() const {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TL_account_registerDevice

// int32 token_type = 1;
void TL_account_registerDevice::clear_token_type() {
  token_type_ = 0;
}
::google::protobuf::int32 TL_account_registerDevice::token_type() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_account_registerDevice.token_type)
  return token_type_;
}
void TL_account_registerDevice::set_token_type(::google::protobuf::int32 value) {
  
  token_type_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_account_registerDevice.token_type)
}

// string token = 2;
void TL_account_registerDevice::clear_token() {
  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& TL_account_registerDevice::token() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_account_registerDevice.token)
  return token_.GetNoArena();
}
void TL_account_registerDevice::set_token(const ::std::string& value) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtproto.TL_account_registerDevice.token)
}
#if LANG_CXX11
void TL_account_registerDevice::set_token(::std::string&& value) {
  
  token_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mtproto.TL_account_registerDevice.token)
}
#endif
void TL_account_registerDevice::set_token(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtproto.TL_account_registerDevice.token)
}
void TL_account_registerDevice::set_token(const char* value, size_t size) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtproto.TL_account_registerDevice.token)
}
::std::string* TL_account_registerDevice::mutable_token() {
  
  // @@protoc_insertion_point(field_mutable:mtproto.TL_account_registerDevice.token)
  return token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* TL_account_registerDevice::release_token() {
  // @@protoc_insertion_point(field_release:mtproto.TL_account_registerDevice.token)
  
  return token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TL_account_registerDevice::set_allocated_token(::std::string* token) {
  if (token != NULL) {
    
  } else {
    
  }
  token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), token);
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_account_registerDevice.token)
}

// .mtproto.Bool app_sandbox = 3;
bool TL_account_registerDevice::has_app_sandbox() const {
  return this != internal_default_instance() && app_sandbox_ != NULL;
}
void TL_account_registerDevice::clear_app_sandbox() {
  if (GetArenaNoVirtual() == NULL && app_sandbox_ != NULL) delete app_sandbox_;
  app_sandbox_ = NULL;
}
const ::mtproto::Bool& TL_account_registerDevice::app_sandbox() const {
  const ::mtproto::Bool* p = app_sandbox_;
  // @@protoc_insertion_point(field_get:mtproto.TL_account_registerDevice.app_sandbox)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::Bool*>(
      &::mtproto::_Bool_default_instance_);
}
::mtproto::Bool* TL_account_registerDevice::mutable_app_sandbox() {
  
  if (app_sandbox_ == NULL) {
    app_sandbox_ = new ::mtproto::Bool;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_account_registerDevice.app_sandbox)
  return app_sandbox_;
}
::mtproto::Bool* TL_account_registerDevice::release_app_sandbox() {
  // @@protoc_insertion_point(field_release:mtproto.TL_account_registerDevice.app_sandbox)
  
  ::mtproto::Bool* temp = app_sandbox_;
  app_sandbox_ = NULL;
  return temp;
}
void TL_account_registerDevice::set_allocated_app_sandbox(::mtproto::Bool* app_sandbox) {
  delete app_sandbox_;
  app_sandbox_ = app_sandbox;
  if (app_sandbox) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_account_registerDevice.app_sandbox)
}

// bytes secret = 4;
void TL_account_registerDevice::clear_secret() {
  secret_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& TL_account_registerDevice::secret() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_account_registerDevice.secret)
  return secret_.GetNoArena();
}
void TL_account_registerDevice::set_secret(const ::std::string& value) {
  
  secret_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtproto.TL_account_registerDevice.secret)
}
#if LANG_CXX11
void TL_account_registerDevice::set_secret(::std::string&& value) {
  
  secret_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mtproto.TL_account_registerDevice.secret)
}
#endif
void TL_account_registerDevice::set_secret(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  secret_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtproto.TL_account_registerDevice.secret)
}
void TL_account_registerDevice::set_secret(const void* value, size_t size) {
  
  secret_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtproto.TL_account_registerDevice.secret)
}
::std::string* TL_account_registerDevice::mutable_secret() {
  
  // @@protoc_insertion_point(field_mutable:mtproto.TL_account_registerDevice.secret)
  return secret_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* TL_account_registerDevice::release_secret() {
  // @@protoc_insertion_point(field_release:mtproto.TL_account_registerDevice.secret)
  
  return secret_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TL_account_registerDevice::set_allocated_secret(::std::string* secret) {
  if (secret != NULL) {
    
  } else {
    
  }
  secret_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), secret);
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_account_registerDevice.secret)
}

// repeated int32 other_uids = 5;
int TL_account_registerDevice::other_uids_size() const {
  return other_uids_.size();
}
void TL_account_registerDevice::clear_other_uids() {
  other_uids_.Clear();
}
::google::protobuf::int32 TL_account_registerDevice::other_uids(int index) const {
  // @@protoc_insertion_point(field_get:mtproto.TL_account_registerDevice.other_uids)
  return other_uids_.Get(index);
}
void TL_account_registerDevice::set_other_uids(int index, ::google::protobuf::int32 value) {
  other_uids_.Set(index, value);
  // @@protoc_insertion_point(field_set:mtproto.TL_account_registerDevice.other_uids)
}
void TL_account_registerDevice::add_other_uids(::google::protobuf::int32 value) {
  other_uids_.Add(value);
  // @@protoc_insertion_point(field_add:mtproto.TL_account_registerDevice.other_uids)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
TL_account_registerDevice::other_uids() const {
  // @@protoc_insertion_point(field_list:mtproto.TL_account_registerDevice.other_uids)
  return other_uids_;
}
::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
TL_account_registerDevice::mutable_other_uids() {
  // @@protoc_insertion_point(field_mutable_list:mtproto.TL_account_registerDevice.other_uids)
  return &other_uids_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TL_account_unregisterDevice::kTokenTypeFieldNumber;
const int TL_account_unregisterDevice::kTokenFieldNumber;
const int TL_account_unregisterDevice::kOtherUidsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TL_account_unregisterDevice::TL_account_unregisterDevice()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.TL_account_unregisterDevice)
}
TL_account_unregisterDevice::TL_account_unregisterDevice(const TL_account_unregisterDevice& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      other_uids_(from.other_uids_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.token().size() > 0) {
    token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.token_);
  }
  token_type_ = from.token_type_;
  // @@protoc_insertion_point(copy_constructor:mtproto.TL_account_unregisterDevice)
}

void TL_account_unregisterDevice::SharedCtor() {
  token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  token_type_ = 0;
  _cached_size_ = 0;
}

TL_account_unregisterDevice::~TL_account_unregisterDevice() {
  // @@protoc_insertion_point(destructor:mtproto.TL_account_unregisterDevice)
  SharedDtor();
}

void TL_account_unregisterDevice::SharedDtor() {
  token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void TL_account_unregisterDevice::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TL_account_unregisterDevice::descriptor() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TL_account_unregisterDevice& TL_account_unregisterDevice::default_instance() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  return *internal_default_instance();
}

TL_account_unregisterDevice* TL_account_unregisterDevice::New(::google::protobuf::Arena* arena) const {
  TL_account_unregisterDevice* n = new TL_account_unregisterDevice;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TL_account_unregisterDevice::Swap(TL_account_unregisterDevice* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TL_account_unregisterDevice::InternalSwap(TL_account_unregisterDevice* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata TL_account_unregisterDevice::GetMetadata() const {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TL_account_unregisterDevice

// int32 token_type = 1;
void TL_account_unregisterDevice::clear_token_type() {
  token_type_ = 0;
}
::google::protobuf::int32 TL_account_unregisterDevice::token_type() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_account_unregisterDevice.token_type)
  return token_type_;
}
void TL_account_unregisterDevice::set_token_type(::google::protobuf::int32 value) {
  
  token_type_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_account_unregisterDevice.token_type)
}

// string token = 2;
void TL_account_unregisterDevice::clear_token() {
  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& TL_account_unregisterDevice::token() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_account_unregisterDevice.token)
  return token_.GetNoArena();
}
void TL_account_unregisterDevice::set_token(const ::std::string& value) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtproto.TL_account_unregisterDevice.token)
}
#if LANG_CXX11
void TL_account_unregisterDevice::set_token(::std::string&& value) {
  
  token_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mtproto.TL_account_unregisterDevice.token)
}
#endif
void TL_account_unregisterDevice::set_token(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtproto.TL_account_unregisterDevice.token)
}
void TL_account_unregisterDevice::set_token(const char* value, size_t size) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtproto.TL_account_unregisterDevice.token)
}
::std::string* TL_account_unregisterDevice::mutable_token() {
  
  // @@protoc_insertion_point(field_mutable:mtproto.TL_account_unregisterDevice.token)
  return token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* TL_account_unregisterDevice::release_token() {
  // @@protoc_insertion_point(field_release:mtproto.TL_account_unregisterDevice.token)
  
  return token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TL_account_unregisterDevice::set_allocated_token(::std::string* token) {
  if (token != NULL) {
    
  } else {
    
  }
  token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), token);
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_account_unregisterDevice.token)
}

// repeated int32 other_uids = 3;
int TL_account_unregisterDevice::other_uids_size() const {
  return other_uids_.size();
}
void TL_account_unregisterDevice::clear_other_uids() {
  other_uids_.Clear();
}
::google::protobuf::int32 TL_account_unregisterDevice::other_uids(int index) const {
  // @@protoc_insertion_point(field_get:mtproto.TL_account_unregisterDevice.other_uids)
  return other_uids_.Get(index);
}
void TL_account_unregisterDevice::set_other_uids(int index, ::google::protobuf::int32 value) {
  other_uids_.Set(index, value);
  // @@protoc_insertion_point(field_set:mtproto.TL_account_unregisterDevice.other_uids)
}
void TL_account_unregisterDevice::add_other_uids(::google::protobuf::int32 value) {
  other_uids_.Add(value);
  // @@protoc_insertion_point(field_add:mtproto.TL_account_unregisterDevice.other_uids)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
TL_account_unregisterDevice::other_uids() const {
  // @@protoc_insertion_point(field_list:mtproto.TL_account_unregisterDevice.other_uids)
  return other_uids_;
}
::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
TL_account_unregisterDevice::mutable_other_uids() {
  // @@protoc_insertion_point(field_mutable_list:mtproto.TL_account_unregisterDevice.other_uids)
  return &other_uids_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TL_account_updateNotifySettings::kPeerFieldNumber;
const int TL_account_updateNotifySettings::kSettingsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TL_account_updateNotifySettings::TL_account_updateNotifySettings()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.TL_account_updateNotifySettings)
}
TL_account_updateNotifySettings::TL_account_updateNotifySettings(const TL_account_updateNotifySettings& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_peer()) {
    peer_ = new ::mtproto::InputNotifyPeer(*from.peer_);
  } else {
    peer_ = NULL;
  }
  if (from.has_settings()) {
    settings_ = new ::mtproto::InputPeerNotifySettings(*from.settings_);
  } else {
    settings_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:mtproto.TL_account_updateNotifySettings)
}

void TL_account_updateNotifySettings::SharedCtor() {
  ::memset(&peer_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&settings_) -
      reinterpret_cast<char*>(&peer_)) + sizeof(settings_));
  _cached_size_ = 0;
}

TL_account_updateNotifySettings::~TL_account_updateNotifySettings() {
  // @@protoc_insertion_point(destructor:mtproto.TL_account_updateNotifySettings)
  SharedDtor();
}

void TL_account_updateNotifySettings::SharedDtor() {
  if (this != internal_default_instance()) delete peer_;
  if (this != internal_default_instance()) delete settings_;
}

void TL_account_updateNotifySettings::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TL_account_updateNotifySettings::descriptor() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TL_account_updateNotifySettings& TL_account_updateNotifySettings::default_instance() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  return *internal_default_instance();
}

TL_account_updateNotifySettings* TL_account_updateNotifySettings::New(::google::protobuf::Arena* arena) const {
  TL_account_updateNotifySettings* n = new TL_account_updateNotifySettings;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TL_account_updateNotifySettings::Swap(TL_account_updateNotifySettings* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TL_account_updateNotifySettings::InternalSwap(TL_account_updateNotifySettings* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata TL_account_updateNotifySettings::GetMetadata() const {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TL_account_updateNotifySettings

// .mtproto.InputNotifyPeer peer = 1;
bool TL_account_updateNotifySettings::has_peer() const {
  return this != internal_default_instance() && peer_ != NULL;
}
void TL_account_updateNotifySettings::clear_peer() {
  if (GetArenaNoVirtual() == NULL && peer_ != NULL) delete peer_;
  peer_ = NULL;
}
const ::mtproto::InputNotifyPeer& TL_account_updateNotifySettings::peer() const {
  const ::mtproto::InputNotifyPeer* p = peer_;
  // @@protoc_insertion_point(field_get:mtproto.TL_account_updateNotifySettings.peer)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::InputNotifyPeer*>(
      &::mtproto::_InputNotifyPeer_default_instance_);
}
::mtproto::InputNotifyPeer* TL_account_updateNotifySettings::mutable_peer() {
  
  if (peer_ == NULL) {
    peer_ = new ::mtproto::InputNotifyPeer;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_account_updateNotifySettings.peer)
  return peer_;
}
::mtproto::InputNotifyPeer* TL_account_updateNotifySettings::release_peer() {
  // @@protoc_insertion_point(field_release:mtproto.TL_account_updateNotifySettings.peer)
  
  ::mtproto::InputNotifyPeer* temp = peer_;
  peer_ = NULL;
  return temp;
}
void TL_account_updateNotifySettings::set_allocated_peer(::mtproto::InputNotifyPeer* peer) {
  delete peer_;
  peer_ = peer;
  if (peer) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_account_updateNotifySettings.peer)
}

// .mtproto.InputPeerNotifySettings settings = 2;
bool TL_account_updateNotifySettings::has_settings() const {
  return this != internal_default_instance() && settings_ != NULL;
}
void TL_account_updateNotifySettings::clear_settings() {
  if (GetArenaNoVirtual() == NULL && settings_ != NULL) delete settings_;
  settings_ = NULL;
}
const ::mtproto::InputPeerNotifySettings& TL_account_updateNotifySettings::settings() const {
  const ::mtproto::InputPeerNotifySettings* p = settings_;
  // @@protoc_insertion_point(field_get:mtproto.TL_account_updateNotifySettings.settings)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::InputPeerNotifySettings*>(
      &::mtproto::_InputPeerNotifySettings_default_instance_);
}
::mtproto::InputPeerNotifySettings* TL_account_updateNotifySettings::mutable_settings() {
  
  if (settings_ == NULL) {
    settings_ = new ::mtproto::InputPeerNotifySettings;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_account_updateNotifySettings.settings)
  return settings_;
}
::mtproto::InputPeerNotifySettings* TL_account_updateNotifySettings::release_settings() {
  // @@protoc_insertion_point(field_release:mtproto.TL_account_updateNotifySettings.settings)
  
  ::mtproto::InputPeerNotifySettings* temp = settings_;
  settings_ = NULL;
  return temp;
}
void TL_account_updateNotifySettings::set_allocated_settings(::mtproto::InputPeerNotifySettings* settings) {
  delete settings_;
  settings_ = settings;
  if (settings) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_account_updateNotifySettings.settings)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TL_account_getNotifySettings::kPeerFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TL_account_getNotifySettings::TL_account_getNotifySettings()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.TL_account_getNotifySettings)
}
TL_account_getNotifySettings::TL_account_getNotifySettings(const TL_account_getNotifySettings& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_peer()) {
    peer_ = new ::mtproto::InputNotifyPeer(*from.peer_);
  } else {
    peer_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:mtproto.TL_account_getNotifySettings)
}

void TL_account_getNotifySettings::SharedCtor() {
  peer_ = NULL;
  _cached_size_ = 0;
}

TL_account_getNotifySettings::~TL_account_getNotifySettings() {
  // @@protoc_insertion_point(destructor:mtproto.TL_account_getNotifySettings)
  SharedDtor();
}

void TL_account_getNotifySettings::SharedDtor() {
  if (this != internal_default_instance()) delete peer_;
}

void TL_account_getNotifySettings::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TL_account_getNotifySettings::descriptor() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TL_account_getNotifySettings& TL_account_getNotifySettings::default_instance() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  return *internal_default_instance();
}

TL_account_getNotifySettings* TL_account_getNotifySettings::New(::google::protobuf::Arena* arena) const {
  TL_account_getNotifySettings* n = new TL_account_getNotifySettings;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TL_account_getNotifySettings::Swap(TL_account_getNotifySettings* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TL_account_getNotifySettings::InternalSwap(TL_account_getNotifySettings* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata TL_account_getNotifySettings::GetMetadata() const {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TL_account_getNotifySettings

// .mtproto.InputNotifyPeer peer = 1;
bool TL_account_getNotifySettings::has_peer() const {
  return this != internal_default_instance() && peer_ != NULL;
}
void TL_account_getNotifySettings::clear_peer() {
  if (GetArenaNoVirtual() == NULL && peer_ != NULL) delete peer_;
  peer_ = NULL;
}
const ::mtproto::InputNotifyPeer& TL_account_getNotifySettings::peer() const {
  const ::mtproto::InputNotifyPeer* p = peer_;
  // @@protoc_insertion_point(field_get:mtproto.TL_account_getNotifySettings.peer)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::InputNotifyPeer*>(
      &::mtproto::_InputNotifyPeer_default_instance_);
}
::mtproto::InputNotifyPeer* TL_account_getNotifySettings::mutable_peer() {
  
  if (peer_ == NULL) {
    peer_ = new ::mtproto::InputNotifyPeer;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_account_getNotifySettings.peer)
  return peer_;
}
::mtproto::InputNotifyPeer* TL_account_getNotifySettings::release_peer() {
  // @@protoc_insertion_point(field_release:mtproto.TL_account_getNotifySettings.peer)
  
  ::mtproto::InputNotifyPeer* temp = peer_;
  peer_ = NULL;
  return temp;
}
void TL_account_getNotifySettings::set_allocated_peer(::mtproto::InputNotifyPeer* peer) {
  delete peer_;
  peer_ = peer;
  if (peer) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_account_getNotifySettings.peer)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TL_account_resetNotifySettings::TL_account_resetNotifySettings()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.TL_account_resetNotifySettings)
}
TL_account_resetNotifySettings::TL_account_resetNotifySettings(const TL_account_resetNotifySettings& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:mtproto.TL_account_resetNotifySettings)
}

void TL_account_resetNotifySettings::SharedCtor() {
  _cached_size_ = 0;
}

TL_account_resetNotifySettings::~TL_account_resetNotifySettings() {
  // @@protoc_insertion_point(destructor:mtproto.TL_account_resetNotifySettings)
  SharedDtor();
}

void TL_account_resetNotifySettings::SharedDtor() {
}

void TL_account_resetNotifySettings::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TL_account_resetNotifySettings::descriptor() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TL_account_resetNotifySettings& TL_account_resetNotifySettings::default_instance() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  return *internal_default_instance();
}

TL_account_resetNotifySettings* TL_account_resetNotifySettings::New(::google::protobuf::Arena* arena) const {
  TL_account_resetNotifySettings* n = new TL_account_resetNotifySettings;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TL_account_resetNotifySettings::Swap(TL_account_resetNotifySettings* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TL_account_resetNotifySettings::InternalSwap(TL_account_resetNotifySettings* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata TL_account_resetNotifySettings::GetMetadata() const {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TL_account_resetNotifySettings

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TL_account_updateProfile::kFirstNameFieldNumber;
const int TL_account_updateProfile::kLastNameFieldNumber;
const int TL_account_updateProfile::kAboutFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TL_account_updateProfile::TL_account_updateProfile()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.TL_account_updateProfile)
}
TL_account_updateProfile::TL_account_updateProfile(const TL_account_updateProfile& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  first_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.first_name().size() > 0) {
    first_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.first_name_);
  }
  last_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.last_name().size() > 0) {
    last_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.last_name_);
  }
  about_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.about().size() > 0) {
    about_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.about_);
  }
  // @@protoc_insertion_point(copy_constructor:mtproto.TL_account_updateProfile)
}

void TL_account_updateProfile::SharedCtor() {
  first_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  last_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  about_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

TL_account_updateProfile::~TL_account_updateProfile() {
  // @@protoc_insertion_point(destructor:mtproto.TL_account_updateProfile)
  SharedDtor();
}

void TL_account_updateProfile::SharedDtor() {
  first_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  last_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  about_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void TL_account_updateProfile::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TL_account_updateProfile::descriptor() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TL_account_updateProfile& TL_account_updateProfile::default_instance() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  return *internal_default_instance();
}

TL_account_updateProfile* TL_account_updateProfile::New(::google::protobuf::Arena* arena) const {
  TL_account_updateProfile* n = new TL_account_updateProfile;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TL_account_updateProfile::Swap(TL_account_updateProfile* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TL_account_updateProfile::InternalSwap(TL_account_updateProfile* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata TL_account_updateProfile::GetMetadata() const {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TL_account_updateProfile

// string first_name = 2;
void TL_account_updateProfile::clear_first_name() {
  first_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& TL_account_updateProfile::first_name() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_account_updateProfile.first_name)
  return first_name_.GetNoArena();
}
void TL_account_updateProfile::set_first_name(const ::std::string& value) {
  
  first_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtproto.TL_account_updateProfile.first_name)
}
#if LANG_CXX11
void TL_account_updateProfile::set_first_name(::std::string&& value) {
  
  first_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mtproto.TL_account_updateProfile.first_name)
}
#endif
void TL_account_updateProfile::set_first_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  first_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtproto.TL_account_updateProfile.first_name)
}
void TL_account_updateProfile::set_first_name(const char* value, size_t size) {
  
  first_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtproto.TL_account_updateProfile.first_name)
}
::std::string* TL_account_updateProfile::mutable_first_name() {
  
  // @@protoc_insertion_point(field_mutable:mtproto.TL_account_updateProfile.first_name)
  return first_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* TL_account_updateProfile::release_first_name() {
  // @@protoc_insertion_point(field_release:mtproto.TL_account_updateProfile.first_name)
  
  return first_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TL_account_updateProfile::set_allocated_first_name(::std::string* first_name) {
  if (first_name != NULL) {
    
  } else {
    
  }
  first_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), first_name);
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_account_updateProfile.first_name)
}

// string last_name = 3;
void TL_account_updateProfile::clear_last_name() {
  last_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& TL_account_updateProfile::last_name() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_account_updateProfile.last_name)
  return last_name_.GetNoArena();
}
void TL_account_updateProfile::set_last_name(const ::std::string& value) {
  
  last_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtproto.TL_account_updateProfile.last_name)
}
#if LANG_CXX11
void TL_account_updateProfile::set_last_name(::std::string&& value) {
  
  last_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mtproto.TL_account_updateProfile.last_name)
}
#endif
void TL_account_updateProfile::set_last_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  last_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtproto.TL_account_updateProfile.last_name)
}
void TL_account_updateProfile::set_last_name(const char* value, size_t size) {
  
  last_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtproto.TL_account_updateProfile.last_name)
}
::std::string* TL_account_updateProfile::mutable_last_name() {
  
  // @@protoc_insertion_point(field_mutable:mtproto.TL_account_updateProfile.last_name)
  return last_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* TL_account_updateProfile::release_last_name() {
  // @@protoc_insertion_point(field_release:mtproto.TL_account_updateProfile.last_name)
  
  return last_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TL_account_updateProfile::set_allocated_last_name(::std::string* last_name) {
  if (last_name != NULL) {
    
  } else {
    
  }
  last_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), last_name);
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_account_updateProfile.last_name)
}

// string about = 4;
void TL_account_updateProfile::clear_about() {
  about_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& TL_account_updateProfile::about() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_account_updateProfile.about)
  return about_.GetNoArena();
}
void TL_account_updateProfile::set_about(const ::std::string& value) {
  
  about_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtproto.TL_account_updateProfile.about)
}
#if LANG_CXX11
void TL_account_updateProfile::set_about(::std::string&& value) {
  
  about_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mtproto.TL_account_updateProfile.about)
}
#endif
void TL_account_updateProfile::set_about(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  about_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtproto.TL_account_updateProfile.about)
}
void TL_account_updateProfile::set_about(const char* value, size_t size) {
  
  about_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtproto.TL_account_updateProfile.about)
}
::std::string* TL_account_updateProfile::mutable_about() {
  
  // @@protoc_insertion_point(field_mutable:mtproto.TL_account_updateProfile.about)
  return about_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* TL_account_updateProfile::release_about() {
  // @@protoc_insertion_point(field_release:mtproto.TL_account_updateProfile.about)
  
  return about_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TL_account_updateProfile::set_allocated_about(::std::string* about) {
  if (about != NULL) {
    
  } else {
    
  }
  about_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), about);
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_account_updateProfile.about)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TL_account_updateStatus::kOfflineFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TL_account_updateStatus::TL_account_updateStatus()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.TL_account_updateStatus)
}
TL_account_updateStatus::TL_account_updateStatus(const TL_account_updateStatus& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_offline()) {
    offline_ = new ::mtproto::Bool(*from.offline_);
  } else {
    offline_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:mtproto.TL_account_updateStatus)
}

void TL_account_updateStatus::SharedCtor() {
  offline_ = NULL;
  _cached_size_ = 0;
}

TL_account_updateStatus::~TL_account_updateStatus() {
  // @@protoc_insertion_point(destructor:mtproto.TL_account_updateStatus)
  SharedDtor();
}

void TL_account_updateStatus::SharedDtor() {
  if (this != internal_default_instance()) delete offline_;
}

void TL_account_updateStatus::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TL_account_updateStatus::descriptor() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TL_account_updateStatus& TL_account_updateStatus::default_instance() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  return *internal_default_instance();
}

TL_account_updateStatus* TL_account_updateStatus::New(::google::protobuf::Arena* arena) const {
  TL_account_updateStatus* n = new TL_account_updateStatus;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TL_account_updateStatus::Swap(TL_account_updateStatus* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TL_account_updateStatus::InternalSwap(TL_account_updateStatus* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata TL_account_updateStatus::GetMetadata() const {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TL_account_updateStatus

// .mtproto.Bool offline = 1;
bool TL_account_updateStatus::has_offline() const {
  return this != internal_default_instance() && offline_ != NULL;
}
void TL_account_updateStatus::clear_offline() {
  if (GetArenaNoVirtual() == NULL && offline_ != NULL) delete offline_;
  offline_ = NULL;
}
const ::mtproto::Bool& TL_account_updateStatus::offline() const {
  const ::mtproto::Bool* p = offline_;
  // @@protoc_insertion_point(field_get:mtproto.TL_account_updateStatus.offline)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::Bool*>(
      &::mtproto::_Bool_default_instance_);
}
::mtproto::Bool* TL_account_updateStatus::mutable_offline() {
  
  if (offline_ == NULL) {
    offline_ = new ::mtproto::Bool;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_account_updateStatus.offline)
  return offline_;
}
::mtproto::Bool* TL_account_updateStatus::release_offline() {
  // @@protoc_insertion_point(field_release:mtproto.TL_account_updateStatus.offline)
  
  ::mtproto::Bool* temp = offline_;
  offline_ = NULL;
  return temp;
}
void TL_account_updateStatus::set_allocated_offline(::mtproto::Bool* offline) {
  delete offline_;
  offline_ = offline;
  if (offline) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_account_updateStatus.offline)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TL_account_getWallPapers::TL_account_getWallPapers()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.TL_account_getWallPapers)
}
TL_account_getWallPapers::TL_account_getWallPapers(const TL_account_getWallPapers& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:mtproto.TL_account_getWallPapers)
}

void TL_account_getWallPapers::SharedCtor() {
  _cached_size_ = 0;
}

TL_account_getWallPapers::~TL_account_getWallPapers() {
  // @@protoc_insertion_point(destructor:mtproto.TL_account_getWallPapers)
  SharedDtor();
}

void TL_account_getWallPapers::SharedDtor() {
}

void TL_account_getWallPapers::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TL_account_getWallPapers::descriptor() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TL_account_getWallPapers& TL_account_getWallPapers::default_instance() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  return *internal_default_instance();
}

TL_account_getWallPapers* TL_account_getWallPapers::New(::google::protobuf::Arena* arena) const {
  TL_account_getWallPapers* n = new TL_account_getWallPapers;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TL_account_getWallPapers::Swap(TL_account_getWallPapers* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TL_account_getWallPapers::InternalSwap(TL_account_getWallPapers* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata TL_account_getWallPapers::GetMetadata() const {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TL_account_getWallPapers

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TL_account_reportPeer::kPeerFieldNumber;
const int TL_account_reportPeer::kReasonFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TL_account_reportPeer::TL_account_reportPeer()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.TL_account_reportPeer)
}
TL_account_reportPeer::TL_account_reportPeer(const TL_account_reportPeer& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_peer()) {
    peer_ = new ::mtproto::InputPeer(*from.peer_);
  } else {
    peer_ = NULL;
  }
  if (from.has_reason()) {
    reason_ = new ::mtproto::ReportReason(*from.reason_);
  } else {
    reason_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:mtproto.TL_account_reportPeer)
}

void TL_account_reportPeer::SharedCtor() {
  ::memset(&peer_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&reason_) -
      reinterpret_cast<char*>(&peer_)) + sizeof(reason_));
  _cached_size_ = 0;
}

TL_account_reportPeer::~TL_account_reportPeer() {
  // @@protoc_insertion_point(destructor:mtproto.TL_account_reportPeer)
  SharedDtor();
}

void TL_account_reportPeer::SharedDtor() {
  if (this != internal_default_instance()) delete peer_;
  if (this != internal_default_instance()) delete reason_;
}

void TL_account_reportPeer::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TL_account_reportPeer::descriptor() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TL_account_reportPeer& TL_account_reportPeer::default_instance() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  return *internal_default_instance();
}

TL_account_reportPeer* TL_account_reportPeer::New(::google::protobuf::Arena* arena) const {
  TL_account_reportPeer* n = new TL_account_reportPeer;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TL_account_reportPeer::Swap(TL_account_reportPeer* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TL_account_reportPeer::InternalSwap(TL_account_reportPeer* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata TL_account_reportPeer::GetMetadata() const {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TL_account_reportPeer

// .mtproto.InputPeer peer = 1;
bool TL_account_reportPeer::has_peer() const {
  return this != internal_default_instance() && peer_ != NULL;
}
void TL_account_reportPeer::clear_peer() {
  if (GetArenaNoVirtual() == NULL && peer_ != NULL) delete peer_;
  peer_ = NULL;
}
const ::mtproto::InputPeer& TL_account_reportPeer::peer() const {
  const ::mtproto::InputPeer* p = peer_;
  // @@protoc_insertion_point(field_get:mtproto.TL_account_reportPeer.peer)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::InputPeer*>(
      &::mtproto::_InputPeer_default_instance_);
}
::mtproto::InputPeer* TL_account_reportPeer::mutable_peer() {
  
  if (peer_ == NULL) {
    peer_ = new ::mtproto::InputPeer;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_account_reportPeer.peer)
  return peer_;
}
::mtproto::InputPeer* TL_account_reportPeer::release_peer() {
  // @@protoc_insertion_point(field_release:mtproto.TL_account_reportPeer.peer)
  
  ::mtproto::InputPeer* temp = peer_;
  peer_ = NULL;
  return temp;
}
void TL_account_reportPeer::set_allocated_peer(::mtproto::InputPeer* peer) {
  delete peer_;
  peer_ = peer;
  if (peer) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_account_reportPeer.peer)
}

// .mtproto.ReportReason reason = 2;
bool TL_account_reportPeer::has_reason() const {
  return this != internal_default_instance() && reason_ != NULL;
}
void TL_account_reportPeer::clear_reason() {
  if (GetArenaNoVirtual() == NULL && reason_ != NULL) delete reason_;
  reason_ = NULL;
}
const ::mtproto::ReportReason& TL_account_reportPeer::reason() const {
  const ::mtproto::ReportReason* p = reason_;
  // @@protoc_insertion_point(field_get:mtproto.TL_account_reportPeer.reason)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::ReportReason*>(
      &::mtproto::_ReportReason_default_instance_);
}
::mtproto::ReportReason* TL_account_reportPeer::mutable_reason() {
  
  if (reason_ == NULL) {
    reason_ = new ::mtproto::ReportReason;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_account_reportPeer.reason)
  return reason_;
}
::mtproto::ReportReason* TL_account_reportPeer::release_reason() {
  // @@protoc_insertion_point(field_release:mtproto.TL_account_reportPeer.reason)
  
  ::mtproto::ReportReason* temp = reason_;
  reason_ = NULL;
  return temp;
}
void TL_account_reportPeer::set_allocated_reason(::mtproto::ReportReason* reason) {
  delete reason_;
  reason_ = reason;
  if (reason) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_account_reportPeer.reason)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TL_account_checkUsername::kUsernameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TL_account_checkUsername::TL_account_checkUsername()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.TL_account_checkUsername)
}
TL_account_checkUsername::TL_account_checkUsername(const TL_account_checkUsername& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.username().size() > 0) {
    username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.username_);
  }
  // @@protoc_insertion_point(copy_constructor:mtproto.TL_account_checkUsername)
}

void TL_account_checkUsername::SharedCtor() {
  username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

TL_account_checkUsername::~TL_account_checkUsername() {
  // @@protoc_insertion_point(destructor:mtproto.TL_account_checkUsername)
  SharedDtor();
}

void TL_account_checkUsername::SharedDtor() {
  username_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void TL_account_checkUsername::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TL_account_checkUsername::descriptor() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TL_account_checkUsername& TL_account_checkUsername::default_instance() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  return *internal_default_instance();
}

TL_account_checkUsername* TL_account_checkUsername::New(::google::protobuf::Arena* arena) const {
  TL_account_checkUsername* n = new TL_account_checkUsername;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TL_account_checkUsername::Swap(TL_account_checkUsername* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TL_account_checkUsername::InternalSwap(TL_account_checkUsername* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata TL_account_checkUsername::GetMetadata() const {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TL_account_checkUsername

// string username = 1;
void TL_account_checkUsername::clear_username() {
  username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& TL_account_checkUsername::username() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_account_checkUsername.username)
  return username_.GetNoArena();
}
void TL_account_checkUsername::set_username(const ::std::string& value) {
  
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtproto.TL_account_checkUsername.username)
}
#if LANG_CXX11
void TL_account_checkUsername::set_username(::std::string&& value) {
  
  username_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mtproto.TL_account_checkUsername.username)
}
#endif
void TL_account_checkUsername::set_username(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtproto.TL_account_checkUsername.username)
}
void TL_account_checkUsername::set_username(const char* value, size_t size) {
  
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtproto.TL_account_checkUsername.username)
}
::std::string* TL_account_checkUsername::mutable_username() {
  
  // @@protoc_insertion_point(field_mutable:mtproto.TL_account_checkUsername.username)
  return username_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* TL_account_checkUsername::release_username() {
  // @@protoc_insertion_point(field_release:mtproto.TL_account_checkUsername.username)
  
  return username_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TL_account_checkUsername::set_allocated_username(::std::string* username) {
  if (username != NULL) {
    
  } else {
    
  }
  username_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), username);
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_account_checkUsername.username)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TL_account_updateUsername::kUsernameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TL_account_updateUsername::TL_account_updateUsername()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.TL_account_updateUsername)
}
TL_account_updateUsername::TL_account_updateUsername(const TL_account_updateUsername& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.username().size() > 0) {
    username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.username_);
  }
  // @@protoc_insertion_point(copy_constructor:mtproto.TL_account_updateUsername)
}

void TL_account_updateUsername::SharedCtor() {
  username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

TL_account_updateUsername::~TL_account_updateUsername() {
  // @@protoc_insertion_point(destructor:mtproto.TL_account_updateUsername)
  SharedDtor();
}

void TL_account_updateUsername::SharedDtor() {
  username_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void TL_account_updateUsername::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TL_account_updateUsername::descriptor() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TL_account_updateUsername& TL_account_updateUsername::default_instance() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  return *internal_default_instance();
}

TL_account_updateUsername* TL_account_updateUsername::New(::google::protobuf::Arena* arena) const {
  TL_account_updateUsername* n = new TL_account_updateUsername;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TL_account_updateUsername::Swap(TL_account_updateUsername* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TL_account_updateUsername::InternalSwap(TL_account_updateUsername* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata TL_account_updateUsername::GetMetadata() const {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TL_account_updateUsername

// string username = 1;
void TL_account_updateUsername::clear_username() {
  username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& TL_account_updateUsername::username() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_account_updateUsername.username)
  return username_.GetNoArena();
}
void TL_account_updateUsername::set_username(const ::std::string& value) {
  
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtproto.TL_account_updateUsername.username)
}
#if LANG_CXX11
void TL_account_updateUsername::set_username(::std::string&& value) {
  
  username_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mtproto.TL_account_updateUsername.username)
}
#endif
void TL_account_updateUsername::set_username(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtproto.TL_account_updateUsername.username)
}
void TL_account_updateUsername::set_username(const char* value, size_t size) {
  
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtproto.TL_account_updateUsername.username)
}
::std::string* TL_account_updateUsername::mutable_username() {
  
  // @@protoc_insertion_point(field_mutable:mtproto.TL_account_updateUsername.username)
  return username_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* TL_account_updateUsername::release_username() {
  // @@protoc_insertion_point(field_release:mtproto.TL_account_updateUsername.username)
  
  return username_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TL_account_updateUsername::set_allocated_username(::std::string* username) {
  if (username != NULL) {
    
  } else {
    
  }
  username_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), username);
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_account_updateUsername.username)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TL_account_getPrivacy::kKeyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TL_account_getPrivacy::TL_account_getPrivacy()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.TL_account_getPrivacy)
}
TL_account_getPrivacy::TL_account_getPrivacy(const TL_account_getPrivacy& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_key()) {
    key_ = new ::mtproto::InputPrivacyKey(*from.key_);
  } else {
    key_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:mtproto.TL_account_getPrivacy)
}

void TL_account_getPrivacy::SharedCtor() {
  key_ = NULL;
  _cached_size_ = 0;
}

TL_account_getPrivacy::~TL_account_getPrivacy() {
  // @@protoc_insertion_point(destructor:mtproto.TL_account_getPrivacy)
  SharedDtor();
}

void TL_account_getPrivacy::SharedDtor() {
  if (this != internal_default_instance()) delete key_;
}

void TL_account_getPrivacy::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TL_account_getPrivacy::descriptor() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TL_account_getPrivacy& TL_account_getPrivacy::default_instance() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  return *internal_default_instance();
}

TL_account_getPrivacy* TL_account_getPrivacy::New(::google::protobuf::Arena* arena) const {
  TL_account_getPrivacy* n = new TL_account_getPrivacy;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TL_account_getPrivacy::Swap(TL_account_getPrivacy* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TL_account_getPrivacy::InternalSwap(TL_account_getPrivacy* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata TL_account_getPrivacy::GetMetadata() const {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TL_account_getPrivacy

// .mtproto.InputPrivacyKey key = 1;
bool TL_account_getPrivacy::has_key() const {
  return this != internal_default_instance() && key_ != NULL;
}
void TL_account_getPrivacy::clear_key() {
  if (GetArenaNoVirtual() == NULL && key_ != NULL) delete key_;
  key_ = NULL;
}
const ::mtproto::InputPrivacyKey& TL_account_getPrivacy::key() const {
  const ::mtproto::InputPrivacyKey* p = key_;
  // @@protoc_insertion_point(field_get:mtproto.TL_account_getPrivacy.key)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::InputPrivacyKey*>(
      &::mtproto::_InputPrivacyKey_default_instance_);
}
::mtproto::InputPrivacyKey* TL_account_getPrivacy::mutable_key() {
  
  if (key_ == NULL) {
    key_ = new ::mtproto::InputPrivacyKey;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_account_getPrivacy.key)
  return key_;
}
::mtproto::InputPrivacyKey* TL_account_getPrivacy::release_key() {
  // @@protoc_insertion_point(field_release:mtproto.TL_account_getPrivacy.key)
  
  ::mtproto::InputPrivacyKey* temp = key_;
  key_ = NULL;
  return temp;
}
void TL_account_getPrivacy::set_allocated_key(::mtproto::InputPrivacyKey* key) {
  delete key_;
  key_ = key;
  if (key) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_account_getPrivacy.key)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TL_account_setPrivacy::kKeyFieldNumber;
const int TL_account_setPrivacy::kRulesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TL_account_setPrivacy::TL_account_setPrivacy()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.TL_account_setPrivacy)
}
TL_account_setPrivacy::TL_account_setPrivacy(const TL_account_setPrivacy& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      rules_(from.rules_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_key()) {
    key_ = new ::mtproto::InputPrivacyKey(*from.key_);
  } else {
    key_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:mtproto.TL_account_setPrivacy)
}

void TL_account_setPrivacy::SharedCtor() {
  key_ = NULL;
  _cached_size_ = 0;
}

TL_account_setPrivacy::~TL_account_setPrivacy() {
  // @@protoc_insertion_point(destructor:mtproto.TL_account_setPrivacy)
  SharedDtor();
}

void TL_account_setPrivacy::SharedDtor() {
  if (this != internal_default_instance()) delete key_;
}

void TL_account_setPrivacy::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TL_account_setPrivacy::descriptor() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TL_account_setPrivacy& TL_account_setPrivacy::default_instance() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  return *internal_default_instance();
}

TL_account_setPrivacy* TL_account_setPrivacy::New(::google::protobuf::Arena* arena) const {
  TL_account_setPrivacy* n = new TL_account_setPrivacy;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TL_account_setPrivacy::Swap(TL_account_setPrivacy* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TL_account_setPrivacy::InternalSwap(TL_account_setPrivacy* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata TL_account_setPrivacy::GetMetadata() const {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TL_account_setPrivacy

// .mtproto.InputPrivacyKey key = 1;
bool TL_account_setPrivacy::has_key() const {
  return this != internal_default_instance() && key_ != NULL;
}
void TL_account_setPrivacy::clear_key() {
  if (GetArenaNoVirtual() == NULL && key_ != NULL) delete key_;
  key_ = NULL;
}
const ::mtproto::InputPrivacyKey& TL_account_setPrivacy::key() const {
  const ::mtproto::InputPrivacyKey* p = key_;
  // @@protoc_insertion_point(field_get:mtproto.TL_account_setPrivacy.key)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::InputPrivacyKey*>(
      &::mtproto::_InputPrivacyKey_default_instance_);
}
::mtproto::InputPrivacyKey* TL_account_setPrivacy::mutable_key() {
  
  if (key_ == NULL) {
    key_ = new ::mtproto::InputPrivacyKey;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_account_setPrivacy.key)
  return key_;
}
::mtproto::InputPrivacyKey* TL_account_setPrivacy::release_key() {
  // @@protoc_insertion_point(field_release:mtproto.TL_account_setPrivacy.key)
  
  ::mtproto::InputPrivacyKey* temp = key_;
  key_ = NULL;
  return temp;
}
void TL_account_setPrivacy::set_allocated_key(::mtproto::InputPrivacyKey* key) {
  delete key_;
  key_ = key;
  if (key) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_account_setPrivacy.key)
}

// repeated .mtproto.InputPrivacyRule rules = 2;
int TL_account_setPrivacy::rules_size() const {
  return rules_.size();
}
void TL_account_setPrivacy::clear_rules() {
  rules_.Clear();
}
const ::mtproto::InputPrivacyRule& TL_account_setPrivacy::rules(int index) const {
  // @@protoc_insertion_point(field_get:mtproto.TL_account_setPrivacy.rules)
  return rules_.Get(index);
}
::mtproto::InputPrivacyRule* TL_account_setPrivacy::mutable_rules(int index) {
  // @@protoc_insertion_point(field_mutable:mtproto.TL_account_setPrivacy.rules)
  return rules_.Mutable(index);
}
::mtproto::InputPrivacyRule* TL_account_setPrivacy::add_rules() {
  // @@protoc_insertion_point(field_add:mtproto.TL_account_setPrivacy.rules)
  return rules_.Add();
}
::google::protobuf::RepeatedPtrField< ::mtproto::InputPrivacyRule >*
TL_account_setPrivacy::mutable_rules() {
  // @@protoc_insertion_point(field_mutable_list:mtproto.TL_account_setPrivacy.rules)
  return &rules_;
}
const ::google::protobuf::RepeatedPtrField< ::mtproto::InputPrivacyRule >&
TL_account_setPrivacy::rules() const {
  // @@protoc_insertion_point(field_list:mtproto.TL_account_setPrivacy.rules)
  return rules_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TL_account_deleteAccount::kReasonFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TL_account_deleteAccount::TL_account_deleteAccount()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.TL_account_deleteAccount)
}
TL_account_deleteAccount::TL_account_deleteAccount(const TL_account_deleteAccount& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  reason_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.reason().size() > 0) {
    reason_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.reason_);
  }
  // @@protoc_insertion_point(copy_constructor:mtproto.TL_account_deleteAccount)
}

void TL_account_deleteAccount::SharedCtor() {
  reason_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

TL_account_deleteAccount::~TL_account_deleteAccount() {
  // @@protoc_insertion_point(destructor:mtproto.TL_account_deleteAccount)
  SharedDtor();
}

void TL_account_deleteAccount::SharedDtor() {
  reason_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void TL_account_deleteAccount::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TL_account_deleteAccount::descriptor() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TL_account_deleteAccount& TL_account_deleteAccount::default_instance() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  return *internal_default_instance();
}

TL_account_deleteAccount* TL_account_deleteAccount::New(::google::protobuf::Arena* arena) const {
  TL_account_deleteAccount* n = new TL_account_deleteAccount;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TL_account_deleteAccount::Swap(TL_account_deleteAccount* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TL_account_deleteAccount::InternalSwap(TL_account_deleteAccount* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata TL_account_deleteAccount::GetMetadata() const {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TL_account_deleteAccount

// string reason = 1;
void TL_account_deleteAccount::clear_reason() {
  reason_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& TL_account_deleteAccount::reason() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_account_deleteAccount.reason)
  return reason_.GetNoArena();
}
void TL_account_deleteAccount::set_reason(const ::std::string& value) {
  
  reason_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtproto.TL_account_deleteAccount.reason)
}
#if LANG_CXX11
void TL_account_deleteAccount::set_reason(::std::string&& value) {
  
  reason_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mtproto.TL_account_deleteAccount.reason)
}
#endif
void TL_account_deleteAccount::set_reason(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  reason_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtproto.TL_account_deleteAccount.reason)
}
void TL_account_deleteAccount::set_reason(const char* value, size_t size) {
  
  reason_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtproto.TL_account_deleteAccount.reason)
}
::std::string* TL_account_deleteAccount::mutable_reason() {
  
  // @@protoc_insertion_point(field_mutable:mtproto.TL_account_deleteAccount.reason)
  return reason_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* TL_account_deleteAccount::release_reason() {
  // @@protoc_insertion_point(field_release:mtproto.TL_account_deleteAccount.reason)
  
  return reason_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TL_account_deleteAccount::set_allocated_reason(::std::string* reason) {
  if (reason != NULL) {
    
  } else {
    
  }
  reason_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), reason);
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_account_deleteAccount.reason)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TL_account_getAccountTTL::TL_account_getAccountTTL()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.TL_account_getAccountTTL)
}
TL_account_getAccountTTL::TL_account_getAccountTTL(const TL_account_getAccountTTL& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:mtproto.TL_account_getAccountTTL)
}

void TL_account_getAccountTTL::SharedCtor() {
  _cached_size_ = 0;
}

TL_account_getAccountTTL::~TL_account_getAccountTTL() {
  // @@protoc_insertion_point(destructor:mtproto.TL_account_getAccountTTL)
  SharedDtor();
}

void TL_account_getAccountTTL::SharedDtor() {
}

void TL_account_getAccountTTL::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TL_account_getAccountTTL::descriptor() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TL_account_getAccountTTL& TL_account_getAccountTTL::default_instance() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  return *internal_default_instance();
}

TL_account_getAccountTTL* TL_account_getAccountTTL::New(::google::protobuf::Arena* arena) const {
  TL_account_getAccountTTL* n = new TL_account_getAccountTTL;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TL_account_getAccountTTL::Swap(TL_account_getAccountTTL* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TL_account_getAccountTTL::InternalSwap(TL_account_getAccountTTL* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata TL_account_getAccountTTL::GetMetadata() const {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TL_account_getAccountTTL

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TL_account_setAccountTTL::kTtlFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TL_account_setAccountTTL::TL_account_setAccountTTL()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.TL_account_setAccountTTL)
}
TL_account_setAccountTTL::TL_account_setAccountTTL(const TL_account_setAccountTTL& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_ttl()) {
    ttl_ = new ::mtproto::AccountDaysTTL(*from.ttl_);
  } else {
    ttl_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:mtproto.TL_account_setAccountTTL)
}

void TL_account_setAccountTTL::SharedCtor() {
  ttl_ = NULL;
  _cached_size_ = 0;
}

TL_account_setAccountTTL::~TL_account_setAccountTTL() {
  // @@protoc_insertion_point(destructor:mtproto.TL_account_setAccountTTL)
  SharedDtor();
}

void TL_account_setAccountTTL::SharedDtor() {
  if (this != internal_default_instance()) delete ttl_;
}

void TL_account_setAccountTTL::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TL_account_setAccountTTL::descriptor() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TL_account_setAccountTTL& TL_account_setAccountTTL::default_instance() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  return *internal_default_instance();
}

TL_account_setAccountTTL* TL_account_setAccountTTL::New(::google::protobuf::Arena* arena) const {
  TL_account_setAccountTTL* n = new TL_account_setAccountTTL;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TL_account_setAccountTTL::Swap(TL_account_setAccountTTL* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TL_account_setAccountTTL::InternalSwap(TL_account_setAccountTTL* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata TL_account_setAccountTTL::GetMetadata() const {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TL_account_setAccountTTL

// .mtproto.AccountDaysTTL ttl = 1;
bool TL_account_setAccountTTL::has_ttl() const {
  return this != internal_default_instance() && ttl_ != NULL;
}
void TL_account_setAccountTTL::clear_ttl() {
  if (GetArenaNoVirtual() == NULL && ttl_ != NULL) delete ttl_;
  ttl_ = NULL;
}
const ::mtproto::AccountDaysTTL& TL_account_setAccountTTL::ttl() const {
  const ::mtproto::AccountDaysTTL* p = ttl_;
  // @@protoc_insertion_point(field_get:mtproto.TL_account_setAccountTTL.ttl)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::AccountDaysTTL*>(
      &::mtproto::_AccountDaysTTL_default_instance_);
}
::mtproto::AccountDaysTTL* TL_account_setAccountTTL::mutable_ttl() {
  
  if (ttl_ == NULL) {
    ttl_ = new ::mtproto::AccountDaysTTL;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_account_setAccountTTL.ttl)
  return ttl_;
}
::mtproto::AccountDaysTTL* TL_account_setAccountTTL::release_ttl() {
  // @@protoc_insertion_point(field_release:mtproto.TL_account_setAccountTTL.ttl)
  
  ::mtproto::AccountDaysTTL* temp = ttl_;
  ttl_ = NULL;
  return temp;
}
void TL_account_setAccountTTL::set_allocated_ttl(::mtproto::AccountDaysTTL* ttl) {
  delete ttl_;
  ttl_ = ttl;
  if (ttl) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_account_setAccountTTL.ttl)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TL_account_sendChangePhoneCode::kAllowFlashcallFieldNumber;
const int TL_account_sendChangePhoneCode::kPhoneNumberFieldNumber;
const int TL_account_sendChangePhoneCode::kCurrentNumberFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TL_account_sendChangePhoneCode::TL_account_sendChangePhoneCode()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.TL_account_sendChangePhoneCode)
}
TL_account_sendChangePhoneCode::TL_account_sendChangePhoneCode(const TL_account_sendChangePhoneCode& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  phone_number_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.phone_number().size() > 0) {
    phone_number_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.phone_number_);
  }
  if (from.has_current_number()) {
    current_number_ = new ::mtproto::Bool(*from.current_number_);
  } else {
    current_number_ = NULL;
  }
  allow_flashcall_ = from.allow_flashcall_;
  // @@protoc_insertion_point(copy_constructor:mtproto.TL_account_sendChangePhoneCode)
}

void TL_account_sendChangePhoneCode::SharedCtor() {
  phone_number_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&current_number_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&allow_flashcall_) -
      reinterpret_cast<char*>(&current_number_)) + sizeof(allow_flashcall_));
  _cached_size_ = 0;
}

TL_account_sendChangePhoneCode::~TL_account_sendChangePhoneCode() {
  // @@protoc_insertion_point(destructor:mtproto.TL_account_sendChangePhoneCode)
  SharedDtor();
}

void TL_account_sendChangePhoneCode::SharedDtor() {
  phone_number_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete current_number_;
}

void TL_account_sendChangePhoneCode::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TL_account_sendChangePhoneCode::descriptor() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TL_account_sendChangePhoneCode& TL_account_sendChangePhoneCode::default_instance() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  return *internal_default_instance();
}

TL_account_sendChangePhoneCode* TL_account_sendChangePhoneCode::New(::google::protobuf::Arena* arena) const {
  TL_account_sendChangePhoneCode* n = new TL_account_sendChangePhoneCode;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TL_account_sendChangePhoneCode::Swap(TL_account_sendChangePhoneCode* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TL_account_sendChangePhoneCode::InternalSwap(TL_account_sendChangePhoneCode* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata TL_account_sendChangePhoneCode::GetMetadata() const {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TL_account_sendChangePhoneCode

// bool allow_flashcall = 2;
void TL_account_sendChangePhoneCode::clear_allow_flashcall() {
  allow_flashcall_ = false;
}
bool TL_account_sendChangePhoneCode::allow_flashcall() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_account_sendChangePhoneCode.allow_flashcall)
  return allow_flashcall_;
}
void TL_account_sendChangePhoneCode::set_allow_flashcall(bool value) {
  
  allow_flashcall_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_account_sendChangePhoneCode.allow_flashcall)
}

// string phone_number = 3;
void TL_account_sendChangePhoneCode::clear_phone_number() {
  phone_number_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& TL_account_sendChangePhoneCode::phone_number() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_account_sendChangePhoneCode.phone_number)
  return phone_number_.GetNoArena();
}
void TL_account_sendChangePhoneCode::set_phone_number(const ::std::string& value) {
  
  phone_number_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtproto.TL_account_sendChangePhoneCode.phone_number)
}
#if LANG_CXX11
void TL_account_sendChangePhoneCode::set_phone_number(::std::string&& value) {
  
  phone_number_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mtproto.TL_account_sendChangePhoneCode.phone_number)
}
#endif
void TL_account_sendChangePhoneCode::set_phone_number(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  phone_number_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtproto.TL_account_sendChangePhoneCode.phone_number)
}
void TL_account_sendChangePhoneCode::set_phone_number(const char* value, size_t size) {
  
  phone_number_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtproto.TL_account_sendChangePhoneCode.phone_number)
}
::std::string* TL_account_sendChangePhoneCode::mutable_phone_number() {
  
  // @@protoc_insertion_point(field_mutable:mtproto.TL_account_sendChangePhoneCode.phone_number)
  return phone_number_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* TL_account_sendChangePhoneCode::release_phone_number() {
  // @@protoc_insertion_point(field_release:mtproto.TL_account_sendChangePhoneCode.phone_number)
  
  return phone_number_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TL_account_sendChangePhoneCode::set_allocated_phone_number(::std::string* phone_number) {
  if (phone_number != NULL) {
    
  } else {
    
  }
  phone_number_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), phone_number);
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_account_sendChangePhoneCode.phone_number)
}

// .mtproto.Bool current_number = 4;
bool TL_account_sendChangePhoneCode::has_current_number() const {
  return this != internal_default_instance() && current_number_ != NULL;
}
void TL_account_sendChangePhoneCode::clear_current_number() {
  if (GetArenaNoVirtual() == NULL && current_number_ != NULL) delete current_number_;
  current_number_ = NULL;
}
const ::mtproto::Bool& TL_account_sendChangePhoneCode::current_number() const {
  const ::mtproto::Bool* p = current_number_;
  // @@protoc_insertion_point(field_get:mtproto.TL_account_sendChangePhoneCode.current_number)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::Bool*>(
      &::mtproto::_Bool_default_instance_);
}
::mtproto::Bool* TL_account_sendChangePhoneCode::mutable_current_number() {
  
  if (current_number_ == NULL) {
    current_number_ = new ::mtproto::Bool;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_account_sendChangePhoneCode.current_number)
  return current_number_;
}
::mtproto::Bool* TL_account_sendChangePhoneCode::release_current_number() {
  // @@protoc_insertion_point(field_release:mtproto.TL_account_sendChangePhoneCode.current_number)
  
  ::mtproto::Bool* temp = current_number_;
  current_number_ = NULL;
  return temp;
}
void TL_account_sendChangePhoneCode::set_allocated_current_number(::mtproto::Bool* current_number) {
  delete current_number_;
  current_number_ = current_number;
  if (current_number) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_account_sendChangePhoneCode.current_number)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TL_account_changePhone::kPhoneNumberFieldNumber;
const int TL_account_changePhone::kPhoneCodeHashFieldNumber;
const int TL_account_changePhone::kPhoneCodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TL_account_changePhone::TL_account_changePhone()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.TL_account_changePhone)
}
TL_account_changePhone::TL_account_changePhone(const TL_account_changePhone& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  phone_number_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.phone_number().size() > 0) {
    phone_number_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.phone_number_);
  }
  phone_code_hash_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.phone_code_hash().size() > 0) {
    phone_code_hash_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.phone_code_hash_);
  }
  phone_code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.phone_code().size() > 0) {
    phone_code_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.phone_code_);
  }
  // @@protoc_insertion_point(copy_constructor:mtproto.TL_account_changePhone)
}

void TL_account_changePhone::SharedCtor() {
  phone_number_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  phone_code_hash_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  phone_code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

TL_account_changePhone::~TL_account_changePhone() {
  // @@protoc_insertion_point(destructor:mtproto.TL_account_changePhone)
  SharedDtor();
}

void TL_account_changePhone::SharedDtor() {
  phone_number_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  phone_code_hash_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  phone_code_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void TL_account_changePhone::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TL_account_changePhone::descriptor() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TL_account_changePhone& TL_account_changePhone::default_instance() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  return *internal_default_instance();
}

TL_account_changePhone* TL_account_changePhone::New(::google::protobuf::Arena* arena) const {
  TL_account_changePhone* n = new TL_account_changePhone;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TL_account_changePhone::Swap(TL_account_changePhone* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TL_account_changePhone::InternalSwap(TL_account_changePhone* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata TL_account_changePhone::GetMetadata() const {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TL_account_changePhone

// string phone_number = 1;
void TL_account_changePhone::clear_phone_number() {
  phone_number_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& TL_account_changePhone::phone_number() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_account_changePhone.phone_number)
  return phone_number_.GetNoArena();
}
void TL_account_changePhone::set_phone_number(const ::std::string& value) {
  
  phone_number_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtproto.TL_account_changePhone.phone_number)
}
#if LANG_CXX11
void TL_account_changePhone::set_phone_number(::std::string&& value) {
  
  phone_number_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mtproto.TL_account_changePhone.phone_number)
}
#endif
void TL_account_changePhone::set_phone_number(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  phone_number_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtproto.TL_account_changePhone.phone_number)
}
void TL_account_changePhone::set_phone_number(const char* value, size_t size) {
  
  phone_number_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtproto.TL_account_changePhone.phone_number)
}
::std::string* TL_account_changePhone::mutable_phone_number() {
  
  // @@protoc_insertion_point(field_mutable:mtproto.TL_account_changePhone.phone_number)
  return phone_number_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* TL_account_changePhone::release_phone_number() {
  // @@protoc_insertion_point(field_release:mtproto.TL_account_changePhone.phone_number)
  
  return phone_number_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TL_account_changePhone::set_allocated_phone_number(::std::string* phone_number) {
  if (phone_number != NULL) {
    
  } else {
    
  }
  phone_number_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), phone_number);
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_account_changePhone.phone_number)
}

// string phone_code_hash = 2;
void TL_account_changePhone::clear_phone_code_hash() {
  phone_code_hash_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& TL_account_changePhone::phone_code_hash() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_account_changePhone.phone_code_hash)
  return phone_code_hash_.GetNoArena();
}
void TL_account_changePhone::set_phone_code_hash(const ::std::string& value) {
  
  phone_code_hash_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtproto.TL_account_changePhone.phone_code_hash)
}
#if LANG_CXX11
void TL_account_changePhone::set_phone_code_hash(::std::string&& value) {
  
  phone_code_hash_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mtproto.TL_account_changePhone.phone_code_hash)
}
#endif
void TL_account_changePhone::set_phone_code_hash(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  phone_code_hash_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtproto.TL_account_changePhone.phone_code_hash)
}
void TL_account_changePhone::set_phone_code_hash(const char* value, size_t size) {
  
  phone_code_hash_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtproto.TL_account_changePhone.phone_code_hash)
}
::std::string* TL_account_changePhone::mutable_phone_code_hash() {
  
  // @@protoc_insertion_point(field_mutable:mtproto.TL_account_changePhone.phone_code_hash)
  return phone_code_hash_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* TL_account_changePhone::release_phone_code_hash() {
  // @@protoc_insertion_point(field_release:mtproto.TL_account_changePhone.phone_code_hash)
  
  return phone_code_hash_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TL_account_changePhone::set_allocated_phone_code_hash(::std::string* phone_code_hash) {
  if (phone_code_hash != NULL) {
    
  } else {
    
  }
  phone_code_hash_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), phone_code_hash);
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_account_changePhone.phone_code_hash)
}

// string phone_code = 3;
void TL_account_changePhone::clear_phone_code() {
  phone_code_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& TL_account_changePhone::phone_code() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_account_changePhone.phone_code)
  return phone_code_.GetNoArena();
}
void TL_account_changePhone::set_phone_code(const ::std::string& value) {
  
  phone_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtproto.TL_account_changePhone.phone_code)
}
#if LANG_CXX11
void TL_account_changePhone::set_phone_code(::std::string&& value) {
  
  phone_code_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mtproto.TL_account_changePhone.phone_code)
}
#endif
void TL_account_changePhone::set_phone_code(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  phone_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtproto.TL_account_changePhone.phone_code)
}
void TL_account_changePhone::set_phone_code(const char* value, size_t size) {
  
  phone_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtproto.TL_account_changePhone.phone_code)
}
::std::string* TL_account_changePhone::mutable_phone_code() {
  
  // @@protoc_insertion_point(field_mutable:mtproto.TL_account_changePhone.phone_code)
  return phone_code_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* TL_account_changePhone::release_phone_code() {
  // @@protoc_insertion_point(field_release:mtproto.TL_account_changePhone.phone_code)
  
  return phone_code_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TL_account_changePhone::set_allocated_phone_code(::std::string* phone_code) {
  if (phone_code != NULL) {
    
  } else {
    
  }
  phone_code_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), phone_code);
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_account_changePhone.phone_code)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TL_account_updateDeviceLocked::kPeriodFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TL_account_updateDeviceLocked::TL_account_updateDeviceLocked()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.TL_account_updateDeviceLocked)
}
TL_account_updateDeviceLocked::TL_account_updateDeviceLocked(const TL_account_updateDeviceLocked& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  period_ = from.period_;
  // @@protoc_insertion_point(copy_constructor:mtproto.TL_account_updateDeviceLocked)
}

void TL_account_updateDeviceLocked::SharedCtor() {
  period_ = 0;
  _cached_size_ = 0;
}

TL_account_updateDeviceLocked::~TL_account_updateDeviceLocked() {
  // @@protoc_insertion_point(destructor:mtproto.TL_account_updateDeviceLocked)
  SharedDtor();
}

void TL_account_updateDeviceLocked::SharedDtor() {
}

void TL_account_updateDeviceLocked::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TL_account_updateDeviceLocked::descriptor() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TL_account_updateDeviceLocked& TL_account_updateDeviceLocked::default_instance() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  return *internal_default_instance();
}

TL_account_updateDeviceLocked* TL_account_updateDeviceLocked::New(::google::protobuf::Arena* arena) const {
  TL_account_updateDeviceLocked* n = new TL_account_updateDeviceLocked;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TL_account_updateDeviceLocked::Swap(TL_account_updateDeviceLocked* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TL_account_updateDeviceLocked::InternalSwap(TL_account_updateDeviceLocked* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata TL_account_updateDeviceLocked::GetMetadata() const {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TL_account_updateDeviceLocked

// int32 period = 1;
void TL_account_updateDeviceLocked::clear_period() {
  period_ = 0;
}
::google::protobuf::int32 TL_account_updateDeviceLocked::period() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_account_updateDeviceLocked.period)
  return period_;
}
void TL_account_updateDeviceLocked::set_period(::google::protobuf::int32 value) {
  
  period_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_account_updateDeviceLocked.period)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TL_account_getAuthorizations::TL_account_getAuthorizations()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.TL_account_getAuthorizations)
}
TL_account_getAuthorizations::TL_account_getAuthorizations(const TL_account_getAuthorizations& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:mtproto.TL_account_getAuthorizations)
}

void TL_account_getAuthorizations::SharedCtor() {
  _cached_size_ = 0;
}

TL_account_getAuthorizations::~TL_account_getAuthorizations() {
  // @@protoc_insertion_point(destructor:mtproto.TL_account_getAuthorizations)
  SharedDtor();
}

void TL_account_getAuthorizations::SharedDtor() {
}

void TL_account_getAuthorizations::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TL_account_getAuthorizations::descriptor() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TL_account_getAuthorizations& TL_account_getAuthorizations::default_instance() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  return *internal_default_instance();
}

TL_account_getAuthorizations* TL_account_getAuthorizations::New(::google::protobuf::Arena* arena) const {
  TL_account_getAuthorizations* n = new TL_account_getAuthorizations;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TL_account_getAuthorizations::Swap(TL_account_getAuthorizations* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TL_account_getAuthorizations::InternalSwap(TL_account_getAuthorizations* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata TL_account_getAuthorizations::GetMetadata() const {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TL_account_getAuthorizations

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TL_account_resetAuthorization::kHashFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TL_account_resetAuthorization::TL_account_resetAuthorization()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.TL_account_resetAuthorization)
}
TL_account_resetAuthorization::TL_account_resetAuthorization(const TL_account_resetAuthorization& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  hash_ = from.hash_;
  // @@protoc_insertion_point(copy_constructor:mtproto.TL_account_resetAuthorization)
}

void TL_account_resetAuthorization::SharedCtor() {
  hash_ = GOOGLE_LONGLONG(0);
  _cached_size_ = 0;
}

TL_account_resetAuthorization::~TL_account_resetAuthorization() {
  // @@protoc_insertion_point(destructor:mtproto.TL_account_resetAuthorization)
  SharedDtor();
}

void TL_account_resetAuthorization::SharedDtor() {
}

void TL_account_resetAuthorization::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TL_account_resetAuthorization::descriptor() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TL_account_resetAuthorization& TL_account_resetAuthorization::default_instance() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  return *internal_default_instance();
}

TL_account_resetAuthorization* TL_account_resetAuthorization::New(::google::protobuf::Arena* arena) const {
  TL_account_resetAuthorization* n = new TL_account_resetAuthorization;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TL_account_resetAuthorization::Swap(TL_account_resetAuthorization* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TL_account_resetAuthorization::InternalSwap(TL_account_resetAuthorization* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata TL_account_resetAuthorization::GetMetadata() const {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TL_account_resetAuthorization

// int64 hash = 1;
void TL_account_resetAuthorization::clear_hash() {
  hash_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 TL_account_resetAuthorization::hash() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_account_resetAuthorization.hash)
  return hash_;
}
void TL_account_resetAuthorization::set_hash(::google::protobuf::int64 value) {
  
  hash_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_account_resetAuthorization.hash)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TL_account_getPassword::TL_account_getPassword()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.TL_account_getPassword)
}
TL_account_getPassword::TL_account_getPassword(const TL_account_getPassword& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:mtproto.TL_account_getPassword)
}

void TL_account_getPassword::SharedCtor() {
  _cached_size_ = 0;
}

TL_account_getPassword::~TL_account_getPassword() {
  // @@protoc_insertion_point(destructor:mtproto.TL_account_getPassword)
  SharedDtor();
}

void TL_account_getPassword::SharedDtor() {
}

void TL_account_getPassword::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TL_account_getPassword::descriptor() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TL_account_getPassword& TL_account_getPassword::default_instance() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  return *internal_default_instance();
}

TL_account_getPassword* TL_account_getPassword::New(::google::protobuf::Arena* arena) const {
  TL_account_getPassword* n = new TL_account_getPassword;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TL_account_getPassword::Swap(TL_account_getPassword* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TL_account_getPassword::InternalSwap(TL_account_getPassword* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata TL_account_getPassword::GetMetadata() const {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TL_account_getPassword

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TL_account_getPasswordSettings::kPasswordFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TL_account_getPasswordSettings::TL_account_getPasswordSettings()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.TL_account_getPasswordSettings)
}
TL_account_getPasswordSettings::TL_account_getPasswordSettings(const TL_account_getPasswordSettings& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_password()) {
    password_ = new ::mtproto::InputCheckPasswordSRP(*from.password_);
  } else {
    password_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:mtproto.TL_account_getPasswordSettings)
}

void TL_account_getPasswordSettings::SharedCtor() {
  password_ = NULL;
  _cached_size_ = 0;
}

TL_account_getPasswordSettings::~TL_account_getPasswordSettings() {
  // @@protoc_insertion_point(destructor:mtproto.TL_account_getPasswordSettings)
  SharedDtor();
}

void TL_account_getPasswordSettings::SharedDtor() {
  if (this != internal_default_instance()) delete password_;
}

void TL_account_getPasswordSettings::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TL_account_getPasswordSettings::descriptor() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TL_account_getPasswordSettings& TL_account_getPasswordSettings::default_instance() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  return *internal_default_instance();
}

TL_account_getPasswordSettings* TL_account_getPasswordSettings::New(::google::protobuf::Arena* arena) const {
  TL_account_getPasswordSettings* n = new TL_account_getPasswordSettings;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TL_account_getPasswordSettings::Swap(TL_account_getPasswordSettings* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TL_account_getPasswordSettings::InternalSwap(TL_account_getPasswordSettings* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata TL_account_getPasswordSettings::GetMetadata() const {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TL_account_getPasswordSettings

// .mtproto.InputCheckPasswordSRP password = 1;
bool TL_account_getPasswordSettings::has_password() const {
  return this != internal_default_instance() && password_ != NULL;
}
void TL_account_getPasswordSettings::clear_password() {
  if (GetArenaNoVirtual() == NULL && password_ != NULL) delete password_;
  password_ = NULL;
}
const ::mtproto::InputCheckPasswordSRP& TL_account_getPasswordSettings::password() const {
  const ::mtproto::InputCheckPasswordSRP* p = password_;
  // @@protoc_insertion_point(field_get:mtproto.TL_account_getPasswordSettings.password)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::InputCheckPasswordSRP*>(
      &::mtproto::_InputCheckPasswordSRP_default_instance_);
}
::mtproto::InputCheckPasswordSRP* TL_account_getPasswordSettings::mutable_password() {
  
  if (password_ == NULL) {
    password_ = new ::mtproto::InputCheckPasswordSRP;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_account_getPasswordSettings.password)
  return password_;
}
::mtproto::InputCheckPasswordSRP* TL_account_getPasswordSettings::release_password() {
  // @@protoc_insertion_point(field_release:mtproto.TL_account_getPasswordSettings.password)
  
  ::mtproto::InputCheckPasswordSRP* temp = password_;
  password_ = NULL;
  return temp;
}
void TL_account_getPasswordSettings::set_allocated_password(::mtproto::InputCheckPasswordSRP* password) {
  delete password_;
  password_ = password;
  if (password) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_account_getPasswordSettings.password)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TL_account_updatePasswordSettings::kPasswordFieldNumber;
const int TL_account_updatePasswordSettings::kNewSettingsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TL_account_updatePasswordSettings::TL_account_updatePasswordSettings()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.TL_account_updatePasswordSettings)
}
TL_account_updatePasswordSettings::TL_account_updatePasswordSettings(const TL_account_updatePasswordSettings& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_password()) {
    password_ = new ::mtproto::InputCheckPasswordSRP(*from.password_);
  } else {
    password_ = NULL;
  }
  if (from.has_new_settings()) {
    new_settings_ = new ::mtproto::account_PasswordInputSettings(*from.new_settings_);
  } else {
    new_settings_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:mtproto.TL_account_updatePasswordSettings)
}

void TL_account_updatePasswordSettings::SharedCtor() {
  ::memset(&password_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&new_settings_) -
      reinterpret_cast<char*>(&password_)) + sizeof(new_settings_));
  _cached_size_ = 0;
}

TL_account_updatePasswordSettings::~TL_account_updatePasswordSettings() {
  // @@protoc_insertion_point(destructor:mtproto.TL_account_updatePasswordSettings)
  SharedDtor();
}

void TL_account_updatePasswordSettings::SharedDtor() {
  if (this != internal_default_instance()) delete password_;
  if (this != internal_default_instance()) delete new_settings_;
}

void TL_account_updatePasswordSettings::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TL_account_updatePasswordSettings::descriptor() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TL_account_updatePasswordSettings& TL_account_updatePasswordSettings::default_instance() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  return *internal_default_instance();
}

TL_account_updatePasswordSettings* TL_account_updatePasswordSettings::New(::google::protobuf::Arena* arena) const {
  TL_account_updatePasswordSettings* n = new TL_account_updatePasswordSettings;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TL_account_updatePasswordSettings::Swap(TL_account_updatePasswordSettings* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TL_account_updatePasswordSettings::InternalSwap(TL_account_updatePasswordSettings* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata TL_account_updatePasswordSettings::GetMetadata() const {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TL_account_updatePasswordSettings

// .mtproto.InputCheckPasswordSRP password = 1;
bool TL_account_updatePasswordSettings::has_password() const {
  return this != internal_default_instance() && password_ != NULL;
}
void TL_account_updatePasswordSettings::clear_password() {
  if (GetArenaNoVirtual() == NULL && password_ != NULL) delete password_;
  password_ = NULL;
}
const ::mtproto::InputCheckPasswordSRP& TL_account_updatePasswordSettings::password() const {
  const ::mtproto::InputCheckPasswordSRP* p = password_;
  // @@protoc_insertion_point(field_get:mtproto.TL_account_updatePasswordSettings.password)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::InputCheckPasswordSRP*>(
      &::mtproto::_InputCheckPasswordSRP_default_instance_);
}
::mtproto::InputCheckPasswordSRP* TL_account_updatePasswordSettings::mutable_password() {
  
  if (password_ == NULL) {
    password_ = new ::mtproto::InputCheckPasswordSRP;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_account_updatePasswordSettings.password)
  return password_;
}
::mtproto::InputCheckPasswordSRP* TL_account_updatePasswordSettings::release_password() {
  // @@protoc_insertion_point(field_release:mtproto.TL_account_updatePasswordSettings.password)
  
  ::mtproto::InputCheckPasswordSRP* temp = password_;
  password_ = NULL;
  return temp;
}
void TL_account_updatePasswordSettings::set_allocated_password(::mtproto::InputCheckPasswordSRP* password) {
  delete password_;
  password_ = password;
  if (password) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_account_updatePasswordSettings.password)
}

// .mtproto.account_PasswordInputSettings new_settings = 2;
bool TL_account_updatePasswordSettings::has_new_settings() const {
  return this != internal_default_instance() && new_settings_ != NULL;
}
void TL_account_updatePasswordSettings::clear_new_settings() {
  if (GetArenaNoVirtual() == NULL && new_settings_ != NULL) delete new_settings_;
  new_settings_ = NULL;
}
const ::mtproto::account_PasswordInputSettings& TL_account_updatePasswordSettings::new_settings() const {
  const ::mtproto::account_PasswordInputSettings* p = new_settings_;
  // @@protoc_insertion_point(field_get:mtproto.TL_account_updatePasswordSettings.new_settings)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::account_PasswordInputSettings*>(
      &::mtproto::_account_PasswordInputSettings_default_instance_);
}
::mtproto::account_PasswordInputSettings* TL_account_updatePasswordSettings::mutable_new_settings() {
  
  if (new_settings_ == NULL) {
    new_settings_ = new ::mtproto::account_PasswordInputSettings;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_account_updatePasswordSettings.new_settings)
  return new_settings_;
}
::mtproto::account_PasswordInputSettings* TL_account_updatePasswordSettings::release_new_settings() {
  // @@protoc_insertion_point(field_release:mtproto.TL_account_updatePasswordSettings.new_settings)
  
  ::mtproto::account_PasswordInputSettings* temp = new_settings_;
  new_settings_ = NULL;
  return temp;
}
void TL_account_updatePasswordSettings::set_allocated_new_settings(::mtproto::account_PasswordInputSettings* new_settings) {
  delete new_settings_;
  new_settings_ = new_settings;
  if (new_settings) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_account_updatePasswordSettings.new_settings)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TL_account_sendConfirmPhoneCode::kAllowFlashcallFieldNumber;
const int TL_account_sendConfirmPhoneCode::kHashFieldNumber;
const int TL_account_sendConfirmPhoneCode::kCurrentNumberFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TL_account_sendConfirmPhoneCode::TL_account_sendConfirmPhoneCode()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.TL_account_sendConfirmPhoneCode)
}
TL_account_sendConfirmPhoneCode::TL_account_sendConfirmPhoneCode(const TL_account_sendConfirmPhoneCode& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  hash_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.hash().size() > 0) {
    hash_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.hash_);
  }
  if (from.has_current_number()) {
    current_number_ = new ::mtproto::Bool(*from.current_number_);
  } else {
    current_number_ = NULL;
  }
  allow_flashcall_ = from.allow_flashcall_;
  // @@protoc_insertion_point(copy_constructor:mtproto.TL_account_sendConfirmPhoneCode)
}

void TL_account_sendConfirmPhoneCode::SharedCtor() {
  hash_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&current_number_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&allow_flashcall_) -
      reinterpret_cast<char*>(&current_number_)) + sizeof(allow_flashcall_));
  _cached_size_ = 0;
}

TL_account_sendConfirmPhoneCode::~TL_account_sendConfirmPhoneCode() {
  // @@protoc_insertion_point(destructor:mtproto.TL_account_sendConfirmPhoneCode)
  SharedDtor();
}

void TL_account_sendConfirmPhoneCode::SharedDtor() {
  hash_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete current_number_;
}

void TL_account_sendConfirmPhoneCode::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TL_account_sendConfirmPhoneCode::descriptor() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TL_account_sendConfirmPhoneCode& TL_account_sendConfirmPhoneCode::default_instance() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  return *internal_default_instance();
}

TL_account_sendConfirmPhoneCode* TL_account_sendConfirmPhoneCode::New(::google::protobuf::Arena* arena) const {
  TL_account_sendConfirmPhoneCode* n = new TL_account_sendConfirmPhoneCode;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TL_account_sendConfirmPhoneCode::Swap(TL_account_sendConfirmPhoneCode* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TL_account_sendConfirmPhoneCode::InternalSwap(TL_account_sendConfirmPhoneCode* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata TL_account_sendConfirmPhoneCode::GetMetadata() const {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TL_account_sendConfirmPhoneCode

// bool allow_flashcall = 2;
void TL_account_sendConfirmPhoneCode::clear_allow_flashcall() {
  allow_flashcall_ = false;
}
bool TL_account_sendConfirmPhoneCode::allow_flashcall() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_account_sendConfirmPhoneCode.allow_flashcall)
  return allow_flashcall_;
}
void TL_account_sendConfirmPhoneCode::set_allow_flashcall(bool value) {
  
  allow_flashcall_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_account_sendConfirmPhoneCode.allow_flashcall)
}

// string hash = 3;
void TL_account_sendConfirmPhoneCode::clear_hash() {
  hash_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& TL_account_sendConfirmPhoneCode::hash() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_account_sendConfirmPhoneCode.hash)
  return hash_.GetNoArena();
}
void TL_account_sendConfirmPhoneCode::set_hash(const ::std::string& value) {
  
  hash_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtproto.TL_account_sendConfirmPhoneCode.hash)
}
#if LANG_CXX11
void TL_account_sendConfirmPhoneCode::set_hash(::std::string&& value) {
  
  hash_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mtproto.TL_account_sendConfirmPhoneCode.hash)
}
#endif
void TL_account_sendConfirmPhoneCode::set_hash(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  hash_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtproto.TL_account_sendConfirmPhoneCode.hash)
}
void TL_account_sendConfirmPhoneCode::set_hash(const char* value, size_t size) {
  
  hash_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtproto.TL_account_sendConfirmPhoneCode.hash)
}
::std::string* TL_account_sendConfirmPhoneCode::mutable_hash() {
  
  // @@protoc_insertion_point(field_mutable:mtproto.TL_account_sendConfirmPhoneCode.hash)
  return hash_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* TL_account_sendConfirmPhoneCode::release_hash() {
  // @@protoc_insertion_point(field_release:mtproto.TL_account_sendConfirmPhoneCode.hash)
  
  return hash_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TL_account_sendConfirmPhoneCode::set_allocated_hash(::std::string* hash) {
  if (hash != NULL) {
    
  } else {
    
  }
  hash_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), hash);
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_account_sendConfirmPhoneCode.hash)
}

// .mtproto.Bool current_number = 4;
bool TL_account_sendConfirmPhoneCode::has_current_number() const {
  return this != internal_default_instance() && current_number_ != NULL;
}
void TL_account_sendConfirmPhoneCode::clear_current_number() {
  if (GetArenaNoVirtual() == NULL && current_number_ != NULL) delete current_number_;
  current_number_ = NULL;
}
const ::mtproto::Bool& TL_account_sendConfirmPhoneCode::current_number() const {
  const ::mtproto::Bool* p = current_number_;
  // @@protoc_insertion_point(field_get:mtproto.TL_account_sendConfirmPhoneCode.current_number)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::Bool*>(
      &::mtproto::_Bool_default_instance_);
}
::mtproto::Bool* TL_account_sendConfirmPhoneCode::mutable_current_number() {
  
  if (current_number_ == NULL) {
    current_number_ = new ::mtproto::Bool;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_account_sendConfirmPhoneCode.current_number)
  return current_number_;
}
::mtproto::Bool* TL_account_sendConfirmPhoneCode::release_current_number() {
  // @@protoc_insertion_point(field_release:mtproto.TL_account_sendConfirmPhoneCode.current_number)
  
  ::mtproto::Bool* temp = current_number_;
  current_number_ = NULL;
  return temp;
}
void TL_account_sendConfirmPhoneCode::set_allocated_current_number(::mtproto::Bool* current_number) {
  delete current_number_;
  current_number_ = current_number;
  if (current_number) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_account_sendConfirmPhoneCode.current_number)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TL_account_confirmPhone::kPhoneCodeHashFieldNumber;
const int TL_account_confirmPhone::kPhoneCodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TL_account_confirmPhone::TL_account_confirmPhone()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.TL_account_confirmPhone)
}
TL_account_confirmPhone::TL_account_confirmPhone(const TL_account_confirmPhone& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  phone_code_hash_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.phone_code_hash().size() > 0) {
    phone_code_hash_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.phone_code_hash_);
  }
  phone_code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.phone_code().size() > 0) {
    phone_code_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.phone_code_);
  }
  // @@protoc_insertion_point(copy_constructor:mtproto.TL_account_confirmPhone)
}

void TL_account_confirmPhone::SharedCtor() {
  phone_code_hash_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  phone_code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

TL_account_confirmPhone::~TL_account_confirmPhone() {
  // @@protoc_insertion_point(destructor:mtproto.TL_account_confirmPhone)
  SharedDtor();
}

void TL_account_confirmPhone::SharedDtor() {
  phone_code_hash_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  phone_code_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void TL_account_confirmPhone::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TL_account_confirmPhone::descriptor() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TL_account_confirmPhone& TL_account_confirmPhone::default_instance() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  return *internal_default_instance();
}

TL_account_confirmPhone* TL_account_confirmPhone::New(::google::protobuf::Arena* arena) const {
  TL_account_confirmPhone* n = new TL_account_confirmPhone;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TL_account_confirmPhone::Swap(TL_account_confirmPhone* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TL_account_confirmPhone::InternalSwap(TL_account_confirmPhone* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata TL_account_confirmPhone::GetMetadata() const {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TL_account_confirmPhone

// string phone_code_hash = 1;
void TL_account_confirmPhone::clear_phone_code_hash() {
  phone_code_hash_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& TL_account_confirmPhone::phone_code_hash() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_account_confirmPhone.phone_code_hash)
  return phone_code_hash_.GetNoArena();
}
void TL_account_confirmPhone::set_phone_code_hash(const ::std::string& value) {
  
  phone_code_hash_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtproto.TL_account_confirmPhone.phone_code_hash)
}
#if LANG_CXX11
void TL_account_confirmPhone::set_phone_code_hash(::std::string&& value) {
  
  phone_code_hash_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mtproto.TL_account_confirmPhone.phone_code_hash)
}
#endif
void TL_account_confirmPhone::set_phone_code_hash(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  phone_code_hash_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtproto.TL_account_confirmPhone.phone_code_hash)
}
void TL_account_confirmPhone::set_phone_code_hash(const char* value, size_t size) {
  
  phone_code_hash_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtproto.TL_account_confirmPhone.phone_code_hash)
}
::std::string* TL_account_confirmPhone::mutable_phone_code_hash() {
  
  // @@protoc_insertion_point(field_mutable:mtproto.TL_account_confirmPhone.phone_code_hash)
  return phone_code_hash_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* TL_account_confirmPhone::release_phone_code_hash() {
  // @@protoc_insertion_point(field_release:mtproto.TL_account_confirmPhone.phone_code_hash)
  
  return phone_code_hash_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TL_account_confirmPhone::set_allocated_phone_code_hash(::std::string* phone_code_hash) {
  if (phone_code_hash != NULL) {
    
  } else {
    
  }
  phone_code_hash_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), phone_code_hash);
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_account_confirmPhone.phone_code_hash)
}

// string phone_code = 2;
void TL_account_confirmPhone::clear_phone_code() {
  phone_code_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& TL_account_confirmPhone::phone_code() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_account_confirmPhone.phone_code)
  return phone_code_.GetNoArena();
}
void TL_account_confirmPhone::set_phone_code(const ::std::string& value) {
  
  phone_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtproto.TL_account_confirmPhone.phone_code)
}
#if LANG_CXX11
void TL_account_confirmPhone::set_phone_code(::std::string&& value) {
  
  phone_code_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mtproto.TL_account_confirmPhone.phone_code)
}
#endif
void TL_account_confirmPhone::set_phone_code(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  phone_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtproto.TL_account_confirmPhone.phone_code)
}
void TL_account_confirmPhone::set_phone_code(const char* value, size_t size) {
  
  phone_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtproto.TL_account_confirmPhone.phone_code)
}
::std::string* TL_account_confirmPhone::mutable_phone_code() {
  
  // @@protoc_insertion_point(field_mutable:mtproto.TL_account_confirmPhone.phone_code)
  return phone_code_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* TL_account_confirmPhone::release_phone_code() {
  // @@protoc_insertion_point(field_release:mtproto.TL_account_confirmPhone.phone_code)
  
  return phone_code_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TL_account_confirmPhone::set_allocated_phone_code(::std::string* phone_code) {
  if (phone_code != NULL) {
    
  } else {
    
  }
  phone_code_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), phone_code);
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_account_confirmPhone.phone_code)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TL_account_getTmpPassword::kPasswordFieldNumber;
const int TL_account_getTmpPassword::kPeriodFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TL_account_getTmpPassword::TL_account_getTmpPassword()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.TL_account_getTmpPassword)
}
TL_account_getTmpPassword::TL_account_getTmpPassword(const TL_account_getTmpPassword& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_password()) {
    password_ = new ::mtproto::InputCheckPasswordSRP(*from.password_);
  } else {
    password_ = NULL;
  }
  period_ = from.period_;
  // @@protoc_insertion_point(copy_constructor:mtproto.TL_account_getTmpPassword)
}

void TL_account_getTmpPassword::SharedCtor() {
  ::memset(&password_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&period_) -
      reinterpret_cast<char*>(&password_)) + sizeof(period_));
  _cached_size_ = 0;
}

TL_account_getTmpPassword::~TL_account_getTmpPassword() {
  // @@protoc_insertion_point(destructor:mtproto.TL_account_getTmpPassword)
  SharedDtor();
}

void TL_account_getTmpPassword::SharedDtor() {
  if (this != internal_default_instance()) delete password_;
}

void TL_account_getTmpPassword::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TL_account_getTmpPassword::descriptor() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TL_account_getTmpPassword& TL_account_getTmpPassword::default_instance() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  return *internal_default_instance();
}

TL_account_getTmpPassword* TL_account_getTmpPassword::New(::google::protobuf::Arena* arena) const {
  TL_account_getTmpPassword* n = new TL_account_getTmpPassword;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TL_account_getTmpPassword::Swap(TL_account_getTmpPassword* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TL_account_getTmpPassword::InternalSwap(TL_account_getTmpPassword* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata TL_account_getTmpPassword::GetMetadata() const {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TL_account_getTmpPassword

// .mtproto.InputCheckPasswordSRP password = 1;
bool TL_account_getTmpPassword::has_password() const {
  return this != internal_default_instance() && password_ != NULL;
}
void TL_account_getTmpPassword::clear_password() {
  if (GetArenaNoVirtual() == NULL && password_ != NULL) delete password_;
  password_ = NULL;
}
const ::mtproto::InputCheckPasswordSRP& TL_account_getTmpPassword::password() const {
  const ::mtproto::InputCheckPasswordSRP* p = password_;
  // @@protoc_insertion_point(field_get:mtproto.TL_account_getTmpPassword.password)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::InputCheckPasswordSRP*>(
      &::mtproto::_InputCheckPasswordSRP_default_instance_);
}
::mtproto::InputCheckPasswordSRP* TL_account_getTmpPassword::mutable_password() {
  
  if (password_ == NULL) {
    password_ = new ::mtproto::InputCheckPasswordSRP;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_account_getTmpPassword.password)
  return password_;
}
::mtproto::InputCheckPasswordSRP* TL_account_getTmpPassword::release_password() {
  // @@protoc_insertion_point(field_release:mtproto.TL_account_getTmpPassword.password)
  
  ::mtproto::InputCheckPasswordSRP* temp = password_;
  password_ = NULL;
  return temp;
}
void TL_account_getTmpPassword::set_allocated_password(::mtproto::InputCheckPasswordSRP* password) {
  delete password_;
  password_ = password;
  if (password) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_account_getTmpPassword.password)
}

// int32 period = 2;
void TL_account_getTmpPassword::clear_period() {
  period_ = 0;
}
::google::protobuf::int32 TL_account_getTmpPassword::period() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_account_getTmpPassword.period)
  return period_;
}
void TL_account_getTmpPassword::set_period(::google::protobuf::int32 value) {
  
  period_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_account_getTmpPassword.period)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TL_account_getWebAuthorizations::TL_account_getWebAuthorizations()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.TL_account_getWebAuthorizations)
}
TL_account_getWebAuthorizations::TL_account_getWebAuthorizations(const TL_account_getWebAuthorizations& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:mtproto.TL_account_getWebAuthorizations)
}

void TL_account_getWebAuthorizations::SharedCtor() {
  _cached_size_ = 0;
}

TL_account_getWebAuthorizations::~TL_account_getWebAuthorizations() {
  // @@protoc_insertion_point(destructor:mtproto.TL_account_getWebAuthorizations)
  SharedDtor();
}

void TL_account_getWebAuthorizations::SharedDtor() {
}

void TL_account_getWebAuthorizations::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TL_account_getWebAuthorizations::descriptor() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TL_account_getWebAuthorizations& TL_account_getWebAuthorizations::default_instance() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  return *internal_default_instance();
}

TL_account_getWebAuthorizations* TL_account_getWebAuthorizations::New(::google::protobuf::Arena* arena) const {
  TL_account_getWebAuthorizations* n = new TL_account_getWebAuthorizations;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TL_account_getWebAuthorizations::Swap(TL_account_getWebAuthorizations* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TL_account_getWebAuthorizations::InternalSwap(TL_account_getWebAuthorizations* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata TL_account_getWebAuthorizations::GetMetadata() const {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TL_account_getWebAuthorizations

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TL_account_resetWebAuthorization::kHashFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TL_account_resetWebAuthorization::TL_account_resetWebAuthorization()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.TL_account_resetWebAuthorization)
}
TL_account_resetWebAuthorization::TL_account_resetWebAuthorization(const TL_account_resetWebAuthorization& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  hash_ = from.hash_;
  // @@protoc_insertion_point(copy_constructor:mtproto.TL_account_resetWebAuthorization)
}

void TL_account_resetWebAuthorization::SharedCtor() {
  hash_ = GOOGLE_LONGLONG(0);
  _cached_size_ = 0;
}

TL_account_resetWebAuthorization::~TL_account_resetWebAuthorization() {
  // @@protoc_insertion_point(destructor:mtproto.TL_account_resetWebAuthorization)
  SharedDtor();
}

void TL_account_resetWebAuthorization::SharedDtor() {
}

void TL_account_resetWebAuthorization::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TL_account_resetWebAuthorization::descriptor() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TL_account_resetWebAuthorization& TL_account_resetWebAuthorization::default_instance() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  return *internal_default_instance();
}

TL_account_resetWebAuthorization* TL_account_resetWebAuthorization::New(::google::protobuf::Arena* arena) const {
  TL_account_resetWebAuthorization* n = new TL_account_resetWebAuthorization;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TL_account_resetWebAuthorization::Swap(TL_account_resetWebAuthorization* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TL_account_resetWebAuthorization::InternalSwap(TL_account_resetWebAuthorization* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata TL_account_resetWebAuthorization::GetMetadata() const {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TL_account_resetWebAuthorization

// int64 hash = 1;
void TL_account_resetWebAuthorization::clear_hash() {
  hash_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 TL_account_resetWebAuthorization::hash() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_account_resetWebAuthorization.hash)
  return hash_;
}
void TL_account_resetWebAuthorization::set_hash(::google::protobuf::int64 value) {
  
  hash_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_account_resetWebAuthorization.hash)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TL_account_resetWebAuthorizations::TL_account_resetWebAuthorizations()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.TL_account_resetWebAuthorizations)
}
TL_account_resetWebAuthorizations::TL_account_resetWebAuthorizations(const TL_account_resetWebAuthorizations& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:mtproto.TL_account_resetWebAuthorizations)
}

void TL_account_resetWebAuthorizations::SharedCtor() {
  _cached_size_ = 0;
}

TL_account_resetWebAuthorizations::~TL_account_resetWebAuthorizations() {
  // @@protoc_insertion_point(destructor:mtproto.TL_account_resetWebAuthorizations)
  SharedDtor();
}

void TL_account_resetWebAuthorizations::SharedDtor() {
}

void TL_account_resetWebAuthorizations::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TL_account_resetWebAuthorizations::descriptor() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TL_account_resetWebAuthorizations& TL_account_resetWebAuthorizations::default_instance() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  return *internal_default_instance();
}

TL_account_resetWebAuthorizations* TL_account_resetWebAuthorizations::New(::google::protobuf::Arena* arena) const {
  TL_account_resetWebAuthorizations* n = new TL_account_resetWebAuthorizations;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TL_account_resetWebAuthorizations::Swap(TL_account_resetWebAuthorizations* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TL_account_resetWebAuthorizations::InternalSwap(TL_account_resetWebAuthorizations* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata TL_account_resetWebAuthorizations::GetMetadata() const {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TL_account_resetWebAuthorizations

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TL_account_getAllSecureValues::TL_account_getAllSecureValues()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.TL_account_getAllSecureValues)
}
TL_account_getAllSecureValues::TL_account_getAllSecureValues(const TL_account_getAllSecureValues& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:mtproto.TL_account_getAllSecureValues)
}

void TL_account_getAllSecureValues::SharedCtor() {
  _cached_size_ = 0;
}

TL_account_getAllSecureValues::~TL_account_getAllSecureValues() {
  // @@protoc_insertion_point(destructor:mtproto.TL_account_getAllSecureValues)
  SharedDtor();
}

void TL_account_getAllSecureValues::SharedDtor() {
}

void TL_account_getAllSecureValues::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TL_account_getAllSecureValues::descriptor() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TL_account_getAllSecureValues& TL_account_getAllSecureValues::default_instance() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  return *internal_default_instance();
}

TL_account_getAllSecureValues* TL_account_getAllSecureValues::New(::google::protobuf::Arena* arena) const {
  TL_account_getAllSecureValues* n = new TL_account_getAllSecureValues;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TL_account_getAllSecureValues::Swap(TL_account_getAllSecureValues* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TL_account_getAllSecureValues::InternalSwap(TL_account_getAllSecureValues* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata TL_account_getAllSecureValues::GetMetadata() const {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TL_account_getAllSecureValues

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TL_account_getSecureValue::kTypesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TL_account_getSecureValue::TL_account_getSecureValue()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.TL_account_getSecureValue)
}
TL_account_getSecureValue::TL_account_getSecureValue(const TL_account_getSecureValue& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      types_(from.types_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:mtproto.TL_account_getSecureValue)
}

void TL_account_getSecureValue::SharedCtor() {
  _cached_size_ = 0;
}

TL_account_getSecureValue::~TL_account_getSecureValue() {
  // @@protoc_insertion_point(destructor:mtproto.TL_account_getSecureValue)
  SharedDtor();
}

void TL_account_getSecureValue::SharedDtor() {
}

void TL_account_getSecureValue::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TL_account_getSecureValue::descriptor() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TL_account_getSecureValue& TL_account_getSecureValue::default_instance() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  return *internal_default_instance();
}

TL_account_getSecureValue* TL_account_getSecureValue::New(::google::protobuf::Arena* arena) const {
  TL_account_getSecureValue* n = new TL_account_getSecureValue;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TL_account_getSecureValue::Swap(TL_account_getSecureValue* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TL_account_getSecureValue::InternalSwap(TL_account_getSecureValue* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata TL_account_getSecureValue::GetMetadata() const {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TL_account_getSecureValue

// repeated .mtproto.SecureValueType types = 1;
int TL_account_getSecureValue::types_size() const {
  return types_.size();
}
void TL_account_getSecureValue::clear_types() {
  types_.Clear();
}
const ::mtproto::SecureValueType& TL_account_getSecureValue::types(int index) const {
  // @@protoc_insertion_point(field_get:mtproto.TL_account_getSecureValue.types)
  return types_.Get(index);
}
::mtproto::SecureValueType* TL_account_getSecureValue::mutable_types(int index) {
  // @@protoc_insertion_point(field_mutable:mtproto.TL_account_getSecureValue.types)
  return types_.Mutable(index);
}
::mtproto::SecureValueType* TL_account_getSecureValue::add_types() {
  // @@protoc_insertion_point(field_add:mtproto.TL_account_getSecureValue.types)
  return types_.Add();
}
::google::protobuf::RepeatedPtrField< ::mtproto::SecureValueType >*
TL_account_getSecureValue::mutable_types() {
  // @@protoc_insertion_point(field_mutable_list:mtproto.TL_account_getSecureValue.types)
  return &types_;
}
const ::google::protobuf::RepeatedPtrField< ::mtproto::SecureValueType >&
TL_account_getSecureValue::types() const {
  // @@protoc_insertion_point(field_list:mtproto.TL_account_getSecureValue.types)
  return types_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TL_account_saveSecureValue::kValueFieldNumber;
const int TL_account_saveSecureValue::kSecureSecretIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TL_account_saveSecureValue::TL_account_saveSecureValue()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.TL_account_saveSecureValue)
}
TL_account_saveSecureValue::TL_account_saveSecureValue(const TL_account_saveSecureValue& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_value()) {
    value_ = new ::mtproto::InputSecureValue(*from.value_);
  } else {
    value_ = NULL;
  }
  secure_secret_id_ = from.secure_secret_id_;
  // @@protoc_insertion_point(copy_constructor:mtproto.TL_account_saveSecureValue)
}

void TL_account_saveSecureValue::SharedCtor() {
  ::memset(&value_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&secure_secret_id_) -
      reinterpret_cast<char*>(&value_)) + sizeof(secure_secret_id_));
  _cached_size_ = 0;
}

TL_account_saveSecureValue::~TL_account_saveSecureValue() {
  // @@protoc_insertion_point(destructor:mtproto.TL_account_saveSecureValue)
  SharedDtor();
}

void TL_account_saveSecureValue::SharedDtor() {
  if (this != internal_default_instance()) delete value_;
}

void TL_account_saveSecureValue::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TL_account_saveSecureValue::descriptor() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TL_account_saveSecureValue& TL_account_saveSecureValue::default_instance() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  return *internal_default_instance();
}

TL_account_saveSecureValue* TL_account_saveSecureValue::New(::google::protobuf::Arena* arena) const {
  TL_account_saveSecureValue* n = new TL_account_saveSecureValue;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TL_account_saveSecureValue::Swap(TL_account_saveSecureValue* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TL_account_saveSecureValue::InternalSwap(TL_account_saveSecureValue* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata TL_account_saveSecureValue::GetMetadata() const {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TL_account_saveSecureValue

// .mtproto.InputSecureValue value = 1;
bool TL_account_saveSecureValue::has_value() const {
  return this != internal_default_instance() && value_ != NULL;
}
void TL_account_saveSecureValue::clear_value() {
  if (GetArenaNoVirtual() == NULL && value_ != NULL) delete value_;
  value_ = NULL;
}
const ::mtproto::InputSecureValue& TL_account_saveSecureValue::value() const {
  const ::mtproto::InputSecureValue* p = value_;
  // @@protoc_insertion_point(field_get:mtproto.TL_account_saveSecureValue.value)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::InputSecureValue*>(
      &::mtproto::_InputSecureValue_default_instance_);
}
::mtproto::InputSecureValue* TL_account_saveSecureValue::mutable_value() {
  
  if (value_ == NULL) {
    value_ = new ::mtproto::InputSecureValue;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_account_saveSecureValue.value)
  return value_;
}
::mtproto::InputSecureValue* TL_account_saveSecureValue::release_value() {
  // @@protoc_insertion_point(field_release:mtproto.TL_account_saveSecureValue.value)
  
  ::mtproto::InputSecureValue* temp = value_;
  value_ = NULL;
  return temp;
}
void TL_account_saveSecureValue::set_allocated_value(::mtproto::InputSecureValue* value) {
  delete value_;
  value_ = value;
  if (value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_account_saveSecureValue.value)
}

// int64 secure_secret_id = 2;
void TL_account_saveSecureValue::clear_secure_secret_id() {
  secure_secret_id_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 TL_account_saveSecureValue::secure_secret_id() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_account_saveSecureValue.secure_secret_id)
  return secure_secret_id_;
}
void TL_account_saveSecureValue::set_secure_secret_id(::google::protobuf::int64 value) {
  
  secure_secret_id_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_account_saveSecureValue.secure_secret_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TL_account_deleteSecureValue::kTypesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TL_account_deleteSecureValue::TL_account_deleteSecureValue()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.TL_account_deleteSecureValue)
}
TL_account_deleteSecureValue::TL_account_deleteSecureValue(const TL_account_deleteSecureValue& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      types_(from.types_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:mtproto.TL_account_deleteSecureValue)
}

void TL_account_deleteSecureValue::SharedCtor() {
  _cached_size_ = 0;
}

TL_account_deleteSecureValue::~TL_account_deleteSecureValue() {
  // @@protoc_insertion_point(destructor:mtproto.TL_account_deleteSecureValue)
  SharedDtor();
}

void TL_account_deleteSecureValue::SharedDtor() {
}

void TL_account_deleteSecureValue::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TL_account_deleteSecureValue::descriptor() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TL_account_deleteSecureValue& TL_account_deleteSecureValue::default_instance() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  return *internal_default_instance();
}

TL_account_deleteSecureValue* TL_account_deleteSecureValue::New(::google::protobuf::Arena* arena) const {
  TL_account_deleteSecureValue* n = new TL_account_deleteSecureValue;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TL_account_deleteSecureValue::Swap(TL_account_deleteSecureValue* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TL_account_deleteSecureValue::InternalSwap(TL_account_deleteSecureValue* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata TL_account_deleteSecureValue::GetMetadata() const {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TL_account_deleteSecureValue

// repeated .mtproto.SecureValueType types = 1;
int TL_account_deleteSecureValue::types_size() const {
  return types_.size();
}
void TL_account_deleteSecureValue::clear_types() {
  types_.Clear();
}
const ::mtproto::SecureValueType& TL_account_deleteSecureValue::types(int index) const {
  // @@protoc_insertion_point(field_get:mtproto.TL_account_deleteSecureValue.types)
  return types_.Get(index);
}
::mtproto::SecureValueType* TL_account_deleteSecureValue::mutable_types(int index) {
  // @@protoc_insertion_point(field_mutable:mtproto.TL_account_deleteSecureValue.types)
  return types_.Mutable(index);
}
::mtproto::SecureValueType* TL_account_deleteSecureValue::add_types() {
  // @@protoc_insertion_point(field_add:mtproto.TL_account_deleteSecureValue.types)
  return types_.Add();
}
::google::protobuf::RepeatedPtrField< ::mtproto::SecureValueType >*
TL_account_deleteSecureValue::mutable_types() {
  // @@protoc_insertion_point(field_mutable_list:mtproto.TL_account_deleteSecureValue.types)
  return &types_;
}
const ::google::protobuf::RepeatedPtrField< ::mtproto::SecureValueType >&
TL_account_deleteSecureValue::types() const {
  // @@protoc_insertion_point(field_list:mtproto.TL_account_deleteSecureValue.types)
  return types_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TL_account_getAuthorizationForm::kBotIdFieldNumber;
const int TL_account_getAuthorizationForm::kScopeFieldNumber;
const int TL_account_getAuthorizationForm::kPublicKeyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TL_account_getAuthorizationForm::TL_account_getAuthorizationForm()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.TL_account_getAuthorizationForm)
}
TL_account_getAuthorizationForm::TL_account_getAuthorizationForm(const TL_account_getAuthorizationForm& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  scope_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.scope().size() > 0) {
    scope_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.scope_);
  }
  public_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.public_key().size() > 0) {
    public_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.public_key_);
  }
  bot_id_ = from.bot_id_;
  // @@protoc_insertion_point(copy_constructor:mtproto.TL_account_getAuthorizationForm)
}

void TL_account_getAuthorizationForm::SharedCtor() {
  scope_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  public_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  bot_id_ = 0;
  _cached_size_ = 0;
}

TL_account_getAuthorizationForm::~TL_account_getAuthorizationForm() {
  // @@protoc_insertion_point(destructor:mtproto.TL_account_getAuthorizationForm)
  SharedDtor();
}

void TL_account_getAuthorizationForm::SharedDtor() {
  scope_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  public_key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void TL_account_getAuthorizationForm::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TL_account_getAuthorizationForm::descriptor() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TL_account_getAuthorizationForm& TL_account_getAuthorizationForm::default_instance() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  return *internal_default_instance();
}

TL_account_getAuthorizationForm* TL_account_getAuthorizationForm::New(::google::protobuf::Arena* arena) const {
  TL_account_getAuthorizationForm* n = new TL_account_getAuthorizationForm;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TL_account_getAuthorizationForm::Swap(TL_account_getAuthorizationForm* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TL_account_getAuthorizationForm::InternalSwap(TL_account_getAuthorizationForm* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata TL_account_getAuthorizationForm::GetMetadata() const {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TL_account_getAuthorizationForm

// int32 bot_id = 1;
void TL_account_getAuthorizationForm::clear_bot_id() {
  bot_id_ = 0;
}
::google::protobuf::int32 TL_account_getAuthorizationForm::bot_id() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_account_getAuthorizationForm.bot_id)
  return bot_id_;
}
void TL_account_getAuthorizationForm::set_bot_id(::google::protobuf::int32 value) {
  
  bot_id_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_account_getAuthorizationForm.bot_id)
}

// string scope = 2;
void TL_account_getAuthorizationForm::clear_scope() {
  scope_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& TL_account_getAuthorizationForm::scope() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_account_getAuthorizationForm.scope)
  return scope_.GetNoArena();
}
void TL_account_getAuthorizationForm::set_scope(const ::std::string& value) {
  
  scope_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtproto.TL_account_getAuthorizationForm.scope)
}
#if LANG_CXX11
void TL_account_getAuthorizationForm::set_scope(::std::string&& value) {
  
  scope_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mtproto.TL_account_getAuthorizationForm.scope)
}
#endif
void TL_account_getAuthorizationForm::set_scope(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  scope_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtproto.TL_account_getAuthorizationForm.scope)
}
void TL_account_getAuthorizationForm::set_scope(const char* value, size_t size) {
  
  scope_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtproto.TL_account_getAuthorizationForm.scope)
}
::std::string* TL_account_getAuthorizationForm::mutable_scope() {
  
  // @@protoc_insertion_point(field_mutable:mtproto.TL_account_getAuthorizationForm.scope)
  return scope_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* TL_account_getAuthorizationForm::release_scope() {
  // @@protoc_insertion_point(field_release:mtproto.TL_account_getAuthorizationForm.scope)
  
  return scope_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TL_account_getAuthorizationForm::set_allocated_scope(::std::string* scope) {
  if (scope != NULL) {
    
  } else {
    
  }
  scope_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), scope);
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_account_getAuthorizationForm.scope)
}

// string public_key = 3;
void TL_account_getAuthorizationForm::clear_public_key() {
  public_key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& TL_account_getAuthorizationForm::public_key() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_account_getAuthorizationForm.public_key)
  return public_key_.GetNoArena();
}
void TL_account_getAuthorizationForm::set_public_key(const ::std::string& value) {
  
  public_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtproto.TL_account_getAuthorizationForm.public_key)
}
#if LANG_CXX11
void TL_account_getAuthorizationForm::set_public_key(::std::string&& value) {
  
  public_key_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mtproto.TL_account_getAuthorizationForm.public_key)
}
#endif
void TL_account_getAuthorizationForm::set_public_key(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  public_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtproto.TL_account_getAuthorizationForm.public_key)
}
void TL_account_getAuthorizationForm::set_public_key(const char* value, size_t size) {
  
  public_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtproto.TL_account_getAuthorizationForm.public_key)
}
::std::string* TL_account_getAuthorizationForm::mutable_public_key() {
  
  // @@protoc_insertion_point(field_mutable:mtproto.TL_account_getAuthorizationForm.public_key)
  return public_key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* TL_account_getAuthorizationForm::release_public_key() {
  // @@protoc_insertion_point(field_release:mtproto.TL_account_getAuthorizationForm.public_key)
  
  return public_key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TL_account_getAuthorizationForm::set_allocated_public_key(::std::string* public_key) {
  if (public_key != NULL) {
    
  } else {
    
  }
  public_key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), public_key);
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_account_getAuthorizationForm.public_key)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TL_account_acceptAuthorization::kBotIdFieldNumber;
const int TL_account_acceptAuthorization::kScopeFieldNumber;
const int TL_account_acceptAuthorization::kPublicKeyFieldNumber;
const int TL_account_acceptAuthorization::kValueHashesFieldNumber;
const int TL_account_acceptAuthorization::kCredentialsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TL_account_acceptAuthorization::TL_account_acceptAuthorization()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.TL_account_acceptAuthorization)
}
TL_account_acceptAuthorization::TL_account_acceptAuthorization(const TL_account_acceptAuthorization& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      value_hashes_(from.value_hashes_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  scope_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.scope().size() > 0) {
    scope_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.scope_);
  }
  public_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.public_key().size() > 0) {
    public_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.public_key_);
  }
  if (from.has_credentials()) {
    credentials_ = new ::mtproto::SecureCredentialsEncrypted(*from.credentials_);
  } else {
    credentials_ = NULL;
  }
  bot_id_ = from.bot_id_;
  // @@protoc_insertion_point(copy_constructor:mtproto.TL_account_acceptAuthorization)
}

void TL_account_acceptAuthorization::SharedCtor() {
  scope_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  public_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&credentials_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&bot_id_) -
      reinterpret_cast<char*>(&credentials_)) + sizeof(bot_id_));
  _cached_size_ = 0;
}

TL_account_acceptAuthorization::~TL_account_acceptAuthorization() {
  // @@protoc_insertion_point(destructor:mtproto.TL_account_acceptAuthorization)
  SharedDtor();
}

void TL_account_acceptAuthorization::SharedDtor() {
  scope_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  public_key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete credentials_;
}

void TL_account_acceptAuthorization::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TL_account_acceptAuthorization::descriptor() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TL_account_acceptAuthorization& TL_account_acceptAuthorization::default_instance() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  return *internal_default_instance();
}

TL_account_acceptAuthorization* TL_account_acceptAuthorization::New(::google::protobuf::Arena* arena) const {
  TL_account_acceptAuthorization* n = new TL_account_acceptAuthorization;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TL_account_acceptAuthorization::Swap(TL_account_acceptAuthorization* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TL_account_acceptAuthorization::InternalSwap(TL_account_acceptAuthorization* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata TL_account_acceptAuthorization::GetMetadata() const {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TL_account_acceptAuthorization

// int32 bot_id = 1;
void TL_account_acceptAuthorization::clear_bot_id() {
  bot_id_ = 0;
}
::google::protobuf::int32 TL_account_acceptAuthorization::bot_id() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_account_acceptAuthorization.bot_id)
  return bot_id_;
}
void TL_account_acceptAuthorization::set_bot_id(::google::protobuf::int32 value) {
  
  bot_id_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_account_acceptAuthorization.bot_id)
}

// string scope = 2;
void TL_account_acceptAuthorization::clear_scope() {
  scope_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& TL_account_acceptAuthorization::scope() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_account_acceptAuthorization.scope)
  return scope_.GetNoArena();
}
void TL_account_acceptAuthorization::set_scope(const ::std::string& value) {
  
  scope_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtproto.TL_account_acceptAuthorization.scope)
}
#if LANG_CXX11
void TL_account_acceptAuthorization::set_scope(::std::string&& value) {
  
  scope_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mtproto.TL_account_acceptAuthorization.scope)
}
#endif
void TL_account_acceptAuthorization::set_scope(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  scope_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtproto.TL_account_acceptAuthorization.scope)
}
void TL_account_acceptAuthorization::set_scope(const char* value, size_t size) {
  
  scope_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtproto.TL_account_acceptAuthorization.scope)
}
::std::string* TL_account_acceptAuthorization::mutable_scope() {
  
  // @@protoc_insertion_point(field_mutable:mtproto.TL_account_acceptAuthorization.scope)
  return scope_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* TL_account_acceptAuthorization::release_scope() {
  // @@protoc_insertion_point(field_release:mtproto.TL_account_acceptAuthorization.scope)
  
  return scope_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TL_account_acceptAuthorization::set_allocated_scope(::std::string* scope) {
  if (scope != NULL) {
    
  } else {
    
  }
  scope_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), scope);
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_account_acceptAuthorization.scope)
}

// string public_key = 3;
void TL_account_acceptAuthorization::clear_public_key() {
  public_key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& TL_account_acceptAuthorization::public_key() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_account_acceptAuthorization.public_key)
  return public_key_.GetNoArena();
}
void TL_account_acceptAuthorization::set_public_key(const ::std::string& value) {
  
  public_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtproto.TL_account_acceptAuthorization.public_key)
}
#if LANG_CXX11
void TL_account_acceptAuthorization::set_public_key(::std::string&& value) {
  
  public_key_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mtproto.TL_account_acceptAuthorization.public_key)
}
#endif
void TL_account_acceptAuthorization::set_public_key(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  public_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtproto.TL_account_acceptAuthorization.public_key)
}
void TL_account_acceptAuthorization::set_public_key(const char* value, size_t size) {
  
  public_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtproto.TL_account_acceptAuthorization.public_key)
}
::std::string* TL_account_acceptAuthorization::mutable_public_key() {
  
  // @@protoc_insertion_point(field_mutable:mtproto.TL_account_acceptAuthorization.public_key)
  return public_key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* TL_account_acceptAuthorization::release_public_key() {
  // @@protoc_insertion_point(field_release:mtproto.TL_account_acceptAuthorization.public_key)
  
  return public_key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TL_account_acceptAuthorization::set_allocated_public_key(::std::string* public_key) {
  if (public_key != NULL) {
    
  } else {
    
  }
  public_key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), public_key);
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_account_acceptAuthorization.public_key)
}

// repeated .mtproto.SecureValueHash value_hashes = 4;
int TL_account_acceptAuthorization::value_hashes_size() const {
  return value_hashes_.size();
}
void TL_account_acceptAuthorization::clear_value_hashes() {
  value_hashes_.Clear();
}
const ::mtproto::SecureValueHash& TL_account_acceptAuthorization::value_hashes(int index) const {
  // @@protoc_insertion_point(field_get:mtproto.TL_account_acceptAuthorization.value_hashes)
  return value_hashes_.Get(index);
}
::mtproto::SecureValueHash* TL_account_acceptAuthorization::mutable_value_hashes(int index) {
  // @@protoc_insertion_point(field_mutable:mtproto.TL_account_acceptAuthorization.value_hashes)
  return value_hashes_.Mutable(index);
}
::mtproto::SecureValueHash* TL_account_acceptAuthorization::add_value_hashes() {
  // @@protoc_insertion_point(field_add:mtproto.TL_account_acceptAuthorization.value_hashes)
  return value_hashes_.Add();
}
::google::protobuf::RepeatedPtrField< ::mtproto::SecureValueHash >*
TL_account_acceptAuthorization::mutable_value_hashes() {
  // @@protoc_insertion_point(field_mutable_list:mtproto.TL_account_acceptAuthorization.value_hashes)
  return &value_hashes_;
}
const ::google::protobuf::RepeatedPtrField< ::mtproto::SecureValueHash >&
TL_account_acceptAuthorization::value_hashes() const {
  // @@protoc_insertion_point(field_list:mtproto.TL_account_acceptAuthorization.value_hashes)
  return value_hashes_;
}

// .mtproto.SecureCredentialsEncrypted credentials = 5;
bool TL_account_acceptAuthorization::has_credentials() const {
  return this != internal_default_instance() && credentials_ != NULL;
}
void TL_account_acceptAuthorization::clear_credentials() {
  if (GetArenaNoVirtual() == NULL && credentials_ != NULL) delete credentials_;
  credentials_ = NULL;
}
const ::mtproto::SecureCredentialsEncrypted& TL_account_acceptAuthorization::credentials() const {
  const ::mtproto::SecureCredentialsEncrypted* p = credentials_;
  // @@protoc_insertion_point(field_get:mtproto.TL_account_acceptAuthorization.credentials)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::SecureCredentialsEncrypted*>(
      &::mtproto::_SecureCredentialsEncrypted_default_instance_);
}
::mtproto::SecureCredentialsEncrypted* TL_account_acceptAuthorization::mutable_credentials() {
  
  if (credentials_ == NULL) {
    credentials_ = new ::mtproto::SecureCredentialsEncrypted;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_account_acceptAuthorization.credentials)
  return credentials_;
}
::mtproto::SecureCredentialsEncrypted* TL_account_acceptAuthorization::release_credentials() {
  // @@protoc_insertion_point(field_release:mtproto.TL_account_acceptAuthorization.credentials)
  
  ::mtproto::SecureCredentialsEncrypted* temp = credentials_;
  credentials_ = NULL;
  return temp;
}
void TL_account_acceptAuthorization::set_allocated_credentials(::mtproto::SecureCredentialsEncrypted* credentials) {
  delete credentials_;
  credentials_ = credentials;
  if (credentials) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_account_acceptAuthorization.credentials)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TL_account_sendVerifyPhoneCode::kAllowFlashcallFieldNumber;
const int TL_account_sendVerifyPhoneCode::kPhoneNumberFieldNumber;
const int TL_account_sendVerifyPhoneCode::kCurrentNumberFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TL_account_sendVerifyPhoneCode::TL_account_sendVerifyPhoneCode()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.TL_account_sendVerifyPhoneCode)
}
TL_account_sendVerifyPhoneCode::TL_account_sendVerifyPhoneCode(const TL_account_sendVerifyPhoneCode& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  phone_number_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.phone_number().size() > 0) {
    phone_number_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.phone_number_);
  }
  if (from.has_current_number()) {
    current_number_ = new ::mtproto::Bool(*from.current_number_);
  } else {
    current_number_ = NULL;
  }
  allow_flashcall_ = from.allow_flashcall_;
  // @@protoc_insertion_point(copy_constructor:mtproto.TL_account_sendVerifyPhoneCode)
}

void TL_account_sendVerifyPhoneCode::SharedCtor() {
  phone_number_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&current_number_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&allow_flashcall_) -
      reinterpret_cast<char*>(&current_number_)) + sizeof(allow_flashcall_));
  _cached_size_ = 0;
}

TL_account_sendVerifyPhoneCode::~TL_account_sendVerifyPhoneCode() {
  // @@protoc_insertion_point(destructor:mtproto.TL_account_sendVerifyPhoneCode)
  SharedDtor();
}

void TL_account_sendVerifyPhoneCode::SharedDtor() {
  phone_number_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete current_number_;
}

void TL_account_sendVerifyPhoneCode::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TL_account_sendVerifyPhoneCode::descriptor() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TL_account_sendVerifyPhoneCode& TL_account_sendVerifyPhoneCode::default_instance() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  return *internal_default_instance();
}

TL_account_sendVerifyPhoneCode* TL_account_sendVerifyPhoneCode::New(::google::protobuf::Arena* arena) const {
  TL_account_sendVerifyPhoneCode* n = new TL_account_sendVerifyPhoneCode;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TL_account_sendVerifyPhoneCode::Swap(TL_account_sendVerifyPhoneCode* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TL_account_sendVerifyPhoneCode::InternalSwap(TL_account_sendVerifyPhoneCode* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata TL_account_sendVerifyPhoneCode::GetMetadata() const {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TL_account_sendVerifyPhoneCode

// bool allow_flashcall = 2;
void TL_account_sendVerifyPhoneCode::clear_allow_flashcall() {
  allow_flashcall_ = false;
}
bool TL_account_sendVerifyPhoneCode::allow_flashcall() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_account_sendVerifyPhoneCode.allow_flashcall)
  return allow_flashcall_;
}
void TL_account_sendVerifyPhoneCode::set_allow_flashcall(bool value) {
  
  allow_flashcall_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_account_sendVerifyPhoneCode.allow_flashcall)
}

// string phone_number = 3;
void TL_account_sendVerifyPhoneCode::clear_phone_number() {
  phone_number_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& TL_account_sendVerifyPhoneCode::phone_number() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_account_sendVerifyPhoneCode.phone_number)
  return phone_number_.GetNoArena();
}
void TL_account_sendVerifyPhoneCode::set_phone_number(const ::std::string& value) {
  
  phone_number_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtproto.TL_account_sendVerifyPhoneCode.phone_number)
}
#if LANG_CXX11
void TL_account_sendVerifyPhoneCode::set_phone_number(::std::string&& value) {
  
  phone_number_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mtproto.TL_account_sendVerifyPhoneCode.phone_number)
}
#endif
void TL_account_sendVerifyPhoneCode::set_phone_number(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  phone_number_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtproto.TL_account_sendVerifyPhoneCode.phone_number)
}
void TL_account_sendVerifyPhoneCode::set_phone_number(const char* value, size_t size) {
  
  phone_number_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtproto.TL_account_sendVerifyPhoneCode.phone_number)
}
::std::string* TL_account_sendVerifyPhoneCode::mutable_phone_number() {
  
  // @@protoc_insertion_point(field_mutable:mtproto.TL_account_sendVerifyPhoneCode.phone_number)
  return phone_number_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* TL_account_sendVerifyPhoneCode::release_phone_number() {
  // @@protoc_insertion_point(field_release:mtproto.TL_account_sendVerifyPhoneCode.phone_number)
  
  return phone_number_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TL_account_sendVerifyPhoneCode::set_allocated_phone_number(::std::string* phone_number) {
  if (phone_number != NULL) {
    
  } else {
    
  }
  phone_number_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), phone_number);
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_account_sendVerifyPhoneCode.phone_number)
}

// .mtproto.Bool current_number = 4;
bool TL_account_sendVerifyPhoneCode::has_current_number() const {
  return this != internal_default_instance() && current_number_ != NULL;
}
void TL_account_sendVerifyPhoneCode::clear_current_number() {
  if (GetArenaNoVirtual() == NULL && current_number_ != NULL) delete current_number_;
  current_number_ = NULL;
}
const ::mtproto::Bool& TL_account_sendVerifyPhoneCode::current_number() const {
  const ::mtproto::Bool* p = current_number_;
  // @@protoc_insertion_point(field_get:mtproto.TL_account_sendVerifyPhoneCode.current_number)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::Bool*>(
      &::mtproto::_Bool_default_instance_);
}
::mtproto::Bool* TL_account_sendVerifyPhoneCode::mutable_current_number() {
  
  if (current_number_ == NULL) {
    current_number_ = new ::mtproto::Bool;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_account_sendVerifyPhoneCode.current_number)
  return current_number_;
}
::mtproto::Bool* TL_account_sendVerifyPhoneCode::release_current_number() {
  // @@protoc_insertion_point(field_release:mtproto.TL_account_sendVerifyPhoneCode.current_number)
  
  ::mtproto::Bool* temp = current_number_;
  current_number_ = NULL;
  return temp;
}
void TL_account_sendVerifyPhoneCode::set_allocated_current_number(::mtproto::Bool* current_number) {
  delete current_number_;
  current_number_ = current_number;
  if (current_number) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_account_sendVerifyPhoneCode.current_number)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TL_account_verifyPhone::kPhoneNumberFieldNumber;
const int TL_account_verifyPhone::kPhoneCodeHashFieldNumber;
const int TL_account_verifyPhone::kPhoneCodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TL_account_verifyPhone::TL_account_verifyPhone()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.TL_account_verifyPhone)
}
TL_account_verifyPhone::TL_account_verifyPhone(const TL_account_verifyPhone& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  phone_number_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.phone_number().size() > 0) {
    phone_number_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.phone_number_);
  }
  phone_code_hash_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.phone_code_hash().size() > 0) {
    phone_code_hash_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.phone_code_hash_);
  }
  phone_code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.phone_code().size() > 0) {
    phone_code_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.phone_code_);
  }
  // @@protoc_insertion_point(copy_constructor:mtproto.TL_account_verifyPhone)
}

void TL_account_verifyPhone::SharedCtor() {
  phone_number_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  phone_code_hash_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  phone_code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

TL_account_verifyPhone::~TL_account_verifyPhone() {
  // @@protoc_insertion_point(destructor:mtproto.TL_account_verifyPhone)
  SharedDtor();
}

void TL_account_verifyPhone::SharedDtor() {
  phone_number_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  phone_code_hash_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  phone_code_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void TL_account_verifyPhone::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TL_account_verifyPhone::descriptor() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TL_account_verifyPhone& TL_account_verifyPhone::default_instance() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  return *internal_default_instance();
}

TL_account_verifyPhone* TL_account_verifyPhone::New(::google::protobuf::Arena* arena) const {
  TL_account_verifyPhone* n = new TL_account_verifyPhone;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TL_account_verifyPhone::Swap(TL_account_verifyPhone* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TL_account_verifyPhone::InternalSwap(TL_account_verifyPhone* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata TL_account_verifyPhone::GetMetadata() const {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TL_account_verifyPhone

// string phone_number = 1;
void TL_account_verifyPhone::clear_phone_number() {
  phone_number_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& TL_account_verifyPhone::phone_number() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_account_verifyPhone.phone_number)
  return phone_number_.GetNoArena();
}
void TL_account_verifyPhone::set_phone_number(const ::std::string& value) {
  
  phone_number_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtproto.TL_account_verifyPhone.phone_number)
}
#if LANG_CXX11
void TL_account_verifyPhone::set_phone_number(::std::string&& value) {
  
  phone_number_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mtproto.TL_account_verifyPhone.phone_number)
}
#endif
void TL_account_verifyPhone::set_phone_number(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  phone_number_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtproto.TL_account_verifyPhone.phone_number)
}
void TL_account_verifyPhone::set_phone_number(const char* value, size_t size) {
  
  phone_number_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtproto.TL_account_verifyPhone.phone_number)
}
::std::string* TL_account_verifyPhone::mutable_phone_number() {
  
  // @@protoc_insertion_point(field_mutable:mtproto.TL_account_verifyPhone.phone_number)
  return phone_number_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* TL_account_verifyPhone::release_phone_number() {
  // @@protoc_insertion_point(field_release:mtproto.TL_account_verifyPhone.phone_number)
  
  return phone_number_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TL_account_verifyPhone::set_allocated_phone_number(::std::string* phone_number) {
  if (phone_number != NULL) {
    
  } else {
    
  }
  phone_number_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), phone_number);
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_account_verifyPhone.phone_number)
}

// string phone_code_hash = 2;
void TL_account_verifyPhone::clear_phone_code_hash() {
  phone_code_hash_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& TL_account_verifyPhone::phone_code_hash() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_account_verifyPhone.phone_code_hash)
  return phone_code_hash_.GetNoArena();
}
void TL_account_verifyPhone::set_phone_code_hash(const ::std::string& value) {
  
  phone_code_hash_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtproto.TL_account_verifyPhone.phone_code_hash)
}
#if LANG_CXX11
void TL_account_verifyPhone::set_phone_code_hash(::std::string&& value) {
  
  phone_code_hash_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mtproto.TL_account_verifyPhone.phone_code_hash)
}
#endif
void TL_account_verifyPhone::set_phone_code_hash(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  phone_code_hash_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtproto.TL_account_verifyPhone.phone_code_hash)
}
void TL_account_verifyPhone::set_phone_code_hash(const char* value, size_t size) {
  
  phone_code_hash_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtproto.TL_account_verifyPhone.phone_code_hash)
}
::std::string* TL_account_verifyPhone::mutable_phone_code_hash() {
  
  // @@protoc_insertion_point(field_mutable:mtproto.TL_account_verifyPhone.phone_code_hash)
  return phone_code_hash_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* TL_account_verifyPhone::release_phone_code_hash() {
  // @@protoc_insertion_point(field_release:mtproto.TL_account_verifyPhone.phone_code_hash)
  
  return phone_code_hash_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TL_account_verifyPhone::set_allocated_phone_code_hash(::std::string* phone_code_hash) {
  if (phone_code_hash != NULL) {
    
  } else {
    
  }
  phone_code_hash_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), phone_code_hash);
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_account_verifyPhone.phone_code_hash)
}

// string phone_code = 3;
void TL_account_verifyPhone::clear_phone_code() {
  phone_code_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& TL_account_verifyPhone::phone_code() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_account_verifyPhone.phone_code)
  return phone_code_.GetNoArena();
}
void TL_account_verifyPhone::set_phone_code(const ::std::string& value) {
  
  phone_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtproto.TL_account_verifyPhone.phone_code)
}
#if LANG_CXX11
void TL_account_verifyPhone::set_phone_code(::std::string&& value) {
  
  phone_code_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mtproto.TL_account_verifyPhone.phone_code)
}
#endif
void TL_account_verifyPhone::set_phone_code(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  phone_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtproto.TL_account_verifyPhone.phone_code)
}
void TL_account_verifyPhone::set_phone_code(const char* value, size_t size) {
  
  phone_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtproto.TL_account_verifyPhone.phone_code)
}
::std::string* TL_account_verifyPhone::mutable_phone_code() {
  
  // @@protoc_insertion_point(field_mutable:mtproto.TL_account_verifyPhone.phone_code)
  return phone_code_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* TL_account_verifyPhone::release_phone_code() {
  // @@protoc_insertion_point(field_release:mtproto.TL_account_verifyPhone.phone_code)
  
  return phone_code_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TL_account_verifyPhone::set_allocated_phone_code(::std::string* phone_code) {
  if (phone_code != NULL) {
    
  } else {
    
  }
  phone_code_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), phone_code);
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_account_verifyPhone.phone_code)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TL_account_sendVerifyEmailCode::kEmailFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TL_account_sendVerifyEmailCode::TL_account_sendVerifyEmailCode()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.TL_account_sendVerifyEmailCode)
}
TL_account_sendVerifyEmailCode::TL_account_sendVerifyEmailCode(const TL_account_sendVerifyEmailCode& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  email_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.email().size() > 0) {
    email_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.email_);
  }
  // @@protoc_insertion_point(copy_constructor:mtproto.TL_account_sendVerifyEmailCode)
}

void TL_account_sendVerifyEmailCode::SharedCtor() {
  email_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

TL_account_sendVerifyEmailCode::~TL_account_sendVerifyEmailCode() {
  // @@protoc_insertion_point(destructor:mtproto.TL_account_sendVerifyEmailCode)
  SharedDtor();
}

void TL_account_sendVerifyEmailCode::SharedDtor() {
  email_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void TL_account_sendVerifyEmailCode::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TL_account_sendVerifyEmailCode::descriptor() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TL_account_sendVerifyEmailCode& TL_account_sendVerifyEmailCode::default_instance() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  return *internal_default_instance();
}

TL_account_sendVerifyEmailCode* TL_account_sendVerifyEmailCode::New(::google::protobuf::Arena* arena) const {
  TL_account_sendVerifyEmailCode* n = new TL_account_sendVerifyEmailCode;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TL_account_sendVerifyEmailCode::Swap(TL_account_sendVerifyEmailCode* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TL_account_sendVerifyEmailCode::InternalSwap(TL_account_sendVerifyEmailCode* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata TL_account_sendVerifyEmailCode::GetMetadata() const {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TL_account_sendVerifyEmailCode

// string email = 1;
void TL_account_sendVerifyEmailCode::clear_email() {
  email_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& TL_account_sendVerifyEmailCode::email() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_account_sendVerifyEmailCode.email)
  return email_.GetNoArena();
}
void TL_account_sendVerifyEmailCode::set_email(const ::std::string& value) {
  
  email_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtproto.TL_account_sendVerifyEmailCode.email)
}
#if LANG_CXX11
void TL_account_sendVerifyEmailCode::set_email(::std::string&& value) {
  
  email_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mtproto.TL_account_sendVerifyEmailCode.email)
}
#endif
void TL_account_sendVerifyEmailCode::set_email(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  email_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtproto.TL_account_sendVerifyEmailCode.email)
}
void TL_account_sendVerifyEmailCode::set_email(const char* value, size_t size) {
  
  email_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtproto.TL_account_sendVerifyEmailCode.email)
}
::std::string* TL_account_sendVerifyEmailCode::mutable_email() {
  
  // @@protoc_insertion_point(field_mutable:mtproto.TL_account_sendVerifyEmailCode.email)
  return email_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* TL_account_sendVerifyEmailCode::release_email() {
  // @@protoc_insertion_point(field_release:mtproto.TL_account_sendVerifyEmailCode.email)
  
  return email_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TL_account_sendVerifyEmailCode::set_allocated_email(::std::string* email) {
  if (email != NULL) {
    
  } else {
    
  }
  email_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), email);
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_account_sendVerifyEmailCode.email)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TL_account_verifyEmail::kEmailFieldNumber;
const int TL_account_verifyEmail::kCodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TL_account_verifyEmail::TL_account_verifyEmail()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.TL_account_verifyEmail)
}
TL_account_verifyEmail::TL_account_verifyEmail(const TL_account_verifyEmail& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  email_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.email().size() > 0) {
    email_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.email_);
  }
  code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.code().size() > 0) {
    code_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.code_);
  }
  // @@protoc_insertion_point(copy_constructor:mtproto.TL_account_verifyEmail)
}

void TL_account_verifyEmail::SharedCtor() {
  email_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

TL_account_verifyEmail::~TL_account_verifyEmail() {
  // @@protoc_insertion_point(destructor:mtproto.TL_account_verifyEmail)
  SharedDtor();
}

void TL_account_verifyEmail::SharedDtor() {
  email_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  code_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void TL_account_verifyEmail::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TL_account_verifyEmail::descriptor() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TL_account_verifyEmail& TL_account_verifyEmail::default_instance() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  return *internal_default_instance();
}

TL_account_verifyEmail* TL_account_verifyEmail::New(::google::protobuf::Arena* arena) const {
  TL_account_verifyEmail* n = new TL_account_verifyEmail;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TL_account_verifyEmail::Swap(TL_account_verifyEmail* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TL_account_verifyEmail::InternalSwap(TL_account_verifyEmail* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata TL_account_verifyEmail::GetMetadata() const {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TL_account_verifyEmail

// string email = 1;
void TL_account_verifyEmail::clear_email() {
  email_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& TL_account_verifyEmail::email() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_account_verifyEmail.email)
  return email_.GetNoArena();
}
void TL_account_verifyEmail::set_email(const ::std::string& value) {
  
  email_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtproto.TL_account_verifyEmail.email)
}
#if LANG_CXX11
void TL_account_verifyEmail::set_email(::std::string&& value) {
  
  email_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mtproto.TL_account_verifyEmail.email)
}
#endif
void TL_account_verifyEmail::set_email(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  email_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtproto.TL_account_verifyEmail.email)
}
void TL_account_verifyEmail::set_email(const char* value, size_t size) {
  
  email_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtproto.TL_account_verifyEmail.email)
}
::std::string* TL_account_verifyEmail::mutable_email() {
  
  // @@protoc_insertion_point(field_mutable:mtproto.TL_account_verifyEmail.email)
  return email_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* TL_account_verifyEmail::release_email() {
  // @@protoc_insertion_point(field_release:mtproto.TL_account_verifyEmail.email)
  
  return email_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TL_account_verifyEmail::set_allocated_email(::std::string* email) {
  if (email != NULL) {
    
  } else {
    
  }
  email_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), email);
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_account_verifyEmail.email)
}

// string code = 2;
void TL_account_verifyEmail::clear_code() {
  code_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& TL_account_verifyEmail::code() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_account_verifyEmail.code)
  return code_.GetNoArena();
}
void TL_account_verifyEmail::set_code(const ::std::string& value) {
  
  code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtproto.TL_account_verifyEmail.code)
}
#if LANG_CXX11
void TL_account_verifyEmail::set_code(::std::string&& value) {
  
  code_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mtproto.TL_account_verifyEmail.code)
}
#endif
void TL_account_verifyEmail::set_code(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtproto.TL_account_verifyEmail.code)
}
void TL_account_verifyEmail::set_code(const char* value, size_t size) {
  
  code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtproto.TL_account_verifyEmail.code)
}
::std::string* TL_account_verifyEmail::mutable_code() {
  
  // @@protoc_insertion_point(field_mutable:mtproto.TL_account_verifyEmail.code)
  return code_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* TL_account_verifyEmail::release_code() {
  // @@protoc_insertion_point(field_release:mtproto.TL_account_verifyEmail.code)
  
  return code_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TL_account_verifyEmail::set_allocated_code(::std::string* code) {
  if (code != NULL) {
    
  } else {
    
  }
  code_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), code);
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_account_verifyEmail.code)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TL_account_initTakeoutSession::kContactsFieldNumber;
const int TL_account_initTakeoutSession::kMessageUsersFieldNumber;
const int TL_account_initTakeoutSession::kMessageChatsFieldNumber;
const int TL_account_initTakeoutSession::kMessageMegagroupsFieldNumber;
const int TL_account_initTakeoutSession::kMessageChannelsFieldNumber;
const int TL_account_initTakeoutSession::kFilesFieldNumber;
const int TL_account_initTakeoutSession::kFileMaxSizeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TL_account_initTakeoutSession::TL_account_initTakeoutSession()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.TL_account_initTakeoutSession)
}
TL_account_initTakeoutSession::TL_account_initTakeoutSession(const TL_account_initTakeoutSession& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&contacts_, &from.contacts_,
    static_cast<size_t>(reinterpret_cast<char*>(&file_max_size_) -
    reinterpret_cast<char*>(&contacts_)) + sizeof(file_max_size_));
  // @@protoc_insertion_point(copy_constructor:mtproto.TL_account_initTakeoutSession)
}

void TL_account_initTakeoutSession::SharedCtor() {
  ::memset(&contacts_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&file_max_size_) -
      reinterpret_cast<char*>(&contacts_)) + sizeof(file_max_size_));
  _cached_size_ = 0;
}

TL_account_initTakeoutSession::~TL_account_initTakeoutSession() {
  // @@protoc_insertion_point(destructor:mtproto.TL_account_initTakeoutSession)
  SharedDtor();
}

void TL_account_initTakeoutSession::SharedDtor() {
}

void TL_account_initTakeoutSession::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TL_account_initTakeoutSession::descriptor() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TL_account_initTakeoutSession& TL_account_initTakeoutSession::default_instance() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  return *internal_default_instance();
}

TL_account_initTakeoutSession* TL_account_initTakeoutSession::New(::google::protobuf::Arena* arena) const {
  TL_account_initTakeoutSession* n = new TL_account_initTakeoutSession;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TL_account_initTakeoutSession::Swap(TL_account_initTakeoutSession* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TL_account_initTakeoutSession::InternalSwap(TL_account_initTakeoutSession* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata TL_account_initTakeoutSession::GetMetadata() const {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TL_account_initTakeoutSession

// bool contacts = 2;
void TL_account_initTakeoutSession::clear_contacts() {
  contacts_ = false;
}
bool TL_account_initTakeoutSession::contacts() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_account_initTakeoutSession.contacts)
  return contacts_;
}
void TL_account_initTakeoutSession::set_contacts(bool value) {
  
  contacts_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_account_initTakeoutSession.contacts)
}

// bool message_users = 3;
void TL_account_initTakeoutSession::clear_message_users() {
  message_users_ = false;
}
bool TL_account_initTakeoutSession::message_users() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_account_initTakeoutSession.message_users)
  return message_users_;
}
void TL_account_initTakeoutSession::set_message_users(bool value) {
  
  message_users_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_account_initTakeoutSession.message_users)
}

// bool message_chats = 4;
void TL_account_initTakeoutSession::clear_message_chats() {
  message_chats_ = false;
}
bool TL_account_initTakeoutSession::message_chats() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_account_initTakeoutSession.message_chats)
  return message_chats_;
}
void TL_account_initTakeoutSession::set_message_chats(bool value) {
  
  message_chats_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_account_initTakeoutSession.message_chats)
}

// bool message_megagroups = 5;
void TL_account_initTakeoutSession::clear_message_megagroups() {
  message_megagroups_ = false;
}
bool TL_account_initTakeoutSession::message_megagroups() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_account_initTakeoutSession.message_megagroups)
  return message_megagroups_;
}
void TL_account_initTakeoutSession::set_message_megagroups(bool value) {
  
  message_megagroups_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_account_initTakeoutSession.message_megagroups)
}

// bool message_channels = 6;
void TL_account_initTakeoutSession::clear_message_channels() {
  message_channels_ = false;
}
bool TL_account_initTakeoutSession::message_channels() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_account_initTakeoutSession.message_channels)
  return message_channels_;
}
void TL_account_initTakeoutSession::set_message_channels(bool value) {
  
  message_channels_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_account_initTakeoutSession.message_channels)
}

// bool files = 7;
void TL_account_initTakeoutSession::clear_files() {
  files_ = false;
}
bool TL_account_initTakeoutSession::files() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_account_initTakeoutSession.files)
  return files_;
}
void TL_account_initTakeoutSession::set_files(bool value) {
  
  files_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_account_initTakeoutSession.files)
}

// int32 file_max_size = 8;
void TL_account_initTakeoutSession::clear_file_max_size() {
  file_max_size_ = 0;
}
::google::protobuf::int32 TL_account_initTakeoutSession::file_max_size() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_account_initTakeoutSession.file_max_size)
  return file_max_size_;
}
void TL_account_initTakeoutSession::set_file_max_size(::google::protobuf::int32 value) {
  
  file_max_size_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_account_initTakeoutSession.file_max_size)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TL_account_finishTakeoutSession::kSuccessFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TL_account_finishTakeoutSession::TL_account_finishTakeoutSession()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.TL_account_finishTakeoutSession)
}
TL_account_finishTakeoutSession::TL_account_finishTakeoutSession(const TL_account_finishTakeoutSession& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  success_ = from.success_;
  // @@protoc_insertion_point(copy_constructor:mtproto.TL_account_finishTakeoutSession)
}

void TL_account_finishTakeoutSession::SharedCtor() {
  success_ = false;
  _cached_size_ = 0;
}

TL_account_finishTakeoutSession::~TL_account_finishTakeoutSession() {
  // @@protoc_insertion_point(destructor:mtproto.TL_account_finishTakeoutSession)
  SharedDtor();
}

void TL_account_finishTakeoutSession::SharedDtor() {
}

void TL_account_finishTakeoutSession::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TL_account_finishTakeoutSession::descriptor() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TL_account_finishTakeoutSession& TL_account_finishTakeoutSession::default_instance() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  return *internal_default_instance();
}

TL_account_finishTakeoutSession* TL_account_finishTakeoutSession::New(::google::protobuf::Arena* arena) const {
  TL_account_finishTakeoutSession* n = new TL_account_finishTakeoutSession;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TL_account_finishTakeoutSession::Swap(TL_account_finishTakeoutSession* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TL_account_finishTakeoutSession::InternalSwap(TL_account_finishTakeoutSession* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata TL_account_finishTakeoutSession::GetMetadata() const {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TL_account_finishTakeoutSession

// bool success = 2;
void TL_account_finishTakeoutSession::clear_success() {
  success_ = false;
}
bool TL_account_finishTakeoutSession::success() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_account_finishTakeoutSession.success)
  return success_;
}
void TL_account_finishTakeoutSession::set_success(bool value) {
  
  success_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_account_finishTakeoutSession.success)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TL_users_getUsers::kIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TL_users_getUsers::TL_users_getUsers()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.TL_users_getUsers)
}
TL_users_getUsers::TL_users_getUsers(const TL_users_getUsers& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      id_(from.id_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:mtproto.TL_users_getUsers)
}

void TL_users_getUsers::SharedCtor() {
  _cached_size_ = 0;
}

TL_users_getUsers::~TL_users_getUsers() {
  // @@protoc_insertion_point(destructor:mtproto.TL_users_getUsers)
  SharedDtor();
}

void TL_users_getUsers::SharedDtor() {
}

void TL_users_getUsers::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TL_users_getUsers::descriptor() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TL_users_getUsers& TL_users_getUsers::default_instance() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  return *internal_default_instance();
}

TL_users_getUsers* TL_users_getUsers::New(::google::protobuf::Arena* arena) const {
  TL_users_getUsers* n = new TL_users_getUsers;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TL_users_getUsers::Swap(TL_users_getUsers* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TL_users_getUsers::InternalSwap(TL_users_getUsers* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata TL_users_getUsers::GetMetadata() const {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TL_users_getUsers

// repeated .mtproto.InputUser id = 1;
int TL_users_getUsers::id_size() const {
  return id_.size();
}
void TL_users_getUsers::clear_id() {
  id_.Clear();
}
const ::mtproto::InputUser& TL_users_getUsers::id(int index) const {
  // @@protoc_insertion_point(field_get:mtproto.TL_users_getUsers.id)
  return id_.Get(index);
}
::mtproto::InputUser* TL_users_getUsers::mutable_id(int index) {
  // @@protoc_insertion_point(field_mutable:mtproto.TL_users_getUsers.id)
  return id_.Mutable(index);
}
::mtproto::InputUser* TL_users_getUsers::add_id() {
  // @@protoc_insertion_point(field_add:mtproto.TL_users_getUsers.id)
  return id_.Add();
}
::google::protobuf::RepeatedPtrField< ::mtproto::InputUser >*
TL_users_getUsers::mutable_id() {
  // @@protoc_insertion_point(field_mutable_list:mtproto.TL_users_getUsers.id)
  return &id_;
}
const ::google::protobuf::RepeatedPtrField< ::mtproto::InputUser >&
TL_users_getUsers::id() const {
  // @@protoc_insertion_point(field_list:mtproto.TL_users_getUsers.id)
  return id_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TL_users_getFullUser::kIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TL_users_getFullUser::TL_users_getFullUser()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.TL_users_getFullUser)
}
TL_users_getFullUser::TL_users_getFullUser(const TL_users_getFullUser& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_id()) {
    id_ = new ::mtproto::InputUser(*from.id_);
  } else {
    id_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:mtproto.TL_users_getFullUser)
}

void TL_users_getFullUser::SharedCtor() {
  id_ = NULL;
  _cached_size_ = 0;
}

TL_users_getFullUser::~TL_users_getFullUser() {
  // @@protoc_insertion_point(destructor:mtproto.TL_users_getFullUser)
  SharedDtor();
}

void TL_users_getFullUser::SharedDtor() {
  if (this != internal_default_instance()) delete id_;
}

void TL_users_getFullUser::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TL_users_getFullUser::descriptor() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TL_users_getFullUser& TL_users_getFullUser::default_instance() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  return *internal_default_instance();
}

TL_users_getFullUser* TL_users_getFullUser::New(::google::protobuf::Arena* arena) const {
  TL_users_getFullUser* n = new TL_users_getFullUser;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TL_users_getFullUser::Swap(TL_users_getFullUser* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TL_users_getFullUser::InternalSwap(TL_users_getFullUser* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata TL_users_getFullUser::GetMetadata() const {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TL_users_getFullUser

// .mtproto.InputUser id = 1;
bool TL_users_getFullUser::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
void TL_users_getFullUser::clear_id() {
  if (GetArenaNoVirtual() == NULL && id_ != NULL) delete id_;
  id_ = NULL;
}
const ::mtproto::InputUser& TL_users_getFullUser::id() const {
  const ::mtproto::InputUser* p = id_;
  // @@protoc_insertion_point(field_get:mtproto.TL_users_getFullUser.id)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::InputUser*>(
      &::mtproto::_InputUser_default_instance_);
}
::mtproto::InputUser* TL_users_getFullUser::mutable_id() {
  
  if (id_ == NULL) {
    id_ = new ::mtproto::InputUser;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_users_getFullUser.id)
  return id_;
}
::mtproto::InputUser* TL_users_getFullUser::release_id() {
  // @@protoc_insertion_point(field_release:mtproto.TL_users_getFullUser.id)
  
  ::mtproto::InputUser* temp = id_;
  id_ = NULL;
  return temp;
}
void TL_users_getFullUser::set_allocated_id(::mtproto::InputUser* id) {
  delete id_;
  id_ = id;
  if (id) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_users_getFullUser.id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TL_users_setSecureValueErrors::kIdFieldNumber;
const int TL_users_setSecureValueErrors::kErrorsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TL_users_setSecureValueErrors::TL_users_setSecureValueErrors()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.TL_users_setSecureValueErrors)
}
TL_users_setSecureValueErrors::TL_users_setSecureValueErrors(const TL_users_setSecureValueErrors& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      errors_(from.errors_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_id()) {
    id_ = new ::mtproto::InputUser(*from.id_);
  } else {
    id_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:mtproto.TL_users_setSecureValueErrors)
}

void TL_users_setSecureValueErrors::SharedCtor() {
  id_ = NULL;
  _cached_size_ = 0;
}

TL_users_setSecureValueErrors::~TL_users_setSecureValueErrors() {
  // @@protoc_insertion_point(destructor:mtproto.TL_users_setSecureValueErrors)
  SharedDtor();
}

void TL_users_setSecureValueErrors::SharedDtor() {
  if (this != internal_default_instance()) delete id_;
}

void TL_users_setSecureValueErrors::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TL_users_setSecureValueErrors::descriptor() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TL_users_setSecureValueErrors& TL_users_setSecureValueErrors::default_instance() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  return *internal_default_instance();
}

TL_users_setSecureValueErrors* TL_users_setSecureValueErrors::New(::google::protobuf::Arena* arena) const {
  TL_users_setSecureValueErrors* n = new TL_users_setSecureValueErrors;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TL_users_setSecureValueErrors::Swap(TL_users_setSecureValueErrors* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TL_users_setSecureValueErrors::InternalSwap(TL_users_setSecureValueErrors* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata TL_users_setSecureValueErrors::GetMetadata() const {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TL_users_setSecureValueErrors

// .mtproto.InputUser id = 1;
bool TL_users_setSecureValueErrors::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
void TL_users_setSecureValueErrors::clear_id() {
  if (GetArenaNoVirtual() == NULL && id_ != NULL) delete id_;
  id_ = NULL;
}
const ::mtproto::InputUser& TL_users_setSecureValueErrors::id() const {
  const ::mtproto::InputUser* p = id_;
  // @@protoc_insertion_point(field_get:mtproto.TL_users_setSecureValueErrors.id)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::InputUser*>(
      &::mtproto::_InputUser_default_instance_);
}
::mtproto::InputUser* TL_users_setSecureValueErrors::mutable_id() {
  
  if (id_ == NULL) {
    id_ = new ::mtproto::InputUser;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_users_setSecureValueErrors.id)
  return id_;
}
::mtproto::InputUser* TL_users_setSecureValueErrors::release_id() {
  // @@protoc_insertion_point(field_release:mtproto.TL_users_setSecureValueErrors.id)
  
  ::mtproto::InputUser* temp = id_;
  id_ = NULL;
  return temp;
}
void TL_users_setSecureValueErrors::set_allocated_id(::mtproto::InputUser* id) {
  delete id_;
  id_ = id;
  if (id) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_users_setSecureValueErrors.id)
}

// repeated .mtproto.SecureValueError errors = 2;
int TL_users_setSecureValueErrors::errors_size() const {
  return errors_.size();
}
void TL_users_setSecureValueErrors::clear_errors() {
  errors_.Clear();
}
const ::mtproto::SecureValueError& TL_users_setSecureValueErrors::errors(int index) const {
  // @@protoc_insertion_point(field_get:mtproto.TL_users_setSecureValueErrors.errors)
  return errors_.Get(index);
}
::mtproto::SecureValueError* TL_users_setSecureValueErrors::mutable_errors(int index) {
  // @@protoc_insertion_point(field_mutable:mtproto.TL_users_setSecureValueErrors.errors)
  return errors_.Mutable(index);
}
::mtproto::SecureValueError* TL_users_setSecureValueErrors::add_errors() {
  // @@protoc_insertion_point(field_add:mtproto.TL_users_setSecureValueErrors.errors)
  return errors_.Add();
}
::google::protobuf::RepeatedPtrField< ::mtproto::SecureValueError >*
TL_users_setSecureValueErrors::mutable_errors() {
  // @@protoc_insertion_point(field_mutable_list:mtproto.TL_users_setSecureValueErrors.errors)
  return &errors_;
}
const ::google::protobuf::RepeatedPtrField< ::mtproto::SecureValueError >&
TL_users_setSecureValueErrors::errors() const {
  // @@protoc_insertion_point(field_list:mtproto.TL_users_setSecureValueErrors.errors)
  return errors_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TL_contacts_getStatuses::TL_contacts_getStatuses()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.TL_contacts_getStatuses)
}
TL_contacts_getStatuses::TL_contacts_getStatuses(const TL_contacts_getStatuses& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:mtproto.TL_contacts_getStatuses)
}

void TL_contacts_getStatuses::SharedCtor() {
  _cached_size_ = 0;
}

TL_contacts_getStatuses::~TL_contacts_getStatuses() {
  // @@protoc_insertion_point(destructor:mtproto.TL_contacts_getStatuses)
  SharedDtor();
}

void TL_contacts_getStatuses::SharedDtor() {
}

void TL_contacts_getStatuses::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TL_contacts_getStatuses::descriptor() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TL_contacts_getStatuses& TL_contacts_getStatuses::default_instance() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  return *internal_default_instance();
}

TL_contacts_getStatuses* TL_contacts_getStatuses::New(::google::protobuf::Arena* arena) const {
  TL_contacts_getStatuses* n = new TL_contacts_getStatuses;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TL_contacts_getStatuses::Swap(TL_contacts_getStatuses* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TL_contacts_getStatuses::InternalSwap(TL_contacts_getStatuses* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata TL_contacts_getStatuses::GetMetadata() const {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TL_contacts_getStatuses

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TL_contacts_getContacts::kHashFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TL_contacts_getContacts::TL_contacts_getContacts()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.TL_contacts_getContacts)
}
TL_contacts_getContacts::TL_contacts_getContacts(const TL_contacts_getContacts& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  hash_ = from.hash_;
  // @@protoc_insertion_point(copy_constructor:mtproto.TL_contacts_getContacts)
}

void TL_contacts_getContacts::SharedCtor() {
  hash_ = 0;
  _cached_size_ = 0;
}

TL_contacts_getContacts::~TL_contacts_getContacts() {
  // @@protoc_insertion_point(destructor:mtproto.TL_contacts_getContacts)
  SharedDtor();
}

void TL_contacts_getContacts::SharedDtor() {
}

void TL_contacts_getContacts::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TL_contacts_getContacts::descriptor() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TL_contacts_getContacts& TL_contacts_getContacts::default_instance() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  return *internal_default_instance();
}

TL_contacts_getContacts* TL_contacts_getContacts::New(::google::protobuf::Arena* arena) const {
  TL_contacts_getContacts* n = new TL_contacts_getContacts;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TL_contacts_getContacts::Swap(TL_contacts_getContacts* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TL_contacts_getContacts::InternalSwap(TL_contacts_getContacts* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata TL_contacts_getContacts::GetMetadata() const {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TL_contacts_getContacts

// int32 hash = 1;
void TL_contacts_getContacts::clear_hash() {
  hash_ = 0;
}
::google::protobuf::int32 TL_contacts_getContacts::hash() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_contacts_getContacts.hash)
  return hash_;
}
void TL_contacts_getContacts::set_hash(::google::protobuf::int32 value) {
  
  hash_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_contacts_getContacts.hash)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TL_contacts_importContacts::kContactsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TL_contacts_importContacts::TL_contacts_importContacts()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.TL_contacts_importContacts)
}
TL_contacts_importContacts::TL_contacts_importContacts(const TL_contacts_importContacts& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      contacts_(from.contacts_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:mtproto.TL_contacts_importContacts)
}

void TL_contacts_importContacts::SharedCtor() {
  _cached_size_ = 0;
}

TL_contacts_importContacts::~TL_contacts_importContacts() {
  // @@protoc_insertion_point(destructor:mtproto.TL_contacts_importContacts)
  SharedDtor();
}

void TL_contacts_importContacts::SharedDtor() {
}

void TL_contacts_importContacts::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TL_contacts_importContacts::descriptor() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TL_contacts_importContacts& TL_contacts_importContacts::default_instance() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  return *internal_default_instance();
}

TL_contacts_importContacts* TL_contacts_importContacts::New(::google::protobuf::Arena* arena) const {
  TL_contacts_importContacts* n = new TL_contacts_importContacts;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TL_contacts_importContacts::Swap(TL_contacts_importContacts* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TL_contacts_importContacts::InternalSwap(TL_contacts_importContacts* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata TL_contacts_importContacts::GetMetadata() const {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TL_contacts_importContacts

// repeated .mtproto.InputContact contacts = 1;
int TL_contacts_importContacts::contacts_size() const {
  return contacts_.size();
}
void TL_contacts_importContacts::clear_contacts() {
  contacts_.Clear();
}
const ::mtproto::InputContact& TL_contacts_importContacts::contacts(int index) const {
  // @@protoc_insertion_point(field_get:mtproto.TL_contacts_importContacts.contacts)
  return contacts_.Get(index);
}
::mtproto::InputContact* TL_contacts_importContacts::mutable_contacts(int index) {
  // @@protoc_insertion_point(field_mutable:mtproto.TL_contacts_importContacts.contacts)
  return contacts_.Mutable(index);
}
::mtproto::InputContact* TL_contacts_importContacts::add_contacts() {
  // @@protoc_insertion_point(field_add:mtproto.TL_contacts_importContacts.contacts)
  return contacts_.Add();
}
::google::protobuf::RepeatedPtrField< ::mtproto::InputContact >*
TL_contacts_importContacts::mutable_contacts() {
  // @@protoc_insertion_point(field_mutable_list:mtproto.TL_contacts_importContacts.contacts)
  return &contacts_;
}
const ::google::protobuf::RepeatedPtrField< ::mtproto::InputContact >&
TL_contacts_importContacts::contacts() const {
  // @@protoc_insertion_point(field_list:mtproto.TL_contacts_importContacts.contacts)
  return contacts_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TL_contacts_deleteContact::kIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TL_contacts_deleteContact::TL_contacts_deleteContact()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.TL_contacts_deleteContact)
}
TL_contacts_deleteContact::TL_contacts_deleteContact(const TL_contacts_deleteContact& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_id()) {
    id_ = new ::mtproto::InputUser(*from.id_);
  } else {
    id_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:mtproto.TL_contacts_deleteContact)
}

void TL_contacts_deleteContact::SharedCtor() {
  id_ = NULL;
  _cached_size_ = 0;
}

TL_contacts_deleteContact::~TL_contacts_deleteContact() {
  // @@protoc_insertion_point(destructor:mtproto.TL_contacts_deleteContact)
  SharedDtor();
}

void TL_contacts_deleteContact::SharedDtor() {
  if (this != internal_default_instance()) delete id_;
}

void TL_contacts_deleteContact::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TL_contacts_deleteContact::descriptor() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TL_contacts_deleteContact& TL_contacts_deleteContact::default_instance() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  return *internal_default_instance();
}

TL_contacts_deleteContact* TL_contacts_deleteContact::New(::google::protobuf::Arena* arena) const {
  TL_contacts_deleteContact* n = new TL_contacts_deleteContact;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TL_contacts_deleteContact::Swap(TL_contacts_deleteContact* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TL_contacts_deleteContact::InternalSwap(TL_contacts_deleteContact* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata TL_contacts_deleteContact::GetMetadata() const {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TL_contacts_deleteContact

// .mtproto.InputUser id = 1;
bool TL_contacts_deleteContact::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
void TL_contacts_deleteContact::clear_id() {
  if (GetArenaNoVirtual() == NULL && id_ != NULL) delete id_;
  id_ = NULL;
}
const ::mtproto::InputUser& TL_contacts_deleteContact::id() const {
  const ::mtproto::InputUser* p = id_;
  // @@protoc_insertion_point(field_get:mtproto.TL_contacts_deleteContact.id)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::InputUser*>(
      &::mtproto::_InputUser_default_instance_);
}
::mtproto::InputUser* TL_contacts_deleteContact::mutable_id() {
  
  if (id_ == NULL) {
    id_ = new ::mtproto::InputUser;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_contacts_deleteContact.id)
  return id_;
}
::mtproto::InputUser* TL_contacts_deleteContact::release_id() {
  // @@protoc_insertion_point(field_release:mtproto.TL_contacts_deleteContact.id)
  
  ::mtproto::InputUser* temp = id_;
  id_ = NULL;
  return temp;
}
void TL_contacts_deleteContact::set_allocated_id(::mtproto::InputUser* id) {
  delete id_;
  id_ = id;
  if (id) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_contacts_deleteContact.id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TL_contacts_deleteContacts::kIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TL_contacts_deleteContacts::TL_contacts_deleteContacts()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.TL_contacts_deleteContacts)
}
TL_contacts_deleteContacts::TL_contacts_deleteContacts(const TL_contacts_deleteContacts& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      id_(from.id_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:mtproto.TL_contacts_deleteContacts)
}

void TL_contacts_deleteContacts::SharedCtor() {
  _cached_size_ = 0;
}

TL_contacts_deleteContacts::~TL_contacts_deleteContacts() {
  // @@protoc_insertion_point(destructor:mtproto.TL_contacts_deleteContacts)
  SharedDtor();
}

void TL_contacts_deleteContacts::SharedDtor() {
}

void TL_contacts_deleteContacts::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TL_contacts_deleteContacts::descriptor() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TL_contacts_deleteContacts& TL_contacts_deleteContacts::default_instance() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  return *internal_default_instance();
}

TL_contacts_deleteContacts* TL_contacts_deleteContacts::New(::google::protobuf::Arena* arena) const {
  TL_contacts_deleteContacts* n = new TL_contacts_deleteContacts;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TL_contacts_deleteContacts::Swap(TL_contacts_deleteContacts* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TL_contacts_deleteContacts::InternalSwap(TL_contacts_deleteContacts* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata TL_contacts_deleteContacts::GetMetadata() const {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TL_contacts_deleteContacts

// repeated .mtproto.InputUser id = 1;
int TL_contacts_deleteContacts::id_size() const {
  return id_.size();
}
void TL_contacts_deleteContacts::clear_id() {
  id_.Clear();
}
const ::mtproto::InputUser& TL_contacts_deleteContacts::id(int index) const {
  // @@protoc_insertion_point(field_get:mtproto.TL_contacts_deleteContacts.id)
  return id_.Get(index);
}
::mtproto::InputUser* TL_contacts_deleteContacts::mutable_id(int index) {
  // @@protoc_insertion_point(field_mutable:mtproto.TL_contacts_deleteContacts.id)
  return id_.Mutable(index);
}
::mtproto::InputUser* TL_contacts_deleteContacts::add_id() {
  // @@protoc_insertion_point(field_add:mtproto.TL_contacts_deleteContacts.id)
  return id_.Add();
}
::google::protobuf::RepeatedPtrField< ::mtproto::InputUser >*
TL_contacts_deleteContacts::mutable_id() {
  // @@protoc_insertion_point(field_mutable_list:mtproto.TL_contacts_deleteContacts.id)
  return &id_;
}
const ::google::protobuf::RepeatedPtrField< ::mtproto::InputUser >&
TL_contacts_deleteContacts::id() const {
  // @@protoc_insertion_point(field_list:mtproto.TL_contacts_deleteContacts.id)
  return id_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TL_contacts_block::kIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TL_contacts_block::TL_contacts_block()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.TL_contacts_block)
}
TL_contacts_block::TL_contacts_block(const TL_contacts_block& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_id()) {
    id_ = new ::mtproto::InputUser(*from.id_);
  } else {
    id_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:mtproto.TL_contacts_block)
}

void TL_contacts_block::SharedCtor() {
  id_ = NULL;
  _cached_size_ = 0;
}

TL_contacts_block::~TL_contacts_block() {
  // @@protoc_insertion_point(destructor:mtproto.TL_contacts_block)
  SharedDtor();
}

void TL_contacts_block::SharedDtor() {
  if (this != internal_default_instance()) delete id_;
}

void TL_contacts_block::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TL_contacts_block::descriptor() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TL_contacts_block& TL_contacts_block::default_instance() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  return *internal_default_instance();
}

TL_contacts_block* TL_contacts_block::New(::google::protobuf::Arena* arena) const {
  TL_contacts_block* n = new TL_contacts_block;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TL_contacts_block::Swap(TL_contacts_block* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TL_contacts_block::InternalSwap(TL_contacts_block* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata TL_contacts_block::GetMetadata() const {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TL_contacts_block

// .mtproto.InputUser id = 1;
bool TL_contacts_block::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
void TL_contacts_block::clear_id() {
  if (GetArenaNoVirtual() == NULL && id_ != NULL) delete id_;
  id_ = NULL;
}
const ::mtproto::InputUser& TL_contacts_block::id() const {
  const ::mtproto::InputUser* p = id_;
  // @@protoc_insertion_point(field_get:mtproto.TL_contacts_block.id)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::InputUser*>(
      &::mtproto::_InputUser_default_instance_);
}
::mtproto::InputUser* TL_contacts_block::mutable_id() {
  
  if (id_ == NULL) {
    id_ = new ::mtproto::InputUser;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_contacts_block.id)
  return id_;
}
::mtproto::InputUser* TL_contacts_block::release_id() {
  // @@protoc_insertion_point(field_release:mtproto.TL_contacts_block.id)
  
  ::mtproto::InputUser* temp = id_;
  id_ = NULL;
  return temp;
}
void TL_contacts_block::set_allocated_id(::mtproto::InputUser* id) {
  delete id_;
  id_ = id;
  if (id) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_contacts_block.id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TL_contacts_unblock::kIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TL_contacts_unblock::TL_contacts_unblock()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.TL_contacts_unblock)
}
TL_contacts_unblock::TL_contacts_unblock(const TL_contacts_unblock& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_id()) {
    id_ = new ::mtproto::InputUser(*from.id_);
  } else {
    id_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:mtproto.TL_contacts_unblock)
}

void TL_contacts_unblock::SharedCtor() {
  id_ = NULL;
  _cached_size_ = 0;
}

TL_contacts_unblock::~TL_contacts_unblock() {
  // @@protoc_insertion_point(destructor:mtproto.TL_contacts_unblock)
  SharedDtor();
}

void TL_contacts_unblock::SharedDtor() {
  if (this != internal_default_instance()) delete id_;
}

void TL_contacts_unblock::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TL_contacts_unblock::descriptor() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TL_contacts_unblock& TL_contacts_unblock::default_instance() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  return *internal_default_instance();
}

TL_contacts_unblock* TL_contacts_unblock::New(::google::protobuf::Arena* arena) const {
  TL_contacts_unblock* n = new TL_contacts_unblock;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TL_contacts_unblock::Swap(TL_contacts_unblock* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TL_contacts_unblock::InternalSwap(TL_contacts_unblock* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata TL_contacts_unblock::GetMetadata() const {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TL_contacts_unblock

// .mtproto.InputUser id = 1;
bool TL_contacts_unblock::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
void TL_contacts_unblock::clear_id() {
  if (GetArenaNoVirtual() == NULL && id_ != NULL) delete id_;
  id_ = NULL;
}
const ::mtproto::InputUser& TL_contacts_unblock::id() const {
  const ::mtproto::InputUser* p = id_;
  // @@protoc_insertion_point(field_get:mtproto.TL_contacts_unblock.id)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::InputUser*>(
      &::mtproto::_InputUser_default_instance_);
}
::mtproto::InputUser* TL_contacts_unblock::mutable_id() {
  
  if (id_ == NULL) {
    id_ = new ::mtproto::InputUser;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_contacts_unblock.id)
  return id_;
}
::mtproto::InputUser* TL_contacts_unblock::release_id() {
  // @@protoc_insertion_point(field_release:mtproto.TL_contacts_unblock.id)
  
  ::mtproto::InputUser* temp = id_;
  id_ = NULL;
  return temp;
}
void TL_contacts_unblock::set_allocated_id(::mtproto::InputUser* id) {
  delete id_;
  id_ = id;
  if (id) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_contacts_unblock.id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TL_contacts_getBlocked::kOffsetFieldNumber;
const int TL_contacts_getBlocked::kLimitFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TL_contacts_getBlocked::TL_contacts_getBlocked()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.TL_contacts_getBlocked)
}
TL_contacts_getBlocked::TL_contacts_getBlocked(const TL_contacts_getBlocked& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&offset_, &from.offset_,
    static_cast<size_t>(reinterpret_cast<char*>(&limit_) -
    reinterpret_cast<char*>(&offset_)) + sizeof(limit_));
  // @@protoc_insertion_point(copy_constructor:mtproto.TL_contacts_getBlocked)
}

void TL_contacts_getBlocked::SharedCtor() {
  ::memset(&offset_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&limit_) -
      reinterpret_cast<char*>(&offset_)) + sizeof(limit_));
  _cached_size_ = 0;
}

TL_contacts_getBlocked::~TL_contacts_getBlocked() {
  // @@protoc_insertion_point(destructor:mtproto.TL_contacts_getBlocked)
  SharedDtor();
}

void TL_contacts_getBlocked::SharedDtor() {
}

void TL_contacts_getBlocked::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TL_contacts_getBlocked::descriptor() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TL_contacts_getBlocked& TL_contacts_getBlocked::default_instance() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  return *internal_default_instance();
}

TL_contacts_getBlocked* TL_contacts_getBlocked::New(::google::protobuf::Arena* arena) const {
  TL_contacts_getBlocked* n = new TL_contacts_getBlocked;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TL_contacts_getBlocked::Swap(TL_contacts_getBlocked* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TL_contacts_getBlocked::InternalSwap(TL_contacts_getBlocked* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata TL_contacts_getBlocked::GetMetadata() const {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TL_contacts_getBlocked

// int32 offset = 1;
void TL_contacts_getBlocked::clear_offset() {
  offset_ = 0;
}
::google::protobuf::int32 TL_contacts_getBlocked::offset() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_contacts_getBlocked.offset)
  return offset_;
}
void TL_contacts_getBlocked::set_offset(::google::protobuf::int32 value) {
  
  offset_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_contacts_getBlocked.offset)
}

// int32 limit = 2;
void TL_contacts_getBlocked::clear_limit() {
  limit_ = 0;
}
::google::protobuf::int32 TL_contacts_getBlocked::limit() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_contacts_getBlocked.limit)
  return limit_;
}
void TL_contacts_getBlocked::set_limit(::google::protobuf::int32 value) {
  
  limit_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_contacts_getBlocked.limit)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TL_contacts_exportCard::TL_contacts_exportCard()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.TL_contacts_exportCard)
}
TL_contacts_exportCard::TL_contacts_exportCard(const TL_contacts_exportCard& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:mtproto.TL_contacts_exportCard)
}

void TL_contacts_exportCard::SharedCtor() {
  _cached_size_ = 0;
}

TL_contacts_exportCard::~TL_contacts_exportCard() {
  // @@protoc_insertion_point(destructor:mtproto.TL_contacts_exportCard)
  SharedDtor();
}

void TL_contacts_exportCard::SharedDtor() {
}

void TL_contacts_exportCard::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TL_contacts_exportCard::descriptor() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TL_contacts_exportCard& TL_contacts_exportCard::default_instance() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  return *internal_default_instance();
}

TL_contacts_exportCard* TL_contacts_exportCard::New(::google::protobuf::Arena* arena) const {
  TL_contacts_exportCard* n = new TL_contacts_exportCard;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TL_contacts_exportCard::Swap(TL_contacts_exportCard* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TL_contacts_exportCard::InternalSwap(TL_contacts_exportCard* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata TL_contacts_exportCard::GetMetadata() const {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TL_contacts_exportCard

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TL_contacts_importCard::kExportCardFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TL_contacts_importCard::TL_contacts_importCard()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.TL_contacts_importCard)
}
TL_contacts_importCard::TL_contacts_importCard(const TL_contacts_importCard& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      export_card_(from.export_card_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:mtproto.TL_contacts_importCard)
}

void TL_contacts_importCard::SharedCtor() {
  _cached_size_ = 0;
}

TL_contacts_importCard::~TL_contacts_importCard() {
  // @@protoc_insertion_point(destructor:mtproto.TL_contacts_importCard)
  SharedDtor();
}

void TL_contacts_importCard::SharedDtor() {
}

void TL_contacts_importCard::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TL_contacts_importCard::descriptor() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TL_contacts_importCard& TL_contacts_importCard::default_instance() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  return *internal_default_instance();
}

TL_contacts_importCard* TL_contacts_importCard::New(::google::protobuf::Arena* arena) const {
  TL_contacts_importCard* n = new TL_contacts_importCard;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TL_contacts_importCard::Swap(TL_contacts_importCard* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TL_contacts_importCard::InternalSwap(TL_contacts_importCard* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata TL_contacts_importCard::GetMetadata() const {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TL_contacts_importCard

// repeated int32 export_card = 1;
int TL_contacts_importCard::export_card_size() const {
  return export_card_.size();
}
void TL_contacts_importCard::clear_export_card() {
  export_card_.Clear();
}
::google::protobuf::int32 TL_contacts_importCard::export_card(int index) const {
  // @@protoc_insertion_point(field_get:mtproto.TL_contacts_importCard.export_card)
  return export_card_.Get(index);
}
void TL_contacts_importCard::set_export_card(int index, ::google::protobuf::int32 value) {
  export_card_.Set(index, value);
  // @@protoc_insertion_point(field_set:mtproto.TL_contacts_importCard.export_card)
}
void TL_contacts_importCard::add_export_card(::google::protobuf::int32 value) {
  export_card_.Add(value);
  // @@protoc_insertion_point(field_add:mtproto.TL_contacts_importCard.export_card)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
TL_contacts_importCard::export_card() const {
  // @@protoc_insertion_point(field_list:mtproto.TL_contacts_importCard.export_card)
  return export_card_;
}
::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
TL_contacts_importCard::mutable_export_card() {
  // @@protoc_insertion_point(field_mutable_list:mtproto.TL_contacts_importCard.export_card)
  return &export_card_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TL_contacts_search::kQFieldNumber;
const int TL_contacts_search::kLimitFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TL_contacts_search::TL_contacts_search()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.TL_contacts_search)
}
TL_contacts_search::TL_contacts_search(const TL_contacts_search& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  q_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.q().size() > 0) {
    q_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.q_);
  }
  limit_ = from.limit_;
  // @@protoc_insertion_point(copy_constructor:mtproto.TL_contacts_search)
}

void TL_contacts_search::SharedCtor() {
  q_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  limit_ = 0;
  _cached_size_ = 0;
}

TL_contacts_search::~TL_contacts_search() {
  // @@protoc_insertion_point(destructor:mtproto.TL_contacts_search)
  SharedDtor();
}

void TL_contacts_search::SharedDtor() {
  q_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void TL_contacts_search::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TL_contacts_search::descriptor() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TL_contacts_search& TL_contacts_search::default_instance() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  return *internal_default_instance();
}

TL_contacts_search* TL_contacts_search::New(::google::protobuf::Arena* arena) const {
  TL_contacts_search* n = new TL_contacts_search;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TL_contacts_search::Swap(TL_contacts_search* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TL_contacts_search::InternalSwap(TL_contacts_search* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata TL_contacts_search::GetMetadata() const {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TL_contacts_search

// string q = 1;
void TL_contacts_search::clear_q() {
  q_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& TL_contacts_search::q() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_contacts_search.q)
  return q_.GetNoArena();
}
void TL_contacts_search::set_q(const ::std::string& value) {
  
  q_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtproto.TL_contacts_search.q)
}
#if LANG_CXX11
void TL_contacts_search::set_q(::std::string&& value) {
  
  q_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mtproto.TL_contacts_search.q)
}
#endif
void TL_contacts_search::set_q(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  q_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtproto.TL_contacts_search.q)
}
void TL_contacts_search::set_q(const char* value, size_t size) {
  
  q_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtproto.TL_contacts_search.q)
}
::std::string* TL_contacts_search::mutable_q() {
  
  // @@protoc_insertion_point(field_mutable:mtproto.TL_contacts_search.q)
  return q_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* TL_contacts_search::release_q() {
  // @@protoc_insertion_point(field_release:mtproto.TL_contacts_search.q)
  
  return q_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TL_contacts_search::set_allocated_q(::std::string* q) {
  if (q != NULL) {
    
  } else {
    
  }
  q_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), q);
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_contacts_search.q)
}

// int32 limit = 2;
void TL_contacts_search::clear_limit() {
  limit_ = 0;
}
::google::protobuf::int32 TL_contacts_search::limit() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_contacts_search.limit)
  return limit_;
}
void TL_contacts_search::set_limit(::google::protobuf::int32 value) {
  
  limit_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_contacts_search.limit)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TL_contacts_resolveUsername::kUsernameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TL_contacts_resolveUsername::TL_contacts_resolveUsername()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.TL_contacts_resolveUsername)
}
TL_contacts_resolveUsername::TL_contacts_resolveUsername(const TL_contacts_resolveUsername& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.username().size() > 0) {
    username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.username_);
  }
  // @@protoc_insertion_point(copy_constructor:mtproto.TL_contacts_resolveUsername)
}

void TL_contacts_resolveUsername::SharedCtor() {
  username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

TL_contacts_resolveUsername::~TL_contacts_resolveUsername() {
  // @@protoc_insertion_point(destructor:mtproto.TL_contacts_resolveUsername)
  SharedDtor();
}

void TL_contacts_resolveUsername::SharedDtor() {
  username_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void TL_contacts_resolveUsername::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TL_contacts_resolveUsername::descriptor() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TL_contacts_resolveUsername& TL_contacts_resolveUsername::default_instance() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  return *internal_default_instance();
}

TL_contacts_resolveUsername* TL_contacts_resolveUsername::New(::google::protobuf::Arena* arena) const {
  TL_contacts_resolveUsername* n = new TL_contacts_resolveUsername;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TL_contacts_resolveUsername::Swap(TL_contacts_resolveUsername* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TL_contacts_resolveUsername::InternalSwap(TL_contacts_resolveUsername* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata TL_contacts_resolveUsername::GetMetadata() const {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TL_contacts_resolveUsername

// string username = 1;
void TL_contacts_resolveUsername::clear_username() {
  username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& TL_contacts_resolveUsername::username() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_contacts_resolveUsername.username)
  return username_.GetNoArena();
}
void TL_contacts_resolveUsername::set_username(const ::std::string& value) {
  
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtproto.TL_contacts_resolveUsername.username)
}
#if LANG_CXX11
void TL_contacts_resolveUsername::set_username(::std::string&& value) {
  
  username_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mtproto.TL_contacts_resolveUsername.username)
}
#endif
void TL_contacts_resolveUsername::set_username(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtproto.TL_contacts_resolveUsername.username)
}
void TL_contacts_resolveUsername::set_username(const char* value, size_t size) {
  
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtproto.TL_contacts_resolveUsername.username)
}
::std::string* TL_contacts_resolveUsername::mutable_username() {
  
  // @@protoc_insertion_point(field_mutable:mtproto.TL_contacts_resolveUsername.username)
  return username_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* TL_contacts_resolveUsername::release_username() {
  // @@protoc_insertion_point(field_release:mtproto.TL_contacts_resolveUsername.username)
  
  return username_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TL_contacts_resolveUsername::set_allocated_username(::std::string* username) {
  if (username != NULL) {
    
  } else {
    
  }
  username_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), username);
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_contacts_resolveUsername.username)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TL_contacts_getTopPeers::kCorrespondentsFieldNumber;
const int TL_contacts_getTopPeers::kBotsPmFieldNumber;
const int TL_contacts_getTopPeers::kBotsInlineFieldNumber;
const int TL_contacts_getTopPeers::kPhoneCallsFieldNumber;
const int TL_contacts_getTopPeers::kGroupsFieldNumber;
const int TL_contacts_getTopPeers::kChannelsFieldNumber;
const int TL_contacts_getTopPeers::kOffsetFieldNumber;
const int TL_contacts_getTopPeers::kLimitFieldNumber;
const int TL_contacts_getTopPeers::kHashFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TL_contacts_getTopPeers::TL_contacts_getTopPeers()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.TL_contacts_getTopPeers)
}
TL_contacts_getTopPeers::TL_contacts_getTopPeers(const TL_contacts_getTopPeers& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&correspondents_, &from.correspondents_,
    static_cast<size_t>(reinterpret_cast<char*>(&hash_) -
    reinterpret_cast<char*>(&correspondents_)) + sizeof(hash_));
  // @@protoc_insertion_point(copy_constructor:mtproto.TL_contacts_getTopPeers)
}

void TL_contacts_getTopPeers::SharedCtor() {
  ::memset(&correspondents_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&hash_) -
      reinterpret_cast<char*>(&correspondents_)) + sizeof(hash_));
  _cached_size_ = 0;
}

TL_contacts_getTopPeers::~TL_contacts_getTopPeers() {
  // @@protoc_insertion_point(destructor:mtproto.TL_contacts_getTopPeers)
  SharedDtor();
}

void TL_contacts_getTopPeers::SharedDtor() {
}

void TL_contacts_getTopPeers::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TL_contacts_getTopPeers::descriptor() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TL_contacts_getTopPeers& TL_contacts_getTopPeers::default_instance() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  return *internal_default_instance();
}

TL_contacts_getTopPeers* TL_contacts_getTopPeers::New(::google::protobuf::Arena* arena) const {
  TL_contacts_getTopPeers* n = new TL_contacts_getTopPeers;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TL_contacts_getTopPeers::Swap(TL_contacts_getTopPeers* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TL_contacts_getTopPeers::InternalSwap(TL_contacts_getTopPeers* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata TL_contacts_getTopPeers::GetMetadata() const {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TL_contacts_getTopPeers

// bool correspondents = 2;
void TL_contacts_getTopPeers::clear_correspondents() {
  correspondents_ = false;
}
bool TL_contacts_getTopPeers::correspondents() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_contacts_getTopPeers.correspondents)
  return correspondents_;
}
void TL_contacts_getTopPeers::set_correspondents(bool value) {
  
  correspondents_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_contacts_getTopPeers.correspondents)
}

// bool bots_pm = 3;
void TL_contacts_getTopPeers::clear_bots_pm() {
  bots_pm_ = false;
}
bool TL_contacts_getTopPeers::bots_pm() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_contacts_getTopPeers.bots_pm)
  return bots_pm_;
}
void TL_contacts_getTopPeers::set_bots_pm(bool value) {
  
  bots_pm_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_contacts_getTopPeers.bots_pm)
}

// bool bots_inline = 4;
void TL_contacts_getTopPeers::clear_bots_inline() {
  bots_inline_ = false;
}
bool TL_contacts_getTopPeers::bots_inline() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_contacts_getTopPeers.bots_inline)
  return bots_inline_;
}
void TL_contacts_getTopPeers::set_bots_inline(bool value) {
  
  bots_inline_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_contacts_getTopPeers.bots_inline)
}

// bool phone_calls = 5;
void TL_contacts_getTopPeers::clear_phone_calls() {
  phone_calls_ = false;
}
bool TL_contacts_getTopPeers::phone_calls() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_contacts_getTopPeers.phone_calls)
  return phone_calls_;
}
void TL_contacts_getTopPeers::set_phone_calls(bool value) {
  
  phone_calls_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_contacts_getTopPeers.phone_calls)
}

// bool groups = 6;
void TL_contacts_getTopPeers::clear_groups() {
  groups_ = false;
}
bool TL_contacts_getTopPeers::groups() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_contacts_getTopPeers.groups)
  return groups_;
}
void TL_contacts_getTopPeers::set_groups(bool value) {
  
  groups_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_contacts_getTopPeers.groups)
}

// bool channels = 7;
void TL_contacts_getTopPeers::clear_channels() {
  channels_ = false;
}
bool TL_contacts_getTopPeers::channels() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_contacts_getTopPeers.channels)
  return channels_;
}
void TL_contacts_getTopPeers::set_channels(bool value) {
  
  channels_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_contacts_getTopPeers.channels)
}

// int32 offset = 8;
void TL_contacts_getTopPeers::clear_offset() {
  offset_ = 0;
}
::google::protobuf::int32 TL_contacts_getTopPeers::offset() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_contacts_getTopPeers.offset)
  return offset_;
}
void TL_contacts_getTopPeers::set_offset(::google::protobuf::int32 value) {
  
  offset_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_contacts_getTopPeers.offset)
}

// int32 limit = 9;
void TL_contacts_getTopPeers::clear_limit() {
  limit_ = 0;
}
::google::protobuf::int32 TL_contacts_getTopPeers::limit() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_contacts_getTopPeers.limit)
  return limit_;
}
void TL_contacts_getTopPeers::set_limit(::google::protobuf::int32 value) {
  
  limit_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_contacts_getTopPeers.limit)
}

// int32 hash = 10;
void TL_contacts_getTopPeers::clear_hash() {
  hash_ = 0;
}
::google::protobuf::int32 TL_contacts_getTopPeers::hash() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_contacts_getTopPeers.hash)
  return hash_;
}
void TL_contacts_getTopPeers::set_hash(::google::protobuf::int32 value) {
  
  hash_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_contacts_getTopPeers.hash)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TL_contacts_resetTopPeerRating::kCategoryFieldNumber;
const int TL_contacts_resetTopPeerRating::kPeerFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TL_contacts_resetTopPeerRating::TL_contacts_resetTopPeerRating()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.TL_contacts_resetTopPeerRating)
}
TL_contacts_resetTopPeerRating::TL_contacts_resetTopPeerRating(const TL_contacts_resetTopPeerRating& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_category()) {
    category_ = new ::mtproto::TopPeerCategory(*from.category_);
  } else {
    category_ = NULL;
  }
  if (from.has_peer()) {
    peer_ = new ::mtproto::InputPeer(*from.peer_);
  } else {
    peer_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:mtproto.TL_contacts_resetTopPeerRating)
}

void TL_contacts_resetTopPeerRating::SharedCtor() {
  ::memset(&category_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&peer_) -
      reinterpret_cast<char*>(&category_)) + sizeof(peer_));
  _cached_size_ = 0;
}

TL_contacts_resetTopPeerRating::~TL_contacts_resetTopPeerRating() {
  // @@protoc_insertion_point(destructor:mtproto.TL_contacts_resetTopPeerRating)
  SharedDtor();
}

void TL_contacts_resetTopPeerRating::SharedDtor() {
  if (this != internal_default_instance()) delete category_;
  if (this != internal_default_instance()) delete peer_;
}

void TL_contacts_resetTopPeerRating::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TL_contacts_resetTopPeerRating::descriptor() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TL_contacts_resetTopPeerRating& TL_contacts_resetTopPeerRating::default_instance() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  return *internal_default_instance();
}

TL_contacts_resetTopPeerRating* TL_contacts_resetTopPeerRating::New(::google::protobuf::Arena* arena) const {
  TL_contacts_resetTopPeerRating* n = new TL_contacts_resetTopPeerRating;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TL_contacts_resetTopPeerRating::Swap(TL_contacts_resetTopPeerRating* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TL_contacts_resetTopPeerRating::InternalSwap(TL_contacts_resetTopPeerRating* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata TL_contacts_resetTopPeerRating::GetMetadata() const {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TL_contacts_resetTopPeerRating

// .mtproto.TopPeerCategory category = 1;
bool TL_contacts_resetTopPeerRating::has_category() const {
  return this != internal_default_instance() && category_ != NULL;
}
void TL_contacts_resetTopPeerRating::clear_category() {
  if (GetArenaNoVirtual() == NULL && category_ != NULL) delete category_;
  category_ = NULL;
}
const ::mtproto::TopPeerCategory& TL_contacts_resetTopPeerRating::category() const {
  const ::mtproto::TopPeerCategory* p = category_;
  // @@protoc_insertion_point(field_get:mtproto.TL_contacts_resetTopPeerRating.category)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::TopPeerCategory*>(
      &::mtproto::_TopPeerCategory_default_instance_);
}
::mtproto::TopPeerCategory* TL_contacts_resetTopPeerRating::mutable_category() {
  
  if (category_ == NULL) {
    category_ = new ::mtproto::TopPeerCategory;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_contacts_resetTopPeerRating.category)
  return category_;
}
::mtproto::TopPeerCategory* TL_contacts_resetTopPeerRating::release_category() {
  // @@protoc_insertion_point(field_release:mtproto.TL_contacts_resetTopPeerRating.category)
  
  ::mtproto::TopPeerCategory* temp = category_;
  category_ = NULL;
  return temp;
}
void TL_contacts_resetTopPeerRating::set_allocated_category(::mtproto::TopPeerCategory* category) {
  delete category_;
  category_ = category;
  if (category) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_contacts_resetTopPeerRating.category)
}

// .mtproto.InputPeer peer = 2;
bool TL_contacts_resetTopPeerRating::has_peer() const {
  return this != internal_default_instance() && peer_ != NULL;
}
void TL_contacts_resetTopPeerRating::clear_peer() {
  if (GetArenaNoVirtual() == NULL && peer_ != NULL) delete peer_;
  peer_ = NULL;
}
const ::mtproto::InputPeer& TL_contacts_resetTopPeerRating::peer() const {
  const ::mtproto::InputPeer* p = peer_;
  // @@protoc_insertion_point(field_get:mtproto.TL_contacts_resetTopPeerRating.peer)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::InputPeer*>(
      &::mtproto::_InputPeer_default_instance_);
}
::mtproto::InputPeer* TL_contacts_resetTopPeerRating::mutable_peer() {
  
  if (peer_ == NULL) {
    peer_ = new ::mtproto::InputPeer;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_contacts_resetTopPeerRating.peer)
  return peer_;
}
::mtproto::InputPeer* TL_contacts_resetTopPeerRating::release_peer() {
  // @@protoc_insertion_point(field_release:mtproto.TL_contacts_resetTopPeerRating.peer)
  
  ::mtproto::InputPeer* temp = peer_;
  peer_ = NULL;
  return temp;
}
void TL_contacts_resetTopPeerRating::set_allocated_peer(::mtproto::InputPeer* peer) {
  delete peer_;
  peer_ = peer;
  if (peer) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_contacts_resetTopPeerRating.peer)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TL_contacts_resetSaved::TL_contacts_resetSaved()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.TL_contacts_resetSaved)
}
TL_contacts_resetSaved::TL_contacts_resetSaved(const TL_contacts_resetSaved& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:mtproto.TL_contacts_resetSaved)
}

void TL_contacts_resetSaved::SharedCtor() {
  _cached_size_ = 0;
}

TL_contacts_resetSaved::~TL_contacts_resetSaved() {
  // @@protoc_insertion_point(destructor:mtproto.TL_contacts_resetSaved)
  SharedDtor();
}

void TL_contacts_resetSaved::SharedDtor() {
}

void TL_contacts_resetSaved::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TL_contacts_resetSaved::descriptor() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TL_contacts_resetSaved& TL_contacts_resetSaved::default_instance() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  return *internal_default_instance();
}

TL_contacts_resetSaved* TL_contacts_resetSaved::New(::google::protobuf::Arena* arena) const {
  TL_contacts_resetSaved* n = new TL_contacts_resetSaved;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TL_contacts_resetSaved::Swap(TL_contacts_resetSaved* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TL_contacts_resetSaved::InternalSwap(TL_contacts_resetSaved* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata TL_contacts_resetSaved::GetMetadata() const {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TL_contacts_resetSaved

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TL_contacts_getSaved::TL_contacts_getSaved()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.TL_contacts_getSaved)
}
TL_contacts_getSaved::TL_contacts_getSaved(const TL_contacts_getSaved& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:mtproto.TL_contacts_getSaved)
}

void TL_contacts_getSaved::SharedCtor() {
  _cached_size_ = 0;
}

TL_contacts_getSaved::~TL_contacts_getSaved() {
  // @@protoc_insertion_point(destructor:mtproto.TL_contacts_getSaved)
  SharedDtor();
}

void TL_contacts_getSaved::SharedDtor() {
}

void TL_contacts_getSaved::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TL_contacts_getSaved::descriptor() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TL_contacts_getSaved& TL_contacts_getSaved::default_instance() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  return *internal_default_instance();
}

TL_contacts_getSaved* TL_contacts_getSaved::New(::google::protobuf::Arena* arena) const {
  TL_contacts_getSaved* n = new TL_contacts_getSaved;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TL_contacts_getSaved::Swap(TL_contacts_getSaved* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TL_contacts_getSaved::InternalSwap(TL_contacts_getSaved* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata TL_contacts_getSaved::GetMetadata() const {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TL_contacts_getSaved

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TL_contacts_toggleTopPeers::kEnabledFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TL_contacts_toggleTopPeers::TL_contacts_toggleTopPeers()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.TL_contacts_toggleTopPeers)
}
TL_contacts_toggleTopPeers::TL_contacts_toggleTopPeers(const TL_contacts_toggleTopPeers& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_enabled()) {
    enabled_ = new ::mtproto::Bool(*from.enabled_);
  } else {
    enabled_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:mtproto.TL_contacts_toggleTopPeers)
}

void TL_contacts_toggleTopPeers::SharedCtor() {
  enabled_ = NULL;
  _cached_size_ = 0;
}

TL_contacts_toggleTopPeers::~TL_contacts_toggleTopPeers() {
  // @@protoc_insertion_point(destructor:mtproto.TL_contacts_toggleTopPeers)
  SharedDtor();
}

void TL_contacts_toggleTopPeers::SharedDtor() {
  if (this != internal_default_instance()) delete enabled_;
}

void TL_contacts_toggleTopPeers::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TL_contacts_toggleTopPeers::descriptor() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TL_contacts_toggleTopPeers& TL_contacts_toggleTopPeers::default_instance() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  return *internal_default_instance();
}

TL_contacts_toggleTopPeers* TL_contacts_toggleTopPeers::New(::google::protobuf::Arena* arena) const {
  TL_contacts_toggleTopPeers* n = new TL_contacts_toggleTopPeers;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TL_contacts_toggleTopPeers::Swap(TL_contacts_toggleTopPeers* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TL_contacts_toggleTopPeers::InternalSwap(TL_contacts_toggleTopPeers* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata TL_contacts_toggleTopPeers::GetMetadata() const {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TL_contacts_toggleTopPeers

// .mtproto.Bool enabled = 1;
bool TL_contacts_toggleTopPeers::has_enabled() const {
  return this != internal_default_instance() && enabled_ != NULL;
}
void TL_contacts_toggleTopPeers::clear_enabled() {
  if (GetArenaNoVirtual() == NULL && enabled_ != NULL) delete enabled_;
  enabled_ = NULL;
}
const ::mtproto::Bool& TL_contacts_toggleTopPeers::enabled() const {
  const ::mtproto::Bool* p = enabled_;
  // @@protoc_insertion_point(field_get:mtproto.TL_contacts_toggleTopPeers.enabled)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::Bool*>(
      &::mtproto::_Bool_default_instance_);
}
::mtproto::Bool* TL_contacts_toggleTopPeers::mutable_enabled() {
  
  if (enabled_ == NULL) {
    enabled_ = new ::mtproto::Bool;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_contacts_toggleTopPeers.enabled)
  return enabled_;
}
::mtproto::Bool* TL_contacts_toggleTopPeers::release_enabled() {
  // @@protoc_insertion_point(field_release:mtproto.TL_contacts_toggleTopPeers.enabled)
  
  ::mtproto::Bool* temp = enabled_;
  enabled_ = NULL;
  return temp;
}
void TL_contacts_toggleTopPeers::set_allocated_enabled(::mtproto::Bool* enabled) {
  delete enabled_;
  enabled_ = enabled;
  if (enabled) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_contacts_toggleTopPeers.enabled)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TL_messages_getMessages::kIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TL_messages_getMessages::TL_messages_getMessages()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.TL_messages_getMessages)
}
TL_messages_getMessages::TL_messages_getMessages(const TL_messages_getMessages& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      id_(from.id_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:mtproto.TL_messages_getMessages)
}

void TL_messages_getMessages::SharedCtor() {
  _cached_size_ = 0;
}

TL_messages_getMessages::~TL_messages_getMessages() {
  // @@protoc_insertion_point(destructor:mtproto.TL_messages_getMessages)
  SharedDtor();
}

void TL_messages_getMessages::SharedDtor() {
}

void TL_messages_getMessages::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TL_messages_getMessages::descriptor() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TL_messages_getMessages& TL_messages_getMessages::default_instance() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  return *internal_default_instance();
}

TL_messages_getMessages* TL_messages_getMessages::New(::google::protobuf::Arena* arena) const {
  TL_messages_getMessages* n = new TL_messages_getMessages;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TL_messages_getMessages::Swap(TL_messages_getMessages* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TL_messages_getMessages::InternalSwap(TL_messages_getMessages* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata TL_messages_getMessages::GetMetadata() const {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TL_messages_getMessages

// repeated .mtproto.InputMessage id = 1;
int TL_messages_getMessages::id_size() const {
  return id_.size();
}
void TL_messages_getMessages::clear_id() {
  id_.Clear();
}
const ::mtproto::InputMessage& TL_messages_getMessages::id(int index) const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_getMessages.id)
  return id_.Get(index);
}
::mtproto::InputMessage* TL_messages_getMessages::mutable_id(int index) {
  // @@protoc_insertion_point(field_mutable:mtproto.TL_messages_getMessages.id)
  return id_.Mutable(index);
}
::mtproto::InputMessage* TL_messages_getMessages::add_id() {
  // @@protoc_insertion_point(field_add:mtproto.TL_messages_getMessages.id)
  return id_.Add();
}
::google::protobuf::RepeatedPtrField< ::mtproto::InputMessage >*
TL_messages_getMessages::mutable_id() {
  // @@protoc_insertion_point(field_mutable_list:mtproto.TL_messages_getMessages.id)
  return &id_;
}
const ::google::protobuf::RepeatedPtrField< ::mtproto::InputMessage >&
TL_messages_getMessages::id() const {
  // @@protoc_insertion_point(field_list:mtproto.TL_messages_getMessages.id)
  return id_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TL_messages_getDialogs::kExcludePinnedFieldNumber;
const int TL_messages_getDialogs::kOffsetDateFieldNumber;
const int TL_messages_getDialogs::kOffsetIdFieldNumber;
const int TL_messages_getDialogs::kOffsetPeerFieldNumber;
const int TL_messages_getDialogs::kLimitFieldNumber;
const int TL_messages_getDialogs::kHashFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TL_messages_getDialogs::TL_messages_getDialogs()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.TL_messages_getDialogs)
}
TL_messages_getDialogs::TL_messages_getDialogs(const TL_messages_getDialogs& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_offset_peer()) {
    offset_peer_ = new ::mtproto::InputPeer(*from.offset_peer_);
  } else {
    offset_peer_ = NULL;
  }
  ::memcpy(&exclude_pinned_, &from.exclude_pinned_,
    static_cast<size_t>(reinterpret_cast<char*>(&hash_) -
    reinterpret_cast<char*>(&exclude_pinned_)) + sizeof(hash_));
  // @@protoc_insertion_point(copy_constructor:mtproto.TL_messages_getDialogs)
}

void TL_messages_getDialogs::SharedCtor() {
  ::memset(&offset_peer_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&hash_) -
      reinterpret_cast<char*>(&offset_peer_)) + sizeof(hash_));
  _cached_size_ = 0;
}

TL_messages_getDialogs::~TL_messages_getDialogs() {
  // @@protoc_insertion_point(destructor:mtproto.TL_messages_getDialogs)
  SharedDtor();
}

void TL_messages_getDialogs::SharedDtor() {
  if (this != internal_default_instance()) delete offset_peer_;
}

void TL_messages_getDialogs::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TL_messages_getDialogs::descriptor() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TL_messages_getDialogs& TL_messages_getDialogs::default_instance() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  return *internal_default_instance();
}

TL_messages_getDialogs* TL_messages_getDialogs::New(::google::protobuf::Arena* arena) const {
  TL_messages_getDialogs* n = new TL_messages_getDialogs;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TL_messages_getDialogs::Swap(TL_messages_getDialogs* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TL_messages_getDialogs::InternalSwap(TL_messages_getDialogs* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata TL_messages_getDialogs::GetMetadata() const {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TL_messages_getDialogs

// bool exclude_pinned = 2;
void TL_messages_getDialogs::clear_exclude_pinned() {
  exclude_pinned_ = false;
}
bool TL_messages_getDialogs::exclude_pinned() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_getDialogs.exclude_pinned)
  return exclude_pinned_;
}
void TL_messages_getDialogs::set_exclude_pinned(bool value) {
  
  exclude_pinned_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_getDialogs.exclude_pinned)
}

// int32 offset_date = 3;
void TL_messages_getDialogs::clear_offset_date() {
  offset_date_ = 0;
}
::google::protobuf::int32 TL_messages_getDialogs::offset_date() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_getDialogs.offset_date)
  return offset_date_;
}
void TL_messages_getDialogs::set_offset_date(::google::protobuf::int32 value) {
  
  offset_date_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_getDialogs.offset_date)
}

// int32 offset_id = 4;
void TL_messages_getDialogs::clear_offset_id() {
  offset_id_ = 0;
}
::google::protobuf::int32 TL_messages_getDialogs::offset_id() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_getDialogs.offset_id)
  return offset_id_;
}
void TL_messages_getDialogs::set_offset_id(::google::protobuf::int32 value) {
  
  offset_id_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_getDialogs.offset_id)
}

// .mtproto.InputPeer offset_peer = 5;
bool TL_messages_getDialogs::has_offset_peer() const {
  return this != internal_default_instance() && offset_peer_ != NULL;
}
void TL_messages_getDialogs::clear_offset_peer() {
  if (GetArenaNoVirtual() == NULL && offset_peer_ != NULL) delete offset_peer_;
  offset_peer_ = NULL;
}
const ::mtproto::InputPeer& TL_messages_getDialogs::offset_peer() const {
  const ::mtproto::InputPeer* p = offset_peer_;
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_getDialogs.offset_peer)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::InputPeer*>(
      &::mtproto::_InputPeer_default_instance_);
}
::mtproto::InputPeer* TL_messages_getDialogs::mutable_offset_peer() {
  
  if (offset_peer_ == NULL) {
    offset_peer_ = new ::mtproto::InputPeer;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_messages_getDialogs.offset_peer)
  return offset_peer_;
}
::mtproto::InputPeer* TL_messages_getDialogs::release_offset_peer() {
  // @@protoc_insertion_point(field_release:mtproto.TL_messages_getDialogs.offset_peer)
  
  ::mtproto::InputPeer* temp = offset_peer_;
  offset_peer_ = NULL;
  return temp;
}
void TL_messages_getDialogs::set_allocated_offset_peer(::mtproto::InputPeer* offset_peer) {
  delete offset_peer_;
  offset_peer_ = offset_peer;
  if (offset_peer) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_messages_getDialogs.offset_peer)
}

// int32 limit = 6;
void TL_messages_getDialogs::clear_limit() {
  limit_ = 0;
}
::google::protobuf::int32 TL_messages_getDialogs::limit() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_getDialogs.limit)
  return limit_;
}
void TL_messages_getDialogs::set_limit(::google::protobuf::int32 value) {
  
  limit_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_getDialogs.limit)
}

// int32 hash = 7;
void TL_messages_getDialogs::clear_hash() {
  hash_ = 0;
}
::google::protobuf::int32 TL_messages_getDialogs::hash() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_getDialogs.hash)
  return hash_;
}
void TL_messages_getDialogs::set_hash(::google::protobuf::int32 value) {
  
  hash_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_getDialogs.hash)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TL_messages_getHistory::kPeerFieldNumber;
const int TL_messages_getHistory::kOffsetIdFieldNumber;
const int TL_messages_getHistory::kOffsetDateFieldNumber;
const int TL_messages_getHistory::kAddOffsetFieldNumber;
const int TL_messages_getHistory::kLimitFieldNumber;
const int TL_messages_getHistory::kMaxIdFieldNumber;
const int TL_messages_getHistory::kMinIdFieldNumber;
const int TL_messages_getHistory::kHashFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TL_messages_getHistory::TL_messages_getHistory()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.TL_messages_getHistory)
}
TL_messages_getHistory::TL_messages_getHistory(const TL_messages_getHistory& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_peer()) {
    peer_ = new ::mtproto::InputPeer(*from.peer_);
  } else {
    peer_ = NULL;
  }
  ::memcpy(&offset_id_, &from.offset_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&hash_) -
    reinterpret_cast<char*>(&offset_id_)) + sizeof(hash_));
  // @@protoc_insertion_point(copy_constructor:mtproto.TL_messages_getHistory)
}

void TL_messages_getHistory::SharedCtor() {
  ::memset(&peer_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&hash_) -
      reinterpret_cast<char*>(&peer_)) + sizeof(hash_));
  _cached_size_ = 0;
}

TL_messages_getHistory::~TL_messages_getHistory() {
  // @@protoc_insertion_point(destructor:mtproto.TL_messages_getHistory)
  SharedDtor();
}

void TL_messages_getHistory::SharedDtor() {
  if (this != internal_default_instance()) delete peer_;
}

void TL_messages_getHistory::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TL_messages_getHistory::descriptor() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TL_messages_getHistory& TL_messages_getHistory::default_instance() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  return *internal_default_instance();
}

TL_messages_getHistory* TL_messages_getHistory::New(::google::protobuf::Arena* arena) const {
  TL_messages_getHistory* n = new TL_messages_getHistory;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TL_messages_getHistory::Swap(TL_messages_getHistory* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TL_messages_getHistory::InternalSwap(TL_messages_getHistory* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata TL_messages_getHistory::GetMetadata() const {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TL_messages_getHistory

// .mtproto.InputPeer peer = 1;
bool TL_messages_getHistory::has_peer() const {
  return this != internal_default_instance() && peer_ != NULL;
}
void TL_messages_getHistory::clear_peer() {
  if (GetArenaNoVirtual() == NULL && peer_ != NULL) delete peer_;
  peer_ = NULL;
}
const ::mtproto::InputPeer& TL_messages_getHistory::peer() const {
  const ::mtproto::InputPeer* p = peer_;
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_getHistory.peer)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::InputPeer*>(
      &::mtproto::_InputPeer_default_instance_);
}
::mtproto::InputPeer* TL_messages_getHistory::mutable_peer() {
  
  if (peer_ == NULL) {
    peer_ = new ::mtproto::InputPeer;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_messages_getHistory.peer)
  return peer_;
}
::mtproto::InputPeer* TL_messages_getHistory::release_peer() {
  // @@protoc_insertion_point(field_release:mtproto.TL_messages_getHistory.peer)
  
  ::mtproto::InputPeer* temp = peer_;
  peer_ = NULL;
  return temp;
}
void TL_messages_getHistory::set_allocated_peer(::mtproto::InputPeer* peer) {
  delete peer_;
  peer_ = peer;
  if (peer) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_messages_getHistory.peer)
}

// int32 offset_id = 2;
void TL_messages_getHistory::clear_offset_id() {
  offset_id_ = 0;
}
::google::protobuf::int32 TL_messages_getHistory::offset_id() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_getHistory.offset_id)
  return offset_id_;
}
void TL_messages_getHistory::set_offset_id(::google::protobuf::int32 value) {
  
  offset_id_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_getHistory.offset_id)
}

// int32 offset_date = 3;
void TL_messages_getHistory::clear_offset_date() {
  offset_date_ = 0;
}
::google::protobuf::int32 TL_messages_getHistory::offset_date() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_getHistory.offset_date)
  return offset_date_;
}
void TL_messages_getHistory::set_offset_date(::google::protobuf::int32 value) {
  
  offset_date_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_getHistory.offset_date)
}

// int32 add_offset = 4;
void TL_messages_getHistory::clear_add_offset() {
  add_offset_ = 0;
}
::google::protobuf::int32 TL_messages_getHistory::add_offset() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_getHistory.add_offset)
  return add_offset_;
}
void TL_messages_getHistory::set_add_offset(::google::protobuf::int32 value) {
  
  add_offset_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_getHistory.add_offset)
}

// int32 limit = 5;
void TL_messages_getHistory::clear_limit() {
  limit_ = 0;
}
::google::protobuf::int32 TL_messages_getHistory::limit() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_getHistory.limit)
  return limit_;
}
void TL_messages_getHistory::set_limit(::google::protobuf::int32 value) {
  
  limit_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_getHistory.limit)
}

// int32 max_id = 6;
void TL_messages_getHistory::clear_max_id() {
  max_id_ = 0;
}
::google::protobuf::int32 TL_messages_getHistory::max_id() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_getHistory.max_id)
  return max_id_;
}
void TL_messages_getHistory::set_max_id(::google::protobuf::int32 value) {
  
  max_id_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_getHistory.max_id)
}

// int32 min_id = 7;
void TL_messages_getHistory::clear_min_id() {
  min_id_ = 0;
}
::google::protobuf::int32 TL_messages_getHistory::min_id() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_getHistory.min_id)
  return min_id_;
}
void TL_messages_getHistory::set_min_id(::google::protobuf::int32 value) {
  
  min_id_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_getHistory.min_id)
}

// int32 hash = 8;
void TL_messages_getHistory::clear_hash() {
  hash_ = 0;
}
::google::protobuf::int32 TL_messages_getHistory::hash() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_getHistory.hash)
  return hash_;
}
void TL_messages_getHistory::set_hash(::google::protobuf::int32 value) {
  
  hash_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_getHistory.hash)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TL_messages_search::kPeerFieldNumber;
const int TL_messages_search::kQFieldNumber;
const int TL_messages_search::kFromIdFieldNumber;
const int TL_messages_search::kFilterFieldNumber;
const int TL_messages_search::kMinDateFieldNumber;
const int TL_messages_search::kMaxDateFieldNumber;
const int TL_messages_search::kOffsetIdFieldNumber;
const int TL_messages_search::kAddOffsetFieldNumber;
const int TL_messages_search::kLimitFieldNumber;
const int TL_messages_search::kMaxIdFieldNumber;
const int TL_messages_search::kMinIdFieldNumber;
const int TL_messages_search::kHashFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TL_messages_search::TL_messages_search()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.TL_messages_search)
}
TL_messages_search::TL_messages_search(const TL_messages_search& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  q_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.q().size() > 0) {
    q_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.q_);
  }
  if (from.has_peer()) {
    peer_ = new ::mtproto::InputPeer(*from.peer_);
  } else {
    peer_ = NULL;
  }
  if (from.has_from_id()) {
    from_id_ = new ::mtproto::InputUser(*from.from_id_);
  } else {
    from_id_ = NULL;
  }
  if (from.has_filter()) {
    filter_ = new ::mtproto::MessagesFilter(*from.filter_);
  } else {
    filter_ = NULL;
  }
  ::memcpy(&min_date_, &from.min_date_,
    static_cast<size_t>(reinterpret_cast<char*>(&hash_) -
    reinterpret_cast<char*>(&min_date_)) + sizeof(hash_));
  // @@protoc_insertion_point(copy_constructor:mtproto.TL_messages_search)
}

void TL_messages_search::SharedCtor() {
  q_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&peer_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&hash_) -
      reinterpret_cast<char*>(&peer_)) + sizeof(hash_));
  _cached_size_ = 0;
}

TL_messages_search::~TL_messages_search() {
  // @@protoc_insertion_point(destructor:mtproto.TL_messages_search)
  SharedDtor();
}

void TL_messages_search::SharedDtor() {
  q_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete peer_;
  if (this != internal_default_instance()) delete from_id_;
  if (this != internal_default_instance()) delete filter_;
}

void TL_messages_search::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TL_messages_search::descriptor() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TL_messages_search& TL_messages_search::default_instance() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  return *internal_default_instance();
}

TL_messages_search* TL_messages_search::New(::google::protobuf::Arena* arena) const {
  TL_messages_search* n = new TL_messages_search;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TL_messages_search::Swap(TL_messages_search* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TL_messages_search::InternalSwap(TL_messages_search* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata TL_messages_search::GetMetadata() const {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TL_messages_search

// .mtproto.InputPeer peer = 2;
bool TL_messages_search::has_peer() const {
  return this != internal_default_instance() && peer_ != NULL;
}
void TL_messages_search::clear_peer() {
  if (GetArenaNoVirtual() == NULL && peer_ != NULL) delete peer_;
  peer_ = NULL;
}
const ::mtproto::InputPeer& TL_messages_search::peer() const {
  const ::mtproto::InputPeer* p = peer_;
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_search.peer)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::InputPeer*>(
      &::mtproto::_InputPeer_default_instance_);
}
::mtproto::InputPeer* TL_messages_search::mutable_peer() {
  
  if (peer_ == NULL) {
    peer_ = new ::mtproto::InputPeer;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_messages_search.peer)
  return peer_;
}
::mtproto::InputPeer* TL_messages_search::release_peer() {
  // @@protoc_insertion_point(field_release:mtproto.TL_messages_search.peer)
  
  ::mtproto::InputPeer* temp = peer_;
  peer_ = NULL;
  return temp;
}
void TL_messages_search::set_allocated_peer(::mtproto::InputPeer* peer) {
  delete peer_;
  peer_ = peer;
  if (peer) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_messages_search.peer)
}

// string q = 3;
void TL_messages_search::clear_q() {
  q_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& TL_messages_search::q() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_search.q)
  return q_.GetNoArena();
}
void TL_messages_search::set_q(const ::std::string& value) {
  
  q_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_search.q)
}
#if LANG_CXX11
void TL_messages_search::set_q(::std::string&& value) {
  
  q_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mtproto.TL_messages_search.q)
}
#endif
void TL_messages_search::set_q(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  q_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtproto.TL_messages_search.q)
}
void TL_messages_search::set_q(const char* value, size_t size) {
  
  q_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtproto.TL_messages_search.q)
}
::std::string* TL_messages_search::mutable_q() {
  
  // @@protoc_insertion_point(field_mutable:mtproto.TL_messages_search.q)
  return q_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* TL_messages_search::release_q() {
  // @@protoc_insertion_point(field_release:mtproto.TL_messages_search.q)
  
  return q_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TL_messages_search::set_allocated_q(::std::string* q) {
  if (q != NULL) {
    
  } else {
    
  }
  q_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), q);
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_messages_search.q)
}

// .mtproto.InputUser from_id = 4;
bool TL_messages_search::has_from_id() const {
  return this != internal_default_instance() && from_id_ != NULL;
}
void TL_messages_search::clear_from_id() {
  if (GetArenaNoVirtual() == NULL && from_id_ != NULL) delete from_id_;
  from_id_ = NULL;
}
const ::mtproto::InputUser& TL_messages_search::from_id() const {
  const ::mtproto::InputUser* p = from_id_;
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_search.from_id)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::InputUser*>(
      &::mtproto::_InputUser_default_instance_);
}
::mtproto::InputUser* TL_messages_search::mutable_from_id() {
  
  if (from_id_ == NULL) {
    from_id_ = new ::mtproto::InputUser;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_messages_search.from_id)
  return from_id_;
}
::mtproto::InputUser* TL_messages_search::release_from_id() {
  // @@protoc_insertion_point(field_release:mtproto.TL_messages_search.from_id)
  
  ::mtproto::InputUser* temp = from_id_;
  from_id_ = NULL;
  return temp;
}
void TL_messages_search::set_allocated_from_id(::mtproto::InputUser* from_id) {
  delete from_id_;
  from_id_ = from_id;
  if (from_id) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_messages_search.from_id)
}

// .mtproto.MessagesFilter filter = 5;
bool TL_messages_search::has_filter() const {
  return this != internal_default_instance() && filter_ != NULL;
}
void TL_messages_search::clear_filter() {
  if (GetArenaNoVirtual() == NULL && filter_ != NULL) delete filter_;
  filter_ = NULL;
}
const ::mtproto::MessagesFilter& TL_messages_search::filter() const {
  const ::mtproto::MessagesFilter* p = filter_;
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_search.filter)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::MessagesFilter*>(
      &::mtproto::_MessagesFilter_default_instance_);
}
::mtproto::MessagesFilter* TL_messages_search::mutable_filter() {
  
  if (filter_ == NULL) {
    filter_ = new ::mtproto::MessagesFilter;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_messages_search.filter)
  return filter_;
}
::mtproto::MessagesFilter* TL_messages_search::release_filter() {
  // @@protoc_insertion_point(field_release:mtproto.TL_messages_search.filter)
  
  ::mtproto::MessagesFilter* temp = filter_;
  filter_ = NULL;
  return temp;
}
void TL_messages_search::set_allocated_filter(::mtproto::MessagesFilter* filter) {
  delete filter_;
  filter_ = filter;
  if (filter) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_messages_search.filter)
}

// int32 min_date = 6;
void TL_messages_search::clear_min_date() {
  min_date_ = 0;
}
::google::protobuf::int32 TL_messages_search::min_date() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_search.min_date)
  return min_date_;
}
void TL_messages_search::set_min_date(::google::protobuf::int32 value) {
  
  min_date_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_search.min_date)
}

// int32 max_date = 7;
void TL_messages_search::clear_max_date() {
  max_date_ = 0;
}
::google::protobuf::int32 TL_messages_search::max_date() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_search.max_date)
  return max_date_;
}
void TL_messages_search::set_max_date(::google::protobuf::int32 value) {
  
  max_date_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_search.max_date)
}

// int32 offset_id = 8;
void TL_messages_search::clear_offset_id() {
  offset_id_ = 0;
}
::google::protobuf::int32 TL_messages_search::offset_id() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_search.offset_id)
  return offset_id_;
}
void TL_messages_search::set_offset_id(::google::protobuf::int32 value) {
  
  offset_id_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_search.offset_id)
}

// int32 add_offset = 9;
void TL_messages_search::clear_add_offset() {
  add_offset_ = 0;
}
::google::protobuf::int32 TL_messages_search::add_offset() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_search.add_offset)
  return add_offset_;
}
void TL_messages_search::set_add_offset(::google::protobuf::int32 value) {
  
  add_offset_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_search.add_offset)
}

// int32 limit = 10;
void TL_messages_search::clear_limit() {
  limit_ = 0;
}
::google::protobuf::int32 TL_messages_search::limit() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_search.limit)
  return limit_;
}
void TL_messages_search::set_limit(::google::protobuf::int32 value) {
  
  limit_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_search.limit)
}

// int32 max_id = 11;
void TL_messages_search::clear_max_id() {
  max_id_ = 0;
}
::google::protobuf::int32 TL_messages_search::max_id() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_search.max_id)
  return max_id_;
}
void TL_messages_search::set_max_id(::google::protobuf::int32 value) {
  
  max_id_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_search.max_id)
}

// int32 min_id = 12;
void TL_messages_search::clear_min_id() {
  min_id_ = 0;
}
::google::protobuf::int32 TL_messages_search::min_id() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_search.min_id)
  return min_id_;
}
void TL_messages_search::set_min_id(::google::protobuf::int32 value) {
  
  min_id_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_search.min_id)
}

// int32 hash = 13;
void TL_messages_search::clear_hash() {
  hash_ = 0;
}
::google::protobuf::int32 TL_messages_search::hash() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_search.hash)
  return hash_;
}
void TL_messages_search::set_hash(::google::protobuf::int32 value) {
  
  hash_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_search.hash)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TL_messages_readHistory::kPeerFieldNumber;
const int TL_messages_readHistory::kMaxIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TL_messages_readHistory::TL_messages_readHistory()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.TL_messages_readHistory)
}
TL_messages_readHistory::TL_messages_readHistory(const TL_messages_readHistory& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_peer()) {
    peer_ = new ::mtproto::InputPeer(*from.peer_);
  } else {
    peer_ = NULL;
  }
  max_id_ = from.max_id_;
  // @@protoc_insertion_point(copy_constructor:mtproto.TL_messages_readHistory)
}

void TL_messages_readHistory::SharedCtor() {
  ::memset(&peer_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&max_id_) -
      reinterpret_cast<char*>(&peer_)) + sizeof(max_id_));
  _cached_size_ = 0;
}

TL_messages_readHistory::~TL_messages_readHistory() {
  // @@protoc_insertion_point(destructor:mtproto.TL_messages_readHistory)
  SharedDtor();
}

void TL_messages_readHistory::SharedDtor() {
  if (this != internal_default_instance()) delete peer_;
}

void TL_messages_readHistory::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TL_messages_readHistory::descriptor() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TL_messages_readHistory& TL_messages_readHistory::default_instance() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  return *internal_default_instance();
}

TL_messages_readHistory* TL_messages_readHistory::New(::google::protobuf::Arena* arena) const {
  TL_messages_readHistory* n = new TL_messages_readHistory;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TL_messages_readHistory::Swap(TL_messages_readHistory* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TL_messages_readHistory::InternalSwap(TL_messages_readHistory* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata TL_messages_readHistory::GetMetadata() const {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TL_messages_readHistory

// .mtproto.InputPeer peer = 1;
bool TL_messages_readHistory::has_peer() const {
  return this != internal_default_instance() && peer_ != NULL;
}
void TL_messages_readHistory::clear_peer() {
  if (GetArenaNoVirtual() == NULL && peer_ != NULL) delete peer_;
  peer_ = NULL;
}
const ::mtproto::InputPeer& TL_messages_readHistory::peer() const {
  const ::mtproto::InputPeer* p = peer_;
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_readHistory.peer)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::InputPeer*>(
      &::mtproto::_InputPeer_default_instance_);
}
::mtproto::InputPeer* TL_messages_readHistory::mutable_peer() {
  
  if (peer_ == NULL) {
    peer_ = new ::mtproto::InputPeer;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_messages_readHistory.peer)
  return peer_;
}
::mtproto::InputPeer* TL_messages_readHistory::release_peer() {
  // @@protoc_insertion_point(field_release:mtproto.TL_messages_readHistory.peer)
  
  ::mtproto::InputPeer* temp = peer_;
  peer_ = NULL;
  return temp;
}
void TL_messages_readHistory::set_allocated_peer(::mtproto::InputPeer* peer) {
  delete peer_;
  peer_ = peer;
  if (peer) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_messages_readHistory.peer)
}

// int32 max_id = 2;
void TL_messages_readHistory::clear_max_id() {
  max_id_ = 0;
}
::google::protobuf::int32 TL_messages_readHistory::max_id() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_readHistory.max_id)
  return max_id_;
}
void TL_messages_readHistory::set_max_id(::google::protobuf::int32 value) {
  
  max_id_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_readHistory.max_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TL_messages_deleteHistory::kJustClearFieldNumber;
const int TL_messages_deleteHistory::kPeerFieldNumber;
const int TL_messages_deleteHistory::kMaxIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TL_messages_deleteHistory::TL_messages_deleteHistory()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.TL_messages_deleteHistory)
}
TL_messages_deleteHistory::TL_messages_deleteHistory(const TL_messages_deleteHistory& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_peer()) {
    peer_ = new ::mtproto::InputPeer(*from.peer_);
  } else {
    peer_ = NULL;
  }
  ::memcpy(&just_clear_, &from.just_clear_,
    static_cast<size_t>(reinterpret_cast<char*>(&max_id_) -
    reinterpret_cast<char*>(&just_clear_)) + sizeof(max_id_));
  // @@protoc_insertion_point(copy_constructor:mtproto.TL_messages_deleteHistory)
}

void TL_messages_deleteHistory::SharedCtor() {
  ::memset(&peer_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&max_id_) -
      reinterpret_cast<char*>(&peer_)) + sizeof(max_id_));
  _cached_size_ = 0;
}

TL_messages_deleteHistory::~TL_messages_deleteHistory() {
  // @@protoc_insertion_point(destructor:mtproto.TL_messages_deleteHistory)
  SharedDtor();
}

void TL_messages_deleteHistory::SharedDtor() {
  if (this != internal_default_instance()) delete peer_;
}

void TL_messages_deleteHistory::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TL_messages_deleteHistory::descriptor() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TL_messages_deleteHistory& TL_messages_deleteHistory::default_instance() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  return *internal_default_instance();
}

TL_messages_deleteHistory* TL_messages_deleteHistory::New(::google::protobuf::Arena* arena) const {
  TL_messages_deleteHistory* n = new TL_messages_deleteHistory;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TL_messages_deleteHistory::Swap(TL_messages_deleteHistory* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TL_messages_deleteHistory::InternalSwap(TL_messages_deleteHistory* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata TL_messages_deleteHistory::GetMetadata() const {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TL_messages_deleteHistory

// bool just_clear = 2;
void TL_messages_deleteHistory::clear_just_clear() {
  just_clear_ = false;
}
bool TL_messages_deleteHistory::just_clear() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_deleteHistory.just_clear)
  return just_clear_;
}
void TL_messages_deleteHistory::set_just_clear(bool value) {
  
  just_clear_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_deleteHistory.just_clear)
}

// .mtproto.InputPeer peer = 3;
bool TL_messages_deleteHistory::has_peer() const {
  return this != internal_default_instance() && peer_ != NULL;
}
void TL_messages_deleteHistory::clear_peer() {
  if (GetArenaNoVirtual() == NULL && peer_ != NULL) delete peer_;
  peer_ = NULL;
}
const ::mtproto::InputPeer& TL_messages_deleteHistory::peer() const {
  const ::mtproto::InputPeer* p = peer_;
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_deleteHistory.peer)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::InputPeer*>(
      &::mtproto::_InputPeer_default_instance_);
}
::mtproto::InputPeer* TL_messages_deleteHistory::mutable_peer() {
  
  if (peer_ == NULL) {
    peer_ = new ::mtproto::InputPeer;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_messages_deleteHistory.peer)
  return peer_;
}
::mtproto::InputPeer* TL_messages_deleteHistory::release_peer() {
  // @@protoc_insertion_point(field_release:mtproto.TL_messages_deleteHistory.peer)
  
  ::mtproto::InputPeer* temp = peer_;
  peer_ = NULL;
  return temp;
}
void TL_messages_deleteHistory::set_allocated_peer(::mtproto::InputPeer* peer) {
  delete peer_;
  peer_ = peer;
  if (peer) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_messages_deleteHistory.peer)
}

// int32 max_id = 4;
void TL_messages_deleteHistory::clear_max_id() {
  max_id_ = 0;
}
::google::protobuf::int32 TL_messages_deleteHistory::max_id() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_deleteHistory.max_id)
  return max_id_;
}
void TL_messages_deleteHistory::set_max_id(::google::protobuf::int32 value) {
  
  max_id_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_deleteHistory.max_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TL_messages_deleteMessages::kRevokeFieldNumber;
const int TL_messages_deleteMessages::kIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TL_messages_deleteMessages::TL_messages_deleteMessages()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.TL_messages_deleteMessages)
}
TL_messages_deleteMessages::TL_messages_deleteMessages(const TL_messages_deleteMessages& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      id_(from.id_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  revoke_ = from.revoke_;
  // @@protoc_insertion_point(copy_constructor:mtproto.TL_messages_deleteMessages)
}

void TL_messages_deleteMessages::SharedCtor() {
  revoke_ = false;
  _cached_size_ = 0;
}

TL_messages_deleteMessages::~TL_messages_deleteMessages() {
  // @@protoc_insertion_point(destructor:mtproto.TL_messages_deleteMessages)
  SharedDtor();
}

void TL_messages_deleteMessages::SharedDtor() {
}

void TL_messages_deleteMessages::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TL_messages_deleteMessages::descriptor() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TL_messages_deleteMessages& TL_messages_deleteMessages::default_instance() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  return *internal_default_instance();
}

TL_messages_deleteMessages* TL_messages_deleteMessages::New(::google::protobuf::Arena* arena) const {
  TL_messages_deleteMessages* n = new TL_messages_deleteMessages;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TL_messages_deleteMessages::Swap(TL_messages_deleteMessages* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TL_messages_deleteMessages::InternalSwap(TL_messages_deleteMessages* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata TL_messages_deleteMessages::GetMetadata() const {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TL_messages_deleteMessages

// bool revoke = 2;
void TL_messages_deleteMessages::clear_revoke() {
  revoke_ = false;
}
bool TL_messages_deleteMessages::revoke() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_deleteMessages.revoke)
  return revoke_;
}
void TL_messages_deleteMessages::set_revoke(bool value) {
  
  revoke_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_deleteMessages.revoke)
}

// repeated int32 id = 3;
int TL_messages_deleteMessages::id_size() const {
  return id_.size();
}
void TL_messages_deleteMessages::clear_id() {
  id_.Clear();
}
::google::protobuf::int32 TL_messages_deleteMessages::id(int index) const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_deleteMessages.id)
  return id_.Get(index);
}
void TL_messages_deleteMessages::set_id(int index, ::google::protobuf::int32 value) {
  id_.Set(index, value);
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_deleteMessages.id)
}
void TL_messages_deleteMessages::add_id(::google::protobuf::int32 value) {
  id_.Add(value);
  // @@protoc_insertion_point(field_add:mtproto.TL_messages_deleteMessages.id)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
TL_messages_deleteMessages::id() const {
  // @@protoc_insertion_point(field_list:mtproto.TL_messages_deleteMessages.id)
  return id_;
}
::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
TL_messages_deleteMessages::mutable_id() {
  // @@protoc_insertion_point(field_mutable_list:mtproto.TL_messages_deleteMessages.id)
  return &id_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TL_messages_receivedMessages::kMaxIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TL_messages_receivedMessages::TL_messages_receivedMessages()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.TL_messages_receivedMessages)
}
TL_messages_receivedMessages::TL_messages_receivedMessages(const TL_messages_receivedMessages& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  max_id_ = from.max_id_;
  // @@protoc_insertion_point(copy_constructor:mtproto.TL_messages_receivedMessages)
}

void TL_messages_receivedMessages::SharedCtor() {
  max_id_ = 0;
  _cached_size_ = 0;
}

TL_messages_receivedMessages::~TL_messages_receivedMessages() {
  // @@protoc_insertion_point(destructor:mtproto.TL_messages_receivedMessages)
  SharedDtor();
}

void TL_messages_receivedMessages::SharedDtor() {
}

void TL_messages_receivedMessages::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TL_messages_receivedMessages::descriptor() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TL_messages_receivedMessages& TL_messages_receivedMessages::default_instance() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  return *internal_default_instance();
}

TL_messages_receivedMessages* TL_messages_receivedMessages::New(::google::protobuf::Arena* arena) const {
  TL_messages_receivedMessages* n = new TL_messages_receivedMessages;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TL_messages_receivedMessages::Swap(TL_messages_receivedMessages* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TL_messages_receivedMessages::InternalSwap(TL_messages_receivedMessages* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata TL_messages_receivedMessages::GetMetadata() const {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TL_messages_receivedMessages

// int32 max_id = 1;
void TL_messages_receivedMessages::clear_max_id() {
  max_id_ = 0;
}
::google::protobuf::int32 TL_messages_receivedMessages::max_id() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_receivedMessages.max_id)
  return max_id_;
}
void TL_messages_receivedMessages::set_max_id(::google::protobuf::int32 value) {
  
  max_id_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_receivedMessages.max_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TL_messages_setTyping::kPeerFieldNumber;
const int TL_messages_setTyping::kActionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TL_messages_setTyping::TL_messages_setTyping()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.TL_messages_setTyping)
}
TL_messages_setTyping::TL_messages_setTyping(const TL_messages_setTyping& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_peer()) {
    peer_ = new ::mtproto::InputPeer(*from.peer_);
  } else {
    peer_ = NULL;
  }
  if (from.has_action()) {
    action_ = new ::mtproto::SendMessageAction(*from.action_);
  } else {
    action_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:mtproto.TL_messages_setTyping)
}

void TL_messages_setTyping::SharedCtor() {
  ::memset(&peer_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&action_) -
      reinterpret_cast<char*>(&peer_)) + sizeof(action_));
  _cached_size_ = 0;
}

TL_messages_setTyping::~TL_messages_setTyping() {
  // @@protoc_insertion_point(destructor:mtproto.TL_messages_setTyping)
  SharedDtor();
}

void TL_messages_setTyping::SharedDtor() {
  if (this != internal_default_instance()) delete peer_;
  if (this != internal_default_instance()) delete action_;
}

void TL_messages_setTyping::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TL_messages_setTyping::descriptor() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TL_messages_setTyping& TL_messages_setTyping::default_instance() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  return *internal_default_instance();
}

TL_messages_setTyping* TL_messages_setTyping::New(::google::protobuf::Arena* arena) const {
  TL_messages_setTyping* n = new TL_messages_setTyping;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TL_messages_setTyping::Swap(TL_messages_setTyping* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TL_messages_setTyping::InternalSwap(TL_messages_setTyping* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata TL_messages_setTyping::GetMetadata() const {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TL_messages_setTyping

// .mtproto.InputPeer peer = 1;
bool TL_messages_setTyping::has_peer() const {
  return this != internal_default_instance() && peer_ != NULL;
}
void TL_messages_setTyping::clear_peer() {
  if (GetArenaNoVirtual() == NULL && peer_ != NULL) delete peer_;
  peer_ = NULL;
}
const ::mtproto::InputPeer& TL_messages_setTyping::peer() const {
  const ::mtproto::InputPeer* p = peer_;
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_setTyping.peer)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::InputPeer*>(
      &::mtproto::_InputPeer_default_instance_);
}
::mtproto::InputPeer* TL_messages_setTyping::mutable_peer() {
  
  if (peer_ == NULL) {
    peer_ = new ::mtproto::InputPeer;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_messages_setTyping.peer)
  return peer_;
}
::mtproto::InputPeer* TL_messages_setTyping::release_peer() {
  // @@protoc_insertion_point(field_release:mtproto.TL_messages_setTyping.peer)
  
  ::mtproto::InputPeer* temp = peer_;
  peer_ = NULL;
  return temp;
}
void TL_messages_setTyping::set_allocated_peer(::mtproto::InputPeer* peer) {
  delete peer_;
  peer_ = peer;
  if (peer) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_messages_setTyping.peer)
}

// .mtproto.SendMessageAction action = 2;
bool TL_messages_setTyping::has_action() const {
  return this != internal_default_instance() && action_ != NULL;
}
void TL_messages_setTyping::clear_action() {
  if (GetArenaNoVirtual() == NULL && action_ != NULL) delete action_;
  action_ = NULL;
}
const ::mtproto::SendMessageAction& TL_messages_setTyping::action() const {
  const ::mtproto::SendMessageAction* p = action_;
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_setTyping.action)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::SendMessageAction*>(
      &::mtproto::_SendMessageAction_default_instance_);
}
::mtproto::SendMessageAction* TL_messages_setTyping::mutable_action() {
  
  if (action_ == NULL) {
    action_ = new ::mtproto::SendMessageAction;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_messages_setTyping.action)
  return action_;
}
::mtproto::SendMessageAction* TL_messages_setTyping::release_action() {
  // @@protoc_insertion_point(field_release:mtproto.TL_messages_setTyping.action)
  
  ::mtproto::SendMessageAction* temp = action_;
  action_ = NULL;
  return temp;
}
void TL_messages_setTyping::set_allocated_action(::mtproto::SendMessageAction* action) {
  delete action_;
  action_ = action;
  if (action) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_messages_setTyping.action)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TL_messages_sendMessage::kNoWebpageFieldNumber;
const int TL_messages_sendMessage::kSilentFieldNumber;
const int TL_messages_sendMessage::kBackgroundFieldNumber;
const int TL_messages_sendMessage::kClearDraftFieldNumber;
const int TL_messages_sendMessage::kPeerFieldNumber;
const int TL_messages_sendMessage::kReplyToMsgIdFieldNumber;
const int TL_messages_sendMessage::kMessageFieldNumber;
const int TL_messages_sendMessage::kRandomIdFieldNumber;
const int TL_messages_sendMessage::kReplyMarkupFieldNumber;
const int TL_messages_sendMessage::kEntitiesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TL_messages_sendMessage::TL_messages_sendMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.TL_messages_sendMessage)
}
TL_messages_sendMessage::TL_messages_sendMessage(const TL_messages_sendMessage& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      entities_(from.entities_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.message().size() > 0) {
    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
  if (from.has_peer()) {
    peer_ = new ::mtproto::InputPeer(*from.peer_);
  } else {
    peer_ = NULL;
  }
  if (from.has_reply_markup()) {
    reply_markup_ = new ::mtproto::ReplyMarkup(*from.reply_markup_);
  } else {
    reply_markup_ = NULL;
  }
  ::memcpy(&no_webpage_, &from.no_webpage_,
    static_cast<size_t>(reinterpret_cast<char*>(&random_id_) -
    reinterpret_cast<char*>(&no_webpage_)) + sizeof(random_id_));
  // @@protoc_insertion_point(copy_constructor:mtproto.TL_messages_sendMessage)
}

void TL_messages_sendMessage::SharedCtor() {
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&peer_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&random_id_) -
      reinterpret_cast<char*>(&peer_)) + sizeof(random_id_));
  _cached_size_ = 0;
}

TL_messages_sendMessage::~TL_messages_sendMessage() {
  // @@protoc_insertion_point(destructor:mtproto.TL_messages_sendMessage)
  SharedDtor();
}

void TL_messages_sendMessage::SharedDtor() {
  message_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete peer_;
  if (this != internal_default_instance()) delete reply_markup_;
}

void TL_messages_sendMessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TL_messages_sendMessage::descriptor() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TL_messages_sendMessage& TL_messages_sendMessage::default_instance() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  return *internal_default_instance();
}

TL_messages_sendMessage* TL_messages_sendMessage::New(::google::protobuf::Arena* arena) const {
  TL_messages_sendMessage* n = new TL_messages_sendMessage;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TL_messages_sendMessage::Swap(TL_messages_sendMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TL_messages_sendMessage::InternalSwap(TL_messages_sendMessage* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata TL_messages_sendMessage::GetMetadata() const {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TL_messages_sendMessage

// bool no_webpage = 2;
void TL_messages_sendMessage::clear_no_webpage() {
  no_webpage_ = false;
}
bool TL_messages_sendMessage::no_webpage() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_sendMessage.no_webpage)
  return no_webpage_;
}
void TL_messages_sendMessage::set_no_webpage(bool value) {
  
  no_webpage_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_sendMessage.no_webpage)
}

// bool silent = 3;
void TL_messages_sendMessage::clear_silent() {
  silent_ = false;
}
bool TL_messages_sendMessage::silent() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_sendMessage.silent)
  return silent_;
}
void TL_messages_sendMessage::set_silent(bool value) {
  
  silent_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_sendMessage.silent)
}

// bool background = 4;
void TL_messages_sendMessage::clear_background() {
  background_ = false;
}
bool TL_messages_sendMessage::background() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_sendMessage.background)
  return background_;
}
void TL_messages_sendMessage::set_background(bool value) {
  
  background_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_sendMessage.background)
}

// bool clear_draft = 5;
void TL_messages_sendMessage::clear_clear_draft() {
  clear_draft_ = false;
}
bool TL_messages_sendMessage::clear_draft() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_sendMessage.clear_draft)
  return clear_draft_;
}
void TL_messages_sendMessage::set_clear_draft(bool value) {
  
  clear_draft_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_sendMessage.clear_draft)
}

// .mtproto.InputPeer peer = 6;
bool TL_messages_sendMessage::has_peer() const {
  return this != internal_default_instance() && peer_ != NULL;
}
void TL_messages_sendMessage::clear_peer() {
  if (GetArenaNoVirtual() == NULL && peer_ != NULL) delete peer_;
  peer_ = NULL;
}
const ::mtproto::InputPeer& TL_messages_sendMessage::peer() const {
  const ::mtproto::InputPeer* p = peer_;
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_sendMessage.peer)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::InputPeer*>(
      &::mtproto::_InputPeer_default_instance_);
}
::mtproto::InputPeer* TL_messages_sendMessage::mutable_peer() {
  
  if (peer_ == NULL) {
    peer_ = new ::mtproto::InputPeer;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_messages_sendMessage.peer)
  return peer_;
}
::mtproto::InputPeer* TL_messages_sendMessage::release_peer() {
  // @@protoc_insertion_point(field_release:mtproto.TL_messages_sendMessage.peer)
  
  ::mtproto::InputPeer* temp = peer_;
  peer_ = NULL;
  return temp;
}
void TL_messages_sendMessage::set_allocated_peer(::mtproto::InputPeer* peer) {
  delete peer_;
  peer_ = peer;
  if (peer) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_messages_sendMessage.peer)
}

// int32 reply_to_msg_id = 7;
void TL_messages_sendMessage::clear_reply_to_msg_id() {
  reply_to_msg_id_ = 0;
}
::google::protobuf::int32 TL_messages_sendMessage::reply_to_msg_id() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_sendMessage.reply_to_msg_id)
  return reply_to_msg_id_;
}
void TL_messages_sendMessage::set_reply_to_msg_id(::google::protobuf::int32 value) {
  
  reply_to_msg_id_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_sendMessage.reply_to_msg_id)
}

// string message = 8;
void TL_messages_sendMessage::clear_message() {
  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& TL_messages_sendMessage::message() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_sendMessage.message)
  return message_.GetNoArena();
}
void TL_messages_sendMessage::set_message(const ::std::string& value) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_sendMessage.message)
}
#if LANG_CXX11
void TL_messages_sendMessage::set_message(::std::string&& value) {
  
  message_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mtproto.TL_messages_sendMessage.message)
}
#endif
void TL_messages_sendMessage::set_message(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtproto.TL_messages_sendMessage.message)
}
void TL_messages_sendMessage::set_message(const char* value, size_t size) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtproto.TL_messages_sendMessage.message)
}
::std::string* TL_messages_sendMessage::mutable_message() {
  
  // @@protoc_insertion_point(field_mutable:mtproto.TL_messages_sendMessage.message)
  return message_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* TL_messages_sendMessage::release_message() {
  // @@protoc_insertion_point(field_release:mtproto.TL_messages_sendMessage.message)
  
  return message_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TL_messages_sendMessage::set_allocated_message(::std::string* message) {
  if (message != NULL) {
    
  } else {
    
  }
  message_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), message);
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_messages_sendMessage.message)
}

// int64 random_id = 9;
void TL_messages_sendMessage::clear_random_id() {
  random_id_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 TL_messages_sendMessage::random_id() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_sendMessage.random_id)
  return random_id_;
}
void TL_messages_sendMessage::set_random_id(::google::protobuf::int64 value) {
  
  random_id_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_sendMessage.random_id)
}

// .mtproto.ReplyMarkup reply_markup = 10;
bool TL_messages_sendMessage::has_reply_markup() const {
  return this != internal_default_instance() && reply_markup_ != NULL;
}
void TL_messages_sendMessage::clear_reply_markup() {
  if (GetArenaNoVirtual() == NULL && reply_markup_ != NULL) delete reply_markup_;
  reply_markup_ = NULL;
}
const ::mtproto::ReplyMarkup& TL_messages_sendMessage::reply_markup() const {
  const ::mtproto::ReplyMarkup* p = reply_markup_;
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_sendMessage.reply_markup)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::ReplyMarkup*>(
      &::mtproto::_ReplyMarkup_default_instance_);
}
::mtproto::ReplyMarkup* TL_messages_sendMessage::mutable_reply_markup() {
  
  if (reply_markup_ == NULL) {
    reply_markup_ = new ::mtproto::ReplyMarkup;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_messages_sendMessage.reply_markup)
  return reply_markup_;
}
::mtproto::ReplyMarkup* TL_messages_sendMessage::release_reply_markup() {
  // @@protoc_insertion_point(field_release:mtproto.TL_messages_sendMessage.reply_markup)
  
  ::mtproto::ReplyMarkup* temp = reply_markup_;
  reply_markup_ = NULL;
  return temp;
}
void TL_messages_sendMessage::set_allocated_reply_markup(::mtproto::ReplyMarkup* reply_markup) {
  delete reply_markup_;
  reply_markup_ = reply_markup;
  if (reply_markup) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_messages_sendMessage.reply_markup)
}

// repeated .mtproto.MessageEntity entities = 11;
int TL_messages_sendMessage::entities_size() const {
  return entities_.size();
}
void TL_messages_sendMessage::clear_entities() {
  entities_.Clear();
}
const ::mtproto::MessageEntity& TL_messages_sendMessage::entities(int index) const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_sendMessage.entities)
  return entities_.Get(index);
}
::mtproto::MessageEntity* TL_messages_sendMessage::mutable_entities(int index) {
  // @@protoc_insertion_point(field_mutable:mtproto.TL_messages_sendMessage.entities)
  return entities_.Mutable(index);
}
::mtproto::MessageEntity* TL_messages_sendMessage::add_entities() {
  // @@protoc_insertion_point(field_add:mtproto.TL_messages_sendMessage.entities)
  return entities_.Add();
}
::google::protobuf::RepeatedPtrField< ::mtproto::MessageEntity >*
TL_messages_sendMessage::mutable_entities() {
  // @@protoc_insertion_point(field_mutable_list:mtproto.TL_messages_sendMessage.entities)
  return &entities_;
}
const ::google::protobuf::RepeatedPtrField< ::mtproto::MessageEntity >&
TL_messages_sendMessage::entities() const {
  // @@protoc_insertion_point(field_list:mtproto.TL_messages_sendMessage.entities)
  return entities_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TL_messages_sendMedia::kSilentFieldNumber;
const int TL_messages_sendMedia::kBackgroundFieldNumber;
const int TL_messages_sendMedia::kClearDraftFieldNumber;
const int TL_messages_sendMedia::kPeerFieldNumber;
const int TL_messages_sendMedia::kReplyToMsgIdFieldNumber;
const int TL_messages_sendMedia::kMediaFieldNumber;
const int TL_messages_sendMedia::kMessageFieldNumber;
const int TL_messages_sendMedia::kRandomIdFieldNumber;
const int TL_messages_sendMedia::kReplyMarkupFieldNumber;
const int TL_messages_sendMedia::kEntitiesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TL_messages_sendMedia::TL_messages_sendMedia()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.TL_messages_sendMedia)
}
TL_messages_sendMedia::TL_messages_sendMedia(const TL_messages_sendMedia& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      entities_(from.entities_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.message().size() > 0) {
    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
  if (from.has_peer()) {
    peer_ = new ::mtproto::InputPeer(*from.peer_);
  } else {
    peer_ = NULL;
  }
  if (from.has_media()) {
    media_ = new ::mtproto::InputMedia(*from.media_);
  } else {
    media_ = NULL;
  }
  if (from.has_reply_markup()) {
    reply_markup_ = new ::mtproto::ReplyMarkup(*from.reply_markup_);
  } else {
    reply_markup_ = NULL;
  }
  ::memcpy(&silent_, &from.silent_,
    static_cast<size_t>(reinterpret_cast<char*>(&random_id_) -
    reinterpret_cast<char*>(&silent_)) + sizeof(random_id_));
  // @@protoc_insertion_point(copy_constructor:mtproto.TL_messages_sendMedia)
}

void TL_messages_sendMedia::SharedCtor() {
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&peer_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&random_id_) -
      reinterpret_cast<char*>(&peer_)) + sizeof(random_id_));
  _cached_size_ = 0;
}

TL_messages_sendMedia::~TL_messages_sendMedia() {
  // @@protoc_insertion_point(destructor:mtproto.TL_messages_sendMedia)
  SharedDtor();
}

void TL_messages_sendMedia::SharedDtor() {
  message_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete peer_;
  if (this != internal_default_instance()) delete media_;
  if (this != internal_default_instance()) delete reply_markup_;
}

void TL_messages_sendMedia::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TL_messages_sendMedia::descriptor() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TL_messages_sendMedia& TL_messages_sendMedia::default_instance() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  return *internal_default_instance();
}

TL_messages_sendMedia* TL_messages_sendMedia::New(::google::protobuf::Arena* arena) const {
  TL_messages_sendMedia* n = new TL_messages_sendMedia;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TL_messages_sendMedia::Swap(TL_messages_sendMedia* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TL_messages_sendMedia::InternalSwap(TL_messages_sendMedia* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata TL_messages_sendMedia::GetMetadata() const {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TL_messages_sendMedia

// bool silent = 2;
void TL_messages_sendMedia::clear_silent() {
  silent_ = false;
}
bool TL_messages_sendMedia::silent() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_sendMedia.silent)
  return silent_;
}
void TL_messages_sendMedia::set_silent(bool value) {
  
  silent_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_sendMedia.silent)
}

// bool background = 3;
void TL_messages_sendMedia::clear_background() {
  background_ = false;
}
bool TL_messages_sendMedia::background() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_sendMedia.background)
  return background_;
}
void TL_messages_sendMedia::set_background(bool value) {
  
  background_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_sendMedia.background)
}

// bool clear_draft = 4;
void TL_messages_sendMedia::clear_clear_draft() {
  clear_draft_ = false;
}
bool TL_messages_sendMedia::clear_draft() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_sendMedia.clear_draft)
  return clear_draft_;
}
void TL_messages_sendMedia::set_clear_draft(bool value) {
  
  clear_draft_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_sendMedia.clear_draft)
}

// .mtproto.InputPeer peer = 5;
bool TL_messages_sendMedia::has_peer() const {
  return this != internal_default_instance() && peer_ != NULL;
}
void TL_messages_sendMedia::clear_peer() {
  if (GetArenaNoVirtual() == NULL && peer_ != NULL) delete peer_;
  peer_ = NULL;
}
const ::mtproto::InputPeer& TL_messages_sendMedia::peer() const {
  const ::mtproto::InputPeer* p = peer_;
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_sendMedia.peer)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::InputPeer*>(
      &::mtproto::_InputPeer_default_instance_);
}
::mtproto::InputPeer* TL_messages_sendMedia::mutable_peer() {
  
  if (peer_ == NULL) {
    peer_ = new ::mtproto::InputPeer;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_messages_sendMedia.peer)
  return peer_;
}
::mtproto::InputPeer* TL_messages_sendMedia::release_peer() {
  // @@protoc_insertion_point(field_release:mtproto.TL_messages_sendMedia.peer)
  
  ::mtproto::InputPeer* temp = peer_;
  peer_ = NULL;
  return temp;
}
void TL_messages_sendMedia::set_allocated_peer(::mtproto::InputPeer* peer) {
  delete peer_;
  peer_ = peer;
  if (peer) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_messages_sendMedia.peer)
}

// int32 reply_to_msg_id = 6;
void TL_messages_sendMedia::clear_reply_to_msg_id() {
  reply_to_msg_id_ = 0;
}
::google::protobuf::int32 TL_messages_sendMedia::reply_to_msg_id() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_sendMedia.reply_to_msg_id)
  return reply_to_msg_id_;
}
void TL_messages_sendMedia::set_reply_to_msg_id(::google::protobuf::int32 value) {
  
  reply_to_msg_id_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_sendMedia.reply_to_msg_id)
}

// .mtproto.InputMedia media = 7;
bool TL_messages_sendMedia::has_media() const {
  return this != internal_default_instance() && media_ != NULL;
}
void TL_messages_sendMedia::clear_media() {
  if (GetArenaNoVirtual() == NULL && media_ != NULL) delete media_;
  media_ = NULL;
}
const ::mtproto::InputMedia& TL_messages_sendMedia::media() const {
  const ::mtproto::InputMedia* p = media_;
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_sendMedia.media)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::InputMedia*>(
      &::mtproto::_InputMedia_default_instance_);
}
::mtproto::InputMedia* TL_messages_sendMedia::mutable_media() {
  
  if (media_ == NULL) {
    media_ = new ::mtproto::InputMedia;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_messages_sendMedia.media)
  return media_;
}
::mtproto::InputMedia* TL_messages_sendMedia::release_media() {
  // @@protoc_insertion_point(field_release:mtproto.TL_messages_sendMedia.media)
  
  ::mtproto::InputMedia* temp = media_;
  media_ = NULL;
  return temp;
}
void TL_messages_sendMedia::set_allocated_media(::mtproto::InputMedia* media) {
  delete media_;
  media_ = media;
  if (media) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_messages_sendMedia.media)
}

// string message = 8;
void TL_messages_sendMedia::clear_message() {
  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& TL_messages_sendMedia::message() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_sendMedia.message)
  return message_.GetNoArena();
}
void TL_messages_sendMedia::set_message(const ::std::string& value) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_sendMedia.message)
}
#if LANG_CXX11
void TL_messages_sendMedia::set_message(::std::string&& value) {
  
  message_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mtproto.TL_messages_sendMedia.message)
}
#endif
void TL_messages_sendMedia::set_message(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtproto.TL_messages_sendMedia.message)
}
void TL_messages_sendMedia::set_message(const char* value, size_t size) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtproto.TL_messages_sendMedia.message)
}
::std::string* TL_messages_sendMedia::mutable_message() {
  
  // @@protoc_insertion_point(field_mutable:mtproto.TL_messages_sendMedia.message)
  return message_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* TL_messages_sendMedia::release_message() {
  // @@protoc_insertion_point(field_release:mtproto.TL_messages_sendMedia.message)
  
  return message_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TL_messages_sendMedia::set_allocated_message(::std::string* message) {
  if (message != NULL) {
    
  } else {
    
  }
  message_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), message);
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_messages_sendMedia.message)
}

// int64 random_id = 9;
void TL_messages_sendMedia::clear_random_id() {
  random_id_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 TL_messages_sendMedia::random_id() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_sendMedia.random_id)
  return random_id_;
}
void TL_messages_sendMedia::set_random_id(::google::protobuf::int64 value) {
  
  random_id_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_sendMedia.random_id)
}

// .mtproto.ReplyMarkup reply_markup = 10;
bool TL_messages_sendMedia::has_reply_markup() const {
  return this != internal_default_instance() && reply_markup_ != NULL;
}
void TL_messages_sendMedia::clear_reply_markup() {
  if (GetArenaNoVirtual() == NULL && reply_markup_ != NULL) delete reply_markup_;
  reply_markup_ = NULL;
}
const ::mtproto::ReplyMarkup& TL_messages_sendMedia::reply_markup() const {
  const ::mtproto::ReplyMarkup* p = reply_markup_;
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_sendMedia.reply_markup)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::ReplyMarkup*>(
      &::mtproto::_ReplyMarkup_default_instance_);
}
::mtproto::ReplyMarkup* TL_messages_sendMedia::mutable_reply_markup() {
  
  if (reply_markup_ == NULL) {
    reply_markup_ = new ::mtproto::ReplyMarkup;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_messages_sendMedia.reply_markup)
  return reply_markup_;
}
::mtproto::ReplyMarkup* TL_messages_sendMedia::release_reply_markup() {
  // @@protoc_insertion_point(field_release:mtproto.TL_messages_sendMedia.reply_markup)
  
  ::mtproto::ReplyMarkup* temp = reply_markup_;
  reply_markup_ = NULL;
  return temp;
}
void TL_messages_sendMedia::set_allocated_reply_markup(::mtproto::ReplyMarkup* reply_markup) {
  delete reply_markup_;
  reply_markup_ = reply_markup;
  if (reply_markup) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_messages_sendMedia.reply_markup)
}

// repeated .mtproto.MessageEntity entities = 11;
int TL_messages_sendMedia::entities_size() const {
  return entities_.size();
}
void TL_messages_sendMedia::clear_entities() {
  entities_.Clear();
}
const ::mtproto::MessageEntity& TL_messages_sendMedia::entities(int index) const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_sendMedia.entities)
  return entities_.Get(index);
}
::mtproto::MessageEntity* TL_messages_sendMedia::mutable_entities(int index) {
  // @@protoc_insertion_point(field_mutable:mtproto.TL_messages_sendMedia.entities)
  return entities_.Mutable(index);
}
::mtproto::MessageEntity* TL_messages_sendMedia::add_entities() {
  // @@protoc_insertion_point(field_add:mtproto.TL_messages_sendMedia.entities)
  return entities_.Add();
}
::google::protobuf::RepeatedPtrField< ::mtproto::MessageEntity >*
TL_messages_sendMedia::mutable_entities() {
  // @@protoc_insertion_point(field_mutable_list:mtproto.TL_messages_sendMedia.entities)
  return &entities_;
}
const ::google::protobuf::RepeatedPtrField< ::mtproto::MessageEntity >&
TL_messages_sendMedia::entities() const {
  // @@protoc_insertion_point(field_list:mtproto.TL_messages_sendMedia.entities)
  return entities_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TL_messages_forwardMessages::kSilentFieldNumber;
const int TL_messages_forwardMessages::kBackgroundFieldNumber;
const int TL_messages_forwardMessages::kWithMyScoreFieldNumber;
const int TL_messages_forwardMessages::kGroupedFieldNumber;
const int TL_messages_forwardMessages::kFromPeerFieldNumber;
const int TL_messages_forwardMessages::kIdFieldNumber;
const int TL_messages_forwardMessages::kRandomIdFieldNumber;
const int TL_messages_forwardMessages::kToPeerFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TL_messages_forwardMessages::TL_messages_forwardMessages()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.TL_messages_forwardMessages)
}
TL_messages_forwardMessages::TL_messages_forwardMessages(const TL_messages_forwardMessages& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      id_(from.id_),
      random_id_(from.random_id_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_from_peer()) {
    from_peer_ = new ::mtproto::InputPeer(*from.from_peer_);
  } else {
    from_peer_ = NULL;
  }
  if (from.has_to_peer()) {
    to_peer_ = new ::mtproto::InputPeer(*from.to_peer_);
  } else {
    to_peer_ = NULL;
  }
  ::memcpy(&silent_, &from.silent_,
    static_cast<size_t>(reinterpret_cast<char*>(&grouped_) -
    reinterpret_cast<char*>(&silent_)) + sizeof(grouped_));
  // @@protoc_insertion_point(copy_constructor:mtproto.TL_messages_forwardMessages)
}

void TL_messages_forwardMessages::SharedCtor() {
  ::memset(&from_peer_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&grouped_) -
      reinterpret_cast<char*>(&from_peer_)) + sizeof(grouped_));
  _cached_size_ = 0;
}

TL_messages_forwardMessages::~TL_messages_forwardMessages() {
  // @@protoc_insertion_point(destructor:mtproto.TL_messages_forwardMessages)
  SharedDtor();
}

void TL_messages_forwardMessages::SharedDtor() {
  if (this != internal_default_instance()) delete from_peer_;
  if (this != internal_default_instance()) delete to_peer_;
}

void TL_messages_forwardMessages::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TL_messages_forwardMessages::descriptor() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TL_messages_forwardMessages& TL_messages_forwardMessages::default_instance() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  return *internal_default_instance();
}

TL_messages_forwardMessages* TL_messages_forwardMessages::New(::google::protobuf::Arena* arena) const {
  TL_messages_forwardMessages* n = new TL_messages_forwardMessages;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TL_messages_forwardMessages::Swap(TL_messages_forwardMessages* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TL_messages_forwardMessages::InternalSwap(TL_messages_forwardMessages* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata TL_messages_forwardMessages::GetMetadata() const {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TL_messages_forwardMessages

// bool silent = 2;
void TL_messages_forwardMessages::clear_silent() {
  silent_ = false;
}
bool TL_messages_forwardMessages::silent() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_forwardMessages.silent)
  return silent_;
}
void TL_messages_forwardMessages::set_silent(bool value) {
  
  silent_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_forwardMessages.silent)
}

// bool background = 3;
void TL_messages_forwardMessages::clear_background() {
  background_ = false;
}
bool TL_messages_forwardMessages::background() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_forwardMessages.background)
  return background_;
}
void TL_messages_forwardMessages::set_background(bool value) {
  
  background_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_forwardMessages.background)
}

// bool with_my_score = 4;
void TL_messages_forwardMessages::clear_with_my_score() {
  with_my_score_ = false;
}
bool TL_messages_forwardMessages::with_my_score() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_forwardMessages.with_my_score)
  return with_my_score_;
}
void TL_messages_forwardMessages::set_with_my_score(bool value) {
  
  with_my_score_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_forwardMessages.with_my_score)
}

// bool grouped = 5;
void TL_messages_forwardMessages::clear_grouped() {
  grouped_ = false;
}
bool TL_messages_forwardMessages::grouped() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_forwardMessages.grouped)
  return grouped_;
}
void TL_messages_forwardMessages::set_grouped(bool value) {
  
  grouped_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_forwardMessages.grouped)
}

// .mtproto.InputPeer from_peer = 6;
bool TL_messages_forwardMessages::has_from_peer() const {
  return this != internal_default_instance() && from_peer_ != NULL;
}
void TL_messages_forwardMessages::clear_from_peer() {
  if (GetArenaNoVirtual() == NULL && from_peer_ != NULL) delete from_peer_;
  from_peer_ = NULL;
}
const ::mtproto::InputPeer& TL_messages_forwardMessages::from_peer() const {
  const ::mtproto::InputPeer* p = from_peer_;
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_forwardMessages.from_peer)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::InputPeer*>(
      &::mtproto::_InputPeer_default_instance_);
}
::mtproto::InputPeer* TL_messages_forwardMessages::mutable_from_peer() {
  
  if (from_peer_ == NULL) {
    from_peer_ = new ::mtproto::InputPeer;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_messages_forwardMessages.from_peer)
  return from_peer_;
}
::mtproto::InputPeer* TL_messages_forwardMessages::release_from_peer() {
  // @@protoc_insertion_point(field_release:mtproto.TL_messages_forwardMessages.from_peer)
  
  ::mtproto::InputPeer* temp = from_peer_;
  from_peer_ = NULL;
  return temp;
}
void TL_messages_forwardMessages::set_allocated_from_peer(::mtproto::InputPeer* from_peer) {
  delete from_peer_;
  from_peer_ = from_peer;
  if (from_peer) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_messages_forwardMessages.from_peer)
}

// repeated int32 id = 7;
int TL_messages_forwardMessages::id_size() const {
  return id_.size();
}
void TL_messages_forwardMessages::clear_id() {
  id_.Clear();
}
::google::protobuf::int32 TL_messages_forwardMessages::id(int index) const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_forwardMessages.id)
  return id_.Get(index);
}
void TL_messages_forwardMessages::set_id(int index, ::google::protobuf::int32 value) {
  id_.Set(index, value);
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_forwardMessages.id)
}
void TL_messages_forwardMessages::add_id(::google::protobuf::int32 value) {
  id_.Add(value);
  // @@protoc_insertion_point(field_add:mtproto.TL_messages_forwardMessages.id)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
TL_messages_forwardMessages::id() const {
  // @@protoc_insertion_point(field_list:mtproto.TL_messages_forwardMessages.id)
  return id_;
}
::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
TL_messages_forwardMessages::mutable_id() {
  // @@protoc_insertion_point(field_mutable_list:mtproto.TL_messages_forwardMessages.id)
  return &id_;
}

// repeated int64 random_id = 8;
int TL_messages_forwardMessages::random_id_size() const {
  return random_id_.size();
}
void TL_messages_forwardMessages::clear_random_id() {
  random_id_.Clear();
}
::google::protobuf::int64 TL_messages_forwardMessages::random_id(int index) const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_forwardMessages.random_id)
  return random_id_.Get(index);
}
void TL_messages_forwardMessages::set_random_id(int index, ::google::protobuf::int64 value) {
  random_id_.Set(index, value);
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_forwardMessages.random_id)
}
void TL_messages_forwardMessages::add_random_id(::google::protobuf::int64 value) {
  random_id_.Add(value);
  // @@protoc_insertion_point(field_add:mtproto.TL_messages_forwardMessages.random_id)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
TL_messages_forwardMessages::random_id() const {
  // @@protoc_insertion_point(field_list:mtproto.TL_messages_forwardMessages.random_id)
  return random_id_;
}
::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
TL_messages_forwardMessages::mutable_random_id() {
  // @@protoc_insertion_point(field_mutable_list:mtproto.TL_messages_forwardMessages.random_id)
  return &random_id_;
}

// .mtproto.InputPeer to_peer = 9;
bool TL_messages_forwardMessages::has_to_peer() const {
  return this != internal_default_instance() && to_peer_ != NULL;
}
void TL_messages_forwardMessages::clear_to_peer() {
  if (GetArenaNoVirtual() == NULL && to_peer_ != NULL) delete to_peer_;
  to_peer_ = NULL;
}
const ::mtproto::InputPeer& TL_messages_forwardMessages::to_peer() const {
  const ::mtproto::InputPeer* p = to_peer_;
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_forwardMessages.to_peer)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::InputPeer*>(
      &::mtproto::_InputPeer_default_instance_);
}
::mtproto::InputPeer* TL_messages_forwardMessages::mutable_to_peer() {
  
  if (to_peer_ == NULL) {
    to_peer_ = new ::mtproto::InputPeer;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_messages_forwardMessages.to_peer)
  return to_peer_;
}
::mtproto::InputPeer* TL_messages_forwardMessages::release_to_peer() {
  // @@protoc_insertion_point(field_release:mtproto.TL_messages_forwardMessages.to_peer)
  
  ::mtproto::InputPeer* temp = to_peer_;
  to_peer_ = NULL;
  return temp;
}
void TL_messages_forwardMessages::set_allocated_to_peer(::mtproto::InputPeer* to_peer) {
  delete to_peer_;
  to_peer_ = to_peer;
  if (to_peer) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_messages_forwardMessages.to_peer)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TL_messages_reportSpam::kPeerFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TL_messages_reportSpam::TL_messages_reportSpam()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.TL_messages_reportSpam)
}
TL_messages_reportSpam::TL_messages_reportSpam(const TL_messages_reportSpam& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_peer()) {
    peer_ = new ::mtproto::InputPeer(*from.peer_);
  } else {
    peer_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:mtproto.TL_messages_reportSpam)
}

void TL_messages_reportSpam::SharedCtor() {
  peer_ = NULL;
  _cached_size_ = 0;
}

TL_messages_reportSpam::~TL_messages_reportSpam() {
  // @@protoc_insertion_point(destructor:mtproto.TL_messages_reportSpam)
  SharedDtor();
}

void TL_messages_reportSpam::SharedDtor() {
  if (this != internal_default_instance()) delete peer_;
}

void TL_messages_reportSpam::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TL_messages_reportSpam::descriptor() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TL_messages_reportSpam& TL_messages_reportSpam::default_instance() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  return *internal_default_instance();
}

TL_messages_reportSpam* TL_messages_reportSpam::New(::google::protobuf::Arena* arena) const {
  TL_messages_reportSpam* n = new TL_messages_reportSpam;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TL_messages_reportSpam::Swap(TL_messages_reportSpam* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TL_messages_reportSpam::InternalSwap(TL_messages_reportSpam* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata TL_messages_reportSpam::GetMetadata() const {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TL_messages_reportSpam

// .mtproto.InputPeer peer = 1;
bool TL_messages_reportSpam::has_peer() const {
  return this != internal_default_instance() && peer_ != NULL;
}
void TL_messages_reportSpam::clear_peer() {
  if (GetArenaNoVirtual() == NULL && peer_ != NULL) delete peer_;
  peer_ = NULL;
}
const ::mtproto::InputPeer& TL_messages_reportSpam::peer() const {
  const ::mtproto::InputPeer* p = peer_;
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_reportSpam.peer)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::InputPeer*>(
      &::mtproto::_InputPeer_default_instance_);
}
::mtproto::InputPeer* TL_messages_reportSpam::mutable_peer() {
  
  if (peer_ == NULL) {
    peer_ = new ::mtproto::InputPeer;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_messages_reportSpam.peer)
  return peer_;
}
::mtproto::InputPeer* TL_messages_reportSpam::release_peer() {
  // @@protoc_insertion_point(field_release:mtproto.TL_messages_reportSpam.peer)
  
  ::mtproto::InputPeer* temp = peer_;
  peer_ = NULL;
  return temp;
}
void TL_messages_reportSpam::set_allocated_peer(::mtproto::InputPeer* peer) {
  delete peer_;
  peer_ = peer;
  if (peer) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_messages_reportSpam.peer)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TL_messages_hideReportSpam::kPeerFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TL_messages_hideReportSpam::TL_messages_hideReportSpam()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.TL_messages_hideReportSpam)
}
TL_messages_hideReportSpam::TL_messages_hideReportSpam(const TL_messages_hideReportSpam& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_peer()) {
    peer_ = new ::mtproto::InputPeer(*from.peer_);
  } else {
    peer_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:mtproto.TL_messages_hideReportSpam)
}

void TL_messages_hideReportSpam::SharedCtor() {
  peer_ = NULL;
  _cached_size_ = 0;
}

TL_messages_hideReportSpam::~TL_messages_hideReportSpam() {
  // @@protoc_insertion_point(destructor:mtproto.TL_messages_hideReportSpam)
  SharedDtor();
}

void TL_messages_hideReportSpam::SharedDtor() {
  if (this != internal_default_instance()) delete peer_;
}

void TL_messages_hideReportSpam::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TL_messages_hideReportSpam::descriptor() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TL_messages_hideReportSpam& TL_messages_hideReportSpam::default_instance() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  return *internal_default_instance();
}

TL_messages_hideReportSpam* TL_messages_hideReportSpam::New(::google::protobuf::Arena* arena) const {
  TL_messages_hideReportSpam* n = new TL_messages_hideReportSpam;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TL_messages_hideReportSpam::Swap(TL_messages_hideReportSpam* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TL_messages_hideReportSpam::InternalSwap(TL_messages_hideReportSpam* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata TL_messages_hideReportSpam::GetMetadata() const {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TL_messages_hideReportSpam

// .mtproto.InputPeer peer = 1;
bool TL_messages_hideReportSpam::has_peer() const {
  return this != internal_default_instance() && peer_ != NULL;
}
void TL_messages_hideReportSpam::clear_peer() {
  if (GetArenaNoVirtual() == NULL && peer_ != NULL) delete peer_;
  peer_ = NULL;
}
const ::mtproto::InputPeer& TL_messages_hideReportSpam::peer() const {
  const ::mtproto::InputPeer* p = peer_;
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_hideReportSpam.peer)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::InputPeer*>(
      &::mtproto::_InputPeer_default_instance_);
}
::mtproto::InputPeer* TL_messages_hideReportSpam::mutable_peer() {
  
  if (peer_ == NULL) {
    peer_ = new ::mtproto::InputPeer;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_messages_hideReportSpam.peer)
  return peer_;
}
::mtproto::InputPeer* TL_messages_hideReportSpam::release_peer() {
  // @@protoc_insertion_point(field_release:mtproto.TL_messages_hideReportSpam.peer)
  
  ::mtproto::InputPeer* temp = peer_;
  peer_ = NULL;
  return temp;
}
void TL_messages_hideReportSpam::set_allocated_peer(::mtproto::InputPeer* peer) {
  delete peer_;
  peer_ = peer;
  if (peer) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_messages_hideReportSpam.peer)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TL_messages_getPeerSettings::kPeerFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TL_messages_getPeerSettings::TL_messages_getPeerSettings()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.TL_messages_getPeerSettings)
}
TL_messages_getPeerSettings::TL_messages_getPeerSettings(const TL_messages_getPeerSettings& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_peer()) {
    peer_ = new ::mtproto::InputPeer(*from.peer_);
  } else {
    peer_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:mtproto.TL_messages_getPeerSettings)
}

void TL_messages_getPeerSettings::SharedCtor() {
  peer_ = NULL;
  _cached_size_ = 0;
}

TL_messages_getPeerSettings::~TL_messages_getPeerSettings() {
  // @@protoc_insertion_point(destructor:mtproto.TL_messages_getPeerSettings)
  SharedDtor();
}

void TL_messages_getPeerSettings::SharedDtor() {
  if (this != internal_default_instance()) delete peer_;
}

void TL_messages_getPeerSettings::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TL_messages_getPeerSettings::descriptor() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TL_messages_getPeerSettings& TL_messages_getPeerSettings::default_instance() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  return *internal_default_instance();
}

TL_messages_getPeerSettings* TL_messages_getPeerSettings::New(::google::protobuf::Arena* arena) const {
  TL_messages_getPeerSettings* n = new TL_messages_getPeerSettings;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TL_messages_getPeerSettings::Swap(TL_messages_getPeerSettings* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TL_messages_getPeerSettings::InternalSwap(TL_messages_getPeerSettings* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata TL_messages_getPeerSettings::GetMetadata() const {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TL_messages_getPeerSettings

// .mtproto.InputPeer peer = 1;
bool TL_messages_getPeerSettings::has_peer() const {
  return this != internal_default_instance() && peer_ != NULL;
}
void TL_messages_getPeerSettings::clear_peer() {
  if (GetArenaNoVirtual() == NULL && peer_ != NULL) delete peer_;
  peer_ = NULL;
}
const ::mtproto::InputPeer& TL_messages_getPeerSettings::peer() const {
  const ::mtproto::InputPeer* p = peer_;
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_getPeerSettings.peer)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::InputPeer*>(
      &::mtproto::_InputPeer_default_instance_);
}
::mtproto::InputPeer* TL_messages_getPeerSettings::mutable_peer() {
  
  if (peer_ == NULL) {
    peer_ = new ::mtproto::InputPeer;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_messages_getPeerSettings.peer)
  return peer_;
}
::mtproto::InputPeer* TL_messages_getPeerSettings::release_peer() {
  // @@protoc_insertion_point(field_release:mtproto.TL_messages_getPeerSettings.peer)
  
  ::mtproto::InputPeer* temp = peer_;
  peer_ = NULL;
  return temp;
}
void TL_messages_getPeerSettings::set_allocated_peer(::mtproto::InputPeer* peer) {
  delete peer_;
  peer_ = peer;
  if (peer) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_messages_getPeerSettings.peer)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TL_messages_report::kPeerFieldNumber;
const int TL_messages_report::kIdFieldNumber;
const int TL_messages_report::kReasonFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TL_messages_report::TL_messages_report()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.TL_messages_report)
}
TL_messages_report::TL_messages_report(const TL_messages_report& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      id_(from.id_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_peer()) {
    peer_ = new ::mtproto::InputPeer(*from.peer_);
  } else {
    peer_ = NULL;
  }
  if (from.has_reason()) {
    reason_ = new ::mtproto::ReportReason(*from.reason_);
  } else {
    reason_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:mtproto.TL_messages_report)
}

void TL_messages_report::SharedCtor() {
  ::memset(&peer_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&reason_) -
      reinterpret_cast<char*>(&peer_)) + sizeof(reason_));
  _cached_size_ = 0;
}

TL_messages_report::~TL_messages_report() {
  // @@protoc_insertion_point(destructor:mtproto.TL_messages_report)
  SharedDtor();
}

void TL_messages_report::SharedDtor() {
  if (this != internal_default_instance()) delete peer_;
  if (this != internal_default_instance()) delete reason_;
}

void TL_messages_report::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TL_messages_report::descriptor() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TL_messages_report& TL_messages_report::default_instance() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  return *internal_default_instance();
}

TL_messages_report* TL_messages_report::New(::google::protobuf::Arena* arena) const {
  TL_messages_report* n = new TL_messages_report;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TL_messages_report::Swap(TL_messages_report* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TL_messages_report::InternalSwap(TL_messages_report* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata TL_messages_report::GetMetadata() const {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TL_messages_report

// .mtproto.InputPeer peer = 1;
bool TL_messages_report::has_peer() const {
  return this != internal_default_instance() && peer_ != NULL;
}
void TL_messages_report::clear_peer() {
  if (GetArenaNoVirtual() == NULL && peer_ != NULL) delete peer_;
  peer_ = NULL;
}
const ::mtproto::InputPeer& TL_messages_report::peer() const {
  const ::mtproto::InputPeer* p = peer_;
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_report.peer)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::InputPeer*>(
      &::mtproto::_InputPeer_default_instance_);
}
::mtproto::InputPeer* TL_messages_report::mutable_peer() {
  
  if (peer_ == NULL) {
    peer_ = new ::mtproto::InputPeer;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_messages_report.peer)
  return peer_;
}
::mtproto::InputPeer* TL_messages_report::release_peer() {
  // @@protoc_insertion_point(field_release:mtproto.TL_messages_report.peer)
  
  ::mtproto::InputPeer* temp = peer_;
  peer_ = NULL;
  return temp;
}
void TL_messages_report::set_allocated_peer(::mtproto::InputPeer* peer) {
  delete peer_;
  peer_ = peer;
  if (peer) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_messages_report.peer)
}

// repeated int32 id = 2;
int TL_messages_report::id_size() const {
  return id_.size();
}
void TL_messages_report::clear_id() {
  id_.Clear();
}
::google::protobuf::int32 TL_messages_report::id(int index) const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_report.id)
  return id_.Get(index);
}
void TL_messages_report::set_id(int index, ::google::protobuf::int32 value) {
  id_.Set(index, value);
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_report.id)
}
void TL_messages_report::add_id(::google::protobuf::int32 value) {
  id_.Add(value);
  // @@protoc_insertion_point(field_add:mtproto.TL_messages_report.id)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
TL_messages_report::id() const {
  // @@protoc_insertion_point(field_list:mtproto.TL_messages_report.id)
  return id_;
}
::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
TL_messages_report::mutable_id() {
  // @@protoc_insertion_point(field_mutable_list:mtproto.TL_messages_report.id)
  return &id_;
}

// .mtproto.ReportReason reason = 3;
bool TL_messages_report::has_reason() const {
  return this != internal_default_instance() && reason_ != NULL;
}
void TL_messages_report::clear_reason() {
  if (GetArenaNoVirtual() == NULL && reason_ != NULL) delete reason_;
  reason_ = NULL;
}
const ::mtproto::ReportReason& TL_messages_report::reason() const {
  const ::mtproto::ReportReason* p = reason_;
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_report.reason)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::ReportReason*>(
      &::mtproto::_ReportReason_default_instance_);
}
::mtproto::ReportReason* TL_messages_report::mutable_reason() {
  
  if (reason_ == NULL) {
    reason_ = new ::mtproto::ReportReason;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_messages_report.reason)
  return reason_;
}
::mtproto::ReportReason* TL_messages_report::release_reason() {
  // @@protoc_insertion_point(field_release:mtproto.TL_messages_report.reason)
  
  ::mtproto::ReportReason* temp = reason_;
  reason_ = NULL;
  return temp;
}
void TL_messages_report::set_allocated_reason(::mtproto::ReportReason* reason) {
  delete reason_;
  reason_ = reason;
  if (reason) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_messages_report.reason)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TL_messages_getChats::kIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TL_messages_getChats::TL_messages_getChats()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.TL_messages_getChats)
}
TL_messages_getChats::TL_messages_getChats(const TL_messages_getChats& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      id_(from.id_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:mtproto.TL_messages_getChats)
}

void TL_messages_getChats::SharedCtor() {
  _cached_size_ = 0;
}

TL_messages_getChats::~TL_messages_getChats() {
  // @@protoc_insertion_point(destructor:mtproto.TL_messages_getChats)
  SharedDtor();
}

void TL_messages_getChats::SharedDtor() {
}

void TL_messages_getChats::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TL_messages_getChats::descriptor() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TL_messages_getChats& TL_messages_getChats::default_instance() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  return *internal_default_instance();
}

TL_messages_getChats* TL_messages_getChats::New(::google::protobuf::Arena* arena) const {
  TL_messages_getChats* n = new TL_messages_getChats;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TL_messages_getChats::Swap(TL_messages_getChats* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TL_messages_getChats::InternalSwap(TL_messages_getChats* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata TL_messages_getChats::GetMetadata() const {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TL_messages_getChats

// repeated int32 id = 1;
int TL_messages_getChats::id_size() const {
  return id_.size();
}
void TL_messages_getChats::clear_id() {
  id_.Clear();
}
::google::protobuf::int32 TL_messages_getChats::id(int index) const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_getChats.id)
  return id_.Get(index);
}
void TL_messages_getChats::set_id(int index, ::google::protobuf::int32 value) {
  id_.Set(index, value);
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_getChats.id)
}
void TL_messages_getChats::add_id(::google::protobuf::int32 value) {
  id_.Add(value);
  // @@protoc_insertion_point(field_add:mtproto.TL_messages_getChats.id)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
TL_messages_getChats::id() const {
  // @@protoc_insertion_point(field_list:mtproto.TL_messages_getChats.id)
  return id_;
}
::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
TL_messages_getChats::mutable_id() {
  // @@protoc_insertion_point(field_mutable_list:mtproto.TL_messages_getChats.id)
  return &id_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TL_messages_getFullChat::kChatIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TL_messages_getFullChat::TL_messages_getFullChat()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.TL_messages_getFullChat)
}
TL_messages_getFullChat::TL_messages_getFullChat(const TL_messages_getFullChat& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  chat_id_ = from.chat_id_;
  // @@protoc_insertion_point(copy_constructor:mtproto.TL_messages_getFullChat)
}

void TL_messages_getFullChat::SharedCtor() {
  chat_id_ = 0;
  _cached_size_ = 0;
}

TL_messages_getFullChat::~TL_messages_getFullChat() {
  // @@protoc_insertion_point(destructor:mtproto.TL_messages_getFullChat)
  SharedDtor();
}

void TL_messages_getFullChat::SharedDtor() {
}

void TL_messages_getFullChat::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TL_messages_getFullChat::descriptor() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TL_messages_getFullChat& TL_messages_getFullChat::default_instance() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  return *internal_default_instance();
}

TL_messages_getFullChat* TL_messages_getFullChat::New(::google::protobuf::Arena* arena) const {
  TL_messages_getFullChat* n = new TL_messages_getFullChat;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TL_messages_getFullChat::Swap(TL_messages_getFullChat* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TL_messages_getFullChat::InternalSwap(TL_messages_getFullChat* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata TL_messages_getFullChat::GetMetadata() const {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TL_messages_getFullChat

// int32 chat_id = 1;
void TL_messages_getFullChat::clear_chat_id() {
  chat_id_ = 0;
}
::google::protobuf::int32 TL_messages_getFullChat::chat_id() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_getFullChat.chat_id)
  return chat_id_;
}
void TL_messages_getFullChat::set_chat_id(::google::protobuf::int32 value) {
  
  chat_id_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_getFullChat.chat_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TL_messages_editChatTitle::kChatIdFieldNumber;
const int TL_messages_editChatTitle::kTitleFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TL_messages_editChatTitle::TL_messages_editChatTitle()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.TL_messages_editChatTitle)
}
TL_messages_editChatTitle::TL_messages_editChatTitle(const TL_messages_editChatTitle& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  title_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.title().size() > 0) {
    title_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.title_);
  }
  chat_id_ = from.chat_id_;
  // @@protoc_insertion_point(copy_constructor:mtproto.TL_messages_editChatTitle)
}

void TL_messages_editChatTitle::SharedCtor() {
  title_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  chat_id_ = 0;
  _cached_size_ = 0;
}

TL_messages_editChatTitle::~TL_messages_editChatTitle() {
  // @@protoc_insertion_point(destructor:mtproto.TL_messages_editChatTitle)
  SharedDtor();
}

void TL_messages_editChatTitle::SharedDtor() {
  title_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void TL_messages_editChatTitle::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TL_messages_editChatTitle::descriptor() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TL_messages_editChatTitle& TL_messages_editChatTitle::default_instance() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  return *internal_default_instance();
}

TL_messages_editChatTitle* TL_messages_editChatTitle::New(::google::protobuf::Arena* arena) const {
  TL_messages_editChatTitle* n = new TL_messages_editChatTitle;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TL_messages_editChatTitle::Swap(TL_messages_editChatTitle* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TL_messages_editChatTitle::InternalSwap(TL_messages_editChatTitle* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata TL_messages_editChatTitle::GetMetadata() const {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TL_messages_editChatTitle

// int32 chat_id = 1;
void TL_messages_editChatTitle::clear_chat_id() {
  chat_id_ = 0;
}
::google::protobuf::int32 TL_messages_editChatTitle::chat_id() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_editChatTitle.chat_id)
  return chat_id_;
}
void TL_messages_editChatTitle::set_chat_id(::google::protobuf::int32 value) {
  
  chat_id_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_editChatTitle.chat_id)
}

// string title = 2;
void TL_messages_editChatTitle::clear_title() {
  title_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& TL_messages_editChatTitle::title() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_editChatTitle.title)
  return title_.GetNoArena();
}
void TL_messages_editChatTitle::set_title(const ::std::string& value) {
  
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_editChatTitle.title)
}
#if LANG_CXX11
void TL_messages_editChatTitle::set_title(::std::string&& value) {
  
  title_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mtproto.TL_messages_editChatTitle.title)
}
#endif
void TL_messages_editChatTitle::set_title(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtproto.TL_messages_editChatTitle.title)
}
void TL_messages_editChatTitle::set_title(const char* value, size_t size) {
  
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtproto.TL_messages_editChatTitle.title)
}
::std::string* TL_messages_editChatTitle::mutable_title() {
  
  // @@protoc_insertion_point(field_mutable:mtproto.TL_messages_editChatTitle.title)
  return title_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* TL_messages_editChatTitle::release_title() {
  // @@protoc_insertion_point(field_release:mtproto.TL_messages_editChatTitle.title)
  
  return title_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TL_messages_editChatTitle::set_allocated_title(::std::string* title) {
  if (title != NULL) {
    
  } else {
    
  }
  title_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), title);
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_messages_editChatTitle.title)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TL_messages_editChatPhoto::kChatIdFieldNumber;
const int TL_messages_editChatPhoto::kPhotoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TL_messages_editChatPhoto::TL_messages_editChatPhoto()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.TL_messages_editChatPhoto)
}
TL_messages_editChatPhoto::TL_messages_editChatPhoto(const TL_messages_editChatPhoto& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_photo()) {
    photo_ = new ::mtproto::InputChatPhoto(*from.photo_);
  } else {
    photo_ = NULL;
  }
  chat_id_ = from.chat_id_;
  // @@protoc_insertion_point(copy_constructor:mtproto.TL_messages_editChatPhoto)
}

void TL_messages_editChatPhoto::SharedCtor() {
  ::memset(&photo_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&chat_id_) -
      reinterpret_cast<char*>(&photo_)) + sizeof(chat_id_));
  _cached_size_ = 0;
}

TL_messages_editChatPhoto::~TL_messages_editChatPhoto() {
  // @@protoc_insertion_point(destructor:mtproto.TL_messages_editChatPhoto)
  SharedDtor();
}

void TL_messages_editChatPhoto::SharedDtor() {
  if (this != internal_default_instance()) delete photo_;
}

void TL_messages_editChatPhoto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TL_messages_editChatPhoto::descriptor() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TL_messages_editChatPhoto& TL_messages_editChatPhoto::default_instance() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  return *internal_default_instance();
}

TL_messages_editChatPhoto* TL_messages_editChatPhoto::New(::google::protobuf::Arena* arena) const {
  TL_messages_editChatPhoto* n = new TL_messages_editChatPhoto;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TL_messages_editChatPhoto::Swap(TL_messages_editChatPhoto* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TL_messages_editChatPhoto::InternalSwap(TL_messages_editChatPhoto* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata TL_messages_editChatPhoto::GetMetadata() const {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TL_messages_editChatPhoto

// int32 chat_id = 1;
void TL_messages_editChatPhoto::clear_chat_id() {
  chat_id_ = 0;
}
::google::protobuf::int32 TL_messages_editChatPhoto::chat_id() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_editChatPhoto.chat_id)
  return chat_id_;
}
void TL_messages_editChatPhoto::set_chat_id(::google::protobuf::int32 value) {
  
  chat_id_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_editChatPhoto.chat_id)
}

// .mtproto.InputChatPhoto photo = 2;
bool TL_messages_editChatPhoto::has_photo() const {
  return this != internal_default_instance() && photo_ != NULL;
}
void TL_messages_editChatPhoto::clear_photo() {
  if (GetArenaNoVirtual() == NULL && photo_ != NULL) delete photo_;
  photo_ = NULL;
}
const ::mtproto::InputChatPhoto& TL_messages_editChatPhoto::photo() const {
  const ::mtproto::InputChatPhoto* p = photo_;
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_editChatPhoto.photo)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::InputChatPhoto*>(
      &::mtproto::_InputChatPhoto_default_instance_);
}
::mtproto::InputChatPhoto* TL_messages_editChatPhoto::mutable_photo() {
  
  if (photo_ == NULL) {
    photo_ = new ::mtproto::InputChatPhoto;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_messages_editChatPhoto.photo)
  return photo_;
}
::mtproto::InputChatPhoto* TL_messages_editChatPhoto::release_photo() {
  // @@protoc_insertion_point(field_release:mtproto.TL_messages_editChatPhoto.photo)
  
  ::mtproto::InputChatPhoto* temp = photo_;
  photo_ = NULL;
  return temp;
}
void TL_messages_editChatPhoto::set_allocated_photo(::mtproto::InputChatPhoto* photo) {
  delete photo_;
  photo_ = photo;
  if (photo) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_messages_editChatPhoto.photo)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TL_messages_addChatUser::kChatIdFieldNumber;
const int TL_messages_addChatUser::kUserIdFieldNumber;
const int TL_messages_addChatUser::kFwdLimitFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TL_messages_addChatUser::TL_messages_addChatUser()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.TL_messages_addChatUser)
}
TL_messages_addChatUser::TL_messages_addChatUser(const TL_messages_addChatUser& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_user_id()) {
    user_id_ = new ::mtproto::InputUser(*from.user_id_);
  } else {
    user_id_ = NULL;
  }
  ::memcpy(&chat_id_, &from.chat_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&fwd_limit_) -
    reinterpret_cast<char*>(&chat_id_)) + sizeof(fwd_limit_));
  // @@protoc_insertion_point(copy_constructor:mtproto.TL_messages_addChatUser)
}

void TL_messages_addChatUser::SharedCtor() {
  ::memset(&user_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&fwd_limit_) -
      reinterpret_cast<char*>(&user_id_)) + sizeof(fwd_limit_));
  _cached_size_ = 0;
}

TL_messages_addChatUser::~TL_messages_addChatUser() {
  // @@protoc_insertion_point(destructor:mtproto.TL_messages_addChatUser)
  SharedDtor();
}

void TL_messages_addChatUser::SharedDtor() {
  if (this != internal_default_instance()) delete user_id_;
}

void TL_messages_addChatUser::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TL_messages_addChatUser::descriptor() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TL_messages_addChatUser& TL_messages_addChatUser::default_instance() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  return *internal_default_instance();
}

TL_messages_addChatUser* TL_messages_addChatUser::New(::google::protobuf::Arena* arena) const {
  TL_messages_addChatUser* n = new TL_messages_addChatUser;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TL_messages_addChatUser::Swap(TL_messages_addChatUser* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TL_messages_addChatUser::InternalSwap(TL_messages_addChatUser* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata TL_messages_addChatUser::GetMetadata() const {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TL_messages_addChatUser

// int32 chat_id = 1;
void TL_messages_addChatUser::clear_chat_id() {
  chat_id_ = 0;
}
::google::protobuf::int32 TL_messages_addChatUser::chat_id() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_addChatUser.chat_id)
  return chat_id_;
}
void TL_messages_addChatUser::set_chat_id(::google::protobuf::int32 value) {
  
  chat_id_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_addChatUser.chat_id)
}

// .mtproto.InputUser user_id = 2;
bool TL_messages_addChatUser::has_user_id() const {
  return this != internal_default_instance() && user_id_ != NULL;
}
void TL_messages_addChatUser::clear_user_id() {
  if (GetArenaNoVirtual() == NULL && user_id_ != NULL) delete user_id_;
  user_id_ = NULL;
}
const ::mtproto::InputUser& TL_messages_addChatUser::user_id() const {
  const ::mtproto::InputUser* p = user_id_;
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_addChatUser.user_id)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::InputUser*>(
      &::mtproto::_InputUser_default_instance_);
}
::mtproto::InputUser* TL_messages_addChatUser::mutable_user_id() {
  
  if (user_id_ == NULL) {
    user_id_ = new ::mtproto::InputUser;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_messages_addChatUser.user_id)
  return user_id_;
}
::mtproto::InputUser* TL_messages_addChatUser::release_user_id() {
  // @@protoc_insertion_point(field_release:mtproto.TL_messages_addChatUser.user_id)
  
  ::mtproto::InputUser* temp = user_id_;
  user_id_ = NULL;
  return temp;
}
void TL_messages_addChatUser::set_allocated_user_id(::mtproto::InputUser* user_id) {
  delete user_id_;
  user_id_ = user_id;
  if (user_id) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_messages_addChatUser.user_id)
}

// int32 fwd_limit = 3;
void TL_messages_addChatUser::clear_fwd_limit() {
  fwd_limit_ = 0;
}
::google::protobuf::int32 TL_messages_addChatUser::fwd_limit() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_addChatUser.fwd_limit)
  return fwd_limit_;
}
void TL_messages_addChatUser::set_fwd_limit(::google::protobuf::int32 value) {
  
  fwd_limit_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_addChatUser.fwd_limit)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TL_messages_deleteChatUser::kChatIdFieldNumber;
const int TL_messages_deleteChatUser::kUserIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TL_messages_deleteChatUser::TL_messages_deleteChatUser()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.TL_messages_deleteChatUser)
}
TL_messages_deleteChatUser::TL_messages_deleteChatUser(const TL_messages_deleteChatUser& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_user_id()) {
    user_id_ = new ::mtproto::InputUser(*from.user_id_);
  } else {
    user_id_ = NULL;
  }
  chat_id_ = from.chat_id_;
  // @@protoc_insertion_point(copy_constructor:mtproto.TL_messages_deleteChatUser)
}

void TL_messages_deleteChatUser::SharedCtor() {
  ::memset(&user_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&chat_id_) -
      reinterpret_cast<char*>(&user_id_)) + sizeof(chat_id_));
  _cached_size_ = 0;
}

TL_messages_deleteChatUser::~TL_messages_deleteChatUser() {
  // @@protoc_insertion_point(destructor:mtproto.TL_messages_deleteChatUser)
  SharedDtor();
}

void TL_messages_deleteChatUser::SharedDtor() {
  if (this != internal_default_instance()) delete user_id_;
}

void TL_messages_deleteChatUser::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TL_messages_deleteChatUser::descriptor() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TL_messages_deleteChatUser& TL_messages_deleteChatUser::default_instance() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  return *internal_default_instance();
}

TL_messages_deleteChatUser* TL_messages_deleteChatUser::New(::google::protobuf::Arena* arena) const {
  TL_messages_deleteChatUser* n = new TL_messages_deleteChatUser;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TL_messages_deleteChatUser::Swap(TL_messages_deleteChatUser* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TL_messages_deleteChatUser::InternalSwap(TL_messages_deleteChatUser* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata TL_messages_deleteChatUser::GetMetadata() const {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TL_messages_deleteChatUser

// int32 chat_id = 1;
void TL_messages_deleteChatUser::clear_chat_id() {
  chat_id_ = 0;
}
::google::protobuf::int32 TL_messages_deleteChatUser::chat_id() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_deleteChatUser.chat_id)
  return chat_id_;
}
void TL_messages_deleteChatUser::set_chat_id(::google::protobuf::int32 value) {
  
  chat_id_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_deleteChatUser.chat_id)
}

// .mtproto.InputUser user_id = 2;
bool TL_messages_deleteChatUser::has_user_id() const {
  return this != internal_default_instance() && user_id_ != NULL;
}
void TL_messages_deleteChatUser::clear_user_id() {
  if (GetArenaNoVirtual() == NULL && user_id_ != NULL) delete user_id_;
  user_id_ = NULL;
}
const ::mtproto::InputUser& TL_messages_deleteChatUser::user_id() const {
  const ::mtproto::InputUser* p = user_id_;
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_deleteChatUser.user_id)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::InputUser*>(
      &::mtproto::_InputUser_default_instance_);
}
::mtproto::InputUser* TL_messages_deleteChatUser::mutable_user_id() {
  
  if (user_id_ == NULL) {
    user_id_ = new ::mtproto::InputUser;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_messages_deleteChatUser.user_id)
  return user_id_;
}
::mtproto::InputUser* TL_messages_deleteChatUser::release_user_id() {
  // @@protoc_insertion_point(field_release:mtproto.TL_messages_deleteChatUser.user_id)
  
  ::mtproto::InputUser* temp = user_id_;
  user_id_ = NULL;
  return temp;
}
void TL_messages_deleteChatUser::set_allocated_user_id(::mtproto::InputUser* user_id) {
  delete user_id_;
  user_id_ = user_id;
  if (user_id) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_messages_deleteChatUser.user_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TL_messages_createChat::kUsersFieldNumber;
const int TL_messages_createChat::kTitleFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TL_messages_createChat::TL_messages_createChat()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.TL_messages_createChat)
}
TL_messages_createChat::TL_messages_createChat(const TL_messages_createChat& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      users_(from.users_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  title_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.title().size() > 0) {
    title_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.title_);
  }
  // @@protoc_insertion_point(copy_constructor:mtproto.TL_messages_createChat)
}

void TL_messages_createChat::SharedCtor() {
  title_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

TL_messages_createChat::~TL_messages_createChat() {
  // @@protoc_insertion_point(destructor:mtproto.TL_messages_createChat)
  SharedDtor();
}

void TL_messages_createChat::SharedDtor() {
  title_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void TL_messages_createChat::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TL_messages_createChat::descriptor() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TL_messages_createChat& TL_messages_createChat::default_instance() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  return *internal_default_instance();
}

TL_messages_createChat* TL_messages_createChat::New(::google::protobuf::Arena* arena) const {
  TL_messages_createChat* n = new TL_messages_createChat;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TL_messages_createChat::Swap(TL_messages_createChat* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TL_messages_createChat::InternalSwap(TL_messages_createChat* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata TL_messages_createChat::GetMetadata() const {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TL_messages_createChat

// repeated .mtproto.InputUser users = 1;
int TL_messages_createChat::users_size() const {
  return users_.size();
}
void TL_messages_createChat::clear_users() {
  users_.Clear();
}
const ::mtproto::InputUser& TL_messages_createChat::users(int index) const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_createChat.users)
  return users_.Get(index);
}
::mtproto::InputUser* TL_messages_createChat::mutable_users(int index) {
  // @@protoc_insertion_point(field_mutable:mtproto.TL_messages_createChat.users)
  return users_.Mutable(index);
}
::mtproto::InputUser* TL_messages_createChat::add_users() {
  // @@protoc_insertion_point(field_add:mtproto.TL_messages_createChat.users)
  return users_.Add();
}
::google::protobuf::RepeatedPtrField< ::mtproto::InputUser >*
TL_messages_createChat::mutable_users() {
  // @@protoc_insertion_point(field_mutable_list:mtproto.TL_messages_createChat.users)
  return &users_;
}
const ::google::protobuf::RepeatedPtrField< ::mtproto::InputUser >&
TL_messages_createChat::users() const {
  // @@protoc_insertion_point(field_list:mtproto.TL_messages_createChat.users)
  return users_;
}

// string title = 2;
void TL_messages_createChat::clear_title() {
  title_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& TL_messages_createChat::title() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_createChat.title)
  return title_.GetNoArena();
}
void TL_messages_createChat::set_title(const ::std::string& value) {
  
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_createChat.title)
}
#if LANG_CXX11
void TL_messages_createChat::set_title(::std::string&& value) {
  
  title_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mtproto.TL_messages_createChat.title)
}
#endif
void TL_messages_createChat::set_title(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtproto.TL_messages_createChat.title)
}
void TL_messages_createChat::set_title(const char* value, size_t size) {
  
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtproto.TL_messages_createChat.title)
}
::std::string* TL_messages_createChat::mutable_title() {
  
  // @@protoc_insertion_point(field_mutable:mtproto.TL_messages_createChat.title)
  return title_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* TL_messages_createChat::release_title() {
  // @@protoc_insertion_point(field_release:mtproto.TL_messages_createChat.title)
  
  return title_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TL_messages_createChat::set_allocated_title(::std::string* title) {
  if (title != NULL) {
    
  } else {
    
  }
  title_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), title);
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_messages_createChat.title)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TL_messages_getDhConfig::kVersionFieldNumber;
const int TL_messages_getDhConfig::kRandomLengthFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TL_messages_getDhConfig::TL_messages_getDhConfig()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.TL_messages_getDhConfig)
}
TL_messages_getDhConfig::TL_messages_getDhConfig(const TL_messages_getDhConfig& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&version_, &from.version_,
    static_cast<size_t>(reinterpret_cast<char*>(&random_length_) -
    reinterpret_cast<char*>(&version_)) + sizeof(random_length_));
  // @@protoc_insertion_point(copy_constructor:mtproto.TL_messages_getDhConfig)
}

void TL_messages_getDhConfig::SharedCtor() {
  ::memset(&version_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&random_length_) -
      reinterpret_cast<char*>(&version_)) + sizeof(random_length_));
  _cached_size_ = 0;
}

TL_messages_getDhConfig::~TL_messages_getDhConfig() {
  // @@protoc_insertion_point(destructor:mtproto.TL_messages_getDhConfig)
  SharedDtor();
}

void TL_messages_getDhConfig::SharedDtor() {
}

void TL_messages_getDhConfig::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TL_messages_getDhConfig::descriptor() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TL_messages_getDhConfig& TL_messages_getDhConfig::default_instance() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  return *internal_default_instance();
}

TL_messages_getDhConfig* TL_messages_getDhConfig::New(::google::protobuf::Arena* arena) const {
  TL_messages_getDhConfig* n = new TL_messages_getDhConfig;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TL_messages_getDhConfig::Swap(TL_messages_getDhConfig* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TL_messages_getDhConfig::InternalSwap(TL_messages_getDhConfig* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata TL_messages_getDhConfig::GetMetadata() const {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TL_messages_getDhConfig

// int32 version = 1;
void TL_messages_getDhConfig::clear_version() {
  version_ = 0;
}
::google::protobuf::int32 TL_messages_getDhConfig::version() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_getDhConfig.version)
  return version_;
}
void TL_messages_getDhConfig::set_version(::google::protobuf::int32 value) {
  
  version_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_getDhConfig.version)
}

// int32 random_length = 2;
void TL_messages_getDhConfig::clear_random_length() {
  random_length_ = 0;
}
::google::protobuf::int32 TL_messages_getDhConfig::random_length() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_getDhConfig.random_length)
  return random_length_;
}
void TL_messages_getDhConfig::set_random_length(::google::protobuf::int32 value) {
  
  random_length_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_getDhConfig.random_length)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TL_messages_requestEncryption::kUserIdFieldNumber;
const int TL_messages_requestEncryption::kRandomIdFieldNumber;
const int TL_messages_requestEncryption::kGAFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TL_messages_requestEncryption::TL_messages_requestEncryption()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.TL_messages_requestEncryption)
}
TL_messages_requestEncryption::TL_messages_requestEncryption(const TL_messages_requestEncryption& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  g_a_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.g_a().size() > 0) {
    g_a_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.g_a_);
  }
  if (from.has_user_id()) {
    user_id_ = new ::mtproto::InputUser(*from.user_id_);
  } else {
    user_id_ = NULL;
  }
  random_id_ = from.random_id_;
  // @@protoc_insertion_point(copy_constructor:mtproto.TL_messages_requestEncryption)
}

void TL_messages_requestEncryption::SharedCtor() {
  g_a_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&user_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&random_id_) -
      reinterpret_cast<char*>(&user_id_)) + sizeof(random_id_));
  _cached_size_ = 0;
}

TL_messages_requestEncryption::~TL_messages_requestEncryption() {
  // @@protoc_insertion_point(destructor:mtproto.TL_messages_requestEncryption)
  SharedDtor();
}

void TL_messages_requestEncryption::SharedDtor() {
  g_a_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete user_id_;
}

void TL_messages_requestEncryption::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TL_messages_requestEncryption::descriptor() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TL_messages_requestEncryption& TL_messages_requestEncryption::default_instance() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  return *internal_default_instance();
}

TL_messages_requestEncryption* TL_messages_requestEncryption::New(::google::protobuf::Arena* arena) const {
  TL_messages_requestEncryption* n = new TL_messages_requestEncryption;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TL_messages_requestEncryption::Swap(TL_messages_requestEncryption* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TL_messages_requestEncryption::InternalSwap(TL_messages_requestEncryption* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata TL_messages_requestEncryption::GetMetadata() const {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TL_messages_requestEncryption

// .mtproto.InputUser user_id = 1;
bool TL_messages_requestEncryption::has_user_id() const {
  return this != internal_default_instance() && user_id_ != NULL;
}
void TL_messages_requestEncryption::clear_user_id() {
  if (GetArenaNoVirtual() == NULL && user_id_ != NULL) delete user_id_;
  user_id_ = NULL;
}
const ::mtproto::InputUser& TL_messages_requestEncryption::user_id() const {
  const ::mtproto::InputUser* p = user_id_;
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_requestEncryption.user_id)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::InputUser*>(
      &::mtproto::_InputUser_default_instance_);
}
::mtproto::InputUser* TL_messages_requestEncryption::mutable_user_id() {
  
  if (user_id_ == NULL) {
    user_id_ = new ::mtproto::InputUser;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_messages_requestEncryption.user_id)
  return user_id_;
}
::mtproto::InputUser* TL_messages_requestEncryption::release_user_id() {
  // @@protoc_insertion_point(field_release:mtproto.TL_messages_requestEncryption.user_id)
  
  ::mtproto::InputUser* temp = user_id_;
  user_id_ = NULL;
  return temp;
}
void TL_messages_requestEncryption::set_allocated_user_id(::mtproto::InputUser* user_id) {
  delete user_id_;
  user_id_ = user_id;
  if (user_id) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_messages_requestEncryption.user_id)
}

// int32 random_id = 2;
void TL_messages_requestEncryption::clear_random_id() {
  random_id_ = 0;
}
::google::protobuf::int32 TL_messages_requestEncryption::random_id() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_requestEncryption.random_id)
  return random_id_;
}
void TL_messages_requestEncryption::set_random_id(::google::protobuf::int32 value) {
  
  random_id_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_requestEncryption.random_id)
}

// bytes g_a = 3;
void TL_messages_requestEncryption::clear_g_a() {
  g_a_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& TL_messages_requestEncryption::g_a() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_requestEncryption.g_a)
  return g_a_.GetNoArena();
}
void TL_messages_requestEncryption::set_g_a(const ::std::string& value) {
  
  g_a_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_requestEncryption.g_a)
}
#if LANG_CXX11
void TL_messages_requestEncryption::set_g_a(::std::string&& value) {
  
  g_a_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mtproto.TL_messages_requestEncryption.g_a)
}
#endif
void TL_messages_requestEncryption::set_g_a(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  g_a_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtproto.TL_messages_requestEncryption.g_a)
}
void TL_messages_requestEncryption::set_g_a(const void* value, size_t size) {
  
  g_a_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtproto.TL_messages_requestEncryption.g_a)
}
::std::string* TL_messages_requestEncryption::mutable_g_a() {
  
  // @@protoc_insertion_point(field_mutable:mtproto.TL_messages_requestEncryption.g_a)
  return g_a_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* TL_messages_requestEncryption::release_g_a() {
  // @@protoc_insertion_point(field_release:mtproto.TL_messages_requestEncryption.g_a)
  
  return g_a_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TL_messages_requestEncryption::set_allocated_g_a(::std::string* g_a) {
  if (g_a != NULL) {
    
  } else {
    
  }
  g_a_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), g_a);
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_messages_requestEncryption.g_a)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TL_messages_acceptEncryption::kPeerFieldNumber;
const int TL_messages_acceptEncryption::kGBFieldNumber;
const int TL_messages_acceptEncryption::kKeyFingerprintFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TL_messages_acceptEncryption::TL_messages_acceptEncryption()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.TL_messages_acceptEncryption)
}
TL_messages_acceptEncryption::TL_messages_acceptEncryption(const TL_messages_acceptEncryption& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  g_b_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.g_b().size() > 0) {
    g_b_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.g_b_);
  }
  if (from.has_peer()) {
    peer_ = new ::mtproto::InputEncryptedChat(*from.peer_);
  } else {
    peer_ = NULL;
  }
  key_fingerprint_ = from.key_fingerprint_;
  // @@protoc_insertion_point(copy_constructor:mtproto.TL_messages_acceptEncryption)
}

void TL_messages_acceptEncryption::SharedCtor() {
  g_b_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&peer_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&key_fingerprint_) -
      reinterpret_cast<char*>(&peer_)) + sizeof(key_fingerprint_));
  _cached_size_ = 0;
}

TL_messages_acceptEncryption::~TL_messages_acceptEncryption() {
  // @@protoc_insertion_point(destructor:mtproto.TL_messages_acceptEncryption)
  SharedDtor();
}

void TL_messages_acceptEncryption::SharedDtor() {
  g_b_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete peer_;
}

void TL_messages_acceptEncryption::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TL_messages_acceptEncryption::descriptor() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TL_messages_acceptEncryption& TL_messages_acceptEncryption::default_instance() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  return *internal_default_instance();
}

TL_messages_acceptEncryption* TL_messages_acceptEncryption::New(::google::protobuf::Arena* arena) const {
  TL_messages_acceptEncryption* n = new TL_messages_acceptEncryption;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TL_messages_acceptEncryption::Swap(TL_messages_acceptEncryption* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TL_messages_acceptEncryption::InternalSwap(TL_messages_acceptEncryption* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata TL_messages_acceptEncryption::GetMetadata() const {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TL_messages_acceptEncryption

// .mtproto.InputEncryptedChat peer = 1;
bool TL_messages_acceptEncryption::has_peer() const {
  return this != internal_default_instance() && peer_ != NULL;
}
void TL_messages_acceptEncryption::clear_peer() {
  if (GetArenaNoVirtual() == NULL && peer_ != NULL) delete peer_;
  peer_ = NULL;
}
const ::mtproto::InputEncryptedChat& TL_messages_acceptEncryption::peer() const {
  const ::mtproto::InputEncryptedChat* p = peer_;
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_acceptEncryption.peer)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::InputEncryptedChat*>(
      &::mtproto::_InputEncryptedChat_default_instance_);
}
::mtproto::InputEncryptedChat* TL_messages_acceptEncryption::mutable_peer() {
  
  if (peer_ == NULL) {
    peer_ = new ::mtproto::InputEncryptedChat;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_messages_acceptEncryption.peer)
  return peer_;
}
::mtproto::InputEncryptedChat* TL_messages_acceptEncryption::release_peer() {
  // @@protoc_insertion_point(field_release:mtproto.TL_messages_acceptEncryption.peer)
  
  ::mtproto::InputEncryptedChat* temp = peer_;
  peer_ = NULL;
  return temp;
}
void TL_messages_acceptEncryption::set_allocated_peer(::mtproto::InputEncryptedChat* peer) {
  delete peer_;
  peer_ = peer;
  if (peer) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_messages_acceptEncryption.peer)
}

// bytes g_b = 2;
void TL_messages_acceptEncryption::clear_g_b() {
  g_b_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& TL_messages_acceptEncryption::g_b() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_acceptEncryption.g_b)
  return g_b_.GetNoArena();
}
void TL_messages_acceptEncryption::set_g_b(const ::std::string& value) {
  
  g_b_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_acceptEncryption.g_b)
}
#if LANG_CXX11
void TL_messages_acceptEncryption::set_g_b(::std::string&& value) {
  
  g_b_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mtproto.TL_messages_acceptEncryption.g_b)
}
#endif
void TL_messages_acceptEncryption::set_g_b(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  g_b_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtproto.TL_messages_acceptEncryption.g_b)
}
void TL_messages_acceptEncryption::set_g_b(const void* value, size_t size) {
  
  g_b_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtproto.TL_messages_acceptEncryption.g_b)
}
::std::string* TL_messages_acceptEncryption::mutable_g_b() {
  
  // @@protoc_insertion_point(field_mutable:mtproto.TL_messages_acceptEncryption.g_b)
  return g_b_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* TL_messages_acceptEncryption::release_g_b() {
  // @@protoc_insertion_point(field_release:mtproto.TL_messages_acceptEncryption.g_b)
  
  return g_b_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TL_messages_acceptEncryption::set_allocated_g_b(::std::string* g_b) {
  if (g_b != NULL) {
    
  } else {
    
  }
  g_b_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), g_b);
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_messages_acceptEncryption.g_b)
}

// int64 key_fingerprint = 3;
void TL_messages_acceptEncryption::clear_key_fingerprint() {
  key_fingerprint_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 TL_messages_acceptEncryption::key_fingerprint() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_acceptEncryption.key_fingerprint)
  return key_fingerprint_;
}
void TL_messages_acceptEncryption::set_key_fingerprint(::google::protobuf::int64 value) {
  
  key_fingerprint_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_acceptEncryption.key_fingerprint)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TL_messages_discardEncryption::kChatIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TL_messages_discardEncryption::TL_messages_discardEncryption()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.TL_messages_discardEncryption)
}
TL_messages_discardEncryption::TL_messages_discardEncryption(const TL_messages_discardEncryption& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  chat_id_ = from.chat_id_;
  // @@protoc_insertion_point(copy_constructor:mtproto.TL_messages_discardEncryption)
}

void TL_messages_discardEncryption::SharedCtor() {
  chat_id_ = 0;
  _cached_size_ = 0;
}

TL_messages_discardEncryption::~TL_messages_discardEncryption() {
  // @@protoc_insertion_point(destructor:mtproto.TL_messages_discardEncryption)
  SharedDtor();
}

void TL_messages_discardEncryption::SharedDtor() {
}

void TL_messages_discardEncryption::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TL_messages_discardEncryption::descriptor() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TL_messages_discardEncryption& TL_messages_discardEncryption::default_instance() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  return *internal_default_instance();
}

TL_messages_discardEncryption* TL_messages_discardEncryption::New(::google::protobuf::Arena* arena) const {
  TL_messages_discardEncryption* n = new TL_messages_discardEncryption;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TL_messages_discardEncryption::Swap(TL_messages_discardEncryption* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TL_messages_discardEncryption::InternalSwap(TL_messages_discardEncryption* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata TL_messages_discardEncryption::GetMetadata() const {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TL_messages_discardEncryption

// int32 chat_id = 1;
void TL_messages_discardEncryption::clear_chat_id() {
  chat_id_ = 0;
}
::google::protobuf::int32 TL_messages_discardEncryption::chat_id() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_discardEncryption.chat_id)
  return chat_id_;
}
void TL_messages_discardEncryption::set_chat_id(::google::protobuf::int32 value) {
  
  chat_id_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_discardEncryption.chat_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TL_messages_setEncryptedTyping::kPeerFieldNumber;
const int TL_messages_setEncryptedTyping::kTypingFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TL_messages_setEncryptedTyping::TL_messages_setEncryptedTyping()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.TL_messages_setEncryptedTyping)
}
TL_messages_setEncryptedTyping::TL_messages_setEncryptedTyping(const TL_messages_setEncryptedTyping& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_peer()) {
    peer_ = new ::mtproto::InputEncryptedChat(*from.peer_);
  } else {
    peer_ = NULL;
  }
  if (from.has_typing()) {
    typing_ = new ::mtproto::Bool(*from.typing_);
  } else {
    typing_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:mtproto.TL_messages_setEncryptedTyping)
}

void TL_messages_setEncryptedTyping::SharedCtor() {
  ::memset(&peer_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&typing_) -
      reinterpret_cast<char*>(&peer_)) + sizeof(typing_));
  _cached_size_ = 0;
}

TL_messages_setEncryptedTyping::~TL_messages_setEncryptedTyping() {
  // @@protoc_insertion_point(destructor:mtproto.TL_messages_setEncryptedTyping)
  SharedDtor();
}

void TL_messages_setEncryptedTyping::SharedDtor() {
  if (this != internal_default_instance()) delete peer_;
  if (this != internal_default_instance()) delete typing_;
}

void TL_messages_setEncryptedTyping::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TL_messages_setEncryptedTyping::descriptor() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TL_messages_setEncryptedTyping& TL_messages_setEncryptedTyping::default_instance() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  return *internal_default_instance();
}

TL_messages_setEncryptedTyping* TL_messages_setEncryptedTyping::New(::google::protobuf::Arena* arena) const {
  TL_messages_setEncryptedTyping* n = new TL_messages_setEncryptedTyping;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TL_messages_setEncryptedTyping::Swap(TL_messages_setEncryptedTyping* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TL_messages_setEncryptedTyping::InternalSwap(TL_messages_setEncryptedTyping* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata TL_messages_setEncryptedTyping::GetMetadata() const {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TL_messages_setEncryptedTyping

// .mtproto.InputEncryptedChat peer = 1;
bool TL_messages_setEncryptedTyping::has_peer() const {
  return this != internal_default_instance() && peer_ != NULL;
}
void TL_messages_setEncryptedTyping::clear_peer() {
  if (GetArenaNoVirtual() == NULL && peer_ != NULL) delete peer_;
  peer_ = NULL;
}
const ::mtproto::InputEncryptedChat& TL_messages_setEncryptedTyping::peer() const {
  const ::mtproto::InputEncryptedChat* p = peer_;
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_setEncryptedTyping.peer)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::InputEncryptedChat*>(
      &::mtproto::_InputEncryptedChat_default_instance_);
}
::mtproto::InputEncryptedChat* TL_messages_setEncryptedTyping::mutable_peer() {
  
  if (peer_ == NULL) {
    peer_ = new ::mtproto::InputEncryptedChat;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_messages_setEncryptedTyping.peer)
  return peer_;
}
::mtproto::InputEncryptedChat* TL_messages_setEncryptedTyping::release_peer() {
  // @@protoc_insertion_point(field_release:mtproto.TL_messages_setEncryptedTyping.peer)
  
  ::mtproto::InputEncryptedChat* temp = peer_;
  peer_ = NULL;
  return temp;
}
void TL_messages_setEncryptedTyping::set_allocated_peer(::mtproto::InputEncryptedChat* peer) {
  delete peer_;
  peer_ = peer;
  if (peer) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_messages_setEncryptedTyping.peer)
}

// .mtproto.Bool typing = 2;
bool TL_messages_setEncryptedTyping::has_typing() const {
  return this != internal_default_instance() && typing_ != NULL;
}
void TL_messages_setEncryptedTyping::clear_typing() {
  if (GetArenaNoVirtual() == NULL && typing_ != NULL) delete typing_;
  typing_ = NULL;
}
const ::mtproto::Bool& TL_messages_setEncryptedTyping::typing() const {
  const ::mtproto::Bool* p = typing_;
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_setEncryptedTyping.typing)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::Bool*>(
      &::mtproto::_Bool_default_instance_);
}
::mtproto::Bool* TL_messages_setEncryptedTyping::mutable_typing() {
  
  if (typing_ == NULL) {
    typing_ = new ::mtproto::Bool;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_messages_setEncryptedTyping.typing)
  return typing_;
}
::mtproto::Bool* TL_messages_setEncryptedTyping::release_typing() {
  // @@protoc_insertion_point(field_release:mtproto.TL_messages_setEncryptedTyping.typing)
  
  ::mtproto::Bool* temp = typing_;
  typing_ = NULL;
  return temp;
}
void TL_messages_setEncryptedTyping::set_allocated_typing(::mtproto::Bool* typing) {
  delete typing_;
  typing_ = typing;
  if (typing) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_messages_setEncryptedTyping.typing)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TL_messages_readEncryptedHistory::kPeerFieldNumber;
const int TL_messages_readEncryptedHistory::kMaxDateFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TL_messages_readEncryptedHistory::TL_messages_readEncryptedHistory()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.TL_messages_readEncryptedHistory)
}
TL_messages_readEncryptedHistory::TL_messages_readEncryptedHistory(const TL_messages_readEncryptedHistory& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_peer()) {
    peer_ = new ::mtproto::InputEncryptedChat(*from.peer_);
  } else {
    peer_ = NULL;
  }
  max_date_ = from.max_date_;
  // @@protoc_insertion_point(copy_constructor:mtproto.TL_messages_readEncryptedHistory)
}

void TL_messages_readEncryptedHistory::SharedCtor() {
  ::memset(&peer_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&max_date_) -
      reinterpret_cast<char*>(&peer_)) + sizeof(max_date_));
  _cached_size_ = 0;
}

TL_messages_readEncryptedHistory::~TL_messages_readEncryptedHistory() {
  // @@protoc_insertion_point(destructor:mtproto.TL_messages_readEncryptedHistory)
  SharedDtor();
}

void TL_messages_readEncryptedHistory::SharedDtor() {
  if (this != internal_default_instance()) delete peer_;
}

void TL_messages_readEncryptedHistory::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TL_messages_readEncryptedHistory::descriptor() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TL_messages_readEncryptedHistory& TL_messages_readEncryptedHistory::default_instance() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  return *internal_default_instance();
}

TL_messages_readEncryptedHistory* TL_messages_readEncryptedHistory::New(::google::protobuf::Arena* arena) const {
  TL_messages_readEncryptedHistory* n = new TL_messages_readEncryptedHistory;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TL_messages_readEncryptedHistory::Swap(TL_messages_readEncryptedHistory* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TL_messages_readEncryptedHistory::InternalSwap(TL_messages_readEncryptedHistory* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata TL_messages_readEncryptedHistory::GetMetadata() const {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TL_messages_readEncryptedHistory

// .mtproto.InputEncryptedChat peer = 1;
bool TL_messages_readEncryptedHistory::has_peer() const {
  return this != internal_default_instance() && peer_ != NULL;
}
void TL_messages_readEncryptedHistory::clear_peer() {
  if (GetArenaNoVirtual() == NULL && peer_ != NULL) delete peer_;
  peer_ = NULL;
}
const ::mtproto::InputEncryptedChat& TL_messages_readEncryptedHistory::peer() const {
  const ::mtproto::InputEncryptedChat* p = peer_;
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_readEncryptedHistory.peer)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::InputEncryptedChat*>(
      &::mtproto::_InputEncryptedChat_default_instance_);
}
::mtproto::InputEncryptedChat* TL_messages_readEncryptedHistory::mutable_peer() {
  
  if (peer_ == NULL) {
    peer_ = new ::mtproto::InputEncryptedChat;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_messages_readEncryptedHistory.peer)
  return peer_;
}
::mtproto::InputEncryptedChat* TL_messages_readEncryptedHistory::release_peer() {
  // @@protoc_insertion_point(field_release:mtproto.TL_messages_readEncryptedHistory.peer)
  
  ::mtproto::InputEncryptedChat* temp = peer_;
  peer_ = NULL;
  return temp;
}
void TL_messages_readEncryptedHistory::set_allocated_peer(::mtproto::InputEncryptedChat* peer) {
  delete peer_;
  peer_ = peer;
  if (peer) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_messages_readEncryptedHistory.peer)
}

// int32 max_date = 2;
void TL_messages_readEncryptedHistory::clear_max_date() {
  max_date_ = 0;
}
::google::protobuf::int32 TL_messages_readEncryptedHistory::max_date() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_readEncryptedHistory.max_date)
  return max_date_;
}
void TL_messages_readEncryptedHistory::set_max_date(::google::protobuf::int32 value) {
  
  max_date_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_readEncryptedHistory.max_date)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TL_messages_sendEncrypted::kPeerFieldNumber;
const int TL_messages_sendEncrypted::kRandomIdFieldNumber;
const int TL_messages_sendEncrypted::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TL_messages_sendEncrypted::TL_messages_sendEncrypted()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.TL_messages_sendEncrypted)
}
TL_messages_sendEncrypted::TL_messages_sendEncrypted(const TL_messages_sendEncrypted& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.data().size() > 0) {
    data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
  }
  if (from.has_peer()) {
    peer_ = new ::mtproto::InputEncryptedChat(*from.peer_);
  } else {
    peer_ = NULL;
  }
  random_id_ = from.random_id_;
  // @@protoc_insertion_point(copy_constructor:mtproto.TL_messages_sendEncrypted)
}

void TL_messages_sendEncrypted::SharedCtor() {
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&peer_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&random_id_) -
      reinterpret_cast<char*>(&peer_)) + sizeof(random_id_));
  _cached_size_ = 0;
}

TL_messages_sendEncrypted::~TL_messages_sendEncrypted() {
  // @@protoc_insertion_point(destructor:mtproto.TL_messages_sendEncrypted)
  SharedDtor();
}

void TL_messages_sendEncrypted::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete peer_;
}

void TL_messages_sendEncrypted::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TL_messages_sendEncrypted::descriptor() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TL_messages_sendEncrypted& TL_messages_sendEncrypted::default_instance() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  return *internal_default_instance();
}

TL_messages_sendEncrypted* TL_messages_sendEncrypted::New(::google::protobuf::Arena* arena) const {
  TL_messages_sendEncrypted* n = new TL_messages_sendEncrypted;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TL_messages_sendEncrypted::Swap(TL_messages_sendEncrypted* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TL_messages_sendEncrypted::InternalSwap(TL_messages_sendEncrypted* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata TL_messages_sendEncrypted::GetMetadata() const {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TL_messages_sendEncrypted

// .mtproto.InputEncryptedChat peer = 1;
bool TL_messages_sendEncrypted::has_peer() const {
  return this != internal_default_instance() && peer_ != NULL;
}
void TL_messages_sendEncrypted::clear_peer() {
  if (GetArenaNoVirtual() == NULL && peer_ != NULL) delete peer_;
  peer_ = NULL;
}
const ::mtproto::InputEncryptedChat& TL_messages_sendEncrypted::peer() const {
  const ::mtproto::InputEncryptedChat* p = peer_;
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_sendEncrypted.peer)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::InputEncryptedChat*>(
      &::mtproto::_InputEncryptedChat_default_instance_);
}
::mtproto::InputEncryptedChat* TL_messages_sendEncrypted::mutable_peer() {
  
  if (peer_ == NULL) {
    peer_ = new ::mtproto::InputEncryptedChat;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_messages_sendEncrypted.peer)
  return peer_;
}
::mtproto::InputEncryptedChat* TL_messages_sendEncrypted::release_peer() {
  // @@protoc_insertion_point(field_release:mtproto.TL_messages_sendEncrypted.peer)
  
  ::mtproto::InputEncryptedChat* temp = peer_;
  peer_ = NULL;
  return temp;
}
void TL_messages_sendEncrypted::set_allocated_peer(::mtproto::InputEncryptedChat* peer) {
  delete peer_;
  peer_ = peer;
  if (peer) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_messages_sendEncrypted.peer)
}

// int64 random_id = 2;
void TL_messages_sendEncrypted::clear_random_id() {
  random_id_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 TL_messages_sendEncrypted::random_id() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_sendEncrypted.random_id)
  return random_id_;
}
void TL_messages_sendEncrypted::set_random_id(::google::protobuf::int64 value) {
  
  random_id_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_sendEncrypted.random_id)
}

// bytes data = 3;
void TL_messages_sendEncrypted::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& TL_messages_sendEncrypted::data() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_sendEncrypted.data)
  return data_.GetNoArena();
}
void TL_messages_sendEncrypted::set_data(const ::std::string& value) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_sendEncrypted.data)
}
#if LANG_CXX11
void TL_messages_sendEncrypted::set_data(::std::string&& value) {
  
  data_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mtproto.TL_messages_sendEncrypted.data)
}
#endif
void TL_messages_sendEncrypted::set_data(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtproto.TL_messages_sendEncrypted.data)
}
void TL_messages_sendEncrypted::set_data(const void* value, size_t size) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtproto.TL_messages_sendEncrypted.data)
}
::std::string* TL_messages_sendEncrypted::mutable_data() {
  
  // @@protoc_insertion_point(field_mutable:mtproto.TL_messages_sendEncrypted.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* TL_messages_sendEncrypted::release_data() {
  // @@protoc_insertion_point(field_release:mtproto.TL_messages_sendEncrypted.data)
  
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TL_messages_sendEncrypted::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    
  } else {
    
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_messages_sendEncrypted.data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TL_messages_sendEncryptedFile::kPeerFieldNumber;
const int TL_messages_sendEncryptedFile::kRandomIdFieldNumber;
const int TL_messages_sendEncryptedFile::kDataFieldNumber;
const int TL_messages_sendEncryptedFile::kFileFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TL_messages_sendEncryptedFile::TL_messages_sendEncryptedFile()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.TL_messages_sendEncryptedFile)
}
TL_messages_sendEncryptedFile::TL_messages_sendEncryptedFile(const TL_messages_sendEncryptedFile& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.data().size() > 0) {
    data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
  }
  if (from.has_peer()) {
    peer_ = new ::mtproto::InputEncryptedChat(*from.peer_);
  } else {
    peer_ = NULL;
  }
  if (from.has_file()) {
    file_ = new ::mtproto::InputEncryptedFile(*from.file_);
  } else {
    file_ = NULL;
  }
  random_id_ = from.random_id_;
  // @@protoc_insertion_point(copy_constructor:mtproto.TL_messages_sendEncryptedFile)
}

void TL_messages_sendEncryptedFile::SharedCtor() {
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&peer_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&random_id_) -
      reinterpret_cast<char*>(&peer_)) + sizeof(random_id_));
  _cached_size_ = 0;
}

TL_messages_sendEncryptedFile::~TL_messages_sendEncryptedFile() {
  // @@protoc_insertion_point(destructor:mtproto.TL_messages_sendEncryptedFile)
  SharedDtor();
}

void TL_messages_sendEncryptedFile::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete peer_;
  if (this != internal_default_instance()) delete file_;
}

void TL_messages_sendEncryptedFile::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TL_messages_sendEncryptedFile::descriptor() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TL_messages_sendEncryptedFile& TL_messages_sendEncryptedFile::default_instance() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  return *internal_default_instance();
}

TL_messages_sendEncryptedFile* TL_messages_sendEncryptedFile::New(::google::protobuf::Arena* arena) const {
  TL_messages_sendEncryptedFile* n = new TL_messages_sendEncryptedFile;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TL_messages_sendEncryptedFile::Swap(TL_messages_sendEncryptedFile* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TL_messages_sendEncryptedFile::InternalSwap(TL_messages_sendEncryptedFile* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata TL_messages_sendEncryptedFile::GetMetadata() const {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TL_messages_sendEncryptedFile

// .mtproto.InputEncryptedChat peer = 1;
bool TL_messages_sendEncryptedFile::has_peer() const {
  return this != internal_default_instance() && peer_ != NULL;
}
void TL_messages_sendEncryptedFile::clear_peer() {
  if (GetArenaNoVirtual() == NULL && peer_ != NULL) delete peer_;
  peer_ = NULL;
}
const ::mtproto::InputEncryptedChat& TL_messages_sendEncryptedFile::peer() const {
  const ::mtproto::InputEncryptedChat* p = peer_;
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_sendEncryptedFile.peer)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::InputEncryptedChat*>(
      &::mtproto::_InputEncryptedChat_default_instance_);
}
::mtproto::InputEncryptedChat* TL_messages_sendEncryptedFile::mutable_peer() {
  
  if (peer_ == NULL) {
    peer_ = new ::mtproto::InputEncryptedChat;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_messages_sendEncryptedFile.peer)
  return peer_;
}
::mtproto::InputEncryptedChat* TL_messages_sendEncryptedFile::release_peer() {
  // @@protoc_insertion_point(field_release:mtproto.TL_messages_sendEncryptedFile.peer)
  
  ::mtproto::InputEncryptedChat* temp = peer_;
  peer_ = NULL;
  return temp;
}
void TL_messages_sendEncryptedFile::set_allocated_peer(::mtproto::InputEncryptedChat* peer) {
  delete peer_;
  peer_ = peer;
  if (peer) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_messages_sendEncryptedFile.peer)
}

// int64 random_id = 2;
void TL_messages_sendEncryptedFile::clear_random_id() {
  random_id_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 TL_messages_sendEncryptedFile::random_id() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_sendEncryptedFile.random_id)
  return random_id_;
}
void TL_messages_sendEncryptedFile::set_random_id(::google::protobuf::int64 value) {
  
  random_id_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_sendEncryptedFile.random_id)
}

// bytes data = 3;
void TL_messages_sendEncryptedFile::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& TL_messages_sendEncryptedFile::data() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_sendEncryptedFile.data)
  return data_.GetNoArena();
}
void TL_messages_sendEncryptedFile::set_data(const ::std::string& value) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_sendEncryptedFile.data)
}
#if LANG_CXX11
void TL_messages_sendEncryptedFile::set_data(::std::string&& value) {
  
  data_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mtproto.TL_messages_sendEncryptedFile.data)
}
#endif
void TL_messages_sendEncryptedFile::set_data(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtproto.TL_messages_sendEncryptedFile.data)
}
void TL_messages_sendEncryptedFile::set_data(const void* value, size_t size) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtproto.TL_messages_sendEncryptedFile.data)
}
::std::string* TL_messages_sendEncryptedFile::mutable_data() {
  
  // @@protoc_insertion_point(field_mutable:mtproto.TL_messages_sendEncryptedFile.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* TL_messages_sendEncryptedFile::release_data() {
  // @@protoc_insertion_point(field_release:mtproto.TL_messages_sendEncryptedFile.data)
  
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TL_messages_sendEncryptedFile::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    
  } else {
    
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_messages_sendEncryptedFile.data)
}

// .mtproto.InputEncryptedFile file = 4;
bool TL_messages_sendEncryptedFile::has_file() const {
  return this != internal_default_instance() && file_ != NULL;
}
void TL_messages_sendEncryptedFile::clear_file() {
  if (GetArenaNoVirtual() == NULL && file_ != NULL) delete file_;
  file_ = NULL;
}
const ::mtproto::InputEncryptedFile& TL_messages_sendEncryptedFile::file() const {
  const ::mtproto::InputEncryptedFile* p = file_;
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_sendEncryptedFile.file)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::InputEncryptedFile*>(
      &::mtproto::_InputEncryptedFile_default_instance_);
}
::mtproto::InputEncryptedFile* TL_messages_sendEncryptedFile::mutable_file() {
  
  if (file_ == NULL) {
    file_ = new ::mtproto::InputEncryptedFile;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_messages_sendEncryptedFile.file)
  return file_;
}
::mtproto::InputEncryptedFile* TL_messages_sendEncryptedFile::release_file() {
  // @@protoc_insertion_point(field_release:mtproto.TL_messages_sendEncryptedFile.file)
  
  ::mtproto::InputEncryptedFile* temp = file_;
  file_ = NULL;
  return temp;
}
void TL_messages_sendEncryptedFile::set_allocated_file(::mtproto::InputEncryptedFile* file) {
  delete file_;
  file_ = file;
  if (file) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_messages_sendEncryptedFile.file)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TL_messages_sendEncryptedService::kPeerFieldNumber;
const int TL_messages_sendEncryptedService::kRandomIdFieldNumber;
const int TL_messages_sendEncryptedService::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TL_messages_sendEncryptedService::TL_messages_sendEncryptedService()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.TL_messages_sendEncryptedService)
}
TL_messages_sendEncryptedService::TL_messages_sendEncryptedService(const TL_messages_sendEncryptedService& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.data().size() > 0) {
    data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
  }
  if (from.has_peer()) {
    peer_ = new ::mtproto::InputEncryptedChat(*from.peer_);
  } else {
    peer_ = NULL;
  }
  random_id_ = from.random_id_;
  // @@protoc_insertion_point(copy_constructor:mtproto.TL_messages_sendEncryptedService)
}

void TL_messages_sendEncryptedService::SharedCtor() {
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&peer_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&random_id_) -
      reinterpret_cast<char*>(&peer_)) + sizeof(random_id_));
  _cached_size_ = 0;
}

TL_messages_sendEncryptedService::~TL_messages_sendEncryptedService() {
  // @@protoc_insertion_point(destructor:mtproto.TL_messages_sendEncryptedService)
  SharedDtor();
}

void TL_messages_sendEncryptedService::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete peer_;
}

void TL_messages_sendEncryptedService::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TL_messages_sendEncryptedService::descriptor() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TL_messages_sendEncryptedService& TL_messages_sendEncryptedService::default_instance() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  return *internal_default_instance();
}

TL_messages_sendEncryptedService* TL_messages_sendEncryptedService::New(::google::protobuf::Arena* arena) const {
  TL_messages_sendEncryptedService* n = new TL_messages_sendEncryptedService;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TL_messages_sendEncryptedService::Swap(TL_messages_sendEncryptedService* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TL_messages_sendEncryptedService::InternalSwap(TL_messages_sendEncryptedService* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata TL_messages_sendEncryptedService::GetMetadata() const {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TL_messages_sendEncryptedService

// .mtproto.InputEncryptedChat peer = 1;
bool TL_messages_sendEncryptedService::has_peer() const {
  return this != internal_default_instance() && peer_ != NULL;
}
void TL_messages_sendEncryptedService::clear_peer() {
  if (GetArenaNoVirtual() == NULL && peer_ != NULL) delete peer_;
  peer_ = NULL;
}
const ::mtproto::InputEncryptedChat& TL_messages_sendEncryptedService::peer() const {
  const ::mtproto::InputEncryptedChat* p = peer_;
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_sendEncryptedService.peer)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::InputEncryptedChat*>(
      &::mtproto::_InputEncryptedChat_default_instance_);
}
::mtproto::InputEncryptedChat* TL_messages_sendEncryptedService::mutable_peer() {
  
  if (peer_ == NULL) {
    peer_ = new ::mtproto::InputEncryptedChat;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_messages_sendEncryptedService.peer)
  return peer_;
}
::mtproto::InputEncryptedChat* TL_messages_sendEncryptedService::release_peer() {
  // @@protoc_insertion_point(field_release:mtproto.TL_messages_sendEncryptedService.peer)
  
  ::mtproto::InputEncryptedChat* temp = peer_;
  peer_ = NULL;
  return temp;
}
void TL_messages_sendEncryptedService::set_allocated_peer(::mtproto::InputEncryptedChat* peer) {
  delete peer_;
  peer_ = peer;
  if (peer) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_messages_sendEncryptedService.peer)
}

// int64 random_id = 2;
void TL_messages_sendEncryptedService::clear_random_id() {
  random_id_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 TL_messages_sendEncryptedService::random_id() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_sendEncryptedService.random_id)
  return random_id_;
}
void TL_messages_sendEncryptedService::set_random_id(::google::protobuf::int64 value) {
  
  random_id_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_sendEncryptedService.random_id)
}

// bytes data = 3;
void TL_messages_sendEncryptedService::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& TL_messages_sendEncryptedService::data() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_sendEncryptedService.data)
  return data_.GetNoArena();
}
void TL_messages_sendEncryptedService::set_data(const ::std::string& value) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_sendEncryptedService.data)
}
#if LANG_CXX11
void TL_messages_sendEncryptedService::set_data(::std::string&& value) {
  
  data_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mtproto.TL_messages_sendEncryptedService.data)
}
#endif
void TL_messages_sendEncryptedService::set_data(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtproto.TL_messages_sendEncryptedService.data)
}
void TL_messages_sendEncryptedService::set_data(const void* value, size_t size) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtproto.TL_messages_sendEncryptedService.data)
}
::std::string* TL_messages_sendEncryptedService::mutable_data() {
  
  // @@protoc_insertion_point(field_mutable:mtproto.TL_messages_sendEncryptedService.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* TL_messages_sendEncryptedService::release_data() {
  // @@protoc_insertion_point(field_release:mtproto.TL_messages_sendEncryptedService.data)
  
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TL_messages_sendEncryptedService::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    
  } else {
    
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_messages_sendEncryptedService.data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TL_messages_receivedQueue::kMaxQtsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TL_messages_receivedQueue::TL_messages_receivedQueue()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.TL_messages_receivedQueue)
}
TL_messages_receivedQueue::TL_messages_receivedQueue(const TL_messages_receivedQueue& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  max_qts_ = from.max_qts_;
  // @@protoc_insertion_point(copy_constructor:mtproto.TL_messages_receivedQueue)
}

void TL_messages_receivedQueue::SharedCtor() {
  max_qts_ = 0;
  _cached_size_ = 0;
}

TL_messages_receivedQueue::~TL_messages_receivedQueue() {
  // @@protoc_insertion_point(destructor:mtproto.TL_messages_receivedQueue)
  SharedDtor();
}

void TL_messages_receivedQueue::SharedDtor() {
}

void TL_messages_receivedQueue::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TL_messages_receivedQueue::descriptor() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TL_messages_receivedQueue& TL_messages_receivedQueue::default_instance() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  return *internal_default_instance();
}

TL_messages_receivedQueue* TL_messages_receivedQueue::New(::google::protobuf::Arena* arena) const {
  TL_messages_receivedQueue* n = new TL_messages_receivedQueue;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TL_messages_receivedQueue::Swap(TL_messages_receivedQueue* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TL_messages_receivedQueue::InternalSwap(TL_messages_receivedQueue* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata TL_messages_receivedQueue::GetMetadata() const {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TL_messages_receivedQueue

// int32 max_qts = 1;
void TL_messages_receivedQueue::clear_max_qts() {
  max_qts_ = 0;
}
::google::protobuf::int32 TL_messages_receivedQueue::max_qts() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_receivedQueue.max_qts)
  return max_qts_;
}
void TL_messages_receivedQueue::set_max_qts(::google::protobuf::int32 value) {
  
  max_qts_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_receivedQueue.max_qts)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TL_messages_reportEncryptedSpam::kPeerFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TL_messages_reportEncryptedSpam::TL_messages_reportEncryptedSpam()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.TL_messages_reportEncryptedSpam)
}
TL_messages_reportEncryptedSpam::TL_messages_reportEncryptedSpam(const TL_messages_reportEncryptedSpam& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_peer()) {
    peer_ = new ::mtproto::InputEncryptedChat(*from.peer_);
  } else {
    peer_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:mtproto.TL_messages_reportEncryptedSpam)
}

void TL_messages_reportEncryptedSpam::SharedCtor() {
  peer_ = NULL;
  _cached_size_ = 0;
}

TL_messages_reportEncryptedSpam::~TL_messages_reportEncryptedSpam() {
  // @@protoc_insertion_point(destructor:mtproto.TL_messages_reportEncryptedSpam)
  SharedDtor();
}

void TL_messages_reportEncryptedSpam::SharedDtor() {
  if (this != internal_default_instance()) delete peer_;
}

void TL_messages_reportEncryptedSpam::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TL_messages_reportEncryptedSpam::descriptor() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TL_messages_reportEncryptedSpam& TL_messages_reportEncryptedSpam::default_instance() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  return *internal_default_instance();
}

TL_messages_reportEncryptedSpam* TL_messages_reportEncryptedSpam::New(::google::protobuf::Arena* arena) const {
  TL_messages_reportEncryptedSpam* n = new TL_messages_reportEncryptedSpam;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TL_messages_reportEncryptedSpam::Swap(TL_messages_reportEncryptedSpam* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TL_messages_reportEncryptedSpam::InternalSwap(TL_messages_reportEncryptedSpam* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata TL_messages_reportEncryptedSpam::GetMetadata() const {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TL_messages_reportEncryptedSpam

// .mtproto.InputEncryptedChat peer = 1;
bool TL_messages_reportEncryptedSpam::has_peer() const {
  return this != internal_default_instance() && peer_ != NULL;
}
void TL_messages_reportEncryptedSpam::clear_peer() {
  if (GetArenaNoVirtual() == NULL && peer_ != NULL) delete peer_;
  peer_ = NULL;
}
const ::mtproto::InputEncryptedChat& TL_messages_reportEncryptedSpam::peer() const {
  const ::mtproto::InputEncryptedChat* p = peer_;
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_reportEncryptedSpam.peer)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::InputEncryptedChat*>(
      &::mtproto::_InputEncryptedChat_default_instance_);
}
::mtproto::InputEncryptedChat* TL_messages_reportEncryptedSpam::mutable_peer() {
  
  if (peer_ == NULL) {
    peer_ = new ::mtproto::InputEncryptedChat;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_messages_reportEncryptedSpam.peer)
  return peer_;
}
::mtproto::InputEncryptedChat* TL_messages_reportEncryptedSpam::release_peer() {
  // @@protoc_insertion_point(field_release:mtproto.TL_messages_reportEncryptedSpam.peer)
  
  ::mtproto::InputEncryptedChat* temp = peer_;
  peer_ = NULL;
  return temp;
}
void TL_messages_reportEncryptedSpam::set_allocated_peer(::mtproto::InputEncryptedChat* peer) {
  delete peer_;
  peer_ = peer;
  if (peer) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_messages_reportEncryptedSpam.peer)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TL_messages_readMessageContents::kIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TL_messages_readMessageContents::TL_messages_readMessageContents()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.TL_messages_readMessageContents)
}
TL_messages_readMessageContents::TL_messages_readMessageContents(const TL_messages_readMessageContents& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      id_(from.id_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:mtproto.TL_messages_readMessageContents)
}

void TL_messages_readMessageContents::SharedCtor() {
  _cached_size_ = 0;
}

TL_messages_readMessageContents::~TL_messages_readMessageContents() {
  // @@protoc_insertion_point(destructor:mtproto.TL_messages_readMessageContents)
  SharedDtor();
}

void TL_messages_readMessageContents::SharedDtor() {
}

void TL_messages_readMessageContents::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TL_messages_readMessageContents::descriptor() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TL_messages_readMessageContents& TL_messages_readMessageContents::default_instance() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  return *internal_default_instance();
}

TL_messages_readMessageContents* TL_messages_readMessageContents::New(::google::protobuf::Arena* arena) const {
  TL_messages_readMessageContents* n = new TL_messages_readMessageContents;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TL_messages_readMessageContents::Swap(TL_messages_readMessageContents* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TL_messages_readMessageContents::InternalSwap(TL_messages_readMessageContents* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata TL_messages_readMessageContents::GetMetadata() const {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TL_messages_readMessageContents

// repeated int32 id = 1;
int TL_messages_readMessageContents::id_size() const {
  return id_.size();
}
void TL_messages_readMessageContents::clear_id() {
  id_.Clear();
}
::google::protobuf::int32 TL_messages_readMessageContents::id(int index) const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_readMessageContents.id)
  return id_.Get(index);
}
void TL_messages_readMessageContents::set_id(int index, ::google::protobuf::int32 value) {
  id_.Set(index, value);
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_readMessageContents.id)
}
void TL_messages_readMessageContents::add_id(::google::protobuf::int32 value) {
  id_.Add(value);
  // @@protoc_insertion_point(field_add:mtproto.TL_messages_readMessageContents.id)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
TL_messages_readMessageContents::id() const {
  // @@protoc_insertion_point(field_list:mtproto.TL_messages_readMessageContents.id)
  return id_;
}
::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
TL_messages_readMessageContents::mutable_id() {
  // @@protoc_insertion_point(field_mutable_list:mtproto.TL_messages_readMessageContents.id)
  return &id_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TL_messages_getStickers::kEmoticonFieldNumber;
const int TL_messages_getStickers::kHashFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TL_messages_getStickers::TL_messages_getStickers()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.TL_messages_getStickers)
}
TL_messages_getStickers::TL_messages_getStickers(const TL_messages_getStickers& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  emoticon_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.emoticon().size() > 0) {
    emoticon_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.emoticon_);
  }
  hash_ = from.hash_;
  // @@protoc_insertion_point(copy_constructor:mtproto.TL_messages_getStickers)
}

void TL_messages_getStickers::SharedCtor() {
  emoticon_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  hash_ = 0;
  _cached_size_ = 0;
}

TL_messages_getStickers::~TL_messages_getStickers() {
  // @@protoc_insertion_point(destructor:mtproto.TL_messages_getStickers)
  SharedDtor();
}

void TL_messages_getStickers::SharedDtor() {
  emoticon_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void TL_messages_getStickers::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TL_messages_getStickers::descriptor() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TL_messages_getStickers& TL_messages_getStickers::default_instance() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  return *internal_default_instance();
}

TL_messages_getStickers* TL_messages_getStickers::New(::google::protobuf::Arena* arena) const {
  TL_messages_getStickers* n = new TL_messages_getStickers;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TL_messages_getStickers::Swap(TL_messages_getStickers* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TL_messages_getStickers::InternalSwap(TL_messages_getStickers* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata TL_messages_getStickers::GetMetadata() const {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TL_messages_getStickers

// string emoticon = 1;
void TL_messages_getStickers::clear_emoticon() {
  emoticon_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& TL_messages_getStickers::emoticon() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_getStickers.emoticon)
  return emoticon_.GetNoArena();
}
void TL_messages_getStickers::set_emoticon(const ::std::string& value) {
  
  emoticon_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_getStickers.emoticon)
}
#if LANG_CXX11
void TL_messages_getStickers::set_emoticon(::std::string&& value) {
  
  emoticon_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mtproto.TL_messages_getStickers.emoticon)
}
#endif
void TL_messages_getStickers::set_emoticon(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  emoticon_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtproto.TL_messages_getStickers.emoticon)
}
void TL_messages_getStickers::set_emoticon(const char* value, size_t size) {
  
  emoticon_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtproto.TL_messages_getStickers.emoticon)
}
::std::string* TL_messages_getStickers::mutable_emoticon() {
  
  // @@protoc_insertion_point(field_mutable:mtproto.TL_messages_getStickers.emoticon)
  return emoticon_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* TL_messages_getStickers::release_emoticon() {
  // @@protoc_insertion_point(field_release:mtproto.TL_messages_getStickers.emoticon)
  
  return emoticon_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TL_messages_getStickers::set_allocated_emoticon(::std::string* emoticon) {
  if (emoticon != NULL) {
    
  } else {
    
  }
  emoticon_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), emoticon);
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_messages_getStickers.emoticon)
}

// int32 hash = 2;
void TL_messages_getStickers::clear_hash() {
  hash_ = 0;
}
::google::protobuf::int32 TL_messages_getStickers::hash() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_getStickers.hash)
  return hash_;
}
void TL_messages_getStickers::set_hash(::google::protobuf::int32 value) {
  
  hash_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_getStickers.hash)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TL_messages_getAllStickers::kHashFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TL_messages_getAllStickers::TL_messages_getAllStickers()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.TL_messages_getAllStickers)
}
TL_messages_getAllStickers::TL_messages_getAllStickers(const TL_messages_getAllStickers& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  hash_ = from.hash_;
  // @@protoc_insertion_point(copy_constructor:mtproto.TL_messages_getAllStickers)
}

void TL_messages_getAllStickers::SharedCtor() {
  hash_ = 0;
  _cached_size_ = 0;
}

TL_messages_getAllStickers::~TL_messages_getAllStickers() {
  // @@protoc_insertion_point(destructor:mtproto.TL_messages_getAllStickers)
  SharedDtor();
}

void TL_messages_getAllStickers::SharedDtor() {
}

void TL_messages_getAllStickers::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TL_messages_getAllStickers::descriptor() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TL_messages_getAllStickers& TL_messages_getAllStickers::default_instance() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  return *internal_default_instance();
}

TL_messages_getAllStickers* TL_messages_getAllStickers::New(::google::protobuf::Arena* arena) const {
  TL_messages_getAllStickers* n = new TL_messages_getAllStickers;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TL_messages_getAllStickers::Swap(TL_messages_getAllStickers* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TL_messages_getAllStickers::InternalSwap(TL_messages_getAllStickers* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata TL_messages_getAllStickers::GetMetadata() const {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TL_messages_getAllStickers

// int32 hash = 1;
void TL_messages_getAllStickers::clear_hash() {
  hash_ = 0;
}
::google::protobuf::int32 TL_messages_getAllStickers::hash() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_getAllStickers.hash)
  return hash_;
}
void TL_messages_getAllStickers::set_hash(::google::protobuf::int32 value) {
  
  hash_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_getAllStickers.hash)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TL_messages_getWebPagePreview::kMessageFieldNumber;
const int TL_messages_getWebPagePreview::kEntitiesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TL_messages_getWebPagePreview::TL_messages_getWebPagePreview()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.TL_messages_getWebPagePreview)
}
TL_messages_getWebPagePreview::TL_messages_getWebPagePreview(const TL_messages_getWebPagePreview& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      entities_(from.entities_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.message().size() > 0) {
    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
  // @@protoc_insertion_point(copy_constructor:mtproto.TL_messages_getWebPagePreview)
}

void TL_messages_getWebPagePreview::SharedCtor() {
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

TL_messages_getWebPagePreview::~TL_messages_getWebPagePreview() {
  // @@protoc_insertion_point(destructor:mtproto.TL_messages_getWebPagePreview)
  SharedDtor();
}

void TL_messages_getWebPagePreview::SharedDtor() {
  message_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void TL_messages_getWebPagePreview::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TL_messages_getWebPagePreview::descriptor() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TL_messages_getWebPagePreview& TL_messages_getWebPagePreview::default_instance() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  return *internal_default_instance();
}

TL_messages_getWebPagePreview* TL_messages_getWebPagePreview::New(::google::protobuf::Arena* arena) const {
  TL_messages_getWebPagePreview* n = new TL_messages_getWebPagePreview;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TL_messages_getWebPagePreview::Swap(TL_messages_getWebPagePreview* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TL_messages_getWebPagePreview::InternalSwap(TL_messages_getWebPagePreview* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata TL_messages_getWebPagePreview::GetMetadata() const {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TL_messages_getWebPagePreview

// string message = 2;
void TL_messages_getWebPagePreview::clear_message() {
  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& TL_messages_getWebPagePreview::message() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_getWebPagePreview.message)
  return message_.GetNoArena();
}
void TL_messages_getWebPagePreview::set_message(const ::std::string& value) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_getWebPagePreview.message)
}
#if LANG_CXX11
void TL_messages_getWebPagePreview::set_message(::std::string&& value) {
  
  message_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mtproto.TL_messages_getWebPagePreview.message)
}
#endif
void TL_messages_getWebPagePreview::set_message(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtproto.TL_messages_getWebPagePreview.message)
}
void TL_messages_getWebPagePreview::set_message(const char* value, size_t size) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtproto.TL_messages_getWebPagePreview.message)
}
::std::string* TL_messages_getWebPagePreview::mutable_message() {
  
  // @@protoc_insertion_point(field_mutable:mtproto.TL_messages_getWebPagePreview.message)
  return message_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* TL_messages_getWebPagePreview::release_message() {
  // @@protoc_insertion_point(field_release:mtproto.TL_messages_getWebPagePreview.message)
  
  return message_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TL_messages_getWebPagePreview::set_allocated_message(::std::string* message) {
  if (message != NULL) {
    
  } else {
    
  }
  message_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), message);
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_messages_getWebPagePreview.message)
}

// repeated .mtproto.MessageEntity entities = 3;
int TL_messages_getWebPagePreview::entities_size() const {
  return entities_.size();
}
void TL_messages_getWebPagePreview::clear_entities() {
  entities_.Clear();
}
const ::mtproto::MessageEntity& TL_messages_getWebPagePreview::entities(int index) const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_getWebPagePreview.entities)
  return entities_.Get(index);
}
::mtproto::MessageEntity* TL_messages_getWebPagePreview::mutable_entities(int index) {
  // @@protoc_insertion_point(field_mutable:mtproto.TL_messages_getWebPagePreview.entities)
  return entities_.Mutable(index);
}
::mtproto::MessageEntity* TL_messages_getWebPagePreview::add_entities() {
  // @@protoc_insertion_point(field_add:mtproto.TL_messages_getWebPagePreview.entities)
  return entities_.Add();
}
::google::protobuf::RepeatedPtrField< ::mtproto::MessageEntity >*
TL_messages_getWebPagePreview::mutable_entities() {
  // @@protoc_insertion_point(field_mutable_list:mtproto.TL_messages_getWebPagePreview.entities)
  return &entities_;
}
const ::google::protobuf::RepeatedPtrField< ::mtproto::MessageEntity >&
TL_messages_getWebPagePreview::entities() const {
  // @@protoc_insertion_point(field_list:mtproto.TL_messages_getWebPagePreview.entities)
  return entities_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TL_messages_exportChatInvite::kChatIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TL_messages_exportChatInvite::TL_messages_exportChatInvite()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.TL_messages_exportChatInvite)
}
TL_messages_exportChatInvite::TL_messages_exportChatInvite(const TL_messages_exportChatInvite& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  chat_id_ = from.chat_id_;
  // @@protoc_insertion_point(copy_constructor:mtproto.TL_messages_exportChatInvite)
}

void TL_messages_exportChatInvite::SharedCtor() {
  chat_id_ = 0;
  _cached_size_ = 0;
}

TL_messages_exportChatInvite::~TL_messages_exportChatInvite() {
  // @@protoc_insertion_point(destructor:mtproto.TL_messages_exportChatInvite)
  SharedDtor();
}

void TL_messages_exportChatInvite::SharedDtor() {
}

void TL_messages_exportChatInvite::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TL_messages_exportChatInvite::descriptor() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TL_messages_exportChatInvite& TL_messages_exportChatInvite::default_instance() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  return *internal_default_instance();
}

TL_messages_exportChatInvite* TL_messages_exportChatInvite::New(::google::protobuf::Arena* arena) const {
  TL_messages_exportChatInvite* n = new TL_messages_exportChatInvite;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TL_messages_exportChatInvite::Swap(TL_messages_exportChatInvite* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TL_messages_exportChatInvite::InternalSwap(TL_messages_exportChatInvite* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata TL_messages_exportChatInvite::GetMetadata() const {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TL_messages_exportChatInvite

// int32 chat_id = 1;
void TL_messages_exportChatInvite::clear_chat_id() {
  chat_id_ = 0;
}
::google::protobuf::int32 TL_messages_exportChatInvite::chat_id() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_exportChatInvite.chat_id)
  return chat_id_;
}
void TL_messages_exportChatInvite::set_chat_id(::google::protobuf::int32 value) {
  
  chat_id_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_exportChatInvite.chat_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TL_messages_checkChatInvite::kHashFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TL_messages_checkChatInvite::TL_messages_checkChatInvite()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.TL_messages_checkChatInvite)
}
TL_messages_checkChatInvite::TL_messages_checkChatInvite(const TL_messages_checkChatInvite& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  hash_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.hash().size() > 0) {
    hash_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.hash_);
  }
  // @@protoc_insertion_point(copy_constructor:mtproto.TL_messages_checkChatInvite)
}

void TL_messages_checkChatInvite::SharedCtor() {
  hash_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

TL_messages_checkChatInvite::~TL_messages_checkChatInvite() {
  // @@protoc_insertion_point(destructor:mtproto.TL_messages_checkChatInvite)
  SharedDtor();
}

void TL_messages_checkChatInvite::SharedDtor() {
  hash_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void TL_messages_checkChatInvite::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TL_messages_checkChatInvite::descriptor() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TL_messages_checkChatInvite& TL_messages_checkChatInvite::default_instance() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  return *internal_default_instance();
}

TL_messages_checkChatInvite* TL_messages_checkChatInvite::New(::google::protobuf::Arena* arena) const {
  TL_messages_checkChatInvite* n = new TL_messages_checkChatInvite;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TL_messages_checkChatInvite::Swap(TL_messages_checkChatInvite* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TL_messages_checkChatInvite::InternalSwap(TL_messages_checkChatInvite* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata TL_messages_checkChatInvite::GetMetadata() const {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TL_messages_checkChatInvite

// string hash = 1;
void TL_messages_checkChatInvite::clear_hash() {
  hash_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& TL_messages_checkChatInvite::hash() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_checkChatInvite.hash)
  return hash_.GetNoArena();
}
void TL_messages_checkChatInvite::set_hash(const ::std::string& value) {
  
  hash_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_checkChatInvite.hash)
}
#if LANG_CXX11
void TL_messages_checkChatInvite::set_hash(::std::string&& value) {
  
  hash_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mtproto.TL_messages_checkChatInvite.hash)
}
#endif
void TL_messages_checkChatInvite::set_hash(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  hash_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtproto.TL_messages_checkChatInvite.hash)
}
void TL_messages_checkChatInvite::set_hash(const char* value, size_t size) {
  
  hash_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtproto.TL_messages_checkChatInvite.hash)
}
::std::string* TL_messages_checkChatInvite::mutable_hash() {
  
  // @@protoc_insertion_point(field_mutable:mtproto.TL_messages_checkChatInvite.hash)
  return hash_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* TL_messages_checkChatInvite::release_hash() {
  // @@protoc_insertion_point(field_release:mtproto.TL_messages_checkChatInvite.hash)
  
  return hash_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TL_messages_checkChatInvite::set_allocated_hash(::std::string* hash) {
  if (hash != NULL) {
    
  } else {
    
  }
  hash_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), hash);
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_messages_checkChatInvite.hash)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TL_messages_importChatInvite::kHashFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TL_messages_importChatInvite::TL_messages_importChatInvite()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.TL_messages_importChatInvite)
}
TL_messages_importChatInvite::TL_messages_importChatInvite(const TL_messages_importChatInvite& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  hash_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.hash().size() > 0) {
    hash_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.hash_);
  }
  // @@protoc_insertion_point(copy_constructor:mtproto.TL_messages_importChatInvite)
}

void TL_messages_importChatInvite::SharedCtor() {
  hash_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

TL_messages_importChatInvite::~TL_messages_importChatInvite() {
  // @@protoc_insertion_point(destructor:mtproto.TL_messages_importChatInvite)
  SharedDtor();
}

void TL_messages_importChatInvite::SharedDtor() {
  hash_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void TL_messages_importChatInvite::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TL_messages_importChatInvite::descriptor() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TL_messages_importChatInvite& TL_messages_importChatInvite::default_instance() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  return *internal_default_instance();
}

TL_messages_importChatInvite* TL_messages_importChatInvite::New(::google::protobuf::Arena* arena) const {
  TL_messages_importChatInvite* n = new TL_messages_importChatInvite;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TL_messages_importChatInvite::Swap(TL_messages_importChatInvite* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TL_messages_importChatInvite::InternalSwap(TL_messages_importChatInvite* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata TL_messages_importChatInvite::GetMetadata() const {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TL_messages_importChatInvite

// string hash = 1;
void TL_messages_importChatInvite::clear_hash() {
  hash_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& TL_messages_importChatInvite::hash() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_importChatInvite.hash)
  return hash_.GetNoArena();
}
void TL_messages_importChatInvite::set_hash(const ::std::string& value) {
  
  hash_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_importChatInvite.hash)
}
#if LANG_CXX11
void TL_messages_importChatInvite::set_hash(::std::string&& value) {
  
  hash_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mtproto.TL_messages_importChatInvite.hash)
}
#endif
void TL_messages_importChatInvite::set_hash(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  hash_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtproto.TL_messages_importChatInvite.hash)
}
void TL_messages_importChatInvite::set_hash(const char* value, size_t size) {
  
  hash_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtproto.TL_messages_importChatInvite.hash)
}
::std::string* TL_messages_importChatInvite::mutable_hash() {
  
  // @@protoc_insertion_point(field_mutable:mtproto.TL_messages_importChatInvite.hash)
  return hash_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* TL_messages_importChatInvite::release_hash() {
  // @@protoc_insertion_point(field_release:mtproto.TL_messages_importChatInvite.hash)
  
  return hash_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TL_messages_importChatInvite::set_allocated_hash(::std::string* hash) {
  if (hash != NULL) {
    
  } else {
    
  }
  hash_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), hash);
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_messages_importChatInvite.hash)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TL_messages_getStickerSet::kStickersetFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TL_messages_getStickerSet::TL_messages_getStickerSet()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.TL_messages_getStickerSet)
}
TL_messages_getStickerSet::TL_messages_getStickerSet(const TL_messages_getStickerSet& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_stickerset()) {
    stickerset_ = new ::mtproto::InputStickerSet(*from.stickerset_);
  } else {
    stickerset_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:mtproto.TL_messages_getStickerSet)
}

void TL_messages_getStickerSet::SharedCtor() {
  stickerset_ = NULL;
  _cached_size_ = 0;
}

TL_messages_getStickerSet::~TL_messages_getStickerSet() {
  // @@protoc_insertion_point(destructor:mtproto.TL_messages_getStickerSet)
  SharedDtor();
}

void TL_messages_getStickerSet::SharedDtor() {
  if (this != internal_default_instance()) delete stickerset_;
}

void TL_messages_getStickerSet::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TL_messages_getStickerSet::descriptor() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TL_messages_getStickerSet& TL_messages_getStickerSet::default_instance() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  return *internal_default_instance();
}

TL_messages_getStickerSet* TL_messages_getStickerSet::New(::google::protobuf::Arena* arena) const {
  TL_messages_getStickerSet* n = new TL_messages_getStickerSet;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TL_messages_getStickerSet::Swap(TL_messages_getStickerSet* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TL_messages_getStickerSet::InternalSwap(TL_messages_getStickerSet* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata TL_messages_getStickerSet::GetMetadata() const {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TL_messages_getStickerSet

// .mtproto.InputStickerSet stickerset = 1;
bool TL_messages_getStickerSet::has_stickerset() const {
  return this != internal_default_instance() && stickerset_ != NULL;
}
void TL_messages_getStickerSet::clear_stickerset() {
  if (GetArenaNoVirtual() == NULL && stickerset_ != NULL) delete stickerset_;
  stickerset_ = NULL;
}
const ::mtproto::InputStickerSet& TL_messages_getStickerSet::stickerset() const {
  const ::mtproto::InputStickerSet* p = stickerset_;
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_getStickerSet.stickerset)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::InputStickerSet*>(
      &::mtproto::_InputStickerSet_default_instance_);
}
::mtproto::InputStickerSet* TL_messages_getStickerSet::mutable_stickerset() {
  
  if (stickerset_ == NULL) {
    stickerset_ = new ::mtproto::InputStickerSet;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_messages_getStickerSet.stickerset)
  return stickerset_;
}
::mtproto::InputStickerSet* TL_messages_getStickerSet::release_stickerset() {
  // @@protoc_insertion_point(field_release:mtproto.TL_messages_getStickerSet.stickerset)
  
  ::mtproto::InputStickerSet* temp = stickerset_;
  stickerset_ = NULL;
  return temp;
}
void TL_messages_getStickerSet::set_allocated_stickerset(::mtproto::InputStickerSet* stickerset) {
  delete stickerset_;
  stickerset_ = stickerset;
  if (stickerset) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_messages_getStickerSet.stickerset)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TL_messages_installStickerSet::kStickersetFieldNumber;
const int TL_messages_installStickerSet::kArchivedFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TL_messages_installStickerSet::TL_messages_installStickerSet()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.TL_messages_installStickerSet)
}
TL_messages_installStickerSet::TL_messages_installStickerSet(const TL_messages_installStickerSet& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_stickerset()) {
    stickerset_ = new ::mtproto::InputStickerSet(*from.stickerset_);
  } else {
    stickerset_ = NULL;
  }
  if (from.has_archived()) {
    archived_ = new ::mtproto::Bool(*from.archived_);
  } else {
    archived_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:mtproto.TL_messages_installStickerSet)
}

void TL_messages_installStickerSet::SharedCtor() {
  ::memset(&stickerset_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&archived_) -
      reinterpret_cast<char*>(&stickerset_)) + sizeof(archived_));
  _cached_size_ = 0;
}

TL_messages_installStickerSet::~TL_messages_installStickerSet() {
  // @@protoc_insertion_point(destructor:mtproto.TL_messages_installStickerSet)
  SharedDtor();
}

void TL_messages_installStickerSet::SharedDtor() {
  if (this != internal_default_instance()) delete stickerset_;
  if (this != internal_default_instance()) delete archived_;
}

void TL_messages_installStickerSet::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TL_messages_installStickerSet::descriptor() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TL_messages_installStickerSet& TL_messages_installStickerSet::default_instance() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  return *internal_default_instance();
}

TL_messages_installStickerSet* TL_messages_installStickerSet::New(::google::protobuf::Arena* arena) const {
  TL_messages_installStickerSet* n = new TL_messages_installStickerSet;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TL_messages_installStickerSet::Swap(TL_messages_installStickerSet* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TL_messages_installStickerSet::InternalSwap(TL_messages_installStickerSet* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata TL_messages_installStickerSet::GetMetadata() const {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TL_messages_installStickerSet

// .mtproto.InputStickerSet stickerset = 1;
bool TL_messages_installStickerSet::has_stickerset() const {
  return this != internal_default_instance() && stickerset_ != NULL;
}
void TL_messages_installStickerSet::clear_stickerset() {
  if (GetArenaNoVirtual() == NULL && stickerset_ != NULL) delete stickerset_;
  stickerset_ = NULL;
}
const ::mtproto::InputStickerSet& TL_messages_installStickerSet::stickerset() const {
  const ::mtproto::InputStickerSet* p = stickerset_;
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_installStickerSet.stickerset)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::InputStickerSet*>(
      &::mtproto::_InputStickerSet_default_instance_);
}
::mtproto::InputStickerSet* TL_messages_installStickerSet::mutable_stickerset() {
  
  if (stickerset_ == NULL) {
    stickerset_ = new ::mtproto::InputStickerSet;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_messages_installStickerSet.stickerset)
  return stickerset_;
}
::mtproto::InputStickerSet* TL_messages_installStickerSet::release_stickerset() {
  // @@protoc_insertion_point(field_release:mtproto.TL_messages_installStickerSet.stickerset)
  
  ::mtproto::InputStickerSet* temp = stickerset_;
  stickerset_ = NULL;
  return temp;
}
void TL_messages_installStickerSet::set_allocated_stickerset(::mtproto::InputStickerSet* stickerset) {
  delete stickerset_;
  stickerset_ = stickerset;
  if (stickerset) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_messages_installStickerSet.stickerset)
}

// .mtproto.Bool archived = 2;
bool TL_messages_installStickerSet::has_archived() const {
  return this != internal_default_instance() && archived_ != NULL;
}
void TL_messages_installStickerSet::clear_archived() {
  if (GetArenaNoVirtual() == NULL && archived_ != NULL) delete archived_;
  archived_ = NULL;
}
const ::mtproto::Bool& TL_messages_installStickerSet::archived() const {
  const ::mtproto::Bool* p = archived_;
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_installStickerSet.archived)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::Bool*>(
      &::mtproto::_Bool_default_instance_);
}
::mtproto::Bool* TL_messages_installStickerSet::mutable_archived() {
  
  if (archived_ == NULL) {
    archived_ = new ::mtproto::Bool;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_messages_installStickerSet.archived)
  return archived_;
}
::mtproto::Bool* TL_messages_installStickerSet::release_archived() {
  // @@protoc_insertion_point(field_release:mtproto.TL_messages_installStickerSet.archived)
  
  ::mtproto::Bool* temp = archived_;
  archived_ = NULL;
  return temp;
}
void TL_messages_installStickerSet::set_allocated_archived(::mtproto::Bool* archived) {
  delete archived_;
  archived_ = archived;
  if (archived) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_messages_installStickerSet.archived)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TL_messages_uninstallStickerSet::kStickersetFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TL_messages_uninstallStickerSet::TL_messages_uninstallStickerSet()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.TL_messages_uninstallStickerSet)
}
TL_messages_uninstallStickerSet::TL_messages_uninstallStickerSet(const TL_messages_uninstallStickerSet& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_stickerset()) {
    stickerset_ = new ::mtproto::InputStickerSet(*from.stickerset_);
  } else {
    stickerset_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:mtproto.TL_messages_uninstallStickerSet)
}

void TL_messages_uninstallStickerSet::SharedCtor() {
  stickerset_ = NULL;
  _cached_size_ = 0;
}

TL_messages_uninstallStickerSet::~TL_messages_uninstallStickerSet() {
  // @@protoc_insertion_point(destructor:mtproto.TL_messages_uninstallStickerSet)
  SharedDtor();
}

void TL_messages_uninstallStickerSet::SharedDtor() {
  if (this != internal_default_instance()) delete stickerset_;
}

void TL_messages_uninstallStickerSet::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TL_messages_uninstallStickerSet::descriptor() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TL_messages_uninstallStickerSet& TL_messages_uninstallStickerSet::default_instance() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  return *internal_default_instance();
}

TL_messages_uninstallStickerSet* TL_messages_uninstallStickerSet::New(::google::protobuf::Arena* arena) const {
  TL_messages_uninstallStickerSet* n = new TL_messages_uninstallStickerSet;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TL_messages_uninstallStickerSet::Swap(TL_messages_uninstallStickerSet* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TL_messages_uninstallStickerSet::InternalSwap(TL_messages_uninstallStickerSet* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata TL_messages_uninstallStickerSet::GetMetadata() const {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TL_messages_uninstallStickerSet

// .mtproto.InputStickerSet stickerset = 1;
bool TL_messages_uninstallStickerSet::has_stickerset() const {
  return this != internal_default_instance() && stickerset_ != NULL;
}
void TL_messages_uninstallStickerSet::clear_stickerset() {
  if (GetArenaNoVirtual() == NULL && stickerset_ != NULL) delete stickerset_;
  stickerset_ = NULL;
}
const ::mtproto::InputStickerSet& TL_messages_uninstallStickerSet::stickerset() const {
  const ::mtproto::InputStickerSet* p = stickerset_;
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_uninstallStickerSet.stickerset)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::InputStickerSet*>(
      &::mtproto::_InputStickerSet_default_instance_);
}
::mtproto::InputStickerSet* TL_messages_uninstallStickerSet::mutable_stickerset() {
  
  if (stickerset_ == NULL) {
    stickerset_ = new ::mtproto::InputStickerSet;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_messages_uninstallStickerSet.stickerset)
  return stickerset_;
}
::mtproto::InputStickerSet* TL_messages_uninstallStickerSet::release_stickerset() {
  // @@protoc_insertion_point(field_release:mtproto.TL_messages_uninstallStickerSet.stickerset)
  
  ::mtproto::InputStickerSet* temp = stickerset_;
  stickerset_ = NULL;
  return temp;
}
void TL_messages_uninstallStickerSet::set_allocated_stickerset(::mtproto::InputStickerSet* stickerset) {
  delete stickerset_;
  stickerset_ = stickerset;
  if (stickerset) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_messages_uninstallStickerSet.stickerset)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TL_messages_startBot::kBotFieldNumber;
const int TL_messages_startBot::kPeerFieldNumber;
const int TL_messages_startBot::kRandomIdFieldNumber;
const int TL_messages_startBot::kStartParamFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TL_messages_startBot::TL_messages_startBot()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.TL_messages_startBot)
}
TL_messages_startBot::TL_messages_startBot(const TL_messages_startBot& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  start_param_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.start_param().size() > 0) {
    start_param_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.start_param_);
  }
  if (from.has_bot()) {
    bot_ = new ::mtproto::InputUser(*from.bot_);
  } else {
    bot_ = NULL;
  }
  if (from.has_peer()) {
    peer_ = new ::mtproto::InputPeer(*from.peer_);
  } else {
    peer_ = NULL;
  }
  random_id_ = from.random_id_;
  // @@protoc_insertion_point(copy_constructor:mtproto.TL_messages_startBot)
}

void TL_messages_startBot::SharedCtor() {
  start_param_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&bot_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&random_id_) -
      reinterpret_cast<char*>(&bot_)) + sizeof(random_id_));
  _cached_size_ = 0;
}

TL_messages_startBot::~TL_messages_startBot() {
  // @@protoc_insertion_point(destructor:mtproto.TL_messages_startBot)
  SharedDtor();
}

void TL_messages_startBot::SharedDtor() {
  start_param_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete bot_;
  if (this != internal_default_instance()) delete peer_;
}

void TL_messages_startBot::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TL_messages_startBot::descriptor() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TL_messages_startBot& TL_messages_startBot::default_instance() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  return *internal_default_instance();
}

TL_messages_startBot* TL_messages_startBot::New(::google::protobuf::Arena* arena) const {
  TL_messages_startBot* n = new TL_messages_startBot;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TL_messages_startBot::Swap(TL_messages_startBot* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TL_messages_startBot::InternalSwap(TL_messages_startBot* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata TL_messages_startBot::GetMetadata() const {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TL_messages_startBot

// .mtproto.InputUser bot = 1;
bool TL_messages_startBot::has_bot() const {
  return this != internal_default_instance() && bot_ != NULL;
}
void TL_messages_startBot::clear_bot() {
  if (GetArenaNoVirtual() == NULL && bot_ != NULL) delete bot_;
  bot_ = NULL;
}
const ::mtproto::InputUser& TL_messages_startBot::bot() const {
  const ::mtproto::InputUser* p = bot_;
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_startBot.bot)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::InputUser*>(
      &::mtproto::_InputUser_default_instance_);
}
::mtproto::InputUser* TL_messages_startBot::mutable_bot() {
  
  if (bot_ == NULL) {
    bot_ = new ::mtproto::InputUser;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_messages_startBot.bot)
  return bot_;
}
::mtproto::InputUser* TL_messages_startBot::release_bot() {
  // @@protoc_insertion_point(field_release:mtproto.TL_messages_startBot.bot)
  
  ::mtproto::InputUser* temp = bot_;
  bot_ = NULL;
  return temp;
}
void TL_messages_startBot::set_allocated_bot(::mtproto::InputUser* bot) {
  delete bot_;
  bot_ = bot;
  if (bot) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_messages_startBot.bot)
}

// .mtproto.InputPeer peer = 2;
bool TL_messages_startBot::has_peer() const {
  return this != internal_default_instance() && peer_ != NULL;
}
void TL_messages_startBot::clear_peer() {
  if (GetArenaNoVirtual() == NULL && peer_ != NULL) delete peer_;
  peer_ = NULL;
}
const ::mtproto::InputPeer& TL_messages_startBot::peer() const {
  const ::mtproto::InputPeer* p = peer_;
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_startBot.peer)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::InputPeer*>(
      &::mtproto::_InputPeer_default_instance_);
}
::mtproto::InputPeer* TL_messages_startBot::mutable_peer() {
  
  if (peer_ == NULL) {
    peer_ = new ::mtproto::InputPeer;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_messages_startBot.peer)
  return peer_;
}
::mtproto::InputPeer* TL_messages_startBot::release_peer() {
  // @@protoc_insertion_point(field_release:mtproto.TL_messages_startBot.peer)
  
  ::mtproto::InputPeer* temp = peer_;
  peer_ = NULL;
  return temp;
}
void TL_messages_startBot::set_allocated_peer(::mtproto::InputPeer* peer) {
  delete peer_;
  peer_ = peer;
  if (peer) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_messages_startBot.peer)
}

// int64 random_id = 3;
void TL_messages_startBot::clear_random_id() {
  random_id_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 TL_messages_startBot::random_id() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_startBot.random_id)
  return random_id_;
}
void TL_messages_startBot::set_random_id(::google::protobuf::int64 value) {
  
  random_id_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_startBot.random_id)
}

// string start_param = 4;
void TL_messages_startBot::clear_start_param() {
  start_param_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& TL_messages_startBot::start_param() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_startBot.start_param)
  return start_param_.GetNoArena();
}
void TL_messages_startBot::set_start_param(const ::std::string& value) {
  
  start_param_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_startBot.start_param)
}
#if LANG_CXX11
void TL_messages_startBot::set_start_param(::std::string&& value) {
  
  start_param_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mtproto.TL_messages_startBot.start_param)
}
#endif
void TL_messages_startBot::set_start_param(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  start_param_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtproto.TL_messages_startBot.start_param)
}
void TL_messages_startBot::set_start_param(const char* value, size_t size) {
  
  start_param_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtproto.TL_messages_startBot.start_param)
}
::std::string* TL_messages_startBot::mutable_start_param() {
  
  // @@protoc_insertion_point(field_mutable:mtproto.TL_messages_startBot.start_param)
  return start_param_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* TL_messages_startBot::release_start_param() {
  // @@protoc_insertion_point(field_release:mtproto.TL_messages_startBot.start_param)
  
  return start_param_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TL_messages_startBot::set_allocated_start_param(::std::string* start_param) {
  if (start_param != NULL) {
    
  } else {
    
  }
  start_param_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), start_param);
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_messages_startBot.start_param)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TL_messages_getMessagesViews::kPeerFieldNumber;
const int TL_messages_getMessagesViews::kIdFieldNumber;
const int TL_messages_getMessagesViews::kIncrementFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TL_messages_getMessagesViews::TL_messages_getMessagesViews()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.TL_messages_getMessagesViews)
}
TL_messages_getMessagesViews::TL_messages_getMessagesViews(const TL_messages_getMessagesViews& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      id_(from.id_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_peer()) {
    peer_ = new ::mtproto::InputPeer(*from.peer_);
  } else {
    peer_ = NULL;
  }
  if (from.has_increment()) {
    increment_ = new ::mtproto::Bool(*from.increment_);
  } else {
    increment_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:mtproto.TL_messages_getMessagesViews)
}

void TL_messages_getMessagesViews::SharedCtor() {
  ::memset(&peer_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&increment_) -
      reinterpret_cast<char*>(&peer_)) + sizeof(increment_));
  _cached_size_ = 0;
}

TL_messages_getMessagesViews::~TL_messages_getMessagesViews() {
  // @@protoc_insertion_point(destructor:mtproto.TL_messages_getMessagesViews)
  SharedDtor();
}

void TL_messages_getMessagesViews::SharedDtor() {
  if (this != internal_default_instance()) delete peer_;
  if (this != internal_default_instance()) delete increment_;
}

void TL_messages_getMessagesViews::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TL_messages_getMessagesViews::descriptor() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TL_messages_getMessagesViews& TL_messages_getMessagesViews::default_instance() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  return *internal_default_instance();
}

TL_messages_getMessagesViews* TL_messages_getMessagesViews::New(::google::protobuf::Arena* arena) const {
  TL_messages_getMessagesViews* n = new TL_messages_getMessagesViews;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TL_messages_getMessagesViews::Swap(TL_messages_getMessagesViews* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TL_messages_getMessagesViews::InternalSwap(TL_messages_getMessagesViews* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata TL_messages_getMessagesViews::GetMetadata() const {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TL_messages_getMessagesViews

// .mtproto.InputPeer peer = 1;
bool TL_messages_getMessagesViews::has_peer() const {
  return this != internal_default_instance() && peer_ != NULL;
}
void TL_messages_getMessagesViews::clear_peer() {
  if (GetArenaNoVirtual() == NULL && peer_ != NULL) delete peer_;
  peer_ = NULL;
}
const ::mtproto::InputPeer& TL_messages_getMessagesViews::peer() const {
  const ::mtproto::InputPeer* p = peer_;
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_getMessagesViews.peer)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::InputPeer*>(
      &::mtproto::_InputPeer_default_instance_);
}
::mtproto::InputPeer* TL_messages_getMessagesViews::mutable_peer() {
  
  if (peer_ == NULL) {
    peer_ = new ::mtproto::InputPeer;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_messages_getMessagesViews.peer)
  return peer_;
}
::mtproto::InputPeer* TL_messages_getMessagesViews::release_peer() {
  // @@protoc_insertion_point(field_release:mtproto.TL_messages_getMessagesViews.peer)
  
  ::mtproto::InputPeer* temp = peer_;
  peer_ = NULL;
  return temp;
}
void TL_messages_getMessagesViews::set_allocated_peer(::mtproto::InputPeer* peer) {
  delete peer_;
  peer_ = peer;
  if (peer) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_messages_getMessagesViews.peer)
}

// repeated int32 id = 2;
int TL_messages_getMessagesViews::id_size() const {
  return id_.size();
}
void TL_messages_getMessagesViews::clear_id() {
  id_.Clear();
}
::google::protobuf::int32 TL_messages_getMessagesViews::id(int index) const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_getMessagesViews.id)
  return id_.Get(index);
}
void TL_messages_getMessagesViews::set_id(int index, ::google::protobuf::int32 value) {
  id_.Set(index, value);
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_getMessagesViews.id)
}
void TL_messages_getMessagesViews::add_id(::google::protobuf::int32 value) {
  id_.Add(value);
  // @@protoc_insertion_point(field_add:mtproto.TL_messages_getMessagesViews.id)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
TL_messages_getMessagesViews::id() const {
  // @@protoc_insertion_point(field_list:mtproto.TL_messages_getMessagesViews.id)
  return id_;
}
::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
TL_messages_getMessagesViews::mutable_id() {
  // @@protoc_insertion_point(field_mutable_list:mtproto.TL_messages_getMessagesViews.id)
  return &id_;
}

// .mtproto.Bool increment = 3;
bool TL_messages_getMessagesViews::has_increment() const {
  return this != internal_default_instance() && increment_ != NULL;
}
void TL_messages_getMessagesViews::clear_increment() {
  if (GetArenaNoVirtual() == NULL && increment_ != NULL) delete increment_;
  increment_ = NULL;
}
const ::mtproto::Bool& TL_messages_getMessagesViews::increment() const {
  const ::mtproto::Bool* p = increment_;
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_getMessagesViews.increment)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::Bool*>(
      &::mtproto::_Bool_default_instance_);
}
::mtproto::Bool* TL_messages_getMessagesViews::mutable_increment() {
  
  if (increment_ == NULL) {
    increment_ = new ::mtproto::Bool;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_messages_getMessagesViews.increment)
  return increment_;
}
::mtproto::Bool* TL_messages_getMessagesViews::release_increment() {
  // @@protoc_insertion_point(field_release:mtproto.TL_messages_getMessagesViews.increment)
  
  ::mtproto::Bool* temp = increment_;
  increment_ = NULL;
  return temp;
}
void TL_messages_getMessagesViews::set_allocated_increment(::mtproto::Bool* increment) {
  delete increment_;
  increment_ = increment;
  if (increment) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_messages_getMessagesViews.increment)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TL_messages_toggleChatAdmins::kChatIdFieldNumber;
const int TL_messages_toggleChatAdmins::kEnabledFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TL_messages_toggleChatAdmins::TL_messages_toggleChatAdmins()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.TL_messages_toggleChatAdmins)
}
TL_messages_toggleChatAdmins::TL_messages_toggleChatAdmins(const TL_messages_toggleChatAdmins& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_enabled()) {
    enabled_ = new ::mtproto::Bool(*from.enabled_);
  } else {
    enabled_ = NULL;
  }
  chat_id_ = from.chat_id_;
  // @@protoc_insertion_point(copy_constructor:mtproto.TL_messages_toggleChatAdmins)
}

void TL_messages_toggleChatAdmins::SharedCtor() {
  ::memset(&enabled_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&chat_id_) -
      reinterpret_cast<char*>(&enabled_)) + sizeof(chat_id_));
  _cached_size_ = 0;
}

TL_messages_toggleChatAdmins::~TL_messages_toggleChatAdmins() {
  // @@protoc_insertion_point(destructor:mtproto.TL_messages_toggleChatAdmins)
  SharedDtor();
}

void TL_messages_toggleChatAdmins::SharedDtor() {
  if (this != internal_default_instance()) delete enabled_;
}

void TL_messages_toggleChatAdmins::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TL_messages_toggleChatAdmins::descriptor() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TL_messages_toggleChatAdmins& TL_messages_toggleChatAdmins::default_instance() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  return *internal_default_instance();
}

TL_messages_toggleChatAdmins* TL_messages_toggleChatAdmins::New(::google::protobuf::Arena* arena) const {
  TL_messages_toggleChatAdmins* n = new TL_messages_toggleChatAdmins;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TL_messages_toggleChatAdmins::Swap(TL_messages_toggleChatAdmins* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TL_messages_toggleChatAdmins::InternalSwap(TL_messages_toggleChatAdmins* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata TL_messages_toggleChatAdmins::GetMetadata() const {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TL_messages_toggleChatAdmins

// int32 chat_id = 1;
void TL_messages_toggleChatAdmins::clear_chat_id() {
  chat_id_ = 0;
}
::google::protobuf::int32 TL_messages_toggleChatAdmins::chat_id() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_toggleChatAdmins.chat_id)
  return chat_id_;
}
void TL_messages_toggleChatAdmins::set_chat_id(::google::protobuf::int32 value) {
  
  chat_id_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_toggleChatAdmins.chat_id)
}

// .mtproto.Bool enabled = 2;
bool TL_messages_toggleChatAdmins::has_enabled() const {
  return this != internal_default_instance() && enabled_ != NULL;
}
void TL_messages_toggleChatAdmins::clear_enabled() {
  if (GetArenaNoVirtual() == NULL && enabled_ != NULL) delete enabled_;
  enabled_ = NULL;
}
const ::mtproto::Bool& TL_messages_toggleChatAdmins::enabled() const {
  const ::mtproto::Bool* p = enabled_;
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_toggleChatAdmins.enabled)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::Bool*>(
      &::mtproto::_Bool_default_instance_);
}
::mtproto::Bool* TL_messages_toggleChatAdmins::mutable_enabled() {
  
  if (enabled_ == NULL) {
    enabled_ = new ::mtproto::Bool;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_messages_toggleChatAdmins.enabled)
  return enabled_;
}
::mtproto::Bool* TL_messages_toggleChatAdmins::release_enabled() {
  // @@protoc_insertion_point(field_release:mtproto.TL_messages_toggleChatAdmins.enabled)
  
  ::mtproto::Bool* temp = enabled_;
  enabled_ = NULL;
  return temp;
}
void TL_messages_toggleChatAdmins::set_allocated_enabled(::mtproto::Bool* enabled) {
  delete enabled_;
  enabled_ = enabled;
  if (enabled) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_messages_toggleChatAdmins.enabled)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TL_messages_editChatAdmin::kChatIdFieldNumber;
const int TL_messages_editChatAdmin::kUserIdFieldNumber;
const int TL_messages_editChatAdmin::kIsAdminFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TL_messages_editChatAdmin::TL_messages_editChatAdmin()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.TL_messages_editChatAdmin)
}
TL_messages_editChatAdmin::TL_messages_editChatAdmin(const TL_messages_editChatAdmin& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_user_id()) {
    user_id_ = new ::mtproto::InputUser(*from.user_id_);
  } else {
    user_id_ = NULL;
  }
  if (from.has_is_admin()) {
    is_admin_ = new ::mtproto::Bool(*from.is_admin_);
  } else {
    is_admin_ = NULL;
  }
  chat_id_ = from.chat_id_;
  // @@protoc_insertion_point(copy_constructor:mtproto.TL_messages_editChatAdmin)
}

void TL_messages_editChatAdmin::SharedCtor() {
  ::memset(&user_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&chat_id_) -
      reinterpret_cast<char*>(&user_id_)) + sizeof(chat_id_));
  _cached_size_ = 0;
}

TL_messages_editChatAdmin::~TL_messages_editChatAdmin() {
  // @@protoc_insertion_point(destructor:mtproto.TL_messages_editChatAdmin)
  SharedDtor();
}

void TL_messages_editChatAdmin::SharedDtor() {
  if (this != internal_default_instance()) delete user_id_;
  if (this != internal_default_instance()) delete is_admin_;
}

void TL_messages_editChatAdmin::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TL_messages_editChatAdmin::descriptor() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TL_messages_editChatAdmin& TL_messages_editChatAdmin::default_instance() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  return *internal_default_instance();
}

TL_messages_editChatAdmin* TL_messages_editChatAdmin::New(::google::protobuf::Arena* arena) const {
  TL_messages_editChatAdmin* n = new TL_messages_editChatAdmin;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TL_messages_editChatAdmin::Swap(TL_messages_editChatAdmin* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TL_messages_editChatAdmin::InternalSwap(TL_messages_editChatAdmin* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata TL_messages_editChatAdmin::GetMetadata() const {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TL_messages_editChatAdmin

// int32 chat_id = 1;
void TL_messages_editChatAdmin::clear_chat_id() {
  chat_id_ = 0;
}
::google::protobuf::int32 TL_messages_editChatAdmin::chat_id() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_editChatAdmin.chat_id)
  return chat_id_;
}
void TL_messages_editChatAdmin::set_chat_id(::google::protobuf::int32 value) {
  
  chat_id_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_editChatAdmin.chat_id)
}

// .mtproto.InputUser user_id = 2;
bool TL_messages_editChatAdmin::has_user_id() const {
  return this != internal_default_instance() && user_id_ != NULL;
}
void TL_messages_editChatAdmin::clear_user_id() {
  if (GetArenaNoVirtual() == NULL && user_id_ != NULL) delete user_id_;
  user_id_ = NULL;
}
const ::mtproto::InputUser& TL_messages_editChatAdmin::user_id() const {
  const ::mtproto::InputUser* p = user_id_;
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_editChatAdmin.user_id)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::InputUser*>(
      &::mtproto::_InputUser_default_instance_);
}
::mtproto::InputUser* TL_messages_editChatAdmin::mutable_user_id() {
  
  if (user_id_ == NULL) {
    user_id_ = new ::mtproto::InputUser;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_messages_editChatAdmin.user_id)
  return user_id_;
}
::mtproto::InputUser* TL_messages_editChatAdmin::release_user_id() {
  // @@protoc_insertion_point(field_release:mtproto.TL_messages_editChatAdmin.user_id)
  
  ::mtproto::InputUser* temp = user_id_;
  user_id_ = NULL;
  return temp;
}
void TL_messages_editChatAdmin::set_allocated_user_id(::mtproto::InputUser* user_id) {
  delete user_id_;
  user_id_ = user_id;
  if (user_id) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_messages_editChatAdmin.user_id)
}

// .mtproto.Bool is_admin = 3;
bool TL_messages_editChatAdmin::has_is_admin() const {
  return this != internal_default_instance() && is_admin_ != NULL;
}
void TL_messages_editChatAdmin::clear_is_admin() {
  if (GetArenaNoVirtual() == NULL && is_admin_ != NULL) delete is_admin_;
  is_admin_ = NULL;
}
const ::mtproto::Bool& TL_messages_editChatAdmin::is_admin() const {
  const ::mtproto::Bool* p = is_admin_;
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_editChatAdmin.is_admin)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::Bool*>(
      &::mtproto::_Bool_default_instance_);
}
::mtproto::Bool* TL_messages_editChatAdmin::mutable_is_admin() {
  
  if (is_admin_ == NULL) {
    is_admin_ = new ::mtproto::Bool;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_messages_editChatAdmin.is_admin)
  return is_admin_;
}
::mtproto::Bool* TL_messages_editChatAdmin::release_is_admin() {
  // @@protoc_insertion_point(field_release:mtproto.TL_messages_editChatAdmin.is_admin)
  
  ::mtproto::Bool* temp = is_admin_;
  is_admin_ = NULL;
  return temp;
}
void TL_messages_editChatAdmin::set_allocated_is_admin(::mtproto::Bool* is_admin) {
  delete is_admin_;
  is_admin_ = is_admin;
  if (is_admin) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_messages_editChatAdmin.is_admin)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TL_messages_migrateChat::kChatIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TL_messages_migrateChat::TL_messages_migrateChat()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.TL_messages_migrateChat)
}
TL_messages_migrateChat::TL_messages_migrateChat(const TL_messages_migrateChat& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  chat_id_ = from.chat_id_;
  // @@protoc_insertion_point(copy_constructor:mtproto.TL_messages_migrateChat)
}

void TL_messages_migrateChat::SharedCtor() {
  chat_id_ = 0;
  _cached_size_ = 0;
}

TL_messages_migrateChat::~TL_messages_migrateChat() {
  // @@protoc_insertion_point(destructor:mtproto.TL_messages_migrateChat)
  SharedDtor();
}

void TL_messages_migrateChat::SharedDtor() {
}

void TL_messages_migrateChat::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TL_messages_migrateChat::descriptor() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TL_messages_migrateChat& TL_messages_migrateChat::default_instance() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  return *internal_default_instance();
}

TL_messages_migrateChat* TL_messages_migrateChat::New(::google::protobuf::Arena* arena) const {
  TL_messages_migrateChat* n = new TL_messages_migrateChat;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TL_messages_migrateChat::Swap(TL_messages_migrateChat* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TL_messages_migrateChat::InternalSwap(TL_messages_migrateChat* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata TL_messages_migrateChat::GetMetadata() const {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TL_messages_migrateChat

// int32 chat_id = 1;
void TL_messages_migrateChat::clear_chat_id() {
  chat_id_ = 0;
}
::google::protobuf::int32 TL_messages_migrateChat::chat_id() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_migrateChat.chat_id)
  return chat_id_;
}
void TL_messages_migrateChat::set_chat_id(::google::protobuf::int32 value) {
  
  chat_id_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_migrateChat.chat_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TL_messages_searchGlobal::kQFieldNumber;
const int TL_messages_searchGlobal::kOffsetDateFieldNumber;
const int TL_messages_searchGlobal::kOffsetPeerFieldNumber;
const int TL_messages_searchGlobal::kOffsetIdFieldNumber;
const int TL_messages_searchGlobal::kLimitFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TL_messages_searchGlobal::TL_messages_searchGlobal()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.TL_messages_searchGlobal)
}
TL_messages_searchGlobal::TL_messages_searchGlobal(const TL_messages_searchGlobal& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  q_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.q().size() > 0) {
    q_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.q_);
  }
  if (from.has_offset_peer()) {
    offset_peer_ = new ::mtproto::InputPeer(*from.offset_peer_);
  } else {
    offset_peer_ = NULL;
  }
  ::memcpy(&offset_date_, &from.offset_date_,
    static_cast<size_t>(reinterpret_cast<char*>(&limit_) -
    reinterpret_cast<char*>(&offset_date_)) + sizeof(limit_));
  // @@protoc_insertion_point(copy_constructor:mtproto.TL_messages_searchGlobal)
}

void TL_messages_searchGlobal::SharedCtor() {
  q_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&offset_peer_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&limit_) -
      reinterpret_cast<char*>(&offset_peer_)) + sizeof(limit_));
  _cached_size_ = 0;
}

TL_messages_searchGlobal::~TL_messages_searchGlobal() {
  // @@protoc_insertion_point(destructor:mtproto.TL_messages_searchGlobal)
  SharedDtor();
}

void TL_messages_searchGlobal::SharedDtor() {
  q_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete offset_peer_;
}

void TL_messages_searchGlobal::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TL_messages_searchGlobal::descriptor() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TL_messages_searchGlobal& TL_messages_searchGlobal::default_instance() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  return *internal_default_instance();
}

TL_messages_searchGlobal* TL_messages_searchGlobal::New(::google::protobuf::Arena* arena) const {
  TL_messages_searchGlobal* n = new TL_messages_searchGlobal;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TL_messages_searchGlobal::Swap(TL_messages_searchGlobal* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TL_messages_searchGlobal::InternalSwap(TL_messages_searchGlobal* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata TL_messages_searchGlobal::GetMetadata() const {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TL_messages_searchGlobal

// string q = 1;
void TL_messages_searchGlobal::clear_q() {
  q_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& TL_messages_searchGlobal::q() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_searchGlobal.q)
  return q_.GetNoArena();
}
void TL_messages_searchGlobal::set_q(const ::std::string& value) {
  
  q_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_searchGlobal.q)
}
#if LANG_CXX11
void TL_messages_searchGlobal::set_q(::std::string&& value) {
  
  q_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mtproto.TL_messages_searchGlobal.q)
}
#endif
void TL_messages_searchGlobal::set_q(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  q_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtproto.TL_messages_searchGlobal.q)
}
void TL_messages_searchGlobal::set_q(const char* value, size_t size) {
  
  q_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtproto.TL_messages_searchGlobal.q)
}
::std::string* TL_messages_searchGlobal::mutable_q() {
  
  // @@protoc_insertion_point(field_mutable:mtproto.TL_messages_searchGlobal.q)
  return q_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* TL_messages_searchGlobal::release_q() {
  // @@protoc_insertion_point(field_release:mtproto.TL_messages_searchGlobal.q)
  
  return q_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TL_messages_searchGlobal::set_allocated_q(::std::string* q) {
  if (q != NULL) {
    
  } else {
    
  }
  q_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), q);
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_messages_searchGlobal.q)
}

// int32 offset_date = 2;
void TL_messages_searchGlobal::clear_offset_date() {
  offset_date_ = 0;
}
::google::protobuf::int32 TL_messages_searchGlobal::offset_date() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_searchGlobal.offset_date)
  return offset_date_;
}
void TL_messages_searchGlobal::set_offset_date(::google::protobuf::int32 value) {
  
  offset_date_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_searchGlobal.offset_date)
}

// .mtproto.InputPeer offset_peer = 3;
bool TL_messages_searchGlobal::has_offset_peer() const {
  return this != internal_default_instance() && offset_peer_ != NULL;
}
void TL_messages_searchGlobal::clear_offset_peer() {
  if (GetArenaNoVirtual() == NULL && offset_peer_ != NULL) delete offset_peer_;
  offset_peer_ = NULL;
}
const ::mtproto::InputPeer& TL_messages_searchGlobal::offset_peer() const {
  const ::mtproto::InputPeer* p = offset_peer_;
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_searchGlobal.offset_peer)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::InputPeer*>(
      &::mtproto::_InputPeer_default_instance_);
}
::mtproto::InputPeer* TL_messages_searchGlobal::mutable_offset_peer() {
  
  if (offset_peer_ == NULL) {
    offset_peer_ = new ::mtproto::InputPeer;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_messages_searchGlobal.offset_peer)
  return offset_peer_;
}
::mtproto::InputPeer* TL_messages_searchGlobal::release_offset_peer() {
  // @@protoc_insertion_point(field_release:mtproto.TL_messages_searchGlobal.offset_peer)
  
  ::mtproto::InputPeer* temp = offset_peer_;
  offset_peer_ = NULL;
  return temp;
}
void TL_messages_searchGlobal::set_allocated_offset_peer(::mtproto::InputPeer* offset_peer) {
  delete offset_peer_;
  offset_peer_ = offset_peer;
  if (offset_peer) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_messages_searchGlobal.offset_peer)
}

// int32 offset_id = 4;
void TL_messages_searchGlobal::clear_offset_id() {
  offset_id_ = 0;
}
::google::protobuf::int32 TL_messages_searchGlobal::offset_id() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_searchGlobal.offset_id)
  return offset_id_;
}
void TL_messages_searchGlobal::set_offset_id(::google::protobuf::int32 value) {
  
  offset_id_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_searchGlobal.offset_id)
}

// int32 limit = 5;
void TL_messages_searchGlobal::clear_limit() {
  limit_ = 0;
}
::google::protobuf::int32 TL_messages_searchGlobal::limit() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_searchGlobal.limit)
  return limit_;
}
void TL_messages_searchGlobal::set_limit(::google::protobuf::int32 value) {
  
  limit_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_searchGlobal.limit)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TL_messages_reorderStickerSets::kMasksFieldNumber;
const int TL_messages_reorderStickerSets::kOrderFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TL_messages_reorderStickerSets::TL_messages_reorderStickerSets()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.TL_messages_reorderStickerSets)
}
TL_messages_reorderStickerSets::TL_messages_reorderStickerSets(const TL_messages_reorderStickerSets& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      order_(from.order_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  masks_ = from.masks_;
  // @@protoc_insertion_point(copy_constructor:mtproto.TL_messages_reorderStickerSets)
}

void TL_messages_reorderStickerSets::SharedCtor() {
  masks_ = false;
  _cached_size_ = 0;
}

TL_messages_reorderStickerSets::~TL_messages_reorderStickerSets() {
  // @@protoc_insertion_point(destructor:mtproto.TL_messages_reorderStickerSets)
  SharedDtor();
}

void TL_messages_reorderStickerSets::SharedDtor() {
}

void TL_messages_reorderStickerSets::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TL_messages_reorderStickerSets::descriptor() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TL_messages_reorderStickerSets& TL_messages_reorderStickerSets::default_instance() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  return *internal_default_instance();
}

TL_messages_reorderStickerSets* TL_messages_reorderStickerSets::New(::google::protobuf::Arena* arena) const {
  TL_messages_reorderStickerSets* n = new TL_messages_reorderStickerSets;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TL_messages_reorderStickerSets::Swap(TL_messages_reorderStickerSets* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TL_messages_reorderStickerSets::InternalSwap(TL_messages_reorderStickerSets* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata TL_messages_reorderStickerSets::GetMetadata() const {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TL_messages_reorderStickerSets

// bool masks = 2;
void TL_messages_reorderStickerSets::clear_masks() {
  masks_ = false;
}
bool TL_messages_reorderStickerSets::masks() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_reorderStickerSets.masks)
  return masks_;
}
void TL_messages_reorderStickerSets::set_masks(bool value) {
  
  masks_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_reorderStickerSets.masks)
}

// repeated int64 order = 3;
int TL_messages_reorderStickerSets::order_size() const {
  return order_.size();
}
void TL_messages_reorderStickerSets::clear_order() {
  order_.Clear();
}
::google::protobuf::int64 TL_messages_reorderStickerSets::order(int index) const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_reorderStickerSets.order)
  return order_.Get(index);
}
void TL_messages_reorderStickerSets::set_order(int index, ::google::protobuf::int64 value) {
  order_.Set(index, value);
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_reorderStickerSets.order)
}
void TL_messages_reorderStickerSets::add_order(::google::protobuf::int64 value) {
  order_.Add(value);
  // @@protoc_insertion_point(field_add:mtproto.TL_messages_reorderStickerSets.order)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
TL_messages_reorderStickerSets::order() const {
  // @@protoc_insertion_point(field_list:mtproto.TL_messages_reorderStickerSets.order)
  return order_;
}
::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
TL_messages_reorderStickerSets::mutable_order() {
  // @@protoc_insertion_point(field_mutable_list:mtproto.TL_messages_reorderStickerSets.order)
  return &order_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TL_messages_getDocumentByHash::kSha256FieldNumber;
const int TL_messages_getDocumentByHash::kSizeFieldNumber;
const int TL_messages_getDocumentByHash::kMimeTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TL_messages_getDocumentByHash::TL_messages_getDocumentByHash()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.TL_messages_getDocumentByHash)
}
TL_messages_getDocumentByHash::TL_messages_getDocumentByHash(const TL_messages_getDocumentByHash& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  sha256_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.sha256().size() > 0) {
    sha256_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sha256_);
  }
  mime_type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.mime_type().size() > 0) {
    mime_type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.mime_type_);
  }
  size_ = from.size_;
  // @@protoc_insertion_point(copy_constructor:mtproto.TL_messages_getDocumentByHash)
}

void TL_messages_getDocumentByHash::SharedCtor() {
  sha256_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mime_type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  size_ = 0;
  _cached_size_ = 0;
}

TL_messages_getDocumentByHash::~TL_messages_getDocumentByHash() {
  // @@protoc_insertion_point(destructor:mtproto.TL_messages_getDocumentByHash)
  SharedDtor();
}

void TL_messages_getDocumentByHash::SharedDtor() {
  sha256_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mime_type_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void TL_messages_getDocumentByHash::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TL_messages_getDocumentByHash::descriptor() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TL_messages_getDocumentByHash& TL_messages_getDocumentByHash::default_instance() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  return *internal_default_instance();
}

TL_messages_getDocumentByHash* TL_messages_getDocumentByHash::New(::google::protobuf::Arena* arena) const {
  TL_messages_getDocumentByHash* n = new TL_messages_getDocumentByHash;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TL_messages_getDocumentByHash::Swap(TL_messages_getDocumentByHash* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TL_messages_getDocumentByHash::InternalSwap(TL_messages_getDocumentByHash* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata TL_messages_getDocumentByHash::GetMetadata() const {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TL_messages_getDocumentByHash

// bytes sha256 = 1;
void TL_messages_getDocumentByHash::clear_sha256() {
  sha256_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& TL_messages_getDocumentByHash::sha256() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_getDocumentByHash.sha256)
  return sha256_.GetNoArena();
}
void TL_messages_getDocumentByHash::set_sha256(const ::std::string& value) {
  
  sha256_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_getDocumentByHash.sha256)
}
#if LANG_CXX11
void TL_messages_getDocumentByHash::set_sha256(::std::string&& value) {
  
  sha256_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mtproto.TL_messages_getDocumentByHash.sha256)
}
#endif
void TL_messages_getDocumentByHash::set_sha256(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  sha256_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtproto.TL_messages_getDocumentByHash.sha256)
}
void TL_messages_getDocumentByHash::set_sha256(const void* value, size_t size) {
  
  sha256_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtproto.TL_messages_getDocumentByHash.sha256)
}
::std::string* TL_messages_getDocumentByHash::mutable_sha256() {
  
  // @@protoc_insertion_point(field_mutable:mtproto.TL_messages_getDocumentByHash.sha256)
  return sha256_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* TL_messages_getDocumentByHash::release_sha256() {
  // @@protoc_insertion_point(field_release:mtproto.TL_messages_getDocumentByHash.sha256)
  
  return sha256_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TL_messages_getDocumentByHash::set_allocated_sha256(::std::string* sha256) {
  if (sha256 != NULL) {
    
  } else {
    
  }
  sha256_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sha256);
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_messages_getDocumentByHash.sha256)
}

// int32 size = 2;
void TL_messages_getDocumentByHash::clear_size() {
  size_ = 0;
}
::google::protobuf::int32 TL_messages_getDocumentByHash::size() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_getDocumentByHash.size)
  return size_;
}
void TL_messages_getDocumentByHash::set_size(::google::protobuf::int32 value) {
  
  size_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_getDocumentByHash.size)
}

// string mime_type = 3;
void TL_messages_getDocumentByHash::clear_mime_type() {
  mime_type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& TL_messages_getDocumentByHash::mime_type() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_getDocumentByHash.mime_type)
  return mime_type_.GetNoArena();
}
void TL_messages_getDocumentByHash::set_mime_type(const ::std::string& value) {
  
  mime_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_getDocumentByHash.mime_type)
}
#if LANG_CXX11
void TL_messages_getDocumentByHash::set_mime_type(::std::string&& value) {
  
  mime_type_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mtproto.TL_messages_getDocumentByHash.mime_type)
}
#endif
void TL_messages_getDocumentByHash::set_mime_type(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  mime_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtproto.TL_messages_getDocumentByHash.mime_type)
}
void TL_messages_getDocumentByHash::set_mime_type(const char* value, size_t size) {
  
  mime_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtproto.TL_messages_getDocumentByHash.mime_type)
}
::std::string* TL_messages_getDocumentByHash::mutable_mime_type() {
  
  // @@protoc_insertion_point(field_mutable:mtproto.TL_messages_getDocumentByHash.mime_type)
  return mime_type_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* TL_messages_getDocumentByHash::release_mime_type() {
  // @@protoc_insertion_point(field_release:mtproto.TL_messages_getDocumentByHash.mime_type)
  
  return mime_type_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TL_messages_getDocumentByHash::set_allocated_mime_type(::std::string* mime_type) {
  if (mime_type != NULL) {
    
  } else {
    
  }
  mime_type_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), mime_type);
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_messages_getDocumentByHash.mime_type)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TL_messages_searchGifs::kQFieldNumber;
const int TL_messages_searchGifs::kOffsetFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TL_messages_searchGifs::TL_messages_searchGifs()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.TL_messages_searchGifs)
}
TL_messages_searchGifs::TL_messages_searchGifs(const TL_messages_searchGifs& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  q_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.q().size() > 0) {
    q_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.q_);
  }
  offset_ = from.offset_;
  // @@protoc_insertion_point(copy_constructor:mtproto.TL_messages_searchGifs)
}

void TL_messages_searchGifs::SharedCtor() {
  q_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  offset_ = 0;
  _cached_size_ = 0;
}

TL_messages_searchGifs::~TL_messages_searchGifs() {
  // @@protoc_insertion_point(destructor:mtproto.TL_messages_searchGifs)
  SharedDtor();
}

void TL_messages_searchGifs::SharedDtor() {
  q_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void TL_messages_searchGifs::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TL_messages_searchGifs::descriptor() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TL_messages_searchGifs& TL_messages_searchGifs::default_instance() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  return *internal_default_instance();
}

TL_messages_searchGifs* TL_messages_searchGifs::New(::google::protobuf::Arena* arena) const {
  TL_messages_searchGifs* n = new TL_messages_searchGifs;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TL_messages_searchGifs::Swap(TL_messages_searchGifs* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TL_messages_searchGifs::InternalSwap(TL_messages_searchGifs* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata TL_messages_searchGifs::GetMetadata() const {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TL_messages_searchGifs

// string q = 1;
void TL_messages_searchGifs::clear_q() {
  q_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& TL_messages_searchGifs::q() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_searchGifs.q)
  return q_.GetNoArena();
}
void TL_messages_searchGifs::set_q(const ::std::string& value) {
  
  q_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_searchGifs.q)
}
#if LANG_CXX11
void TL_messages_searchGifs::set_q(::std::string&& value) {
  
  q_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mtproto.TL_messages_searchGifs.q)
}
#endif
void TL_messages_searchGifs::set_q(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  q_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtproto.TL_messages_searchGifs.q)
}
void TL_messages_searchGifs::set_q(const char* value, size_t size) {
  
  q_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtproto.TL_messages_searchGifs.q)
}
::std::string* TL_messages_searchGifs::mutable_q() {
  
  // @@protoc_insertion_point(field_mutable:mtproto.TL_messages_searchGifs.q)
  return q_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* TL_messages_searchGifs::release_q() {
  // @@protoc_insertion_point(field_release:mtproto.TL_messages_searchGifs.q)
  
  return q_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TL_messages_searchGifs::set_allocated_q(::std::string* q) {
  if (q != NULL) {
    
  } else {
    
  }
  q_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), q);
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_messages_searchGifs.q)
}

// int32 offset = 2;
void TL_messages_searchGifs::clear_offset() {
  offset_ = 0;
}
::google::protobuf::int32 TL_messages_searchGifs::offset() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_searchGifs.offset)
  return offset_;
}
void TL_messages_searchGifs::set_offset(::google::protobuf::int32 value) {
  
  offset_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_searchGifs.offset)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TL_messages_getSavedGifs::kHashFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TL_messages_getSavedGifs::TL_messages_getSavedGifs()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.TL_messages_getSavedGifs)
}
TL_messages_getSavedGifs::TL_messages_getSavedGifs(const TL_messages_getSavedGifs& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  hash_ = from.hash_;
  // @@protoc_insertion_point(copy_constructor:mtproto.TL_messages_getSavedGifs)
}

void TL_messages_getSavedGifs::SharedCtor() {
  hash_ = 0;
  _cached_size_ = 0;
}

TL_messages_getSavedGifs::~TL_messages_getSavedGifs() {
  // @@protoc_insertion_point(destructor:mtproto.TL_messages_getSavedGifs)
  SharedDtor();
}

void TL_messages_getSavedGifs::SharedDtor() {
}

void TL_messages_getSavedGifs::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TL_messages_getSavedGifs::descriptor() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TL_messages_getSavedGifs& TL_messages_getSavedGifs::default_instance() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  return *internal_default_instance();
}

TL_messages_getSavedGifs* TL_messages_getSavedGifs::New(::google::protobuf::Arena* arena) const {
  TL_messages_getSavedGifs* n = new TL_messages_getSavedGifs;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TL_messages_getSavedGifs::Swap(TL_messages_getSavedGifs* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TL_messages_getSavedGifs::InternalSwap(TL_messages_getSavedGifs* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata TL_messages_getSavedGifs::GetMetadata() const {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TL_messages_getSavedGifs

// int32 hash = 1;
void TL_messages_getSavedGifs::clear_hash() {
  hash_ = 0;
}
::google::protobuf::int32 TL_messages_getSavedGifs::hash() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_getSavedGifs.hash)
  return hash_;
}
void TL_messages_getSavedGifs::set_hash(::google::protobuf::int32 value) {
  
  hash_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_getSavedGifs.hash)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TL_messages_saveGif::kIdFieldNumber;
const int TL_messages_saveGif::kUnsaveFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TL_messages_saveGif::TL_messages_saveGif()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.TL_messages_saveGif)
}
TL_messages_saveGif::TL_messages_saveGif(const TL_messages_saveGif& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_id()) {
    id_ = new ::mtproto::InputDocument(*from.id_);
  } else {
    id_ = NULL;
  }
  if (from.has_unsave()) {
    unsave_ = new ::mtproto::Bool(*from.unsave_);
  } else {
    unsave_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:mtproto.TL_messages_saveGif)
}

void TL_messages_saveGif::SharedCtor() {
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&unsave_) -
      reinterpret_cast<char*>(&id_)) + sizeof(unsave_));
  _cached_size_ = 0;
}

TL_messages_saveGif::~TL_messages_saveGif() {
  // @@protoc_insertion_point(destructor:mtproto.TL_messages_saveGif)
  SharedDtor();
}

void TL_messages_saveGif::SharedDtor() {
  if (this != internal_default_instance()) delete id_;
  if (this != internal_default_instance()) delete unsave_;
}

void TL_messages_saveGif::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TL_messages_saveGif::descriptor() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TL_messages_saveGif& TL_messages_saveGif::default_instance() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  return *internal_default_instance();
}

TL_messages_saveGif* TL_messages_saveGif::New(::google::protobuf::Arena* arena) const {
  TL_messages_saveGif* n = new TL_messages_saveGif;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TL_messages_saveGif::Swap(TL_messages_saveGif* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TL_messages_saveGif::InternalSwap(TL_messages_saveGif* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata TL_messages_saveGif::GetMetadata() const {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TL_messages_saveGif

// .mtproto.InputDocument id = 1;
bool TL_messages_saveGif::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
void TL_messages_saveGif::clear_id() {
  if (GetArenaNoVirtual() == NULL && id_ != NULL) delete id_;
  id_ = NULL;
}
const ::mtproto::InputDocument& TL_messages_saveGif::id() const {
  const ::mtproto::InputDocument* p = id_;
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_saveGif.id)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::InputDocument*>(
      &::mtproto::_InputDocument_default_instance_);
}
::mtproto::InputDocument* TL_messages_saveGif::mutable_id() {
  
  if (id_ == NULL) {
    id_ = new ::mtproto::InputDocument;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_messages_saveGif.id)
  return id_;
}
::mtproto::InputDocument* TL_messages_saveGif::release_id() {
  // @@protoc_insertion_point(field_release:mtproto.TL_messages_saveGif.id)
  
  ::mtproto::InputDocument* temp = id_;
  id_ = NULL;
  return temp;
}
void TL_messages_saveGif::set_allocated_id(::mtproto::InputDocument* id) {
  delete id_;
  id_ = id;
  if (id) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_messages_saveGif.id)
}

// .mtproto.Bool unsave = 2;
bool TL_messages_saveGif::has_unsave() const {
  return this != internal_default_instance() && unsave_ != NULL;
}
void TL_messages_saveGif::clear_unsave() {
  if (GetArenaNoVirtual() == NULL && unsave_ != NULL) delete unsave_;
  unsave_ = NULL;
}
const ::mtproto::Bool& TL_messages_saveGif::unsave() const {
  const ::mtproto::Bool* p = unsave_;
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_saveGif.unsave)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::Bool*>(
      &::mtproto::_Bool_default_instance_);
}
::mtproto::Bool* TL_messages_saveGif::mutable_unsave() {
  
  if (unsave_ == NULL) {
    unsave_ = new ::mtproto::Bool;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_messages_saveGif.unsave)
  return unsave_;
}
::mtproto::Bool* TL_messages_saveGif::release_unsave() {
  // @@protoc_insertion_point(field_release:mtproto.TL_messages_saveGif.unsave)
  
  ::mtproto::Bool* temp = unsave_;
  unsave_ = NULL;
  return temp;
}
void TL_messages_saveGif::set_allocated_unsave(::mtproto::Bool* unsave) {
  delete unsave_;
  unsave_ = unsave;
  if (unsave) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_messages_saveGif.unsave)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TL_messages_getInlineBotResults::kBotFieldNumber;
const int TL_messages_getInlineBotResults::kPeerFieldNumber;
const int TL_messages_getInlineBotResults::kGeoPointFieldNumber;
const int TL_messages_getInlineBotResults::kQueryFieldNumber;
const int TL_messages_getInlineBotResults::kOffsetFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TL_messages_getInlineBotResults::TL_messages_getInlineBotResults()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.TL_messages_getInlineBotResults)
}
TL_messages_getInlineBotResults::TL_messages_getInlineBotResults(const TL_messages_getInlineBotResults& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  query_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.query().size() > 0) {
    query_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.query_);
  }
  offset_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.offset().size() > 0) {
    offset_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.offset_);
  }
  if (from.has_bot()) {
    bot_ = new ::mtproto::InputUser(*from.bot_);
  } else {
    bot_ = NULL;
  }
  if (from.has_peer()) {
    peer_ = new ::mtproto::InputPeer(*from.peer_);
  } else {
    peer_ = NULL;
  }
  if (from.has_geo_point()) {
    geo_point_ = new ::mtproto::InputGeoPoint(*from.geo_point_);
  } else {
    geo_point_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:mtproto.TL_messages_getInlineBotResults)
}

void TL_messages_getInlineBotResults::SharedCtor() {
  query_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  offset_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&bot_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&geo_point_) -
      reinterpret_cast<char*>(&bot_)) + sizeof(geo_point_));
  _cached_size_ = 0;
}

TL_messages_getInlineBotResults::~TL_messages_getInlineBotResults() {
  // @@protoc_insertion_point(destructor:mtproto.TL_messages_getInlineBotResults)
  SharedDtor();
}

void TL_messages_getInlineBotResults::SharedDtor() {
  query_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  offset_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete bot_;
  if (this != internal_default_instance()) delete peer_;
  if (this != internal_default_instance()) delete geo_point_;
}

void TL_messages_getInlineBotResults::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TL_messages_getInlineBotResults::descriptor() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TL_messages_getInlineBotResults& TL_messages_getInlineBotResults::default_instance() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  return *internal_default_instance();
}

TL_messages_getInlineBotResults* TL_messages_getInlineBotResults::New(::google::protobuf::Arena* arena) const {
  TL_messages_getInlineBotResults* n = new TL_messages_getInlineBotResults;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TL_messages_getInlineBotResults::Swap(TL_messages_getInlineBotResults* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TL_messages_getInlineBotResults::InternalSwap(TL_messages_getInlineBotResults* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata TL_messages_getInlineBotResults::GetMetadata() const {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TL_messages_getInlineBotResults

// .mtproto.InputUser bot = 2;
bool TL_messages_getInlineBotResults::has_bot() const {
  return this != internal_default_instance() && bot_ != NULL;
}
void TL_messages_getInlineBotResults::clear_bot() {
  if (GetArenaNoVirtual() == NULL && bot_ != NULL) delete bot_;
  bot_ = NULL;
}
const ::mtproto::InputUser& TL_messages_getInlineBotResults::bot() const {
  const ::mtproto::InputUser* p = bot_;
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_getInlineBotResults.bot)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::InputUser*>(
      &::mtproto::_InputUser_default_instance_);
}
::mtproto::InputUser* TL_messages_getInlineBotResults::mutable_bot() {
  
  if (bot_ == NULL) {
    bot_ = new ::mtproto::InputUser;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_messages_getInlineBotResults.bot)
  return bot_;
}
::mtproto::InputUser* TL_messages_getInlineBotResults::release_bot() {
  // @@protoc_insertion_point(field_release:mtproto.TL_messages_getInlineBotResults.bot)
  
  ::mtproto::InputUser* temp = bot_;
  bot_ = NULL;
  return temp;
}
void TL_messages_getInlineBotResults::set_allocated_bot(::mtproto::InputUser* bot) {
  delete bot_;
  bot_ = bot;
  if (bot) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_messages_getInlineBotResults.bot)
}

// .mtproto.InputPeer peer = 3;
bool TL_messages_getInlineBotResults::has_peer() const {
  return this != internal_default_instance() && peer_ != NULL;
}
void TL_messages_getInlineBotResults::clear_peer() {
  if (GetArenaNoVirtual() == NULL && peer_ != NULL) delete peer_;
  peer_ = NULL;
}
const ::mtproto::InputPeer& TL_messages_getInlineBotResults::peer() const {
  const ::mtproto::InputPeer* p = peer_;
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_getInlineBotResults.peer)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::InputPeer*>(
      &::mtproto::_InputPeer_default_instance_);
}
::mtproto::InputPeer* TL_messages_getInlineBotResults::mutable_peer() {
  
  if (peer_ == NULL) {
    peer_ = new ::mtproto::InputPeer;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_messages_getInlineBotResults.peer)
  return peer_;
}
::mtproto::InputPeer* TL_messages_getInlineBotResults::release_peer() {
  // @@protoc_insertion_point(field_release:mtproto.TL_messages_getInlineBotResults.peer)
  
  ::mtproto::InputPeer* temp = peer_;
  peer_ = NULL;
  return temp;
}
void TL_messages_getInlineBotResults::set_allocated_peer(::mtproto::InputPeer* peer) {
  delete peer_;
  peer_ = peer;
  if (peer) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_messages_getInlineBotResults.peer)
}

// .mtproto.InputGeoPoint geo_point = 4;
bool TL_messages_getInlineBotResults::has_geo_point() const {
  return this != internal_default_instance() && geo_point_ != NULL;
}
void TL_messages_getInlineBotResults::clear_geo_point() {
  if (GetArenaNoVirtual() == NULL && geo_point_ != NULL) delete geo_point_;
  geo_point_ = NULL;
}
const ::mtproto::InputGeoPoint& TL_messages_getInlineBotResults::geo_point() const {
  const ::mtproto::InputGeoPoint* p = geo_point_;
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_getInlineBotResults.geo_point)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::InputGeoPoint*>(
      &::mtproto::_InputGeoPoint_default_instance_);
}
::mtproto::InputGeoPoint* TL_messages_getInlineBotResults::mutable_geo_point() {
  
  if (geo_point_ == NULL) {
    geo_point_ = new ::mtproto::InputGeoPoint;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_messages_getInlineBotResults.geo_point)
  return geo_point_;
}
::mtproto::InputGeoPoint* TL_messages_getInlineBotResults::release_geo_point() {
  // @@protoc_insertion_point(field_release:mtproto.TL_messages_getInlineBotResults.geo_point)
  
  ::mtproto::InputGeoPoint* temp = geo_point_;
  geo_point_ = NULL;
  return temp;
}
void TL_messages_getInlineBotResults::set_allocated_geo_point(::mtproto::InputGeoPoint* geo_point) {
  delete geo_point_;
  geo_point_ = geo_point;
  if (geo_point) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_messages_getInlineBotResults.geo_point)
}

// string query = 5;
void TL_messages_getInlineBotResults::clear_query() {
  query_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& TL_messages_getInlineBotResults::query() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_getInlineBotResults.query)
  return query_.GetNoArena();
}
void TL_messages_getInlineBotResults::set_query(const ::std::string& value) {
  
  query_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_getInlineBotResults.query)
}
#if LANG_CXX11
void TL_messages_getInlineBotResults::set_query(::std::string&& value) {
  
  query_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mtproto.TL_messages_getInlineBotResults.query)
}
#endif
void TL_messages_getInlineBotResults::set_query(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  query_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtproto.TL_messages_getInlineBotResults.query)
}
void TL_messages_getInlineBotResults::set_query(const char* value, size_t size) {
  
  query_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtproto.TL_messages_getInlineBotResults.query)
}
::std::string* TL_messages_getInlineBotResults::mutable_query() {
  
  // @@protoc_insertion_point(field_mutable:mtproto.TL_messages_getInlineBotResults.query)
  return query_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* TL_messages_getInlineBotResults::release_query() {
  // @@protoc_insertion_point(field_release:mtproto.TL_messages_getInlineBotResults.query)
  
  return query_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TL_messages_getInlineBotResults::set_allocated_query(::std::string* query) {
  if (query != NULL) {
    
  } else {
    
  }
  query_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), query);
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_messages_getInlineBotResults.query)
}

// string offset = 6;
void TL_messages_getInlineBotResults::clear_offset() {
  offset_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& TL_messages_getInlineBotResults::offset() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_getInlineBotResults.offset)
  return offset_.GetNoArena();
}
void TL_messages_getInlineBotResults::set_offset(const ::std::string& value) {
  
  offset_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_getInlineBotResults.offset)
}
#if LANG_CXX11
void TL_messages_getInlineBotResults::set_offset(::std::string&& value) {
  
  offset_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mtproto.TL_messages_getInlineBotResults.offset)
}
#endif
void TL_messages_getInlineBotResults::set_offset(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  offset_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtproto.TL_messages_getInlineBotResults.offset)
}
void TL_messages_getInlineBotResults::set_offset(const char* value, size_t size) {
  
  offset_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtproto.TL_messages_getInlineBotResults.offset)
}
::std::string* TL_messages_getInlineBotResults::mutable_offset() {
  
  // @@protoc_insertion_point(field_mutable:mtproto.TL_messages_getInlineBotResults.offset)
  return offset_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* TL_messages_getInlineBotResults::release_offset() {
  // @@protoc_insertion_point(field_release:mtproto.TL_messages_getInlineBotResults.offset)
  
  return offset_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TL_messages_getInlineBotResults::set_allocated_offset(::std::string* offset) {
  if (offset != NULL) {
    
  } else {
    
  }
  offset_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), offset);
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_messages_getInlineBotResults.offset)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TL_messages_setInlineBotResults::kGalleryFieldNumber;
const int TL_messages_setInlineBotResults::kPrivateFieldNumber;
const int TL_messages_setInlineBotResults::kQueryIdFieldNumber;
const int TL_messages_setInlineBotResults::kResultsFieldNumber;
const int TL_messages_setInlineBotResults::kCacheTimeFieldNumber;
const int TL_messages_setInlineBotResults::kNextOffsetFieldNumber;
const int TL_messages_setInlineBotResults::kSwitchPmFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TL_messages_setInlineBotResults::TL_messages_setInlineBotResults()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.TL_messages_setInlineBotResults)
}
TL_messages_setInlineBotResults::TL_messages_setInlineBotResults(const TL_messages_setInlineBotResults& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      results_(from.results_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  next_offset_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.next_offset().size() > 0) {
    next_offset_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.next_offset_);
  }
  if (from.has_switch_pm()) {
    switch_pm_ = new ::mtproto::InlineBotSwitchPM(*from.switch_pm_);
  } else {
    switch_pm_ = NULL;
  }
  ::memcpy(&gallery_, &from.gallery_,
    static_cast<size_t>(reinterpret_cast<char*>(&query_id_) -
    reinterpret_cast<char*>(&gallery_)) + sizeof(query_id_));
  // @@protoc_insertion_point(copy_constructor:mtproto.TL_messages_setInlineBotResults)
}

void TL_messages_setInlineBotResults::SharedCtor() {
  next_offset_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&switch_pm_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&query_id_) -
      reinterpret_cast<char*>(&switch_pm_)) + sizeof(query_id_));
  _cached_size_ = 0;
}

TL_messages_setInlineBotResults::~TL_messages_setInlineBotResults() {
  // @@protoc_insertion_point(destructor:mtproto.TL_messages_setInlineBotResults)
  SharedDtor();
}

void TL_messages_setInlineBotResults::SharedDtor() {
  next_offset_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete switch_pm_;
}

void TL_messages_setInlineBotResults::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TL_messages_setInlineBotResults::descriptor() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TL_messages_setInlineBotResults& TL_messages_setInlineBotResults::default_instance() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  return *internal_default_instance();
}

TL_messages_setInlineBotResults* TL_messages_setInlineBotResults::New(::google::protobuf::Arena* arena) const {
  TL_messages_setInlineBotResults* n = new TL_messages_setInlineBotResults;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TL_messages_setInlineBotResults::Swap(TL_messages_setInlineBotResults* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TL_messages_setInlineBotResults::InternalSwap(TL_messages_setInlineBotResults* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata TL_messages_setInlineBotResults::GetMetadata() const {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TL_messages_setInlineBotResults

// bool gallery = 2;
void TL_messages_setInlineBotResults::clear_gallery() {
  gallery_ = false;
}
bool TL_messages_setInlineBotResults::gallery() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_setInlineBotResults.gallery)
  return gallery_;
}
void TL_messages_setInlineBotResults::set_gallery(bool value) {
  
  gallery_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_setInlineBotResults.gallery)
}

// bool private = 3;
void TL_messages_setInlineBotResults::clear_private_() {
  private__ = false;
}
bool TL_messages_setInlineBotResults::private_() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_setInlineBotResults.private)
  return private__;
}
void TL_messages_setInlineBotResults::set_private_(bool value) {
  
  private__ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_setInlineBotResults.private)
}

// int64 query_id = 4;
void TL_messages_setInlineBotResults::clear_query_id() {
  query_id_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 TL_messages_setInlineBotResults::query_id() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_setInlineBotResults.query_id)
  return query_id_;
}
void TL_messages_setInlineBotResults::set_query_id(::google::protobuf::int64 value) {
  
  query_id_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_setInlineBotResults.query_id)
}

// repeated .mtproto.InputBotInlineResult results = 5;
int TL_messages_setInlineBotResults::results_size() const {
  return results_.size();
}
void TL_messages_setInlineBotResults::clear_results() {
  results_.Clear();
}
const ::mtproto::InputBotInlineResult& TL_messages_setInlineBotResults::results(int index) const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_setInlineBotResults.results)
  return results_.Get(index);
}
::mtproto::InputBotInlineResult* TL_messages_setInlineBotResults::mutable_results(int index) {
  // @@protoc_insertion_point(field_mutable:mtproto.TL_messages_setInlineBotResults.results)
  return results_.Mutable(index);
}
::mtproto::InputBotInlineResult* TL_messages_setInlineBotResults::add_results() {
  // @@protoc_insertion_point(field_add:mtproto.TL_messages_setInlineBotResults.results)
  return results_.Add();
}
::google::protobuf::RepeatedPtrField< ::mtproto::InputBotInlineResult >*
TL_messages_setInlineBotResults::mutable_results() {
  // @@protoc_insertion_point(field_mutable_list:mtproto.TL_messages_setInlineBotResults.results)
  return &results_;
}
const ::google::protobuf::RepeatedPtrField< ::mtproto::InputBotInlineResult >&
TL_messages_setInlineBotResults::results() const {
  // @@protoc_insertion_point(field_list:mtproto.TL_messages_setInlineBotResults.results)
  return results_;
}

// int32 cache_time = 6;
void TL_messages_setInlineBotResults::clear_cache_time() {
  cache_time_ = 0;
}
::google::protobuf::int32 TL_messages_setInlineBotResults::cache_time() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_setInlineBotResults.cache_time)
  return cache_time_;
}
void TL_messages_setInlineBotResults::set_cache_time(::google::protobuf::int32 value) {
  
  cache_time_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_setInlineBotResults.cache_time)
}

// string next_offset = 7;
void TL_messages_setInlineBotResults::clear_next_offset() {
  next_offset_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& TL_messages_setInlineBotResults::next_offset() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_setInlineBotResults.next_offset)
  return next_offset_.GetNoArena();
}
void TL_messages_setInlineBotResults::set_next_offset(const ::std::string& value) {
  
  next_offset_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_setInlineBotResults.next_offset)
}
#if LANG_CXX11
void TL_messages_setInlineBotResults::set_next_offset(::std::string&& value) {
  
  next_offset_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mtproto.TL_messages_setInlineBotResults.next_offset)
}
#endif
void TL_messages_setInlineBotResults::set_next_offset(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  next_offset_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtproto.TL_messages_setInlineBotResults.next_offset)
}
void TL_messages_setInlineBotResults::set_next_offset(const char* value, size_t size) {
  
  next_offset_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtproto.TL_messages_setInlineBotResults.next_offset)
}
::std::string* TL_messages_setInlineBotResults::mutable_next_offset() {
  
  // @@protoc_insertion_point(field_mutable:mtproto.TL_messages_setInlineBotResults.next_offset)
  return next_offset_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* TL_messages_setInlineBotResults::release_next_offset() {
  // @@protoc_insertion_point(field_release:mtproto.TL_messages_setInlineBotResults.next_offset)
  
  return next_offset_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TL_messages_setInlineBotResults::set_allocated_next_offset(::std::string* next_offset) {
  if (next_offset != NULL) {
    
  } else {
    
  }
  next_offset_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), next_offset);
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_messages_setInlineBotResults.next_offset)
}

// .mtproto.InlineBotSwitchPM switch_pm = 8;
bool TL_messages_setInlineBotResults::has_switch_pm() const {
  return this != internal_default_instance() && switch_pm_ != NULL;
}
void TL_messages_setInlineBotResults::clear_switch_pm() {
  if (GetArenaNoVirtual() == NULL && switch_pm_ != NULL) delete switch_pm_;
  switch_pm_ = NULL;
}
const ::mtproto::InlineBotSwitchPM& TL_messages_setInlineBotResults::switch_pm() const {
  const ::mtproto::InlineBotSwitchPM* p = switch_pm_;
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_setInlineBotResults.switch_pm)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::InlineBotSwitchPM*>(
      &::mtproto::_InlineBotSwitchPM_default_instance_);
}
::mtproto::InlineBotSwitchPM* TL_messages_setInlineBotResults::mutable_switch_pm() {
  
  if (switch_pm_ == NULL) {
    switch_pm_ = new ::mtproto::InlineBotSwitchPM;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_messages_setInlineBotResults.switch_pm)
  return switch_pm_;
}
::mtproto::InlineBotSwitchPM* TL_messages_setInlineBotResults::release_switch_pm() {
  // @@protoc_insertion_point(field_release:mtproto.TL_messages_setInlineBotResults.switch_pm)
  
  ::mtproto::InlineBotSwitchPM* temp = switch_pm_;
  switch_pm_ = NULL;
  return temp;
}
void TL_messages_setInlineBotResults::set_allocated_switch_pm(::mtproto::InlineBotSwitchPM* switch_pm) {
  delete switch_pm_;
  switch_pm_ = switch_pm;
  if (switch_pm) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_messages_setInlineBotResults.switch_pm)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TL_messages_sendInlineBotResult::kSilentFieldNumber;
const int TL_messages_sendInlineBotResult::kBackgroundFieldNumber;
const int TL_messages_sendInlineBotResult::kClearDraftFieldNumber;
const int TL_messages_sendInlineBotResult::kPeerFieldNumber;
const int TL_messages_sendInlineBotResult::kReplyToMsgIdFieldNumber;
const int TL_messages_sendInlineBotResult::kRandomIdFieldNumber;
const int TL_messages_sendInlineBotResult::kQueryIdFieldNumber;
const int TL_messages_sendInlineBotResult::kIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TL_messages_sendInlineBotResult::TL_messages_sendInlineBotResult()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.TL_messages_sendInlineBotResult)
}
TL_messages_sendInlineBotResult::TL_messages_sendInlineBotResult(const TL_messages_sendInlineBotResult& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.id().size() > 0) {
    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  if (from.has_peer()) {
    peer_ = new ::mtproto::InputPeer(*from.peer_);
  } else {
    peer_ = NULL;
  }
  ::memcpy(&silent_, &from.silent_,
    static_cast<size_t>(reinterpret_cast<char*>(&query_id_) -
    reinterpret_cast<char*>(&silent_)) + sizeof(query_id_));
  // @@protoc_insertion_point(copy_constructor:mtproto.TL_messages_sendInlineBotResult)
}

void TL_messages_sendInlineBotResult::SharedCtor() {
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&peer_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&query_id_) -
      reinterpret_cast<char*>(&peer_)) + sizeof(query_id_));
  _cached_size_ = 0;
}

TL_messages_sendInlineBotResult::~TL_messages_sendInlineBotResult() {
  // @@protoc_insertion_point(destructor:mtproto.TL_messages_sendInlineBotResult)
  SharedDtor();
}

void TL_messages_sendInlineBotResult::SharedDtor() {
  id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete peer_;
}

void TL_messages_sendInlineBotResult::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TL_messages_sendInlineBotResult::descriptor() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TL_messages_sendInlineBotResult& TL_messages_sendInlineBotResult::default_instance() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  return *internal_default_instance();
}

TL_messages_sendInlineBotResult* TL_messages_sendInlineBotResult::New(::google::protobuf::Arena* arena) const {
  TL_messages_sendInlineBotResult* n = new TL_messages_sendInlineBotResult;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TL_messages_sendInlineBotResult::Swap(TL_messages_sendInlineBotResult* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TL_messages_sendInlineBotResult::InternalSwap(TL_messages_sendInlineBotResult* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata TL_messages_sendInlineBotResult::GetMetadata() const {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TL_messages_sendInlineBotResult

// bool silent = 2;
void TL_messages_sendInlineBotResult::clear_silent() {
  silent_ = false;
}
bool TL_messages_sendInlineBotResult::silent() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_sendInlineBotResult.silent)
  return silent_;
}
void TL_messages_sendInlineBotResult::set_silent(bool value) {
  
  silent_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_sendInlineBotResult.silent)
}

// bool background = 3;
void TL_messages_sendInlineBotResult::clear_background() {
  background_ = false;
}
bool TL_messages_sendInlineBotResult::background() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_sendInlineBotResult.background)
  return background_;
}
void TL_messages_sendInlineBotResult::set_background(bool value) {
  
  background_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_sendInlineBotResult.background)
}

// bool clear_draft = 4;
void TL_messages_sendInlineBotResult::clear_clear_draft() {
  clear_draft_ = false;
}
bool TL_messages_sendInlineBotResult::clear_draft() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_sendInlineBotResult.clear_draft)
  return clear_draft_;
}
void TL_messages_sendInlineBotResult::set_clear_draft(bool value) {
  
  clear_draft_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_sendInlineBotResult.clear_draft)
}

// .mtproto.InputPeer peer = 5;
bool TL_messages_sendInlineBotResult::has_peer() const {
  return this != internal_default_instance() && peer_ != NULL;
}
void TL_messages_sendInlineBotResult::clear_peer() {
  if (GetArenaNoVirtual() == NULL && peer_ != NULL) delete peer_;
  peer_ = NULL;
}
const ::mtproto::InputPeer& TL_messages_sendInlineBotResult::peer() const {
  const ::mtproto::InputPeer* p = peer_;
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_sendInlineBotResult.peer)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::InputPeer*>(
      &::mtproto::_InputPeer_default_instance_);
}
::mtproto::InputPeer* TL_messages_sendInlineBotResult::mutable_peer() {
  
  if (peer_ == NULL) {
    peer_ = new ::mtproto::InputPeer;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_messages_sendInlineBotResult.peer)
  return peer_;
}
::mtproto::InputPeer* TL_messages_sendInlineBotResult::release_peer() {
  // @@protoc_insertion_point(field_release:mtproto.TL_messages_sendInlineBotResult.peer)
  
  ::mtproto::InputPeer* temp = peer_;
  peer_ = NULL;
  return temp;
}
void TL_messages_sendInlineBotResult::set_allocated_peer(::mtproto::InputPeer* peer) {
  delete peer_;
  peer_ = peer;
  if (peer) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_messages_sendInlineBotResult.peer)
}

// int32 reply_to_msg_id = 6;
void TL_messages_sendInlineBotResult::clear_reply_to_msg_id() {
  reply_to_msg_id_ = 0;
}
::google::protobuf::int32 TL_messages_sendInlineBotResult::reply_to_msg_id() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_sendInlineBotResult.reply_to_msg_id)
  return reply_to_msg_id_;
}
void TL_messages_sendInlineBotResult::set_reply_to_msg_id(::google::protobuf::int32 value) {
  
  reply_to_msg_id_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_sendInlineBotResult.reply_to_msg_id)
}

// int64 random_id = 7;
void TL_messages_sendInlineBotResult::clear_random_id() {
  random_id_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 TL_messages_sendInlineBotResult::random_id() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_sendInlineBotResult.random_id)
  return random_id_;
}
void TL_messages_sendInlineBotResult::set_random_id(::google::protobuf::int64 value) {
  
  random_id_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_sendInlineBotResult.random_id)
}

// int64 query_id = 8;
void TL_messages_sendInlineBotResult::clear_query_id() {
  query_id_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 TL_messages_sendInlineBotResult::query_id() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_sendInlineBotResult.query_id)
  return query_id_;
}
void TL_messages_sendInlineBotResult::set_query_id(::google::protobuf::int64 value) {
  
  query_id_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_sendInlineBotResult.query_id)
}

// string id = 9;
void TL_messages_sendInlineBotResult::clear_id() {
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& TL_messages_sendInlineBotResult::id() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_sendInlineBotResult.id)
  return id_.GetNoArena();
}
void TL_messages_sendInlineBotResult::set_id(const ::std::string& value) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_sendInlineBotResult.id)
}
#if LANG_CXX11
void TL_messages_sendInlineBotResult::set_id(::std::string&& value) {
  
  id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mtproto.TL_messages_sendInlineBotResult.id)
}
#endif
void TL_messages_sendInlineBotResult::set_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtproto.TL_messages_sendInlineBotResult.id)
}
void TL_messages_sendInlineBotResult::set_id(const char* value, size_t size) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtproto.TL_messages_sendInlineBotResult.id)
}
::std::string* TL_messages_sendInlineBotResult::mutable_id() {
  
  // @@protoc_insertion_point(field_mutable:mtproto.TL_messages_sendInlineBotResult.id)
  return id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* TL_messages_sendInlineBotResult::release_id() {
  // @@protoc_insertion_point(field_release:mtproto.TL_messages_sendInlineBotResult.id)
  
  return id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TL_messages_sendInlineBotResult::set_allocated_id(::std::string* id) {
  if (id != NULL) {
    
  } else {
    
  }
  id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id);
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_messages_sendInlineBotResult.id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TL_messages_getMessageEditData::kPeerFieldNumber;
const int TL_messages_getMessageEditData::kIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TL_messages_getMessageEditData::TL_messages_getMessageEditData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.TL_messages_getMessageEditData)
}
TL_messages_getMessageEditData::TL_messages_getMessageEditData(const TL_messages_getMessageEditData& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_peer()) {
    peer_ = new ::mtproto::InputPeer(*from.peer_);
  } else {
    peer_ = NULL;
  }
  id_ = from.id_;
  // @@protoc_insertion_point(copy_constructor:mtproto.TL_messages_getMessageEditData)
}

void TL_messages_getMessageEditData::SharedCtor() {
  ::memset(&peer_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&id_) -
      reinterpret_cast<char*>(&peer_)) + sizeof(id_));
  _cached_size_ = 0;
}

TL_messages_getMessageEditData::~TL_messages_getMessageEditData() {
  // @@protoc_insertion_point(destructor:mtproto.TL_messages_getMessageEditData)
  SharedDtor();
}

void TL_messages_getMessageEditData::SharedDtor() {
  if (this != internal_default_instance()) delete peer_;
}

void TL_messages_getMessageEditData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TL_messages_getMessageEditData::descriptor() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TL_messages_getMessageEditData& TL_messages_getMessageEditData::default_instance() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  return *internal_default_instance();
}

TL_messages_getMessageEditData* TL_messages_getMessageEditData::New(::google::protobuf::Arena* arena) const {
  TL_messages_getMessageEditData* n = new TL_messages_getMessageEditData;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TL_messages_getMessageEditData::Swap(TL_messages_getMessageEditData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TL_messages_getMessageEditData::InternalSwap(TL_messages_getMessageEditData* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata TL_messages_getMessageEditData::GetMetadata() const {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TL_messages_getMessageEditData

// .mtproto.InputPeer peer = 1;
bool TL_messages_getMessageEditData::has_peer() const {
  return this != internal_default_instance() && peer_ != NULL;
}
void TL_messages_getMessageEditData::clear_peer() {
  if (GetArenaNoVirtual() == NULL && peer_ != NULL) delete peer_;
  peer_ = NULL;
}
const ::mtproto::InputPeer& TL_messages_getMessageEditData::peer() const {
  const ::mtproto::InputPeer* p = peer_;
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_getMessageEditData.peer)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::InputPeer*>(
      &::mtproto::_InputPeer_default_instance_);
}
::mtproto::InputPeer* TL_messages_getMessageEditData::mutable_peer() {
  
  if (peer_ == NULL) {
    peer_ = new ::mtproto::InputPeer;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_messages_getMessageEditData.peer)
  return peer_;
}
::mtproto::InputPeer* TL_messages_getMessageEditData::release_peer() {
  // @@protoc_insertion_point(field_release:mtproto.TL_messages_getMessageEditData.peer)
  
  ::mtproto::InputPeer* temp = peer_;
  peer_ = NULL;
  return temp;
}
void TL_messages_getMessageEditData::set_allocated_peer(::mtproto::InputPeer* peer) {
  delete peer_;
  peer_ = peer;
  if (peer) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_messages_getMessageEditData.peer)
}

// int32 id = 2;
void TL_messages_getMessageEditData::clear_id() {
  id_ = 0;
}
::google::protobuf::int32 TL_messages_getMessageEditData::id() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_getMessageEditData.id)
  return id_;
}
void TL_messages_getMessageEditData::set_id(::google::protobuf::int32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_getMessageEditData.id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TL_messages_editMessage::kNoWebpageFieldNumber;
const int TL_messages_editMessage::kStopGeoLiveFieldNumber;
const int TL_messages_editMessage::kPeerFieldNumber;
const int TL_messages_editMessage::kIdFieldNumber;
const int TL_messages_editMessage::kMessageFieldNumber;
const int TL_messages_editMessage::kMediaFieldNumber;
const int TL_messages_editMessage::kReplyMarkupFieldNumber;
const int TL_messages_editMessage::kEntitiesFieldNumber;
const int TL_messages_editMessage::kGeoPointFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TL_messages_editMessage::TL_messages_editMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.TL_messages_editMessage)
}
TL_messages_editMessage::TL_messages_editMessage(const TL_messages_editMessage& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      entities_(from.entities_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.message().size() > 0) {
    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
  if (from.has_peer()) {
    peer_ = new ::mtproto::InputPeer(*from.peer_);
  } else {
    peer_ = NULL;
  }
  if (from.has_media()) {
    media_ = new ::mtproto::InputMedia(*from.media_);
  } else {
    media_ = NULL;
  }
  if (from.has_reply_markup()) {
    reply_markup_ = new ::mtproto::ReplyMarkup(*from.reply_markup_);
  } else {
    reply_markup_ = NULL;
  }
  if (from.has_geo_point()) {
    geo_point_ = new ::mtproto::InputGeoPoint(*from.geo_point_);
  } else {
    geo_point_ = NULL;
  }
  ::memcpy(&no_webpage_, &from.no_webpage_,
    static_cast<size_t>(reinterpret_cast<char*>(&id_) -
    reinterpret_cast<char*>(&no_webpage_)) + sizeof(id_));
  // @@protoc_insertion_point(copy_constructor:mtproto.TL_messages_editMessage)
}

void TL_messages_editMessage::SharedCtor() {
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&peer_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&id_) -
      reinterpret_cast<char*>(&peer_)) + sizeof(id_));
  _cached_size_ = 0;
}

TL_messages_editMessage::~TL_messages_editMessage() {
  // @@protoc_insertion_point(destructor:mtproto.TL_messages_editMessage)
  SharedDtor();
}

void TL_messages_editMessage::SharedDtor() {
  message_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete peer_;
  if (this != internal_default_instance()) delete media_;
  if (this != internal_default_instance()) delete reply_markup_;
  if (this != internal_default_instance()) delete geo_point_;
}

void TL_messages_editMessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TL_messages_editMessage::descriptor() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TL_messages_editMessage& TL_messages_editMessage::default_instance() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  return *internal_default_instance();
}

TL_messages_editMessage* TL_messages_editMessage::New(::google::protobuf::Arena* arena) const {
  TL_messages_editMessage* n = new TL_messages_editMessage;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TL_messages_editMessage::Swap(TL_messages_editMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TL_messages_editMessage::InternalSwap(TL_messages_editMessage* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata TL_messages_editMessage::GetMetadata() const {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TL_messages_editMessage

// bool no_webpage = 2;
void TL_messages_editMessage::clear_no_webpage() {
  no_webpage_ = false;
}
bool TL_messages_editMessage::no_webpage() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_editMessage.no_webpage)
  return no_webpage_;
}
void TL_messages_editMessage::set_no_webpage(bool value) {
  
  no_webpage_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_editMessage.no_webpage)
}

// bool stop_geo_live = 3;
void TL_messages_editMessage::clear_stop_geo_live() {
  stop_geo_live_ = false;
}
bool TL_messages_editMessage::stop_geo_live() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_editMessage.stop_geo_live)
  return stop_geo_live_;
}
void TL_messages_editMessage::set_stop_geo_live(bool value) {
  
  stop_geo_live_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_editMessage.stop_geo_live)
}

// .mtproto.InputPeer peer = 4;
bool TL_messages_editMessage::has_peer() const {
  return this != internal_default_instance() && peer_ != NULL;
}
void TL_messages_editMessage::clear_peer() {
  if (GetArenaNoVirtual() == NULL && peer_ != NULL) delete peer_;
  peer_ = NULL;
}
const ::mtproto::InputPeer& TL_messages_editMessage::peer() const {
  const ::mtproto::InputPeer* p = peer_;
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_editMessage.peer)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::InputPeer*>(
      &::mtproto::_InputPeer_default_instance_);
}
::mtproto::InputPeer* TL_messages_editMessage::mutable_peer() {
  
  if (peer_ == NULL) {
    peer_ = new ::mtproto::InputPeer;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_messages_editMessage.peer)
  return peer_;
}
::mtproto::InputPeer* TL_messages_editMessage::release_peer() {
  // @@protoc_insertion_point(field_release:mtproto.TL_messages_editMessage.peer)
  
  ::mtproto::InputPeer* temp = peer_;
  peer_ = NULL;
  return temp;
}
void TL_messages_editMessage::set_allocated_peer(::mtproto::InputPeer* peer) {
  delete peer_;
  peer_ = peer;
  if (peer) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_messages_editMessage.peer)
}

// int32 id = 5;
void TL_messages_editMessage::clear_id() {
  id_ = 0;
}
::google::protobuf::int32 TL_messages_editMessage::id() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_editMessage.id)
  return id_;
}
void TL_messages_editMessage::set_id(::google::protobuf::int32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_editMessage.id)
}

// string message = 6;
void TL_messages_editMessage::clear_message() {
  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& TL_messages_editMessage::message() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_editMessage.message)
  return message_.GetNoArena();
}
void TL_messages_editMessage::set_message(const ::std::string& value) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_editMessage.message)
}
#if LANG_CXX11
void TL_messages_editMessage::set_message(::std::string&& value) {
  
  message_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mtproto.TL_messages_editMessage.message)
}
#endif
void TL_messages_editMessage::set_message(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtproto.TL_messages_editMessage.message)
}
void TL_messages_editMessage::set_message(const char* value, size_t size) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtproto.TL_messages_editMessage.message)
}
::std::string* TL_messages_editMessage::mutable_message() {
  
  // @@protoc_insertion_point(field_mutable:mtproto.TL_messages_editMessage.message)
  return message_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* TL_messages_editMessage::release_message() {
  // @@protoc_insertion_point(field_release:mtproto.TL_messages_editMessage.message)
  
  return message_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TL_messages_editMessage::set_allocated_message(::std::string* message) {
  if (message != NULL) {
    
  } else {
    
  }
  message_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), message);
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_messages_editMessage.message)
}

// .mtproto.InputMedia media = 7;
bool TL_messages_editMessage::has_media() const {
  return this != internal_default_instance() && media_ != NULL;
}
void TL_messages_editMessage::clear_media() {
  if (GetArenaNoVirtual() == NULL && media_ != NULL) delete media_;
  media_ = NULL;
}
const ::mtproto::InputMedia& TL_messages_editMessage::media() const {
  const ::mtproto::InputMedia* p = media_;
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_editMessage.media)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::InputMedia*>(
      &::mtproto::_InputMedia_default_instance_);
}
::mtproto::InputMedia* TL_messages_editMessage::mutable_media() {
  
  if (media_ == NULL) {
    media_ = new ::mtproto::InputMedia;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_messages_editMessage.media)
  return media_;
}
::mtproto::InputMedia* TL_messages_editMessage::release_media() {
  // @@protoc_insertion_point(field_release:mtproto.TL_messages_editMessage.media)
  
  ::mtproto::InputMedia* temp = media_;
  media_ = NULL;
  return temp;
}
void TL_messages_editMessage::set_allocated_media(::mtproto::InputMedia* media) {
  delete media_;
  media_ = media;
  if (media) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_messages_editMessage.media)
}

// .mtproto.ReplyMarkup reply_markup = 8;
bool TL_messages_editMessage::has_reply_markup() const {
  return this != internal_default_instance() && reply_markup_ != NULL;
}
void TL_messages_editMessage::clear_reply_markup() {
  if (GetArenaNoVirtual() == NULL && reply_markup_ != NULL) delete reply_markup_;
  reply_markup_ = NULL;
}
const ::mtproto::ReplyMarkup& TL_messages_editMessage::reply_markup() const {
  const ::mtproto::ReplyMarkup* p = reply_markup_;
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_editMessage.reply_markup)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::ReplyMarkup*>(
      &::mtproto::_ReplyMarkup_default_instance_);
}
::mtproto::ReplyMarkup* TL_messages_editMessage::mutable_reply_markup() {
  
  if (reply_markup_ == NULL) {
    reply_markup_ = new ::mtproto::ReplyMarkup;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_messages_editMessage.reply_markup)
  return reply_markup_;
}
::mtproto::ReplyMarkup* TL_messages_editMessage::release_reply_markup() {
  // @@protoc_insertion_point(field_release:mtproto.TL_messages_editMessage.reply_markup)
  
  ::mtproto::ReplyMarkup* temp = reply_markup_;
  reply_markup_ = NULL;
  return temp;
}
void TL_messages_editMessage::set_allocated_reply_markup(::mtproto::ReplyMarkup* reply_markup) {
  delete reply_markup_;
  reply_markup_ = reply_markup;
  if (reply_markup) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_messages_editMessage.reply_markup)
}

// repeated .mtproto.MessageEntity entities = 9;
int TL_messages_editMessage::entities_size() const {
  return entities_.size();
}
void TL_messages_editMessage::clear_entities() {
  entities_.Clear();
}
const ::mtproto::MessageEntity& TL_messages_editMessage::entities(int index) const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_editMessage.entities)
  return entities_.Get(index);
}
::mtproto::MessageEntity* TL_messages_editMessage::mutable_entities(int index) {
  // @@protoc_insertion_point(field_mutable:mtproto.TL_messages_editMessage.entities)
  return entities_.Mutable(index);
}
::mtproto::MessageEntity* TL_messages_editMessage::add_entities() {
  // @@protoc_insertion_point(field_add:mtproto.TL_messages_editMessage.entities)
  return entities_.Add();
}
::google::protobuf::RepeatedPtrField< ::mtproto::MessageEntity >*
TL_messages_editMessage::mutable_entities() {
  // @@protoc_insertion_point(field_mutable_list:mtproto.TL_messages_editMessage.entities)
  return &entities_;
}
const ::google::protobuf::RepeatedPtrField< ::mtproto::MessageEntity >&
TL_messages_editMessage::entities() const {
  // @@protoc_insertion_point(field_list:mtproto.TL_messages_editMessage.entities)
  return entities_;
}

// .mtproto.InputGeoPoint geo_point = 10;
bool TL_messages_editMessage::has_geo_point() const {
  return this != internal_default_instance() && geo_point_ != NULL;
}
void TL_messages_editMessage::clear_geo_point() {
  if (GetArenaNoVirtual() == NULL && geo_point_ != NULL) delete geo_point_;
  geo_point_ = NULL;
}
const ::mtproto::InputGeoPoint& TL_messages_editMessage::geo_point() const {
  const ::mtproto::InputGeoPoint* p = geo_point_;
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_editMessage.geo_point)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::InputGeoPoint*>(
      &::mtproto::_InputGeoPoint_default_instance_);
}
::mtproto::InputGeoPoint* TL_messages_editMessage::mutable_geo_point() {
  
  if (geo_point_ == NULL) {
    geo_point_ = new ::mtproto::InputGeoPoint;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_messages_editMessage.geo_point)
  return geo_point_;
}
::mtproto::InputGeoPoint* TL_messages_editMessage::release_geo_point() {
  // @@protoc_insertion_point(field_release:mtproto.TL_messages_editMessage.geo_point)
  
  ::mtproto::InputGeoPoint* temp = geo_point_;
  geo_point_ = NULL;
  return temp;
}
void TL_messages_editMessage::set_allocated_geo_point(::mtproto::InputGeoPoint* geo_point) {
  delete geo_point_;
  geo_point_ = geo_point;
  if (geo_point) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_messages_editMessage.geo_point)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TL_messages_editInlineBotMessage::kNoWebpageFieldNumber;
const int TL_messages_editInlineBotMessage::kStopGeoLiveFieldNumber;
const int TL_messages_editInlineBotMessage::kIdFieldNumber;
const int TL_messages_editInlineBotMessage::kMessageFieldNumber;
const int TL_messages_editInlineBotMessage::kMediaFieldNumber;
const int TL_messages_editInlineBotMessage::kReplyMarkupFieldNumber;
const int TL_messages_editInlineBotMessage::kEntitiesFieldNumber;
const int TL_messages_editInlineBotMessage::kGeoPointFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TL_messages_editInlineBotMessage::TL_messages_editInlineBotMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.TL_messages_editInlineBotMessage)
}
TL_messages_editInlineBotMessage::TL_messages_editInlineBotMessage(const TL_messages_editInlineBotMessage& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      entities_(from.entities_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.message().size() > 0) {
    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
  if (from.has_id()) {
    id_ = new ::mtproto::InputBotInlineMessageID(*from.id_);
  } else {
    id_ = NULL;
  }
  if (from.has_media()) {
    media_ = new ::mtproto::InputMedia(*from.media_);
  } else {
    media_ = NULL;
  }
  if (from.has_reply_markup()) {
    reply_markup_ = new ::mtproto::ReplyMarkup(*from.reply_markup_);
  } else {
    reply_markup_ = NULL;
  }
  if (from.has_geo_point()) {
    geo_point_ = new ::mtproto::InputGeoPoint(*from.geo_point_);
  } else {
    geo_point_ = NULL;
  }
  ::memcpy(&no_webpage_, &from.no_webpage_,
    static_cast<size_t>(reinterpret_cast<char*>(&stop_geo_live_) -
    reinterpret_cast<char*>(&no_webpage_)) + sizeof(stop_geo_live_));
  // @@protoc_insertion_point(copy_constructor:mtproto.TL_messages_editInlineBotMessage)
}

void TL_messages_editInlineBotMessage::SharedCtor() {
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&stop_geo_live_) -
      reinterpret_cast<char*>(&id_)) + sizeof(stop_geo_live_));
  _cached_size_ = 0;
}

TL_messages_editInlineBotMessage::~TL_messages_editInlineBotMessage() {
  // @@protoc_insertion_point(destructor:mtproto.TL_messages_editInlineBotMessage)
  SharedDtor();
}

void TL_messages_editInlineBotMessage::SharedDtor() {
  message_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete id_;
  if (this != internal_default_instance()) delete media_;
  if (this != internal_default_instance()) delete reply_markup_;
  if (this != internal_default_instance()) delete geo_point_;
}

void TL_messages_editInlineBotMessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TL_messages_editInlineBotMessage::descriptor() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TL_messages_editInlineBotMessage& TL_messages_editInlineBotMessage::default_instance() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  return *internal_default_instance();
}

TL_messages_editInlineBotMessage* TL_messages_editInlineBotMessage::New(::google::protobuf::Arena* arena) const {
  TL_messages_editInlineBotMessage* n = new TL_messages_editInlineBotMessage;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TL_messages_editInlineBotMessage::Swap(TL_messages_editInlineBotMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TL_messages_editInlineBotMessage::InternalSwap(TL_messages_editInlineBotMessage* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata TL_messages_editInlineBotMessage::GetMetadata() const {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TL_messages_editInlineBotMessage

// bool no_webpage = 2;
void TL_messages_editInlineBotMessage::clear_no_webpage() {
  no_webpage_ = false;
}
bool TL_messages_editInlineBotMessage::no_webpage() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_editInlineBotMessage.no_webpage)
  return no_webpage_;
}
void TL_messages_editInlineBotMessage::set_no_webpage(bool value) {
  
  no_webpage_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_editInlineBotMessage.no_webpage)
}

// bool stop_geo_live = 3;
void TL_messages_editInlineBotMessage::clear_stop_geo_live() {
  stop_geo_live_ = false;
}
bool TL_messages_editInlineBotMessage::stop_geo_live() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_editInlineBotMessage.stop_geo_live)
  return stop_geo_live_;
}
void TL_messages_editInlineBotMessage::set_stop_geo_live(bool value) {
  
  stop_geo_live_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_editInlineBotMessage.stop_geo_live)
}

// .mtproto.InputBotInlineMessageID id = 4;
bool TL_messages_editInlineBotMessage::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
void TL_messages_editInlineBotMessage::clear_id() {
  if (GetArenaNoVirtual() == NULL && id_ != NULL) delete id_;
  id_ = NULL;
}
const ::mtproto::InputBotInlineMessageID& TL_messages_editInlineBotMessage::id() const {
  const ::mtproto::InputBotInlineMessageID* p = id_;
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_editInlineBotMessage.id)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::InputBotInlineMessageID*>(
      &::mtproto::_InputBotInlineMessageID_default_instance_);
}
::mtproto::InputBotInlineMessageID* TL_messages_editInlineBotMessage::mutable_id() {
  
  if (id_ == NULL) {
    id_ = new ::mtproto::InputBotInlineMessageID;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_messages_editInlineBotMessage.id)
  return id_;
}
::mtproto::InputBotInlineMessageID* TL_messages_editInlineBotMessage::release_id() {
  // @@protoc_insertion_point(field_release:mtproto.TL_messages_editInlineBotMessage.id)
  
  ::mtproto::InputBotInlineMessageID* temp = id_;
  id_ = NULL;
  return temp;
}
void TL_messages_editInlineBotMessage::set_allocated_id(::mtproto::InputBotInlineMessageID* id) {
  delete id_;
  id_ = id;
  if (id) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_messages_editInlineBotMessage.id)
}

// string message = 5;
void TL_messages_editInlineBotMessage::clear_message() {
  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& TL_messages_editInlineBotMessage::message() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_editInlineBotMessage.message)
  return message_.GetNoArena();
}
void TL_messages_editInlineBotMessage::set_message(const ::std::string& value) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_editInlineBotMessage.message)
}
#if LANG_CXX11
void TL_messages_editInlineBotMessage::set_message(::std::string&& value) {
  
  message_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mtproto.TL_messages_editInlineBotMessage.message)
}
#endif
void TL_messages_editInlineBotMessage::set_message(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtproto.TL_messages_editInlineBotMessage.message)
}
void TL_messages_editInlineBotMessage::set_message(const char* value, size_t size) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtproto.TL_messages_editInlineBotMessage.message)
}
::std::string* TL_messages_editInlineBotMessage::mutable_message() {
  
  // @@protoc_insertion_point(field_mutable:mtproto.TL_messages_editInlineBotMessage.message)
  return message_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* TL_messages_editInlineBotMessage::release_message() {
  // @@protoc_insertion_point(field_release:mtproto.TL_messages_editInlineBotMessage.message)
  
  return message_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TL_messages_editInlineBotMessage::set_allocated_message(::std::string* message) {
  if (message != NULL) {
    
  } else {
    
  }
  message_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), message);
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_messages_editInlineBotMessage.message)
}

// .mtproto.InputMedia media = 6;
bool TL_messages_editInlineBotMessage::has_media() const {
  return this != internal_default_instance() && media_ != NULL;
}
void TL_messages_editInlineBotMessage::clear_media() {
  if (GetArenaNoVirtual() == NULL && media_ != NULL) delete media_;
  media_ = NULL;
}
const ::mtproto::InputMedia& TL_messages_editInlineBotMessage::media() const {
  const ::mtproto::InputMedia* p = media_;
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_editInlineBotMessage.media)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::InputMedia*>(
      &::mtproto::_InputMedia_default_instance_);
}
::mtproto::InputMedia* TL_messages_editInlineBotMessage::mutable_media() {
  
  if (media_ == NULL) {
    media_ = new ::mtproto::InputMedia;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_messages_editInlineBotMessage.media)
  return media_;
}
::mtproto::InputMedia* TL_messages_editInlineBotMessage::release_media() {
  // @@protoc_insertion_point(field_release:mtproto.TL_messages_editInlineBotMessage.media)
  
  ::mtproto::InputMedia* temp = media_;
  media_ = NULL;
  return temp;
}
void TL_messages_editInlineBotMessage::set_allocated_media(::mtproto::InputMedia* media) {
  delete media_;
  media_ = media;
  if (media) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_messages_editInlineBotMessage.media)
}

// .mtproto.ReplyMarkup reply_markup = 7;
bool TL_messages_editInlineBotMessage::has_reply_markup() const {
  return this != internal_default_instance() && reply_markup_ != NULL;
}
void TL_messages_editInlineBotMessage::clear_reply_markup() {
  if (GetArenaNoVirtual() == NULL && reply_markup_ != NULL) delete reply_markup_;
  reply_markup_ = NULL;
}
const ::mtproto::ReplyMarkup& TL_messages_editInlineBotMessage::reply_markup() const {
  const ::mtproto::ReplyMarkup* p = reply_markup_;
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_editInlineBotMessage.reply_markup)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::ReplyMarkup*>(
      &::mtproto::_ReplyMarkup_default_instance_);
}
::mtproto::ReplyMarkup* TL_messages_editInlineBotMessage::mutable_reply_markup() {
  
  if (reply_markup_ == NULL) {
    reply_markup_ = new ::mtproto::ReplyMarkup;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_messages_editInlineBotMessage.reply_markup)
  return reply_markup_;
}
::mtproto::ReplyMarkup* TL_messages_editInlineBotMessage::release_reply_markup() {
  // @@protoc_insertion_point(field_release:mtproto.TL_messages_editInlineBotMessage.reply_markup)
  
  ::mtproto::ReplyMarkup* temp = reply_markup_;
  reply_markup_ = NULL;
  return temp;
}
void TL_messages_editInlineBotMessage::set_allocated_reply_markup(::mtproto::ReplyMarkup* reply_markup) {
  delete reply_markup_;
  reply_markup_ = reply_markup;
  if (reply_markup) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_messages_editInlineBotMessage.reply_markup)
}

// repeated .mtproto.MessageEntity entities = 8;
int TL_messages_editInlineBotMessage::entities_size() const {
  return entities_.size();
}
void TL_messages_editInlineBotMessage::clear_entities() {
  entities_.Clear();
}
const ::mtproto::MessageEntity& TL_messages_editInlineBotMessage::entities(int index) const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_editInlineBotMessage.entities)
  return entities_.Get(index);
}
::mtproto::MessageEntity* TL_messages_editInlineBotMessage::mutable_entities(int index) {
  // @@protoc_insertion_point(field_mutable:mtproto.TL_messages_editInlineBotMessage.entities)
  return entities_.Mutable(index);
}
::mtproto::MessageEntity* TL_messages_editInlineBotMessage::add_entities() {
  // @@protoc_insertion_point(field_add:mtproto.TL_messages_editInlineBotMessage.entities)
  return entities_.Add();
}
::google::protobuf::RepeatedPtrField< ::mtproto::MessageEntity >*
TL_messages_editInlineBotMessage::mutable_entities() {
  // @@protoc_insertion_point(field_mutable_list:mtproto.TL_messages_editInlineBotMessage.entities)
  return &entities_;
}
const ::google::protobuf::RepeatedPtrField< ::mtproto::MessageEntity >&
TL_messages_editInlineBotMessage::entities() const {
  // @@protoc_insertion_point(field_list:mtproto.TL_messages_editInlineBotMessage.entities)
  return entities_;
}

// .mtproto.InputGeoPoint geo_point = 9;
bool TL_messages_editInlineBotMessage::has_geo_point() const {
  return this != internal_default_instance() && geo_point_ != NULL;
}
void TL_messages_editInlineBotMessage::clear_geo_point() {
  if (GetArenaNoVirtual() == NULL && geo_point_ != NULL) delete geo_point_;
  geo_point_ = NULL;
}
const ::mtproto::InputGeoPoint& TL_messages_editInlineBotMessage::geo_point() const {
  const ::mtproto::InputGeoPoint* p = geo_point_;
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_editInlineBotMessage.geo_point)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::InputGeoPoint*>(
      &::mtproto::_InputGeoPoint_default_instance_);
}
::mtproto::InputGeoPoint* TL_messages_editInlineBotMessage::mutable_geo_point() {
  
  if (geo_point_ == NULL) {
    geo_point_ = new ::mtproto::InputGeoPoint;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_messages_editInlineBotMessage.geo_point)
  return geo_point_;
}
::mtproto::InputGeoPoint* TL_messages_editInlineBotMessage::release_geo_point() {
  // @@protoc_insertion_point(field_release:mtproto.TL_messages_editInlineBotMessage.geo_point)
  
  ::mtproto::InputGeoPoint* temp = geo_point_;
  geo_point_ = NULL;
  return temp;
}
void TL_messages_editInlineBotMessage::set_allocated_geo_point(::mtproto::InputGeoPoint* geo_point) {
  delete geo_point_;
  geo_point_ = geo_point;
  if (geo_point) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_messages_editInlineBotMessage.geo_point)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TL_messages_getBotCallbackAnswer::kGameFieldNumber;
const int TL_messages_getBotCallbackAnswer::kPeerFieldNumber;
const int TL_messages_getBotCallbackAnswer::kMsgIdFieldNumber;
const int TL_messages_getBotCallbackAnswer::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TL_messages_getBotCallbackAnswer::TL_messages_getBotCallbackAnswer()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.TL_messages_getBotCallbackAnswer)
}
TL_messages_getBotCallbackAnswer::TL_messages_getBotCallbackAnswer(const TL_messages_getBotCallbackAnswer& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.data().size() > 0) {
    data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
  }
  if (from.has_peer()) {
    peer_ = new ::mtproto::InputPeer(*from.peer_);
  } else {
    peer_ = NULL;
  }
  ::memcpy(&game_, &from.game_,
    static_cast<size_t>(reinterpret_cast<char*>(&msg_id_) -
    reinterpret_cast<char*>(&game_)) + sizeof(msg_id_));
  // @@protoc_insertion_point(copy_constructor:mtproto.TL_messages_getBotCallbackAnswer)
}

void TL_messages_getBotCallbackAnswer::SharedCtor() {
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&peer_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&msg_id_) -
      reinterpret_cast<char*>(&peer_)) + sizeof(msg_id_));
  _cached_size_ = 0;
}

TL_messages_getBotCallbackAnswer::~TL_messages_getBotCallbackAnswer() {
  // @@protoc_insertion_point(destructor:mtproto.TL_messages_getBotCallbackAnswer)
  SharedDtor();
}

void TL_messages_getBotCallbackAnswer::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete peer_;
}

void TL_messages_getBotCallbackAnswer::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TL_messages_getBotCallbackAnswer::descriptor() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TL_messages_getBotCallbackAnswer& TL_messages_getBotCallbackAnswer::default_instance() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  return *internal_default_instance();
}

TL_messages_getBotCallbackAnswer* TL_messages_getBotCallbackAnswer::New(::google::protobuf::Arena* arena) const {
  TL_messages_getBotCallbackAnswer* n = new TL_messages_getBotCallbackAnswer;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TL_messages_getBotCallbackAnswer::Swap(TL_messages_getBotCallbackAnswer* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TL_messages_getBotCallbackAnswer::InternalSwap(TL_messages_getBotCallbackAnswer* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata TL_messages_getBotCallbackAnswer::GetMetadata() const {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TL_messages_getBotCallbackAnswer

// bool game = 2;
void TL_messages_getBotCallbackAnswer::clear_game() {
  game_ = false;
}
bool TL_messages_getBotCallbackAnswer::game() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_getBotCallbackAnswer.game)
  return game_;
}
void TL_messages_getBotCallbackAnswer::set_game(bool value) {
  
  game_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_getBotCallbackAnswer.game)
}

// .mtproto.InputPeer peer = 3;
bool TL_messages_getBotCallbackAnswer::has_peer() const {
  return this != internal_default_instance() && peer_ != NULL;
}
void TL_messages_getBotCallbackAnswer::clear_peer() {
  if (GetArenaNoVirtual() == NULL && peer_ != NULL) delete peer_;
  peer_ = NULL;
}
const ::mtproto::InputPeer& TL_messages_getBotCallbackAnswer::peer() const {
  const ::mtproto::InputPeer* p = peer_;
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_getBotCallbackAnswer.peer)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::InputPeer*>(
      &::mtproto::_InputPeer_default_instance_);
}
::mtproto::InputPeer* TL_messages_getBotCallbackAnswer::mutable_peer() {
  
  if (peer_ == NULL) {
    peer_ = new ::mtproto::InputPeer;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_messages_getBotCallbackAnswer.peer)
  return peer_;
}
::mtproto::InputPeer* TL_messages_getBotCallbackAnswer::release_peer() {
  // @@protoc_insertion_point(field_release:mtproto.TL_messages_getBotCallbackAnswer.peer)
  
  ::mtproto::InputPeer* temp = peer_;
  peer_ = NULL;
  return temp;
}
void TL_messages_getBotCallbackAnswer::set_allocated_peer(::mtproto::InputPeer* peer) {
  delete peer_;
  peer_ = peer;
  if (peer) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_messages_getBotCallbackAnswer.peer)
}

// int32 msg_id = 4;
void TL_messages_getBotCallbackAnswer::clear_msg_id() {
  msg_id_ = 0;
}
::google::protobuf::int32 TL_messages_getBotCallbackAnswer::msg_id() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_getBotCallbackAnswer.msg_id)
  return msg_id_;
}
void TL_messages_getBotCallbackAnswer::set_msg_id(::google::protobuf::int32 value) {
  
  msg_id_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_getBotCallbackAnswer.msg_id)
}

// bytes data = 5;
void TL_messages_getBotCallbackAnswer::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& TL_messages_getBotCallbackAnswer::data() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_getBotCallbackAnswer.data)
  return data_.GetNoArena();
}
void TL_messages_getBotCallbackAnswer::set_data(const ::std::string& value) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_getBotCallbackAnswer.data)
}
#if LANG_CXX11
void TL_messages_getBotCallbackAnswer::set_data(::std::string&& value) {
  
  data_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mtproto.TL_messages_getBotCallbackAnswer.data)
}
#endif
void TL_messages_getBotCallbackAnswer::set_data(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtproto.TL_messages_getBotCallbackAnswer.data)
}
void TL_messages_getBotCallbackAnswer::set_data(const void* value, size_t size) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtproto.TL_messages_getBotCallbackAnswer.data)
}
::std::string* TL_messages_getBotCallbackAnswer::mutable_data() {
  
  // @@protoc_insertion_point(field_mutable:mtproto.TL_messages_getBotCallbackAnswer.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* TL_messages_getBotCallbackAnswer::release_data() {
  // @@protoc_insertion_point(field_release:mtproto.TL_messages_getBotCallbackAnswer.data)
  
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TL_messages_getBotCallbackAnswer::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    
  } else {
    
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_messages_getBotCallbackAnswer.data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TL_messages_setBotCallbackAnswer::kAlertFieldNumber;
const int TL_messages_setBotCallbackAnswer::kQueryIdFieldNumber;
const int TL_messages_setBotCallbackAnswer::kMessageFieldNumber;
const int TL_messages_setBotCallbackAnswer::kUrlFieldNumber;
const int TL_messages_setBotCallbackAnswer::kCacheTimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TL_messages_setBotCallbackAnswer::TL_messages_setBotCallbackAnswer()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.TL_messages_setBotCallbackAnswer)
}
TL_messages_setBotCallbackAnswer::TL_messages_setBotCallbackAnswer(const TL_messages_setBotCallbackAnswer& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.message().size() > 0) {
    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
  url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.url().size() > 0) {
    url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.url_);
  }
  ::memcpy(&query_id_, &from.query_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&cache_time_) -
    reinterpret_cast<char*>(&query_id_)) + sizeof(cache_time_));
  // @@protoc_insertion_point(copy_constructor:mtproto.TL_messages_setBotCallbackAnswer)
}

void TL_messages_setBotCallbackAnswer::SharedCtor() {
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&query_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&cache_time_) -
      reinterpret_cast<char*>(&query_id_)) + sizeof(cache_time_));
  _cached_size_ = 0;
}

TL_messages_setBotCallbackAnswer::~TL_messages_setBotCallbackAnswer() {
  // @@protoc_insertion_point(destructor:mtproto.TL_messages_setBotCallbackAnswer)
  SharedDtor();
}

void TL_messages_setBotCallbackAnswer::SharedDtor() {
  message_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  url_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void TL_messages_setBotCallbackAnswer::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TL_messages_setBotCallbackAnswer::descriptor() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TL_messages_setBotCallbackAnswer& TL_messages_setBotCallbackAnswer::default_instance() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  return *internal_default_instance();
}

TL_messages_setBotCallbackAnswer* TL_messages_setBotCallbackAnswer::New(::google::protobuf::Arena* arena) const {
  TL_messages_setBotCallbackAnswer* n = new TL_messages_setBotCallbackAnswer;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TL_messages_setBotCallbackAnswer::Swap(TL_messages_setBotCallbackAnswer* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TL_messages_setBotCallbackAnswer::InternalSwap(TL_messages_setBotCallbackAnswer* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata TL_messages_setBotCallbackAnswer::GetMetadata() const {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TL_messages_setBotCallbackAnswer

// bool alert = 2;
void TL_messages_setBotCallbackAnswer::clear_alert() {
  alert_ = false;
}
bool TL_messages_setBotCallbackAnswer::alert() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_setBotCallbackAnswer.alert)
  return alert_;
}
void TL_messages_setBotCallbackAnswer::set_alert(bool value) {
  
  alert_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_setBotCallbackAnswer.alert)
}

// int64 query_id = 3;
void TL_messages_setBotCallbackAnswer::clear_query_id() {
  query_id_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 TL_messages_setBotCallbackAnswer::query_id() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_setBotCallbackAnswer.query_id)
  return query_id_;
}
void TL_messages_setBotCallbackAnswer::set_query_id(::google::protobuf::int64 value) {
  
  query_id_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_setBotCallbackAnswer.query_id)
}

// string message = 4;
void TL_messages_setBotCallbackAnswer::clear_message() {
  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& TL_messages_setBotCallbackAnswer::message() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_setBotCallbackAnswer.message)
  return message_.GetNoArena();
}
void TL_messages_setBotCallbackAnswer::set_message(const ::std::string& value) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_setBotCallbackAnswer.message)
}
#if LANG_CXX11
void TL_messages_setBotCallbackAnswer::set_message(::std::string&& value) {
  
  message_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mtproto.TL_messages_setBotCallbackAnswer.message)
}
#endif
void TL_messages_setBotCallbackAnswer::set_message(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtproto.TL_messages_setBotCallbackAnswer.message)
}
void TL_messages_setBotCallbackAnswer::set_message(const char* value, size_t size) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtproto.TL_messages_setBotCallbackAnswer.message)
}
::std::string* TL_messages_setBotCallbackAnswer::mutable_message() {
  
  // @@protoc_insertion_point(field_mutable:mtproto.TL_messages_setBotCallbackAnswer.message)
  return message_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* TL_messages_setBotCallbackAnswer::release_message() {
  // @@protoc_insertion_point(field_release:mtproto.TL_messages_setBotCallbackAnswer.message)
  
  return message_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TL_messages_setBotCallbackAnswer::set_allocated_message(::std::string* message) {
  if (message != NULL) {
    
  } else {
    
  }
  message_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), message);
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_messages_setBotCallbackAnswer.message)
}

// string url = 5;
void TL_messages_setBotCallbackAnswer::clear_url() {
  url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& TL_messages_setBotCallbackAnswer::url() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_setBotCallbackAnswer.url)
  return url_.GetNoArena();
}
void TL_messages_setBotCallbackAnswer::set_url(const ::std::string& value) {
  
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_setBotCallbackAnswer.url)
}
#if LANG_CXX11
void TL_messages_setBotCallbackAnswer::set_url(::std::string&& value) {
  
  url_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mtproto.TL_messages_setBotCallbackAnswer.url)
}
#endif
void TL_messages_setBotCallbackAnswer::set_url(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtproto.TL_messages_setBotCallbackAnswer.url)
}
void TL_messages_setBotCallbackAnswer::set_url(const char* value, size_t size) {
  
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtproto.TL_messages_setBotCallbackAnswer.url)
}
::std::string* TL_messages_setBotCallbackAnswer::mutable_url() {
  
  // @@protoc_insertion_point(field_mutable:mtproto.TL_messages_setBotCallbackAnswer.url)
  return url_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* TL_messages_setBotCallbackAnswer::release_url() {
  // @@protoc_insertion_point(field_release:mtproto.TL_messages_setBotCallbackAnswer.url)
  
  return url_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TL_messages_setBotCallbackAnswer::set_allocated_url(::std::string* url) {
  if (url != NULL) {
    
  } else {
    
  }
  url_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), url);
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_messages_setBotCallbackAnswer.url)
}

// int32 cache_time = 6;
void TL_messages_setBotCallbackAnswer::clear_cache_time() {
  cache_time_ = 0;
}
::google::protobuf::int32 TL_messages_setBotCallbackAnswer::cache_time() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_setBotCallbackAnswer.cache_time)
  return cache_time_;
}
void TL_messages_setBotCallbackAnswer::set_cache_time(::google::protobuf::int32 value) {
  
  cache_time_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_setBotCallbackAnswer.cache_time)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TL_messages_getPeerDialogs::kPeersFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TL_messages_getPeerDialogs::TL_messages_getPeerDialogs()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.TL_messages_getPeerDialogs)
}
TL_messages_getPeerDialogs::TL_messages_getPeerDialogs(const TL_messages_getPeerDialogs& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      peers_(from.peers_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:mtproto.TL_messages_getPeerDialogs)
}

void TL_messages_getPeerDialogs::SharedCtor() {
  _cached_size_ = 0;
}

TL_messages_getPeerDialogs::~TL_messages_getPeerDialogs() {
  // @@protoc_insertion_point(destructor:mtproto.TL_messages_getPeerDialogs)
  SharedDtor();
}

void TL_messages_getPeerDialogs::SharedDtor() {
}

void TL_messages_getPeerDialogs::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TL_messages_getPeerDialogs::descriptor() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TL_messages_getPeerDialogs& TL_messages_getPeerDialogs::default_instance() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  return *internal_default_instance();
}

TL_messages_getPeerDialogs* TL_messages_getPeerDialogs::New(::google::protobuf::Arena* arena) const {
  TL_messages_getPeerDialogs* n = new TL_messages_getPeerDialogs;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TL_messages_getPeerDialogs::Swap(TL_messages_getPeerDialogs* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TL_messages_getPeerDialogs::InternalSwap(TL_messages_getPeerDialogs* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata TL_messages_getPeerDialogs::GetMetadata() const {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TL_messages_getPeerDialogs

// repeated .mtproto.InputDialogPeer peers = 1;
int TL_messages_getPeerDialogs::peers_size() const {
  return peers_.size();
}
void TL_messages_getPeerDialogs::clear_peers() {
  peers_.Clear();
}
const ::mtproto::InputDialogPeer& TL_messages_getPeerDialogs::peers(int index) const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_getPeerDialogs.peers)
  return peers_.Get(index);
}
::mtproto::InputDialogPeer* TL_messages_getPeerDialogs::mutable_peers(int index) {
  // @@protoc_insertion_point(field_mutable:mtproto.TL_messages_getPeerDialogs.peers)
  return peers_.Mutable(index);
}
::mtproto::InputDialogPeer* TL_messages_getPeerDialogs::add_peers() {
  // @@protoc_insertion_point(field_add:mtproto.TL_messages_getPeerDialogs.peers)
  return peers_.Add();
}
::google::protobuf::RepeatedPtrField< ::mtproto::InputDialogPeer >*
TL_messages_getPeerDialogs::mutable_peers() {
  // @@protoc_insertion_point(field_mutable_list:mtproto.TL_messages_getPeerDialogs.peers)
  return &peers_;
}
const ::google::protobuf::RepeatedPtrField< ::mtproto::InputDialogPeer >&
TL_messages_getPeerDialogs::peers() const {
  // @@protoc_insertion_point(field_list:mtproto.TL_messages_getPeerDialogs.peers)
  return peers_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TL_messages_saveDraft::kNoWebpageFieldNumber;
const int TL_messages_saveDraft::kReplyToMsgIdFieldNumber;
const int TL_messages_saveDraft::kPeerFieldNumber;
const int TL_messages_saveDraft::kMessageFieldNumber;
const int TL_messages_saveDraft::kEntitiesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TL_messages_saveDraft::TL_messages_saveDraft()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.TL_messages_saveDraft)
}
TL_messages_saveDraft::TL_messages_saveDraft(const TL_messages_saveDraft& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      entities_(from.entities_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.message().size() > 0) {
    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
  if (from.has_peer()) {
    peer_ = new ::mtproto::InputPeer(*from.peer_);
  } else {
    peer_ = NULL;
  }
  ::memcpy(&no_webpage_, &from.no_webpage_,
    static_cast<size_t>(reinterpret_cast<char*>(&reply_to_msg_id_) -
    reinterpret_cast<char*>(&no_webpage_)) + sizeof(reply_to_msg_id_));
  // @@protoc_insertion_point(copy_constructor:mtproto.TL_messages_saveDraft)
}

void TL_messages_saveDraft::SharedCtor() {
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&peer_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&reply_to_msg_id_) -
      reinterpret_cast<char*>(&peer_)) + sizeof(reply_to_msg_id_));
  _cached_size_ = 0;
}

TL_messages_saveDraft::~TL_messages_saveDraft() {
  // @@protoc_insertion_point(destructor:mtproto.TL_messages_saveDraft)
  SharedDtor();
}

void TL_messages_saveDraft::SharedDtor() {
  message_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete peer_;
}

void TL_messages_saveDraft::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TL_messages_saveDraft::descriptor() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TL_messages_saveDraft& TL_messages_saveDraft::default_instance() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  return *internal_default_instance();
}

TL_messages_saveDraft* TL_messages_saveDraft::New(::google::protobuf::Arena* arena) const {
  TL_messages_saveDraft* n = new TL_messages_saveDraft;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TL_messages_saveDraft::Swap(TL_messages_saveDraft* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TL_messages_saveDraft::InternalSwap(TL_messages_saveDraft* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata TL_messages_saveDraft::GetMetadata() const {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TL_messages_saveDraft

// bool no_webpage = 2;
void TL_messages_saveDraft::clear_no_webpage() {
  no_webpage_ = false;
}
bool TL_messages_saveDraft::no_webpage() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_saveDraft.no_webpage)
  return no_webpage_;
}
void TL_messages_saveDraft::set_no_webpage(bool value) {
  
  no_webpage_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_saveDraft.no_webpage)
}

// int32 reply_to_msg_id = 3;
void TL_messages_saveDraft::clear_reply_to_msg_id() {
  reply_to_msg_id_ = 0;
}
::google::protobuf::int32 TL_messages_saveDraft::reply_to_msg_id() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_saveDraft.reply_to_msg_id)
  return reply_to_msg_id_;
}
void TL_messages_saveDraft::set_reply_to_msg_id(::google::protobuf::int32 value) {
  
  reply_to_msg_id_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_saveDraft.reply_to_msg_id)
}

// .mtproto.InputPeer peer = 4;
bool TL_messages_saveDraft::has_peer() const {
  return this != internal_default_instance() && peer_ != NULL;
}
void TL_messages_saveDraft::clear_peer() {
  if (GetArenaNoVirtual() == NULL && peer_ != NULL) delete peer_;
  peer_ = NULL;
}
const ::mtproto::InputPeer& TL_messages_saveDraft::peer() const {
  const ::mtproto::InputPeer* p = peer_;
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_saveDraft.peer)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::InputPeer*>(
      &::mtproto::_InputPeer_default_instance_);
}
::mtproto::InputPeer* TL_messages_saveDraft::mutable_peer() {
  
  if (peer_ == NULL) {
    peer_ = new ::mtproto::InputPeer;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_messages_saveDraft.peer)
  return peer_;
}
::mtproto::InputPeer* TL_messages_saveDraft::release_peer() {
  // @@protoc_insertion_point(field_release:mtproto.TL_messages_saveDraft.peer)
  
  ::mtproto::InputPeer* temp = peer_;
  peer_ = NULL;
  return temp;
}
void TL_messages_saveDraft::set_allocated_peer(::mtproto::InputPeer* peer) {
  delete peer_;
  peer_ = peer;
  if (peer) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_messages_saveDraft.peer)
}

// string message = 5;
void TL_messages_saveDraft::clear_message() {
  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& TL_messages_saveDraft::message() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_saveDraft.message)
  return message_.GetNoArena();
}
void TL_messages_saveDraft::set_message(const ::std::string& value) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_saveDraft.message)
}
#if LANG_CXX11
void TL_messages_saveDraft::set_message(::std::string&& value) {
  
  message_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mtproto.TL_messages_saveDraft.message)
}
#endif
void TL_messages_saveDraft::set_message(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtproto.TL_messages_saveDraft.message)
}
void TL_messages_saveDraft::set_message(const char* value, size_t size) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtproto.TL_messages_saveDraft.message)
}
::std::string* TL_messages_saveDraft::mutable_message() {
  
  // @@protoc_insertion_point(field_mutable:mtproto.TL_messages_saveDraft.message)
  return message_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* TL_messages_saveDraft::release_message() {
  // @@protoc_insertion_point(field_release:mtproto.TL_messages_saveDraft.message)
  
  return message_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TL_messages_saveDraft::set_allocated_message(::std::string* message) {
  if (message != NULL) {
    
  } else {
    
  }
  message_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), message);
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_messages_saveDraft.message)
}

// repeated .mtproto.MessageEntity entities = 6;
int TL_messages_saveDraft::entities_size() const {
  return entities_.size();
}
void TL_messages_saveDraft::clear_entities() {
  entities_.Clear();
}
const ::mtproto::MessageEntity& TL_messages_saveDraft::entities(int index) const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_saveDraft.entities)
  return entities_.Get(index);
}
::mtproto::MessageEntity* TL_messages_saveDraft::mutable_entities(int index) {
  // @@protoc_insertion_point(field_mutable:mtproto.TL_messages_saveDraft.entities)
  return entities_.Mutable(index);
}
::mtproto::MessageEntity* TL_messages_saveDraft::add_entities() {
  // @@protoc_insertion_point(field_add:mtproto.TL_messages_saveDraft.entities)
  return entities_.Add();
}
::google::protobuf::RepeatedPtrField< ::mtproto::MessageEntity >*
TL_messages_saveDraft::mutable_entities() {
  // @@protoc_insertion_point(field_mutable_list:mtproto.TL_messages_saveDraft.entities)
  return &entities_;
}
const ::google::protobuf::RepeatedPtrField< ::mtproto::MessageEntity >&
TL_messages_saveDraft::entities() const {
  // @@protoc_insertion_point(field_list:mtproto.TL_messages_saveDraft.entities)
  return entities_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TL_messages_getAllDrafts::TL_messages_getAllDrafts()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.TL_messages_getAllDrafts)
}
TL_messages_getAllDrafts::TL_messages_getAllDrafts(const TL_messages_getAllDrafts& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:mtproto.TL_messages_getAllDrafts)
}

void TL_messages_getAllDrafts::SharedCtor() {
  _cached_size_ = 0;
}

TL_messages_getAllDrafts::~TL_messages_getAllDrafts() {
  // @@protoc_insertion_point(destructor:mtproto.TL_messages_getAllDrafts)
  SharedDtor();
}

void TL_messages_getAllDrafts::SharedDtor() {
}

void TL_messages_getAllDrafts::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TL_messages_getAllDrafts::descriptor() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TL_messages_getAllDrafts& TL_messages_getAllDrafts::default_instance() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  return *internal_default_instance();
}

TL_messages_getAllDrafts* TL_messages_getAllDrafts::New(::google::protobuf::Arena* arena) const {
  TL_messages_getAllDrafts* n = new TL_messages_getAllDrafts;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TL_messages_getAllDrafts::Swap(TL_messages_getAllDrafts* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TL_messages_getAllDrafts::InternalSwap(TL_messages_getAllDrafts* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata TL_messages_getAllDrafts::GetMetadata() const {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TL_messages_getAllDrafts

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TL_messages_getFeaturedStickers::kHashFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TL_messages_getFeaturedStickers::TL_messages_getFeaturedStickers()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.TL_messages_getFeaturedStickers)
}
TL_messages_getFeaturedStickers::TL_messages_getFeaturedStickers(const TL_messages_getFeaturedStickers& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  hash_ = from.hash_;
  // @@protoc_insertion_point(copy_constructor:mtproto.TL_messages_getFeaturedStickers)
}

void TL_messages_getFeaturedStickers::SharedCtor() {
  hash_ = 0;
  _cached_size_ = 0;
}

TL_messages_getFeaturedStickers::~TL_messages_getFeaturedStickers() {
  // @@protoc_insertion_point(destructor:mtproto.TL_messages_getFeaturedStickers)
  SharedDtor();
}

void TL_messages_getFeaturedStickers::SharedDtor() {
}

void TL_messages_getFeaturedStickers::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TL_messages_getFeaturedStickers::descriptor() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TL_messages_getFeaturedStickers& TL_messages_getFeaturedStickers::default_instance() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  return *internal_default_instance();
}

TL_messages_getFeaturedStickers* TL_messages_getFeaturedStickers::New(::google::protobuf::Arena* arena) const {
  TL_messages_getFeaturedStickers* n = new TL_messages_getFeaturedStickers;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TL_messages_getFeaturedStickers::Swap(TL_messages_getFeaturedStickers* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TL_messages_getFeaturedStickers::InternalSwap(TL_messages_getFeaturedStickers* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata TL_messages_getFeaturedStickers::GetMetadata() const {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TL_messages_getFeaturedStickers

// int32 hash = 1;
void TL_messages_getFeaturedStickers::clear_hash() {
  hash_ = 0;
}
::google::protobuf::int32 TL_messages_getFeaturedStickers::hash() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_getFeaturedStickers.hash)
  return hash_;
}
void TL_messages_getFeaturedStickers::set_hash(::google::protobuf::int32 value) {
  
  hash_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_getFeaturedStickers.hash)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TL_messages_readFeaturedStickers::kIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TL_messages_readFeaturedStickers::TL_messages_readFeaturedStickers()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.TL_messages_readFeaturedStickers)
}
TL_messages_readFeaturedStickers::TL_messages_readFeaturedStickers(const TL_messages_readFeaturedStickers& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      id_(from.id_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:mtproto.TL_messages_readFeaturedStickers)
}

void TL_messages_readFeaturedStickers::SharedCtor() {
  _cached_size_ = 0;
}

TL_messages_readFeaturedStickers::~TL_messages_readFeaturedStickers() {
  // @@protoc_insertion_point(destructor:mtproto.TL_messages_readFeaturedStickers)
  SharedDtor();
}

void TL_messages_readFeaturedStickers::SharedDtor() {
}

void TL_messages_readFeaturedStickers::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TL_messages_readFeaturedStickers::descriptor() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TL_messages_readFeaturedStickers& TL_messages_readFeaturedStickers::default_instance() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  return *internal_default_instance();
}

TL_messages_readFeaturedStickers* TL_messages_readFeaturedStickers::New(::google::protobuf::Arena* arena) const {
  TL_messages_readFeaturedStickers* n = new TL_messages_readFeaturedStickers;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TL_messages_readFeaturedStickers::Swap(TL_messages_readFeaturedStickers* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TL_messages_readFeaturedStickers::InternalSwap(TL_messages_readFeaturedStickers* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata TL_messages_readFeaturedStickers::GetMetadata() const {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TL_messages_readFeaturedStickers

// repeated int64 id = 1;
int TL_messages_readFeaturedStickers::id_size() const {
  return id_.size();
}
void TL_messages_readFeaturedStickers::clear_id() {
  id_.Clear();
}
::google::protobuf::int64 TL_messages_readFeaturedStickers::id(int index) const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_readFeaturedStickers.id)
  return id_.Get(index);
}
void TL_messages_readFeaturedStickers::set_id(int index, ::google::protobuf::int64 value) {
  id_.Set(index, value);
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_readFeaturedStickers.id)
}
void TL_messages_readFeaturedStickers::add_id(::google::protobuf::int64 value) {
  id_.Add(value);
  // @@protoc_insertion_point(field_add:mtproto.TL_messages_readFeaturedStickers.id)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
TL_messages_readFeaturedStickers::id() const {
  // @@protoc_insertion_point(field_list:mtproto.TL_messages_readFeaturedStickers.id)
  return id_;
}
::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
TL_messages_readFeaturedStickers::mutable_id() {
  // @@protoc_insertion_point(field_mutable_list:mtproto.TL_messages_readFeaturedStickers.id)
  return &id_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TL_messages_getRecentStickers::kAttachedFieldNumber;
const int TL_messages_getRecentStickers::kHashFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TL_messages_getRecentStickers::TL_messages_getRecentStickers()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.TL_messages_getRecentStickers)
}
TL_messages_getRecentStickers::TL_messages_getRecentStickers(const TL_messages_getRecentStickers& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&attached_, &from.attached_,
    static_cast<size_t>(reinterpret_cast<char*>(&hash_) -
    reinterpret_cast<char*>(&attached_)) + sizeof(hash_));
  // @@protoc_insertion_point(copy_constructor:mtproto.TL_messages_getRecentStickers)
}

void TL_messages_getRecentStickers::SharedCtor() {
  ::memset(&attached_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&hash_) -
      reinterpret_cast<char*>(&attached_)) + sizeof(hash_));
  _cached_size_ = 0;
}

TL_messages_getRecentStickers::~TL_messages_getRecentStickers() {
  // @@protoc_insertion_point(destructor:mtproto.TL_messages_getRecentStickers)
  SharedDtor();
}

void TL_messages_getRecentStickers::SharedDtor() {
}

void TL_messages_getRecentStickers::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TL_messages_getRecentStickers::descriptor() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TL_messages_getRecentStickers& TL_messages_getRecentStickers::default_instance() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  return *internal_default_instance();
}

TL_messages_getRecentStickers* TL_messages_getRecentStickers::New(::google::protobuf::Arena* arena) const {
  TL_messages_getRecentStickers* n = new TL_messages_getRecentStickers;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TL_messages_getRecentStickers::Swap(TL_messages_getRecentStickers* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TL_messages_getRecentStickers::InternalSwap(TL_messages_getRecentStickers* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata TL_messages_getRecentStickers::GetMetadata() const {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TL_messages_getRecentStickers

// bool attached = 2;
void TL_messages_getRecentStickers::clear_attached() {
  attached_ = false;
}
bool TL_messages_getRecentStickers::attached() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_getRecentStickers.attached)
  return attached_;
}
void TL_messages_getRecentStickers::set_attached(bool value) {
  
  attached_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_getRecentStickers.attached)
}

// int32 hash = 3;
void TL_messages_getRecentStickers::clear_hash() {
  hash_ = 0;
}
::google::protobuf::int32 TL_messages_getRecentStickers::hash() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_getRecentStickers.hash)
  return hash_;
}
void TL_messages_getRecentStickers::set_hash(::google::protobuf::int32 value) {
  
  hash_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_getRecentStickers.hash)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TL_messages_saveRecentSticker::kAttachedFieldNumber;
const int TL_messages_saveRecentSticker::kIdFieldNumber;
const int TL_messages_saveRecentSticker::kUnsaveFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TL_messages_saveRecentSticker::TL_messages_saveRecentSticker()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.TL_messages_saveRecentSticker)
}
TL_messages_saveRecentSticker::TL_messages_saveRecentSticker(const TL_messages_saveRecentSticker& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_id()) {
    id_ = new ::mtproto::InputDocument(*from.id_);
  } else {
    id_ = NULL;
  }
  if (from.has_unsave()) {
    unsave_ = new ::mtproto::Bool(*from.unsave_);
  } else {
    unsave_ = NULL;
  }
  attached_ = from.attached_;
  // @@protoc_insertion_point(copy_constructor:mtproto.TL_messages_saveRecentSticker)
}

void TL_messages_saveRecentSticker::SharedCtor() {
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&attached_) -
      reinterpret_cast<char*>(&id_)) + sizeof(attached_));
  _cached_size_ = 0;
}

TL_messages_saveRecentSticker::~TL_messages_saveRecentSticker() {
  // @@protoc_insertion_point(destructor:mtproto.TL_messages_saveRecentSticker)
  SharedDtor();
}

void TL_messages_saveRecentSticker::SharedDtor() {
  if (this != internal_default_instance()) delete id_;
  if (this != internal_default_instance()) delete unsave_;
}

void TL_messages_saveRecentSticker::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TL_messages_saveRecentSticker::descriptor() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TL_messages_saveRecentSticker& TL_messages_saveRecentSticker::default_instance() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  return *internal_default_instance();
}

TL_messages_saveRecentSticker* TL_messages_saveRecentSticker::New(::google::protobuf::Arena* arena) const {
  TL_messages_saveRecentSticker* n = new TL_messages_saveRecentSticker;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TL_messages_saveRecentSticker::Swap(TL_messages_saveRecentSticker* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TL_messages_saveRecentSticker::InternalSwap(TL_messages_saveRecentSticker* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata TL_messages_saveRecentSticker::GetMetadata() const {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TL_messages_saveRecentSticker

// bool attached = 2;
void TL_messages_saveRecentSticker::clear_attached() {
  attached_ = false;
}
bool TL_messages_saveRecentSticker::attached() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_saveRecentSticker.attached)
  return attached_;
}
void TL_messages_saveRecentSticker::set_attached(bool value) {
  
  attached_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_saveRecentSticker.attached)
}

// .mtproto.InputDocument id = 3;
bool TL_messages_saveRecentSticker::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
void TL_messages_saveRecentSticker::clear_id() {
  if (GetArenaNoVirtual() == NULL && id_ != NULL) delete id_;
  id_ = NULL;
}
const ::mtproto::InputDocument& TL_messages_saveRecentSticker::id() const {
  const ::mtproto::InputDocument* p = id_;
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_saveRecentSticker.id)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::InputDocument*>(
      &::mtproto::_InputDocument_default_instance_);
}
::mtproto::InputDocument* TL_messages_saveRecentSticker::mutable_id() {
  
  if (id_ == NULL) {
    id_ = new ::mtproto::InputDocument;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_messages_saveRecentSticker.id)
  return id_;
}
::mtproto::InputDocument* TL_messages_saveRecentSticker::release_id() {
  // @@protoc_insertion_point(field_release:mtproto.TL_messages_saveRecentSticker.id)
  
  ::mtproto::InputDocument* temp = id_;
  id_ = NULL;
  return temp;
}
void TL_messages_saveRecentSticker::set_allocated_id(::mtproto::InputDocument* id) {
  delete id_;
  id_ = id;
  if (id) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_messages_saveRecentSticker.id)
}

// .mtproto.Bool unsave = 4;
bool TL_messages_saveRecentSticker::has_unsave() const {
  return this != internal_default_instance() && unsave_ != NULL;
}
void TL_messages_saveRecentSticker::clear_unsave() {
  if (GetArenaNoVirtual() == NULL && unsave_ != NULL) delete unsave_;
  unsave_ = NULL;
}
const ::mtproto::Bool& TL_messages_saveRecentSticker::unsave() const {
  const ::mtproto::Bool* p = unsave_;
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_saveRecentSticker.unsave)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::Bool*>(
      &::mtproto::_Bool_default_instance_);
}
::mtproto::Bool* TL_messages_saveRecentSticker::mutable_unsave() {
  
  if (unsave_ == NULL) {
    unsave_ = new ::mtproto::Bool;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_messages_saveRecentSticker.unsave)
  return unsave_;
}
::mtproto::Bool* TL_messages_saveRecentSticker::release_unsave() {
  // @@protoc_insertion_point(field_release:mtproto.TL_messages_saveRecentSticker.unsave)
  
  ::mtproto::Bool* temp = unsave_;
  unsave_ = NULL;
  return temp;
}
void TL_messages_saveRecentSticker::set_allocated_unsave(::mtproto::Bool* unsave) {
  delete unsave_;
  unsave_ = unsave;
  if (unsave) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_messages_saveRecentSticker.unsave)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TL_messages_clearRecentStickers::kAttachedFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TL_messages_clearRecentStickers::TL_messages_clearRecentStickers()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.TL_messages_clearRecentStickers)
}
TL_messages_clearRecentStickers::TL_messages_clearRecentStickers(const TL_messages_clearRecentStickers& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  attached_ = from.attached_;
  // @@protoc_insertion_point(copy_constructor:mtproto.TL_messages_clearRecentStickers)
}

void TL_messages_clearRecentStickers::SharedCtor() {
  attached_ = false;
  _cached_size_ = 0;
}

TL_messages_clearRecentStickers::~TL_messages_clearRecentStickers() {
  // @@protoc_insertion_point(destructor:mtproto.TL_messages_clearRecentStickers)
  SharedDtor();
}

void TL_messages_clearRecentStickers::SharedDtor() {
}

void TL_messages_clearRecentStickers::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TL_messages_clearRecentStickers::descriptor() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TL_messages_clearRecentStickers& TL_messages_clearRecentStickers::default_instance() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  return *internal_default_instance();
}

TL_messages_clearRecentStickers* TL_messages_clearRecentStickers::New(::google::protobuf::Arena* arena) const {
  TL_messages_clearRecentStickers* n = new TL_messages_clearRecentStickers;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TL_messages_clearRecentStickers::Swap(TL_messages_clearRecentStickers* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TL_messages_clearRecentStickers::InternalSwap(TL_messages_clearRecentStickers* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata TL_messages_clearRecentStickers::GetMetadata() const {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TL_messages_clearRecentStickers

// bool attached = 2;
void TL_messages_clearRecentStickers::clear_attached() {
  attached_ = false;
}
bool TL_messages_clearRecentStickers::attached() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_clearRecentStickers.attached)
  return attached_;
}
void TL_messages_clearRecentStickers::set_attached(bool value) {
  
  attached_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_clearRecentStickers.attached)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TL_messages_getArchivedStickers::kMasksFieldNumber;
const int TL_messages_getArchivedStickers::kOffsetIdFieldNumber;
const int TL_messages_getArchivedStickers::kLimitFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TL_messages_getArchivedStickers::TL_messages_getArchivedStickers()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.TL_messages_getArchivedStickers)
}
TL_messages_getArchivedStickers::TL_messages_getArchivedStickers(const TL_messages_getArchivedStickers& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&offset_id_, &from.offset_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&limit_) -
    reinterpret_cast<char*>(&offset_id_)) + sizeof(limit_));
  // @@protoc_insertion_point(copy_constructor:mtproto.TL_messages_getArchivedStickers)
}

void TL_messages_getArchivedStickers::SharedCtor() {
  ::memset(&offset_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&limit_) -
      reinterpret_cast<char*>(&offset_id_)) + sizeof(limit_));
  _cached_size_ = 0;
}

TL_messages_getArchivedStickers::~TL_messages_getArchivedStickers() {
  // @@protoc_insertion_point(destructor:mtproto.TL_messages_getArchivedStickers)
  SharedDtor();
}

void TL_messages_getArchivedStickers::SharedDtor() {
}

void TL_messages_getArchivedStickers::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TL_messages_getArchivedStickers::descriptor() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TL_messages_getArchivedStickers& TL_messages_getArchivedStickers::default_instance() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  return *internal_default_instance();
}

TL_messages_getArchivedStickers* TL_messages_getArchivedStickers::New(::google::protobuf::Arena* arena) const {
  TL_messages_getArchivedStickers* n = new TL_messages_getArchivedStickers;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TL_messages_getArchivedStickers::Swap(TL_messages_getArchivedStickers* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TL_messages_getArchivedStickers::InternalSwap(TL_messages_getArchivedStickers* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata TL_messages_getArchivedStickers::GetMetadata() const {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TL_messages_getArchivedStickers

// bool masks = 2;
void TL_messages_getArchivedStickers::clear_masks() {
  masks_ = false;
}
bool TL_messages_getArchivedStickers::masks() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_getArchivedStickers.masks)
  return masks_;
}
void TL_messages_getArchivedStickers::set_masks(bool value) {
  
  masks_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_getArchivedStickers.masks)
}

// int64 offset_id = 3;
void TL_messages_getArchivedStickers::clear_offset_id() {
  offset_id_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 TL_messages_getArchivedStickers::offset_id() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_getArchivedStickers.offset_id)
  return offset_id_;
}
void TL_messages_getArchivedStickers::set_offset_id(::google::protobuf::int64 value) {
  
  offset_id_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_getArchivedStickers.offset_id)
}

// int32 limit = 4;
void TL_messages_getArchivedStickers::clear_limit() {
  limit_ = 0;
}
::google::protobuf::int32 TL_messages_getArchivedStickers::limit() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_getArchivedStickers.limit)
  return limit_;
}
void TL_messages_getArchivedStickers::set_limit(::google::protobuf::int32 value) {
  
  limit_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_getArchivedStickers.limit)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TL_messages_getMaskStickers::kHashFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TL_messages_getMaskStickers::TL_messages_getMaskStickers()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.TL_messages_getMaskStickers)
}
TL_messages_getMaskStickers::TL_messages_getMaskStickers(const TL_messages_getMaskStickers& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  hash_ = from.hash_;
  // @@protoc_insertion_point(copy_constructor:mtproto.TL_messages_getMaskStickers)
}

void TL_messages_getMaskStickers::SharedCtor() {
  hash_ = 0;
  _cached_size_ = 0;
}

TL_messages_getMaskStickers::~TL_messages_getMaskStickers() {
  // @@protoc_insertion_point(destructor:mtproto.TL_messages_getMaskStickers)
  SharedDtor();
}

void TL_messages_getMaskStickers::SharedDtor() {
}

void TL_messages_getMaskStickers::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TL_messages_getMaskStickers::descriptor() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TL_messages_getMaskStickers& TL_messages_getMaskStickers::default_instance() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  return *internal_default_instance();
}

TL_messages_getMaskStickers* TL_messages_getMaskStickers::New(::google::protobuf::Arena* arena) const {
  TL_messages_getMaskStickers* n = new TL_messages_getMaskStickers;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TL_messages_getMaskStickers::Swap(TL_messages_getMaskStickers* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TL_messages_getMaskStickers::InternalSwap(TL_messages_getMaskStickers* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata TL_messages_getMaskStickers::GetMetadata() const {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TL_messages_getMaskStickers

// int32 hash = 1;
void TL_messages_getMaskStickers::clear_hash() {
  hash_ = 0;
}
::google::protobuf::int32 TL_messages_getMaskStickers::hash() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_getMaskStickers.hash)
  return hash_;
}
void TL_messages_getMaskStickers::set_hash(::google::protobuf::int32 value) {
  
  hash_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_getMaskStickers.hash)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TL_messages_getAttachedStickers::kMediaFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TL_messages_getAttachedStickers::TL_messages_getAttachedStickers()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.TL_messages_getAttachedStickers)
}
TL_messages_getAttachedStickers::TL_messages_getAttachedStickers(const TL_messages_getAttachedStickers& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_media()) {
    media_ = new ::mtproto::InputStickeredMedia(*from.media_);
  } else {
    media_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:mtproto.TL_messages_getAttachedStickers)
}

void TL_messages_getAttachedStickers::SharedCtor() {
  media_ = NULL;
  _cached_size_ = 0;
}

TL_messages_getAttachedStickers::~TL_messages_getAttachedStickers() {
  // @@protoc_insertion_point(destructor:mtproto.TL_messages_getAttachedStickers)
  SharedDtor();
}

void TL_messages_getAttachedStickers::SharedDtor() {
  if (this != internal_default_instance()) delete media_;
}

void TL_messages_getAttachedStickers::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TL_messages_getAttachedStickers::descriptor() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TL_messages_getAttachedStickers& TL_messages_getAttachedStickers::default_instance() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  return *internal_default_instance();
}

TL_messages_getAttachedStickers* TL_messages_getAttachedStickers::New(::google::protobuf::Arena* arena) const {
  TL_messages_getAttachedStickers* n = new TL_messages_getAttachedStickers;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TL_messages_getAttachedStickers::Swap(TL_messages_getAttachedStickers* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TL_messages_getAttachedStickers::InternalSwap(TL_messages_getAttachedStickers* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata TL_messages_getAttachedStickers::GetMetadata() const {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TL_messages_getAttachedStickers

// .mtproto.InputStickeredMedia media = 1;
bool TL_messages_getAttachedStickers::has_media() const {
  return this != internal_default_instance() && media_ != NULL;
}
void TL_messages_getAttachedStickers::clear_media() {
  if (GetArenaNoVirtual() == NULL && media_ != NULL) delete media_;
  media_ = NULL;
}
const ::mtproto::InputStickeredMedia& TL_messages_getAttachedStickers::media() const {
  const ::mtproto::InputStickeredMedia* p = media_;
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_getAttachedStickers.media)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::InputStickeredMedia*>(
      &::mtproto::_InputStickeredMedia_default_instance_);
}
::mtproto::InputStickeredMedia* TL_messages_getAttachedStickers::mutable_media() {
  
  if (media_ == NULL) {
    media_ = new ::mtproto::InputStickeredMedia;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_messages_getAttachedStickers.media)
  return media_;
}
::mtproto::InputStickeredMedia* TL_messages_getAttachedStickers::release_media() {
  // @@protoc_insertion_point(field_release:mtproto.TL_messages_getAttachedStickers.media)
  
  ::mtproto::InputStickeredMedia* temp = media_;
  media_ = NULL;
  return temp;
}
void TL_messages_getAttachedStickers::set_allocated_media(::mtproto::InputStickeredMedia* media) {
  delete media_;
  media_ = media;
  if (media) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_messages_getAttachedStickers.media)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TL_messages_setGameScore::kEditMessageFieldNumber;
const int TL_messages_setGameScore::kForceFieldNumber;
const int TL_messages_setGameScore::kPeerFieldNumber;
const int TL_messages_setGameScore::kIdFieldNumber;
const int TL_messages_setGameScore::kUserIdFieldNumber;
const int TL_messages_setGameScore::kScoreFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TL_messages_setGameScore::TL_messages_setGameScore()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.TL_messages_setGameScore)
}
TL_messages_setGameScore::TL_messages_setGameScore(const TL_messages_setGameScore& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_peer()) {
    peer_ = new ::mtproto::InputPeer(*from.peer_);
  } else {
    peer_ = NULL;
  }
  if (from.has_user_id()) {
    user_id_ = new ::mtproto::InputUser(*from.user_id_);
  } else {
    user_id_ = NULL;
  }
  ::memcpy(&edit_message_, &from.edit_message_,
    static_cast<size_t>(reinterpret_cast<char*>(&score_) -
    reinterpret_cast<char*>(&edit_message_)) + sizeof(score_));
  // @@protoc_insertion_point(copy_constructor:mtproto.TL_messages_setGameScore)
}

void TL_messages_setGameScore::SharedCtor() {
  ::memset(&peer_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&score_) -
      reinterpret_cast<char*>(&peer_)) + sizeof(score_));
  _cached_size_ = 0;
}

TL_messages_setGameScore::~TL_messages_setGameScore() {
  // @@protoc_insertion_point(destructor:mtproto.TL_messages_setGameScore)
  SharedDtor();
}

void TL_messages_setGameScore::SharedDtor() {
  if (this != internal_default_instance()) delete peer_;
  if (this != internal_default_instance()) delete user_id_;
}

void TL_messages_setGameScore::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TL_messages_setGameScore::descriptor() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TL_messages_setGameScore& TL_messages_setGameScore::default_instance() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  return *internal_default_instance();
}

TL_messages_setGameScore* TL_messages_setGameScore::New(::google::protobuf::Arena* arena) const {
  TL_messages_setGameScore* n = new TL_messages_setGameScore;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TL_messages_setGameScore::Swap(TL_messages_setGameScore* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TL_messages_setGameScore::InternalSwap(TL_messages_setGameScore* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata TL_messages_setGameScore::GetMetadata() const {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TL_messages_setGameScore

// bool edit_message = 2;
void TL_messages_setGameScore::clear_edit_message() {
  edit_message_ = false;
}
bool TL_messages_setGameScore::edit_message() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_setGameScore.edit_message)
  return edit_message_;
}
void TL_messages_setGameScore::set_edit_message(bool value) {
  
  edit_message_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_setGameScore.edit_message)
}

// bool force = 3;
void TL_messages_setGameScore::clear_force() {
  force_ = false;
}
bool TL_messages_setGameScore::force() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_setGameScore.force)
  return force_;
}
void TL_messages_setGameScore::set_force(bool value) {
  
  force_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_setGameScore.force)
}

// .mtproto.InputPeer peer = 4;
bool TL_messages_setGameScore::has_peer() const {
  return this != internal_default_instance() && peer_ != NULL;
}
void TL_messages_setGameScore::clear_peer() {
  if (GetArenaNoVirtual() == NULL && peer_ != NULL) delete peer_;
  peer_ = NULL;
}
const ::mtproto::InputPeer& TL_messages_setGameScore::peer() const {
  const ::mtproto::InputPeer* p = peer_;
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_setGameScore.peer)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::InputPeer*>(
      &::mtproto::_InputPeer_default_instance_);
}
::mtproto::InputPeer* TL_messages_setGameScore::mutable_peer() {
  
  if (peer_ == NULL) {
    peer_ = new ::mtproto::InputPeer;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_messages_setGameScore.peer)
  return peer_;
}
::mtproto::InputPeer* TL_messages_setGameScore::release_peer() {
  // @@protoc_insertion_point(field_release:mtproto.TL_messages_setGameScore.peer)
  
  ::mtproto::InputPeer* temp = peer_;
  peer_ = NULL;
  return temp;
}
void TL_messages_setGameScore::set_allocated_peer(::mtproto::InputPeer* peer) {
  delete peer_;
  peer_ = peer;
  if (peer) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_messages_setGameScore.peer)
}

// int32 id = 5;
void TL_messages_setGameScore::clear_id() {
  id_ = 0;
}
::google::protobuf::int32 TL_messages_setGameScore::id() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_setGameScore.id)
  return id_;
}
void TL_messages_setGameScore::set_id(::google::protobuf::int32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_setGameScore.id)
}

// .mtproto.InputUser user_id = 6;
bool TL_messages_setGameScore::has_user_id() const {
  return this != internal_default_instance() && user_id_ != NULL;
}
void TL_messages_setGameScore::clear_user_id() {
  if (GetArenaNoVirtual() == NULL && user_id_ != NULL) delete user_id_;
  user_id_ = NULL;
}
const ::mtproto::InputUser& TL_messages_setGameScore::user_id() const {
  const ::mtproto::InputUser* p = user_id_;
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_setGameScore.user_id)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::InputUser*>(
      &::mtproto::_InputUser_default_instance_);
}
::mtproto::InputUser* TL_messages_setGameScore::mutable_user_id() {
  
  if (user_id_ == NULL) {
    user_id_ = new ::mtproto::InputUser;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_messages_setGameScore.user_id)
  return user_id_;
}
::mtproto::InputUser* TL_messages_setGameScore::release_user_id() {
  // @@protoc_insertion_point(field_release:mtproto.TL_messages_setGameScore.user_id)
  
  ::mtproto::InputUser* temp = user_id_;
  user_id_ = NULL;
  return temp;
}
void TL_messages_setGameScore::set_allocated_user_id(::mtproto::InputUser* user_id) {
  delete user_id_;
  user_id_ = user_id;
  if (user_id) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_messages_setGameScore.user_id)
}

// int32 score = 7;
void TL_messages_setGameScore::clear_score() {
  score_ = 0;
}
::google::protobuf::int32 TL_messages_setGameScore::score() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_setGameScore.score)
  return score_;
}
void TL_messages_setGameScore::set_score(::google::protobuf::int32 value) {
  
  score_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_setGameScore.score)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TL_messages_setInlineGameScore::kEditMessageFieldNumber;
const int TL_messages_setInlineGameScore::kForceFieldNumber;
const int TL_messages_setInlineGameScore::kIdFieldNumber;
const int TL_messages_setInlineGameScore::kUserIdFieldNumber;
const int TL_messages_setInlineGameScore::kScoreFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TL_messages_setInlineGameScore::TL_messages_setInlineGameScore()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.TL_messages_setInlineGameScore)
}
TL_messages_setInlineGameScore::TL_messages_setInlineGameScore(const TL_messages_setInlineGameScore& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_id()) {
    id_ = new ::mtproto::InputBotInlineMessageID(*from.id_);
  } else {
    id_ = NULL;
  }
  if (from.has_user_id()) {
    user_id_ = new ::mtproto::InputUser(*from.user_id_);
  } else {
    user_id_ = NULL;
  }
  ::memcpy(&edit_message_, &from.edit_message_,
    static_cast<size_t>(reinterpret_cast<char*>(&score_) -
    reinterpret_cast<char*>(&edit_message_)) + sizeof(score_));
  // @@protoc_insertion_point(copy_constructor:mtproto.TL_messages_setInlineGameScore)
}

void TL_messages_setInlineGameScore::SharedCtor() {
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&score_) -
      reinterpret_cast<char*>(&id_)) + sizeof(score_));
  _cached_size_ = 0;
}

TL_messages_setInlineGameScore::~TL_messages_setInlineGameScore() {
  // @@protoc_insertion_point(destructor:mtproto.TL_messages_setInlineGameScore)
  SharedDtor();
}

void TL_messages_setInlineGameScore::SharedDtor() {
  if (this != internal_default_instance()) delete id_;
  if (this != internal_default_instance()) delete user_id_;
}

void TL_messages_setInlineGameScore::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TL_messages_setInlineGameScore::descriptor() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TL_messages_setInlineGameScore& TL_messages_setInlineGameScore::default_instance() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  return *internal_default_instance();
}

TL_messages_setInlineGameScore* TL_messages_setInlineGameScore::New(::google::protobuf::Arena* arena) const {
  TL_messages_setInlineGameScore* n = new TL_messages_setInlineGameScore;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TL_messages_setInlineGameScore::Swap(TL_messages_setInlineGameScore* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TL_messages_setInlineGameScore::InternalSwap(TL_messages_setInlineGameScore* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata TL_messages_setInlineGameScore::GetMetadata() const {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TL_messages_setInlineGameScore

// bool edit_message = 2;
void TL_messages_setInlineGameScore::clear_edit_message() {
  edit_message_ = false;
}
bool TL_messages_setInlineGameScore::edit_message() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_setInlineGameScore.edit_message)
  return edit_message_;
}
void TL_messages_setInlineGameScore::set_edit_message(bool value) {
  
  edit_message_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_setInlineGameScore.edit_message)
}

// bool force = 3;
void TL_messages_setInlineGameScore::clear_force() {
  force_ = false;
}
bool TL_messages_setInlineGameScore::force() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_setInlineGameScore.force)
  return force_;
}
void TL_messages_setInlineGameScore::set_force(bool value) {
  
  force_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_setInlineGameScore.force)
}

// .mtproto.InputBotInlineMessageID id = 4;
bool TL_messages_setInlineGameScore::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
void TL_messages_setInlineGameScore::clear_id() {
  if (GetArenaNoVirtual() == NULL && id_ != NULL) delete id_;
  id_ = NULL;
}
const ::mtproto::InputBotInlineMessageID& TL_messages_setInlineGameScore::id() const {
  const ::mtproto::InputBotInlineMessageID* p = id_;
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_setInlineGameScore.id)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::InputBotInlineMessageID*>(
      &::mtproto::_InputBotInlineMessageID_default_instance_);
}
::mtproto::InputBotInlineMessageID* TL_messages_setInlineGameScore::mutable_id() {
  
  if (id_ == NULL) {
    id_ = new ::mtproto::InputBotInlineMessageID;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_messages_setInlineGameScore.id)
  return id_;
}
::mtproto::InputBotInlineMessageID* TL_messages_setInlineGameScore::release_id() {
  // @@protoc_insertion_point(field_release:mtproto.TL_messages_setInlineGameScore.id)
  
  ::mtproto::InputBotInlineMessageID* temp = id_;
  id_ = NULL;
  return temp;
}
void TL_messages_setInlineGameScore::set_allocated_id(::mtproto::InputBotInlineMessageID* id) {
  delete id_;
  id_ = id;
  if (id) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_messages_setInlineGameScore.id)
}

// .mtproto.InputUser user_id = 5;
bool TL_messages_setInlineGameScore::has_user_id() const {
  return this != internal_default_instance() && user_id_ != NULL;
}
void TL_messages_setInlineGameScore::clear_user_id() {
  if (GetArenaNoVirtual() == NULL && user_id_ != NULL) delete user_id_;
  user_id_ = NULL;
}
const ::mtproto::InputUser& TL_messages_setInlineGameScore::user_id() const {
  const ::mtproto::InputUser* p = user_id_;
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_setInlineGameScore.user_id)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::InputUser*>(
      &::mtproto::_InputUser_default_instance_);
}
::mtproto::InputUser* TL_messages_setInlineGameScore::mutable_user_id() {
  
  if (user_id_ == NULL) {
    user_id_ = new ::mtproto::InputUser;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_messages_setInlineGameScore.user_id)
  return user_id_;
}
::mtproto::InputUser* TL_messages_setInlineGameScore::release_user_id() {
  // @@protoc_insertion_point(field_release:mtproto.TL_messages_setInlineGameScore.user_id)
  
  ::mtproto::InputUser* temp = user_id_;
  user_id_ = NULL;
  return temp;
}
void TL_messages_setInlineGameScore::set_allocated_user_id(::mtproto::InputUser* user_id) {
  delete user_id_;
  user_id_ = user_id;
  if (user_id) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_messages_setInlineGameScore.user_id)
}

// int32 score = 6;
void TL_messages_setInlineGameScore::clear_score() {
  score_ = 0;
}
::google::protobuf::int32 TL_messages_setInlineGameScore::score() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_setInlineGameScore.score)
  return score_;
}
void TL_messages_setInlineGameScore::set_score(::google::protobuf::int32 value) {
  
  score_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_setInlineGameScore.score)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TL_messages_getGameHighScores::kPeerFieldNumber;
const int TL_messages_getGameHighScores::kIdFieldNumber;
const int TL_messages_getGameHighScores::kUserIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TL_messages_getGameHighScores::TL_messages_getGameHighScores()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.TL_messages_getGameHighScores)
}
TL_messages_getGameHighScores::TL_messages_getGameHighScores(const TL_messages_getGameHighScores& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_peer()) {
    peer_ = new ::mtproto::InputPeer(*from.peer_);
  } else {
    peer_ = NULL;
  }
  if (from.has_user_id()) {
    user_id_ = new ::mtproto::InputUser(*from.user_id_);
  } else {
    user_id_ = NULL;
  }
  id_ = from.id_;
  // @@protoc_insertion_point(copy_constructor:mtproto.TL_messages_getGameHighScores)
}

void TL_messages_getGameHighScores::SharedCtor() {
  ::memset(&peer_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&id_) -
      reinterpret_cast<char*>(&peer_)) + sizeof(id_));
  _cached_size_ = 0;
}

TL_messages_getGameHighScores::~TL_messages_getGameHighScores() {
  // @@protoc_insertion_point(destructor:mtproto.TL_messages_getGameHighScores)
  SharedDtor();
}

void TL_messages_getGameHighScores::SharedDtor() {
  if (this != internal_default_instance()) delete peer_;
  if (this != internal_default_instance()) delete user_id_;
}

void TL_messages_getGameHighScores::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TL_messages_getGameHighScores::descriptor() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TL_messages_getGameHighScores& TL_messages_getGameHighScores::default_instance() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  return *internal_default_instance();
}

TL_messages_getGameHighScores* TL_messages_getGameHighScores::New(::google::protobuf::Arena* arena) const {
  TL_messages_getGameHighScores* n = new TL_messages_getGameHighScores;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TL_messages_getGameHighScores::Swap(TL_messages_getGameHighScores* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TL_messages_getGameHighScores::InternalSwap(TL_messages_getGameHighScores* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata TL_messages_getGameHighScores::GetMetadata() const {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TL_messages_getGameHighScores

// .mtproto.InputPeer peer = 1;
bool TL_messages_getGameHighScores::has_peer() const {
  return this != internal_default_instance() && peer_ != NULL;
}
void TL_messages_getGameHighScores::clear_peer() {
  if (GetArenaNoVirtual() == NULL && peer_ != NULL) delete peer_;
  peer_ = NULL;
}
const ::mtproto::InputPeer& TL_messages_getGameHighScores::peer() const {
  const ::mtproto::InputPeer* p = peer_;
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_getGameHighScores.peer)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::InputPeer*>(
      &::mtproto::_InputPeer_default_instance_);
}
::mtproto::InputPeer* TL_messages_getGameHighScores::mutable_peer() {
  
  if (peer_ == NULL) {
    peer_ = new ::mtproto::InputPeer;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_messages_getGameHighScores.peer)
  return peer_;
}
::mtproto::InputPeer* TL_messages_getGameHighScores::release_peer() {
  // @@protoc_insertion_point(field_release:mtproto.TL_messages_getGameHighScores.peer)
  
  ::mtproto::InputPeer* temp = peer_;
  peer_ = NULL;
  return temp;
}
void TL_messages_getGameHighScores::set_allocated_peer(::mtproto::InputPeer* peer) {
  delete peer_;
  peer_ = peer;
  if (peer) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_messages_getGameHighScores.peer)
}

// int32 id = 2;
void TL_messages_getGameHighScores::clear_id() {
  id_ = 0;
}
::google::protobuf::int32 TL_messages_getGameHighScores::id() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_getGameHighScores.id)
  return id_;
}
void TL_messages_getGameHighScores::set_id(::google::protobuf::int32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_getGameHighScores.id)
}

// .mtproto.InputUser user_id = 3;
bool TL_messages_getGameHighScores::has_user_id() const {
  return this != internal_default_instance() && user_id_ != NULL;
}
void TL_messages_getGameHighScores::clear_user_id() {
  if (GetArenaNoVirtual() == NULL && user_id_ != NULL) delete user_id_;
  user_id_ = NULL;
}
const ::mtproto::InputUser& TL_messages_getGameHighScores::user_id() const {
  const ::mtproto::InputUser* p = user_id_;
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_getGameHighScores.user_id)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::InputUser*>(
      &::mtproto::_InputUser_default_instance_);
}
::mtproto::InputUser* TL_messages_getGameHighScores::mutable_user_id() {
  
  if (user_id_ == NULL) {
    user_id_ = new ::mtproto::InputUser;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_messages_getGameHighScores.user_id)
  return user_id_;
}
::mtproto::InputUser* TL_messages_getGameHighScores::release_user_id() {
  // @@protoc_insertion_point(field_release:mtproto.TL_messages_getGameHighScores.user_id)
  
  ::mtproto::InputUser* temp = user_id_;
  user_id_ = NULL;
  return temp;
}
void TL_messages_getGameHighScores::set_allocated_user_id(::mtproto::InputUser* user_id) {
  delete user_id_;
  user_id_ = user_id;
  if (user_id) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_messages_getGameHighScores.user_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TL_messages_getInlineGameHighScores::kIdFieldNumber;
const int TL_messages_getInlineGameHighScores::kUserIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TL_messages_getInlineGameHighScores::TL_messages_getInlineGameHighScores()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.TL_messages_getInlineGameHighScores)
}
TL_messages_getInlineGameHighScores::TL_messages_getInlineGameHighScores(const TL_messages_getInlineGameHighScores& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_id()) {
    id_ = new ::mtproto::InputBotInlineMessageID(*from.id_);
  } else {
    id_ = NULL;
  }
  if (from.has_user_id()) {
    user_id_ = new ::mtproto::InputUser(*from.user_id_);
  } else {
    user_id_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:mtproto.TL_messages_getInlineGameHighScores)
}

void TL_messages_getInlineGameHighScores::SharedCtor() {
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&user_id_) -
      reinterpret_cast<char*>(&id_)) + sizeof(user_id_));
  _cached_size_ = 0;
}

TL_messages_getInlineGameHighScores::~TL_messages_getInlineGameHighScores() {
  // @@protoc_insertion_point(destructor:mtproto.TL_messages_getInlineGameHighScores)
  SharedDtor();
}

void TL_messages_getInlineGameHighScores::SharedDtor() {
  if (this != internal_default_instance()) delete id_;
  if (this != internal_default_instance()) delete user_id_;
}

void TL_messages_getInlineGameHighScores::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TL_messages_getInlineGameHighScores::descriptor() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TL_messages_getInlineGameHighScores& TL_messages_getInlineGameHighScores::default_instance() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  return *internal_default_instance();
}

TL_messages_getInlineGameHighScores* TL_messages_getInlineGameHighScores::New(::google::protobuf::Arena* arena) const {
  TL_messages_getInlineGameHighScores* n = new TL_messages_getInlineGameHighScores;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TL_messages_getInlineGameHighScores::Swap(TL_messages_getInlineGameHighScores* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TL_messages_getInlineGameHighScores::InternalSwap(TL_messages_getInlineGameHighScores* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata TL_messages_getInlineGameHighScores::GetMetadata() const {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TL_messages_getInlineGameHighScores

// .mtproto.InputBotInlineMessageID id = 1;
bool TL_messages_getInlineGameHighScores::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
void TL_messages_getInlineGameHighScores::clear_id() {
  if (GetArenaNoVirtual() == NULL && id_ != NULL) delete id_;
  id_ = NULL;
}
const ::mtproto::InputBotInlineMessageID& TL_messages_getInlineGameHighScores::id() const {
  const ::mtproto::InputBotInlineMessageID* p = id_;
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_getInlineGameHighScores.id)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::InputBotInlineMessageID*>(
      &::mtproto::_InputBotInlineMessageID_default_instance_);
}
::mtproto::InputBotInlineMessageID* TL_messages_getInlineGameHighScores::mutable_id() {
  
  if (id_ == NULL) {
    id_ = new ::mtproto::InputBotInlineMessageID;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_messages_getInlineGameHighScores.id)
  return id_;
}
::mtproto::InputBotInlineMessageID* TL_messages_getInlineGameHighScores::release_id() {
  // @@protoc_insertion_point(field_release:mtproto.TL_messages_getInlineGameHighScores.id)
  
  ::mtproto::InputBotInlineMessageID* temp = id_;
  id_ = NULL;
  return temp;
}
void TL_messages_getInlineGameHighScores::set_allocated_id(::mtproto::InputBotInlineMessageID* id) {
  delete id_;
  id_ = id;
  if (id) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_messages_getInlineGameHighScores.id)
}

// .mtproto.InputUser user_id = 2;
bool TL_messages_getInlineGameHighScores::has_user_id() const {
  return this != internal_default_instance() && user_id_ != NULL;
}
void TL_messages_getInlineGameHighScores::clear_user_id() {
  if (GetArenaNoVirtual() == NULL && user_id_ != NULL) delete user_id_;
  user_id_ = NULL;
}
const ::mtproto::InputUser& TL_messages_getInlineGameHighScores::user_id() const {
  const ::mtproto::InputUser* p = user_id_;
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_getInlineGameHighScores.user_id)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::InputUser*>(
      &::mtproto::_InputUser_default_instance_);
}
::mtproto::InputUser* TL_messages_getInlineGameHighScores::mutable_user_id() {
  
  if (user_id_ == NULL) {
    user_id_ = new ::mtproto::InputUser;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_messages_getInlineGameHighScores.user_id)
  return user_id_;
}
::mtproto::InputUser* TL_messages_getInlineGameHighScores::release_user_id() {
  // @@protoc_insertion_point(field_release:mtproto.TL_messages_getInlineGameHighScores.user_id)
  
  ::mtproto::InputUser* temp = user_id_;
  user_id_ = NULL;
  return temp;
}
void TL_messages_getInlineGameHighScores::set_allocated_user_id(::mtproto::InputUser* user_id) {
  delete user_id_;
  user_id_ = user_id;
  if (user_id) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_messages_getInlineGameHighScores.user_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TL_messages_getCommonChats::kUserIdFieldNumber;
const int TL_messages_getCommonChats::kMaxIdFieldNumber;
const int TL_messages_getCommonChats::kLimitFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TL_messages_getCommonChats::TL_messages_getCommonChats()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.TL_messages_getCommonChats)
}
TL_messages_getCommonChats::TL_messages_getCommonChats(const TL_messages_getCommonChats& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_user_id()) {
    user_id_ = new ::mtproto::InputUser(*from.user_id_);
  } else {
    user_id_ = NULL;
  }
  ::memcpy(&max_id_, &from.max_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&limit_) -
    reinterpret_cast<char*>(&max_id_)) + sizeof(limit_));
  // @@protoc_insertion_point(copy_constructor:mtproto.TL_messages_getCommonChats)
}

void TL_messages_getCommonChats::SharedCtor() {
  ::memset(&user_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&limit_) -
      reinterpret_cast<char*>(&user_id_)) + sizeof(limit_));
  _cached_size_ = 0;
}

TL_messages_getCommonChats::~TL_messages_getCommonChats() {
  // @@protoc_insertion_point(destructor:mtproto.TL_messages_getCommonChats)
  SharedDtor();
}

void TL_messages_getCommonChats::SharedDtor() {
  if (this != internal_default_instance()) delete user_id_;
}

void TL_messages_getCommonChats::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TL_messages_getCommonChats::descriptor() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TL_messages_getCommonChats& TL_messages_getCommonChats::default_instance() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  return *internal_default_instance();
}

TL_messages_getCommonChats* TL_messages_getCommonChats::New(::google::protobuf::Arena* arena) const {
  TL_messages_getCommonChats* n = new TL_messages_getCommonChats;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TL_messages_getCommonChats::Swap(TL_messages_getCommonChats* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TL_messages_getCommonChats::InternalSwap(TL_messages_getCommonChats* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata TL_messages_getCommonChats::GetMetadata() const {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TL_messages_getCommonChats

// .mtproto.InputUser user_id = 1;
bool TL_messages_getCommonChats::has_user_id() const {
  return this != internal_default_instance() && user_id_ != NULL;
}
void TL_messages_getCommonChats::clear_user_id() {
  if (GetArenaNoVirtual() == NULL && user_id_ != NULL) delete user_id_;
  user_id_ = NULL;
}
const ::mtproto::InputUser& TL_messages_getCommonChats::user_id() const {
  const ::mtproto::InputUser* p = user_id_;
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_getCommonChats.user_id)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::InputUser*>(
      &::mtproto::_InputUser_default_instance_);
}
::mtproto::InputUser* TL_messages_getCommonChats::mutable_user_id() {
  
  if (user_id_ == NULL) {
    user_id_ = new ::mtproto::InputUser;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_messages_getCommonChats.user_id)
  return user_id_;
}
::mtproto::InputUser* TL_messages_getCommonChats::release_user_id() {
  // @@protoc_insertion_point(field_release:mtproto.TL_messages_getCommonChats.user_id)
  
  ::mtproto::InputUser* temp = user_id_;
  user_id_ = NULL;
  return temp;
}
void TL_messages_getCommonChats::set_allocated_user_id(::mtproto::InputUser* user_id) {
  delete user_id_;
  user_id_ = user_id;
  if (user_id) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_messages_getCommonChats.user_id)
}

// int32 max_id = 2;
void TL_messages_getCommonChats::clear_max_id() {
  max_id_ = 0;
}
::google::protobuf::int32 TL_messages_getCommonChats::max_id() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_getCommonChats.max_id)
  return max_id_;
}
void TL_messages_getCommonChats::set_max_id(::google::protobuf::int32 value) {
  
  max_id_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_getCommonChats.max_id)
}

// int32 limit = 3;
void TL_messages_getCommonChats::clear_limit() {
  limit_ = 0;
}
::google::protobuf::int32 TL_messages_getCommonChats::limit() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_getCommonChats.limit)
  return limit_;
}
void TL_messages_getCommonChats::set_limit(::google::protobuf::int32 value) {
  
  limit_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_getCommonChats.limit)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TL_messages_getAllChats::kExceptIdsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TL_messages_getAllChats::TL_messages_getAllChats()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.TL_messages_getAllChats)
}
TL_messages_getAllChats::TL_messages_getAllChats(const TL_messages_getAllChats& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      except_ids_(from.except_ids_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:mtproto.TL_messages_getAllChats)
}

void TL_messages_getAllChats::SharedCtor() {
  _cached_size_ = 0;
}

TL_messages_getAllChats::~TL_messages_getAllChats() {
  // @@protoc_insertion_point(destructor:mtproto.TL_messages_getAllChats)
  SharedDtor();
}

void TL_messages_getAllChats::SharedDtor() {
}

void TL_messages_getAllChats::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TL_messages_getAllChats::descriptor() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TL_messages_getAllChats& TL_messages_getAllChats::default_instance() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  return *internal_default_instance();
}

TL_messages_getAllChats* TL_messages_getAllChats::New(::google::protobuf::Arena* arena) const {
  TL_messages_getAllChats* n = new TL_messages_getAllChats;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TL_messages_getAllChats::Swap(TL_messages_getAllChats* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TL_messages_getAllChats::InternalSwap(TL_messages_getAllChats* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata TL_messages_getAllChats::GetMetadata() const {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TL_messages_getAllChats

// repeated int32 except_ids = 1;
int TL_messages_getAllChats::except_ids_size() const {
  return except_ids_.size();
}
void TL_messages_getAllChats::clear_except_ids() {
  except_ids_.Clear();
}
::google::protobuf::int32 TL_messages_getAllChats::except_ids(int index) const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_getAllChats.except_ids)
  return except_ids_.Get(index);
}
void TL_messages_getAllChats::set_except_ids(int index, ::google::protobuf::int32 value) {
  except_ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_getAllChats.except_ids)
}
void TL_messages_getAllChats::add_except_ids(::google::protobuf::int32 value) {
  except_ids_.Add(value);
  // @@protoc_insertion_point(field_add:mtproto.TL_messages_getAllChats.except_ids)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
TL_messages_getAllChats::except_ids() const {
  // @@protoc_insertion_point(field_list:mtproto.TL_messages_getAllChats.except_ids)
  return except_ids_;
}
::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
TL_messages_getAllChats::mutable_except_ids() {
  // @@protoc_insertion_point(field_mutable_list:mtproto.TL_messages_getAllChats.except_ids)
  return &except_ids_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TL_messages_getWebPage::kUrlFieldNumber;
const int TL_messages_getWebPage::kHashFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TL_messages_getWebPage::TL_messages_getWebPage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.TL_messages_getWebPage)
}
TL_messages_getWebPage::TL_messages_getWebPage(const TL_messages_getWebPage& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.url().size() > 0) {
    url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.url_);
  }
  hash_ = from.hash_;
  // @@protoc_insertion_point(copy_constructor:mtproto.TL_messages_getWebPage)
}

void TL_messages_getWebPage::SharedCtor() {
  url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  hash_ = 0;
  _cached_size_ = 0;
}

TL_messages_getWebPage::~TL_messages_getWebPage() {
  // @@protoc_insertion_point(destructor:mtproto.TL_messages_getWebPage)
  SharedDtor();
}

void TL_messages_getWebPage::SharedDtor() {
  url_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void TL_messages_getWebPage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TL_messages_getWebPage::descriptor() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TL_messages_getWebPage& TL_messages_getWebPage::default_instance() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  return *internal_default_instance();
}

TL_messages_getWebPage* TL_messages_getWebPage::New(::google::protobuf::Arena* arena) const {
  TL_messages_getWebPage* n = new TL_messages_getWebPage;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TL_messages_getWebPage::Swap(TL_messages_getWebPage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TL_messages_getWebPage::InternalSwap(TL_messages_getWebPage* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata TL_messages_getWebPage::GetMetadata() const {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TL_messages_getWebPage

// string url = 1;
void TL_messages_getWebPage::clear_url() {
  url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& TL_messages_getWebPage::url() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_getWebPage.url)
  return url_.GetNoArena();
}
void TL_messages_getWebPage::set_url(const ::std::string& value) {
  
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_getWebPage.url)
}
#if LANG_CXX11
void TL_messages_getWebPage::set_url(::std::string&& value) {
  
  url_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mtproto.TL_messages_getWebPage.url)
}
#endif
void TL_messages_getWebPage::set_url(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtproto.TL_messages_getWebPage.url)
}
void TL_messages_getWebPage::set_url(const char* value, size_t size) {
  
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtproto.TL_messages_getWebPage.url)
}
::std::string* TL_messages_getWebPage::mutable_url() {
  
  // @@protoc_insertion_point(field_mutable:mtproto.TL_messages_getWebPage.url)
  return url_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* TL_messages_getWebPage::release_url() {
  // @@protoc_insertion_point(field_release:mtproto.TL_messages_getWebPage.url)
  
  return url_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TL_messages_getWebPage::set_allocated_url(::std::string* url) {
  if (url != NULL) {
    
  } else {
    
  }
  url_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), url);
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_messages_getWebPage.url)
}

// int32 hash = 2;
void TL_messages_getWebPage::clear_hash() {
  hash_ = 0;
}
::google::protobuf::int32 TL_messages_getWebPage::hash() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_getWebPage.hash)
  return hash_;
}
void TL_messages_getWebPage::set_hash(::google::protobuf::int32 value) {
  
  hash_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_getWebPage.hash)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TL_messages_toggleDialogPin::kPinnedFieldNumber;
const int TL_messages_toggleDialogPin::kPeerFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TL_messages_toggleDialogPin::TL_messages_toggleDialogPin()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.TL_messages_toggleDialogPin)
}
TL_messages_toggleDialogPin::TL_messages_toggleDialogPin(const TL_messages_toggleDialogPin& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_peer()) {
    peer_ = new ::mtproto::InputDialogPeer(*from.peer_);
  } else {
    peer_ = NULL;
  }
  pinned_ = from.pinned_;
  // @@protoc_insertion_point(copy_constructor:mtproto.TL_messages_toggleDialogPin)
}

void TL_messages_toggleDialogPin::SharedCtor() {
  ::memset(&peer_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&pinned_) -
      reinterpret_cast<char*>(&peer_)) + sizeof(pinned_));
  _cached_size_ = 0;
}

TL_messages_toggleDialogPin::~TL_messages_toggleDialogPin() {
  // @@protoc_insertion_point(destructor:mtproto.TL_messages_toggleDialogPin)
  SharedDtor();
}

void TL_messages_toggleDialogPin::SharedDtor() {
  if (this != internal_default_instance()) delete peer_;
}

void TL_messages_toggleDialogPin::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TL_messages_toggleDialogPin::descriptor() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TL_messages_toggleDialogPin& TL_messages_toggleDialogPin::default_instance() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  return *internal_default_instance();
}

TL_messages_toggleDialogPin* TL_messages_toggleDialogPin::New(::google::protobuf::Arena* arena) const {
  TL_messages_toggleDialogPin* n = new TL_messages_toggleDialogPin;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TL_messages_toggleDialogPin::Swap(TL_messages_toggleDialogPin* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TL_messages_toggleDialogPin::InternalSwap(TL_messages_toggleDialogPin* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata TL_messages_toggleDialogPin::GetMetadata() const {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TL_messages_toggleDialogPin

// bool pinned = 2;
void TL_messages_toggleDialogPin::clear_pinned() {
  pinned_ = false;
}
bool TL_messages_toggleDialogPin::pinned() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_toggleDialogPin.pinned)
  return pinned_;
}
void TL_messages_toggleDialogPin::set_pinned(bool value) {
  
  pinned_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_toggleDialogPin.pinned)
}

// .mtproto.InputDialogPeer peer = 3;
bool TL_messages_toggleDialogPin::has_peer() const {
  return this != internal_default_instance() && peer_ != NULL;
}
void TL_messages_toggleDialogPin::clear_peer() {
  if (GetArenaNoVirtual() == NULL && peer_ != NULL) delete peer_;
  peer_ = NULL;
}
const ::mtproto::InputDialogPeer& TL_messages_toggleDialogPin::peer() const {
  const ::mtproto::InputDialogPeer* p = peer_;
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_toggleDialogPin.peer)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::InputDialogPeer*>(
      &::mtproto::_InputDialogPeer_default_instance_);
}
::mtproto::InputDialogPeer* TL_messages_toggleDialogPin::mutable_peer() {
  
  if (peer_ == NULL) {
    peer_ = new ::mtproto::InputDialogPeer;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_messages_toggleDialogPin.peer)
  return peer_;
}
::mtproto::InputDialogPeer* TL_messages_toggleDialogPin::release_peer() {
  // @@protoc_insertion_point(field_release:mtproto.TL_messages_toggleDialogPin.peer)
  
  ::mtproto::InputDialogPeer* temp = peer_;
  peer_ = NULL;
  return temp;
}
void TL_messages_toggleDialogPin::set_allocated_peer(::mtproto::InputDialogPeer* peer) {
  delete peer_;
  peer_ = peer;
  if (peer) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_messages_toggleDialogPin.peer)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TL_messages_reorderPinnedDialogs::kForceFieldNumber;
const int TL_messages_reorderPinnedDialogs::kOrderFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TL_messages_reorderPinnedDialogs::TL_messages_reorderPinnedDialogs()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.TL_messages_reorderPinnedDialogs)
}
TL_messages_reorderPinnedDialogs::TL_messages_reorderPinnedDialogs(const TL_messages_reorderPinnedDialogs& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      order_(from.order_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  force_ = from.force_;
  // @@protoc_insertion_point(copy_constructor:mtproto.TL_messages_reorderPinnedDialogs)
}

void TL_messages_reorderPinnedDialogs::SharedCtor() {
  force_ = false;
  _cached_size_ = 0;
}

TL_messages_reorderPinnedDialogs::~TL_messages_reorderPinnedDialogs() {
  // @@protoc_insertion_point(destructor:mtproto.TL_messages_reorderPinnedDialogs)
  SharedDtor();
}

void TL_messages_reorderPinnedDialogs::SharedDtor() {
}

void TL_messages_reorderPinnedDialogs::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TL_messages_reorderPinnedDialogs::descriptor() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TL_messages_reorderPinnedDialogs& TL_messages_reorderPinnedDialogs::default_instance() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  return *internal_default_instance();
}

TL_messages_reorderPinnedDialogs* TL_messages_reorderPinnedDialogs::New(::google::protobuf::Arena* arena) const {
  TL_messages_reorderPinnedDialogs* n = new TL_messages_reorderPinnedDialogs;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TL_messages_reorderPinnedDialogs::Swap(TL_messages_reorderPinnedDialogs* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TL_messages_reorderPinnedDialogs::InternalSwap(TL_messages_reorderPinnedDialogs* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata TL_messages_reorderPinnedDialogs::GetMetadata() const {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TL_messages_reorderPinnedDialogs

// bool force = 2;
void TL_messages_reorderPinnedDialogs::clear_force() {
  force_ = false;
}
bool TL_messages_reorderPinnedDialogs::force() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_reorderPinnedDialogs.force)
  return force_;
}
void TL_messages_reorderPinnedDialogs::set_force(bool value) {
  
  force_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_reorderPinnedDialogs.force)
}

// repeated .mtproto.InputDialogPeer order = 3;
int TL_messages_reorderPinnedDialogs::order_size() const {
  return order_.size();
}
void TL_messages_reorderPinnedDialogs::clear_order() {
  order_.Clear();
}
const ::mtproto::InputDialogPeer& TL_messages_reorderPinnedDialogs::order(int index) const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_reorderPinnedDialogs.order)
  return order_.Get(index);
}
::mtproto::InputDialogPeer* TL_messages_reorderPinnedDialogs::mutable_order(int index) {
  // @@protoc_insertion_point(field_mutable:mtproto.TL_messages_reorderPinnedDialogs.order)
  return order_.Mutable(index);
}
::mtproto::InputDialogPeer* TL_messages_reorderPinnedDialogs::add_order() {
  // @@protoc_insertion_point(field_add:mtproto.TL_messages_reorderPinnedDialogs.order)
  return order_.Add();
}
::google::protobuf::RepeatedPtrField< ::mtproto::InputDialogPeer >*
TL_messages_reorderPinnedDialogs::mutable_order() {
  // @@protoc_insertion_point(field_mutable_list:mtproto.TL_messages_reorderPinnedDialogs.order)
  return &order_;
}
const ::google::protobuf::RepeatedPtrField< ::mtproto::InputDialogPeer >&
TL_messages_reorderPinnedDialogs::order() const {
  // @@protoc_insertion_point(field_list:mtproto.TL_messages_reorderPinnedDialogs.order)
  return order_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TL_messages_getPinnedDialogs::TL_messages_getPinnedDialogs()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.TL_messages_getPinnedDialogs)
}
TL_messages_getPinnedDialogs::TL_messages_getPinnedDialogs(const TL_messages_getPinnedDialogs& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:mtproto.TL_messages_getPinnedDialogs)
}

void TL_messages_getPinnedDialogs::SharedCtor() {
  _cached_size_ = 0;
}

TL_messages_getPinnedDialogs::~TL_messages_getPinnedDialogs() {
  // @@protoc_insertion_point(destructor:mtproto.TL_messages_getPinnedDialogs)
  SharedDtor();
}

void TL_messages_getPinnedDialogs::SharedDtor() {
}

void TL_messages_getPinnedDialogs::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TL_messages_getPinnedDialogs::descriptor() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TL_messages_getPinnedDialogs& TL_messages_getPinnedDialogs::default_instance() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  return *internal_default_instance();
}

TL_messages_getPinnedDialogs* TL_messages_getPinnedDialogs::New(::google::protobuf::Arena* arena) const {
  TL_messages_getPinnedDialogs* n = new TL_messages_getPinnedDialogs;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TL_messages_getPinnedDialogs::Swap(TL_messages_getPinnedDialogs* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TL_messages_getPinnedDialogs::InternalSwap(TL_messages_getPinnedDialogs* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata TL_messages_getPinnedDialogs::GetMetadata() const {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TL_messages_getPinnedDialogs

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TL_messages_setBotShippingResults::kQueryIdFieldNumber;
const int TL_messages_setBotShippingResults::kErrorFieldNumber;
const int TL_messages_setBotShippingResults::kShippingOptionsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TL_messages_setBotShippingResults::TL_messages_setBotShippingResults()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.TL_messages_setBotShippingResults)
}
TL_messages_setBotShippingResults::TL_messages_setBotShippingResults(const TL_messages_setBotShippingResults& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      shipping_options_(from.shipping_options_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  error_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.error().size() > 0) {
    error_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.error_);
  }
  query_id_ = from.query_id_;
  // @@protoc_insertion_point(copy_constructor:mtproto.TL_messages_setBotShippingResults)
}

void TL_messages_setBotShippingResults::SharedCtor() {
  error_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  query_id_ = GOOGLE_LONGLONG(0);
  _cached_size_ = 0;
}

TL_messages_setBotShippingResults::~TL_messages_setBotShippingResults() {
  // @@protoc_insertion_point(destructor:mtproto.TL_messages_setBotShippingResults)
  SharedDtor();
}

void TL_messages_setBotShippingResults::SharedDtor() {
  error_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void TL_messages_setBotShippingResults::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TL_messages_setBotShippingResults::descriptor() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TL_messages_setBotShippingResults& TL_messages_setBotShippingResults::default_instance() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  return *internal_default_instance();
}

TL_messages_setBotShippingResults* TL_messages_setBotShippingResults::New(::google::protobuf::Arena* arena) const {
  TL_messages_setBotShippingResults* n = new TL_messages_setBotShippingResults;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TL_messages_setBotShippingResults::Swap(TL_messages_setBotShippingResults* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TL_messages_setBotShippingResults::InternalSwap(TL_messages_setBotShippingResults* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata TL_messages_setBotShippingResults::GetMetadata() const {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TL_messages_setBotShippingResults

// int64 query_id = 2;
void TL_messages_setBotShippingResults::clear_query_id() {
  query_id_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 TL_messages_setBotShippingResults::query_id() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_setBotShippingResults.query_id)
  return query_id_;
}
void TL_messages_setBotShippingResults::set_query_id(::google::protobuf::int64 value) {
  
  query_id_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_setBotShippingResults.query_id)
}

// string error = 3;
void TL_messages_setBotShippingResults::clear_error() {
  error_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& TL_messages_setBotShippingResults::error() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_setBotShippingResults.error)
  return error_.GetNoArena();
}
void TL_messages_setBotShippingResults::set_error(const ::std::string& value) {
  
  error_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_setBotShippingResults.error)
}
#if LANG_CXX11
void TL_messages_setBotShippingResults::set_error(::std::string&& value) {
  
  error_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mtproto.TL_messages_setBotShippingResults.error)
}
#endif
void TL_messages_setBotShippingResults::set_error(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  error_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtproto.TL_messages_setBotShippingResults.error)
}
void TL_messages_setBotShippingResults::set_error(const char* value, size_t size) {
  
  error_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtproto.TL_messages_setBotShippingResults.error)
}
::std::string* TL_messages_setBotShippingResults::mutable_error() {
  
  // @@protoc_insertion_point(field_mutable:mtproto.TL_messages_setBotShippingResults.error)
  return error_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* TL_messages_setBotShippingResults::release_error() {
  // @@protoc_insertion_point(field_release:mtproto.TL_messages_setBotShippingResults.error)
  
  return error_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TL_messages_setBotShippingResults::set_allocated_error(::std::string* error) {
  if (error != NULL) {
    
  } else {
    
  }
  error_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), error);
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_messages_setBotShippingResults.error)
}

// repeated .mtproto.ShippingOption shipping_options = 4;
int TL_messages_setBotShippingResults::shipping_options_size() const {
  return shipping_options_.size();
}
void TL_messages_setBotShippingResults::clear_shipping_options() {
  shipping_options_.Clear();
}
const ::mtproto::ShippingOption& TL_messages_setBotShippingResults::shipping_options(int index) const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_setBotShippingResults.shipping_options)
  return shipping_options_.Get(index);
}
::mtproto::ShippingOption* TL_messages_setBotShippingResults::mutable_shipping_options(int index) {
  // @@protoc_insertion_point(field_mutable:mtproto.TL_messages_setBotShippingResults.shipping_options)
  return shipping_options_.Mutable(index);
}
::mtproto::ShippingOption* TL_messages_setBotShippingResults::add_shipping_options() {
  // @@protoc_insertion_point(field_add:mtproto.TL_messages_setBotShippingResults.shipping_options)
  return shipping_options_.Add();
}
::google::protobuf::RepeatedPtrField< ::mtproto::ShippingOption >*
TL_messages_setBotShippingResults::mutable_shipping_options() {
  // @@protoc_insertion_point(field_mutable_list:mtproto.TL_messages_setBotShippingResults.shipping_options)
  return &shipping_options_;
}
const ::google::protobuf::RepeatedPtrField< ::mtproto::ShippingOption >&
TL_messages_setBotShippingResults::shipping_options() const {
  // @@protoc_insertion_point(field_list:mtproto.TL_messages_setBotShippingResults.shipping_options)
  return shipping_options_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TL_messages_setBotPrecheckoutResults::kSuccessFieldNumber;
const int TL_messages_setBotPrecheckoutResults::kQueryIdFieldNumber;
const int TL_messages_setBotPrecheckoutResults::kErrorFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TL_messages_setBotPrecheckoutResults::TL_messages_setBotPrecheckoutResults()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.TL_messages_setBotPrecheckoutResults)
}
TL_messages_setBotPrecheckoutResults::TL_messages_setBotPrecheckoutResults(const TL_messages_setBotPrecheckoutResults& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  error_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.error().size() > 0) {
    error_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.error_);
  }
  ::memcpy(&query_id_, &from.query_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&success_) -
    reinterpret_cast<char*>(&query_id_)) + sizeof(success_));
  // @@protoc_insertion_point(copy_constructor:mtproto.TL_messages_setBotPrecheckoutResults)
}

void TL_messages_setBotPrecheckoutResults::SharedCtor() {
  error_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&query_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&success_) -
      reinterpret_cast<char*>(&query_id_)) + sizeof(success_));
  _cached_size_ = 0;
}

TL_messages_setBotPrecheckoutResults::~TL_messages_setBotPrecheckoutResults() {
  // @@protoc_insertion_point(destructor:mtproto.TL_messages_setBotPrecheckoutResults)
  SharedDtor();
}

void TL_messages_setBotPrecheckoutResults::SharedDtor() {
  error_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void TL_messages_setBotPrecheckoutResults::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TL_messages_setBotPrecheckoutResults::descriptor() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TL_messages_setBotPrecheckoutResults& TL_messages_setBotPrecheckoutResults::default_instance() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  return *internal_default_instance();
}

TL_messages_setBotPrecheckoutResults* TL_messages_setBotPrecheckoutResults::New(::google::protobuf::Arena* arena) const {
  TL_messages_setBotPrecheckoutResults* n = new TL_messages_setBotPrecheckoutResults;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TL_messages_setBotPrecheckoutResults::Swap(TL_messages_setBotPrecheckoutResults* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TL_messages_setBotPrecheckoutResults::InternalSwap(TL_messages_setBotPrecheckoutResults* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata TL_messages_setBotPrecheckoutResults::GetMetadata() const {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TL_messages_setBotPrecheckoutResults

// bool success = 2;
void TL_messages_setBotPrecheckoutResults::clear_success() {
  success_ = false;
}
bool TL_messages_setBotPrecheckoutResults::success() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_setBotPrecheckoutResults.success)
  return success_;
}
void TL_messages_setBotPrecheckoutResults::set_success(bool value) {
  
  success_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_setBotPrecheckoutResults.success)
}

// int64 query_id = 3;
void TL_messages_setBotPrecheckoutResults::clear_query_id() {
  query_id_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 TL_messages_setBotPrecheckoutResults::query_id() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_setBotPrecheckoutResults.query_id)
  return query_id_;
}
void TL_messages_setBotPrecheckoutResults::set_query_id(::google::protobuf::int64 value) {
  
  query_id_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_setBotPrecheckoutResults.query_id)
}

// string error = 4;
void TL_messages_setBotPrecheckoutResults::clear_error() {
  error_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& TL_messages_setBotPrecheckoutResults::error() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_setBotPrecheckoutResults.error)
  return error_.GetNoArena();
}
void TL_messages_setBotPrecheckoutResults::set_error(const ::std::string& value) {
  
  error_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_setBotPrecheckoutResults.error)
}
#if LANG_CXX11
void TL_messages_setBotPrecheckoutResults::set_error(::std::string&& value) {
  
  error_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mtproto.TL_messages_setBotPrecheckoutResults.error)
}
#endif
void TL_messages_setBotPrecheckoutResults::set_error(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  error_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtproto.TL_messages_setBotPrecheckoutResults.error)
}
void TL_messages_setBotPrecheckoutResults::set_error(const char* value, size_t size) {
  
  error_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtproto.TL_messages_setBotPrecheckoutResults.error)
}
::std::string* TL_messages_setBotPrecheckoutResults::mutable_error() {
  
  // @@protoc_insertion_point(field_mutable:mtproto.TL_messages_setBotPrecheckoutResults.error)
  return error_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* TL_messages_setBotPrecheckoutResults::release_error() {
  // @@protoc_insertion_point(field_release:mtproto.TL_messages_setBotPrecheckoutResults.error)
  
  return error_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TL_messages_setBotPrecheckoutResults::set_allocated_error(::std::string* error) {
  if (error != NULL) {
    
  } else {
    
  }
  error_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), error);
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_messages_setBotPrecheckoutResults.error)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TL_messages_uploadMedia::kPeerFieldNumber;
const int TL_messages_uploadMedia::kMediaFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TL_messages_uploadMedia::TL_messages_uploadMedia()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.TL_messages_uploadMedia)
}
TL_messages_uploadMedia::TL_messages_uploadMedia(const TL_messages_uploadMedia& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_peer()) {
    peer_ = new ::mtproto::InputPeer(*from.peer_);
  } else {
    peer_ = NULL;
  }
  if (from.has_media()) {
    media_ = new ::mtproto::InputMedia(*from.media_);
  } else {
    media_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:mtproto.TL_messages_uploadMedia)
}

void TL_messages_uploadMedia::SharedCtor() {
  ::memset(&peer_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&media_) -
      reinterpret_cast<char*>(&peer_)) + sizeof(media_));
  _cached_size_ = 0;
}

TL_messages_uploadMedia::~TL_messages_uploadMedia() {
  // @@protoc_insertion_point(destructor:mtproto.TL_messages_uploadMedia)
  SharedDtor();
}

void TL_messages_uploadMedia::SharedDtor() {
  if (this != internal_default_instance()) delete peer_;
  if (this != internal_default_instance()) delete media_;
}

void TL_messages_uploadMedia::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TL_messages_uploadMedia::descriptor() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TL_messages_uploadMedia& TL_messages_uploadMedia::default_instance() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  return *internal_default_instance();
}

TL_messages_uploadMedia* TL_messages_uploadMedia::New(::google::protobuf::Arena* arena) const {
  TL_messages_uploadMedia* n = new TL_messages_uploadMedia;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TL_messages_uploadMedia::Swap(TL_messages_uploadMedia* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TL_messages_uploadMedia::InternalSwap(TL_messages_uploadMedia* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata TL_messages_uploadMedia::GetMetadata() const {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TL_messages_uploadMedia

// .mtproto.InputPeer peer = 1;
bool TL_messages_uploadMedia::has_peer() const {
  return this != internal_default_instance() && peer_ != NULL;
}
void TL_messages_uploadMedia::clear_peer() {
  if (GetArenaNoVirtual() == NULL && peer_ != NULL) delete peer_;
  peer_ = NULL;
}
const ::mtproto::InputPeer& TL_messages_uploadMedia::peer() const {
  const ::mtproto::InputPeer* p = peer_;
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_uploadMedia.peer)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::InputPeer*>(
      &::mtproto::_InputPeer_default_instance_);
}
::mtproto::InputPeer* TL_messages_uploadMedia::mutable_peer() {
  
  if (peer_ == NULL) {
    peer_ = new ::mtproto::InputPeer;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_messages_uploadMedia.peer)
  return peer_;
}
::mtproto::InputPeer* TL_messages_uploadMedia::release_peer() {
  // @@protoc_insertion_point(field_release:mtproto.TL_messages_uploadMedia.peer)
  
  ::mtproto::InputPeer* temp = peer_;
  peer_ = NULL;
  return temp;
}
void TL_messages_uploadMedia::set_allocated_peer(::mtproto::InputPeer* peer) {
  delete peer_;
  peer_ = peer;
  if (peer) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_messages_uploadMedia.peer)
}

// .mtproto.InputMedia media = 2;
bool TL_messages_uploadMedia::has_media() const {
  return this != internal_default_instance() && media_ != NULL;
}
void TL_messages_uploadMedia::clear_media() {
  if (GetArenaNoVirtual() == NULL && media_ != NULL) delete media_;
  media_ = NULL;
}
const ::mtproto::InputMedia& TL_messages_uploadMedia::media() const {
  const ::mtproto::InputMedia* p = media_;
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_uploadMedia.media)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::InputMedia*>(
      &::mtproto::_InputMedia_default_instance_);
}
::mtproto::InputMedia* TL_messages_uploadMedia::mutable_media() {
  
  if (media_ == NULL) {
    media_ = new ::mtproto::InputMedia;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_messages_uploadMedia.media)
  return media_;
}
::mtproto::InputMedia* TL_messages_uploadMedia::release_media() {
  // @@protoc_insertion_point(field_release:mtproto.TL_messages_uploadMedia.media)
  
  ::mtproto::InputMedia* temp = media_;
  media_ = NULL;
  return temp;
}
void TL_messages_uploadMedia::set_allocated_media(::mtproto::InputMedia* media) {
  delete media_;
  media_ = media;
  if (media) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_messages_uploadMedia.media)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TL_messages_sendScreenshotNotification::kPeerFieldNumber;
const int TL_messages_sendScreenshotNotification::kReplyToMsgIdFieldNumber;
const int TL_messages_sendScreenshotNotification::kRandomIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TL_messages_sendScreenshotNotification::TL_messages_sendScreenshotNotification()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.TL_messages_sendScreenshotNotification)
}
TL_messages_sendScreenshotNotification::TL_messages_sendScreenshotNotification(const TL_messages_sendScreenshotNotification& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_peer()) {
    peer_ = new ::mtproto::InputPeer(*from.peer_);
  } else {
    peer_ = NULL;
  }
  ::memcpy(&random_id_, &from.random_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&reply_to_msg_id_) -
    reinterpret_cast<char*>(&random_id_)) + sizeof(reply_to_msg_id_));
  // @@protoc_insertion_point(copy_constructor:mtproto.TL_messages_sendScreenshotNotification)
}

void TL_messages_sendScreenshotNotification::SharedCtor() {
  ::memset(&peer_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&reply_to_msg_id_) -
      reinterpret_cast<char*>(&peer_)) + sizeof(reply_to_msg_id_));
  _cached_size_ = 0;
}

TL_messages_sendScreenshotNotification::~TL_messages_sendScreenshotNotification() {
  // @@protoc_insertion_point(destructor:mtproto.TL_messages_sendScreenshotNotification)
  SharedDtor();
}

void TL_messages_sendScreenshotNotification::SharedDtor() {
  if (this != internal_default_instance()) delete peer_;
}

void TL_messages_sendScreenshotNotification::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TL_messages_sendScreenshotNotification::descriptor() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TL_messages_sendScreenshotNotification& TL_messages_sendScreenshotNotification::default_instance() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  return *internal_default_instance();
}

TL_messages_sendScreenshotNotification* TL_messages_sendScreenshotNotification::New(::google::protobuf::Arena* arena) const {
  TL_messages_sendScreenshotNotification* n = new TL_messages_sendScreenshotNotification;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TL_messages_sendScreenshotNotification::Swap(TL_messages_sendScreenshotNotification* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TL_messages_sendScreenshotNotification::InternalSwap(TL_messages_sendScreenshotNotification* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata TL_messages_sendScreenshotNotification::GetMetadata() const {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TL_messages_sendScreenshotNotification

// .mtproto.InputPeer peer = 1;
bool TL_messages_sendScreenshotNotification::has_peer() const {
  return this != internal_default_instance() && peer_ != NULL;
}
void TL_messages_sendScreenshotNotification::clear_peer() {
  if (GetArenaNoVirtual() == NULL && peer_ != NULL) delete peer_;
  peer_ = NULL;
}
const ::mtproto::InputPeer& TL_messages_sendScreenshotNotification::peer() const {
  const ::mtproto::InputPeer* p = peer_;
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_sendScreenshotNotification.peer)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::InputPeer*>(
      &::mtproto::_InputPeer_default_instance_);
}
::mtproto::InputPeer* TL_messages_sendScreenshotNotification::mutable_peer() {
  
  if (peer_ == NULL) {
    peer_ = new ::mtproto::InputPeer;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_messages_sendScreenshotNotification.peer)
  return peer_;
}
::mtproto::InputPeer* TL_messages_sendScreenshotNotification::release_peer() {
  // @@protoc_insertion_point(field_release:mtproto.TL_messages_sendScreenshotNotification.peer)
  
  ::mtproto::InputPeer* temp = peer_;
  peer_ = NULL;
  return temp;
}
void TL_messages_sendScreenshotNotification::set_allocated_peer(::mtproto::InputPeer* peer) {
  delete peer_;
  peer_ = peer;
  if (peer) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_messages_sendScreenshotNotification.peer)
}

// int32 reply_to_msg_id = 2;
void TL_messages_sendScreenshotNotification::clear_reply_to_msg_id() {
  reply_to_msg_id_ = 0;
}
::google::protobuf::int32 TL_messages_sendScreenshotNotification::reply_to_msg_id() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_sendScreenshotNotification.reply_to_msg_id)
  return reply_to_msg_id_;
}
void TL_messages_sendScreenshotNotification::set_reply_to_msg_id(::google::protobuf::int32 value) {
  
  reply_to_msg_id_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_sendScreenshotNotification.reply_to_msg_id)
}

// int64 random_id = 3;
void TL_messages_sendScreenshotNotification::clear_random_id() {
  random_id_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 TL_messages_sendScreenshotNotification::random_id() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_sendScreenshotNotification.random_id)
  return random_id_;
}
void TL_messages_sendScreenshotNotification::set_random_id(::google::protobuf::int64 value) {
  
  random_id_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_sendScreenshotNotification.random_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TL_messages_getFavedStickers::kHashFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TL_messages_getFavedStickers::TL_messages_getFavedStickers()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.TL_messages_getFavedStickers)
}
TL_messages_getFavedStickers::TL_messages_getFavedStickers(const TL_messages_getFavedStickers& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  hash_ = from.hash_;
  // @@protoc_insertion_point(copy_constructor:mtproto.TL_messages_getFavedStickers)
}

void TL_messages_getFavedStickers::SharedCtor() {
  hash_ = 0;
  _cached_size_ = 0;
}

TL_messages_getFavedStickers::~TL_messages_getFavedStickers() {
  // @@protoc_insertion_point(destructor:mtproto.TL_messages_getFavedStickers)
  SharedDtor();
}

void TL_messages_getFavedStickers::SharedDtor() {
}

void TL_messages_getFavedStickers::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TL_messages_getFavedStickers::descriptor() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TL_messages_getFavedStickers& TL_messages_getFavedStickers::default_instance() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  return *internal_default_instance();
}

TL_messages_getFavedStickers* TL_messages_getFavedStickers::New(::google::protobuf::Arena* arena) const {
  TL_messages_getFavedStickers* n = new TL_messages_getFavedStickers;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TL_messages_getFavedStickers::Swap(TL_messages_getFavedStickers* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TL_messages_getFavedStickers::InternalSwap(TL_messages_getFavedStickers* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata TL_messages_getFavedStickers::GetMetadata() const {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TL_messages_getFavedStickers

// int32 hash = 1;
void TL_messages_getFavedStickers::clear_hash() {
  hash_ = 0;
}
::google::protobuf::int32 TL_messages_getFavedStickers::hash() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_getFavedStickers.hash)
  return hash_;
}
void TL_messages_getFavedStickers::set_hash(::google::protobuf::int32 value) {
  
  hash_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_getFavedStickers.hash)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TL_messages_faveSticker::kIdFieldNumber;
const int TL_messages_faveSticker::kUnfaveFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TL_messages_faveSticker::TL_messages_faveSticker()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.TL_messages_faveSticker)
}
TL_messages_faveSticker::TL_messages_faveSticker(const TL_messages_faveSticker& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_id()) {
    id_ = new ::mtproto::InputDocument(*from.id_);
  } else {
    id_ = NULL;
  }
  if (from.has_unfave()) {
    unfave_ = new ::mtproto::Bool(*from.unfave_);
  } else {
    unfave_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:mtproto.TL_messages_faveSticker)
}

void TL_messages_faveSticker::SharedCtor() {
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&unfave_) -
      reinterpret_cast<char*>(&id_)) + sizeof(unfave_));
  _cached_size_ = 0;
}

TL_messages_faveSticker::~TL_messages_faveSticker() {
  // @@protoc_insertion_point(destructor:mtproto.TL_messages_faveSticker)
  SharedDtor();
}

void TL_messages_faveSticker::SharedDtor() {
  if (this != internal_default_instance()) delete id_;
  if (this != internal_default_instance()) delete unfave_;
}

void TL_messages_faveSticker::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TL_messages_faveSticker::descriptor() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TL_messages_faveSticker& TL_messages_faveSticker::default_instance() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  return *internal_default_instance();
}

TL_messages_faveSticker* TL_messages_faveSticker::New(::google::protobuf::Arena* arena) const {
  TL_messages_faveSticker* n = new TL_messages_faveSticker;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TL_messages_faveSticker::Swap(TL_messages_faveSticker* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TL_messages_faveSticker::InternalSwap(TL_messages_faveSticker* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata TL_messages_faveSticker::GetMetadata() const {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TL_messages_faveSticker

// .mtproto.InputDocument id = 1;
bool TL_messages_faveSticker::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
void TL_messages_faveSticker::clear_id() {
  if (GetArenaNoVirtual() == NULL && id_ != NULL) delete id_;
  id_ = NULL;
}
const ::mtproto::InputDocument& TL_messages_faveSticker::id() const {
  const ::mtproto::InputDocument* p = id_;
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_faveSticker.id)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::InputDocument*>(
      &::mtproto::_InputDocument_default_instance_);
}
::mtproto::InputDocument* TL_messages_faveSticker::mutable_id() {
  
  if (id_ == NULL) {
    id_ = new ::mtproto::InputDocument;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_messages_faveSticker.id)
  return id_;
}
::mtproto::InputDocument* TL_messages_faveSticker::release_id() {
  // @@protoc_insertion_point(field_release:mtproto.TL_messages_faveSticker.id)
  
  ::mtproto::InputDocument* temp = id_;
  id_ = NULL;
  return temp;
}
void TL_messages_faveSticker::set_allocated_id(::mtproto::InputDocument* id) {
  delete id_;
  id_ = id;
  if (id) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_messages_faveSticker.id)
}

// .mtproto.Bool unfave = 2;
bool TL_messages_faveSticker::has_unfave() const {
  return this != internal_default_instance() && unfave_ != NULL;
}
void TL_messages_faveSticker::clear_unfave() {
  if (GetArenaNoVirtual() == NULL && unfave_ != NULL) delete unfave_;
  unfave_ = NULL;
}
const ::mtproto::Bool& TL_messages_faveSticker::unfave() const {
  const ::mtproto::Bool* p = unfave_;
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_faveSticker.unfave)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::Bool*>(
      &::mtproto::_Bool_default_instance_);
}
::mtproto::Bool* TL_messages_faveSticker::mutable_unfave() {
  
  if (unfave_ == NULL) {
    unfave_ = new ::mtproto::Bool;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_messages_faveSticker.unfave)
  return unfave_;
}
::mtproto::Bool* TL_messages_faveSticker::release_unfave() {
  // @@protoc_insertion_point(field_release:mtproto.TL_messages_faveSticker.unfave)
  
  ::mtproto::Bool* temp = unfave_;
  unfave_ = NULL;
  return temp;
}
void TL_messages_faveSticker::set_allocated_unfave(::mtproto::Bool* unfave) {
  delete unfave_;
  unfave_ = unfave;
  if (unfave) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_messages_faveSticker.unfave)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TL_messages_getUnreadMentions::kPeerFieldNumber;
const int TL_messages_getUnreadMentions::kOffsetIdFieldNumber;
const int TL_messages_getUnreadMentions::kAddOffsetFieldNumber;
const int TL_messages_getUnreadMentions::kLimitFieldNumber;
const int TL_messages_getUnreadMentions::kMaxIdFieldNumber;
const int TL_messages_getUnreadMentions::kMinIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TL_messages_getUnreadMentions::TL_messages_getUnreadMentions()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.TL_messages_getUnreadMentions)
}
TL_messages_getUnreadMentions::TL_messages_getUnreadMentions(const TL_messages_getUnreadMentions& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_peer()) {
    peer_ = new ::mtproto::InputPeer(*from.peer_);
  } else {
    peer_ = NULL;
  }
  ::memcpy(&offset_id_, &from.offset_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&min_id_) -
    reinterpret_cast<char*>(&offset_id_)) + sizeof(min_id_));
  // @@protoc_insertion_point(copy_constructor:mtproto.TL_messages_getUnreadMentions)
}

void TL_messages_getUnreadMentions::SharedCtor() {
  ::memset(&peer_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&min_id_) -
      reinterpret_cast<char*>(&peer_)) + sizeof(min_id_));
  _cached_size_ = 0;
}

TL_messages_getUnreadMentions::~TL_messages_getUnreadMentions() {
  // @@protoc_insertion_point(destructor:mtproto.TL_messages_getUnreadMentions)
  SharedDtor();
}

void TL_messages_getUnreadMentions::SharedDtor() {
  if (this != internal_default_instance()) delete peer_;
}

void TL_messages_getUnreadMentions::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TL_messages_getUnreadMentions::descriptor() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TL_messages_getUnreadMentions& TL_messages_getUnreadMentions::default_instance() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  return *internal_default_instance();
}

TL_messages_getUnreadMentions* TL_messages_getUnreadMentions::New(::google::protobuf::Arena* arena) const {
  TL_messages_getUnreadMentions* n = new TL_messages_getUnreadMentions;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TL_messages_getUnreadMentions::Swap(TL_messages_getUnreadMentions* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TL_messages_getUnreadMentions::InternalSwap(TL_messages_getUnreadMentions* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata TL_messages_getUnreadMentions::GetMetadata() const {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TL_messages_getUnreadMentions

// .mtproto.InputPeer peer = 1;
bool TL_messages_getUnreadMentions::has_peer() const {
  return this != internal_default_instance() && peer_ != NULL;
}
void TL_messages_getUnreadMentions::clear_peer() {
  if (GetArenaNoVirtual() == NULL && peer_ != NULL) delete peer_;
  peer_ = NULL;
}
const ::mtproto::InputPeer& TL_messages_getUnreadMentions::peer() const {
  const ::mtproto::InputPeer* p = peer_;
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_getUnreadMentions.peer)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::InputPeer*>(
      &::mtproto::_InputPeer_default_instance_);
}
::mtproto::InputPeer* TL_messages_getUnreadMentions::mutable_peer() {
  
  if (peer_ == NULL) {
    peer_ = new ::mtproto::InputPeer;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_messages_getUnreadMentions.peer)
  return peer_;
}
::mtproto::InputPeer* TL_messages_getUnreadMentions::release_peer() {
  // @@protoc_insertion_point(field_release:mtproto.TL_messages_getUnreadMentions.peer)
  
  ::mtproto::InputPeer* temp = peer_;
  peer_ = NULL;
  return temp;
}
void TL_messages_getUnreadMentions::set_allocated_peer(::mtproto::InputPeer* peer) {
  delete peer_;
  peer_ = peer;
  if (peer) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_messages_getUnreadMentions.peer)
}

// int32 offset_id = 2;
void TL_messages_getUnreadMentions::clear_offset_id() {
  offset_id_ = 0;
}
::google::protobuf::int32 TL_messages_getUnreadMentions::offset_id() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_getUnreadMentions.offset_id)
  return offset_id_;
}
void TL_messages_getUnreadMentions::set_offset_id(::google::protobuf::int32 value) {
  
  offset_id_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_getUnreadMentions.offset_id)
}

// int32 add_offset = 3;
void TL_messages_getUnreadMentions::clear_add_offset() {
  add_offset_ = 0;
}
::google::protobuf::int32 TL_messages_getUnreadMentions::add_offset() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_getUnreadMentions.add_offset)
  return add_offset_;
}
void TL_messages_getUnreadMentions::set_add_offset(::google::protobuf::int32 value) {
  
  add_offset_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_getUnreadMentions.add_offset)
}

// int32 limit = 4;
void TL_messages_getUnreadMentions::clear_limit() {
  limit_ = 0;
}
::google::protobuf::int32 TL_messages_getUnreadMentions::limit() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_getUnreadMentions.limit)
  return limit_;
}
void TL_messages_getUnreadMentions::set_limit(::google::protobuf::int32 value) {
  
  limit_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_getUnreadMentions.limit)
}

// int32 max_id = 5;
void TL_messages_getUnreadMentions::clear_max_id() {
  max_id_ = 0;
}
::google::protobuf::int32 TL_messages_getUnreadMentions::max_id() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_getUnreadMentions.max_id)
  return max_id_;
}
void TL_messages_getUnreadMentions::set_max_id(::google::protobuf::int32 value) {
  
  max_id_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_getUnreadMentions.max_id)
}

// int32 min_id = 6;
void TL_messages_getUnreadMentions::clear_min_id() {
  min_id_ = 0;
}
::google::protobuf::int32 TL_messages_getUnreadMentions::min_id() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_getUnreadMentions.min_id)
  return min_id_;
}
void TL_messages_getUnreadMentions::set_min_id(::google::protobuf::int32 value) {
  
  min_id_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_getUnreadMentions.min_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TL_messages_readMentions::kPeerFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TL_messages_readMentions::TL_messages_readMentions()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.TL_messages_readMentions)
}
TL_messages_readMentions::TL_messages_readMentions(const TL_messages_readMentions& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_peer()) {
    peer_ = new ::mtproto::InputPeer(*from.peer_);
  } else {
    peer_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:mtproto.TL_messages_readMentions)
}

void TL_messages_readMentions::SharedCtor() {
  peer_ = NULL;
  _cached_size_ = 0;
}

TL_messages_readMentions::~TL_messages_readMentions() {
  // @@protoc_insertion_point(destructor:mtproto.TL_messages_readMentions)
  SharedDtor();
}

void TL_messages_readMentions::SharedDtor() {
  if (this != internal_default_instance()) delete peer_;
}

void TL_messages_readMentions::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TL_messages_readMentions::descriptor() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TL_messages_readMentions& TL_messages_readMentions::default_instance() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  return *internal_default_instance();
}

TL_messages_readMentions* TL_messages_readMentions::New(::google::protobuf::Arena* arena) const {
  TL_messages_readMentions* n = new TL_messages_readMentions;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TL_messages_readMentions::Swap(TL_messages_readMentions* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TL_messages_readMentions::InternalSwap(TL_messages_readMentions* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata TL_messages_readMentions::GetMetadata() const {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TL_messages_readMentions

// .mtproto.InputPeer peer = 1;
bool TL_messages_readMentions::has_peer() const {
  return this != internal_default_instance() && peer_ != NULL;
}
void TL_messages_readMentions::clear_peer() {
  if (GetArenaNoVirtual() == NULL && peer_ != NULL) delete peer_;
  peer_ = NULL;
}
const ::mtproto::InputPeer& TL_messages_readMentions::peer() const {
  const ::mtproto::InputPeer* p = peer_;
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_readMentions.peer)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::InputPeer*>(
      &::mtproto::_InputPeer_default_instance_);
}
::mtproto::InputPeer* TL_messages_readMentions::mutable_peer() {
  
  if (peer_ == NULL) {
    peer_ = new ::mtproto::InputPeer;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_messages_readMentions.peer)
  return peer_;
}
::mtproto::InputPeer* TL_messages_readMentions::release_peer() {
  // @@protoc_insertion_point(field_release:mtproto.TL_messages_readMentions.peer)
  
  ::mtproto::InputPeer* temp = peer_;
  peer_ = NULL;
  return temp;
}
void TL_messages_readMentions::set_allocated_peer(::mtproto::InputPeer* peer) {
  delete peer_;
  peer_ = peer;
  if (peer) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_messages_readMentions.peer)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TL_messages_getRecentLocations::kPeerFieldNumber;
const int TL_messages_getRecentLocations::kLimitFieldNumber;
const int TL_messages_getRecentLocations::kHashFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TL_messages_getRecentLocations::TL_messages_getRecentLocations()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.TL_messages_getRecentLocations)
}
TL_messages_getRecentLocations::TL_messages_getRecentLocations(const TL_messages_getRecentLocations& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_peer()) {
    peer_ = new ::mtproto::InputPeer(*from.peer_);
  } else {
    peer_ = NULL;
  }
  ::memcpy(&limit_, &from.limit_,
    static_cast<size_t>(reinterpret_cast<char*>(&hash_) -
    reinterpret_cast<char*>(&limit_)) + sizeof(hash_));
  // @@protoc_insertion_point(copy_constructor:mtproto.TL_messages_getRecentLocations)
}

void TL_messages_getRecentLocations::SharedCtor() {
  ::memset(&peer_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&hash_) -
      reinterpret_cast<char*>(&peer_)) + sizeof(hash_));
  _cached_size_ = 0;
}

TL_messages_getRecentLocations::~TL_messages_getRecentLocations() {
  // @@protoc_insertion_point(destructor:mtproto.TL_messages_getRecentLocations)
  SharedDtor();
}

void TL_messages_getRecentLocations::SharedDtor() {
  if (this != internal_default_instance()) delete peer_;
}

void TL_messages_getRecentLocations::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TL_messages_getRecentLocations::descriptor() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TL_messages_getRecentLocations& TL_messages_getRecentLocations::default_instance() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  return *internal_default_instance();
}

TL_messages_getRecentLocations* TL_messages_getRecentLocations::New(::google::protobuf::Arena* arena) const {
  TL_messages_getRecentLocations* n = new TL_messages_getRecentLocations;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TL_messages_getRecentLocations::Swap(TL_messages_getRecentLocations* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TL_messages_getRecentLocations::InternalSwap(TL_messages_getRecentLocations* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata TL_messages_getRecentLocations::GetMetadata() const {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TL_messages_getRecentLocations

// .mtproto.InputPeer peer = 1;
bool TL_messages_getRecentLocations::has_peer() const {
  return this != internal_default_instance() && peer_ != NULL;
}
void TL_messages_getRecentLocations::clear_peer() {
  if (GetArenaNoVirtual() == NULL && peer_ != NULL) delete peer_;
  peer_ = NULL;
}
const ::mtproto::InputPeer& TL_messages_getRecentLocations::peer() const {
  const ::mtproto::InputPeer* p = peer_;
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_getRecentLocations.peer)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::InputPeer*>(
      &::mtproto::_InputPeer_default_instance_);
}
::mtproto::InputPeer* TL_messages_getRecentLocations::mutable_peer() {
  
  if (peer_ == NULL) {
    peer_ = new ::mtproto::InputPeer;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_messages_getRecentLocations.peer)
  return peer_;
}
::mtproto::InputPeer* TL_messages_getRecentLocations::release_peer() {
  // @@protoc_insertion_point(field_release:mtproto.TL_messages_getRecentLocations.peer)
  
  ::mtproto::InputPeer* temp = peer_;
  peer_ = NULL;
  return temp;
}
void TL_messages_getRecentLocations::set_allocated_peer(::mtproto::InputPeer* peer) {
  delete peer_;
  peer_ = peer;
  if (peer) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_messages_getRecentLocations.peer)
}

// int32 limit = 2;
void TL_messages_getRecentLocations::clear_limit() {
  limit_ = 0;
}
::google::protobuf::int32 TL_messages_getRecentLocations::limit() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_getRecentLocations.limit)
  return limit_;
}
void TL_messages_getRecentLocations::set_limit(::google::protobuf::int32 value) {
  
  limit_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_getRecentLocations.limit)
}

// int32 hash = 3;
void TL_messages_getRecentLocations::clear_hash() {
  hash_ = 0;
}
::google::protobuf::int32 TL_messages_getRecentLocations::hash() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_getRecentLocations.hash)
  return hash_;
}
void TL_messages_getRecentLocations::set_hash(::google::protobuf::int32 value) {
  
  hash_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_getRecentLocations.hash)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TL_messages_sendMultiMedia::kSilentFieldNumber;
const int TL_messages_sendMultiMedia::kBackgroundFieldNumber;
const int TL_messages_sendMultiMedia::kClearDraftFieldNumber;
const int TL_messages_sendMultiMedia::kPeerFieldNumber;
const int TL_messages_sendMultiMedia::kReplyToMsgIdFieldNumber;
const int TL_messages_sendMultiMedia::kMultiMediaFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TL_messages_sendMultiMedia::TL_messages_sendMultiMedia()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.TL_messages_sendMultiMedia)
}
TL_messages_sendMultiMedia::TL_messages_sendMultiMedia(const TL_messages_sendMultiMedia& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      multi_media_(from.multi_media_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_peer()) {
    peer_ = new ::mtproto::InputPeer(*from.peer_);
  } else {
    peer_ = NULL;
  }
  ::memcpy(&silent_, &from.silent_,
    static_cast<size_t>(reinterpret_cast<char*>(&reply_to_msg_id_) -
    reinterpret_cast<char*>(&silent_)) + sizeof(reply_to_msg_id_));
  // @@protoc_insertion_point(copy_constructor:mtproto.TL_messages_sendMultiMedia)
}

void TL_messages_sendMultiMedia::SharedCtor() {
  ::memset(&peer_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&reply_to_msg_id_) -
      reinterpret_cast<char*>(&peer_)) + sizeof(reply_to_msg_id_));
  _cached_size_ = 0;
}

TL_messages_sendMultiMedia::~TL_messages_sendMultiMedia() {
  // @@protoc_insertion_point(destructor:mtproto.TL_messages_sendMultiMedia)
  SharedDtor();
}

void TL_messages_sendMultiMedia::SharedDtor() {
  if (this != internal_default_instance()) delete peer_;
}

void TL_messages_sendMultiMedia::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TL_messages_sendMultiMedia::descriptor() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TL_messages_sendMultiMedia& TL_messages_sendMultiMedia::default_instance() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  return *internal_default_instance();
}

TL_messages_sendMultiMedia* TL_messages_sendMultiMedia::New(::google::protobuf::Arena* arena) const {
  TL_messages_sendMultiMedia* n = new TL_messages_sendMultiMedia;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TL_messages_sendMultiMedia::Swap(TL_messages_sendMultiMedia* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TL_messages_sendMultiMedia::InternalSwap(TL_messages_sendMultiMedia* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata TL_messages_sendMultiMedia::GetMetadata() const {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TL_messages_sendMultiMedia

// bool silent = 2;
void TL_messages_sendMultiMedia::clear_silent() {
  silent_ = false;
}
bool TL_messages_sendMultiMedia::silent() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_sendMultiMedia.silent)
  return silent_;
}
void TL_messages_sendMultiMedia::set_silent(bool value) {
  
  silent_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_sendMultiMedia.silent)
}

// bool background = 3;
void TL_messages_sendMultiMedia::clear_background() {
  background_ = false;
}
bool TL_messages_sendMultiMedia::background() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_sendMultiMedia.background)
  return background_;
}
void TL_messages_sendMultiMedia::set_background(bool value) {
  
  background_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_sendMultiMedia.background)
}

// bool clear_draft = 4;
void TL_messages_sendMultiMedia::clear_clear_draft() {
  clear_draft_ = false;
}
bool TL_messages_sendMultiMedia::clear_draft() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_sendMultiMedia.clear_draft)
  return clear_draft_;
}
void TL_messages_sendMultiMedia::set_clear_draft(bool value) {
  
  clear_draft_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_sendMultiMedia.clear_draft)
}

// .mtproto.InputPeer peer = 5;
bool TL_messages_sendMultiMedia::has_peer() const {
  return this != internal_default_instance() && peer_ != NULL;
}
void TL_messages_sendMultiMedia::clear_peer() {
  if (GetArenaNoVirtual() == NULL && peer_ != NULL) delete peer_;
  peer_ = NULL;
}
const ::mtproto::InputPeer& TL_messages_sendMultiMedia::peer() const {
  const ::mtproto::InputPeer* p = peer_;
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_sendMultiMedia.peer)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::InputPeer*>(
      &::mtproto::_InputPeer_default_instance_);
}
::mtproto::InputPeer* TL_messages_sendMultiMedia::mutable_peer() {
  
  if (peer_ == NULL) {
    peer_ = new ::mtproto::InputPeer;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_messages_sendMultiMedia.peer)
  return peer_;
}
::mtproto::InputPeer* TL_messages_sendMultiMedia::release_peer() {
  // @@protoc_insertion_point(field_release:mtproto.TL_messages_sendMultiMedia.peer)
  
  ::mtproto::InputPeer* temp = peer_;
  peer_ = NULL;
  return temp;
}
void TL_messages_sendMultiMedia::set_allocated_peer(::mtproto::InputPeer* peer) {
  delete peer_;
  peer_ = peer;
  if (peer) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_messages_sendMultiMedia.peer)
}

// int32 reply_to_msg_id = 6;
void TL_messages_sendMultiMedia::clear_reply_to_msg_id() {
  reply_to_msg_id_ = 0;
}
::google::protobuf::int32 TL_messages_sendMultiMedia::reply_to_msg_id() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_sendMultiMedia.reply_to_msg_id)
  return reply_to_msg_id_;
}
void TL_messages_sendMultiMedia::set_reply_to_msg_id(::google::protobuf::int32 value) {
  
  reply_to_msg_id_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_sendMultiMedia.reply_to_msg_id)
}

// repeated .mtproto.InputSingleMedia multi_media = 7;
int TL_messages_sendMultiMedia::multi_media_size() const {
  return multi_media_.size();
}
void TL_messages_sendMultiMedia::clear_multi_media() {
  multi_media_.Clear();
}
const ::mtproto::InputSingleMedia& TL_messages_sendMultiMedia::multi_media(int index) const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_sendMultiMedia.multi_media)
  return multi_media_.Get(index);
}
::mtproto::InputSingleMedia* TL_messages_sendMultiMedia::mutable_multi_media(int index) {
  // @@protoc_insertion_point(field_mutable:mtproto.TL_messages_sendMultiMedia.multi_media)
  return multi_media_.Mutable(index);
}
::mtproto::InputSingleMedia* TL_messages_sendMultiMedia::add_multi_media() {
  // @@protoc_insertion_point(field_add:mtproto.TL_messages_sendMultiMedia.multi_media)
  return multi_media_.Add();
}
::google::protobuf::RepeatedPtrField< ::mtproto::InputSingleMedia >*
TL_messages_sendMultiMedia::mutable_multi_media() {
  // @@protoc_insertion_point(field_mutable_list:mtproto.TL_messages_sendMultiMedia.multi_media)
  return &multi_media_;
}
const ::google::protobuf::RepeatedPtrField< ::mtproto::InputSingleMedia >&
TL_messages_sendMultiMedia::multi_media() const {
  // @@protoc_insertion_point(field_list:mtproto.TL_messages_sendMultiMedia.multi_media)
  return multi_media_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TL_messages_uploadEncryptedFile::kPeerFieldNumber;
const int TL_messages_uploadEncryptedFile::kFileFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TL_messages_uploadEncryptedFile::TL_messages_uploadEncryptedFile()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.TL_messages_uploadEncryptedFile)
}
TL_messages_uploadEncryptedFile::TL_messages_uploadEncryptedFile(const TL_messages_uploadEncryptedFile& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_peer()) {
    peer_ = new ::mtproto::InputEncryptedChat(*from.peer_);
  } else {
    peer_ = NULL;
  }
  if (from.has_file()) {
    file_ = new ::mtproto::InputEncryptedFile(*from.file_);
  } else {
    file_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:mtproto.TL_messages_uploadEncryptedFile)
}

void TL_messages_uploadEncryptedFile::SharedCtor() {
  ::memset(&peer_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&file_) -
      reinterpret_cast<char*>(&peer_)) + sizeof(file_));
  _cached_size_ = 0;
}

TL_messages_uploadEncryptedFile::~TL_messages_uploadEncryptedFile() {
  // @@protoc_insertion_point(destructor:mtproto.TL_messages_uploadEncryptedFile)
  SharedDtor();
}

void TL_messages_uploadEncryptedFile::SharedDtor() {
  if (this != internal_default_instance()) delete peer_;
  if (this != internal_default_instance()) delete file_;
}

void TL_messages_uploadEncryptedFile::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TL_messages_uploadEncryptedFile::descriptor() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TL_messages_uploadEncryptedFile& TL_messages_uploadEncryptedFile::default_instance() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  return *internal_default_instance();
}

TL_messages_uploadEncryptedFile* TL_messages_uploadEncryptedFile::New(::google::protobuf::Arena* arena) const {
  TL_messages_uploadEncryptedFile* n = new TL_messages_uploadEncryptedFile;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TL_messages_uploadEncryptedFile::Swap(TL_messages_uploadEncryptedFile* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TL_messages_uploadEncryptedFile::InternalSwap(TL_messages_uploadEncryptedFile* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata TL_messages_uploadEncryptedFile::GetMetadata() const {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TL_messages_uploadEncryptedFile

// .mtproto.InputEncryptedChat peer = 1;
bool TL_messages_uploadEncryptedFile::has_peer() const {
  return this != internal_default_instance() && peer_ != NULL;
}
void TL_messages_uploadEncryptedFile::clear_peer() {
  if (GetArenaNoVirtual() == NULL && peer_ != NULL) delete peer_;
  peer_ = NULL;
}
const ::mtproto::InputEncryptedChat& TL_messages_uploadEncryptedFile::peer() const {
  const ::mtproto::InputEncryptedChat* p = peer_;
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_uploadEncryptedFile.peer)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::InputEncryptedChat*>(
      &::mtproto::_InputEncryptedChat_default_instance_);
}
::mtproto::InputEncryptedChat* TL_messages_uploadEncryptedFile::mutable_peer() {
  
  if (peer_ == NULL) {
    peer_ = new ::mtproto::InputEncryptedChat;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_messages_uploadEncryptedFile.peer)
  return peer_;
}
::mtproto::InputEncryptedChat* TL_messages_uploadEncryptedFile::release_peer() {
  // @@protoc_insertion_point(field_release:mtproto.TL_messages_uploadEncryptedFile.peer)
  
  ::mtproto::InputEncryptedChat* temp = peer_;
  peer_ = NULL;
  return temp;
}
void TL_messages_uploadEncryptedFile::set_allocated_peer(::mtproto::InputEncryptedChat* peer) {
  delete peer_;
  peer_ = peer;
  if (peer) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_messages_uploadEncryptedFile.peer)
}

// .mtproto.InputEncryptedFile file = 2;
bool TL_messages_uploadEncryptedFile::has_file() const {
  return this != internal_default_instance() && file_ != NULL;
}
void TL_messages_uploadEncryptedFile::clear_file() {
  if (GetArenaNoVirtual() == NULL && file_ != NULL) delete file_;
  file_ = NULL;
}
const ::mtproto::InputEncryptedFile& TL_messages_uploadEncryptedFile::file() const {
  const ::mtproto::InputEncryptedFile* p = file_;
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_uploadEncryptedFile.file)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::InputEncryptedFile*>(
      &::mtproto::_InputEncryptedFile_default_instance_);
}
::mtproto::InputEncryptedFile* TL_messages_uploadEncryptedFile::mutable_file() {
  
  if (file_ == NULL) {
    file_ = new ::mtproto::InputEncryptedFile;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_messages_uploadEncryptedFile.file)
  return file_;
}
::mtproto::InputEncryptedFile* TL_messages_uploadEncryptedFile::release_file() {
  // @@protoc_insertion_point(field_release:mtproto.TL_messages_uploadEncryptedFile.file)
  
  ::mtproto::InputEncryptedFile* temp = file_;
  file_ = NULL;
  return temp;
}
void TL_messages_uploadEncryptedFile::set_allocated_file(::mtproto::InputEncryptedFile* file) {
  delete file_;
  file_ = file;
  if (file) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_messages_uploadEncryptedFile.file)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TL_messages_searchStickerSets::kExcludeFeaturedFieldNumber;
const int TL_messages_searchStickerSets::kQFieldNumber;
const int TL_messages_searchStickerSets::kHashFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TL_messages_searchStickerSets::TL_messages_searchStickerSets()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.TL_messages_searchStickerSets)
}
TL_messages_searchStickerSets::TL_messages_searchStickerSets(const TL_messages_searchStickerSets& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  q_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.q().size() > 0) {
    q_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.q_);
  }
  ::memcpy(&exclude_featured_, &from.exclude_featured_,
    static_cast<size_t>(reinterpret_cast<char*>(&hash_) -
    reinterpret_cast<char*>(&exclude_featured_)) + sizeof(hash_));
  // @@protoc_insertion_point(copy_constructor:mtproto.TL_messages_searchStickerSets)
}

void TL_messages_searchStickerSets::SharedCtor() {
  q_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&exclude_featured_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&hash_) -
      reinterpret_cast<char*>(&exclude_featured_)) + sizeof(hash_));
  _cached_size_ = 0;
}

TL_messages_searchStickerSets::~TL_messages_searchStickerSets() {
  // @@protoc_insertion_point(destructor:mtproto.TL_messages_searchStickerSets)
  SharedDtor();
}

void TL_messages_searchStickerSets::SharedDtor() {
  q_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void TL_messages_searchStickerSets::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TL_messages_searchStickerSets::descriptor() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TL_messages_searchStickerSets& TL_messages_searchStickerSets::default_instance() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  return *internal_default_instance();
}

TL_messages_searchStickerSets* TL_messages_searchStickerSets::New(::google::protobuf::Arena* arena) const {
  TL_messages_searchStickerSets* n = new TL_messages_searchStickerSets;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TL_messages_searchStickerSets::Swap(TL_messages_searchStickerSets* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TL_messages_searchStickerSets::InternalSwap(TL_messages_searchStickerSets* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata TL_messages_searchStickerSets::GetMetadata() const {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TL_messages_searchStickerSets

// bool exclude_featured = 2;
void TL_messages_searchStickerSets::clear_exclude_featured() {
  exclude_featured_ = false;
}
bool TL_messages_searchStickerSets::exclude_featured() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_searchStickerSets.exclude_featured)
  return exclude_featured_;
}
void TL_messages_searchStickerSets::set_exclude_featured(bool value) {
  
  exclude_featured_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_searchStickerSets.exclude_featured)
}

// string q = 3;
void TL_messages_searchStickerSets::clear_q() {
  q_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& TL_messages_searchStickerSets::q() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_searchStickerSets.q)
  return q_.GetNoArena();
}
void TL_messages_searchStickerSets::set_q(const ::std::string& value) {
  
  q_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_searchStickerSets.q)
}
#if LANG_CXX11
void TL_messages_searchStickerSets::set_q(::std::string&& value) {
  
  q_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mtproto.TL_messages_searchStickerSets.q)
}
#endif
void TL_messages_searchStickerSets::set_q(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  q_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtproto.TL_messages_searchStickerSets.q)
}
void TL_messages_searchStickerSets::set_q(const char* value, size_t size) {
  
  q_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtproto.TL_messages_searchStickerSets.q)
}
::std::string* TL_messages_searchStickerSets::mutable_q() {
  
  // @@protoc_insertion_point(field_mutable:mtproto.TL_messages_searchStickerSets.q)
  return q_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* TL_messages_searchStickerSets::release_q() {
  // @@protoc_insertion_point(field_release:mtproto.TL_messages_searchStickerSets.q)
  
  return q_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TL_messages_searchStickerSets::set_allocated_q(::std::string* q) {
  if (q != NULL) {
    
  } else {
    
  }
  q_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), q);
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_messages_searchStickerSets.q)
}

// int32 hash = 4;
void TL_messages_searchStickerSets::clear_hash() {
  hash_ = 0;
}
::google::protobuf::int32 TL_messages_searchStickerSets::hash() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_searchStickerSets.hash)
  return hash_;
}
void TL_messages_searchStickerSets::set_hash(::google::protobuf::int32 value) {
  
  hash_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_searchStickerSets.hash)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TL_messages_getSplitRanges::TL_messages_getSplitRanges()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.TL_messages_getSplitRanges)
}
TL_messages_getSplitRanges::TL_messages_getSplitRanges(const TL_messages_getSplitRanges& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:mtproto.TL_messages_getSplitRanges)
}

void TL_messages_getSplitRanges::SharedCtor() {
  _cached_size_ = 0;
}

TL_messages_getSplitRanges::~TL_messages_getSplitRanges() {
  // @@protoc_insertion_point(destructor:mtproto.TL_messages_getSplitRanges)
  SharedDtor();
}

void TL_messages_getSplitRanges::SharedDtor() {
}

void TL_messages_getSplitRanges::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TL_messages_getSplitRanges::descriptor() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TL_messages_getSplitRanges& TL_messages_getSplitRanges::default_instance() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  return *internal_default_instance();
}

TL_messages_getSplitRanges* TL_messages_getSplitRanges::New(::google::protobuf::Arena* arena) const {
  TL_messages_getSplitRanges* n = new TL_messages_getSplitRanges;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TL_messages_getSplitRanges::Swap(TL_messages_getSplitRanges* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TL_messages_getSplitRanges::InternalSwap(TL_messages_getSplitRanges* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata TL_messages_getSplitRanges::GetMetadata() const {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TL_messages_getSplitRanges

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TL_messages_markDialogUnread::kUnreadFieldNumber;
const int TL_messages_markDialogUnread::kPeerFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TL_messages_markDialogUnread::TL_messages_markDialogUnread()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.TL_messages_markDialogUnread)
}
TL_messages_markDialogUnread::TL_messages_markDialogUnread(const TL_messages_markDialogUnread& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_peer()) {
    peer_ = new ::mtproto::InputDialogPeer(*from.peer_);
  } else {
    peer_ = NULL;
  }
  unread_ = from.unread_;
  // @@protoc_insertion_point(copy_constructor:mtproto.TL_messages_markDialogUnread)
}

void TL_messages_markDialogUnread::SharedCtor() {
  ::memset(&peer_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&unread_) -
      reinterpret_cast<char*>(&peer_)) + sizeof(unread_));
  _cached_size_ = 0;
}

TL_messages_markDialogUnread::~TL_messages_markDialogUnread() {
  // @@protoc_insertion_point(destructor:mtproto.TL_messages_markDialogUnread)
  SharedDtor();
}

void TL_messages_markDialogUnread::SharedDtor() {
  if (this != internal_default_instance()) delete peer_;
}

void TL_messages_markDialogUnread::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TL_messages_markDialogUnread::descriptor() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TL_messages_markDialogUnread& TL_messages_markDialogUnread::default_instance() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  return *internal_default_instance();
}

TL_messages_markDialogUnread* TL_messages_markDialogUnread::New(::google::protobuf::Arena* arena) const {
  TL_messages_markDialogUnread* n = new TL_messages_markDialogUnread;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TL_messages_markDialogUnread::Swap(TL_messages_markDialogUnread* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TL_messages_markDialogUnread::InternalSwap(TL_messages_markDialogUnread* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata TL_messages_markDialogUnread::GetMetadata() const {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TL_messages_markDialogUnread

// bool unread = 2;
void TL_messages_markDialogUnread::clear_unread() {
  unread_ = false;
}
bool TL_messages_markDialogUnread::unread() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_markDialogUnread.unread)
  return unread_;
}
void TL_messages_markDialogUnread::set_unread(bool value) {
  
  unread_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_markDialogUnread.unread)
}

// .mtproto.InputDialogPeer peer = 3;
bool TL_messages_markDialogUnread::has_peer() const {
  return this != internal_default_instance() && peer_ != NULL;
}
void TL_messages_markDialogUnread::clear_peer() {
  if (GetArenaNoVirtual() == NULL && peer_ != NULL) delete peer_;
  peer_ = NULL;
}
const ::mtproto::InputDialogPeer& TL_messages_markDialogUnread::peer() const {
  const ::mtproto::InputDialogPeer* p = peer_;
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_markDialogUnread.peer)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::InputDialogPeer*>(
      &::mtproto::_InputDialogPeer_default_instance_);
}
::mtproto::InputDialogPeer* TL_messages_markDialogUnread::mutable_peer() {
  
  if (peer_ == NULL) {
    peer_ = new ::mtproto::InputDialogPeer;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_messages_markDialogUnread.peer)
  return peer_;
}
::mtproto::InputDialogPeer* TL_messages_markDialogUnread::release_peer() {
  // @@protoc_insertion_point(field_release:mtproto.TL_messages_markDialogUnread.peer)
  
  ::mtproto::InputDialogPeer* temp = peer_;
  peer_ = NULL;
  return temp;
}
void TL_messages_markDialogUnread::set_allocated_peer(::mtproto::InputDialogPeer* peer) {
  delete peer_;
  peer_ = peer;
  if (peer) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_messages_markDialogUnread.peer)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TL_messages_getDialogUnreadMarks::TL_messages_getDialogUnreadMarks()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.TL_messages_getDialogUnreadMarks)
}
TL_messages_getDialogUnreadMarks::TL_messages_getDialogUnreadMarks(const TL_messages_getDialogUnreadMarks& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:mtproto.TL_messages_getDialogUnreadMarks)
}

void TL_messages_getDialogUnreadMarks::SharedCtor() {
  _cached_size_ = 0;
}

TL_messages_getDialogUnreadMarks::~TL_messages_getDialogUnreadMarks() {
  // @@protoc_insertion_point(destructor:mtproto.TL_messages_getDialogUnreadMarks)
  SharedDtor();
}

void TL_messages_getDialogUnreadMarks::SharedDtor() {
}

void TL_messages_getDialogUnreadMarks::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TL_messages_getDialogUnreadMarks::descriptor() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TL_messages_getDialogUnreadMarks& TL_messages_getDialogUnreadMarks::default_instance() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  return *internal_default_instance();
}

TL_messages_getDialogUnreadMarks* TL_messages_getDialogUnreadMarks::New(::google::protobuf::Arena* arena) const {
  TL_messages_getDialogUnreadMarks* n = new TL_messages_getDialogUnreadMarks;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TL_messages_getDialogUnreadMarks::Swap(TL_messages_getDialogUnreadMarks* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TL_messages_getDialogUnreadMarks::InternalSwap(TL_messages_getDialogUnreadMarks* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata TL_messages_getDialogUnreadMarks::GetMetadata() const {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TL_messages_getDialogUnreadMarks

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TL_messages_clearAllDrafts::TL_messages_clearAllDrafts()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.TL_messages_clearAllDrafts)
}
TL_messages_clearAllDrafts::TL_messages_clearAllDrafts(const TL_messages_clearAllDrafts& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:mtproto.TL_messages_clearAllDrafts)
}

void TL_messages_clearAllDrafts::SharedCtor() {
  _cached_size_ = 0;
}

TL_messages_clearAllDrafts::~TL_messages_clearAllDrafts() {
  // @@protoc_insertion_point(destructor:mtproto.TL_messages_clearAllDrafts)
  SharedDtor();
}

void TL_messages_clearAllDrafts::SharedDtor() {
}

void TL_messages_clearAllDrafts::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TL_messages_clearAllDrafts::descriptor() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TL_messages_clearAllDrafts& TL_messages_clearAllDrafts::default_instance() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  return *internal_default_instance();
}

TL_messages_clearAllDrafts* TL_messages_clearAllDrafts::New(::google::protobuf::Arena* arena) const {
  TL_messages_clearAllDrafts* n = new TL_messages_clearAllDrafts;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TL_messages_clearAllDrafts::Swap(TL_messages_clearAllDrafts* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TL_messages_clearAllDrafts::InternalSwap(TL_messages_clearAllDrafts* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata TL_messages_clearAllDrafts::GetMetadata() const {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TL_messages_clearAllDrafts

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TL_updates_getState::TL_updates_getState()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.TL_updates_getState)
}
TL_updates_getState::TL_updates_getState(const TL_updates_getState& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:mtproto.TL_updates_getState)
}

void TL_updates_getState::SharedCtor() {
  _cached_size_ = 0;
}

TL_updates_getState::~TL_updates_getState() {
  // @@protoc_insertion_point(destructor:mtproto.TL_updates_getState)
  SharedDtor();
}

void TL_updates_getState::SharedDtor() {
}

void TL_updates_getState::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TL_updates_getState::descriptor() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TL_updates_getState& TL_updates_getState::default_instance() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  return *internal_default_instance();
}

TL_updates_getState* TL_updates_getState::New(::google::protobuf::Arena* arena) const {
  TL_updates_getState* n = new TL_updates_getState;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TL_updates_getState::Swap(TL_updates_getState* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TL_updates_getState::InternalSwap(TL_updates_getState* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata TL_updates_getState::GetMetadata() const {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TL_updates_getState

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TL_updates_getDifference::kPtsFieldNumber;
const int TL_updates_getDifference::kPtsTotalLimitFieldNumber;
const int TL_updates_getDifference::kDateFieldNumber;
const int TL_updates_getDifference::kQtsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TL_updates_getDifference::TL_updates_getDifference()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.TL_updates_getDifference)
}
TL_updates_getDifference::TL_updates_getDifference(const TL_updates_getDifference& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&pts_, &from.pts_,
    static_cast<size_t>(reinterpret_cast<char*>(&qts_) -
    reinterpret_cast<char*>(&pts_)) + sizeof(qts_));
  // @@protoc_insertion_point(copy_constructor:mtproto.TL_updates_getDifference)
}

void TL_updates_getDifference::SharedCtor() {
  ::memset(&pts_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&qts_) -
      reinterpret_cast<char*>(&pts_)) + sizeof(qts_));
  _cached_size_ = 0;
}

TL_updates_getDifference::~TL_updates_getDifference() {
  // @@protoc_insertion_point(destructor:mtproto.TL_updates_getDifference)
  SharedDtor();
}

void TL_updates_getDifference::SharedDtor() {
}

void TL_updates_getDifference::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TL_updates_getDifference::descriptor() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TL_updates_getDifference& TL_updates_getDifference::default_instance() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  return *internal_default_instance();
}

TL_updates_getDifference* TL_updates_getDifference::New(::google::protobuf::Arena* arena) const {
  TL_updates_getDifference* n = new TL_updates_getDifference;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TL_updates_getDifference::Swap(TL_updates_getDifference* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TL_updates_getDifference::InternalSwap(TL_updates_getDifference* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata TL_updates_getDifference::GetMetadata() const {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TL_updates_getDifference

// int32 pts = 2;
void TL_updates_getDifference::clear_pts() {
  pts_ = 0;
}
::google::protobuf::int32 TL_updates_getDifference::pts() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_updates_getDifference.pts)
  return pts_;
}
void TL_updates_getDifference::set_pts(::google::protobuf::int32 value) {
  
  pts_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_updates_getDifference.pts)
}

// int32 pts_total_limit = 3;
void TL_updates_getDifference::clear_pts_total_limit() {
  pts_total_limit_ = 0;
}
::google::protobuf::int32 TL_updates_getDifference::pts_total_limit() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_updates_getDifference.pts_total_limit)
  return pts_total_limit_;
}
void TL_updates_getDifference::set_pts_total_limit(::google::protobuf::int32 value) {
  
  pts_total_limit_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_updates_getDifference.pts_total_limit)
}

// int32 date = 4;
void TL_updates_getDifference::clear_date() {
  date_ = 0;
}
::google::protobuf::int32 TL_updates_getDifference::date() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_updates_getDifference.date)
  return date_;
}
void TL_updates_getDifference::set_date(::google::protobuf::int32 value) {
  
  date_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_updates_getDifference.date)
}

// int32 qts = 5;
void TL_updates_getDifference::clear_qts() {
  qts_ = 0;
}
::google::protobuf::int32 TL_updates_getDifference::qts() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_updates_getDifference.qts)
  return qts_;
}
void TL_updates_getDifference::set_qts(::google::protobuf::int32 value) {
  
  qts_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_updates_getDifference.qts)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TL_updates_getChannelDifference::kForceFieldNumber;
const int TL_updates_getChannelDifference::kChannelFieldNumber;
const int TL_updates_getChannelDifference::kFilterFieldNumber;
const int TL_updates_getChannelDifference::kPtsFieldNumber;
const int TL_updates_getChannelDifference::kLimitFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TL_updates_getChannelDifference::TL_updates_getChannelDifference()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.TL_updates_getChannelDifference)
}
TL_updates_getChannelDifference::TL_updates_getChannelDifference(const TL_updates_getChannelDifference& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_channel()) {
    channel_ = new ::mtproto::InputChannel(*from.channel_);
  } else {
    channel_ = NULL;
  }
  if (from.has_filter()) {
    filter_ = new ::mtproto::ChannelMessagesFilter(*from.filter_);
  } else {
    filter_ = NULL;
  }
  ::memcpy(&force_, &from.force_,
    static_cast<size_t>(reinterpret_cast<char*>(&limit_) -
    reinterpret_cast<char*>(&force_)) + sizeof(limit_));
  // @@protoc_insertion_point(copy_constructor:mtproto.TL_updates_getChannelDifference)
}

void TL_updates_getChannelDifference::SharedCtor() {
  ::memset(&channel_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&limit_) -
      reinterpret_cast<char*>(&channel_)) + sizeof(limit_));
  _cached_size_ = 0;
}

TL_updates_getChannelDifference::~TL_updates_getChannelDifference() {
  // @@protoc_insertion_point(destructor:mtproto.TL_updates_getChannelDifference)
  SharedDtor();
}

void TL_updates_getChannelDifference::SharedDtor() {
  if (this != internal_default_instance()) delete channel_;
  if (this != internal_default_instance()) delete filter_;
}

void TL_updates_getChannelDifference::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TL_updates_getChannelDifference::descriptor() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TL_updates_getChannelDifference& TL_updates_getChannelDifference::default_instance() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  return *internal_default_instance();
}

TL_updates_getChannelDifference* TL_updates_getChannelDifference::New(::google::protobuf::Arena* arena) const {
  TL_updates_getChannelDifference* n = new TL_updates_getChannelDifference;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TL_updates_getChannelDifference::Swap(TL_updates_getChannelDifference* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TL_updates_getChannelDifference::InternalSwap(TL_updates_getChannelDifference* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata TL_updates_getChannelDifference::GetMetadata() const {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TL_updates_getChannelDifference

// bool force = 2;
void TL_updates_getChannelDifference::clear_force() {
  force_ = false;
}
bool TL_updates_getChannelDifference::force() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_updates_getChannelDifference.force)
  return force_;
}
void TL_updates_getChannelDifference::set_force(bool value) {
  
  force_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_updates_getChannelDifference.force)
}

// .mtproto.InputChannel channel = 3;
bool TL_updates_getChannelDifference::has_channel() const {
  return this != internal_default_instance() && channel_ != NULL;
}
void TL_updates_getChannelDifference::clear_channel() {
  if (GetArenaNoVirtual() == NULL && channel_ != NULL) delete channel_;
  channel_ = NULL;
}
const ::mtproto::InputChannel& TL_updates_getChannelDifference::channel() const {
  const ::mtproto::InputChannel* p = channel_;
  // @@protoc_insertion_point(field_get:mtproto.TL_updates_getChannelDifference.channel)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::InputChannel*>(
      &::mtproto::_InputChannel_default_instance_);
}
::mtproto::InputChannel* TL_updates_getChannelDifference::mutable_channel() {
  
  if (channel_ == NULL) {
    channel_ = new ::mtproto::InputChannel;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_updates_getChannelDifference.channel)
  return channel_;
}
::mtproto::InputChannel* TL_updates_getChannelDifference::release_channel() {
  // @@protoc_insertion_point(field_release:mtproto.TL_updates_getChannelDifference.channel)
  
  ::mtproto::InputChannel* temp = channel_;
  channel_ = NULL;
  return temp;
}
void TL_updates_getChannelDifference::set_allocated_channel(::mtproto::InputChannel* channel) {
  delete channel_;
  channel_ = channel;
  if (channel) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_updates_getChannelDifference.channel)
}

// .mtproto.ChannelMessagesFilter filter = 4;
bool TL_updates_getChannelDifference::has_filter() const {
  return this != internal_default_instance() && filter_ != NULL;
}
void TL_updates_getChannelDifference::clear_filter() {
  if (GetArenaNoVirtual() == NULL && filter_ != NULL) delete filter_;
  filter_ = NULL;
}
const ::mtproto::ChannelMessagesFilter& TL_updates_getChannelDifference::filter() const {
  const ::mtproto::ChannelMessagesFilter* p = filter_;
  // @@protoc_insertion_point(field_get:mtproto.TL_updates_getChannelDifference.filter)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::ChannelMessagesFilter*>(
      &::mtproto::_ChannelMessagesFilter_default_instance_);
}
::mtproto::ChannelMessagesFilter* TL_updates_getChannelDifference::mutable_filter() {
  
  if (filter_ == NULL) {
    filter_ = new ::mtproto::ChannelMessagesFilter;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_updates_getChannelDifference.filter)
  return filter_;
}
::mtproto::ChannelMessagesFilter* TL_updates_getChannelDifference::release_filter() {
  // @@protoc_insertion_point(field_release:mtproto.TL_updates_getChannelDifference.filter)
  
  ::mtproto::ChannelMessagesFilter* temp = filter_;
  filter_ = NULL;
  return temp;
}
void TL_updates_getChannelDifference::set_allocated_filter(::mtproto::ChannelMessagesFilter* filter) {
  delete filter_;
  filter_ = filter;
  if (filter) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_updates_getChannelDifference.filter)
}

// int32 pts = 5;
void TL_updates_getChannelDifference::clear_pts() {
  pts_ = 0;
}
::google::protobuf::int32 TL_updates_getChannelDifference::pts() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_updates_getChannelDifference.pts)
  return pts_;
}
void TL_updates_getChannelDifference::set_pts(::google::protobuf::int32 value) {
  
  pts_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_updates_getChannelDifference.pts)
}

// int32 limit = 6;
void TL_updates_getChannelDifference::clear_limit() {
  limit_ = 0;
}
::google::protobuf::int32 TL_updates_getChannelDifference::limit() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_updates_getChannelDifference.limit)
  return limit_;
}
void TL_updates_getChannelDifference::set_limit(::google::protobuf::int32 value) {
  
  limit_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_updates_getChannelDifference.limit)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TL_photos_updateProfilePhoto::kIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TL_photos_updateProfilePhoto::TL_photos_updateProfilePhoto()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.TL_photos_updateProfilePhoto)
}
TL_photos_updateProfilePhoto::TL_photos_updateProfilePhoto(const TL_photos_updateProfilePhoto& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_id()) {
    id_ = new ::mtproto::InputPhoto(*from.id_);
  } else {
    id_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:mtproto.TL_photos_updateProfilePhoto)
}

void TL_photos_updateProfilePhoto::SharedCtor() {
  id_ = NULL;
  _cached_size_ = 0;
}

TL_photos_updateProfilePhoto::~TL_photos_updateProfilePhoto() {
  // @@protoc_insertion_point(destructor:mtproto.TL_photos_updateProfilePhoto)
  SharedDtor();
}

void TL_photos_updateProfilePhoto::SharedDtor() {
  if (this != internal_default_instance()) delete id_;
}

void TL_photos_updateProfilePhoto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TL_photos_updateProfilePhoto::descriptor() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TL_photos_updateProfilePhoto& TL_photos_updateProfilePhoto::default_instance() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  return *internal_default_instance();
}

TL_photos_updateProfilePhoto* TL_photos_updateProfilePhoto::New(::google::protobuf::Arena* arena) const {
  TL_photos_updateProfilePhoto* n = new TL_photos_updateProfilePhoto;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TL_photos_updateProfilePhoto::Swap(TL_photos_updateProfilePhoto* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TL_photos_updateProfilePhoto::InternalSwap(TL_photos_updateProfilePhoto* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata TL_photos_updateProfilePhoto::GetMetadata() const {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TL_photos_updateProfilePhoto

// .mtproto.InputPhoto id = 1;
bool TL_photos_updateProfilePhoto::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
void TL_photos_updateProfilePhoto::clear_id() {
  if (GetArenaNoVirtual() == NULL && id_ != NULL) delete id_;
  id_ = NULL;
}
const ::mtproto::InputPhoto& TL_photos_updateProfilePhoto::id() const {
  const ::mtproto::InputPhoto* p = id_;
  // @@protoc_insertion_point(field_get:mtproto.TL_photos_updateProfilePhoto.id)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::InputPhoto*>(
      &::mtproto::_InputPhoto_default_instance_);
}
::mtproto::InputPhoto* TL_photos_updateProfilePhoto::mutable_id() {
  
  if (id_ == NULL) {
    id_ = new ::mtproto::InputPhoto;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_photos_updateProfilePhoto.id)
  return id_;
}
::mtproto::InputPhoto* TL_photos_updateProfilePhoto::release_id() {
  // @@protoc_insertion_point(field_release:mtproto.TL_photos_updateProfilePhoto.id)
  
  ::mtproto::InputPhoto* temp = id_;
  id_ = NULL;
  return temp;
}
void TL_photos_updateProfilePhoto::set_allocated_id(::mtproto::InputPhoto* id) {
  delete id_;
  id_ = id;
  if (id) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_photos_updateProfilePhoto.id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TL_photos_uploadProfilePhoto::kFileFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TL_photos_uploadProfilePhoto::TL_photos_uploadProfilePhoto()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.TL_photos_uploadProfilePhoto)
}
TL_photos_uploadProfilePhoto::TL_photos_uploadProfilePhoto(const TL_photos_uploadProfilePhoto& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_file()) {
    file_ = new ::mtproto::InputFile(*from.file_);
  } else {
    file_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:mtproto.TL_photos_uploadProfilePhoto)
}

void TL_photos_uploadProfilePhoto::SharedCtor() {
  file_ = NULL;
  _cached_size_ = 0;
}

TL_photos_uploadProfilePhoto::~TL_photos_uploadProfilePhoto() {
  // @@protoc_insertion_point(destructor:mtproto.TL_photos_uploadProfilePhoto)
  SharedDtor();
}

void TL_photos_uploadProfilePhoto::SharedDtor() {
  if (this != internal_default_instance()) delete file_;
}

void TL_photos_uploadProfilePhoto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TL_photos_uploadProfilePhoto::descriptor() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TL_photos_uploadProfilePhoto& TL_photos_uploadProfilePhoto::default_instance() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  return *internal_default_instance();
}

TL_photos_uploadProfilePhoto* TL_photos_uploadProfilePhoto::New(::google::protobuf::Arena* arena) const {
  TL_photos_uploadProfilePhoto* n = new TL_photos_uploadProfilePhoto;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TL_photos_uploadProfilePhoto::Swap(TL_photos_uploadProfilePhoto* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TL_photos_uploadProfilePhoto::InternalSwap(TL_photos_uploadProfilePhoto* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata TL_photos_uploadProfilePhoto::GetMetadata() const {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TL_photos_uploadProfilePhoto

// .mtproto.InputFile file = 1;
bool TL_photos_uploadProfilePhoto::has_file() const {
  return this != internal_default_instance() && file_ != NULL;
}
void TL_photos_uploadProfilePhoto::clear_file() {
  if (GetArenaNoVirtual() == NULL && file_ != NULL) delete file_;
  file_ = NULL;
}
const ::mtproto::InputFile& TL_photos_uploadProfilePhoto::file() const {
  const ::mtproto::InputFile* p = file_;
  // @@protoc_insertion_point(field_get:mtproto.TL_photos_uploadProfilePhoto.file)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::InputFile*>(
      &::mtproto::_InputFile_default_instance_);
}
::mtproto::InputFile* TL_photos_uploadProfilePhoto::mutable_file() {
  
  if (file_ == NULL) {
    file_ = new ::mtproto::InputFile;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_photos_uploadProfilePhoto.file)
  return file_;
}
::mtproto::InputFile* TL_photos_uploadProfilePhoto::release_file() {
  // @@protoc_insertion_point(field_release:mtproto.TL_photos_uploadProfilePhoto.file)
  
  ::mtproto::InputFile* temp = file_;
  file_ = NULL;
  return temp;
}
void TL_photos_uploadProfilePhoto::set_allocated_file(::mtproto::InputFile* file) {
  delete file_;
  file_ = file;
  if (file) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_photos_uploadProfilePhoto.file)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TL_photos_deletePhotos::kIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TL_photos_deletePhotos::TL_photos_deletePhotos()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.TL_photos_deletePhotos)
}
TL_photos_deletePhotos::TL_photos_deletePhotos(const TL_photos_deletePhotos& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      id_(from.id_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:mtproto.TL_photos_deletePhotos)
}

void TL_photos_deletePhotos::SharedCtor() {
  _cached_size_ = 0;
}

TL_photos_deletePhotos::~TL_photos_deletePhotos() {
  // @@protoc_insertion_point(destructor:mtproto.TL_photos_deletePhotos)
  SharedDtor();
}

void TL_photos_deletePhotos::SharedDtor() {
}

void TL_photos_deletePhotos::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TL_photos_deletePhotos::descriptor() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TL_photos_deletePhotos& TL_photos_deletePhotos::default_instance() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  return *internal_default_instance();
}

TL_photos_deletePhotos* TL_photos_deletePhotos::New(::google::protobuf::Arena* arena) const {
  TL_photos_deletePhotos* n = new TL_photos_deletePhotos;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TL_photos_deletePhotos::Swap(TL_photos_deletePhotos* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TL_photos_deletePhotos::InternalSwap(TL_photos_deletePhotos* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata TL_photos_deletePhotos::GetMetadata() const {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TL_photos_deletePhotos

// repeated .mtproto.InputPhoto id = 1;
int TL_photos_deletePhotos::id_size() const {
  return id_.size();
}
void TL_photos_deletePhotos::clear_id() {
  id_.Clear();
}
const ::mtproto::InputPhoto& TL_photos_deletePhotos::id(int index) const {
  // @@protoc_insertion_point(field_get:mtproto.TL_photos_deletePhotos.id)
  return id_.Get(index);
}
::mtproto::InputPhoto* TL_photos_deletePhotos::mutable_id(int index) {
  // @@protoc_insertion_point(field_mutable:mtproto.TL_photos_deletePhotos.id)
  return id_.Mutable(index);
}
::mtproto::InputPhoto* TL_photos_deletePhotos::add_id() {
  // @@protoc_insertion_point(field_add:mtproto.TL_photos_deletePhotos.id)
  return id_.Add();
}
::google::protobuf::RepeatedPtrField< ::mtproto::InputPhoto >*
TL_photos_deletePhotos::mutable_id() {
  // @@protoc_insertion_point(field_mutable_list:mtproto.TL_photos_deletePhotos.id)
  return &id_;
}
const ::google::protobuf::RepeatedPtrField< ::mtproto::InputPhoto >&
TL_photos_deletePhotos::id() const {
  // @@protoc_insertion_point(field_list:mtproto.TL_photos_deletePhotos.id)
  return id_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TL_photos_getUserPhotos::kUserIdFieldNumber;
const int TL_photos_getUserPhotos::kOffsetFieldNumber;
const int TL_photos_getUserPhotos::kMaxIdFieldNumber;
const int TL_photos_getUserPhotos::kLimitFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TL_photos_getUserPhotos::TL_photos_getUserPhotos()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.TL_photos_getUserPhotos)
}
TL_photos_getUserPhotos::TL_photos_getUserPhotos(const TL_photos_getUserPhotos& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_user_id()) {
    user_id_ = new ::mtproto::InputUser(*from.user_id_);
  } else {
    user_id_ = NULL;
  }
  ::memcpy(&max_id_, &from.max_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&limit_) -
    reinterpret_cast<char*>(&max_id_)) + sizeof(limit_));
  // @@protoc_insertion_point(copy_constructor:mtproto.TL_photos_getUserPhotos)
}

void TL_photos_getUserPhotos::SharedCtor() {
  ::memset(&user_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&limit_) -
      reinterpret_cast<char*>(&user_id_)) + sizeof(limit_));
  _cached_size_ = 0;
}

TL_photos_getUserPhotos::~TL_photos_getUserPhotos() {
  // @@protoc_insertion_point(destructor:mtproto.TL_photos_getUserPhotos)
  SharedDtor();
}

void TL_photos_getUserPhotos::SharedDtor() {
  if (this != internal_default_instance()) delete user_id_;
}

void TL_photos_getUserPhotos::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TL_photos_getUserPhotos::descriptor() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TL_photos_getUserPhotos& TL_photos_getUserPhotos::default_instance() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  return *internal_default_instance();
}

TL_photos_getUserPhotos* TL_photos_getUserPhotos::New(::google::protobuf::Arena* arena) const {
  TL_photos_getUserPhotos* n = new TL_photos_getUserPhotos;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TL_photos_getUserPhotos::Swap(TL_photos_getUserPhotos* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TL_photos_getUserPhotos::InternalSwap(TL_photos_getUserPhotos* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata TL_photos_getUserPhotos::GetMetadata() const {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TL_photos_getUserPhotos

// .mtproto.InputUser user_id = 1;
bool TL_photos_getUserPhotos::has_user_id() const {
  return this != internal_default_instance() && user_id_ != NULL;
}
void TL_photos_getUserPhotos::clear_user_id() {
  if (GetArenaNoVirtual() == NULL && user_id_ != NULL) delete user_id_;
  user_id_ = NULL;
}
const ::mtproto::InputUser& TL_photos_getUserPhotos::user_id() const {
  const ::mtproto::InputUser* p = user_id_;
  // @@protoc_insertion_point(field_get:mtproto.TL_photos_getUserPhotos.user_id)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::InputUser*>(
      &::mtproto::_InputUser_default_instance_);
}
::mtproto::InputUser* TL_photos_getUserPhotos::mutable_user_id() {
  
  if (user_id_ == NULL) {
    user_id_ = new ::mtproto::InputUser;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_photos_getUserPhotos.user_id)
  return user_id_;
}
::mtproto::InputUser* TL_photos_getUserPhotos::release_user_id() {
  // @@protoc_insertion_point(field_release:mtproto.TL_photos_getUserPhotos.user_id)
  
  ::mtproto::InputUser* temp = user_id_;
  user_id_ = NULL;
  return temp;
}
void TL_photos_getUserPhotos::set_allocated_user_id(::mtproto::InputUser* user_id) {
  delete user_id_;
  user_id_ = user_id;
  if (user_id) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_photos_getUserPhotos.user_id)
}

// int32 offset = 2;
void TL_photos_getUserPhotos::clear_offset() {
  offset_ = 0;
}
::google::protobuf::int32 TL_photos_getUserPhotos::offset() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_photos_getUserPhotos.offset)
  return offset_;
}
void TL_photos_getUserPhotos::set_offset(::google::protobuf::int32 value) {
  
  offset_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_photos_getUserPhotos.offset)
}

// int64 max_id = 3;
void TL_photos_getUserPhotos::clear_max_id() {
  max_id_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 TL_photos_getUserPhotos::max_id() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_photos_getUserPhotos.max_id)
  return max_id_;
}
void TL_photos_getUserPhotos::set_max_id(::google::protobuf::int64 value) {
  
  max_id_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_photos_getUserPhotos.max_id)
}

// int32 limit = 4;
void TL_photos_getUserPhotos::clear_limit() {
  limit_ = 0;
}
::google::protobuf::int32 TL_photos_getUserPhotos::limit() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_photos_getUserPhotos.limit)
  return limit_;
}
void TL_photos_getUserPhotos::set_limit(::google::protobuf::int32 value) {
  
  limit_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_photos_getUserPhotos.limit)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TL_upload_saveFilePart::kFileIdFieldNumber;
const int TL_upload_saveFilePart::kFilePartFieldNumber;
const int TL_upload_saveFilePart::kBytesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TL_upload_saveFilePart::TL_upload_saveFilePart()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.TL_upload_saveFilePart)
}
TL_upload_saveFilePart::TL_upload_saveFilePart(const TL_upload_saveFilePart& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  bytes_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.bytes().size() > 0) {
    bytes_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.bytes_);
  }
  ::memcpy(&file_id_, &from.file_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&file_part_) -
    reinterpret_cast<char*>(&file_id_)) + sizeof(file_part_));
  // @@protoc_insertion_point(copy_constructor:mtproto.TL_upload_saveFilePart)
}

void TL_upload_saveFilePart::SharedCtor() {
  bytes_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&file_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&file_part_) -
      reinterpret_cast<char*>(&file_id_)) + sizeof(file_part_));
  _cached_size_ = 0;
}

TL_upload_saveFilePart::~TL_upload_saveFilePart() {
  // @@protoc_insertion_point(destructor:mtproto.TL_upload_saveFilePart)
  SharedDtor();
}

void TL_upload_saveFilePart::SharedDtor() {
  bytes_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void TL_upload_saveFilePart::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TL_upload_saveFilePart::descriptor() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TL_upload_saveFilePart& TL_upload_saveFilePart::default_instance() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  return *internal_default_instance();
}

TL_upload_saveFilePart* TL_upload_saveFilePart::New(::google::protobuf::Arena* arena) const {
  TL_upload_saveFilePart* n = new TL_upload_saveFilePart;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TL_upload_saveFilePart::Swap(TL_upload_saveFilePart* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TL_upload_saveFilePart::InternalSwap(TL_upload_saveFilePart* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata TL_upload_saveFilePart::GetMetadata() const {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TL_upload_saveFilePart

// int64 file_id = 1;
void TL_upload_saveFilePart::clear_file_id() {
  file_id_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 TL_upload_saveFilePart::file_id() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_upload_saveFilePart.file_id)
  return file_id_;
}
void TL_upload_saveFilePart::set_file_id(::google::protobuf::int64 value) {
  
  file_id_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_upload_saveFilePart.file_id)
}

// int32 file_part = 2;
void TL_upload_saveFilePart::clear_file_part() {
  file_part_ = 0;
}
::google::protobuf::int32 TL_upload_saveFilePart::file_part() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_upload_saveFilePart.file_part)
  return file_part_;
}
void TL_upload_saveFilePart::set_file_part(::google::protobuf::int32 value) {
  
  file_part_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_upload_saveFilePart.file_part)
}

// bytes bytes = 3;
void TL_upload_saveFilePart::clear_bytes() {
  bytes_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& TL_upload_saveFilePart::bytes() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_upload_saveFilePart.bytes)
  return bytes_.GetNoArena();
}
void TL_upload_saveFilePart::set_bytes(const ::std::string& value) {
  
  bytes_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtproto.TL_upload_saveFilePart.bytes)
}
#if LANG_CXX11
void TL_upload_saveFilePart::set_bytes(::std::string&& value) {
  
  bytes_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mtproto.TL_upload_saveFilePart.bytes)
}
#endif
void TL_upload_saveFilePart::set_bytes(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  bytes_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtproto.TL_upload_saveFilePart.bytes)
}
void TL_upload_saveFilePart::set_bytes(const void* value, size_t size) {
  
  bytes_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtproto.TL_upload_saveFilePart.bytes)
}
::std::string* TL_upload_saveFilePart::mutable_bytes() {
  
  // @@protoc_insertion_point(field_mutable:mtproto.TL_upload_saveFilePart.bytes)
  return bytes_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* TL_upload_saveFilePart::release_bytes() {
  // @@protoc_insertion_point(field_release:mtproto.TL_upload_saveFilePart.bytes)
  
  return bytes_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TL_upload_saveFilePart::set_allocated_bytes(::std::string* bytes) {
  if (bytes != NULL) {
    
  } else {
    
  }
  bytes_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), bytes);
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_upload_saveFilePart.bytes)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TL_upload_getFile::kLocationFieldNumber;
const int TL_upload_getFile::kOffsetFieldNumber;
const int TL_upload_getFile::kLimitFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TL_upload_getFile::TL_upload_getFile()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.TL_upload_getFile)
}
TL_upload_getFile::TL_upload_getFile(const TL_upload_getFile& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_location()) {
    location_ = new ::mtproto::InputFileLocation(*from.location_);
  } else {
    location_ = NULL;
  }
  ::memcpy(&offset_, &from.offset_,
    static_cast<size_t>(reinterpret_cast<char*>(&limit_) -
    reinterpret_cast<char*>(&offset_)) + sizeof(limit_));
  // @@protoc_insertion_point(copy_constructor:mtproto.TL_upload_getFile)
}

void TL_upload_getFile::SharedCtor() {
  ::memset(&location_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&limit_) -
      reinterpret_cast<char*>(&location_)) + sizeof(limit_));
  _cached_size_ = 0;
}

TL_upload_getFile::~TL_upload_getFile() {
  // @@protoc_insertion_point(destructor:mtproto.TL_upload_getFile)
  SharedDtor();
}

void TL_upload_getFile::SharedDtor() {
  if (this != internal_default_instance()) delete location_;
}

void TL_upload_getFile::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TL_upload_getFile::descriptor() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TL_upload_getFile& TL_upload_getFile::default_instance() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  return *internal_default_instance();
}

TL_upload_getFile* TL_upload_getFile::New(::google::protobuf::Arena* arena) const {
  TL_upload_getFile* n = new TL_upload_getFile;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TL_upload_getFile::Swap(TL_upload_getFile* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TL_upload_getFile::InternalSwap(TL_upload_getFile* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata TL_upload_getFile::GetMetadata() const {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TL_upload_getFile

// .mtproto.InputFileLocation location = 1;
bool TL_upload_getFile::has_location() const {
  return this != internal_default_instance() && location_ != NULL;
}
void TL_upload_getFile::clear_location() {
  if (GetArenaNoVirtual() == NULL && location_ != NULL) delete location_;
  location_ = NULL;
}
const ::mtproto::InputFileLocation& TL_upload_getFile::location() const {
  const ::mtproto::InputFileLocation* p = location_;
  // @@protoc_insertion_point(field_get:mtproto.TL_upload_getFile.location)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::InputFileLocation*>(
      &::mtproto::_InputFileLocation_default_instance_);
}
::mtproto::InputFileLocation* TL_upload_getFile::mutable_location() {
  
  if (location_ == NULL) {
    location_ = new ::mtproto::InputFileLocation;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_upload_getFile.location)
  return location_;
}
::mtproto::InputFileLocation* TL_upload_getFile::release_location() {
  // @@protoc_insertion_point(field_release:mtproto.TL_upload_getFile.location)
  
  ::mtproto::InputFileLocation* temp = location_;
  location_ = NULL;
  return temp;
}
void TL_upload_getFile::set_allocated_location(::mtproto::InputFileLocation* location) {
  delete location_;
  location_ = location;
  if (location) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_upload_getFile.location)
}

// int32 offset = 2;
void TL_upload_getFile::clear_offset() {
  offset_ = 0;
}
::google::protobuf::int32 TL_upload_getFile::offset() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_upload_getFile.offset)
  return offset_;
}
void TL_upload_getFile::set_offset(::google::protobuf::int32 value) {
  
  offset_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_upload_getFile.offset)
}

// int32 limit = 3;
void TL_upload_getFile::clear_limit() {
  limit_ = 0;
}
::google::protobuf::int32 TL_upload_getFile::limit() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_upload_getFile.limit)
  return limit_;
}
void TL_upload_getFile::set_limit(::google::protobuf::int32 value) {
  
  limit_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_upload_getFile.limit)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TL_upload_saveBigFilePart::kFileIdFieldNumber;
const int TL_upload_saveBigFilePart::kFilePartFieldNumber;
const int TL_upload_saveBigFilePart::kFileTotalPartsFieldNumber;
const int TL_upload_saveBigFilePart::kBytesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TL_upload_saveBigFilePart::TL_upload_saveBigFilePart()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.TL_upload_saveBigFilePart)
}
TL_upload_saveBigFilePart::TL_upload_saveBigFilePart(const TL_upload_saveBigFilePart& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  bytes_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.bytes().size() > 0) {
    bytes_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.bytes_);
  }
  ::memcpy(&file_id_, &from.file_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&file_total_parts_) -
    reinterpret_cast<char*>(&file_id_)) + sizeof(file_total_parts_));
  // @@protoc_insertion_point(copy_constructor:mtproto.TL_upload_saveBigFilePart)
}

void TL_upload_saveBigFilePart::SharedCtor() {
  bytes_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&file_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&file_total_parts_) -
      reinterpret_cast<char*>(&file_id_)) + sizeof(file_total_parts_));
  _cached_size_ = 0;
}

TL_upload_saveBigFilePart::~TL_upload_saveBigFilePart() {
  // @@protoc_insertion_point(destructor:mtproto.TL_upload_saveBigFilePart)
  SharedDtor();
}

void TL_upload_saveBigFilePart::SharedDtor() {
  bytes_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void TL_upload_saveBigFilePart::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TL_upload_saveBigFilePart::descriptor() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TL_upload_saveBigFilePart& TL_upload_saveBigFilePart::default_instance() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  return *internal_default_instance();
}

TL_upload_saveBigFilePart* TL_upload_saveBigFilePart::New(::google::protobuf::Arena* arena) const {
  TL_upload_saveBigFilePart* n = new TL_upload_saveBigFilePart;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TL_upload_saveBigFilePart::Swap(TL_upload_saveBigFilePart* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TL_upload_saveBigFilePart::InternalSwap(TL_upload_saveBigFilePart* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata TL_upload_saveBigFilePart::GetMetadata() const {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TL_upload_saveBigFilePart

// int64 file_id = 1;
void TL_upload_saveBigFilePart::clear_file_id() {
  file_id_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 TL_upload_saveBigFilePart::file_id() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_upload_saveBigFilePart.file_id)
  return file_id_;
}
void TL_upload_saveBigFilePart::set_file_id(::google::protobuf::int64 value) {
  
  file_id_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_upload_saveBigFilePart.file_id)
}

// int32 file_part = 2;
void TL_upload_saveBigFilePart::clear_file_part() {
  file_part_ = 0;
}
::google::protobuf::int32 TL_upload_saveBigFilePart::file_part() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_upload_saveBigFilePart.file_part)
  return file_part_;
}
void TL_upload_saveBigFilePart::set_file_part(::google::protobuf::int32 value) {
  
  file_part_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_upload_saveBigFilePart.file_part)
}

// int32 file_total_parts = 3;
void TL_upload_saveBigFilePart::clear_file_total_parts() {
  file_total_parts_ = 0;
}
::google::protobuf::int32 TL_upload_saveBigFilePart::file_total_parts() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_upload_saveBigFilePart.file_total_parts)
  return file_total_parts_;
}
void TL_upload_saveBigFilePart::set_file_total_parts(::google::protobuf::int32 value) {
  
  file_total_parts_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_upload_saveBigFilePart.file_total_parts)
}

// bytes bytes = 4;
void TL_upload_saveBigFilePart::clear_bytes() {
  bytes_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& TL_upload_saveBigFilePart::bytes() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_upload_saveBigFilePart.bytes)
  return bytes_.GetNoArena();
}
void TL_upload_saveBigFilePart::set_bytes(const ::std::string& value) {
  
  bytes_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtproto.TL_upload_saveBigFilePart.bytes)
}
#if LANG_CXX11
void TL_upload_saveBigFilePart::set_bytes(::std::string&& value) {
  
  bytes_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mtproto.TL_upload_saveBigFilePart.bytes)
}
#endif
void TL_upload_saveBigFilePart::set_bytes(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  bytes_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtproto.TL_upload_saveBigFilePart.bytes)
}
void TL_upload_saveBigFilePart::set_bytes(const void* value, size_t size) {
  
  bytes_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtproto.TL_upload_saveBigFilePart.bytes)
}
::std::string* TL_upload_saveBigFilePart::mutable_bytes() {
  
  // @@protoc_insertion_point(field_mutable:mtproto.TL_upload_saveBigFilePart.bytes)
  return bytes_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* TL_upload_saveBigFilePart::release_bytes() {
  // @@protoc_insertion_point(field_release:mtproto.TL_upload_saveBigFilePart.bytes)
  
  return bytes_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TL_upload_saveBigFilePart::set_allocated_bytes(::std::string* bytes) {
  if (bytes != NULL) {
    
  } else {
    
  }
  bytes_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), bytes);
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_upload_saveBigFilePart.bytes)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TL_upload_getWebFile::kLocationFieldNumber;
const int TL_upload_getWebFile::kOffsetFieldNumber;
const int TL_upload_getWebFile::kLimitFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TL_upload_getWebFile::TL_upload_getWebFile()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.TL_upload_getWebFile)
}
TL_upload_getWebFile::TL_upload_getWebFile(const TL_upload_getWebFile& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_location()) {
    location_ = new ::mtproto::InputWebFileLocation(*from.location_);
  } else {
    location_ = NULL;
  }
  ::memcpy(&offset_, &from.offset_,
    static_cast<size_t>(reinterpret_cast<char*>(&limit_) -
    reinterpret_cast<char*>(&offset_)) + sizeof(limit_));
  // @@protoc_insertion_point(copy_constructor:mtproto.TL_upload_getWebFile)
}

void TL_upload_getWebFile::SharedCtor() {
  ::memset(&location_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&limit_) -
      reinterpret_cast<char*>(&location_)) + sizeof(limit_));
  _cached_size_ = 0;
}

TL_upload_getWebFile::~TL_upload_getWebFile() {
  // @@protoc_insertion_point(destructor:mtproto.TL_upload_getWebFile)
  SharedDtor();
}

void TL_upload_getWebFile::SharedDtor() {
  if (this != internal_default_instance()) delete location_;
}

void TL_upload_getWebFile::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TL_upload_getWebFile::descriptor() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TL_upload_getWebFile& TL_upload_getWebFile::default_instance() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  return *internal_default_instance();
}

TL_upload_getWebFile* TL_upload_getWebFile::New(::google::protobuf::Arena* arena) const {
  TL_upload_getWebFile* n = new TL_upload_getWebFile;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TL_upload_getWebFile::Swap(TL_upload_getWebFile* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TL_upload_getWebFile::InternalSwap(TL_upload_getWebFile* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata TL_upload_getWebFile::GetMetadata() const {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TL_upload_getWebFile

// .mtproto.InputWebFileLocation location = 1;
bool TL_upload_getWebFile::has_location() const {
  return this != internal_default_instance() && location_ != NULL;
}
void TL_upload_getWebFile::clear_location() {
  if (GetArenaNoVirtual() == NULL && location_ != NULL) delete location_;
  location_ = NULL;
}
const ::mtproto::InputWebFileLocation& TL_upload_getWebFile::location() const {
  const ::mtproto::InputWebFileLocation* p = location_;
  // @@protoc_insertion_point(field_get:mtproto.TL_upload_getWebFile.location)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::InputWebFileLocation*>(
      &::mtproto::_InputWebFileLocation_default_instance_);
}
::mtproto::InputWebFileLocation* TL_upload_getWebFile::mutable_location() {
  
  if (location_ == NULL) {
    location_ = new ::mtproto::InputWebFileLocation;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_upload_getWebFile.location)
  return location_;
}
::mtproto::InputWebFileLocation* TL_upload_getWebFile::release_location() {
  // @@protoc_insertion_point(field_release:mtproto.TL_upload_getWebFile.location)
  
  ::mtproto::InputWebFileLocation* temp = location_;
  location_ = NULL;
  return temp;
}
void TL_upload_getWebFile::set_allocated_location(::mtproto::InputWebFileLocation* location) {
  delete location_;
  location_ = location;
  if (location) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_upload_getWebFile.location)
}

// int32 offset = 2;
void TL_upload_getWebFile::clear_offset() {
  offset_ = 0;
}
::google::protobuf::int32 TL_upload_getWebFile::offset() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_upload_getWebFile.offset)
  return offset_;
}
void TL_upload_getWebFile::set_offset(::google::protobuf::int32 value) {
  
  offset_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_upload_getWebFile.offset)
}

// int32 limit = 3;
void TL_upload_getWebFile::clear_limit() {
  limit_ = 0;
}
::google::protobuf::int32 TL_upload_getWebFile::limit() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_upload_getWebFile.limit)
  return limit_;
}
void TL_upload_getWebFile::set_limit(::google::protobuf::int32 value) {
  
  limit_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_upload_getWebFile.limit)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TL_upload_getCdnFile::kFileTokenFieldNumber;
const int TL_upload_getCdnFile::kOffsetFieldNumber;
const int TL_upload_getCdnFile::kLimitFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TL_upload_getCdnFile::TL_upload_getCdnFile()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.TL_upload_getCdnFile)
}
TL_upload_getCdnFile::TL_upload_getCdnFile(const TL_upload_getCdnFile& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  file_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.file_token().size() > 0) {
    file_token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.file_token_);
  }
  ::memcpy(&offset_, &from.offset_,
    static_cast<size_t>(reinterpret_cast<char*>(&limit_) -
    reinterpret_cast<char*>(&offset_)) + sizeof(limit_));
  // @@protoc_insertion_point(copy_constructor:mtproto.TL_upload_getCdnFile)
}

void TL_upload_getCdnFile::SharedCtor() {
  file_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&offset_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&limit_) -
      reinterpret_cast<char*>(&offset_)) + sizeof(limit_));
  _cached_size_ = 0;
}

TL_upload_getCdnFile::~TL_upload_getCdnFile() {
  // @@protoc_insertion_point(destructor:mtproto.TL_upload_getCdnFile)
  SharedDtor();
}

void TL_upload_getCdnFile::SharedDtor() {
  file_token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void TL_upload_getCdnFile::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TL_upload_getCdnFile::descriptor() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TL_upload_getCdnFile& TL_upload_getCdnFile::default_instance() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  return *internal_default_instance();
}

TL_upload_getCdnFile* TL_upload_getCdnFile::New(::google::protobuf::Arena* arena) const {
  TL_upload_getCdnFile* n = new TL_upload_getCdnFile;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TL_upload_getCdnFile::Swap(TL_upload_getCdnFile* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TL_upload_getCdnFile::InternalSwap(TL_upload_getCdnFile* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata TL_upload_getCdnFile::GetMetadata() const {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TL_upload_getCdnFile

// bytes file_token = 1;
void TL_upload_getCdnFile::clear_file_token() {
  file_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& TL_upload_getCdnFile::file_token() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_upload_getCdnFile.file_token)
  return file_token_.GetNoArena();
}
void TL_upload_getCdnFile::set_file_token(const ::std::string& value) {
  
  file_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtproto.TL_upload_getCdnFile.file_token)
}
#if LANG_CXX11
void TL_upload_getCdnFile::set_file_token(::std::string&& value) {
  
  file_token_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mtproto.TL_upload_getCdnFile.file_token)
}
#endif
void TL_upload_getCdnFile::set_file_token(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  file_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtproto.TL_upload_getCdnFile.file_token)
}
void TL_upload_getCdnFile::set_file_token(const void* value, size_t size) {
  
  file_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtproto.TL_upload_getCdnFile.file_token)
}
::std::string* TL_upload_getCdnFile::mutable_file_token() {
  
  // @@protoc_insertion_point(field_mutable:mtproto.TL_upload_getCdnFile.file_token)
  return file_token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* TL_upload_getCdnFile::release_file_token() {
  // @@protoc_insertion_point(field_release:mtproto.TL_upload_getCdnFile.file_token)
  
  return file_token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TL_upload_getCdnFile::set_allocated_file_token(::std::string* file_token) {
  if (file_token != NULL) {
    
  } else {
    
  }
  file_token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), file_token);
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_upload_getCdnFile.file_token)
}

// int32 offset = 2;
void TL_upload_getCdnFile::clear_offset() {
  offset_ = 0;
}
::google::protobuf::int32 TL_upload_getCdnFile::offset() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_upload_getCdnFile.offset)
  return offset_;
}
void TL_upload_getCdnFile::set_offset(::google::protobuf::int32 value) {
  
  offset_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_upload_getCdnFile.offset)
}

// int32 limit = 3;
void TL_upload_getCdnFile::clear_limit() {
  limit_ = 0;
}
::google::protobuf::int32 TL_upload_getCdnFile::limit() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_upload_getCdnFile.limit)
  return limit_;
}
void TL_upload_getCdnFile::set_limit(::google::protobuf::int32 value) {
  
  limit_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_upload_getCdnFile.limit)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TL_upload_reuploadCdnFile::kFileTokenFieldNumber;
const int TL_upload_reuploadCdnFile::kRequestTokenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TL_upload_reuploadCdnFile::TL_upload_reuploadCdnFile()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.TL_upload_reuploadCdnFile)
}
TL_upload_reuploadCdnFile::TL_upload_reuploadCdnFile(const TL_upload_reuploadCdnFile& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  file_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.file_token().size() > 0) {
    file_token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.file_token_);
  }
  request_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.request_token().size() > 0) {
    request_token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.request_token_);
  }
  // @@protoc_insertion_point(copy_constructor:mtproto.TL_upload_reuploadCdnFile)
}

void TL_upload_reuploadCdnFile::SharedCtor() {
  file_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  request_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

TL_upload_reuploadCdnFile::~TL_upload_reuploadCdnFile() {
  // @@protoc_insertion_point(destructor:mtproto.TL_upload_reuploadCdnFile)
  SharedDtor();
}

void TL_upload_reuploadCdnFile::SharedDtor() {
  file_token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  request_token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void TL_upload_reuploadCdnFile::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TL_upload_reuploadCdnFile::descriptor() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TL_upload_reuploadCdnFile& TL_upload_reuploadCdnFile::default_instance() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  return *internal_default_instance();
}

TL_upload_reuploadCdnFile* TL_upload_reuploadCdnFile::New(::google::protobuf::Arena* arena) const {
  TL_upload_reuploadCdnFile* n = new TL_upload_reuploadCdnFile;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TL_upload_reuploadCdnFile::Swap(TL_upload_reuploadCdnFile* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TL_upload_reuploadCdnFile::InternalSwap(TL_upload_reuploadCdnFile* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata TL_upload_reuploadCdnFile::GetMetadata() const {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TL_upload_reuploadCdnFile

// bytes file_token = 1;
void TL_upload_reuploadCdnFile::clear_file_token() {
  file_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& TL_upload_reuploadCdnFile::file_token() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_upload_reuploadCdnFile.file_token)
  return file_token_.GetNoArena();
}
void TL_upload_reuploadCdnFile::set_file_token(const ::std::string& value) {
  
  file_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtproto.TL_upload_reuploadCdnFile.file_token)
}
#if LANG_CXX11
void TL_upload_reuploadCdnFile::set_file_token(::std::string&& value) {
  
  file_token_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mtproto.TL_upload_reuploadCdnFile.file_token)
}
#endif
void TL_upload_reuploadCdnFile::set_file_token(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  file_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtproto.TL_upload_reuploadCdnFile.file_token)
}
void TL_upload_reuploadCdnFile::set_file_token(const void* value, size_t size) {
  
  file_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtproto.TL_upload_reuploadCdnFile.file_token)
}
::std::string* TL_upload_reuploadCdnFile::mutable_file_token() {
  
  // @@protoc_insertion_point(field_mutable:mtproto.TL_upload_reuploadCdnFile.file_token)
  return file_token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* TL_upload_reuploadCdnFile::release_file_token() {
  // @@protoc_insertion_point(field_release:mtproto.TL_upload_reuploadCdnFile.file_token)
  
  return file_token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TL_upload_reuploadCdnFile::set_allocated_file_token(::std::string* file_token) {
  if (file_token != NULL) {
    
  } else {
    
  }
  file_token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), file_token);
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_upload_reuploadCdnFile.file_token)
}

// bytes request_token = 2;
void TL_upload_reuploadCdnFile::clear_request_token() {
  request_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& TL_upload_reuploadCdnFile::request_token() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_upload_reuploadCdnFile.request_token)
  return request_token_.GetNoArena();
}
void TL_upload_reuploadCdnFile::set_request_token(const ::std::string& value) {
  
  request_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtproto.TL_upload_reuploadCdnFile.request_token)
}
#if LANG_CXX11
void TL_upload_reuploadCdnFile::set_request_token(::std::string&& value) {
  
  request_token_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mtproto.TL_upload_reuploadCdnFile.request_token)
}
#endif
void TL_upload_reuploadCdnFile::set_request_token(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  request_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtproto.TL_upload_reuploadCdnFile.request_token)
}
void TL_upload_reuploadCdnFile::set_request_token(const void* value, size_t size) {
  
  request_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtproto.TL_upload_reuploadCdnFile.request_token)
}
::std::string* TL_upload_reuploadCdnFile::mutable_request_token() {
  
  // @@protoc_insertion_point(field_mutable:mtproto.TL_upload_reuploadCdnFile.request_token)
  return request_token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* TL_upload_reuploadCdnFile::release_request_token() {
  // @@protoc_insertion_point(field_release:mtproto.TL_upload_reuploadCdnFile.request_token)
  
  return request_token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TL_upload_reuploadCdnFile::set_allocated_request_token(::std::string* request_token) {
  if (request_token != NULL) {
    
  } else {
    
  }
  request_token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), request_token);
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_upload_reuploadCdnFile.request_token)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TL_upload_getCdnFileHashes::kFileTokenFieldNumber;
const int TL_upload_getCdnFileHashes::kOffsetFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TL_upload_getCdnFileHashes::TL_upload_getCdnFileHashes()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.TL_upload_getCdnFileHashes)
}
TL_upload_getCdnFileHashes::TL_upload_getCdnFileHashes(const TL_upload_getCdnFileHashes& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  file_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.file_token().size() > 0) {
    file_token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.file_token_);
  }
  offset_ = from.offset_;
  // @@protoc_insertion_point(copy_constructor:mtproto.TL_upload_getCdnFileHashes)
}

void TL_upload_getCdnFileHashes::SharedCtor() {
  file_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  offset_ = 0;
  _cached_size_ = 0;
}

TL_upload_getCdnFileHashes::~TL_upload_getCdnFileHashes() {
  // @@protoc_insertion_point(destructor:mtproto.TL_upload_getCdnFileHashes)
  SharedDtor();
}

void TL_upload_getCdnFileHashes::SharedDtor() {
  file_token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void TL_upload_getCdnFileHashes::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TL_upload_getCdnFileHashes::descriptor() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TL_upload_getCdnFileHashes& TL_upload_getCdnFileHashes::default_instance() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  return *internal_default_instance();
}

TL_upload_getCdnFileHashes* TL_upload_getCdnFileHashes::New(::google::protobuf::Arena* arena) const {
  TL_upload_getCdnFileHashes* n = new TL_upload_getCdnFileHashes;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TL_upload_getCdnFileHashes::Swap(TL_upload_getCdnFileHashes* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TL_upload_getCdnFileHashes::InternalSwap(TL_upload_getCdnFileHashes* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata TL_upload_getCdnFileHashes::GetMetadata() const {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TL_upload_getCdnFileHashes

// bytes file_token = 1;
void TL_upload_getCdnFileHashes::clear_file_token() {
  file_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& TL_upload_getCdnFileHashes::file_token() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_upload_getCdnFileHashes.file_token)
  return file_token_.GetNoArena();
}
void TL_upload_getCdnFileHashes::set_file_token(const ::std::string& value) {
  
  file_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtproto.TL_upload_getCdnFileHashes.file_token)
}
#if LANG_CXX11
void TL_upload_getCdnFileHashes::set_file_token(::std::string&& value) {
  
  file_token_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mtproto.TL_upload_getCdnFileHashes.file_token)
}
#endif
void TL_upload_getCdnFileHashes::set_file_token(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  file_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtproto.TL_upload_getCdnFileHashes.file_token)
}
void TL_upload_getCdnFileHashes::set_file_token(const void* value, size_t size) {
  
  file_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtproto.TL_upload_getCdnFileHashes.file_token)
}
::std::string* TL_upload_getCdnFileHashes::mutable_file_token() {
  
  // @@protoc_insertion_point(field_mutable:mtproto.TL_upload_getCdnFileHashes.file_token)
  return file_token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* TL_upload_getCdnFileHashes::release_file_token() {
  // @@protoc_insertion_point(field_release:mtproto.TL_upload_getCdnFileHashes.file_token)
  
  return file_token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TL_upload_getCdnFileHashes::set_allocated_file_token(::std::string* file_token) {
  if (file_token != NULL) {
    
  } else {
    
  }
  file_token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), file_token);
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_upload_getCdnFileHashes.file_token)
}

// int32 offset = 2;
void TL_upload_getCdnFileHashes::clear_offset() {
  offset_ = 0;
}
::google::protobuf::int32 TL_upload_getCdnFileHashes::offset() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_upload_getCdnFileHashes.offset)
  return offset_;
}
void TL_upload_getCdnFileHashes::set_offset(::google::protobuf::int32 value) {
  
  offset_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_upload_getCdnFileHashes.offset)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TL_upload_getFileHashes::kLocationFieldNumber;
const int TL_upload_getFileHashes::kOffsetFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TL_upload_getFileHashes::TL_upload_getFileHashes()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.TL_upload_getFileHashes)
}
TL_upload_getFileHashes::TL_upload_getFileHashes(const TL_upload_getFileHashes& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_location()) {
    location_ = new ::mtproto::InputFileLocation(*from.location_);
  } else {
    location_ = NULL;
  }
  offset_ = from.offset_;
  // @@protoc_insertion_point(copy_constructor:mtproto.TL_upload_getFileHashes)
}

void TL_upload_getFileHashes::SharedCtor() {
  ::memset(&location_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&offset_) -
      reinterpret_cast<char*>(&location_)) + sizeof(offset_));
  _cached_size_ = 0;
}

TL_upload_getFileHashes::~TL_upload_getFileHashes() {
  // @@protoc_insertion_point(destructor:mtproto.TL_upload_getFileHashes)
  SharedDtor();
}

void TL_upload_getFileHashes::SharedDtor() {
  if (this != internal_default_instance()) delete location_;
}

void TL_upload_getFileHashes::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TL_upload_getFileHashes::descriptor() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TL_upload_getFileHashes& TL_upload_getFileHashes::default_instance() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  return *internal_default_instance();
}

TL_upload_getFileHashes* TL_upload_getFileHashes::New(::google::protobuf::Arena* arena) const {
  TL_upload_getFileHashes* n = new TL_upload_getFileHashes;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TL_upload_getFileHashes::Swap(TL_upload_getFileHashes* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TL_upload_getFileHashes::InternalSwap(TL_upload_getFileHashes* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata TL_upload_getFileHashes::GetMetadata() const {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TL_upload_getFileHashes

// .mtproto.InputFileLocation location = 1;
bool TL_upload_getFileHashes::has_location() const {
  return this != internal_default_instance() && location_ != NULL;
}
void TL_upload_getFileHashes::clear_location() {
  if (GetArenaNoVirtual() == NULL && location_ != NULL) delete location_;
  location_ = NULL;
}
const ::mtproto::InputFileLocation& TL_upload_getFileHashes::location() const {
  const ::mtproto::InputFileLocation* p = location_;
  // @@protoc_insertion_point(field_get:mtproto.TL_upload_getFileHashes.location)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::InputFileLocation*>(
      &::mtproto::_InputFileLocation_default_instance_);
}
::mtproto::InputFileLocation* TL_upload_getFileHashes::mutable_location() {
  
  if (location_ == NULL) {
    location_ = new ::mtproto::InputFileLocation;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_upload_getFileHashes.location)
  return location_;
}
::mtproto::InputFileLocation* TL_upload_getFileHashes::release_location() {
  // @@protoc_insertion_point(field_release:mtproto.TL_upload_getFileHashes.location)
  
  ::mtproto::InputFileLocation* temp = location_;
  location_ = NULL;
  return temp;
}
void TL_upload_getFileHashes::set_allocated_location(::mtproto::InputFileLocation* location) {
  delete location_;
  location_ = location;
  if (location) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_upload_getFileHashes.location)
}

// int32 offset = 2;
void TL_upload_getFileHashes::clear_offset() {
  offset_ = 0;
}
::google::protobuf::int32 TL_upload_getFileHashes::offset() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_upload_getFileHashes.offset)
  return offset_;
}
void TL_upload_getFileHashes::set_offset(::google::protobuf::int32 value) {
  
  offset_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_upload_getFileHashes.offset)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TL_help_getConfig::TL_help_getConfig()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.TL_help_getConfig)
}
TL_help_getConfig::TL_help_getConfig(const TL_help_getConfig& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:mtproto.TL_help_getConfig)
}

void TL_help_getConfig::SharedCtor() {
  _cached_size_ = 0;
}

TL_help_getConfig::~TL_help_getConfig() {
  // @@protoc_insertion_point(destructor:mtproto.TL_help_getConfig)
  SharedDtor();
}

void TL_help_getConfig::SharedDtor() {
}

void TL_help_getConfig::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TL_help_getConfig::descriptor() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TL_help_getConfig& TL_help_getConfig::default_instance() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  return *internal_default_instance();
}

TL_help_getConfig* TL_help_getConfig::New(::google::protobuf::Arena* arena) const {
  TL_help_getConfig* n = new TL_help_getConfig;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TL_help_getConfig::Swap(TL_help_getConfig* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TL_help_getConfig::InternalSwap(TL_help_getConfig* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata TL_help_getConfig::GetMetadata() const {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TL_help_getConfig

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TL_help_getNearestDc::TL_help_getNearestDc()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.TL_help_getNearestDc)
}
TL_help_getNearestDc::TL_help_getNearestDc(const TL_help_getNearestDc& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:mtproto.TL_help_getNearestDc)
}

void TL_help_getNearestDc::SharedCtor() {
  _cached_size_ = 0;
}

TL_help_getNearestDc::~TL_help_getNearestDc() {
  // @@protoc_insertion_point(destructor:mtproto.TL_help_getNearestDc)
  SharedDtor();
}

void TL_help_getNearestDc::SharedDtor() {
}

void TL_help_getNearestDc::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TL_help_getNearestDc::descriptor() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TL_help_getNearestDc& TL_help_getNearestDc::default_instance() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  return *internal_default_instance();
}

TL_help_getNearestDc* TL_help_getNearestDc::New(::google::protobuf::Arena* arena) const {
  TL_help_getNearestDc* n = new TL_help_getNearestDc;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TL_help_getNearestDc::Swap(TL_help_getNearestDc* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TL_help_getNearestDc::InternalSwap(TL_help_getNearestDc* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata TL_help_getNearestDc::GetMetadata() const {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TL_help_getNearestDc

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TL_help_getAppUpdate::kSourceFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TL_help_getAppUpdate::TL_help_getAppUpdate()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.TL_help_getAppUpdate)
}
TL_help_getAppUpdate::TL_help_getAppUpdate(const TL_help_getAppUpdate& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  source_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.source().size() > 0) {
    source_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.source_);
  }
  // @@protoc_insertion_point(copy_constructor:mtproto.TL_help_getAppUpdate)
}

void TL_help_getAppUpdate::SharedCtor() {
  source_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

TL_help_getAppUpdate::~TL_help_getAppUpdate() {
  // @@protoc_insertion_point(destructor:mtproto.TL_help_getAppUpdate)
  SharedDtor();
}

void TL_help_getAppUpdate::SharedDtor() {
  source_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void TL_help_getAppUpdate::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TL_help_getAppUpdate::descriptor() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TL_help_getAppUpdate& TL_help_getAppUpdate::default_instance() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  return *internal_default_instance();
}

TL_help_getAppUpdate* TL_help_getAppUpdate::New(::google::protobuf::Arena* arena) const {
  TL_help_getAppUpdate* n = new TL_help_getAppUpdate;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TL_help_getAppUpdate::Swap(TL_help_getAppUpdate* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TL_help_getAppUpdate::InternalSwap(TL_help_getAppUpdate* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata TL_help_getAppUpdate::GetMetadata() const {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TL_help_getAppUpdate

// string source = 1;
void TL_help_getAppUpdate::clear_source() {
  source_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& TL_help_getAppUpdate::source() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_help_getAppUpdate.source)
  return source_.GetNoArena();
}
void TL_help_getAppUpdate::set_source(const ::std::string& value) {
  
  source_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtproto.TL_help_getAppUpdate.source)
}
#if LANG_CXX11
void TL_help_getAppUpdate::set_source(::std::string&& value) {
  
  source_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mtproto.TL_help_getAppUpdate.source)
}
#endif
void TL_help_getAppUpdate::set_source(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  source_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtproto.TL_help_getAppUpdate.source)
}
void TL_help_getAppUpdate::set_source(const char* value, size_t size) {
  
  source_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtproto.TL_help_getAppUpdate.source)
}
::std::string* TL_help_getAppUpdate::mutable_source() {
  
  // @@protoc_insertion_point(field_mutable:mtproto.TL_help_getAppUpdate.source)
  return source_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* TL_help_getAppUpdate::release_source() {
  // @@protoc_insertion_point(field_release:mtproto.TL_help_getAppUpdate.source)
  
  return source_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TL_help_getAppUpdate::set_allocated_source(::std::string* source) {
  if (source != NULL) {
    
  } else {
    
  }
  source_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), source);
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_help_getAppUpdate.source)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TL_help_saveAppLog::kEventsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TL_help_saveAppLog::TL_help_saveAppLog()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.TL_help_saveAppLog)
}
TL_help_saveAppLog::TL_help_saveAppLog(const TL_help_saveAppLog& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      events_(from.events_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:mtproto.TL_help_saveAppLog)
}

void TL_help_saveAppLog::SharedCtor() {
  _cached_size_ = 0;
}

TL_help_saveAppLog::~TL_help_saveAppLog() {
  // @@protoc_insertion_point(destructor:mtproto.TL_help_saveAppLog)
  SharedDtor();
}

void TL_help_saveAppLog::SharedDtor() {
}

void TL_help_saveAppLog::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TL_help_saveAppLog::descriptor() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TL_help_saveAppLog& TL_help_saveAppLog::default_instance() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  return *internal_default_instance();
}

TL_help_saveAppLog* TL_help_saveAppLog::New(::google::protobuf::Arena* arena) const {
  TL_help_saveAppLog* n = new TL_help_saveAppLog;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TL_help_saveAppLog::Swap(TL_help_saveAppLog* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TL_help_saveAppLog::InternalSwap(TL_help_saveAppLog* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata TL_help_saveAppLog::GetMetadata() const {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TL_help_saveAppLog

// repeated .mtproto.InputAppEvent events = 1;
int TL_help_saveAppLog::events_size() const {
  return events_.size();
}
void TL_help_saveAppLog::clear_events() {
  events_.Clear();
}
const ::mtproto::InputAppEvent& TL_help_saveAppLog::events(int index) const {
  // @@protoc_insertion_point(field_get:mtproto.TL_help_saveAppLog.events)
  return events_.Get(index);
}
::mtproto::InputAppEvent* TL_help_saveAppLog::mutable_events(int index) {
  // @@protoc_insertion_point(field_mutable:mtproto.TL_help_saveAppLog.events)
  return events_.Mutable(index);
}
::mtproto::InputAppEvent* TL_help_saveAppLog::add_events() {
  // @@protoc_insertion_point(field_add:mtproto.TL_help_saveAppLog.events)
  return events_.Add();
}
::google::protobuf::RepeatedPtrField< ::mtproto::InputAppEvent >*
TL_help_saveAppLog::mutable_events() {
  // @@protoc_insertion_point(field_mutable_list:mtproto.TL_help_saveAppLog.events)
  return &events_;
}
const ::google::protobuf::RepeatedPtrField< ::mtproto::InputAppEvent >&
TL_help_saveAppLog::events() const {
  // @@protoc_insertion_point(field_list:mtproto.TL_help_saveAppLog.events)
  return events_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TL_help_getInviteText::TL_help_getInviteText()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.TL_help_getInviteText)
}
TL_help_getInviteText::TL_help_getInviteText(const TL_help_getInviteText& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:mtproto.TL_help_getInviteText)
}

void TL_help_getInviteText::SharedCtor() {
  _cached_size_ = 0;
}

TL_help_getInviteText::~TL_help_getInviteText() {
  // @@protoc_insertion_point(destructor:mtproto.TL_help_getInviteText)
  SharedDtor();
}

void TL_help_getInviteText::SharedDtor() {
}

void TL_help_getInviteText::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TL_help_getInviteText::descriptor() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TL_help_getInviteText& TL_help_getInviteText::default_instance() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  return *internal_default_instance();
}

TL_help_getInviteText* TL_help_getInviteText::New(::google::protobuf::Arena* arena) const {
  TL_help_getInviteText* n = new TL_help_getInviteText;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TL_help_getInviteText::Swap(TL_help_getInviteText* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TL_help_getInviteText::InternalSwap(TL_help_getInviteText* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata TL_help_getInviteText::GetMetadata() const {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TL_help_getInviteText

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TL_help_getSupport::TL_help_getSupport()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.TL_help_getSupport)
}
TL_help_getSupport::TL_help_getSupport(const TL_help_getSupport& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:mtproto.TL_help_getSupport)
}

void TL_help_getSupport::SharedCtor() {
  _cached_size_ = 0;
}

TL_help_getSupport::~TL_help_getSupport() {
  // @@protoc_insertion_point(destructor:mtproto.TL_help_getSupport)
  SharedDtor();
}

void TL_help_getSupport::SharedDtor() {
}

void TL_help_getSupport::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TL_help_getSupport::descriptor() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TL_help_getSupport& TL_help_getSupport::default_instance() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  return *internal_default_instance();
}

TL_help_getSupport* TL_help_getSupport::New(::google::protobuf::Arena* arena) const {
  TL_help_getSupport* n = new TL_help_getSupport;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TL_help_getSupport::Swap(TL_help_getSupport* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TL_help_getSupport::InternalSwap(TL_help_getSupport* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata TL_help_getSupport::GetMetadata() const {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TL_help_getSupport

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TL_help_getAppChangelog::kPrevAppVersionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TL_help_getAppChangelog::TL_help_getAppChangelog()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.TL_help_getAppChangelog)
}
TL_help_getAppChangelog::TL_help_getAppChangelog(const TL_help_getAppChangelog& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  prev_app_version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.prev_app_version().size() > 0) {
    prev_app_version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.prev_app_version_);
  }
  // @@protoc_insertion_point(copy_constructor:mtproto.TL_help_getAppChangelog)
}

void TL_help_getAppChangelog::SharedCtor() {
  prev_app_version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

TL_help_getAppChangelog::~TL_help_getAppChangelog() {
  // @@protoc_insertion_point(destructor:mtproto.TL_help_getAppChangelog)
  SharedDtor();
}

void TL_help_getAppChangelog::SharedDtor() {
  prev_app_version_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void TL_help_getAppChangelog::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TL_help_getAppChangelog::descriptor() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TL_help_getAppChangelog& TL_help_getAppChangelog::default_instance() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  return *internal_default_instance();
}

TL_help_getAppChangelog* TL_help_getAppChangelog::New(::google::protobuf::Arena* arena) const {
  TL_help_getAppChangelog* n = new TL_help_getAppChangelog;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TL_help_getAppChangelog::Swap(TL_help_getAppChangelog* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TL_help_getAppChangelog::InternalSwap(TL_help_getAppChangelog* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata TL_help_getAppChangelog::GetMetadata() const {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TL_help_getAppChangelog

// string prev_app_version = 1;
void TL_help_getAppChangelog::clear_prev_app_version() {
  prev_app_version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& TL_help_getAppChangelog::prev_app_version() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_help_getAppChangelog.prev_app_version)
  return prev_app_version_.GetNoArena();
}
void TL_help_getAppChangelog::set_prev_app_version(const ::std::string& value) {
  
  prev_app_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtproto.TL_help_getAppChangelog.prev_app_version)
}
#if LANG_CXX11
void TL_help_getAppChangelog::set_prev_app_version(::std::string&& value) {
  
  prev_app_version_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mtproto.TL_help_getAppChangelog.prev_app_version)
}
#endif
void TL_help_getAppChangelog::set_prev_app_version(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  prev_app_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtproto.TL_help_getAppChangelog.prev_app_version)
}
void TL_help_getAppChangelog::set_prev_app_version(const char* value, size_t size) {
  
  prev_app_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtproto.TL_help_getAppChangelog.prev_app_version)
}
::std::string* TL_help_getAppChangelog::mutable_prev_app_version() {
  
  // @@protoc_insertion_point(field_mutable:mtproto.TL_help_getAppChangelog.prev_app_version)
  return prev_app_version_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* TL_help_getAppChangelog::release_prev_app_version() {
  // @@protoc_insertion_point(field_release:mtproto.TL_help_getAppChangelog.prev_app_version)
  
  return prev_app_version_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TL_help_getAppChangelog::set_allocated_prev_app_version(::std::string* prev_app_version) {
  if (prev_app_version != NULL) {
    
  } else {
    
  }
  prev_app_version_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), prev_app_version);
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_help_getAppChangelog.prev_app_version)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TL_help_setBotUpdatesStatus::kPendingUpdatesCountFieldNumber;
const int TL_help_setBotUpdatesStatus::kMessageFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TL_help_setBotUpdatesStatus::TL_help_setBotUpdatesStatus()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.TL_help_setBotUpdatesStatus)
}
TL_help_setBotUpdatesStatus::TL_help_setBotUpdatesStatus(const TL_help_setBotUpdatesStatus& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.message().size() > 0) {
    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
  pending_updates_count_ = from.pending_updates_count_;
  // @@protoc_insertion_point(copy_constructor:mtproto.TL_help_setBotUpdatesStatus)
}

void TL_help_setBotUpdatesStatus::SharedCtor() {
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pending_updates_count_ = 0;
  _cached_size_ = 0;
}

TL_help_setBotUpdatesStatus::~TL_help_setBotUpdatesStatus() {
  // @@protoc_insertion_point(destructor:mtproto.TL_help_setBotUpdatesStatus)
  SharedDtor();
}

void TL_help_setBotUpdatesStatus::SharedDtor() {
  message_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void TL_help_setBotUpdatesStatus::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TL_help_setBotUpdatesStatus::descriptor() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TL_help_setBotUpdatesStatus& TL_help_setBotUpdatesStatus::default_instance() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  return *internal_default_instance();
}

TL_help_setBotUpdatesStatus* TL_help_setBotUpdatesStatus::New(::google::protobuf::Arena* arena) const {
  TL_help_setBotUpdatesStatus* n = new TL_help_setBotUpdatesStatus;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TL_help_setBotUpdatesStatus::Swap(TL_help_setBotUpdatesStatus* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TL_help_setBotUpdatesStatus::InternalSwap(TL_help_setBotUpdatesStatus* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata TL_help_setBotUpdatesStatus::GetMetadata() const {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TL_help_setBotUpdatesStatus

// int32 pending_updates_count = 1;
void TL_help_setBotUpdatesStatus::clear_pending_updates_count() {
  pending_updates_count_ = 0;
}
::google::protobuf::int32 TL_help_setBotUpdatesStatus::pending_updates_count() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_help_setBotUpdatesStatus.pending_updates_count)
  return pending_updates_count_;
}
void TL_help_setBotUpdatesStatus::set_pending_updates_count(::google::protobuf::int32 value) {
  
  pending_updates_count_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_help_setBotUpdatesStatus.pending_updates_count)
}

// string message = 2;
void TL_help_setBotUpdatesStatus::clear_message() {
  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& TL_help_setBotUpdatesStatus::message() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_help_setBotUpdatesStatus.message)
  return message_.GetNoArena();
}
void TL_help_setBotUpdatesStatus::set_message(const ::std::string& value) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtproto.TL_help_setBotUpdatesStatus.message)
}
#if LANG_CXX11
void TL_help_setBotUpdatesStatus::set_message(::std::string&& value) {
  
  message_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mtproto.TL_help_setBotUpdatesStatus.message)
}
#endif
void TL_help_setBotUpdatesStatus::set_message(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtproto.TL_help_setBotUpdatesStatus.message)
}
void TL_help_setBotUpdatesStatus::set_message(const char* value, size_t size) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtproto.TL_help_setBotUpdatesStatus.message)
}
::std::string* TL_help_setBotUpdatesStatus::mutable_message() {
  
  // @@protoc_insertion_point(field_mutable:mtproto.TL_help_setBotUpdatesStatus.message)
  return message_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* TL_help_setBotUpdatesStatus::release_message() {
  // @@protoc_insertion_point(field_release:mtproto.TL_help_setBotUpdatesStatus.message)
  
  return message_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TL_help_setBotUpdatesStatus::set_allocated_message(::std::string* message) {
  if (message != NULL) {
    
  } else {
    
  }
  message_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), message);
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_help_setBotUpdatesStatus.message)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TL_help_getCdnConfig::TL_help_getCdnConfig()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.TL_help_getCdnConfig)
}
TL_help_getCdnConfig::TL_help_getCdnConfig(const TL_help_getCdnConfig& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:mtproto.TL_help_getCdnConfig)
}

void TL_help_getCdnConfig::SharedCtor() {
  _cached_size_ = 0;
}

TL_help_getCdnConfig::~TL_help_getCdnConfig() {
  // @@protoc_insertion_point(destructor:mtproto.TL_help_getCdnConfig)
  SharedDtor();
}

void TL_help_getCdnConfig::SharedDtor() {
}

void TL_help_getCdnConfig::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TL_help_getCdnConfig::descriptor() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TL_help_getCdnConfig& TL_help_getCdnConfig::default_instance() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  return *internal_default_instance();
}

TL_help_getCdnConfig* TL_help_getCdnConfig::New(::google::protobuf::Arena* arena) const {
  TL_help_getCdnConfig* n = new TL_help_getCdnConfig;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TL_help_getCdnConfig::Swap(TL_help_getCdnConfig* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TL_help_getCdnConfig::InternalSwap(TL_help_getCdnConfig* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata TL_help_getCdnConfig::GetMetadata() const {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TL_help_getCdnConfig

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TL_help_getRecentMeUrls::kRefererFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TL_help_getRecentMeUrls::TL_help_getRecentMeUrls()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.TL_help_getRecentMeUrls)
}
TL_help_getRecentMeUrls::TL_help_getRecentMeUrls(const TL_help_getRecentMeUrls& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  referer_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.referer().size() > 0) {
    referer_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.referer_);
  }
  // @@protoc_insertion_point(copy_constructor:mtproto.TL_help_getRecentMeUrls)
}

void TL_help_getRecentMeUrls::SharedCtor() {
  referer_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

TL_help_getRecentMeUrls::~TL_help_getRecentMeUrls() {
  // @@protoc_insertion_point(destructor:mtproto.TL_help_getRecentMeUrls)
  SharedDtor();
}

void TL_help_getRecentMeUrls::SharedDtor() {
  referer_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void TL_help_getRecentMeUrls::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TL_help_getRecentMeUrls::descriptor() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TL_help_getRecentMeUrls& TL_help_getRecentMeUrls::default_instance() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  return *internal_default_instance();
}

TL_help_getRecentMeUrls* TL_help_getRecentMeUrls::New(::google::protobuf::Arena* arena) const {
  TL_help_getRecentMeUrls* n = new TL_help_getRecentMeUrls;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TL_help_getRecentMeUrls::Swap(TL_help_getRecentMeUrls* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TL_help_getRecentMeUrls::InternalSwap(TL_help_getRecentMeUrls* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata TL_help_getRecentMeUrls::GetMetadata() const {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TL_help_getRecentMeUrls

// string referer = 1;
void TL_help_getRecentMeUrls::clear_referer() {
  referer_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& TL_help_getRecentMeUrls::referer() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_help_getRecentMeUrls.referer)
  return referer_.GetNoArena();
}
void TL_help_getRecentMeUrls::set_referer(const ::std::string& value) {
  
  referer_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtproto.TL_help_getRecentMeUrls.referer)
}
#if LANG_CXX11
void TL_help_getRecentMeUrls::set_referer(::std::string&& value) {
  
  referer_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mtproto.TL_help_getRecentMeUrls.referer)
}
#endif
void TL_help_getRecentMeUrls::set_referer(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  referer_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtproto.TL_help_getRecentMeUrls.referer)
}
void TL_help_getRecentMeUrls::set_referer(const char* value, size_t size) {
  
  referer_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtproto.TL_help_getRecentMeUrls.referer)
}
::std::string* TL_help_getRecentMeUrls::mutable_referer() {
  
  // @@protoc_insertion_point(field_mutable:mtproto.TL_help_getRecentMeUrls.referer)
  return referer_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* TL_help_getRecentMeUrls::release_referer() {
  // @@protoc_insertion_point(field_release:mtproto.TL_help_getRecentMeUrls.referer)
  
  return referer_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TL_help_getRecentMeUrls::set_allocated_referer(::std::string* referer) {
  if (referer != NULL) {
    
  } else {
    
  }
  referer_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), referer);
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_help_getRecentMeUrls.referer)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TL_help_getProxyData::TL_help_getProxyData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.TL_help_getProxyData)
}
TL_help_getProxyData::TL_help_getProxyData(const TL_help_getProxyData& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:mtproto.TL_help_getProxyData)
}

void TL_help_getProxyData::SharedCtor() {
  _cached_size_ = 0;
}

TL_help_getProxyData::~TL_help_getProxyData() {
  // @@protoc_insertion_point(destructor:mtproto.TL_help_getProxyData)
  SharedDtor();
}

void TL_help_getProxyData::SharedDtor() {
}

void TL_help_getProxyData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TL_help_getProxyData::descriptor() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TL_help_getProxyData& TL_help_getProxyData::default_instance() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  return *internal_default_instance();
}

TL_help_getProxyData* TL_help_getProxyData::New(::google::protobuf::Arena* arena) const {
  TL_help_getProxyData* n = new TL_help_getProxyData;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TL_help_getProxyData::Swap(TL_help_getProxyData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TL_help_getProxyData::InternalSwap(TL_help_getProxyData* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata TL_help_getProxyData::GetMetadata() const {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TL_help_getProxyData

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TL_help_getTermsOfServiceUpdate::TL_help_getTermsOfServiceUpdate()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.TL_help_getTermsOfServiceUpdate)
}
TL_help_getTermsOfServiceUpdate::TL_help_getTermsOfServiceUpdate(const TL_help_getTermsOfServiceUpdate& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:mtproto.TL_help_getTermsOfServiceUpdate)
}

void TL_help_getTermsOfServiceUpdate::SharedCtor() {
  _cached_size_ = 0;
}

TL_help_getTermsOfServiceUpdate::~TL_help_getTermsOfServiceUpdate() {
  // @@protoc_insertion_point(destructor:mtproto.TL_help_getTermsOfServiceUpdate)
  SharedDtor();
}

void TL_help_getTermsOfServiceUpdate::SharedDtor() {
}

void TL_help_getTermsOfServiceUpdate::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TL_help_getTermsOfServiceUpdate::descriptor() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TL_help_getTermsOfServiceUpdate& TL_help_getTermsOfServiceUpdate::default_instance() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  return *internal_default_instance();
}

TL_help_getTermsOfServiceUpdate* TL_help_getTermsOfServiceUpdate::New(::google::protobuf::Arena* arena) const {
  TL_help_getTermsOfServiceUpdate* n = new TL_help_getTermsOfServiceUpdate;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TL_help_getTermsOfServiceUpdate::Swap(TL_help_getTermsOfServiceUpdate* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TL_help_getTermsOfServiceUpdate::InternalSwap(TL_help_getTermsOfServiceUpdate* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata TL_help_getTermsOfServiceUpdate::GetMetadata() const {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TL_help_getTermsOfServiceUpdate

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TL_help_acceptTermsOfService::kIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TL_help_acceptTermsOfService::TL_help_acceptTermsOfService()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.TL_help_acceptTermsOfService)
}
TL_help_acceptTermsOfService::TL_help_acceptTermsOfService(const TL_help_acceptTermsOfService& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_id()) {
    id_ = new ::mtproto::DataJSON(*from.id_);
  } else {
    id_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:mtproto.TL_help_acceptTermsOfService)
}

void TL_help_acceptTermsOfService::SharedCtor() {
  id_ = NULL;
  _cached_size_ = 0;
}

TL_help_acceptTermsOfService::~TL_help_acceptTermsOfService() {
  // @@protoc_insertion_point(destructor:mtproto.TL_help_acceptTermsOfService)
  SharedDtor();
}

void TL_help_acceptTermsOfService::SharedDtor() {
  if (this != internal_default_instance()) delete id_;
}

void TL_help_acceptTermsOfService::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TL_help_acceptTermsOfService::descriptor() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TL_help_acceptTermsOfService& TL_help_acceptTermsOfService::default_instance() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  return *internal_default_instance();
}

TL_help_acceptTermsOfService* TL_help_acceptTermsOfService::New(::google::protobuf::Arena* arena) const {
  TL_help_acceptTermsOfService* n = new TL_help_acceptTermsOfService;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TL_help_acceptTermsOfService::Swap(TL_help_acceptTermsOfService* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TL_help_acceptTermsOfService::InternalSwap(TL_help_acceptTermsOfService* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata TL_help_acceptTermsOfService::GetMetadata() const {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TL_help_acceptTermsOfService

// .mtproto.DataJSON id = 1;
bool TL_help_acceptTermsOfService::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
void TL_help_acceptTermsOfService::clear_id() {
  if (GetArenaNoVirtual() == NULL && id_ != NULL) delete id_;
  id_ = NULL;
}
const ::mtproto::DataJSON& TL_help_acceptTermsOfService::id() const {
  const ::mtproto::DataJSON* p = id_;
  // @@protoc_insertion_point(field_get:mtproto.TL_help_acceptTermsOfService.id)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::DataJSON*>(
      &::mtproto::_DataJSON_default_instance_);
}
::mtproto::DataJSON* TL_help_acceptTermsOfService::mutable_id() {
  
  if (id_ == NULL) {
    id_ = new ::mtproto::DataJSON;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_help_acceptTermsOfService.id)
  return id_;
}
::mtproto::DataJSON* TL_help_acceptTermsOfService::release_id() {
  // @@protoc_insertion_point(field_release:mtproto.TL_help_acceptTermsOfService.id)
  
  ::mtproto::DataJSON* temp = id_;
  id_ = NULL;
  return temp;
}
void TL_help_acceptTermsOfService::set_allocated_id(::mtproto::DataJSON* id) {
  delete id_;
  id_ = id;
  if (id) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_help_acceptTermsOfService.id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TL_help_getDeepLinkInfo::kPathFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TL_help_getDeepLinkInfo::TL_help_getDeepLinkInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.TL_help_getDeepLinkInfo)
}
TL_help_getDeepLinkInfo::TL_help_getDeepLinkInfo(const TL_help_getDeepLinkInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.path().size() > 0) {
    path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.path_);
  }
  // @@protoc_insertion_point(copy_constructor:mtproto.TL_help_getDeepLinkInfo)
}

void TL_help_getDeepLinkInfo::SharedCtor() {
  path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

TL_help_getDeepLinkInfo::~TL_help_getDeepLinkInfo() {
  // @@protoc_insertion_point(destructor:mtproto.TL_help_getDeepLinkInfo)
  SharedDtor();
}

void TL_help_getDeepLinkInfo::SharedDtor() {
  path_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void TL_help_getDeepLinkInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TL_help_getDeepLinkInfo::descriptor() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TL_help_getDeepLinkInfo& TL_help_getDeepLinkInfo::default_instance() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  return *internal_default_instance();
}

TL_help_getDeepLinkInfo* TL_help_getDeepLinkInfo::New(::google::protobuf::Arena* arena) const {
  TL_help_getDeepLinkInfo* n = new TL_help_getDeepLinkInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TL_help_getDeepLinkInfo::Swap(TL_help_getDeepLinkInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TL_help_getDeepLinkInfo::InternalSwap(TL_help_getDeepLinkInfo* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata TL_help_getDeepLinkInfo::GetMetadata() const {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TL_help_getDeepLinkInfo

// string path = 1;
void TL_help_getDeepLinkInfo::clear_path() {
  path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& TL_help_getDeepLinkInfo::path() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_help_getDeepLinkInfo.path)
  return path_.GetNoArena();
}
void TL_help_getDeepLinkInfo::set_path(const ::std::string& value) {
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtproto.TL_help_getDeepLinkInfo.path)
}
#if LANG_CXX11
void TL_help_getDeepLinkInfo::set_path(::std::string&& value) {
  
  path_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mtproto.TL_help_getDeepLinkInfo.path)
}
#endif
void TL_help_getDeepLinkInfo::set_path(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtproto.TL_help_getDeepLinkInfo.path)
}
void TL_help_getDeepLinkInfo::set_path(const char* value, size_t size) {
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtproto.TL_help_getDeepLinkInfo.path)
}
::std::string* TL_help_getDeepLinkInfo::mutable_path() {
  
  // @@protoc_insertion_point(field_mutable:mtproto.TL_help_getDeepLinkInfo.path)
  return path_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* TL_help_getDeepLinkInfo::release_path() {
  // @@protoc_insertion_point(field_release:mtproto.TL_help_getDeepLinkInfo.path)
  
  return path_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TL_help_getDeepLinkInfo::set_allocated_path(::std::string* path) {
  if (path != NULL) {
    
  } else {
    
  }
  path_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), path);
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_help_getDeepLinkInfo.path)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TL_help_getPassportConfig::kHashFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TL_help_getPassportConfig::TL_help_getPassportConfig()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.TL_help_getPassportConfig)
}
TL_help_getPassportConfig::TL_help_getPassportConfig(const TL_help_getPassportConfig& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  hash_ = from.hash_;
  // @@protoc_insertion_point(copy_constructor:mtproto.TL_help_getPassportConfig)
}

void TL_help_getPassportConfig::SharedCtor() {
  hash_ = 0;
  _cached_size_ = 0;
}

TL_help_getPassportConfig::~TL_help_getPassportConfig() {
  // @@protoc_insertion_point(destructor:mtproto.TL_help_getPassportConfig)
  SharedDtor();
}

void TL_help_getPassportConfig::SharedDtor() {
}

void TL_help_getPassportConfig::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TL_help_getPassportConfig::descriptor() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TL_help_getPassportConfig& TL_help_getPassportConfig::default_instance() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  return *internal_default_instance();
}

TL_help_getPassportConfig* TL_help_getPassportConfig::New(::google::protobuf::Arena* arena) const {
  TL_help_getPassportConfig* n = new TL_help_getPassportConfig;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TL_help_getPassportConfig::Swap(TL_help_getPassportConfig* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TL_help_getPassportConfig::InternalSwap(TL_help_getPassportConfig* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata TL_help_getPassportConfig::GetMetadata() const {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TL_help_getPassportConfig

// int32 hash = 1;
void TL_help_getPassportConfig::clear_hash() {
  hash_ = 0;
}
::google::protobuf::int32 TL_help_getPassportConfig::hash() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_help_getPassportConfig.hash)
  return hash_;
}
void TL_help_getPassportConfig::set_hash(::google::protobuf::int32 value) {
  
  hash_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_help_getPassportConfig.hash)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TL_channels_readHistory::kChannelFieldNumber;
const int TL_channels_readHistory::kMaxIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TL_channels_readHistory::TL_channels_readHistory()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.TL_channels_readHistory)
}
TL_channels_readHistory::TL_channels_readHistory(const TL_channels_readHistory& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_channel()) {
    channel_ = new ::mtproto::InputChannel(*from.channel_);
  } else {
    channel_ = NULL;
  }
  max_id_ = from.max_id_;
  // @@protoc_insertion_point(copy_constructor:mtproto.TL_channels_readHistory)
}

void TL_channels_readHistory::SharedCtor() {
  ::memset(&channel_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&max_id_) -
      reinterpret_cast<char*>(&channel_)) + sizeof(max_id_));
  _cached_size_ = 0;
}

TL_channels_readHistory::~TL_channels_readHistory() {
  // @@protoc_insertion_point(destructor:mtproto.TL_channels_readHistory)
  SharedDtor();
}

void TL_channels_readHistory::SharedDtor() {
  if (this != internal_default_instance()) delete channel_;
}

void TL_channels_readHistory::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TL_channels_readHistory::descriptor() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TL_channels_readHistory& TL_channels_readHistory::default_instance() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  return *internal_default_instance();
}

TL_channels_readHistory* TL_channels_readHistory::New(::google::protobuf::Arena* arena) const {
  TL_channels_readHistory* n = new TL_channels_readHistory;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TL_channels_readHistory::Swap(TL_channels_readHistory* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TL_channels_readHistory::InternalSwap(TL_channels_readHistory* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata TL_channels_readHistory::GetMetadata() const {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TL_channels_readHistory

// .mtproto.InputChannel channel = 1;
bool TL_channels_readHistory::has_channel() const {
  return this != internal_default_instance() && channel_ != NULL;
}
void TL_channels_readHistory::clear_channel() {
  if (GetArenaNoVirtual() == NULL && channel_ != NULL) delete channel_;
  channel_ = NULL;
}
const ::mtproto::InputChannel& TL_channels_readHistory::channel() const {
  const ::mtproto::InputChannel* p = channel_;
  // @@protoc_insertion_point(field_get:mtproto.TL_channels_readHistory.channel)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::InputChannel*>(
      &::mtproto::_InputChannel_default_instance_);
}
::mtproto::InputChannel* TL_channels_readHistory::mutable_channel() {
  
  if (channel_ == NULL) {
    channel_ = new ::mtproto::InputChannel;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_channels_readHistory.channel)
  return channel_;
}
::mtproto::InputChannel* TL_channels_readHistory::release_channel() {
  // @@protoc_insertion_point(field_release:mtproto.TL_channels_readHistory.channel)
  
  ::mtproto::InputChannel* temp = channel_;
  channel_ = NULL;
  return temp;
}
void TL_channels_readHistory::set_allocated_channel(::mtproto::InputChannel* channel) {
  delete channel_;
  channel_ = channel;
  if (channel) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_channels_readHistory.channel)
}

// int32 max_id = 2;
void TL_channels_readHistory::clear_max_id() {
  max_id_ = 0;
}
::google::protobuf::int32 TL_channels_readHistory::max_id() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_channels_readHistory.max_id)
  return max_id_;
}
void TL_channels_readHistory::set_max_id(::google::protobuf::int32 value) {
  
  max_id_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_channels_readHistory.max_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TL_channels_deleteMessages::kChannelFieldNumber;
const int TL_channels_deleteMessages::kIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TL_channels_deleteMessages::TL_channels_deleteMessages()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.TL_channels_deleteMessages)
}
TL_channels_deleteMessages::TL_channels_deleteMessages(const TL_channels_deleteMessages& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      id_(from.id_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_channel()) {
    channel_ = new ::mtproto::InputChannel(*from.channel_);
  } else {
    channel_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:mtproto.TL_channels_deleteMessages)
}

void TL_channels_deleteMessages::SharedCtor() {
  channel_ = NULL;
  _cached_size_ = 0;
}

TL_channels_deleteMessages::~TL_channels_deleteMessages() {
  // @@protoc_insertion_point(destructor:mtproto.TL_channels_deleteMessages)
  SharedDtor();
}

void TL_channels_deleteMessages::SharedDtor() {
  if (this != internal_default_instance()) delete channel_;
}

void TL_channels_deleteMessages::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TL_channels_deleteMessages::descriptor() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TL_channels_deleteMessages& TL_channels_deleteMessages::default_instance() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  return *internal_default_instance();
}

TL_channels_deleteMessages* TL_channels_deleteMessages::New(::google::protobuf::Arena* arena) const {
  TL_channels_deleteMessages* n = new TL_channels_deleteMessages;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TL_channels_deleteMessages::Swap(TL_channels_deleteMessages* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TL_channels_deleteMessages::InternalSwap(TL_channels_deleteMessages* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata TL_channels_deleteMessages::GetMetadata() const {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TL_channels_deleteMessages

// .mtproto.InputChannel channel = 1;
bool TL_channels_deleteMessages::has_channel() const {
  return this != internal_default_instance() && channel_ != NULL;
}
void TL_channels_deleteMessages::clear_channel() {
  if (GetArenaNoVirtual() == NULL && channel_ != NULL) delete channel_;
  channel_ = NULL;
}
const ::mtproto::InputChannel& TL_channels_deleteMessages::channel() const {
  const ::mtproto::InputChannel* p = channel_;
  // @@protoc_insertion_point(field_get:mtproto.TL_channels_deleteMessages.channel)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::InputChannel*>(
      &::mtproto::_InputChannel_default_instance_);
}
::mtproto::InputChannel* TL_channels_deleteMessages::mutable_channel() {
  
  if (channel_ == NULL) {
    channel_ = new ::mtproto::InputChannel;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_channels_deleteMessages.channel)
  return channel_;
}
::mtproto::InputChannel* TL_channels_deleteMessages::release_channel() {
  // @@protoc_insertion_point(field_release:mtproto.TL_channels_deleteMessages.channel)
  
  ::mtproto::InputChannel* temp = channel_;
  channel_ = NULL;
  return temp;
}
void TL_channels_deleteMessages::set_allocated_channel(::mtproto::InputChannel* channel) {
  delete channel_;
  channel_ = channel;
  if (channel) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_channels_deleteMessages.channel)
}

// repeated int32 id = 2;
int TL_channels_deleteMessages::id_size() const {
  return id_.size();
}
void TL_channels_deleteMessages::clear_id() {
  id_.Clear();
}
::google::protobuf::int32 TL_channels_deleteMessages::id(int index) const {
  // @@protoc_insertion_point(field_get:mtproto.TL_channels_deleteMessages.id)
  return id_.Get(index);
}
void TL_channels_deleteMessages::set_id(int index, ::google::protobuf::int32 value) {
  id_.Set(index, value);
  // @@protoc_insertion_point(field_set:mtproto.TL_channels_deleteMessages.id)
}
void TL_channels_deleteMessages::add_id(::google::protobuf::int32 value) {
  id_.Add(value);
  // @@protoc_insertion_point(field_add:mtproto.TL_channels_deleteMessages.id)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
TL_channels_deleteMessages::id() const {
  // @@protoc_insertion_point(field_list:mtproto.TL_channels_deleteMessages.id)
  return id_;
}
::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
TL_channels_deleteMessages::mutable_id() {
  // @@protoc_insertion_point(field_mutable_list:mtproto.TL_channels_deleteMessages.id)
  return &id_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TL_channels_deleteUserHistory::kChannelFieldNumber;
const int TL_channels_deleteUserHistory::kUserIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TL_channels_deleteUserHistory::TL_channels_deleteUserHistory()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.TL_channels_deleteUserHistory)
}
TL_channels_deleteUserHistory::TL_channels_deleteUserHistory(const TL_channels_deleteUserHistory& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_channel()) {
    channel_ = new ::mtproto::InputChannel(*from.channel_);
  } else {
    channel_ = NULL;
  }
  if (from.has_user_id()) {
    user_id_ = new ::mtproto::InputUser(*from.user_id_);
  } else {
    user_id_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:mtproto.TL_channels_deleteUserHistory)
}

void TL_channels_deleteUserHistory::SharedCtor() {
  ::memset(&channel_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&user_id_) -
      reinterpret_cast<char*>(&channel_)) + sizeof(user_id_));
  _cached_size_ = 0;
}

TL_channels_deleteUserHistory::~TL_channels_deleteUserHistory() {
  // @@protoc_insertion_point(destructor:mtproto.TL_channels_deleteUserHistory)
  SharedDtor();
}

void TL_channels_deleteUserHistory::SharedDtor() {
  if (this != internal_default_instance()) delete channel_;
  if (this != internal_default_instance()) delete user_id_;
}

void TL_channels_deleteUserHistory::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TL_channels_deleteUserHistory::descriptor() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TL_channels_deleteUserHistory& TL_channels_deleteUserHistory::default_instance() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  return *internal_default_instance();
}

TL_channels_deleteUserHistory* TL_channels_deleteUserHistory::New(::google::protobuf::Arena* arena) const {
  TL_channels_deleteUserHistory* n = new TL_channels_deleteUserHistory;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TL_channels_deleteUserHistory::Swap(TL_channels_deleteUserHistory* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TL_channels_deleteUserHistory::InternalSwap(TL_channels_deleteUserHistory* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata TL_channels_deleteUserHistory::GetMetadata() const {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TL_channels_deleteUserHistory

// .mtproto.InputChannel channel = 1;
bool TL_channels_deleteUserHistory::has_channel() const {
  return this != internal_default_instance() && channel_ != NULL;
}
void TL_channels_deleteUserHistory::clear_channel() {
  if (GetArenaNoVirtual() == NULL && channel_ != NULL) delete channel_;
  channel_ = NULL;
}
const ::mtproto::InputChannel& TL_channels_deleteUserHistory::channel() const {
  const ::mtproto::InputChannel* p = channel_;
  // @@protoc_insertion_point(field_get:mtproto.TL_channels_deleteUserHistory.channel)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::InputChannel*>(
      &::mtproto::_InputChannel_default_instance_);
}
::mtproto::InputChannel* TL_channels_deleteUserHistory::mutable_channel() {
  
  if (channel_ == NULL) {
    channel_ = new ::mtproto::InputChannel;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_channels_deleteUserHistory.channel)
  return channel_;
}
::mtproto::InputChannel* TL_channels_deleteUserHistory::release_channel() {
  // @@protoc_insertion_point(field_release:mtproto.TL_channels_deleteUserHistory.channel)
  
  ::mtproto::InputChannel* temp = channel_;
  channel_ = NULL;
  return temp;
}
void TL_channels_deleteUserHistory::set_allocated_channel(::mtproto::InputChannel* channel) {
  delete channel_;
  channel_ = channel;
  if (channel) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_channels_deleteUserHistory.channel)
}

// .mtproto.InputUser user_id = 2;
bool TL_channels_deleteUserHistory::has_user_id() const {
  return this != internal_default_instance() && user_id_ != NULL;
}
void TL_channels_deleteUserHistory::clear_user_id() {
  if (GetArenaNoVirtual() == NULL && user_id_ != NULL) delete user_id_;
  user_id_ = NULL;
}
const ::mtproto::InputUser& TL_channels_deleteUserHistory::user_id() const {
  const ::mtproto::InputUser* p = user_id_;
  // @@protoc_insertion_point(field_get:mtproto.TL_channels_deleteUserHistory.user_id)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::InputUser*>(
      &::mtproto::_InputUser_default_instance_);
}
::mtproto::InputUser* TL_channels_deleteUserHistory::mutable_user_id() {
  
  if (user_id_ == NULL) {
    user_id_ = new ::mtproto::InputUser;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_channels_deleteUserHistory.user_id)
  return user_id_;
}
::mtproto::InputUser* TL_channels_deleteUserHistory::release_user_id() {
  // @@protoc_insertion_point(field_release:mtproto.TL_channels_deleteUserHistory.user_id)
  
  ::mtproto::InputUser* temp = user_id_;
  user_id_ = NULL;
  return temp;
}
void TL_channels_deleteUserHistory::set_allocated_user_id(::mtproto::InputUser* user_id) {
  delete user_id_;
  user_id_ = user_id;
  if (user_id) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_channels_deleteUserHistory.user_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TL_channels_reportSpam::kChannelFieldNumber;
const int TL_channels_reportSpam::kUserIdFieldNumber;
const int TL_channels_reportSpam::kIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TL_channels_reportSpam::TL_channels_reportSpam()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.TL_channels_reportSpam)
}
TL_channels_reportSpam::TL_channels_reportSpam(const TL_channels_reportSpam& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      id_(from.id_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_channel()) {
    channel_ = new ::mtproto::InputChannel(*from.channel_);
  } else {
    channel_ = NULL;
  }
  if (from.has_user_id()) {
    user_id_ = new ::mtproto::InputUser(*from.user_id_);
  } else {
    user_id_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:mtproto.TL_channels_reportSpam)
}

void TL_channels_reportSpam::SharedCtor() {
  ::memset(&channel_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&user_id_) -
      reinterpret_cast<char*>(&channel_)) + sizeof(user_id_));
  _cached_size_ = 0;
}

TL_channels_reportSpam::~TL_channels_reportSpam() {
  // @@protoc_insertion_point(destructor:mtproto.TL_channels_reportSpam)
  SharedDtor();
}

void TL_channels_reportSpam::SharedDtor() {
  if (this != internal_default_instance()) delete channel_;
  if (this != internal_default_instance()) delete user_id_;
}

void TL_channels_reportSpam::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TL_channels_reportSpam::descriptor() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TL_channels_reportSpam& TL_channels_reportSpam::default_instance() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  return *internal_default_instance();
}

TL_channels_reportSpam* TL_channels_reportSpam::New(::google::protobuf::Arena* arena) const {
  TL_channels_reportSpam* n = new TL_channels_reportSpam;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TL_channels_reportSpam::Swap(TL_channels_reportSpam* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TL_channels_reportSpam::InternalSwap(TL_channels_reportSpam* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata TL_channels_reportSpam::GetMetadata() const {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TL_channels_reportSpam

// .mtproto.InputChannel channel = 1;
bool TL_channels_reportSpam::has_channel() const {
  return this != internal_default_instance() && channel_ != NULL;
}
void TL_channels_reportSpam::clear_channel() {
  if (GetArenaNoVirtual() == NULL && channel_ != NULL) delete channel_;
  channel_ = NULL;
}
const ::mtproto::InputChannel& TL_channels_reportSpam::channel() const {
  const ::mtproto::InputChannel* p = channel_;
  // @@protoc_insertion_point(field_get:mtproto.TL_channels_reportSpam.channel)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::InputChannel*>(
      &::mtproto::_InputChannel_default_instance_);
}
::mtproto::InputChannel* TL_channels_reportSpam::mutable_channel() {
  
  if (channel_ == NULL) {
    channel_ = new ::mtproto::InputChannel;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_channels_reportSpam.channel)
  return channel_;
}
::mtproto::InputChannel* TL_channels_reportSpam::release_channel() {
  // @@protoc_insertion_point(field_release:mtproto.TL_channels_reportSpam.channel)
  
  ::mtproto::InputChannel* temp = channel_;
  channel_ = NULL;
  return temp;
}
void TL_channels_reportSpam::set_allocated_channel(::mtproto::InputChannel* channel) {
  delete channel_;
  channel_ = channel;
  if (channel) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_channels_reportSpam.channel)
}

// .mtproto.InputUser user_id = 2;
bool TL_channels_reportSpam::has_user_id() const {
  return this != internal_default_instance() && user_id_ != NULL;
}
void TL_channels_reportSpam::clear_user_id() {
  if (GetArenaNoVirtual() == NULL && user_id_ != NULL) delete user_id_;
  user_id_ = NULL;
}
const ::mtproto::InputUser& TL_channels_reportSpam::user_id() const {
  const ::mtproto::InputUser* p = user_id_;
  // @@protoc_insertion_point(field_get:mtproto.TL_channels_reportSpam.user_id)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::InputUser*>(
      &::mtproto::_InputUser_default_instance_);
}
::mtproto::InputUser* TL_channels_reportSpam::mutable_user_id() {
  
  if (user_id_ == NULL) {
    user_id_ = new ::mtproto::InputUser;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_channels_reportSpam.user_id)
  return user_id_;
}
::mtproto::InputUser* TL_channels_reportSpam::release_user_id() {
  // @@protoc_insertion_point(field_release:mtproto.TL_channels_reportSpam.user_id)
  
  ::mtproto::InputUser* temp = user_id_;
  user_id_ = NULL;
  return temp;
}
void TL_channels_reportSpam::set_allocated_user_id(::mtproto::InputUser* user_id) {
  delete user_id_;
  user_id_ = user_id;
  if (user_id) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_channels_reportSpam.user_id)
}

// repeated int32 id = 3;
int TL_channels_reportSpam::id_size() const {
  return id_.size();
}
void TL_channels_reportSpam::clear_id() {
  id_.Clear();
}
::google::protobuf::int32 TL_channels_reportSpam::id(int index) const {
  // @@protoc_insertion_point(field_get:mtproto.TL_channels_reportSpam.id)
  return id_.Get(index);
}
void TL_channels_reportSpam::set_id(int index, ::google::protobuf::int32 value) {
  id_.Set(index, value);
  // @@protoc_insertion_point(field_set:mtproto.TL_channels_reportSpam.id)
}
void TL_channels_reportSpam::add_id(::google::protobuf::int32 value) {
  id_.Add(value);
  // @@protoc_insertion_point(field_add:mtproto.TL_channels_reportSpam.id)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
TL_channels_reportSpam::id() const {
  // @@protoc_insertion_point(field_list:mtproto.TL_channels_reportSpam.id)
  return id_;
}
::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
TL_channels_reportSpam::mutable_id() {
  // @@protoc_insertion_point(field_mutable_list:mtproto.TL_channels_reportSpam.id)
  return &id_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TL_channels_getMessages::kChannelFieldNumber;
const int TL_channels_getMessages::kIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TL_channels_getMessages::TL_channels_getMessages()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.TL_channels_getMessages)
}
TL_channels_getMessages::TL_channels_getMessages(const TL_channels_getMessages& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      id_(from.id_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_channel()) {
    channel_ = new ::mtproto::InputChannel(*from.channel_);
  } else {
    channel_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:mtproto.TL_channels_getMessages)
}

void TL_channels_getMessages::SharedCtor() {
  channel_ = NULL;
  _cached_size_ = 0;
}

TL_channels_getMessages::~TL_channels_getMessages() {
  // @@protoc_insertion_point(destructor:mtproto.TL_channels_getMessages)
  SharedDtor();
}

void TL_channels_getMessages::SharedDtor() {
  if (this != internal_default_instance()) delete channel_;
}

void TL_channels_getMessages::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TL_channels_getMessages::descriptor() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TL_channels_getMessages& TL_channels_getMessages::default_instance() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  return *internal_default_instance();
}

TL_channels_getMessages* TL_channels_getMessages::New(::google::protobuf::Arena* arena) const {
  TL_channels_getMessages* n = new TL_channels_getMessages;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TL_channels_getMessages::Swap(TL_channels_getMessages* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TL_channels_getMessages::InternalSwap(TL_channels_getMessages* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata TL_channels_getMessages::GetMetadata() const {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TL_channels_getMessages

// .mtproto.InputChannel channel = 1;
bool TL_channels_getMessages::has_channel() const {
  return this != internal_default_instance() && channel_ != NULL;
}
void TL_channels_getMessages::clear_channel() {
  if (GetArenaNoVirtual() == NULL && channel_ != NULL) delete channel_;
  channel_ = NULL;
}
const ::mtproto::InputChannel& TL_channels_getMessages::channel() const {
  const ::mtproto::InputChannel* p = channel_;
  // @@protoc_insertion_point(field_get:mtproto.TL_channels_getMessages.channel)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::InputChannel*>(
      &::mtproto::_InputChannel_default_instance_);
}
::mtproto::InputChannel* TL_channels_getMessages::mutable_channel() {
  
  if (channel_ == NULL) {
    channel_ = new ::mtproto::InputChannel;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_channels_getMessages.channel)
  return channel_;
}
::mtproto::InputChannel* TL_channels_getMessages::release_channel() {
  // @@protoc_insertion_point(field_release:mtproto.TL_channels_getMessages.channel)
  
  ::mtproto::InputChannel* temp = channel_;
  channel_ = NULL;
  return temp;
}
void TL_channels_getMessages::set_allocated_channel(::mtproto::InputChannel* channel) {
  delete channel_;
  channel_ = channel;
  if (channel) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_channels_getMessages.channel)
}

// repeated .mtproto.InputMessage id = 2;
int TL_channels_getMessages::id_size() const {
  return id_.size();
}
void TL_channels_getMessages::clear_id() {
  id_.Clear();
}
const ::mtproto::InputMessage& TL_channels_getMessages::id(int index) const {
  // @@protoc_insertion_point(field_get:mtproto.TL_channels_getMessages.id)
  return id_.Get(index);
}
::mtproto::InputMessage* TL_channels_getMessages::mutable_id(int index) {
  // @@protoc_insertion_point(field_mutable:mtproto.TL_channels_getMessages.id)
  return id_.Mutable(index);
}
::mtproto::InputMessage* TL_channels_getMessages::add_id() {
  // @@protoc_insertion_point(field_add:mtproto.TL_channels_getMessages.id)
  return id_.Add();
}
::google::protobuf::RepeatedPtrField< ::mtproto::InputMessage >*
TL_channels_getMessages::mutable_id() {
  // @@protoc_insertion_point(field_mutable_list:mtproto.TL_channels_getMessages.id)
  return &id_;
}
const ::google::protobuf::RepeatedPtrField< ::mtproto::InputMessage >&
TL_channels_getMessages::id() const {
  // @@protoc_insertion_point(field_list:mtproto.TL_channels_getMessages.id)
  return id_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TL_channels_getParticipants::kChannelFieldNumber;
const int TL_channels_getParticipants::kFilterFieldNumber;
const int TL_channels_getParticipants::kOffsetFieldNumber;
const int TL_channels_getParticipants::kLimitFieldNumber;
const int TL_channels_getParticipants::kHashFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TL_channels_getParticipants::TL_channels_getParticipants()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.TL_channels_getParticipants)
}
TL_channels_getParticipants::TL_channels_getParticipants(const TL_channels_getParticipants& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_channel()) {
    channel_ = new ::mtproto::InputChannel(*from.channel_);
  } else {
    channel_ = NULL;
  }
  if (from.has_filter()) {
    filter_ = new ::mtproto::ChannelParticipantsFilter(*from.filter_);
  } else {
    filter_ = NULL;
  }
  ::memcpy(&offset_, &from.offset_,
    static_cast<size_t>(reinterpret_cast<char*>(&hash_) -
    reinterpret_cast<char*>(&offset_)) + sizeof(hash_));
  // @@protoc_insertion_point(copy_constructor:mtproto.TL_channels_getParticipants)
}

void TL_channels_getParticipants::SharedCtor() {
  ::memset(&channel_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&hash_) -
      reinterpret_cast<char*>(&channel_)) + sizeof(hash_));
  _cached_size_ = 0;
}

TL_channels_getParticipants::~TL_channels_getParticipants() {
  // @@protoc_insertion_point(destructor:mtproto.TL_channels_getParticipants)
  SharedDtor();
}

void TL_channels_getParticipants::SharedDtor() {
  if (this != internal_default_instance()) delete channel_;
  if (this != internal_default_instance()) delete filter_;
}

void TL_channels_getParticipants::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TL_channels_getParticipants::descriptor() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TL_channels_getParticipants& TL_channels_getParticipants::default_instance() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  return *internal_default_instance();
}

TL_channels_getParticipants* TL_channels_getParticipants::New(::google::protobuf::Arena* arena) const {
  TL_channels_getParticipants* n = new TL_channels_getParticipants;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TL_channels_getParticipants::Swap(TL_channels_getParticipants* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TL_channels_getParticipants::InternalSwap(TL_channels_getParticipants* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata TL_channels_getParticipants::GetMetadata() const {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TL_channels_getParticipants

// .mtproto.InputChannel channel = 1;
bool TL_channels_getParticipants::has_channel() const {
  return this != internal_default_instance() && channel_ != NULL;
}
void TL_channels_getParticipants::clear_channel() {
  if (GetArenaNoVirtual() == NULL && channel_ != NULL) delete channel_;
  channel_ = NULL;
}
const ::mtproto::InputChannel& TL_channels_getParticipants::channel() const {
  const ::mtproto::InputChannel* p = channel_;
  // @@protoc_insertion_point(field_get:mtproto.TL_channels_getParticipants.channel)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::InputChannel*>(
      &::mtproto::_InputChannel_default_instance_);
}
::mtproto::InputChannel* TL_channels_getParticipants::mutable_channel() {
  
  if (channel_ == NULL) {
    channel_ = new ::mtproto::InputChannel;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_channels_getParticipants.channel)
  return channel_;
}
::mtproto::InputChannel* TL_channels_getParticipants::release_channel() {
  // @@protoc_insertion_point(field_release:mtproto.TL_channels_getParticipants.channel)
  
  ::mtproto::InputChannel* temp = channel_;
  channel_ = NULL;
  return temp;
}
void TL_channels_getParticipants::set_allocated_channel(::mtproto::InputChannel* channel) {
  delete channel_;
  channel_ = channel;
  if (channel) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_channels_getParticipants.channel)
}

// .mtproto.ChannelParticipantsFilter filter = 2;
bool TL_channels_getParticipants::has_filter() const {
  return this != internal_default_instance() && filter_ != NULL;
}
void TL_channels_getParticipants::clear_filter() {
  if (GetArenaNoVirtual() == NULL && filter_ != NULL) delete filter_;
  filter_ = NULL;
}
const ::mtproto::ChannelParticipantsFilter& TL_channels_getParticipants::filter() const {
  const ::mtproto::ChannelParticipantsFilter* p = filter_;
  // @@protoc_insertion_point(field_get:mtproto.TL_channels_getParticipants.filter)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::ChannelParticipantsFilter*>(
      &::mtproto::_ChannelParticipantsFilter_default_instance_);
}
::mtproto::ChannelParticipantsFilter* TL_channels_getParticipants::mutable_filter() {
  
  if (filter_ == NULL) {
    filter_ = new ::mtproto::ChannelParticipantsFilter;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_channels_getParticipants.filter)
  return filter_;
}
::mtproto::ChannelParticipantsFilter* TL_channels_getParticipants::release_filter() {
  // @@protoc_insertion_point(field_release:mtproto.TL_channels_getParticipants.filter)
  
  ::mtproto::ChannelParticipantsFilter* temp = filter_;
  filter_ = NULL;
  return temp;
}
void TL_channels_getParticipants::set_allocated_filter(::mtproto::ChannelParticipantsFilter* filter) {
  delete filter_;
  filter_ = filter;
  if (filter) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_channels_getParticipants.filter)
}

// int32 offset = 3;
void TL_channels_getParticipants::clear_offset() {
  offset_ = 0;
}
::google::protobuf::int32 TL_channels_getParticipants::offset() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_channels_getParticipants.offset)
  return offset_;
}
void TL_channels_getParticipants::set_offset(::google::protobuf::int32 value) {
  
  offset_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_channels_getParticipants.offset)
}

// int32 limit = 4;
void TL_channels_getParticipants::clear_limit() {
  limit_ = 0;
}
::google::protobuf::int32 TL_channels_getParticipants::limit() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_channels_getParticipants.limit)
  return limit_;
}
void TL_channels_getParticipants::set_limit(::google::protobuf::int32 value) {
  
  limit_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_channels_getParticipants.limit)
}

// int32 hash = 5;
void TL_channels_getParticipants::clear_hash() {
  hash_ = 0;
}
::google::protobuf::int32 TL_channels_getParticipants::hash() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_channels_getParticipants.hash)
  return hash_;
}
void TL_channels_getParticipants::set_hash(::google::protobuf::int32 value) {
  
  hash_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_channels_getParticipants.hash)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TL_channels_getParticipant::kChannelFieldNumber;
const int TL_channels_getParticipant::kUserIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TL_channels_getParticipant::TL_channels_getParticipant()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.TL_channels_getParticipant)
}
TL_channels_getParticipant::TL_channels_getParticipant(const TL_channels_getParticipant& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_channel()) {
    channel_ = new ::mtproto::InputChannel(*from.channel_);
  } else {
    channel_ = NULL;
  }
  if (from.has_user_id()) {
    user_id_ = new ::mtproto::InputUser(*from.user_id_);
  } else {
    user_id_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:mtproto.TL_channels_getParticipant)
}

void TL_channels_getParticipant::SharedCtor() {
  ::memset(&channel_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&user_id_) -
      reinterpret_cast<char*>(&channel_)) + sizeof(user_id_));
  _cached_size_ = 0;
}

TL_channels_getParticipant::~TL_channels_getParticipant() {
  // @@protoc_insertion_point(destructor:mtproto.TL_channels_getParticipant)
  SharedDtor();
}

void TL_channels_getParticipant::SharedDtor() {
  if (this != internal_default_instance()) delete channel_;
  if (this != internal_default_instance()) delete user_id_;
}

void TL_channels_getParticipant::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TL_channels_getParticipant::descriptor() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TL_channels_getParticipant& TL_channels_getParticipant::default_instance() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  return *internal_default_instance();
}

TL_channels_getParticipant* TL_channels_getParticipant::New(::google::protobuf::Arena* arena) const {
  TL_channels_getParticipant* n = new TL_channels_getParticipant;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TL_channels_getParticipant::Swap(TL_channels_getParticipant* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TL_channels_getParticipant::InternalSwap(TL_channels_getParticipant* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata TL_channels_getParticipant::GetMetadata() const {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TL_channels_getParticipant

// .mtproto.InputChannel channel = 1;
bool TL_channels_getParticipant::has_channel() const {
  return this != internal_default_instance() && channel_ != NULL;
}
void TL_channels_getParticipant::clear_channel() {
  if (GetArenaNoVirtual() == NULL && channel_ != NULL) delete channel_;
  channel_ = NULL;
}
const ::mtproto::InputChannel& TL_channels_getParticipant::channel() const {
  const ::mtproto::InputChannel* p = channel_;
  // @@protoc_insertion_point(field_get:mtproto.TL_channels_getParticipant.channel)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::InputChannel*>(
      &::mtproto::_InputChannel_default_instance_);
}
::mtproto::InputChannel* TL_channels_getParticipant::mutable_channel() {
  
  if (channel_ == NULL) {
    channel_ = new ::mtproto::InputChannel;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_channels_getParticipant.channel)
  return channel_;
}
::mtproto::InputChannel* TL_channels_getParticipant::release_channel() {
  // @@protoc_insertion_point(field_release:mtproto.TL_channels_getParticipant.channel)
  
  ::mtproto::InputChannel* temp = channel_;
  channel_ = NULL;
  return temp;
}
void TL_channels_getParticipant::set_allocated_channel(::mtproto::InputChannel* channel) {
  delete channel_;
  channel_ = channel;
  if (channel) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_channels_getParticipant.channel)
}

// .mtproto.InputUser user_id = 2;
bool TL_channels_getParticipant::has_user_id() const {
  return this != internal_default_instance() && user_id_ != NULL;
}
void TL_channels_getParticipant::clear_user_id() {
  if (GetArenaNoVirtual() == NULL && user_id_ != NULL) delete user_id_;
  user_id_ = NULL;
}
const ::mtproto::InputUser& TL_channels_getParticipant::user_id() const {
  const ::mtproto::InputUser* p = user_id_;
  // @@protoc_insertion_point(field_get:mtproto.TL_channels_getParticipant.user_id)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::InputUser*>(
      &::mtproto::_InputUser_default_instance_);
}
::mtproto::InputUser* TL_channels_getParticipant::mutable_user_id() {
  
  if (user_id_ == NULL) {
    user_id_ = new ::mtproto::InputUser;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_channels_getParticipant.user_id)
  return user_id_;
}
::mtproto::InputUser* TL_channels_getParticipant::release_user_id() {
  // @@protoc_insertion_point(field_release:mtproto.TL_channels_getParticipant.user_id)
  
  ::mtproto::InputUser* temp = user_id_;
  user_id_ = NULL;
  return temp;
}
void TL_channels_getParticipant::set_allocated_user_id(::mtproto::InputUser* user_id) {
  delete user_id_;
  user_id_ = user_id;
  if (user_id) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_channels_getParticipant.user_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TL_channels_getChannels::kIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TL_channels_getChannels::TL_channels_getChannels()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.TL_channels_getChannels)
}
TL_channels_getChannels::TL_channels_getChannels(const TL_channels_getChannels& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      id_(from.id_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:mtproto.TL_channels_getChannels)
}

void TL_channels_getChannels::SharedCtor() {
  _cached_size_ = 0;
}

TL_channels_getChannels::~TL_channels_getChannels() {
  // @@protoc_insertion_point(destructor:mtproto.TL_channels_getChannels)
  SharedDtor();
}

void TL_channels_getChannels::SharedDtor() {
}

void TL_channels_getChannels::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TL_channels_getChannels::descriptor() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TL_channels_getChannels& TL_channels_getChannels::default_instance() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  return *internal_default_instance();
}

TL_channels_getChannels* TL_channels_getChannels::New(::google::protobuf::Arena* arena) const {
  TL_channels_getChannels* n = new TL_channels_getChannels;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TL_channels_getChannels::Swap(TL_channels_getChannels* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TL_channels_getChannels::InternalSwap(TL_channels_getChannels* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata TL_channels_getChannels::GetMetadata() const {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TL_channels_getChannels

// repeated .mtproto.InputChannel id = 1;
int TL_channels_getChannels::id_size() const {
  return id_.size();
}
void TL_channels_getChannels::clear_id() {
  id_.Clear();
}
const ::mtproto::InputChannel& TL_channels_getChannels::id(int index) const {
  // @@protoc_insertion_point(field_get:mtproto.TL_channels_getChannels.id)
  return id_.Get(index);
}
::mtproto::InputChannel* TL_channels_getChannels::mutable_id(int index) {
  // @@protoc_insertion_point(field_mutable:mtproto.TL_channels_getChannels.id)
  return id_.Mutable(index);
}
::mtproto::InputChannel* TL_channels_getChannels::add_id() {
  // @@protoc_insertion_point(field_add:mtproto.TL_channels_getChannels.id)
  return id_.Add();
}
::google::protobuf::RepeatedPtrField< ::mtproto::InputChannel >*
TL_channels_getChannels::mutable_id() {
  // @@protoc_insertion_point(field_mutable_list:mtproto.TL_channels_getChannels.id)
  return &id_;
}
const ::google::protobuf::RepeatedPtrField< ::mtproto::InputChannel >&
TL_channels_getChannels::id() const {
  // @@protoc_insertion_point(field_list:mtproto.TL_channels_getChannels.id)
  return id_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TL_channels_getFullChannel::kChannelFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TL_channels_getFullChannel::TL_channels_getFullChannel()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.TL_channels_getFullChannel)
}
TL_channels_getFullChannel::TL_channels_getFullChannel(const TL_channels_getFullChannel& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_channel()) {
    channel_ = new ::mtproto::InputChannel(*from.channel_);
  } else {
    channel_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:mtproto.TL_channels_getFullChannel)
}

void TL_channels_getFullChannel::SharedCtor() {
  channel_ = NULL;
  _cached_size_ = 0;
}

TL_channels_getFullChannel::~TL_channels_getFullChannel() {
  // @@protoc_insertion_point(destructor:mtproto.TL_channels_getFullChannel)
  SharedDtor();
}

void TL_channels_getFullChannel::SharedDtor() {
  if (this != internal_default_instance()) delete channel_;
}

void TL_channels_getFullChannel::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TL_channels_getFullChannel::descriptor() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TL_channels_getFullChannel& TL_channels_getFullChannel::default_instance() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  return *internal_default_instance();
}

TL_channels_getFullChannel* TL_channels_getFullChannel::New(::google::protobuf::Arena* arena) const {
  TL_channels_getFullChannel* n = new TL_channels_getFullChannel;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TL_channels_getFullChannel::Swap(TL_channels_getFullChannel* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TL_channels_getFullChannel::InternalSwap(TL_channels_getFullChannel* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata TL_channels_getFullChannel::GetMetadata() const {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TL_channels_getFullChannel

// .mtproto.InputChannel channel = 1;
bool TL_channels_getFullChannel::has_channel() const {
  return this != internal_default_instance() && channel_ != NULL;
}
void TL_channels_getFullChannel::clear_channel() {
  if (GetArenaNoVirtual() == NULL && channel_ != NULL) delete channel_;
  channel_ = NULL;
}
const ::mtproto::InputChannel& TL_channels_getFullChannel::channel() const {
  const ::mtproto::InputChannel* p = channel_;
  // @@protoc_insertion_point(field_get:mtproto.TL_channels_getFullChannel.channel)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::InputChannel*>(
      &::mtproto::_InputChannel_default_instance_);
}
::mtproto::InputChannel* TL_channels_getFullChannel::mutable_channel() {
  
  if (channel_ == NULL) {
    channel_ = new ::mtproto::InputChannel;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_channels_getFullChannel.channel)
  return channel_;
}
::mtproto::InputChannel* TL_channels_getFullChannel::release_channel() {
  // @@protoc_insertion_point(field_release:mtproto.TL_channels_getFullChannel.channel)
  
  ::mtproto::InputChannel* temp = channel_;
  channel_ = NULL;
  return temp;
}
void TL_channels_getFullChannel::set_allocated_channel(::mtproto::InputChannel* channel) {
  delete channel_;
  channel_ = channel;
  if (channel) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_channels_getFullChannel.channel)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TL_channels_createChannel::kBroadcastFieldNumber;
const int TL_channels_createChannel::kMegagroupFieldNumber;
const int TL_channels_createChannel::kTitleFieldNumber;
const int TL_channels_createChannel::kAboutFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TL_channels_createChannel::TL_channels_createChannel()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.TL_channels_createChannel)
}
TL_channels_createChannel::TL_channels_createChannel(const TL_channels_createChannel& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  title_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.title().size() > 0) {
    title_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.title_);
  }
  about_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.about().size() > 0) {
    about_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.about_);
  }
  ::memcpy(&broadcast_, &from.broadcast_,
    static_cast<size_t>(reinterpret_cast<char*>(&megagroup_) -
    reinterpret_cast<char*>(&broadcast_)) + sizeof(megagroup_));
  // @@protoc_insertion_point(copy_constructor:mtproto.TL_channels_createChannel)
}

void TL_channels_createChannel::SharedCtor() {
  title_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  about_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&broadcast_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&megagroup_) -
      reinterpret_cast<char*>(&broadcast_)) + sizeof(megagroup_));
  _cached_size_ = 0;
}

TL_channels_createChannel::~TL_channels_createChannel() {
  // @@protoc_insertion_point(destructor:mtproto.TL_channels_createChannel)
  SharedDtor();
}

void TL_channels_createChannel::SharedDtor() {
  title_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  about_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void TL_channels_createChannel::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TL_channels_createChannel::descriptor() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TL_channels_createChannel& TL_channels_createChannel::default_instance() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  return *internal_default_instance();
}

TL_channels_createChannel* TL_channels_createChannel::New(::google::protobuf::Arena* arena) const {
  TL_channels_createChannel* n = new TL_channels_createChannel;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TL_channels_createChannel::Swap(TL_channels_createChannel* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TL_channels_createChannel::InternalSwap(TL_channels_createChannel* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata TL_channels_createChannel::GetMetadata() const {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TL_channels_createChannel

// bool broadcast = 2;
void TL_channels_createChannel::clear_broadcast() {
  broadcast_ = false;
}
bool TL_channels_createChannel::broadcast() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_channels_createChannel.broadcast)
  return broadcast_;
}
void TL_channels_createChannel::set_broadcast(bool value) {
  
  broadcast_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_channels_createChannel.broadcast)
}

// bool megagroup = 3;
void TL_channels_createChannel::clear_megagroup() {
  megagroup_ = false;
}
bool TL_channels_createChannel::megagroup() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_channels_createChannel.megagroup)
  return megagroup_;
}
void TL_channels_createChannel::set_megagroup(bool value) {
  
  megagroup_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_channels_createChannel.megagroup)
}

// string title = 4;
void TL_channels_createChannel::clear_title() {
  title_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& TL_channels_createChannel::title() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_channels_createChannel.title)
  return title_.GetNoArena();
}
void TL_channels_createChannel::set_title(const ::std::string& value) {
  
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtproto.TL_channels_createChannel.title)
}
#if LANG_CXX11
void TL_channels_createChannel::set_title(::std::string&& value) {
  
  title_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mtproto.TL_channels_createChannel.title)
}
#endif
void TL_channels_createChannel::set_title(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtproto.TL_channels_createChannel.title)
}
void TL_channels_createChannel::set_title(const char* value, size_t size) {
  
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtproto.TL_channels_createChannel.title)
}
::std::string* TL_channels_createChannel::mutable_title() {
  
  // @@protoc_insertion_point(field_mutable:mtproto.TL_channels_createChannel.title)
  return title_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* TL_channels_createChannel::release_title() {
  // @@protoc_insertion_point(field_release:mtproto.TL_channels_createChannel.title)
  
  return title_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TL_channels_createChannel::set_allocated_title(::std::string* title) {
  if (title != NULL) {
    
  } else {
    
  }
  title_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), title);
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_channels_createChannel.title)
}

// string about = 5;
void TL_channels_createChannel::clear_about() {
  about_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& TL_channels_createChannel::about() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_channels_createChannel.about)
  return about_.GetNoArena();
}
void TL_channels_createChannel::set_about(const ::std::string& value) {
  
  about_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtproto.TL_channels_createChannel.about)
}
#if LANG_CXX11
void TL_channels_createChannel::set_about(::std::string&& value) {
  
  about_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mtproto.TL_channels_createChannel.about)
}
#endif
void TL_channels_createChannel::set_about(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  about_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtproto.TL_channels_createChannel.about)
}
void TL_channels_createChannel::set_about(const char* value, size_t size) {
  
  about_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtproto.TL_channels_createChannel.about)
}
::std::string* TL_channels_createChannel::mutable_about() {
  
  // @@protoc_insertion_point(field_mutable:mtproto.TL_channels_createChannel.about)
  return about_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* TL_channels_createChannel::release_about() {
  // @@protoc_insertion_point(field_release:mtproto.TL_channels_createChannel.about)
  
  return about_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TL_channels_createChannel::set_allocated_about(::std::string* about) {
  if (about != NULL) {
    
  } else {
    
  }
  about_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), about);
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_channels_createChannel.about)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TL_channels_editAbout::kChannelFieldNumber;
const int TL_channels_editAbout::kAboutFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TL_channels_editAbout::TL_channels_editAbout()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.TL_channels_editAbout)
}
TL_channels_editAbout::TL_channels_editAbout(const TL_channels_editAbout& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  about_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.about().size() > 0) {
    about_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.about_);
  }
  if (from.has_channel()) {
    channel_ = new ::mtproto::InputChannel(*from.channel_);
  } else {
    channel_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:mtproto.TL_channels_editAbout)
}

void TL_channels_editAbout::SharedCtor() {
  about_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  channel_ = NULL;
  _cached_size_ = 0;
}

TL_channels_editAbout::~TL_channels_editAbout() {
  // @@protoc_insertion_point(destructor:mtproto.TL_channels_editAbout)
  SharedDtor();
}

void TL_channels_editAbout::SharedDtor() {
  about_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete channel_;
}

void TL_channels_editAbout::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TL_channels_editAbout::descriptor() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TL_channels_editAbout& TL_channels_editAbout::default_instance() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  return *internal_default_instance();
}

TL_channels_editAbout* TL_channels_editAbout::New(::google::protobuf::Arena* arena) const {
  TL_channels_editAbout* n = new TL_channels_editAbout;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TL_channels_editAbout::Swap(TL_channels_editAbout* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TL_channels_editAbout::InternalSwap(TL_channels_editAbout* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata TL_channels_editAbout::GetMetadata() const {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TL_channels_editAbout

// .mtproto.InputChannel channel = 1;
bool TL_channels_editAbout::has_channel() const {
  return this != internal_default_instance() && channel_ != NULL;
}
void TL_channels_editAbout::clear_channel() {
  if (GetArenaNoVirtual() == NULL && channel_ != NULL) delete channel_;
  channel_ = NULL;
}
const ::mtproto::InputChannel& TL_channels_editAbout::channel() const {
  const ::mtproto::InputChannel* p = channel_;
  // @@protoc_insertion_point(field_get:mtproto.TL_channels_editAbout.channel)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::InputChannel*>(
      &::mtproto::_InputChannel_default_instance_);
}
::mtproto::InputChannel* TL_channels_editAbout::mutable_channel() {
  
  if (channel_ == NULL) {
    channel_ = new ::mtproto::InputChannel;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_channels_editAbout.channel)
  return channel_;
}
::mtproto::InputChannel* TL_channels_editAbout::release_channel() {
  // @@protoc_insertion_point(field_release:mtproto.TL_channels_editAbout.channel)
  
  ::mtproto::InputChannel* temp = channel_;
  channel_ = NULL;
  return temp;
}
void TL_channels_editAbout::set_allocated_channel(::mtproto::InputChannel* channel) {
  delete channel_;
  channel_ = channel;
  if (channel) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_channels_editAbout.channel)
}

// string about = 2;
void TL_channels_editAbout::clear_about() {
  about_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& TL_channels_editAbout::about() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_channels_editAbout.about)
  return about_.GetNoArena();
}
void TL_channels_editAbout::set_about(const ::std::string& value) {
  
  about_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtproto.TL_channels_editAbout.about)
}
#if LANG_CXX11
void TL_channels_editAbout::set_about(::std::string&& value) {
  
  about_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mtproto.TL_channels_editAbout.about)
}
#endif
void TL_channels_editAbout::set_about(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  about_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtproto.TL_channels_editAbout.about)
}
void TL_channels_editAbout::set_about(const char* value, size_t size) {
  
  about_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtproto.TL_channels_editAbout.about)
}
::std::string* TL_channels_editAbout::mutable_about() {
  
  // @@protoc_insertion_point(field_mutable:mtproto.TL_channels_editAbout.about)
  return about_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* TL_channels_editAbout::release_about() {
  // @@protoc_insertion_point(field_release:mtproto.TL_channels_editAbout.about)
  
  return about_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TL_channels_editAbout::set_allocated_about(::std::string* about) {
  if (about != NULL) {
    
  } else {
    
  }
  about_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), about);
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_channels_editAbout.about)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TL_channels_editAdmin::kChannelFieldNumber;
const int TL_channels_editAdmin::kUserIdFieldNumber;
const int TL_channels_editAdmin::kAdminRightsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TL_channels_editAdmin::TL_channels_editAdmin()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.TL_channels_editAdmin)
}
TL_channels_editAdmin::TL_channels_editAdmin(const TL_channels_editAdmin& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_channel()) {
    channel_ = new ::mtproto::InputChannel(*from.channel_);
  } else {
    channel_ = NULL;
  }
  if (from.has_user_id()) {
    user_id_ = new ::mtproto::InputUser(*from.user_id_);
  } else {
    user_id_ = NULL;
  }
  if (from.has_admin_rights()) {
    admin_rights_ = new ::mtproto::ChannelAdminRights(*from.admin_rights_);
  } else {
    admin_rights_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:mtproto.TL_channels_editAdmin)
}

void TL_channels_editAdmin::SharedCtor() {
  ::memset(&channel_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&admin_rights_) -
      reinterpret_cast<char*>(&channel_)) + sizeof(admin_rights_));
  _cached_size_ = 0;
}

TL_channels_editAdmin::~TL_channels_editAdmin() {
  // @@protoc_insertion_point(destructor:mtproto.TL_channels_editAdmin)
  SharedDtor();
}

void TL_channels_editAdmin::SharedDtor() {
  if (this != internal_default_instance()) delete channel_;
  if (this != internal_default_instance()) delete user_id_;
  if (this != internal_default_instance()) delete admin_rights_;
}

void TL_channels_editAdmin::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TL_channels_editAdmin::descriptor() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TL_channels_editAdmin& TL_channels_editAdmin::default_instance() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  return *internal_default_instance();
}

TL_channels_editAdmin* TL_channels_editAdmin::New(::google::protobuf::Arena* arena) const {
  TL_channels_editAdmin* n = new TL_channels_editAdmin;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TL_channels_editAdmin::Swap(TL_channels_editAdmin* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TL_channels_editAdmin::InternalSwap(TL_channels_editAdmin* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata TL_channels_editAdmin::GetMetadata() const {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TL_channels_editAdmin

// .mtproto.InputChannel channel = 1;
bool TL_channels_editAdmin::has_channel() const {
  return this != internal_default_instance() && channel_ != NULL;
}
void TL_channels_editAdmin::clear_channel() {
  if (GetArenaNoVirtual() == NULL && channel_ != NULL) delete channel_;
  channel_ = NULL;
}
const ::mtproto::InputChannel& TL_channels_editAdmin::channel() const {
  const ::mtproto::InputChannel* p = channel_;
  // @@protoc_insertion_point(field_get:mtproto.TL_channels_editAdmin.channel)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::InputChannel*>(
      &::mtproto::_InputChannel_default_instance_);
}
::mtproto::InputChannel* TL_channels_editAdmin::mutable_channel() {
  
  if (channel_ == NULL) {
    channel_ = new ::mtproto::InputChannel;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_channels_editAdmin.channel)
  return channel_;
}
::mtproto::InputChannel* TL_channels_editAdmin::release_channel() {
  // @@protoc_insertion_point(field_release:mtproto.TL_channels_editAdmin.channel)
  
  ::mtproto::InputChannel* temp = channel_;
  channel_ = NULL;
  return temp;
}
void TL_channels_editAdmin::set_allocated_channel(::mtproto::InputChannel* channel) {
  delete channel_;
  channel_ = channel;
  if (channel) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_channels_editAdmin.channel)
}

// .mtproto.InputUser user_id = 2;
bool TL_channels_editAdmin::has_user_id() const {
  return this != internal_default_instance() && user_id_ != NULL;
}
void TL_channels_editAdmin::clear_user_id() {
  if (GetArenaNoVirtual() == NULL && user_id_ != NULL) delete user_id_;
  user_id_ = NULL;
}
const ::mtproto::InputUser& TL_channels_editAdmin::user_id() const {
  const ::mtproto::InputUser* p = user_id_;
  // @@protoc_insertion_point(field_get:mtproto.TL_channels_editAdmin.user_id)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::InputUser*>(
      &::mtproto::_InputUser_default_instance_);
}
::mtproto::InputUser* TL_channels_editAdmin::mutable_user_id() {
  
  if (user_id_ == NULL) {
    user_id_ = new ::mtproto::InputUser;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_channels_editAdmin.user_id)
  return user_id_;
}
::mtproto::InputUser* TL_channels_editAdmin::release_user_id() {
  // @@protoc_insertion_point(field_release:mtproto.TL_channels_editAdmin.user_id)
  
  ::mtproto::InputUser* temp = user_id_;
  user_id_ = NULL;
  return temp;
}
void TL_channels_editAdmin::set_allocated_user_id(::mtproto::InputUser* user_id) {
  delete user_id_;
  user_id_ = user_id;
  if (user_id) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_channels_editAdmin.user_id)
}

// .mtproto.ChannelAdminRights admin_rights = 3;
bool TL_channels_editAdmin::has_admin_rights() const {
  return this != internal_default_instance() && admin_rights_ != NULL;
}
void TL_channels_editAdmin::clear_admin_rights() {
  if (GetArenaNoVirtual() == NULL && admin_rights_ != NULL) delete admin_rights_;
  admin_rights_ = NULL;
}
const ::mtproto::ChannelAdminRights& TL_channels_editAdmin::admin_rights() const {
  const ::mtproto::ChannelAdminRights* p = admin_rights_;
  // @@protoc_insertion_point(field_get:mtproto.TL_channels_editAdmin.admin_rights)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::ChannelAdminRights*>(
      &::mtproto::_ChannelAdminRights_default_instance_);
}
::mtproto::ChannelAdminRights* TL_channels_editAdmin::mutable_admin_rights() {
  
  if (admin_rights_ == NULL) {
    admin_rights_ = new ::mtproto::ChannelAdminRights;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_channels_editAdmin.admin_rights)
  return admin_rights_;
}
::mtproto::ChannelAdminRights* TL_channels_editAdmin::release_admin_rights() {
  // @@protoc_insertion_point(field_release:mtproto.TL_channels_editAdmin.admin_rights)
  
  ::mtproto::ChannelAdminRights* temp = admin_rights_;
  admin_rights_ = NULL;
  return temp;
}
void TL_channels_editAdmin::set_allocated_admin_rights(::mtproto::ChannelAdminRights* admin_rights) {
  delete admin_rights_;
  admin_rights_ = admin_rights;
  if (admin_rights) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_channels_editAdmin.admin_rights)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TL_channels_editTitle::kChannelFieldNumber;
const int TL_channels_editTitle::kTitleFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TL_channels_editTitle::TL_channels_editTitle()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.TL_channels_editTitle)
}
TL_channels_editTitle::TL_channels_editTitle(const TL_channels_editTitle& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  title_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.title().size() > 0) {
    title_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.title_);
  }
  if (from.has_channel()) {
    channel_ = new ::mtproto::InputChannel(*from.channel_);
  } else {
    channel_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:mtproto.TL_channels_editTitle)
}

void TL_channels_editTitle::SharedCtor() {
  title_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  channel_ = NULL;
  _cached_size_ = 0;
}

TL_channels_editTitle::~TL_channels_editTitle() {
  // @@protoc_insertion_point(destructor:mtproto.TL_channels_editTitle)
  SharedDtor();
}

void TL_channels_editTitle::SharedDtor() {
  title_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete channel_;
}

void TL_channels_editTitle::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TL_channels_editTitle::descriptor() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TL_channels_editTitle& TL_channels_editTitle::default_instance() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  return *internal_default_instance();
}

TL_channels_editTitle* TL_channels_editTitle::New(::google::protobuf::Arena* arena) const {
  TL_channels_editTitle* n = new TL_channels_editTitle;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TL_channels_editTitle::Swap(TL_channels_editTitle* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TL_channels_editTitle::InternalSwap(TL_channels_editTitle* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata TL_channels_editTitle::GetMetadata() const {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TL_channels_editTitle

// .mtproto.InputChannel channel = 1;
bool TL_channels_editTitle::has_channel() const {
  return this != internal_default_instance() && channel_ != NULL;
}
void TL_channels_editTitle::clear_channel() {
  if (GetArenaNoVirtual() == NULL && channel_ != NULL) delete channel_;
  channel_ = NULL;
}
const ::mtproto::InputChannel& TL_channels_editTitle::channel() const {
  const ::mtproto::InputChannel* p = channel_;
  // @@protoc_insertion_point(field_get:mtproto.TL_channels_editTitle.channel)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::InputChannel*>(
      &::mtproto::_InputChannel_default_instance_);
}
::mtproto::InputChannel* TL_channels_editTitle::mutable_channel() {
  
  if (channel_ == NULL) {
    channel_ = new ::mtproto::InputChannel;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_channels_editTitle.channel)
  return channel_;
}
::mtproto::InputChannel* TL_channels_editTitle::release_channel() {
  // @@protoc_insertion_point(field_release:mtproto.TL_channels_editTitle.channel)
  
  ::mtproto::InputChannel* temp = channel_;
  channel_ = NULL;
  return temp;
}
void TL_channels_editTitle::set_allocated_channel(::mtproto::InputChannel* channel) {
  delete channel_;
  channel_ = channel;
  if (channel) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_channels_editTitle.channel)
}

// string title = 2;
void TL_channels_editTitle::clear_title() {
  title_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& TL_channels_editTitle::title() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_channels_editTitle.title)
  return title_.GetNoArena();
}
void TL_channels_editTitle::set_title(const ::std::string& value) {
  
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtproto.TL_channels_editTitle.title)
}
#if LANG_CXX11
void TL_channels_editTitle::set_title(::std::string&& value) {
  
  title_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mtproto.TL_channels_editTitle.title)
}
#endif
void TL_channels_editTitle::set_title(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtproto.TL_channels_editTitle.title)
}
void TL_channels_editTitle::set_title(const char* value, size_t size) {
  
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtproto.TL_channels_editTitle.title)
}
::std::string* TL_channels_editTitle::mutable_title() {
  
  // @@protoc_insertion_point(field_mutable:mtproto.TL_channels_editTitle.title)
  return title_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* TL_channels_editTitle::release_title() {
  // @@protoc_insertion_point(field_release:mtproto.TL_channels_editTitle.title)
  
  return title_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TL_channels_editTitle::set_allocated_title(::std::string* title) {
  if (title != NULL) {
    
  } else {
    
  }
  title_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), title);
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_channels_editTitle.title)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TL_channels_editPhoto::kChannelFieldNumber;
const int TL_channels_editPhoto::kPhotoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TL_channels_editPhoto::TL_channels_editPhoto()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.TL_channels_editPhoto)
}
TL_channels_editPhoto::TL_channels_editPhoto(const TL_channels_editPhoto& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_channel()) {
    channel_ = new ::mtproto::InputChannel(*from.channel_);
  } else {
    channel_ = NULL;
  }
  if (from.has_photo()) {
    photo_ = new ::mtproto::InputChatPhoto(*from.photo_);
  } else {
    photo_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:mtproto.TL_channels_editPhoto)
}

void TL_channels_editPhoto::SharedCtor() {
  ::memset(&channel_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&photo_) -
      reinterpret_cast<char*>(&channel_)) + sizeof(photo_));
  _cached_size_ = 0;
}

TL_channels_editPhoto::~TL_channels_editPhoto() {
  // @@protoc_insertion_point(destructor:mtproto.TL_channels_editPhoto)
  SharedDtor();
}

void TL_channels_editPhoto::SharedDtor() {
  if (this != internal_default_instance()) delete channel_;
  if (this != internal_default_instance()) delete photo_;
}

void TL_channels_editPhoto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TL_channels_editPhoto::descriptor() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TL_channels_editPhoto& TL_channels_editPhoto::default_instance() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  return *internal_default_instance();
}

TL_channels_editPhoto* TL_channels_editPhoto::New(::google::protobuf::Arena* arena) const {
  TL_channels_editPhoto* n = new TL_channels_editPhoto;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TL_channels_editPhoto::Swap(TL_channels_editPhoto* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TL_channels_editPhoto::InternalSwap(TL_channels_editPhoto* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata TL_channels_editPhoto::GetMetadata() const {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TL_channels_editPhoto

// .mtproto.InputChannel channel = 1;
bool TL_channels_editPhoto::has_channel() const {
  return this != internal_default_instance() && channel_ != NULL;
}
void TL_channels_editPhoto::clear_channel() {
  if (GetArenaNoVirtual() == NULL && channel_ != NULL) delete channel_;
  channel_ = NULL;
}
const ::mtproto::InputChannel& TL_channels_editPhoto::channel() const {
  const ::mtproto::InputChannel* p = channel_;
  // @@protoc_insertion_point(field_get:mtproto.TL_channels_editPhoto.channel)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::InputChannel*>(
      &::mtproto::_InputChannel_default_instance_);
}
::mtproto::InputChannel* TL_channels_editPhoto::mutable_channel() {
  
  if (channel_ == NULL) {
    channel_ = new ::mtproto::InputChannel;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_channels_editPhoto.channel)
  return channel_;
}
::mtproto::InputChannel* TL_channels_editPhoto::release_channel() {
  // @@protoc_insertion_point(field_release:mtproto.TL_channels_editPhoto.channel)
  
  ::mtproto::InputChannel* temp = channel_;
  channel_ = NULL;
  return temp;
}
void TL_channels_editPhoto::set_allocated_channel(::mtproto::InputChannel* channel) {
  delete channel_;
  channel_ = channel;
  if (channel) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_channels_editPhoto.channel)
}

// .mtproto.InputChatPhoto photo = 2;
bool TL_channels_editPhoto::has_photo() const {
  return this != internal_default_instance() && photo_ != NULL;
}
void TL_channels_editPhoto::clear_photo() {
  if (GetArenaNoVirtual() == NULL && photo_ != NULL) delete photo_;
  photo_ = NULL;
}
const ::mtproto::InputChatPhoto& TL_channels_editPhoto::photo() const {
  const ::mtproto::InputChatPhoto* p = photo_;
  // @@protoc_insertion_point(field_get:mtproto.TL_channels_editPhoto.photo)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::InputChatPhoto*>(
      &::mtproto::_InputChatPhoto_default_instance_);
}
::mtproto::InputChatPhoto* TL_channels_editPhoto::mutable_photo() {
  
  if (photo_ == NULL) {
    photo_ = new ::mtproto::InputChatPhoto;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_channels_editPhoto.photo)
  return photo_;
}
::mtproto::InputChatPhoto* TL_channels_editPhoto::release_photo() {
  // @@protoc_insertion_point(field_release:mtproto.TL_channels_editPhoto.photo)
  
  ::mtproto::InputChatPhoto* temp = photo_;
  photo_ = NULL;
  return temp;
}
void TL_channels_editPhoto::set_allocated_photo(::mtproto::InputChatPhoto* photo) {
  delete photo_;
  photo_ = photo;
  if (photo) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_channels_editPhoto.photo)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TL_channels_checkUsername::kChannelFieldNumber;
const int TL_channels_checkUsername::kUsernameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TL_channels_checkUsername::TL_channels_checkUsername()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.TL_channels_checkUsername)
}
TL_channels_checkUsername::TL_channels_checkUsername(const TL_channels_checkUsername& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.username().size() > 0) {
    username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.username_);
  }
  if (from.has_channel()) {
    channel_ = new ::mtproto::InputChannel(*from.channel_);
  } else {
    channel_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:mtproto.TL_channels_checkUsername)
}

void TL_channels_checkUsername::SharedCtor() {
  username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  channel_ = NULL;
  _cached_size_ = 0;
}

TL_channels_checkUsername::~TL_channels_checkUsername() {
  // @@protoc_insertion_point(destructor:mtproto.TL_channels_checkUsername)
  SharedDtor();
}

void TL_channels_checkUsername::SharedDtor() {
  username_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete channel_;
}

void TL_channels_checkUsername::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TL_channels_checkUsername::descriptor() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TL_channels_checkUsername& TL_channels_checkUsername::default_instance() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  return *internal_default_instance();
}

TL_channels_checkUsername* TL_channels_checkUsername::New(::google::protobuf::Arena* arena) const {
  TL_channels_checkUsername* n = new TL_channels_checkUsername;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TL_channels_checkUsername::Swap(TL_channels_checkUsername* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TL_channels_checkUsername::InternalSwap(TL_channels_checkUsername* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata TL_channels_checkUsername::GetMetadata() const {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TL_channels_checkUsername

// .mtproto.InputChannel channel = 1;
bool TL_channels_checkUsername::has_channel() const {
  return this != internal_default_instance() && channel_ != NULL;
}
void TL_channels_checkUsername::clear_channel() {
  if (GetArenaNoVirtual() == NULL && channel_ != NULL) delete channel_;
  channel_ = NULL;
}
const ::mtproto::InputChannel& TL_channels_checkUsername::channel() const {
  const ::mtproto::InputChannel* p = channel_;
  // @@protoc_insertion_point(field_get:mtproto.TL_channels_checkUsername.channel)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::InputChannel*>(
      &::mtproto::_InputChannel_default_instance_);
}
::mtproto::InputChannel* TL_channels_checkUsername::mutable_channel() {
  
  if (channel_ == NULL) {
    channel_ = new ::mtproto::InputChannel;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_channels_checkUsername.channel)
  return channel_;
}
::mtproto::InputChannel* TL_channels_checkUsername::release_channel() {
  // @@protoc_insertion_point(field_release:mtproto.TL_channels_checkUsername.channel)
  
  ::mtproto::InputChannel* temp = channel_;
  channel_ = NULL;
  return temp;
}
void TL_channels_checkUsername::set_allocated_channel(::mtproto::InputChannel* channel) {
  delete channel_;
  channel_ = channel;
  if (channel) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_channels_checkUsername.channel)
}

// string username = 2;
void TL_channels_checkUsername::clear_username() {
  username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& TL_channels_checkUsername::username() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_channels_checkUsername.username)
  return username_.GetNoArena();
}
void TL_channels_checkUsername::set_username(const ::std::string& value) {
  
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtproto.TL_channels_checkUsername.username)
}
#if LANG_CXX11
void TL_channels_checkUsername::set_username(::std::string&& value) {
  
  username_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mtproto.TL_channels_checkUsername.username)
}
#endif
void TL_channels_checkUsername::set_username(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtproto.TL_channels_checkUsername.username)
}
void TL_channels_checkUsername::set_username(const char* value, size_t size) {
  
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtproto.TL_channels_checkUsername.username)
}
::std::string* TL_channels_checkUsername::mutable_username() {
  
  // @@protoc_insertion_point(field_mutable:mtproto.TL_channels_checkUsername.username)
  return username_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* TL_channels_checkUsername::release_username() {
  // @@protoc_insertion_point(field_release:mtproto.TL_channels_checkUsername.username)
  
  return username_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TL_channels_checkUsername::set_allocated_username(::std::string* username) {
  if (username != NULL) {
    
  } else {
    
  }
  username_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), username);
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_channels_checkUsername.username)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TL_channels_updateUsername::kChannelFieldNumber;
const int TL_channels_updateUsername::kUsernameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TL_channels_updateUsername::TL_channels_updateUsername()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.TL_channels_updateUsername)
}
TL_channels_updateUsername::TL_channels_updateUsername(const TL_channels_updateUsername& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.username().size() > 0) {
    username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.username_);
  }
  if (from.has_channel()) {
    channel_ = new ::mtproto::InputChannel(*from.channel_);
  } else {
    channel_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:mtproto.TL_channels_updateUsername)
}

void TL_channels_updateUsername::SharedCtor() {
  username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  channel_ = NULL;
  _cached_size_ = 0;
}

TL_channels_updateUsername::~TL_channels_updateUsername() {
  // @@protoc_insertion_point(destructor:mtproto.TL_channels_updateUsername)
  SharedDtor();
}

void TL_channels_updateUsername::SharedDtor() {
  username_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete channel_;
}

void TL_channels_updateUsername::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TL_channels_updateUsername::descriptor() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TL_channels_updateUsername& TL_channels_updateUsername::default_instance() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  return *internal_default_instance();
}

TL_channels_updateUsername* TL_channels_updateUsername::New(::google::protobuf::Arena* arena) const {
  TL_channels_updateUsername* n = new TL_channels_updateUsername;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TL_channels_updateUsername::Swap(TL_channels_updateUsername* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TL_channels_updateUsername::InternalSwap(TL_channels_updateUsername* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata TL_channels_updateUsername::GetMetadata() const {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TL_channels_updateUsername

// .mtproto.InputChannel channel = 1;
bool TL_channels_updateUsername::has_channel() const {
  return this != internal_default_instance() && channel_ != NULL;
}
void TL_channels_updateUsername::clear_channel() {
  if (GetArenaNoVirtual() == NULL && channel_ != NULL) delete channel_;
  channel_ = NULL;
}
const ::mtproto::InputChannel& TL_channels_updateUsername::channel() const {
  const ::mtproto::InputChannel* p = channel_;
  // @@protoc_insertion_point(field_get:mtproto.TL_channels_updateUsername.channel)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::InputChannel*>(
      &::mtproto::_InputChannel_default_instance_);
}
::mtproto::InputChannel* TL_channels_updateUsername::mutable_channel() {
  
  if (channel_ == NULL) {
    channel_ = new ::mtproto::InputChannel;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_channels_updateUsername.channel)
  return channel_;
}
::mtproto::InputChannel* TL_channels_updateUsername::release_channel() {
  // @@protoc_insertion_point(field_release:mtproto.TL_channels_updateUsername.channel)
  
  ::mtproto::InputChannel* temp = channel_;
  channel_ = NULL;
  return temp;
}
void TL_channels_updateUsername::set_allocated_channel(::mtproto::InputChannel* channel) {
  delete channel_;
  channel_ = channel;
  if (channel) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_channels_updateUsername.channel)
}

// string username = 2;
void TL_channels_updateUsername::clear_username() {
  username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& TL_channels_updateUsername::username() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_channels_updateUsername.username)
  return username_.GetNoArena();
}
void TL_channels_updateUsername::set_username(const ::std::string& value) {
  
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtproto.TL_channels_updateUsername.username)
}
#if LANG_CXX11
void TL_channels_updateUsername::set_username(::std::string&& value) {
  
  username_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mtproto.TL_channels_updateUsername.username)
}
#endif
void TL_channels_updateUsername::set_username(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtproto.TL_channels_updateUsername.username)
}
void TL_channels_updateUsername::set_username(const char* value, size_t size) {
  
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtproto.TL_channels_updateUsername.username)
}
::std::string* TL_channels_updateUsername::mutable_username() {
  
  // @@protoc_insertion_point(field_mutable:mtproto.TL_channels_updateUsername.username)
  return username_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* TL_channels_updateUsername::release_username() {
  // @@protoc_insertion_point(field_release:mtproto.TL_channels_updateUsername.username)
  
  return username_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TL_channels_updateUsername::set_allocated_username(::std::string* username) {
  if (username != NULL) {
    
  } else {
    
  }
  username_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), username);
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_channels_updateUsername.username)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TL_channels_joinChannel::kChannelFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TL_channels_joinChannel::TL_channels_joinChannel()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.TL_channels_joinChannel)
}
TL_channels_joinChannel::TL_channels_joinChannel(const TL_channels_joinChannel& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_channel()) {
    channel_ = new ::mtproto::InputChannel(*from.channel_);
  } else {
    channel_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:mtproto.TL_channels_joinChannel)
}

void TL_channels_joinChannel::SharedCtor() {
  channel_ = NULL;
  _cached_size_ = 0;
}

TL_channels_joinChannel::~TL_channels_joinChannel() {
  // @@protoc_insertion_point(destructor:mtproto.TL_channels_joinChannel)
  SharedDtor();
}

void TL_channels_joinChannel::SharedDtor() {
  if (this != internal_default_instance()) delete channel_;
}

void TL_channels_joinChannel::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TL_channels_joinChannel::descriptor() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TL_channels_joinChannel& TL_channels_joinChannel::default_instance() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  return *internal_default_instance();
}

TL_channels_joinChannel* TL_channels_joinChannel::New(::google::protobuf::Arena* arena) const {
  TL_channels_joinChannel* n = new TL_channels_joinChannel;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TL_channels_joinChannel::Swap(TL_channels_joinChannel* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TL_channels_joinChannel::InternalSwap(TL_channels_joinChannel* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata TL_channels_joinChannel::GetMetadata() const {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TL_channels_joinChannel

// .mtproto.InputChannel channel = 1;
bool TL_channels_joinChannel::has_channel() const {
  return this != internal_default_instance() && channel_ != NULL;
}
void TL_channels_joinChannel::clear_channel() {
  if (GetArenaNoVirtual() == NULL && channel_ != NULL) delete channel_;
  channel_ = NULL;
}
const ::mtproto::InputChannel& TL_channels_joinChannel::channel() const {
  const ::mtproto::InputChannel* p = channel_;
  // @@protoc_insertion_point(field_get:mtproto.TL_channels_joinChannel.channel)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::InputChannel*>(
      &::mtproto::_InputChannel_default_instance_);
}
::mtproto::InputChannel* TL_channels_joinChannel::mutable_channel() {
  
  if (channel_ == NULL) {
    channel_ = new ::mtproto::InputChannel;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_channels_joinChannel.channel)
  return channel_;
}
::mtproto::InputChannel* TL_channels_joinChannel::release_channel() {
  // @@protoc_insertion_point(field_release:mtproto.TL_channels_joinChannel.channel)
  
  ::mtproto::InputChannel* temp = channel_;
  channel_ = NULL;
  return temp;
}
void TL_channels_joinChannel::set_allocated_channel(::mtproto::InputChannel* channel) {
  delete channel_;
  channel_ = channel;
  if (channel) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_channels_joinChannel.channel)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TL_channels_leaveChannel::kChannelFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TL_channels_leaveChannel::TL_channels_leaveChannel()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.TL_channels_leaveChannel)
}
TL_channels_leaveChannel::TL_channels_leaveChannel(const TL_channels_leaveChannel& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_channel()) {
    channel_ = new ::mtproto::InputChannel(*from.channel_);
  } else {
    channel_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:mtproto.TL_channels_leaveChannel)
}

void TL_channels_leaveChannel::SharedCtor() {
  channel_ = NULL;
  _cached_size_ = 0;
}

TL_channels_leaveChannel::~TL_channels_leaveChannel() {
  // @@protoc_insertion_point(destructor:mtproto.TL_channels_leaveChannel)
  SharedDtor();
}

void TL_channels_leaveChannel::SharedDtor() {
  if (this != internal_default_instance()) delete channel_;
}

void TL_channels_leaveChannel::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TL_channels_leaveChannel::descriptor() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TL_channels_leaveChannel& TL_channels_leaveChannel::default_instance() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  return *internal_default_instance();
}

TL_channels_leaveChannel* TL_channels_leaveChannel::New(::google::protobuf::Arena* arena) const {
  TL_channels_leaveChannel* n = new TL_channels_leaveChannel;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TL_channels_leaveChannel::Swap(TL_channels_leaveChannel* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TL_channels_leaveChannel::InternalSwap(TL_channels_leaveChannel* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata TL_channels_leaveChannel::GetMetadata() const {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TL_channels_leaveChannel

// .mtproto.InputChannel channel = 1;
bool TL_channels_leaveChannel::has_channel() const {
  return this != internal_default_instance() && channel_ != NULL;
}
void TL_channels_leaveChannel::clear_channel() {
  if (GetArenaNoVirtual() == NULL && channel_ != NULL) delete channel_;
  channel_ = NULL;
}
const ::mtproto::InputChannel& TL_channels_leaveChannel::channel() const {
  const ::mtproto::InputChannel* p = channel_;
  // @@protoc_insertion_point(field_get:mtproto.TL_channels_leaveChannel.channel)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::InputChannel*>(
      &::mtproto::_InputChannel_default_instance_);
}
::mtproto::InputChannel* TL_channels_leaveChannel::mutable_channel() {
  
  if (channel_ == NULL) {
    channel_ = new ::mtproto::InputChannel;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_channels_leaveChannel.channel)
  return channel_;
}
::mtproto::InputChannel* TL_channels_leaveChannel::release_channel() {
  // @@protoc_insertion_point(field_release:mtproto.TL_channels_leaveChannel.channel)
  
  ::mtproto::InputChannel* temp = channel_;
  channel_ = NULL;
  return temp;
}
void TL_channels_leaveChannel::set_allocated_channel(::mtproto::InputChannel* channel) {
  delete channel_;
  channel_ = channel;
  if (channel) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_channels_leaveChannel.channel)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TL_channels_inviteToChannel::kChannelFieldNumber;
const int TL_channels_inviteToChannel::kUsersFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TL_channels_inviteToChannel::TL_channels_inviteToChannel()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.TL_channels_inviteToChannel)
}
TL_channels_inviteToChannel::TL_channels_inviteToChannel(const TL_channels_inviteToChannel& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      users_(from.users_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_channel()) {
    channel_ = new ::mtproto::InputChannel(*from.channel_);
  } else {
    channel_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:mtproto.TL_channels_inviteToChannel)
}

void TL_channels_inviteToChannel::SharedCtor() {
  channel_ = NULL;
  _cached_size_ = 0;
}

TL_channels_inviteToChannel::~TL_channels_inviteToChannel() {
  // @@protoc_insertion_point(destructor:mtproto.TL_channels_inviteToChannel)
  SharedDtor();
}

void TL_channels_inviteToChannel::SharedDtor() {
  if (this != internal_default_instance()) delete channel_;
}

void TL_channels_inviteToChannel::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TL_channels_inviteToChannel::descriptor() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TL_channels_inviteToChannel& TL_channels_inviteToChannel::default_instance() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  return *internal_default_instance();
}

TL_channels_inviteToChannel* TL_channels_inviteToChannel::New(::google::protobuf::Arena* arena) const {
  TL_channels_inviteToChannel* n = new TL_channels_inviteToChannel;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TL_channels_inviteToChannel::Swap(TL_channels_inviteToChannel* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TL_channels_inviteToChannel::InternalSwap(TL_channels_inviteToChannel* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata TL_channels_inviteToChannel::GetMetadata() const {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TL_channels_inviteToChannel

// .mtproto.InputChannel channel = 1;
bool TL_channels_inviteToChannel::has_channel() const {
  return this != internal_default_instance() && channel_ != NULL;
}
void TL_channels_inviteToChannel::clear_channel() {
  if (GetArenaNoVirtual() == NULL && channel_ != NULL) delete channel_;
  channel_ = NULL;
}
const ::mtproto::InputChannel& TL_channels_inviteToChannel::channel() const {
  const ::mtproto::InputChannel* p = channel_;
  // @@protoc_insertion_point(field_get:mtproto.TL_channels_inviteToChannel.channel)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::InputChannel*>(
      &::mtproto::_InputChannel_default_instance_);
}
::mtproto::InputChannel* TL_channels_inviteToChannel::mutable_channel() {
  
  if (channel_ == NULL) {
    channel_ = new ::mtproto::InputChannel;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_channels_inviteToChannel.channel)
  return channel_;
}
::mtproto::InputChannel* TL_channels_inviteToChannel::release_channel() {
  // @@protoc_insertion_point(field_release:mtproto.TL_channels_inviteToChannel.channel)
  
  ::mtproto::InputChannel* temp = channel_;
  channel_ = NULL;
  return temp;
}
void TL_channels_inviteToChannel::set_allocated_channel(::mtproto::InputChannel* channel) {
  delete channel_;
  channel_ = channel;
  if (channel) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_channels_inviteToChannel.channel)
}

// repeated .mtproto.InputUser users = 2;
int TL_channels_inviteToChannel::users_size() const {
  return users_.size();
}
void TL_channels_inviteToChannel::clear_users() {
  users_.Clear();
}
const ::mtproto::InputUser& TL_channels_inviteToChannel::users(int index) const {
  // @@protoc_insertion_point(field_get:mtproto.TL_channels_inviteToChannel.users)
  return users_.Get(index);
}
::mtproto::InputUser* TL_channels_inviteToChannel::mutable_users(int index) {
  // @@protoc_insertion_point(field_mutable:mtproto.TL_channels_inviteToChannel.users)
  return users_.Mutable(index);
}
::mtproto::InputUser* TL_channels_inviteToChannel::add_users() {
  // @@protoc_insertion_point(field_add:mtproto.TL_channels_inviteToChannel.users)
  return users_.Add();
}
::google::protobuf::RepeatedPtrField< ::mtproto::InputUser >*
TL_channels_inviteToChannel::mutable_users() {
  // @@protoc_insertion_point(field_mutable_list:mtproto.TL_channels_inviteToChannel.users)
  return &users_;
}
const ::google::protobuf::RepeatedPtrField< ::mtproto::InputUser >&
TL_channels_inviteToChannel::users() const {
  // @@protoc_insertion_point(field_list:mtproto.TL_channels_inviteToChannel.users)
  return users_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TL_channels_exportInvite::kChannelFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TL_channels_exportInvite::TL_channels_exportInvite()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.TL_channels_exportInvite)
}
TL_channels_exportInvite::TL_channels_exportInvite(const TL_channels_exportInvite& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_channel()) {
    channel_ = new ::mtproto::InputChannel(*from.channel_);
  } else {
    channel_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:mtproto.TL_channels_exportInvite)
}

void TL_channels_exportInvite::SharedCtor() {
  channel_ = NULL;
  _cached_size_ = 0;
}

TL_channels_exportInvite::~TL_channels_exportInvite() {
  // @@protoc_insertion_point(destructor:mtproto.TL_channels_exportInvite)
  SharedDtor();
}

void TL_channels_exportInvite::SharedDtor() {
  if (this != internal_default_instance()) delete channel_;
}

void TL_channels_exportInvite::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TL_channels_exportInvite::descriptor() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TL_channels_exportInvite& TL_channels_exportInvite::default_instance() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  return *internal_default_instance();
}

TL_channels_exportInvite* TL_channels_exportInvite::New(::google::protobuf::Arena* arena) const {
  TL_channels_exportInvite* n = new TL_channels_exportInvite;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TL_channels_exportInvite::Swap(TL_channels_exportInvite* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TL_channels_exportInvite::InternalSwap(TL_channels_exportInvite* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata TL_channels_exportInvite::GetMetadata() const {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TL_channels_exportInvite

// .mtproto.InputChannel channel = 1;
bool TL_channels_exportInvite::has_channel() const {
  return this != internal_default_instance() && channel_ != NULL;
}
void TL_channels_exportInvite::clear_channel() {
  if (GetArenaNoVirtual() == NULL && channel_ != NULL) delete channel_;
  channel_ = NULL;
}
const ::mtproto::InputChannel& TL_channels_exportInvite::channel() const {
  const ::mtproto::InputChannel* p = channel_;
  // @@protoc_insertion_point(field_get:mtproto.TL_channels_exportInvite.channel)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::InputChannel*>(
      &::mtproto::_InputChannel_default_instance_);
}
::mtproto::InputChannel* TL_channels_exportInvite::mutable_channel() {
  
  if (channel_ == NULL) {
    channel_ = new ::mtproto::InputChannel;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_channels_exportInvite.channel)
  return channel_;
}
::mtproto::InputChannel* TL_channels_exportInvite::release_channel() {
  // @@protoc_insertion_point(field_release:mtproto.TL_channels_exportInvite.channel)
  
  ::mtproto::InputChannel* temp = channel_;
  channel_ = NULL;
  return temp;
}
void TL_channels_exportInvite::set_allocated_channel(::mtproto::InputChannel* channel) {
  delete channel_;
  channel_ = channel;
  if (channel) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_channels_exportInvite.channel)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TL_channels_deleteChannel::kChannelFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TL_channels_deleteChannel::TL_channels_deleteChannel()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.TL_channels_deleteChannel)
}
TL_channels_deleteChannel::TL_channels_deleteChannel(const TL_channels_deleteChannel& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_channel()) {
    channel_ = new ::mtproto::InputChannel(*from.channel_);
  } else {
    channel_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:mtproto.TL_channels_deleteChannel)
}

void TL_channels_deleteChannel::SharedCtor() {
  channel_ = NULL;
  _cached_size_ = 0;
}

TL_channels_deleteChannel::~TL_channels_deleteChannel() {
  // @@protoc_insertion_point(destructor:mtproto.TL_channels_deleteChannel)
  SharedDtor();
}

void TL_channels_deleteChannel::SharedDtor() {
  if (this != internal_default_instance()) delete channel_;
}

void TL_channels_deleteChannel::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TL_channels_deleteChannel::descriptor() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TL_channels_deleteChannel& TL_channels_deleteChannel::default_instance() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  return *internal_default_instance();
}

TL_channels_deleteChannel* TL_channels_deleteChannel::New(::google::protobuf::Arena* arena) const {
  TL_channels_deleteChannel* n = new TL_channels_deleteChannel;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TL_channels_deleteChannel::Swap(TL_channels_deleteChannel* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TL_channels_deleteChannel::InternalSwap(TL_channels_deleteChannel* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata TL_channels_deleteChannel::GetMetadata() const {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TL_channels_deleteChannel

// .mtproto.InputChannel channel = 1;
bool TL_channels_deleteChannel::has_channel() const {
  return this != internal_default_instance() && channel_ != NULL;
}
void TL_channels_deleteChannel::clear_channel() {
  if (GetArenaNoVirtual() == NULL && channel_ != NULL) delete channel_;
  channel_ = NULL;
}
const ::mtproto::InputChannel& TL_channels_deleteChannel::channel() const {
  const ::mtproto::InputChannel* p = channel_;
  // @@protoc_insertion_point(field_get:mtproto.TL_channels_deleteChannel.channel)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::InputChannel*>(
      &::mtproto::_InputChannel_default_instance_);
}
::mtproto::InputChannel* TL_channels_deleteChannel::mutable_channel() {
  
  if (channel_ == NULL) {
    channel_ = new ::mtproto::InputChannel;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_channels_deleteChannel.channel)
  return channel_;
}
::mtproto::InputChannel* TL_channels_deleteChannel::release_channel() {
  // @@protoc_insertion_point(field_release:mtproto.TL_channels_deleteChannel.channel)
  
  ::mtproto::InputChannel* temp = channel_;
  channel_ = NULL;
  return temp;
}
void TL_channels_deleteChannel::set_allocated_channel(::mtproto::InputChannel* channel) {
  delete channel_;
  channel_ = channel;
  if (channel) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_channels_deleteChannel.channel)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TL_channels_toggleInvites::kChannelFieldNumber;
const int TL_channels_toggleInvites::kEnabledFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TL_channels_toggleInvites::TL_channels_toggleInvites()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.TL_channels_toggleInvites)
}
TL_channels_toggleInvites::TL_channels_toggleInvites(const TL_channels_toggleInvites& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_channel()) {
    channel_ = new ::mtproto::InputChannel(*from.channel_);
  } else {
    channel_ = NULL;
  }
  if (from.has_enabled()) {
    enabled_ = new ::mtproto::Bool(*from.enabled_);
  } else {
    enabled_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:mtproto.TL_channels_toggleInvites)
}

void TL_channels_toggleInvites::SharedCtor() {
  ::memset(&channel_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&enabled_) -
      reinterpret_cast<char*>(&channel_)) + sizeof(enabled_));
  _cached_size_ = 0;
}

TL_channels_toggleInvites::~TL_channels_toggleInvites() {
  // @@protoc_insertion_point(destructor:mtproto.TL_channels_toggleInvites)
  SharedDtor();
}

void TL_channels_toggleInvites::SharedDtor() {
  if (this != internal_default_instance()) delete channel_;
  if (this != internal_default_instance()) delete enabled_;
}

void TL_channels_toggleInvites::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TL_channels_toggleInvites::descriptor() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TL_channels_toggleInvites& TL_channels_toggleInvites::default_instance() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  return *internal_default_instance();
}

TL_channels_toggleInvites* TL_channels_toggleInvites::New(::google::protobuf::Arena* arena) const {
  TL_channels_toggleInvites* n = new TL_channels_toggleInvites;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TL_channels_toggleInvites::Swap(TL_channels_toggleInvites* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TL_channels_toggleInvites::InternalSwap(TL_channels_toggleInvites* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata TL_channels_toggleInvites::GetMetadata() const {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TL_channels_toggleInvites

// .mtproto.InputChannel channel = 1;
bool TL_channels_toggleInvites::has_channel() const {
  return this != internal_default_instance() && channel_ != NULL;
}
void TL_channels_toggleInvites::clear_channel() {
  if (GetArenaNoVirtual() == NULL && channel_ != NULL) delete channel_;
  channel_ = NULL;
}
const ::mtproto::InputChannel& TL_channels_toggleInvites::channel() const {
  const ::mtproto::InputChannel* p = channel_;
  // @@protoc_insertion_point(field_get:mtproto.TL_channels_toggleInvites.channel)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::InputChannel*>(
      &::mtproto::_InputChannel_default_instance_);
}
::mtproto::InputChannel* TL_channels_toggleInvites::mutable_channel() {
  
  if (channel_ == NULL) {
    channel_ = new ::mtproto::InputChannel;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_channels_toggleInvites.channel)
  return channel_;
}
::mtproto::InputChannel* TL_channels_toggleInvites::release_channel() {
  // @@protoc_insertion_point(field_release:mtproto.TL_channels_toggleInvites.channel)
  
  ::mtproto::InputChannel* temp = channel_;
  channel_ = NULL;
  return temp;
}
void TL_channels_toggleInvites::set_allocated_channel(::mtproto::InputChannel* channel) {
  delete channel_;
  channel_ = channel;
  if (channel) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_channels_toggleInvites.channel)
}

// .mtproto.Bool enabled = 2;
bool TL_channels_toggleInvites::has_enabled() const {
  return this != internal_default_instance() && enabled_ != NULL;
}
void TL_channels_toggleInvites::clear_enabled() {
  if (GetArenaNoVirtual() == NULL && enabled_ != NULL) delete enabled_;
  enabled_ = NULL;
}
const ::mtproto::Bool& TL_channels_toggleInvites::enabled() const {
  const ::mtproto::Bool* p = enabled_;
  // @@protoc_insertion_point(field_get:mtproto.TL_channels_toggleInvites.enabled)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::Bool*>(
      &::mtproto::_Bool_default_instance_);
}
::mtproto::Bool* TL_channels_toggleInvites::mutable_enabled() {
  
  if (enabled_ == NULL) {
    enabled_ = new ::mtproto::Bool;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_channels_toggleInvites.enabled)
  return enabled_;
}
::mtproto::Bool* TL_channels_toggleInvites::release_enabled() {
  // @@protoc_insertion_point(field_release:mtproto.TL_channels_toggleInvites.enabled)
  
  ::mtproto::Bool* temp = enabled_;
  enabled_ = NULL;
  return temp;
}
void TL_channels_toggleInvites::set_allocated_enabled(::mtproto::Bool* enabled) {
  delete enabled_;
  enabled_ = enabled;
  if (enabled) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_channels_toggleInvites.enabled)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TL_channels_exportMessageLink::kChannelFieldNumber;
const int TL_channels_exportMessageLink::kIdFieldNumber;
const int TL_channels_exportMessageLink::kGroupedFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TL_channels_exportMessageLink::TL_channels_exportMessageLink()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.TL_channels_exportMessageLink)
}
TL_channels_exportMessageLink::TL_channels_exportMessageLink(const TL_channels_exportMessageLink& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_channel()) {
    channel_ = new ::mtproto::InputChannel(*from.channel_);
  } else {
    channel_ = NULL;
  }
  if (from.has_grouped()) {
    grouped_ = new ::mtproto::Bool(*from.grouped_);
  } else {
    grouped_ = NULL;
  }
  id_ = from.id_;
  // @@protoc_insertion_point(copy_constructor:mtproto.TL_channels_exportMessageLink)
}

void TL_channels_exportMessageLink::SharedCtor() {
  ::memset(&channel_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&id_) -
      reinterpret_cast<char*>(&channel_)) + sizeof(id_));
  _cached_size_ = 0;
}

TL_channels_exportMessageLink::~TL_channels_exportMessageLink() {
  // @@protoc_insertion_point(destructor:mtproto.TL_channels_exportMessageLink)
  SharedDtor();
}

void TL_channels_exportMessageLink::SharedDtor() {
  if (this != internal_default_instance()) delete channel_;
  if (this != internal_default_instance()) delete grouped_;
}

void TL_channels_exportMessageLink::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TL_channels_exportMessageLink::descriptor() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TL_channels_exportMessageLink& TL_channels_exportMessageLink::default_instance() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  return *internal_default_instance();
}

TL_channels_exportMessageLink* TL_channels_exportMessageLink::New(::google::protobuf::Arena* arena) const {
  TL_channels_exportMessageLink* n = new TL_channels_exportMessageLink;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TL_channels_exportMessageLink::Swap(TL_channels_exportMessageLink* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TL_channels_exportMessageLink::InternalSwap(TL_channels_exportMessageLink* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata TL_channels_exportMessageLink::GetMetadata() const {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TL_channels_exportMessageLink

// .mtproto.InputChannel channel = 1;
bool TL_channels_exportMessageLink::has_channel() const {
  return this != internal_default_instance() && channel_ != NULL;
}
void TL_channels_exportMessageLink::clear_channel() {
  if (GetArenaNoVirtual() == NULL && channel_ != NULL) delete channel_;
  channel_ = NULL;
}
const ::mtproto::InputChannel& TL_channels_exportMessageLink::channel() const {
  const ::mtproto::InputChannel* p = channel_;
  // @@protoc_insertion_point(field_get:mtproto.TL_channels_exportMessageLink.channel)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::InputChannel*>(
      &::mtproto::_InputChannel_default_instance_);
}
::mtproto::InputChannel* TL_channels_exportMessageLink::mutable_channel() {
  
  if (channel_ == NULL) {
    channel_ = new ::mtproto::InputChannel;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_channels_exportMessageLink.channel)
  return channel_;
}
::mtproto::InputChannel* TL_channels_exportMessageLink::release_channel() {
  // @@protoc_insertion_point(field_release:mtproto.TL_channels_exportMessageLink.channel)
  
  ::mtproto::InputChannel* temp = channel_;
  channel_ = NULL;
  return temp;
}
void TL_channels_exportMessageLink::set_allocated_channel(::mtproto::InputChannel* channel) {
  delete channel_;
  channel_ = channel;
  if (channel) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_channels_exportMessageLink.channel)
}

// int32 id = 2;
void TL_channels_exportMessageLink::clear_id() {
  id_ = 0;
}
::google::protobuf::int32 TL_channels_exportMessageLink::id() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_channels_exportMessageLink.id)
  return id_;
}
void TL_channels_exportMessageLink::set_id(::google::protobuf::int32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_channels_exportMessageLink.id)
}

// .mtproto.Bool grouped = 3;
bool TL_channels_exportMessageLink::has_grouped() const {
  return this != internal_default_instance() && grouped_ != NULL;
}
void TL_channels_exportMessageLink::clear_grouped() {
  if (GetArenaNoVirtual() == NULL && grouped_ != NULL) delete grouped_;
  grouped_ = NULL;
}
const ::mtproto::Bool& TL_channels_exportMessageLink::grouped() const {
  const ::mtproto::Bool* p = grouped_;
  // @@protoc_insertion_point(field_get:mtproto.TL_channels_exportMessageLink.grouped)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::Bool*>(
      &::mtproto::_Bool_default_instance_);
}
::mtproto::Bool* TL_channels_exportMessageLink::mutable_grouped() {
  
  if (grouped_ == NULL) {
    grouped_ = new ::mtproto::Bool;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_channels_exportMessageLink.grouped)
  return grouped_;
}
::mtproto::Bool* TL_channels_exportMessageLink::release_grouped() {
  // @@protoc_insertion_point(field_release:mtproto.TL_channels_exportMessageLink.grouped)
  
  ::mtproto::Bool* temp = grouped_;
  grouped_ = NULL;
  return temp;
}
void TL_channels_exportMessageLink::set_allocated_grouped(::mtproto::Bool* grouped) {
  delete grouped_;
  grouped_ = grouped;
  if (grouped) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_channels_exportMessageLink.grouped)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TL_channels_toggleSignatures::kChannelFieldNumber;
const int TL_channels_toggleSignatures::kEnabledFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TL_channels_toggleSignatures::TL_channels_toggleSignatures()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.TL_channels_toggleSignatures)
}
TL_channels_toggleSignatures::TL_channels_toggleSignatures(const TL_channels_toggleSignatures& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_channel()) {
    channel_ = new ::mtproto::InputChannel(*from.channel_);
  } else {
    channel_ = NULL;
  }
  if (from.has_enabled()) {
    enabled_ = new ::mtproto::Bool(*from.enabled_);
  } else {
    enabled_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:mtproto.TL_channels_toggleSignatures)
}

void TL_channels_toggleSignatures::SharedCtor() {
  ::memset(&channel_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&enabled_) -
      reinterpret_cast<char*>(&channel_)) + sizeof(enabled_));
  _cached_size_ = 0;
}

TL_channels_toggleSignatures::~TL_channels_toggleSignatures() {
  // @@protoc_insertion_point(destructor:mtproto.TL_channels_toggleSignatures)
  SharedDtor();
}

void TL_channels_toggleSignatures::SharedDtor() {
  if (this != internal_default_instance()) delete channel_;
  if (this != internal_default_instance()) delete enabled_;
}

void TL_channels_toggleSignatures::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TL_channels_toggleSignatures::descriptor() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TL_channels_toggleSignatures& TL_channels_toggleSignatures::default_instance() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  return *internal_default_instance();
}

TL_channels_toggleSignatures* TL_channels_toggleSignatures::New(::google::protobuf::Arena* arena) const {
  TL_channels_toggleSignatures* n = new TL_channels_toggleSignatures;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TL_channels_toggleSignatures::Swap(TL_channels_toggleSignatures* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TL_channels_toggleSignatures::InternalSwap(TL_channels_toggleSignatures* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata TL_channels_toggleSignatures::GetMetadata() const {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TL_channels_toggleSignatures

// .mtproto.InputChannel channel = 1;
bool TL_channels_toggleSignatures::has_channel() const {
  return this != internal_default_instance() && channel_ != NULL;
}
void TL_channels_toggleSignatures::clear_channel() {
  if (GetArenaNoVirtual() == NULL && channel_ != NULL) delete channel_;
  channel_ = NULL;
}
const ::mtproto::InputChannel& TL_channels_toggleSignatures::channel() const {
  const ::mtproto::InputChannel* p = channel_;
  // @@protoc_insertion_point(field_get:mtproto.TL_channels_toggleSignatures.channel)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::InputChannel*>(
      &::mtproto::_InputChannel_default_instance_);
}
::mtproto::InputChannel* TL_channels_toggleSignatures::mutable_channel() {
  
  if (channel_ == NULL) {
    channel_ = new ::mtproto::InputChannel;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_channels_toggleSignatures.channel)
  return channel_;
}
::mtproto::InputChannel* TL_channels_toggleSignatures::release_channel() {
  // @@protoc_insertion_point(field_release:mtproto.TL_channels_toggleSignatures.channel)
  
  ::mtproto::InputChannel* temp = channel_;
  channel_ = NULL;
  return temp;
}
void TL_channels_toggleSignatures::set_allocated_channel(::mtproto::InputChannel* channel) {
  delete channel_;
  channel_ = channel;
  if (channel) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_channels_toggleSignatures.channel)
}

// .mtproto.Bool enabled = 2;
bool TL_channels_toggleSignatures::has_enabled() const {
  return this != internal_default_instance() && enabled_ != NULL;
}
void TL_channels_toggleSignatures::clear_enabled() {
  if (GetArenaNoVirtual() == NULL && enabled_ != NULL) delete enabled_;
  enabled_ = NULL;
}
const ::mtproto::Bool& TL_channels_toggleSignatures::enabled() const {
  const ::mtproto::Bool* p = enabled_;
  // @@protoc_insertion_point(field_get:mtproto.TL_channels_toggleSignatures.enabled)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::Bool*>(
      &::mtproto::_Bool_default_instance_);
}
::mtproto::Bool* TL_channels_toggleSignatures::mutable_enabled() {
  
  if (enabled_ == NULL) {
    enabled_ = new ::mtproto::Bool;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_channels_toggleSignatures.enabled)
  return enabled_;
}
::mtproto::Bool* TL_channels_toggleSignatures::release_enabled() {
  // @@protoc_insertion_point(field_release:mtproto.TL_channels_toggleSignatures.enabled)
  
  ::mtproto::Bool* temp = enabled_;
  enabled_ = NULL;
  return temp;
}
void TL_channels_toggleSignatures::set_allocated_enabled(::mtproto::Bool* enabled) {
  delete enabled_;
  enabled_ = enabled;
  if (enabled) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_channels_toggleSignatures.enabled)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TL_channels_updatePinnedMessage::kSilentFieldNumber;
const int TL_channels_updatePinnedMessage::kChannelFieldNumber;
const int TL_channels_updatePinnedMessage::kIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TL_channels_updatePinnedMessage::TL_channels_updatePinnedMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.TL_channels_updatePinnedMessage)
}
TL_channels_updatePinnedMessage::TL_channels_updatePinnedMessage(const TL_channels_updatePinnedMessage& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_channel()) {
    channel_ = new ::mtproto::InputChannel(*from.channel_);
  } else {
    channel_ = NULL;
  }
  ::memcpy(&silent_, &from.silent_,
    static_cast<size_t>(reinterpret_cast<char*>(&id_) -
    reinterpret_cast<char*>(&silent_)) + sizeof(id_));
  // @@protoc_insertion_point(copy_constructor:mtproto.TL_channels_updatePinnedMessage)
}

void TL_channels_updatePinnedMessage::SharedCtor() {
  ::memset(&channel_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&id_) -
      reinterpret_cast<char*>(&channel_)) + sizeof(id_));
  _cached_size_ = 0;
}

TL_channels_updatePinnedMessage::~TL_channels_updatePinnedMessage() {
  // @@protoc_insertion_point(destructor:mtproto.TL_channels_updatePinnedMessage)
  SharedDtor();
}

void TL_channels_updatePinnedMessage::SharedDtor() {
  if (this != internal_default_instance()) delete channel_;
}

void TL_channels_updatePinnedMessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TL_channels_updatePinnedMessage::descriptor() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TL_channels_updatePinnedMessage& TL_channels_updatePinnedMessage::default_instance() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  return *internal_default_instance();
}

TL_channels_updatePinnedMessage* TL_channels_updatePinnedMessage::New(::google::protobuf::Arena* arena) const {
  TL_channels_updatePinnedMessage* n = new TL_channels_updatePinnedMessage;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TL_channels_updatePinnedMessage::Swap(TL_channels_updatePinnedMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TL_channels_updatePinnedMessage::InternalSwap(TL_channels_updatePinnedMessage* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata TL_channels_updatePinnedMessage::GetMetadata() const {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TL_channels_updatePinnedMessage

// bool silent = 2;
void TL_channels_updatePinnedMessage::clear_silent() {
  silent_ = false;
}
bool TL_channels_updatePinnedMessage::silent() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_channels_updatePinnedMessage.silent)
  return silent_;
}
void TL_channels_updatePinnedMessage::set_silent(bool value) {
  
  silent_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_channels_updatePinnedMessage.silent)
}

// .mtproto.InputChannel channel = 3;
bool TL_channels_updatePinnedMessage::has_channel() const {
  return this != internal_default_instance() && channel_ != NULL;
}
void TL_channels_updatePinnedMessage::clear_channel() {
  if (GetArenaNoVirtual() == NULL && channel_ != NULL) delete channel_;
  channel_ = NULL;
}
const ::mtproto::InputChannel& TL_channels_updatePinnedMessage::channel() const {
  const ::mtproto::InputChannel* p = channel_;
  // @@protoc_insertion_point(field_get:mtproto.TL_channels_updatePinnedMessage.channel)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::InputChannel*>(
      &::mtproto::_InputChannel_default_instance_);
}
::mtproto::InputChannel* TL_channels_updatePinnedMessage::mutable_channel() {
  
  if (channel_ == NULL) {
    channel_ = new ::mtproto::InputChannel;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_channels_updatePinnedMessage.channel)
  return channel_;
}
::mtproto::InputChannel* TL_channels_updatePinnedMessage::release_channel() {
  // @@protoc_insertion_point(field_release:mtproto.TL_channels_updatePinnedMessage.channel)
  
  ::mtproto::InputChannel* temp = channel_;
  channel_ = NULL;
  return temp;
}
void TL_channels_updatePinnedMessage::set_allocated_channel(::mtproto::InputChannel* channel) {
  delete channel_;
  channel_ = channel;
  if (channel) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_channels_updatePinnedMessage.channel)
}

// int32 id = 4;
void TL_channels_updatePinnedMessage::clear_id() {
  id_ = 0;
}
::google::protobuf::int32 TL_channels_updatePinnedMessage::id() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_channels_updatePinnedMessage.id)
  return id_;
}
void TL_channels_updatePinnedMessage::set_id(::google::protobuf::int32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_channels_updatePinnedMessage.id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TL_channels_getAdminedPublicChannels::TL_channels_getAdminedPublicChannels()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.TL_channels_getAdminedPublicChannels)
}
TL_channels_getAdminedPublicChannels::TL_channels_getAdminedPublicChannels(const TL_channels_getAdminedPublicChannels& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:mtproto.TL_channels_getAdminedPublicChannels)
}

void TL_channels_getAdminedPublicChannels::SharedCtor() {
  _cached_size_ = 0;
}

TL_channels_getAdminedPublicChannels::~TL_channels_getAdminedPublicChannels() {
  // @@protoc_insertion_point(destructor:mtproto.TL_channels_getAdminedPublicChannels)
  SharedDtor();
}

void TL_channels_getAdminedPublicChannels::SharedDtor() {
}

void TL_channels_getAdminedPublicChannels::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TL_channels_getAdminedPublicChannels::descriptor() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TL_channels_getAdminedPublicChannels& TL_channels_getAdminedPublicChannels::default_instance() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  return *internal_default_instance();
}

TL_channels_getAdminedPublicChannels* TL_channels_getAdminedPublicChannels::New(::google::protobuf::Arena* arena) const {
  TL_channels_getAdminedPublicChannels* n = new TL_channels_getAdminedPublicChannels;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TL_channels_getAdminedPublicChannels::Swap(TL_channels_getAdminedPublicChannels* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TL_channels_getAdminedPublicChannels::InternalSwap(TL_channels_getAdminedPublicChannels* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata TL_channels_getAdminedPublicChannels::GetMetadata() const {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TL_channels_getAdminedPublicChannels

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TL_channels_editBanned::kChannelFieldNumber;
const int TL_channels_editBanned::kUserIdFieldNumber;
const int TL_channels_editBanned::kBannedRightsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TL_channels_editBanned::TL_channels_editBanned()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.TL_channels_editBanned)
}
TL_channels_editBanned::TL_channels_editBanned(const TL_channels_editBanned& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_channel()) {
    channel_ = new ::mtproto::InputChannel(*from.channel_);
  } else {
    channel_ = NULL;
  }
  if (from.has_user_id()) {
    user_id_ = new ::mtproto::InputUser(*from.user_id_);
  } else {
    user_id_ = NULL;
  }
  if (from.has_banned_rights()) {
    banned_rights_ = new ::mtproto::ChannelBannedRights(*from.banned_rights_);
  } else {
    banned_rights_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:mtproto.TL_channels_editBanned)
}

void TL_channels_editBanned::SharedCtor() {
  ::memset(&channel_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&banned_rights_) -
      reinterpret_cast<char*>(&channel_)) + sizeof(banned_rights_));
  _cached_size_ = 0;
}

TL_channels_editBanned::~TL_channels_editBanned() {
  // @@protoc_insertion_point(destructor:mtproto.TL_channels_editBanned)
  SharedDtor();
}

void TL_channels_editBanned::SharedDtor() {
  if (this != internal_default_instance()) delete channel_;
  if (this != internal_default_instance()) delete user_id_;
  if (this != internal_default_instance()) delete banned_rights_;
}

void TL_channels_editBanned::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TL_channels_editBanned::descriptor() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TL_channels_editBanned& TL_channels_editBanned::default_instance() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  return *internal_default_instance();
}

TL_channels_editBanned* TL_channels_editBanned::New(::google::protobuf::Arena* arena) const {
  TL_channels_editBanned* n = new TL_channels_editBanned;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TL_channels_editBanned::Swap(TL_channels_editBanned* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TL_channels_editBanned::InternalSwap(TL_channels_editBanned* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata TL_channels_editBanned::GetMetadata() const {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TL_channels_editBanned

// .mtproto.InputChannel channel = 1;
bool TL_channels_editBanned::has_channel() const {
  return this != internal_default_instance() && channel_ != NULL;
}
void TL_channels_editBanned::clear_channel() {
  if (GetArenaNoVirtual() == NULL && channel_ != NULL) delete channel_;
  channel_ = NULL;
}
const ::mtproto::InputChannel& TL_channels_editBanned::channel() const {
  const ::mtproto::InputChannel* p = channel_;
  // @@protoc_insertion_point(field_get:mtproto.TL_channels_editBanned.channel)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::InputChannel*>(
      &::mtproto::_InputChannel_default_instance_);
}
::mtproto::InputChannel* TL_channels_editBanned::mutable_channel() {
  
  if (channel_ == NULL) {
    channel_ = new ::mtproto::InputChannel;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_channels_editBanned.channel)
  return channel_;
}
::mtproto::InputChannel* TL_channels_editBanned::release_channel() {
  // @@protoc_insertion_point(field_release:mtproto.TL_channels_editBanned.channel)
  
  ::mtproto::InputChannel* temp = channel_;
  channel_ = NULL;
  return temp;
}
void TL_channels_editBanned::set_allocated_channel(::mtproto::InputChannel* channel) {
  delete channel_;
  channel_ = channel;
  if (channel) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_channels_editBanned.channel)
}

// .mtproto.InputUser user_id = 2;
bool TL_channels_editBanned::has_user_id() const {
  return this != internal_default_instance() && user_id_ != NULL;
}
void TL_channels_editBanned::clear_user_id() {
  if (GetArenaNoVirtual() == NULL && user_id_ != NULL) delete user_id_;
  user_id_ = NULL;
}
const ::mtproto::InputUser& TL_channels_editBanned::user_id() const {
  const ::mtproto::InputUser* p = user_id_;
  // @@protoc_insertion_point(field_get:mtproto.TL_channels_editBanned.user_id)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::InputUser*>(
      &::mtproto::_InputUser_default_instance_);
}
::mtproto::InputUser* TL_channels_editBanned::mutable_user_id() {
  
  if (user_id_ == NULL) {
    user_id_ = new ::mtproto::InputUser;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_channels_editBanned.user_id)
  return user_id_;
}
::mtproto::InputUser* TL_channels_editBanned::release_user_id() {
  // @@protoc_insertion_point(field_release:mtproto.TL_channels_editBanned.user_id)
  
  ::mtproto::InputUser* temp = user_id_;
  user_id_ = NULL;
  return temp;
}
void TL_channels_editBanned::set_allocated_user_id(::mtproto::InputUser* user_id) {
  delete user_id_;
  user_id_ = user_id;
  if (user_id) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_channels_editBanned.user_id)
}

// .mtproto.ChannelBannedRights banned_rights = 3;
bool TL_channels_editBanned::has_banned_rights() const {
  return this != internal_default_instance() && banned_rights_ != NULL;
}
void TL_channels_editBanned::clear_banned_rights() {
  if (GetArenaNoVirtual() == NULL && banned_rights_ != NULL) delete banned_rights_;
  banned_rights_ = NULL;
}
const ::mtproto::ChannelBannedRights& TL_channels_editBanned::banned_rights() const {
  const ::mtproto::ChannelBannedRights* p = banned_rights_;
  // @@protoc_insertion_point(field_get:mtproto.TL_channels_editBanned.banned_rights)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::ChannelBannedRights*>(
      &::mtproto::_ChannelBannedRights_default_instance_);
}
::mtproto::ChannelBannedRights* TL_channels_editBanned::mutable_banned_rights() {
  
  if (banned_rights_ == NULL) {
    banned_rights_ = new ::mtproto::ChannelBannedRights;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_channels_editBanned.banned_rights)
  return banned_rights_;
}
::mtproto::ChannelBannedRights* TL_channels_editBanned::release_banned_rights() {
  // @@protoc_insertion_point(field_release:mtproto.TL_channels_editBanned.banned_rights)
  
  ::mtproto::ChannelBannedRights* temp = banned_rights_;
  banned_rights_ = NULL;
  return temp;
}
void TL_channels_editBanned::set_allocated_banned_rights(::mtproto::ChannelBannedRights* banned_rights) {
  delete banned_rights_;
  banned_rights_ = banned_rights;
  if (banned_rights) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_channels_editBanned.banned_rights)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TL_channels_getAdminLog::kChannelFieldNumber;
const int TL_channels_getAdminLog::kQFieldNumber;
const int TL_channels_getAdminLog::kEventsFilterFieldNumber;
const int TL_channels_getAdminLog::kAdminsFieldNumber;
const int TL_channels_getAdminLog::kMaxIdFieldNumber;
const int TL_channels_getAdminLog::kMinIdFieldNumber;
const int TL_channels_getAdminLog::kLimitFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TL_channels_getAdminLog::TL_channels_getAdminLog()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.TL_channels_getAdminLog)
}
TL_channels_getAdminLog::TL_channels_getAdminLog(const TL_channels_getAdminLog& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      admins_(from.admins_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  q_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.q().size() > 0) {
    q_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.q_);
  }
  if (from.has_channel()) {
    channel_ = new ::mtproto::InputChannel(*from.channel_);
  } else {
    channel_ = NULL;
  }
  if (from.has_events_filter()) {
    events_filter_ = new ::mtproto::ChannelAdminLogEventsFilter(*from.events_filter_);
  } else {
    events_filter_ = NULL;
  }
  ::memcpy(&max_id_, &from.max_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&limit_) -
    reinterpret_cast<char*>(&max_id_)) + sizeof(limit_));
  // @@protoc_insertion_point(copy_constructor:mtproto.TL_channels_getAdminLog)
}

void TL_channels_getAdminLog::SharedCtor() {
  q_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&channel_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&limit_) -
      reinterpret_cast<char*>(&channel_)) + sizeof(limit_));
  _cached_size_ = 0;
}

TL_channels_getAdminLog::~TL_channels_getAdminLog() {
  // @@protoc_insertion_point(destructor:mtproto.TL_channels_getAdminLog)
  SharedDtor();
}

void TL_channels_getAdminLog::SharedDtor() {
  q_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete channel_;
  if (this != internal_default_instance()) delete events_filter_;
}

void TL_channels_getAdminLog::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TL_channels_getAdminLog::descriptor() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TL_channels_getAdminLog& TL_channels_getAdminLog::default_instance() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  return *internal_default_instance();
}

TL_channels_getAdminLog* TL_channels_getAdminLog::New(::google::protobuf::Arena* arena) const {
  TL_channels_getAdminLog* n = new TL_channels_getAdminLog;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TL_channels_getAdminLog::Swap(TL_channels_getAdminLog* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TL_channels_getAdminLog::InternalSwap(TL_channels_getAdminLog* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata TL_channels_getAdminLog::GetMetadata() const {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TL_channels_getAdminLog

// .mtproto.InputChannel channel = 2;
bool TL_channels_getAdminLog::has_channel() const {
  return this != internal_default_instance() && channel_ != NULL;
}
void TL_channels_getAdminLog::clear_channel() {
  if (GetArenaNoVirtual() == NULL && channel_ != NULL) delete channel_;
  channel_ = NULL;
}
const ::mtproto::InputChannel& TL_channels_getAdminLog::channel() const {
  const ::mtproto::InputChannel* p = channel_;
  // @@protoc_insertion_point(field_get:mtproto.TL_channels_getAdminLog.channel)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::InputChannel*>(
      &::mtproto::_InputChannel_default_instance_);
}
::mtproto::InputChannel* TL_channels_getAdminLog::mutable_channel() {
  
  if (channel_ == NULL) {
    channel_ = new ::mtproto::InputChannel;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_channels_getAdminLog.channel)
  return channel_;
}
::mtproto::InputChannel* TL_channels_getAdminLog::release_channel() {
  // @@protoc_insertion_point(field_release:mtproto.TL_channels_getAdminLog.channel)
  
  ::mtproto::InputChannel* temp = channel_;
  channel_ = NULL;
  return temp;
}
void TL_channels_getAdminLog::set_allocated_channel(::mtproto::InputChannel* channel) {
  delete channel_;
  channel_ = channel;
  if (channel) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_channels_getAdminLog.channel)
}

// string q = 3;
void TL_channels_getAdminLog::clear_q() {
  q_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& TL_channels_getAdminLog::q() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_channels_getAdminLog.q)
  return q_.GetNoArena();
}
void TL_channels_getAdminLog::set_q(const ::std::string& value) {
  
  q_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtproto.TL_channels_getAdminLog.q)
}
#if LANG_CXX11
void TL_channels_getAdminLog::set_q(::std::string&& value) {
  
  q_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mtproto.TL_channels_getAdminLog.q)
}
#endif
void TL_channels_getAdminLog::set_q(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  q_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtproto.TL_channels_getAdminLog.q)
}
void TL_channels_getAdminLog::set_q(const char* value, size_t size) {
  
  q_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtproto.TL_channels_getAdminLog.q)
}
::std::string* TL_channels_getAdminLog::mutable_q() {
  
  // @@protoc_insertion_point(field_mutable:mtproto.TL_channels_getAdminLog.q)
  return q_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* TL_channels_getAdminLog::release_q() {
  // @@protoc_insertion_point(field_release:mtproto.TL_channels_getAdminLog.q)
  
  return q_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TL_channels_getAdminLog::set_allocated_q(::std::string* q) {
  if (q != NULL) {
    
  } else {
    
  }
  q_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), q);
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_channels_getAdminLog.q)
}

// .mtproto.ChannelAdminLogEventsFilter events_filter = 4;
bool TL_channels_getAdminLog::has_events_filter() const {
  return this != internal_default_instance() && events_filter_ != NULL;
}
void TL_channels_getAdminLog::clear_events_filter() {
  if (GetArenaNoVirtual() == NULL && events_filter_ != NULL) delete events_filter_;
  events_filter_ = NULL;
}
const ::mtproto::ChannelAdminLogEventsFilter& TL_channels_getAdminLog::events_filter() const {
  const ::mtproto::ChannelAdminLogEventsFilter* p = events_filter_;
  // @@protoc_insertion_point(field_get:mtproto.TL_channels_getAdminLog.events_filter)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::ChannelAdminLogEventsFilter*>(
      &::mtproto::_ChannelAdminLogEventsFilter_default_instance_);
}
::mtproto::ChannelAdminLogEventsFilter* TL_channels_getAdminLog::mutable_events_filter() {
  
  if (events_filter_ == NULL) {
    events_filter_ = new ::mtproto::ChannelAdminLogEventsFilter;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_channels_getAdminLog.events_filter)
  return events_filter_;
}
::mtproto::ChannelAdminLogEventsFilter* TL_channels_getAdminLog::release_events_filter() {
  // @@protoc_insertion_point(field_release:mtproto.TL_channels_getAdminLog.events_filter)
  
  ::mtproto::ChannelAdminLogEventsFilter* temp = events_filter_;
  events_filter_ = NULL;
  return temp;
}
void TL_channels_getAdminLog::set_allocated_events_filter(::mtproto::ChannelAdminLogEventsFilter* events_filter) {
  delete events_filter_;
  events_filter_ = events_filter;
  if (events_filter) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_channels_getAdminLog.events_filter)
}

// repeated .mtproto.InputUser admins = 5;
int TL_channels_getAdminLog::admins_size() const {
  return admins_.size();
}
void TL_channels_getAdminLog::clear_admins() {
  admins_.Clear();
}
const ::mtproto::InputUser& TL_channels_getAdminLog::admins(int index) const {
  // @@protoc_insertion_point(field_get:mtproto.TL_channels_getAdminLog.admins)
  return admins_.Get(index);
}
::mtproto::InputUser* TL_channels_getAdminLog::mutable_admins(int index) {
  // @@protoc_insertion_point(field_mutable:mtproto.TL_channels_getAdminLog.admins)
  return admins_.Mutable(index);
}
::mtproto::InputUser* TL_channels_getAdminLog::add_admins() {
  // @@protoc_insertion_point(field_add:mtproto.TL_channels_getAdminLog.admins)
  return admins_.Add();
}
::google::protobuf::RepeatedPtrField< ::mtproto::InputUser >*
TL_channels_getAdminLog::mutable_admins() {
  // @@protoc_insertion_point(field_mutable_list:mtproto.TL_channels_getAdminLog.admins)
  return &admins_;
}
const ::google::protobuf::RepeatedPtrField< ::mtproto::InputUser >&
TL_channels_getAdminLog::admins() const {
  // @@protoc_insertion_point(field_list:mtproto.TL_channels_getAdminLog.admins)
  return admins_;
}

// int64 max_id = 6;
void TL_channels_getAdminLog::clear_max_id() {
  max_id_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 TL_channels_getAdminLog::max_id() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_channels_getAdminLog.max_id)
  return max_id_;
}
void TL_channels_getAdminLog::set_max_id(::google::protobuf::int64 value) {
  
  max_id_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_channels_getAdminLog.max_id)
}

// int64 min_id = 7;
void TL_channels_getAdminLog::clear_min_id() {
  min_id_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 TL_channels_getAdminLog::min_id() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_channels_getAdminLog.min_id)
  return min_id_;
}
void TL_channels_getAdminLog::set_min_id(::google::protobuf::int64 value) {
  
  min_id_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_channels_getAdminLog.min_id)
}

// int32 limit = 8;
void TL_channels_getAdminLog::clear_limit() {
  limit_ = 0;
}
::google::protobuf::int32 TL_channels_getAdminLog::limit() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_channels_getAdminLog.limit)
  return limit_;
}
void TL_channels_getAdminLog::set_limit(::google::protobuf::int32 value) {
  
  limit_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_channels_getAdminLog.limit)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TL_channels_setStickers::kChannelFieldNumber;
const int TL_channels_setStickers::kStickersetFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TL_channels_setStickers::TL_channels_setStickers()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.TL_channels_setStickers)
}
TL_channels_setStickers::TL_channels_setStickers(const TL_channels_setStickers& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_channel()) {
    channel_ = new ::mtproto::InputChannel(*from.channel_);
  } else {
    channel_ = NULL;
  }
  if (from.has_stickerset()) {
    stickerset_ = new ::mtproto::InputStickerSet(*from.stickerset_);
  } else {
    stickerset_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:mtproto.TL_channels_setStickers)
}

void TL_channels_setStickers::SharedCtor() {
  ::memset(&channel_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&stickerset_) -
      reinterpret_cast<char*>(&channel_)) + sizeof(stickerset_));
  _cached_size_ = 0;
}

TL_channels_setStickers::~TL_channels_setStickers() {
  // @@protoc_insertion_point(destructor:mtproto.TL_channels_setStickers)
  SharedDtor();
}

void TL_channels_setStickers::SharedDtor() {
  if (this != internal_default_instance()) delete channel_;
  if (this != internal_default_instance()) delete stickerset_;
}

void TL_channels_setStickers::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TL_channels_setStickers::descriptor() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TL_channels_setStickers& TL_channels_setStickers::default_instance() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  return *internal_default_instance();
}

TL_channels_setStickers* TL_channels_setStickers::New(::google::protobuf::Arena* arena) const {
  TL_channels_setStickers* n = new TL_channels_setStickers;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TL_channels_setStickers::Swap(TL_channels_setStickers* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TL_channels_setStickers::InternalSwap(TL_channels_setStickers* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata TL_channels_setStickers::GetMetadata() const {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TL_channels_setStickers

// .mtproto.InputChannel channel = 1;
bool TL_channels_setStickers::has_channel() const {
  return this != internal_default_instance() && channel_ != NULL;
}
void TL_channels_setStickers::clear_channel() {
  if (GetArenaNoVirtual() == NULL && channel_ != NULL) delete channel_;
  channel_ = NULL;
}
const ::mtproto::InputChannel& TL_channels_setStickers::channel() const {
  const ::mtproto::InputChannel* p = channel_;
  // @@protoc_insertion_point(field_get:mtproto.TL_channels_setStickers.channel)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::InputChannel*>(
      &::mtproto::_InputChannel_default_instance_);
}
::mtproto::InputChannel* TL_channels_setStickers::mutable_channel() {
  
  if (channel_ == NULL) {
    channel_ = new ::mtproto::InputChannel;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_channels_setStickers.channel)
  return channel_;
}
::mtproto::InputChannel* TL_channels_setStickers::release_channel() {
  // @@protoc_insertion_point(field_release:mtproto.TL_channels_setStickers.channel)
  
  ::mtproto::InputChannel* temp = channel_;
  channel_ = NULL;
  return temp;
}
void TL_channels_setStickers::set_allocated_channel(::mtproto::InputChannel* channel) {
  delete channel_;
  channel_ = channel;
  if (channel) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_channels_setStickers.channel)
}

// .mtproto.InputStickerSet stickerset = 2;
bool TL_channels_setStickers::has_stickerset() const {
  return this != internal_default_instance() && stickerset_ != NULL;
}
void TL_channels_setStickers::clear_stickerset() {
  if (GetArenaNoVirtual() == NULL && stickerset_ != NULL) delete stickerset_;
  stickerset_ = NULL;
}
const ::mtproto::InputStickerSet& TL_channels_setStickers::stickerset() const {
  const ::mtproto::InputStickerSet* p = stickerset_;
  // @@protoc_insertion_point(field_get:mtproto.TL_channels_setStickers.stickerset)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::InputStickerSet*>(
      &::mtproto::_InputStickerSet_default_instance_);
}
::mtproto::InputStickerSet* TL_channels_setStickers::mutable_stickerset() {
  
  if (stickerset_ == NULL) {
    stickerset_ = new ::mtproto::InputStickerSet;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_channels_setStickers.stickerset)
  return stickerset_;
}
::mtproto::InputStickerSet* TL_channels_setStickers::release_stickerset() {
  // @@protoc_insertion_point(field_release:mtproto.TL_channels_setStickers.stickerset)
  
  ::mtproto::InputStickerSet* temp = stickerset_;
  stickerset_ = NULL;
  return temp;
}
void TL_channels_setStickers::set_allocated_stickerset(::mtproto::InputStickerSet* stickerset) {
  delete stickerset_;
  stickerset_ = stickerset;
  if (stickerset) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_channels_setStickers.stickerset)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TL_channels_readMessageContents::kChannelFieldNumber;
const int TL_channels_readMessageContents::kIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TL_channels_readMessageContents::TL_channels_readMessageContents()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.TL_channels_readMessageContents)
}
TL_channels_readMessageContents::TL_channels_readMessageContents(const TL_channels_readMessageContents& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      id_(from.id_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_channel()) {
    channel_ = new ::mtproto::InputChannel(*from.channel_);
  } else {
    channel_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:mtproto.TL_channels_readMessageContents)
}

void TL_channels_readMessageContents::SharedCtor() {
  channel_ = NULL;
  _cached_size_ = 0;
}

TL_channels_readMessageContents::~TL_channels_readMessageContents() {
  // @@protoc_insertion_point(destructor:mtproto.TL_channels_readMessageContents)
  SharedDtor();
}

void TL_channels_readMessageContents::SharedDtor() {
  if (this != internal_default_instance()) delete channel_;
}

void TL_channels_readMessageContents::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TL_channels_readMessageContents::descriptor() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TL_channels_readMessageContents& TL_channels_readMessageContents::default_instance() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  return *internal_default_instance();
}

TL_channels_readMessageContents* TL_channels_readMessageContents::New(::google::protobuf::Arena* arena) const {
  TL_channels_readMessageContents* n = new TL_channels_readMessageContents;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TL_channels_readMessageContents::Swap(TL_channels_readMessageContents* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TL_channels_readMessageContents::InternalSwap(TL_channels_readMessageContents* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata TL_channels_readMessageContents::GetMetadata() const {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TL_channels_readMessageContents

// .mtproto.InputChannel channel = 1;
bool TL_channels_readMessageContents::has_channel() const {
  return this != internal_default_instance() && channel_ != NULL;
}
void TL_channels_readMessageContents::clear_channel() {
  if (GetArenaNoVirtual() == NULL && channel_ != NULL) delete channel_;
  channel_ = NULL;
}
const ::mtproto::InputChannel& TL_channels_readMessageContents::channel() const {
  const ::mtproto::InputChannel* p = channel_;
  // @@protoc_insertion_point(field_get:mtproto.TL_channels_readMessageContents.channel)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::InputChannel*>(
      &::mtproto::_InputChannel_default_instance_);
}
::mtproto::InputChannel* TL_channels_readMessageContents::mutable_channel() {
  
  if (channel_ == NULL) {
    channel_ = new ::mtproto::InputChannel;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_channels_readMessageContents.channel)
  return channel_;
}
::mtproto::InputChannel* TL_channels_readMessageContents::release_channel() {
  // @@protoc_insertion_point(field_release:mtproto.TL_channels_readMessageContents.channel)
  
  ::mtproto::InputChannel* temp = channel_;
  channel_ = NULL;
  return temp;
}
void TL_channels_readMessageContents::set_allocated_channel(::mtproto::InputChannel* channel) {
  delete channel_;
  channel_ = channel;
  if (channel) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_channels_readMessageContents.channel)
}

// repeated int32 id = 2;
int TL_channels_readMessageContents::id_size() const {
  return id_.size();
}
void TL_channels_readMessageContents::clear_id() {
  id_.Clear();
}
::google::protobuf::int32 TL_channels_readMessageContents::id(int index) const {
  // @@protoc_insertion_point(field_get:mtproto.TL_channels_readMessageContents.id)
  return id_.Get(index);
}
void TL_channels_readMessageContents::set_id(int index, ::google::protobuf::int32 value) {
  id_.Set(index, value);
  // @@protoc_insertion_point(field_set:mtproto.TL_channels_readMessageContents.id)
}
void TL_channels_readMessageContents::add_id(::google::protobuf::int32 value) {
  id_.Add(value);
  // @@protoc_insertion_point(field_add:mtproto.TL_channels_readMessageContents.id)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
TL_channels_readMessageContents::id() const {
  // @@protoc_insertion_point(field_list:mtproto.TL_channels_readMessageContents.id)
  return id_;
}
::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
TL_channels_readMessageContents::mutable_id() {
  // @@protoc_insertion_point(field_mutable_list:mtproto.TL_channels_readMessageContents.id)
  return &id_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TL_channels_deleteHistory::kChannelFieldNumber;
const int TL_channels_deleteHistory::kMaxIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TL_channels_deleteHistory::TL_channels_deleteHistory()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.TL_channels_deleteHistory)
}
TL_channels_deleteHistory::TL_channels_deleteHistory(const TL_channels_deleteHistory& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_channel()) {
    channel_ = new ::mtproto::InputChannel(*from.channel_);
  } else {
    channel_ = NULL;
  }
  max_id_ = from.max_id_;
  // @@protoc_insertion_point(copy_constructor:mtproto.TL_channels_deleteHistory)
}

void TL_channels_deleteHistory::SharedCtor() {
  ::memset(&channel_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&max_id_) -
      reinterpret_cast<char*>(&channel_)) + sizeof(max_id_));
  _cached_size_ = 0;
}

TL_channels_deleteHistory::~TL_channels_deleteHistory() {
  // @@protoc_insertion_point(destructor:mtproto.TL_channels_deleteHistory)
  SharedDtor();
}

void TL_channels_deleteHistory::SharedDtor() {
  if (this != internal_default_instance()) delete channel_;
}

void TL_channels_deleteHistory::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TL_channels_deleteHistory::descriptor() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TL_channels_deleteHistory& TL_channels_deleteHistory::default_instance() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  return *internal_default_instance();
}

TL_channels_deleteHistory* TL_channels_deleteHistory::New(::google::protobuf::Arena* arena) const {
  TL_channels_deleteHistory* n = new TL_channels_deleteHistory;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TL_channels_deleteHistory::Swap(TL_channels_deleteHistory* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TL_channels_deleteHistory::InternalSwap(TL_channels_deleteHistory* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata TL_channels_deleteHistory::GetMetadata() const {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TL_channels_deleteHistory

// .mtproto.InputChannel channel = 1;
bool TL_channels_deleteHistory::has_channel() const {
  return this != internal_default_instance() && channel_ != NULL;
}
void TL_channels_deleteHistory::clear_channel() {
  if (GetArenaNoVirtual() == NULL && channel_ != NULL) delete channel_;
  channel_ = NULL;
}
const ::mtproto::InputChannel& TL_channels_deleteHistory::channel() const {
  const ::mtproto::InputChannel* p = channel_;
  // @@protoc_insertion_point(field_get:mtproto.TL_channels_deleteHistory.channel)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::InputChannel*>(
      &::mtproto::_InputChannel_default_instance_);
}
::mtproto::InputChannel* TL_channels_deleteHistory::mutable_channel() {
  
  if (channel_ == NULL) {
    channel_ = new ::mtproto::InputChannel;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_channels_deleteHistory.channel)
  return channel_;
}
::mtproto::InputChannel* TL_channels_deleteHistory::release_channel() {
  // @@protoc_insertion_point(field_release:mtproto.TL_channels_deleteHistory.channel)
  
  ::mtproto::InputChannel* temp = channel_;
  channel_ = NULL;
  return temp;
}
void TL_channels_deleteHistory::set_allocated_channel(::mtproto::InputChannel* channel) {
  delete channel_;
  channel_ = channel;
  if (channel) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_channels_deleteHistory.channel)
}

// int32 max_id = 2;
void TL_channels_deleteHistory::clear_max_id() {
  max_id_ = 0;
}
::google::protobuf::int32 TL_channels_deleteHistory::max_id() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_channels_deleteHistory.max_id)
  return max_id_;
}
void TL_channels_deleteHistory::set_max_id(::google::protobuf::int32 value) {
  
  max_id_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_channels_deleteHistory.max_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TL_channels_togglePreHistoryHidden::kChannelFieldNumber;
const int TL_channels_togglePreHistoryHidden::kEnabledFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TL_channels_togglePreHistoryHidden::TL_channels_togglePreHistoryHidden()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.TL_channels_togglePreHistoryHidden)
}
TL_channels_togglePreHistoryHidden::TL_channels_togglePreHistoryHidden(const TL_channels_togglePreHistoryHidden& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_channel()) {
    channel_ = new ::mtproto::InputChannel(*from.channel_);
  } else {
    channel_ = NULL;
  }
  if (from.has_enabled()) {
    enabled_ = new ::mtproto::Bool(*from.enabled_);
  } else {
    enabled_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:mtproto.TL_channels_togglePreHistoryHidden)
}

void TL_channels_togglePreHistoryHidden::SharedCtor() {
  ::memset(&channel_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&enabled_) -
      reinterpret_cast<char*>(&channel_)) + sizeof(enabled_));
  _cached_size_ = 0;
}

TL_channels_togglePreHistoryHidden::~TL_channels_togglePreHistoryHidden() {
  // @@protoc_insertion_point(destructor:mtproto.TL_channels_togglePreHistoryHidden)
  SharedDtor();
}

void TL_channels_togglePreHistoryHidden::SharedDtor() {
  if (this != internal_default_instance()) delete channel_;
  if (this != internal_default_instance()) delete enabled_;
}

void TL_channels_togglePreHistoryHidden::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TL_channels_togglePreHistoryHidden::descriptor() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TL_channels_togglePreHistoryHidden& TL_channels_togglePreHistoryHidden::default_instance() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  return *internal_default_instance();
}

TL_channels_togglePreHistoryHidden* TL_channels_togglePreHistoryHidden::New(::google::protobuf::Arena* arena) const {
  TL_channels_togglePreHistoryHidden* n = new TL_channels_togglePreHistoryHidden;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TL_channels_togglePreHistoryHidden::Swap(TL_channels_togglePreHistoryHidden* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TL_channels_togglePreHistoryHidden::InternalSwap(TL_channels_togglePreHistoryHidden* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata TL_channels_togglePreHistoryHidden::GetMetadata() const {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TL_channels_togglePreHistoryHidden

// .mtproto.InputChannel channel = 1;
bool TL_channels_togglePreHistoryHidden::has_channel() const {
  return this != internal_default_instance() && channel_ != NULL;
}
void TL_channels_togglePreHistoryHidden::clear_channel() {
  if (GetArenaNoVirtual() == NULL && channel_ != NULL) delete channel_;
  channel_ = NULL;
}
const ::mtproto::InputChannel& TL_channels_togglePreHistoryHidden::channel() const {
  const ::mtproto::InputChannel* p = channel_;
  // @@protoc_insertion_point(field_get:mtproto.TL_channels_togglePreHistoryHidden.channel)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::InputChannel*>(
      &::mtproto::_InputChannel_default_instance_);
}
::mtproto::InputChannel* TL_channels_togglePreHistoryHidden::mutable_channel() {
  
  if (channel_ == NULL) {
    channel_ = new ::mtproto::InputChannel;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_channels_togglePreHistoryHidden.channel)
  return channel_;
}
::mtproto::InputChannel* TL_channels_togglePreHistoryHidden::release_channel() {
  // @@protoc_insertion_point(field_release:mtproto.TL_channels_togglePreHistoryHidden.channel)
  
  ::mtproto::InputChannel* temp = channel_;
  channel_ = NULL;
  return temp;
}
void TL_channels_togglePreHistoryHidden::set_allocated_channel(::mtproto::InputChannel* channel) {
  delete channel_;
  channel_ = channel;
  if (channel) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_channels_togglePreHistoryHidden.channel)
}

// .mtproto.Bool enabled = 2;
bool TL_channels_togglePreHistoryHidden::has_enabled() const {
  return this != internal_default_instance() && enabled_ != NULL;
}
void TL_channels_togglePreHistoryHidden::clear_enabled() {
  if (GetArenaNoVirtual() == NULL && enabled_ != NULL) delete enabled_;
  enabled_ = NULL;
}
const ::mtproto::Bool& TL_channels_togglePreHistoryHidden::enabled() const {
  const ::mtproto::Bool* p = enabled_;
  // @@protoc_insertion_point(field_get:mtproto.TL_channels_togglePreHistoryHidden.enabled)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::Bool*>(
      &::mtproto::_Bool_default_instance_);
}
::mtproto::Bool* TL_channels_togglePreHistoryHidden::mutable_enabled() {
  
  if (enabled_ == NULL) {
    enabled_ = new ::mtproto::Bool;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_channels_togglePreHistoryHidden.enabled)
  return enabled_;
}
::mtproto::Bool* TL_channels_togglePreHistoryHidden::release_enabled() {
  // @@protoc_insertion_point(field_release:mtproto.TL_channels_togglePreHistoryHidden.enabled)
  
  ::mtproto::Bool* temp = enabled_;
  enabled_ = NULL;
  return temp;
}
void TL_channels_togglePreHistoryHidden::set_allocated_enabled(::mtproto::Bool* enabled) {
  delete enabled_;
  enabled_ = enabled;
  if (enabled) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_channels_togglePreHistoryHidden.enabled)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TL_channels_getLeftChannels::kOffsetFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TL_channels_getLeftChannels::TL_channels_getLeftChannels()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.TL_channels_getLeftChannels)
}
TL_channels_getLeftChannels::TL_channels_getLeftChannels(const TL_channels_getLeftChannels& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  offset_ = from.offset_;
  // @@protoc_insertion_point(copy_constructor:mtproto.TL_channels_getLeftChannels)
}

void TL_channels_getLeftChannels::SharedCtor() {
  offset_ = 0;
  _cached_size_ = 0;
}

TL_channels_getLeftChannels::~TL_channels_getLeftChannels() {
  // @@protoc_insertion_point(destructor:mtproto.TL_channels_getLeftChannels)
  SharedDtor();
}

void TL_channels_getLeftChannels::SharedDtor() {
}

void TL_channels_getLeftChannels::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TL_channels_getLeftChannels::descriptor() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TL_channels_getLeftChannels& TL_channels_getLeftChannels::default_instance() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  return *internal_default_instance();
}

TL_channels_getLeftChannels* TL_channels_getLeftChannels::New(::google::protobuf::Arena* arena) const {
  TL_channels_getLeftChannels* n = new TL_channels_getLeftChannels;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TL_channels_getLeftChannels::Swap(TL_channels_getLeftChannels* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TL_channels_getLeftChannels::InternalSwap(TL_channels_getLeftChannels* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata TL_channels_getLeftChannels::GetMetadata() const {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TL_channels_getLeftChannels

// int32 offset = 1;
void TL_channels_getLeftChannels::clear_offset() {
  offset_ = 0;
}
::google::protobuf::int32 TL_channels_getLeftChannels::offset() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_channels_getLeftChannels.offset)
  return offset_;
}
void TL_channels_getLeftChannels::set_offset(::google::protobuf::int32 value) {
  
  offset_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_channels_getLeftChannels.offset)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TL_bots_sendCustomRequest::kCustomMethodFieldNumber;
const int TL_bots_sendCustomRequest::kParamsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TL_bots_sendCustomRequest::TL_bots_sendCustomRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.TL_bots_sendCustomRequest)
}
TL_bots_sendCustomRequest::TL_bots_sendCustomRequest(const TL_bots_sendCustomRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  custom_method_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.custom_method().size() > 0) {
    custom_method_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.custom_method_);
  }
  if (from.has_params()) {
    params_ = new ::mtproto::DataJSON(*from.params_);
  } else {
    params_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:mtproto.TL_bots_sendCustomRequest)
}

void TL_bots_sendCustomRequest::SharedCtor() {
  custom_method_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  params_ = NULL;
  _cached_size_ = 0;
}

TL_bots_sendCustomRequest::~TL_bots_sendCustomRequest() {
  // @@protoc_insertion_point(destructor:mtproto.TL_bots_sendCustomRequest)
  SharedDtor();
}

void TL_bots_sendCustomRequest::SharedDtor() {
  custom_method_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete params_;
}

void TL_bots_sendCustomRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TL_bots_sendCustomRequest::descriptor() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TL_bots_sendCustomRequest& TL_bots_sendCustomRequest::default_instance() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  return *internal_default_instance();
}

TL_bots_sendCustomRequest* TL_bots_sendCustomRequest::New(::google::protobuf::Arena* arena) const {
  TL_bots_sendCustomRequest* n = new TL_bots_sendCustomRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TL_bots_sendCustomRequest::Swap(TL_bots_sendCustomRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TL_bots_sendCustomRequest::InternalSwap(TL_bots_sendCustomRequest* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata TL_bots_sendCustomRequest::GetMetadata() const {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TL_bots_sendCustomRequest

// string custom_method = 1;
void TL_bots_sendCustomRequest::clear_custom_method() {
  custom_method_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& TL_bots_sendCustomRequest::custom_method() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_bots_sendCustomRequest.custom_method)
  return custom_method_.GetNoArena();
}
void TL_bots_sendCustomRequest::set_custom_method(const ::std::string& value) {
  
  custom_method_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtproto.TL_bots_sendCustomRequest.custom_method)
}
#if LANG_CXX11
void TL_bots_sendCustomRequest::set_custom_method(::std::string&& value) {
  
  custom_method_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mtproto.TL_bots_sendCustomRequest.custom_method)
}
#endif
void TL_bots_sendCustomRequest::set_custom_method(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  custom_method_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtproto.TL_bots_sendCustomRequest.custom_method)
}
void TL_bots_sendCustomRequest::set_custom_method(const char* value, size_t size) {
  
  custom_method_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtproto.TL_bots_sendCustomRequest.custom_method)
}
::std::string* TL_bots_sendCustomRequest::mutable_custom_method() {
  
  // @@protoc_insertion_point(field_mutable:mtproto.TL_bots_sendCustomRequest.custom_method)
  return custom_method_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* TL_bots_sendCustomRequest::release_custom_method() {
  // @@protoc_insertion_point(field_release:mtproto.TL_bots_sendCustomRequest.custom_method)
  
  return custom_method_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TL_bots_sendCustomRequest::set_allocated_custom_method(::std::string* custom_method) {
  if (custom_method != NULL) {
    
  } else {
    
  }
  custom_method_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), custom_method);
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_bots_sendCustomRequest.custom_method)
}

// .mtproto.DataJSON params = 2;
bool TL_bots_sendCustomRequest::has_params() const {
  return this != internal_default_instance() && params_ != NULL;
}
void TL_bots_sendCustomRequest::clear_params() {
  if (GetArenaNoVirtual() == NULL && params_ != NULL) delete params_;
  params_ = NULL;
}
const ::mtproto::DataJSON& TL_bots_sendCustomRequest::params() const {
  const ::mtproto::DataJSON* p = params_;
  // @@protoc_insertion_point(field_get:mtproto.TL_bots_sendCustomRequest.params)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::DataJSON*>(
      &::mtproto::_DataJSON_default_instance_);
}
::mtproto::DataJSON* TL_bots_sendCustomRequest::mutable_params() {
  
  if (params_ == NULL) {
    params_ = new ::mtproto::DataJSON;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_bots_sendCustomRequest.params)
  return params_;
}
::mtproto::DataJSON* TL_bots_sendCustomRequest::release_params() {
  // @@protoc_insertion_point(field_release:mtproto.TL_bots_sendCustomRequest.params)
  
  ::mtproto::DataJSON* temp = params_;
  params_ = NULL;
  return temp;
}
void TL_bots_sendCustomRequest::set_allocated_params(::mtproto::DataJSON* params) {
  delete params_;
  params_ = params;
  if (params) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_bots_sendCustomRequest.params)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TL_bots_answerWebhookJSONQuery::kQueryIdFieldNumber;
const int TL_bots_answerWebhookJSONQuery::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TL_bots_answerWebhookJSONQuery::TL_bots_answerWebhookJSONQuery()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.TL_bots_answerWebhookJSONQuery)
}
TL_bots_answerWebhookJSONQuery::TL_bots_answerWebhookJSONQuery(const TL_bots_answerWebhookJSONQuery& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_data()) {
    data_ = new ::mtproto::DataJSON(*from.data_);
  } else {
    data_ = NULL;
  }
  query_id_ = from.query_id_;
  // @@protoc_insertion_point(copy_constructor:mtproto.TL_bots_answerWebhookJSONQuery)
}

void TL_bots_answerWebhookJSONQuery::SharedCtor() {
  ::memset(&data_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&query_id_) -
      reinterpret_cast<char*>(&data_)) + sizeof(query_id_));
  _cached_size_ = 0;
}

TL_bots_answerWebhookJSONQuery::~TL_bots_answerWebhookJSONQuery() {
  // @@protoc_insertion_point(destructor:mtproto.TL_bots_answerWebhookJSONQuery)
  SharedDtor();
}

void TL_bots_answerWebhookJSONQuery::SharedDtor() {
  if (this != internal_default_instance()) delete data_;
}

void TL_bots_answerWebhookJSONQuery::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TL_bots_answerWebhookJSONQuery::descriptor() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TL_bots_answerWebhookJSONQuery& TL_bots_answerWebhookJSONQuery::default_instance() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  return *internal_default_instance();
}

TL_bots_answerWebhookJSONQuery* TL_bots_answerWebhookJSONQuery::New(::google::protobuf::Arena* arena) const {
  TL_bots_answerWebhookJSONQuery* n = new TL_bots_answerWebhookJSONQuery;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TL_bots_answerWebhookJSONQuery::Swap(TL_bots_answerWebhookJSONQuery* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TL_bots_answerWebhookJSONQuery::InternalSwap(TL_bots_answerWebhookJSONQuery* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata TL_bots_answerWebhookJSONQuery::GetMetadata() const {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TL_bots_answerWebhookJSONQuery

// int64 query_id = 1;
void TL_bots_answerWebhookJSONQuery::clear_query_id() {
  query_id_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 TL_bots_answerWebhookJSONQuery::query_id() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_bots_answerWebhookJSONQuery.query_id)
  return query_id_;
}
void TL_bots_answerWebhookJSONQuery::set_query_id(::google::protobuf::int64 value) {
  
  query_id_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_bots_answerWebhookJSONQuery.query_id)
}

// .mtproto.DataJSON data = 2;
bool TL_bots_answerWebhookJSONQuery::has_data() const {
  return this != internal_default_instance() && data_ != NULL;
}
void TL_bots_answerWebhookJSONQuery::clear_data() {
  if (GetArenaNoVirtual() == NULL && data_ != NULL) delete data_;
  data_ = NULL;
}
const ::mtproto::DataJSON& TL_bots_answerWebhookJSONQuery::data() const {
  const ::mtproto::DataJSON* p = data_;
  // @@protoc_insertion_point(field_get:mtproto.TL_bots_answerWebhookJSONQuery.data)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::DataJSON*>(
      &::mtproto::_DataJSON_default_instance_);
}
::mtproto::DataJSON* TL_bots_answerWebhookJSONQuery::mutable_data() {
  
  if (data_ == NULL) {
    data_ = new ::mtproto::DataJSON;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_bots_answerWebhookJSONQuery.data)
  return data_;
}
::mtproto::DataJSON* TL_bots_answerWebhookJSONQuery::release_data() {
  // @@protoc_insertion_point(field_release:mtproto.TL_bots_answerWebhookJSONQuery.data)
  
  ::mtproto::DataJSON* temp = data_;
  data_ = NULL;
  return temp;
}
void TL_bots_answerWebhookJSONQuery::set_allocated_data(::mtproto::DataJSON* data) {
  delete data_;
  data_ = data;
  if (data) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_bots_answerWebhookJSONQuery.data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TL_payments_getPaymentForm::kMsgIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TL_payments_getPaymentForm::TL_payments_getPaymentForm()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.TL_payments_getPaymentForm)
}
TL_payments_getPaymentForm::TL_payments_getPaymentForm(const TL_payments_getPaymentForm& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  msg_id_ = from.msg_id_;
  // @@protoc_insertion_point(copy_constructor:mtproto.TL_payments_getPaymentForm)
}

void TL_payments_getPaymentForm::SharedCtor() {
  msg_id_ = 0;
  _cached_size_ = 0;
}

TL_payments_getPaymentForm::~TL_payments_getPaymentForm() {
  // @@protoc_insertion_point(destructor:mtproto.TL_payments_getPaymentForm)
  SharedDtor();
}

void TL_payments_getPaymentForm::SharedDtor() {
}

void TL_payments_getPaymentForm::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TL_payments_getPaymentForm::descriptor() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TL_payments_getPaymentForm& TL_payments_getPaymentForm::default_instance() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  return *internal_default_instance();
}

TL_payments_getPaymentForm* TL_payments_getPaymentForm::New(::google::protobuf::Arena* arena) const {
  TL_payments_getPaymentForm* n = new TL_payments_getPaymentForm;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TL_payments_getPaymentForm::Swap(TL_payments_getPaymentForm* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TL_payments_getPaymentForm::InternalSwap(TL_payments_getPaymentForm* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata TL_payments_getPaymentForm::GetMetadata() const {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TL_payments_getPaymentForm

// int32 msg_id = 1;
void TL_payments_getPaymentForm::clear_msg_id() {
  msg_id_ = 0;
}
::google::protobuf::int32 TL_payments_getPaymentForm::msg_id() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_payments_getPaymentForm.msg_id)
  return msg_id_;
}
void TL_payments_getPaymentForm::set_msg_id(::google::protobuf::int32 value) {
  
  msg_id_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_payments_getPaymentForm.msg_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TL_payments_getPaymentReceipt::kMsgIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TL_payments_getPaymentReceipt::TL_payments_getPaymentReceipt()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.TL_payments_getPaymentReceipt)
}
TL_payments_getPaymentReceipt::TL_payments_getPaymentReceipt(const TL_payments_getPaymentReceipt& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  msg_id_ = from.msg_id_;
  // @@protoc_insertion_point(copy_constructor:mtproto.TL_payments_getPaymentReceipt)
}

void TL_payments_getPaymentReceipt::SharedCtor() {
  msg_id_ = 0;
  _cached_size_ = 0;
}

TL_payments_getPaymentReceipt::~TL_payments_getPaymentReceipt() {
  // @@protoc_insertion_point(destructor:mtproto.TL_payments_getPaymentReceipt)
  SharedDtor();
}

void TL_payments_getPaymentReceipt::SharedDtor() {
}

void TL_payments_getPaymentReceipt::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TL_payments_getPaymentReceipt::descriptor() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TL_payments_getPaymentReceipt& TL_payments_getPaymentReceipt::default_instance() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  return *internal_default_instance();
}

TL_payments_getPaymentReceipt* TL_payments_getPaymentReceipt::New(::google::protobuf::Arena* arena) const {
  TL_payments_getPaymentReceipt* n = new TL_payments_getPaymentReceipt;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TL_payments_getPaymentReceipt::Swap(TL_payments_getPaymentReceipt* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TL_payments_getPaymentReceipt::InternalSwap(TL_payments_getPaymentReceipt* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata TL_payments_getPaymentReceipt::GetMetadata() const {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TL_payments_getPaymentReceipt

// int32 msg_id = 1;
void TL_payments_getPaymentReceipt::clear_msg_id() {
  msg_id_ = 0;
}
::google::protobuf::int32 TL_payments_getPaymentReceipt::msg_id() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_payments_getPaymentReceipt.msg_id)
  return msg_id_;
}
void TL_payments_getPaymentReceipt::set_msg_id(::google::protobuf::int32 value) {
  
  msg_id_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_payments_getPaymentReceipt.msg_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TL_payments_validateRequestedInfo::kSaveFieldNumber;
const int TL_payments_validateRequestedInfo::kMsgIdFieldNumber;
const int TL_payments_validateRequestedInfo::kInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TL_payments_validateRequestedInfo::TL_payments_validateRequestedInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.TL_payments_validateRequestedInfo)
}
TL_payments_validateRequestedInfo::TL_payments_validateRequestedInfo(const TL_payments_validateRequestedInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_info()) {
    info_ = new ::mtproto::PaymentRequestedInfo(*from.info_);
  } else {
    info_ = NULL;
  }
  ::memcpy(&save_, &from.save_,
    static_cast<size_t>(reinterpret_cast<char*>(&msg_id_) -
    reinterpret_cast<char*>(&save_)) + sizeof(msg_id_));
  // @@protoc_insertion_point(copy_constructor:mtproto.TL_payments_validateRequestedInfo)
}

void TL_payments_validateRequestedInfo::SharedCtor() {
  ::memset(&info_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&msg_id_) -
      reinterpret_cast<char*>(&info_)) + sizeof(msg_id_));
  _cached_size_ = 0;
}

TL_payments_validateRequestedInfo::~TL_payments_validateRequestedInfo() {
  // @@protoc_insertion_point(destructor:mtproto.TL_payments_validateRequestedInfo)
  SharedDtor();
}

void TL_payments_validateRequestedInfo::SharedDtor() {
  if (this != internal_default_instance()) delete info_;
}

void TL_payments_validateRequestedInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TL_payments_validateRequestedInfo::descriptor() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TL_payments_validateRequestedInfo& TL_payments_validateRequestedInfo::default_instance() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  return *internal_default_instance();
}

TL_payments_validateRequestedInfo* TL_payments_validateRequestedInfo::New(::google::protobuf::Arena* arena) const {
  TL_payments_validateRequestedInfo* n = new TL_payments_validateRequestedInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TL_payments_validateRequestedInfo::Swap(TL_payments_validateRequestedInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TL_payments_validateRequestedInfo::InternalSwap(TL_payments_validateRequestedInfo* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata TL_payments_validateRequestedInfo::GetMetadata() const {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TL_payments_validateRequestedInfo

// bool save = 2;
void TL_payments_validateRequestedInfo::clear_save() {
  save_ = false;
}
bool TL_payments_validateRequestedInfo::save() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_payments_validateRequestedInfo.save)
  return save_;
}
void TL_payments_validateRequestedInfo::set_save(bool value) {
  
  save_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_payments_validateRequestedInfo.save)
}

// int32 msg_id = 3;
void TL_payments_validateRequestedInfo::clear_msg_id() {
  msg_id_ = 0;
}
::google::protobuf::int32 TL_payments_validateRequestedInfo::msg_id() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_payments_validateRequestedInfo.msg_id)
  return msg_id_;
}
void TL_payments_validateRequestedInfo::set_msg_id(::google::protobuf::int32 value) {
  
  msg_id_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_payments_validateRequestedInfo.msg_id)
}

// .mtproto.PaymentRequestedInfo info = 4;
bool TL_payments_validateRequestedInfo::has_info() const {
  return this != internal_default_instance() && info_ != NULL;
}
void TL_payments_validateRequestedInfo::clear_info() {
  if (GetArenaNoVirtual() == NULL && info_ != NULL) delete info_;
  info_ = NULL;
}
const ::mtproto::PaymentRequestedInfo& TL_payments_validateRequestedInfo::info() const {
  const ::mtproto::PaymentRequestedInfo* p = info_;
  // @@protoc_insertion_point(field_get:mtproto.TL_payments_validateRequestedInfo.info)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::PaymentRequestedInfo*>(
      &::mtproto::_PaymentRequestedInfo_default_instance_);
}
::mtproto::PaymentRequestedInfo* TL_payments_validateRequestedInfo::mutable_info() {
  
  if (info_ == NULL) {
    info_ = new ::mtproto::PaymentRequestedInfo;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_payments_validateRequestedInfo.info)
  return info_;
}
::mtproto::PaymentRequestedInfo* TL_payments_validateRequestedInfo::release_info() {
  // @@protoc_insertion_point(field_release:mtproto.TL_payments_validateRequestedInfo.info)
  
  ::mtproto::PaymentRequestedInfo* temp = info_;
  info_ = NULL;
  return temp;
}
void TL_payments_validateRequestedInfo::set_allocated_info(::mtproto::PaymentRequestedInfo* info) {
  delete info_;
  info_ = info;
  if (info) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_payments_validateRequestedInfo.info)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TL_payments_sendPaymentForm::kMsgIdFieldNumber;
const int TL_payments_sendPaymentForm::kRequestedInfoIdFieldNumber;
const int TL_payments_sendPaymentForm::kShippingOptionIdFieldNumber;
const int TL_payments_sendPaymentForm::kCredentialsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TL_payments_sendPaymentForm::TL_payments_sendPaymentForm()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.TL_payments_sendPaymentForm)
}
TL_payments_sendPaymentForm::TL_payments_sendPaymentForm(const TL_payments_sendPaymentForm& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  requested_info_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.requested_info_id().size() > 0) {
    requested_info_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.requested_info_id_);
  }
  shipping_option_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.shipping_option_id().size() > 0) {
    shipping_option_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.shipping_option_id_);
  }
  if (from.has_credentials()) {
    credentials_ = new ::mtproto::InputPaymentCredentials(*from.credentials_);
  } else {
    credentials_ = NULL;
  }
  msg_id_ = from.msg_id_;
  // @@protoc_insertion_point(copy_constructor:mtproto.TL_payments_sendPaymentForm)
}

void TL_payments_sendPaymentForm::SharedCtor() {
  requested_info_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  shipping_option_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&credentials_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&msg_id_) -
      reinterpret_cast<char*>(&credentials_)) + sizeof(msg_id_));
  _cached_size_ = 0;
}

TL_payments_sendPaymentForm::~TL_payments_sendPaymentForm() {
  // @@protoc_insertion_point(destructor:mtproto.TL_payments_sendPaymentForm)
  SharedDtor();
}

void TL_payments_sendPaymentForm::SharedDtor() {
  requested_info_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  shipping_option_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete credentials_;
}

void TL_payments_sendPaymentForm::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TL_payments_sendPaymentForm::descriptor() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TL_payments_sendPaymentForm& TL_payments_sendPaymentForm::default_instance() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  return *internal_default_instance();
}

TL_payments_sendPaymentForm* TL_payments_sendPaymentForm::New(::google::protobuf::Arena* arena) const {
  TL_payments_sendPaymentForm* n = new TL_payments_sendPaymentForm;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TL_payments_sendPaymentForm::Swap(TL_payments_sendPaymentForm* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TL_payments_sendPaymentForm::InternalSwap(TL_payments_sendPaymentForm* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata TL_payments_sendPaymentForm::GetMetadata() const {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TL_payments_sendPaymentForm

// int32 msg_id = 2;
void TL_payments_sendPaymentForm::clear_msg_id() {
  msg_id_ = 0;
}
::google::protobuf::int32 TL_payments_sendPaymentForm::msg_id() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_payments_sendPaymentForm.msg_id)
  return msg_id_;
}
void TL_payments_sendPaymentForm::set_msg_id(::google::protobuf::int32 value) {
  
  msg_id_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_payments_sendPaymentForm.msg_id)
}

// string requested_info_id = 3;
void TL_payments_sendPaymentForm::clear_requested_info_id() {
  requested_info_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& TL_payments_sendPaymentForm::requested_info_id() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_payments_sendPaymentForm.requested_info_id)
  return requested_info_id_.GetNoArena();
}
void TL_payments_sendPaymentForm::set_requested_info_id(const ::std::string& value) {
  
  requested_info_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtproto.TL_payments_sendPaymentForm.requested_info_id)
}
#if LANG_CXX11
void TL_payments_sendPaymentForm::set_requested_info_id(::std::string&& value) {
  
  requested_info_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mtproto.TL_payments_sendPaymentForm.requested_info_id)
}
#endif
void TL_payments_sendPaymentForm::set_requested_info_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  requested_info_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtproto.TL_payments_sendPaymentForm.requested_info_id)
}
void TL_payments_sendPaymentForm::set_requested_info_id(const char* value, size_t size) {
  
  requested_info_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtproto.TL_payments_sendPaymentForm.requested_info_id)
}
::std::string* TL_payments_sendPaymentForm::mutable_requested_info_id() {
  
  // @@protoc_insertion_point(field_mutable:mtproto.TL_payments_sendPaymentForm.requested_info_id)
  return requested_info_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* TL_payments_sendPaymentForm::release_requested_info_id() {
  // @@protoc_insertion_point(field_release:mtproto.TL_payments_sendPaymentForm.requested_info_id)
  
  return requested_info_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TL_payments_sendPaymentForm::set_allocated_requested_info_id(::std::string* requested_info_id) {
  if (requested_info_id != NULL) {
    
  } else {
    
  }
  requested_info_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), requested_info_id);
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_payments_sendPaymentForm.requested_info_id)
}

// string shipping_option_id = 4;
void TL_payments_sendPaymentForm::clear_shipping_option_id() {
  shipping_option_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& TL_payments_sendPaymentForm::shipping_option_id() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_payments_sendPaymentForm.shipping_option_id)
  return shipping_option_id_.GetNoArena();
}
void TL_payments_sendPaymentForm::set_shipping_option_id(const ::std::string& value) {
  
  shipping_option_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtproto.TL_payments_sendPaymentForm.shipping_option_id)
}
#if LANG_CXX11
void TL_payments_sendPaymentForm::set_shipping_option_id(::std::string&& value) {
  
  shipping_option_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mtproto.TL_payments_sendPaymentForm.shipping_option_id)
}
#endif
void TL_payments_sendPaymentForm::set_shipping_option_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  shipping_option_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtproto.TL_payments_sendPaymentForm.shipping_option_id)
}
void TL_payments_sendPaymentForm::set_shipping_option_id(const char* value, size_t size) {
  
  shipping_option_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtproto.TL_payments_sendPaymentForm.shipping_option_id)
}
::std::string* TL_payments_sendPaymentForm::mutable_shipping_option_id() {
  
  // @@protoc_insertion_point(field_mutable:mtproto.TL_payments_sendPaymentForm.shipping_option_id)
  return shipping_option_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* TL_payments_sendPaymentForm::release_shipping_option_id() {
  // @@protoc_insertion_point(field_release:mtproto.TL_payments_sendPaymentForm.shipping_option_id)
  
  return shipping_option_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TL_payments_sendPaymentForm::set_allocated_shipping_option_id(::std::string* shipping_option_id) {
  if (shipping_option_id != NULL) {
    
  } else {
    
  }
  shipping_option_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), shipping_option_id);
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_payments_sendPaymentForm.shipping_option_id)
}

// .mtproto.InputPaymentCredentials credentials = 5;
bool TL_payments_sendPaymentForm::has_credentials() const {
  return this != internal_default_instance() && credentials_ != NULL;
}
void TL_payments_sendPaymentForm::clear_credentials() {
  if (GetArenaNoVirtual() == NULL && credentials_ != NULL) delete credentials_;
  credentials_ = NULL;
}
const ::mtproto::InputPaymentCredentials& TL_payments_sendPaymentForm::credentials() const {
  const ::mtproto::InputPaymentCredentials* p = credentials_;
  // @@protoc_insertion_point(field_get:mtproto.TL_payments_sendPaymentForm.credentials)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::InputPaymentCredentials*>(
      &::mtproto::_InputPaymentCredentials_default_instance_);
}
::mtproto::InputPaymentCredentials* TL_payments_sendPaymentForm::mutable_credentials() {
  
  if (credentials_ == NULL) {
    credentials_ = new ::mtproto::InputPaymentCredentials;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_payments_sendPaymentForm.credentials)
  return credentials_;
}
::mtproto::InputPaymentCredentials* TL_payments_sendPaymentForm::release_credentials() {
  // @@protoc_insertion_point(field_release:mtproto.TL_payments_sendPaymentForm.credentials)
  
  ::mtproto::InputPaymentCredentials* temp = credentials_;
  credentials_ = NULL;
  return temp;
}
void TL_payments_sendPaymentForm::set_allocated_credentials(::mtproto::InputPaymentCredentials* credentials) {
  delete credentials_;
  credentials_ = credentials;
  if (credentials) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_payments_sendPaymentForm.credentials)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TL_payments_getSavedInfo::TL_payments_getSavedInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.TL_payments_getSavedInfo)
}
TL_payments_getSavedInfo::TL_payments_getSavedInfo(const TL_payments_getSavedInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:mtproto.TL_payments_getSavedInfo)
}

void TL_payments_getSavedInfo::SharedCtor() {
  _cached_size_ = 0;
}

TL_payments_getSavedInfo::~TL_payments_getSavedInfo() {
  // @@protoc_insertion_point(destructor:mtproto.TL_payments_getSavedInfo)
  SharedDtor();
}

void TL_payments_getSavedInfo::SharedDtor() {
}

void TL_payments_getSavedInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TL_payments_getSavedInfo::descriptor() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TL_payments_getSavedInfo& TL_payments_getSavedInfo::default_instance() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  return *internal_default_instance();
}

TL_payments_getSavedInfo* TL_payments_getSavedInfo::New(::google::protobuf::Arena* arena) const {
  TL_payments_getSavedInfo* n = new TL_payments_getSavedInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TL_payments_getSavedInfo::Swap(TL_payments_getSavedInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TL_payments_getSavedInfo::InternalSwap(TL_payments_getSavedInfo* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata TL_payments_getSavedInfo::GetMetadata() const {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TL_payments_getSavedInfo

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TL_payments_clearSavedInfo::kCredentialsFieldNumber;
const int TL_payments_clearSavedInfo::kInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TL_payments_clearSavedInfo::TL_payments_clearSavedInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.TL_payments_clearSavedInfo)
}
TL_payments_clearSavedInfo::TL_payments_clearSavedInfo(const TL_payments_clearSavedInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&credentials_, &from.credentials_,
    static_cast<size_t>(reinterpret_cast<char*>(&info_) -
    reinterpret_cast<char*>(&credentials_)) + sizeof(info_));
  // @@protoc_insertion_point(copy_constructor:mtproto.TL_payments_clearSavedInfo)
}

void TL_payments_clearSavedInfo::SharedCtor() {
  ::memset(&credentials_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&info_) -
      reinterpret_cast<char*>(&credentials_)) + sizeof(info_));
  _cached_size_ = 0;
}

TL_payments_clearSavedInfo::~TL_payments_clearSavedInfo() {
  // @@protoc_insertion_point(destructor:mtproto.TL_payments_clearSavedInfo)
  SharedDtor();
}

void TL_payments_clearSavedInfo::SharedDtor() {
}

void TL_payments_clearSavedInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TL_payments_clearSavedInfo::descriptor() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TL_payments_clearSavedInfo& TL_payments_clearSavedInfo::default_instance() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  return *internal_default_instance();
}

TL_payments_clearSavedInfo* TL_payments_clearSavedInfo::New(::google::protobuf::Arena* arena) const {
  TL_payments_clearSavedInfo* n = new TL_payments_clearSavedInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TL_payments_clearSavedInfo::Swap(TL_payments_clearSavedInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TL_payments_clearSavedInfo::InternalSwap(TL_payments_clearSavedInfo* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata TL_payments_clearSavedInfo::GetMetadata() const {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TL_payments_clearSavedInfo

// bool credentials = 2;
void TL_payments_clearSavedInfo::clear_credentials() {
  credentials_ = false;
}
bool TL_payments_clearSavedInfo::credentials() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_payments_clearSavedInfo.credentials)
  return credentials_;
}
void TL_payments_clearSavedInfo::set_credentials(bool value) {
  
  credentials_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_payments_clearSavedInfo.credentials)
}

// bool info = 3;
void TL_payments_clearSavedInfo::clear_info() {
  info_ = false;
}
bool TL_payments_clearSavedInfo::info() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_payments_clearSavedInfo.info)
  return info_;
}
void TL_payments_clearSavedInfo::set_info(bool value) {
  
  info_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_payments_clearSavedInfo.info)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TL_stickers_createStickerSet::kMasksFieldNumber;
const int TL_stickers_createStickerSet::kUserIdFieldNumber;
const int TL_stickers_createStickerSet::kTitleFieldNumber;
const int TL_stickers_createStickerSet::kShortNameFieldNumber;
const int TL_stickers_createStickerSet::kStickersFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TL_stickers_createStickerSet::TL_stickers_createStickerSet()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.TL_stickers_createStickerSet)
}
TL_stickers_createStickerSet::TL_stickers_createStickerSet(const TL_stickers_createStickerSet& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      stickers_(from.stickers_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  title_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.title().size() > 0) {
    title_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.title_);
  }
  short_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.short_name().size() > 0) {
    short_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.short_name_);
  }
  if (from.has_user_id()) {
    user_id_ = new ::mtproto::InputUser(*from.user_id_);
  } else {
    user_id_ = NULL;
  }
  masks_ = from.masks_;
  // @@protoc_insertion_point(copy_constructor:mtproto.TL_stickers_createStickerSet)
}

void TL_stickers_createStickerSet::SharedCtor() {
  title_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  short_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&user_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&masks_) -
      reinterpret_cast<char*>(&user_id_)) + sizeof(masks_));
  _cached_size_ = 0;
}

TL_stickers_createStickerSet::~TL_stickers_createStickerSet() {
  // @@protoc_insertion_point(destructor:mtproto.TL_stickers_createStickerSet)
  SharedDtor();
}

void TL_stickers_createStickerSet::SharedDtor() {
  title_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  short_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete user_id_;
}

void TL_stickers_createStickerSet::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TL_stickers_createStickerSet::descriptor() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TL_stickers_createStickerSet& TL_stickers_createStickerSet::default_instance() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  return *internal_default_instance();
}

TL_stickers_createStickerSet* TL_stickers_createStickerSet::New(::google::protobuf::Arena* arena) const {
  TL_stickers_createStickerSet* n = new TL_stickers_createStickerSet;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TL_stickers_createStickerSet::Swap(TL_stickers_createStickerSet* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TL_stickers_createStickerSet::InternalSwap(TL_stickers_createStickerSet* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata TL_stickers_createStickerSet::GetMetadata() const {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TL_stickers_createStickerSet

// bool masks = 2;
void TL_stickers_createStickerSet::clear_masks() {
  masks_ = false;
}
bool TL_stickers_createStickerSet::masks() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_stickers_createStickerSet.masks)
  return masks_;
}
void TL_stickers_createStickerSet::set_masks(bool value) {
  
  masks_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_stickers_createStickerSet.masks)
}

// .mtproto.InputUser user_id = 3;
bool TL_stickers_createStickerSet::has_user_id() const {
  return this != internal_default_instance() && user_id_ != NULL;
}
void TL_stickers_createStickerSet::clear_user_id() {
  if (GetArenaNoVirtual() == NULL && user_id_ != NULL) delete user_id_;
  user_id_ = NULL;
}
const ::mtproto::InputUser& TL_stickers_createStickerSet::user_id() const {
  const ::mtproto::InputUser* p = user_id_;
  // @@protoc_insertion_point(field_get:mtproto.TL_stickers_createStickerSet.user_id)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::InputUser*>(
      &::mtproto::_InputUser_default_instance_);
}
::mtproto::InputUser* TL_stickers_createStickerSet::mutable_user_id() {
  
  if (user_id_ == NULL) {
    user_id_ = new ::mtproto::InputUser;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_stickers_createStickerSet.user_id)
  return user_id_;
}
::mtproto::InputUser* TL_stickers_createStickerSet::release_user_id() {
  // @@protoc_insertion_point(field_release:mtproto.TL_stickers_createStickerSet.user_id)
  
  ::mtproto::InputUser* temp = user_id_;
  user_id_ = NULL;
  return temp;
}
void TL_stickers_createStickerSet::set_allocated_user_id(::mtproto::InputUser* user_id) {
  delete user_id_;
  user_id_ = user_id;
  if (user_id) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_stickers_createStickerSet.user_id)
}

// string title = 4;
void TL_stickers_createStickerSet::clear_title() {
  title_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& TL_stickers_createStickerSet::title() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_stickers_createStickerSet.title)
  return title_.GetNoArena();
}
void TL_stickers_createStickerSet::set_title(const ::std::string& value) {
  
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtproto.TL_stickers_createStickerSet.title)
}
#if LANG_CXX11
void TL_stickers_createStickerSet::set_title(::std::string&& value) {
  
  title_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mtproto.TL_stickers_createStickerSet.title)
}
#endif
void TL_stickers_createStickerSet::set_title(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtproto.TL_stickers_createStickerSet.title)
}
void TL_stickers_createStickerSet::set_title(const char* value, size_t size) {
  
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtproto.TL_stickers_createStickerSet.title)
}
::std::string* TL_stickers_createStickerSet::mutable_title() {
  
  // @@protoc_insertion_point(field_mutable:mtproto.TL_stickers_createStickerSet.title)
  return title_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* TL_stickers_createStickerSet::release_title() {
  // @@protoc_insertion_point(field_release:mtproto.TL_stickers_createStickerSet.title)
  
  return title_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TL_stickers_createStickerSet::set_allocated_title(::std::string* title) {
  if (title != NULL) {
    
  } else {
    
  }
  title_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), title);
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_stickers_createStickerSet.title)
}

// string short_name = 5;
void TL_stickers_createStickerSet::clear_short_name() {
  short_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& TL_stickers_createStickerSet::short_name() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_stickers_createStickerSet.short_name)
  return short_name_.GetNoArena();
}
void TL_stickers_createStickerSet::set_short_name(const ::std::string& value) {
  
  short_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtproto.TL_stickers_createStickerSet.short_name)
}
#if LANG_CXX11
void TL_stickers_createStickerSet::set_short_name(::std::string&& value) {
  
  short_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mtproto.TL_stickers_createStickerSet.short_name)
}
#endif
void TL_stickers_createStickerSet::set_short_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  short_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtproto.TL_stickers_createStickerSet.short_name)
}
void TL_stickers_createStickerSet::set_short_name(const char* value, size_t size) {
  
  short_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtproto.TL_stickers_createStickerSet.short_name)
}
::std::string* TL_stickers_createStickerSet::mutable_short_name() {
  
  // @@protoc_insertion_point(field_mutable:mtproto.TL_stickers_createStickerSet.short_name)
  return short_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* TL_stickers_createStickerSet::release_short_name() {
  // @@protoc_insertion_point(field_release:mtproto.TL_stickers_createStickerSet.short_name)
  
  return short_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TL_stickers_createStickerSet::set_allocated_short_name(::std::string* short_name) {
  if (short_name != NULL) {
    
  } else {
    
  }
  short_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), short_name);
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_stickers_createStickerSet.short_name)
}

// repeated .mtproto.InputStickerSetItem stickers = 6;
int TL_stickers_createStickerSet::stickers_size() const {
  return stickers_.size();
}
void TL_stickers_createStickerSet::clear_stickers() {
  stickers_.Clear();
}
const ::mtproto::InputStickerSetItem& TL_stickers_createStickerSet::stickers(int index) const {
  // @@protoc_insertion_point(field_get:mtproto.TL_stickers_createStickerSet.stickers)
  return stickers_.Get(index);
}
::mtproto::InputStickerSetItem* TL_stickers_createStickerSet::mutable_stickers(int index) {
  // @@protoc_insertion_point(field_mutable:mtproto.TL_stickers_createStickerSet.stickers)
  return stickers_.Mutable(index);
}
::mtproto::InputStickerSetItem* TL_stickers_createStickerSet::add_stickers() {
  // @@protoc_insertion_point(field_add:mtproto.TL_stickers_createStickerSet.stickers)
  return stickers_.Add();
}
::google::protobuf::RepeatedPtrField< ::mtproto::InputStickerSetItem >*
TL_stickers_createStickerSet::mutable_stickers() {
  // @@protoc_insertion_point(field_mutable_list:mtproto.TL_stickers_createStickerSet.stickers)
  return &stickers_;
}
const ::google::protobuf::RepeatedPtrField< ::mtproto::InputStickerSetItem >&
TL_stickers_createStickerSet::stickers() const {
  // @@protoc_insertion_point(field_list:mtproto.TL_stickers_createStickerSet.stickers)
  return stickers_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TL_stickers_removeStickerFromSet::kStickerFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TL_stickers_removeStickerFromSet::TL_stickers_removeStickerFromSet()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.TL_stickers_removeStickerFromSet)
}
TL_stickers_removeStickerFromSet::TL_stickers_removeStickerFromSet(const TL_stickers_removeStickerFromSet& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_sticker()) {
    sticker_ = new ::mtproto::InputDocument(*from.sticker_);
  } else {
    sticker_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:mtproto.TL_stickers_removeStickerFromSet)
}

void TL_stickers_removeStickerFromSet::SharedCtor() {
  sticker_ = NULL;
  _cached_size_ = 0;
}

TL_stickers_removeStickerFromSet::~TL_stickers_removeStickerFromSet() {
  // @@protoc_insertion_point(destructor:mtproto.TL_stickers_removeStickerFromSet)
  SharedDtor();
}

void TL_stickers_removeStickerFromSet::SharedDtor() {
  if (this != internal_default_instance()) delete sticker_;
}

void TL_stickers_removeStickerFromSet::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TL_stickers_removeStickerFromSet::descriptor() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TL_stickers_removeStickerFromSet& TL_stickers_removeStickerFromSet::default_instance() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  return *internal_default_instance();
}

TL_stickers_removeStickerFromSet* TL_stickers_removeStickerFromSet::New(::google::protobuf::Arena* arena) const {
  TL_stickers_removeStickerFromSet* n = new TL_stickers_removeStickerFromSet;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TL_stickers_removeStickerFromSet::Swap(TL_stickers_removeStickerFromSet* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TL_stickers_removeStickerFromSet::InternalSwap(TL_stickers_removeStickerFromSet* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata TL_stickers_removeStickerFromSet::GetMetadata() const {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TL_stickers_removeStickerFromSet

// .mtproto.InputDocument sticker = 1;
bool TL_stickers_removeStickerFromSet::has_sticker() const {
  return this != internal_default_instance() && sticker_ != NULL;
}
void TL_stickers_removeStickerFromSet::clear_sticker() {
  if (GetArenaNoVirtual() == NULL && sticker_ != NULL) delete sticker_;
  sticker_ = NULL;
}
const ::mtproto::InputDocument& TL_stickers_removeStickerFromSet::sticker() const {
  const ::mtproto::InputDocument* p = sticker_;
  // @@protoc_insertion_point(field_get:mtproto.TL_stickers_removeStickerFromSet.sticker)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::InputDocument*>(
      &::mtproto::_InputDocument_default_instance_);
}
::mtproto::InputDocument* TL_stickers_removeStickerFromSet::mutable_sticker() {
  
  if (sticker_ == NULL) {
    sticker_ = new ::mtproto::InputDocument;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_stickers_removeStickerFromSet.sticker)
  return sticker_;
}
::mtproto::InputDocument* TL_stickers_removeStickerFromSet::release_sticker() {
  // @@protoc_insertion_point(field_release:mtproto.TL_stickers_removeStickerFromSet.sticker)
  
  ::mtproto::InputDocument* temp = sticker_;
  sticker_ = NULL;
  return temp;
}
void TL_stickers_removeStickerFromSet::set_allocated_sticker(::mtproto::InputDocument* sticker) {
  delete sticker_;
  sticker_ = sticker;
  if (sticker) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_stickers_removeStickerFromSet.sticker)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TL_stickers_changeStickerPosition::kStickerFieldNumber;
const int TL_stickers_changeStickerPosition::kPositionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TL_stickers_changeStickerPosition::TL_stickers_changeStickerPosition()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.TL_stickers_changeStickerPosition)
}
TL_stickers_changeStickerPosition::TL_stickers_changeStickerPosition(const TL_stickers_changeStickerPosition& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_sticker()) {
    sticker_ = new ::mtproto::InputDocument(*from.sticker_);
  } else {
    sticker_ = NULL;
  }
  position_ = from.position_;
  // @@protoc_insertion_point(copy_constructor:mtproto.TL_stickers_changeStickerPosition)
}

void TL_stickers_changeStickerPosition::SharedCtor() {
  ::memset(&sticker_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&position_) -
      reinterpret_cast<char*>(&sticker_)) + sizeof(position_));
  _cached_size_ = 0;
}

TL_stickers_changeStickerPosition::~TL_stickers_changeStickerPosition() {
  // @@protoc_insertion_point(destructor:mtproto.TL_stickers_changeStickerPosition)
  SharedDtor();
}

void TL_stickers_changeStickerPosition::SharedDtor() {
  if (this != internal_default_instance()) delete sticker_;
}

void TL_stickers_changeStickerPosition::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TL_stickers_changeStickerPosition::descriptor() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TL_stickers_changeStickerPosition& TL_stickers_changeStickerPosition::default_instance() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  return *internal_default_instance();
}

TL_stickers_changeStickerPosition* TL_stickers_changeStickerPosition::New(::google::protobuf::Arena* arena) const {
  TL_stickers_changeStickerPosition* n = new TL_stickers_changeStickerPosition;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TL_stickers_changeStickerPosition::Swap(TL_stickers_changeStickerPosition* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TL_stickers_changeStickerPosition::InternalSwap(TL_stickers_changeStickerPosition* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata TL_stickers_changeStickerPosition::GetMetadata() const {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TL_stickers_changeStickerPosition

// .mtproto.InputDocument sticker = 1;
bool TL_stickers_changeStickerPosition::has_sticker() const {
  return this != internal_default_instance() && sticker_ != NULL;
}
void TL_stickers_changeStickerPosition::clear_sticker() {
  if (GetArenaNoVirtual() == NULL && sticker_ != NULL) delete sticker_;
  sticker_ = NULL;
}
const ::mtproto::InputDocument& TL_stickers_changeStickerPosition::sticker() const {
  const ::mtproto::InputDocument* p = sticker_;
  // @@protoc_insertion_point(field_get:mtproto.TL_stickers_changeStickerPosition.sticker)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::InputDocument*>(
      &::mtproto::_InputDocument_default_instance_);
}
::mtproto::InputDocument* TL_stickers_changeStickerPosition::mutable_sticker() {
  
  if (sticker_ == NULL) {
    sticker_ = new ::mtproto::InputDocument;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_stickers_changeStickerPosition.sticker)
  return sticker_;
}
::mtproto::InputDocument* TL_stickers_changeStickerPosition::release_sticker() {
  // @@protoc_insertion_point(field_release:mtproto.TL_stickers_changeStickerPosition.sticker)
  
  ::mtproto::InputDocument* temp = sticker_;
  sticker_ = NULL;
  return temp;
}
void TL_stickers_changeStickerPosition::set_allocated_sticker(::mtproto::InputDocument* sticker) {
  delete sticker_;
  sticker_ = sticker;
  if (sticker) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_stickers_changeStickerPosition.sticker)
}

// int32 position = 2;
void TL_stickers_changeStickerPosition::clear_position() {
  position_ = 0;
}
::google::protobuf::int32 TL_stickers_changeStickerPosition::position() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_stickers_changeStickerPosition.position)
  return position_;
}
void TL_stickers_changeStickerPosition::set_position(::google::protobuf::int32 value) {
  
  position_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_stickers_changeStickerPosition.position)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TL_stickers_addStickerToSet::kStickersetFieldNumber;
const int TL_stickers_addStickerToSet::kStickerFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TL_stickers_addStickerToSet::TL_stickers_addStickerToSet()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.TL_stickers_addStickerToSet)
}
TL_stickers_addStickerToSet::TL_stickers_addStickerToSet(const TL_stickers_addStickerToSet& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_stickerset()) {
    stickerset_ = new ::mtproto::InputStickerSet(*from.stickerset_);
  } else {
    stickerset_ = NULL;
  }
  if (from.has_sticker()) {
    sticker_ = new ::mtproto::InputStickerSetItem(*from.sticker_);
  } else {
    sticker_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:mtproto.TL_stickers_addStickerToSet)
}

void TL_stickers_addStickerToSet::SharedCtor() {
  ::memset(&stickerset_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&sticker_) -
      reinterpret_cast<char*>(&stickerset_)) + sizeof(sticker_));
  _cached_size_ = 0;
}

TL_stickers_addStickerToSet::~TL_stickers_addStickerToSet() {
  // @@protoc_insertion_point(destructor:mtproto.TL_stickers_addStickerToSet)
  SharedDtor();
}

void TL_stickers_addStickerToSet::SharedDtor() {
  if (this != internal_default_instance()) delete stickerset_;
  if (this != internal_default_instance()) delete sticker_;
}

void TL_stickers_addStickerToSet::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TL_stickers_addStickerToSet::descriptor() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TL_stickers_addStickerToSet& TL_stickers_addStickerToSet::default_instance() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  return *internal_default_instance();
}

TL_stickers_addStickerToSet* TL_stickers_addStickerToSet::New(::google::protobuf::Arena* arena) const {
  TL_stickers_addStickerToSet* n = new TL_stickers_addStickerToSet;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TL_stickers_addStickerToSet::Swap(TL_stickers_addStickerToSet* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TL_stickers_addStickerToSet::InternalSwap(TL_stickers_addStickerToSet* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata TL_stickers_addStickerToSet::GetMetadata() const {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TL_stickers_addStickerToSet

// .mtproto.InputStickerSet stickerset = 1;
bool TL_stickers_addStickerToSet::has_stickerset() const {
  return this != internal_default_instance() && stickerset_ != NULL;
}
void TL_stickers_addStickerToSet::clear_stickerset() {
  if (GetArenaNoVirtual() == NULL && stickerset_ != NULL) delete stickerset_;
  stickerset_ = NULL;
}
const ::mtproto::InputStickerSet& TL_stickers_addStickerToSet::stickerset() const {
  const ::mtproto::InputStickerSet* p = stickerset_;
  // @@protoc_insertion_point(field_get:mtproto.TL_stickers_addStickerToSet.stickerset)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::InputStickerSet*>(
      &::mtproto::_InputStickerSet_default_instance_);
}
::mtproto::InputStickerSet* TL_stickers_addStickerToSet::mutable_stickerset() {
  
  if (stickerset_ == NULL) {
    stickerset_ = new ::mtproto::InputStickerSet;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_stickers_addStickerToSet.stickerset)
  return stickerset_;
}
::mtproto::InputStickerSet* TL_stickers_addStickerToSet::release_stickerset() {
  // @@protoc_insertion_point(field_release:mtproto.TL_stickers_addStickerToSet.stickerset)
  
  ::mtproto::InputStickerSet* temp = stickerset_;
  stickerset_ = NULL;
  return temp;
}
void TL_stickers_addStickerToSet::set_allocated_stickerset(::mtproto::InputStickerSet* stickerset) {
  delete stickerset_;
  stickerset_ = stickerset;
  if (stickerset) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_stickers_addStickerToSet.stickerset)
}

// .mtproto.InputStickerSetItem sticker = 2;
bool TL_stickers_addStickerToSet::has_sticker() const {
  return this != internal_default_instance() && sticker_ != NULL;
}
void TL_stickers_addStickerToSet::clear_sticker() {
  if (GetArenaNoVirtual() == NULL && sticker_ != NULL) delete sticker_;
  sticker_ = NULL;
}
const ::mtproto::InputStickerSetItem& TL_stickers_addStickerToSet::sticker() const {
  const ::mtproto::InputStickerSetItem* p = sticker_;
  // @@protoc_insertion_point(field_get:mtproto.TL_stickers_addStickerToSet.sticker)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::InputStickerSetItem*>(
      &::mtproto::_InputStickerSetItem_default_instance_);
}
::mtproto::InputStickerSetItem* TL_stickers_addStickerToSet::mutable_sticker() {
  
  if (sticker_ == NULL) {
    sticker_ = new ::mtproto::InputStickerSetItem;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_stickers_addStickerToSet.sticker)
  return sticker_;
}
::mtproto::InputStickerSetItem* TL_stickers_addStickerToSet::release_sticker() {
  // @@protoc_insertion_point(field_release:mtproto.TL_stickers_addStickerToSet.sticker)
  
  ::mtproto::InputStickerSetItem* temp = sticker_;
  sticker_ = NULL;
  return temp;
}
void TL_stickers_addStickerToSet::set_allocated_sticker(::mtproto::InputStickerSetItem* sticker) {
  delete sticker_;
  sticker_ = sticker;
  if (sticker) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_stickers_addStickerToSet.sticker)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TL_phone_getCallConfig::TL_phone_getCallConfig()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.TL_phone_getCallConfig)
}
TL_phone_getCallConfig::TL_phone_getCallConfig(const TL_phone_getCallConfig& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:mtproto.TL_phone_getCallConfig)
}

void TL_phone_getCallConfig::SharedCtor() {
  _cached_size_ = 0;
}

TL_phone_getCallConfig::~TL_phone_getCallConfig() {
  // @@protoc_insertion_point(destructor:mtproto.TL_phone_getCallConfig)
  SharedDtor();
}

void TL_phone_getCallConfig::SharedDtor() {
}

void TL_phone_getCallConfig::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TL_phone_getCallConfig::descriptor() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TL_phone_getCallConfig& TL_phone_getCallConfig::default_instance() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  return *internal_default_instance();
}

TL_phone_getCallConfig* TL_phone_getCallConfig::New(::google::protobuf::Arena* arena) const {
  TL_phone_getCallConfig* n = new TL_phone_getCallConfig;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TL_phone_getCallConfig::Swap(TL_phone_getCallConfig* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TL_phone_getCallConfig::InternalSwap(TL_phone_getCallConfig* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata TL_phone_getCallConfig::GetMetadata() const {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TL_phone_getCallConfig

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TL_phone_requestCall::kUserIdFieldNumber;
const int TL_phone_requestCall::kRandomIdFieldNumber;
const int TL_phone_requestCall::kGAHashFieldNumber;
const int TL_phone_requestCall::kProtocolFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TL_phone_requestCall::TL_phone_requestCall()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.TL_phone_requestCall)
}
TL_phone_requestCall::TL_phone_requestCall(const TL_phone_requestCall& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  g_a_hash_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.g_a_hash().size() > 0) {
    g_a_hash_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.g_a_hash_);
  }
  if (from.has_user_id()) {
    user_id_ = new ::mtproto::InputUser(*from.user_id_);
  } else {
    user_id_ = NULL;
  }
  if (from.has_protocol()) {
    protocol_ = new ::mtproto::PhoneCallProtocol(*from.protocol_);
  } else {
    protocol_ = NULL;
  }
  random_id_ = from.random_id_;
  // @@protoc_insertion_point(copy_constructor:mtproto.TL_phone_requestCall)
}

void TL_phone_requestCall::SharedCtor() {
  g_a_hash_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&user_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&random_id_) -
      reinterpret_cast<char*>(&user_id_)) + sizeof(random_id_));
  _cached_size_ = 0;
}

TL_phone_requestCall::~TL_phone_requestCall() {
  // @@protoc_insertion_point(destructor:mtproto.TL_phone_requestCall)
  SharedDtor();
}

void TL_phone_requestCall::SharedDtor() {
  g_a_hash_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete user_id_;
  if (this != internal_default_instance()) delete protocol_;
}

void TL_phone_requestCall::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TL_phone_requestCall::descriptor() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TL_phone_requestCall& TL_phone_requestCall::default_instance() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  return *internal_default_instance();
}

TL_phone_requestCall* TL_phone_requestCall::New(::google::protobuf::Arena* arena) const {
  TL_phone_requestCall* n = new TL_phone_requestCall;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TL_phone_requestCall::Swap(TL_phone_requestCall* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TL_phone_requestCall::InternalSwap(TL_phone_requestCall* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata TL_phone_requestCall::GetMetadata() const {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TL_phone_requestCall

// .mtproto.InputUser user_id = 1;
bool TL_phone_requestCall::has_user_id() const {
  return this != internal_default_instance() && user_id_ != NULL;
}
void TL_phone_requestCall::clear_user_id() {
  if (GetArenaNoVirtual() == NULL && user_id_ != NULL) delete user_id_;
  user_id_ = NULL;
}
const ::mtproto::InputUser& TL_phone_requestCall::user_id() const {
  const ::mtproto::InputUser* p = user_id_;
  // @@protoc_insertion_point(field_get:mtproto.TL_phone_requestCall.user_id)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::InputUser*>(
      &::mtproto::_InputUser_default_instance_);
}
::mtproto::InputUser* TL_phone_requestCall::mutable_user_id() {
  
  if (user_id_ == NULL) {
    user_id_ = new ::mtproto::InputUser;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_phone_requestCall.user_id)
  return user_id_;
}
::mtproto::InputUser* TL_phone_requestCall::release_user_id() {
  // @@protoc_insertion_point(field_release:mtproto.TL_phone_requestCall.user_id)
  
  ::mtproto::InputUser* temp = user_id_;
  user_id_ = NULL;
  return temp;
}
void TL_phone_requestCall::set_allocated_user_id(::mtproto::InputUser* user_id) {
  delete user_id_;
  user_id_ = user_id;
  if (user_id) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_phone_requestCall.user_id)
}

// int32 random_id = 2;
void TL_phone_requestCall::clear_random_id() {
  random_id_ = 0;
}
::google::protobuf::int32 TL_phone_requestCall::random_id() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_phone_requestCall.random_id)
  return random_id_;
}
void TL_phone_requestCall::set_random_id(::google::protobuf::int32 value) {
  
  random_id_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_phone_requestCall.random_id)
}

// bytes g_a_hash = 3;
void TL_phone_requestCall::clear_g_a_hash() {
  g_a_hash_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& TL_phone_requestCall::g_a_hash() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_phone_requestCall.g_a_hash)
  return g_a_hash_.GetNoArena();
}
void TL_phone_requestCall::set_g_a_hash(const ::std::string& value) {
  
  g_a_hash_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtproto.TL_phone_requestCall.g_a_hash)
}
#if LANG_CXX11
void TL_phone_requestCall::set_g_a_hash(::std::string&& value) {
  
  g_a_hash_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mtproto.TL_phone_requestCall.g_a_hash)
}
#endif
void TL_phone_requestCall::set_g_a_hash(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  g_a_hash_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtproto.TL_phone_requestCall.g_a_hash)
}
void TL_phone_requestCall::set_g_a_hash(const void* value, size_t size) {
  
  g_a_hash_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtproto.TL_phone_requestCall.g_a_hash)
}
::std::string* TL_phone_requestCall::mutable_g_a_hash() {
  
  // @@protoc_insertion_point(field_mutable:mtproto.TL_phone_requestCall.g_a_hash)
  return g_a_hash_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* TL_phone_requestCall::release_g_a_hash() {
  // @@protoc_insertion_point(field_release:mtproto.TL_phone_requestCall.g_a_hash)
  
  return g_a_hash_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TL_phone_requestCall::set_allocated_g_a_hash(::std::string* g_a_hash) {
  if (g_a_hash != NULL) {
    
  } else {
    
  }
  g_a_hash_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), g_a_hash);
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_phone_requestCall.g_a_hash)
}

// .mtproto.PhoneCallProtocol protocol = 4;
bool TL_phone_requestCall::has_protocol() const {
  return this != internal_default_instance() && protocol_ != NULL;
}
void TL_phone_requestCall::clear_protocol() {
  if (GetArenaNoVirtual() == NULL && protocol_ != NULL) delete protocol_;
  protocol_ = NULL;
}
const ::mtproto::PhoneCallProtocol& TL_phone_requestCall::protocol() const {
  const ::mtproto::PhoneCallProtocol* p = protocol_;
  // @@protoc_insertion_point(field_get:mtproto.TL_phone_requestCall.protocol)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::PhoneCallProtocol*>(
      &::mtproto::_PhoneCallProtocol_default_instance_);
}
::mtproto::PhoneCallProtocol* TL_phone_requestCall::mutable_protocol() {
  
  if (protocol_ == NULL) {
    protocol_ = new ::mtproto::PhoneCallProtocol;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_phone_requestCall.protocol)
  return protocol_;
}
::mtproto::PhoneCallProtocol* TL_phone_requestCall::release_protocol() {
  // @@protoc_insertion_point(field_release:mtproto.TL_phone_requestCall.protocol)
  
  ::mtproto::PhoneCallProtocol* temp = protocol_;
  protocol_ = NULL;
  return temp;
}
void TL_phone_requestCall::set_allocated_protocol(::mtproto::PhoneCallProtocol* protocol) {
  delete protocol_;
  protocol_ = protocol;
  if (protocol) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_phone_requestCall.protocol)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TL_phone_acceptCall::kPeerFieldNumber;
const int TL_phone_acceptCall::kGBFieldNumber;
const int TL_phone_acceptCall::kProtocolFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TL_phone_acceptCall::TL_phone_acceptCall()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.TL_phone_acceptCall)
}
TL_phone_acceptCall::TL_phone_acceptCall(const TL_phone_acceptCall& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  g_b_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.g_b().size() > 0) {
    g_b_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.g_b_);
  }
  if (from.has_peer()) {
    peer_ = new ::mtproto::InputPhoneCall(*from.peer_);
  } else {
    peer_ = NULL;
  }
  if (from.has_protocol()) {
    protocol_ = new ::mtproto::PhoneCallProtocol(*from.protocol_);
  } else {
    protocol_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:mtproto.TL_phone_acceptCall)
}

void TL_phone_acceptCall::SharedCtor() {
  g_b_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&peer_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&protocol_) -
      reinterpret_cast<char*>(&peer_)) + sizeof(protocol_));
  _cached_size_ = 0;
}

TL_phone_acceptCall::~TL_phone_acceptCall() {
  // @@protoc_insertion_point(destructor:mtproto.TL_phone_acceptCall)
  SharedDtor();
}

void TL_phone_acceptCall::SharedDtor() {
  g_b_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete peer_;
  if (this != internal_default_instance()) delete protocol_;
}

void TL_phone_acceptCall::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TL_phone_acceptCall::descriptor() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TL_phone_acceptCall& TL_phone_acceptCall::default_instance() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  return *internal_default_instance();
}

TL_phone_acceptCall* TL_phone_acceptCall::New(::google::protobuf::Arena* arena) const {
  TL_phone_acceptCall* n = new TL_phone_acceptCall;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TL_phone_acceptCall::Swap(TL_phone_acceptCall* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TL_phone_acceptCall::InternalSwap(TL_phone_acceptCall* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata TL_phone_acceptCall::GetMetadata() const {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TL_phone_acceptCall

// .mtproto.InputPhoneCall peer = 1;
bool TL_phone_acceptCall::has_peer() const {
  return this != internal_default_instance() && peer_ != NULL;
}
void TL_phone_acceptCall::clear_peer() {
  if (GetArenaNoVirtual() == NULL && peer_ != NULL) delete peer_;
  peer_ = NULL;
}
const ::mtproto::InputPhoneCall& TL_phone_acceptCall::peer() const {
  const ::mtproto::InputPhoneCall* p = peer_;
  // @@protoc_insertion_point(field_get:mtproto.TL_phone_acceptCall.peer)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::InputPhoneCall*>(
      &::mtproto::_InputPhoneCall_default_instance_);
}
::mtproto::InputPhoneCall* TL_phone_acceptCall::mutable_peer() {
  
  if (peer_ == NULL) {
    peer_ = new ::mtproto::InputPhoneCall;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_phone_acceptCall.peer)
  return peer_;
}
::mtproto::InputPhoneCall* TL_phone_acceptCall::release_peer() {
  // @@protoc_insertion_point(field_release:mtproto.TL_phone_acceptCall.peer)
  
  ::mtproto::InputPhoneCall* temp = peer_;
  peer_ = NULL;
  return temp;
}
void TL_phone_acceptCall::set_allocated_peer(::mtproto::InputPhoneCall* peer) {
  delete peer_;
  peer_ = peer;
  if (peer) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_phone_acceptCall.peer)
}

// bytes g_b = 2;
void TL_phone_acceptCall::clear_g_b() {
  g_b_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& TL_phone_acceptCall::g_b() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_phone_acceptCall.g_b)
  return g_b_.GetNoArena();
}
void TL_phone_acceptCall::set_g_b(const ::std::string& value) {
  
  g_b_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtproto.TL_phone_acceptCall.g_b)
}
#if LANG_CXX11
void TL_phone_acceptCall::set_g_b(::std::string&& value) {
  
  g_b_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mtproto.TL_phone_acceptCall.g_b)
}
#endif
void TL_phone_acceptCall::set_g_b(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  g_b_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtproto.TL_phone_acceptCall.g_b)
}
void TL_phone_acceptCall::set_g_b(const void* value, size_t size) {
  
  g_b_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtproto.TL_phone_acceptCall.g_b)
}
::std::string* TL_phone_acceptCall::mutable_g_b() {
  
  // @@protoc_insertion_point(field_mutable:mtproto.TL_phone_acceptCall.g_b)
  return g_b_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* TL_phone_acceptCall::release_g_b() {
  // @@protoc_insertion_point(field_release:mtproto.TL_phone_acceptCall.g_b)
  
  return g_b_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TL_phone_acceptCall::set_allocated_g_b(::std::string* g_b) {
  if (g_b != NULL) {
    
  } else {
    
  }
  g_b_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), g_b);
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_phone_acceptCall.g_b)
}

// .mtproto.PhoneCallProtocol protocol = 3;
bool TL_phone_acceptCall::has_protocol() const {
  return this != internal_default_instance() && protocol_ != NULL;
}
void TL_phone_acceptCall::clear_protocol() {
  if (GetArenaNoVirtual() == NULL && protocol_ != NULL) delete protocol_;
  protocol_ = NULL;
}
const ::mtproto::PhoneCallProtocol& TL_phone_acceptCall::protocol() const {
  const ::mtproto::PhoneCallProtocol* p = protocol_;
  // @@protoc_insertion_point(field_get:mtproto.TL_phone_acceptCall.protocol)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::PhoneCallProtocol*>(
      &::mtproto::_PhoneCallProtocol_default_instance_);
}
::mtproto::PhoneCallProtocol* TL_phone_acceptCall::mutable_protocol() {
  
  if (protocol_ == NULL) {
    protocol_ = new ::mtproto::PhoneCallProtocol;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_phone_acceptCall.protocol)
  return protocol_;
}
::mtproto::PhoneCallProtocol* TL_phone_acceptCall::release_protocol() {
  // @@protoc_insertion_point(field_release:mtproto.TL_phone_acceptCall.protocol)
  
  ::mtproto::PhoneCallProtocol* temp = protocol_;
  protocol_ = NULL;
  return temp;
}
void TL_phone_acceptCall::set_allocated_protocol(::mtproto::PhoneCallProtocol* protocol) {
  delete protocol_;
  protocol_ = protocol;
  if (protocol) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_phone_acceptCall.protocol)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TL_phone_confirmCall::kPeerFieldNumber;
const int TL_phone_confirmCall::kGAFieldNumber;
const int TL_phone_confirmCall::kKeyFingerprintFieldNumber;
const int TL_phone_confirmCall::kProtocolFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TL_phone_confirmCall::TL_phone_confirmCall()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.TL_phone_confirmCall)
}
TL_phone_confirmCall::TL_phone_confirmCall(const TL_phone_confirmCall& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  g_a_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.g_a().size() > 0) {
    g_a_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.g_a_);
  }
  if (from.has_peer()) {
    peer_ = new ::mtproto::InputPhoneCall(*from.peer_);
  } else {
    peer_ = NULL;
  }
  if (from.has_protocol()) {
    protocol_ = new ::mtproto::PhoneCallProtocol(*from.protocol_);
  } else {
    protocol_ = NULL;
  }
  key_fingerprint_ = from.key_fingerprint_;
  // @@protoc_insertion_point(copy_constructor:mtproto.TL_phone_confirmCall)
}

void TL_phone_confirmCall::SharedCtor() {
  g_a_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&peer_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&key_fingerprint_) -
      reinterpret_cast<char*>(&peer_)) + sizeof(key_fingerprint_));
  _cached_size_ = 0;
}

TL_phone_confirmCall::~TL_phone_confirmCall() {
  // @@protoc_insertion_point(destructor:mtproto.TL_phone_confirmCall)
  SharedDtor();
}

void TL_phone_confirmCall::SharedDtor() {
  g_a_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete peer_;
  if (this != internal_default_instance()) delete protocol_;
}

void TL_phone_confirmCall::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TL_phone_confirmCall::descriptor() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TL_phone_confirmCall& TL_phone_confirmCall::default_instance() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  return *internal_default_instance();
}

TL_phone_confirmCall* TL_phone_confirmCall::New(::google::protobuf::Arena* arena) const {
  TL_phone_confirmCall* n = new TL_phone_confirmCall;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TL_phone_confirmCall::Swap(TL_phone_confirmCall* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TL_phone_confirmCall::InternalSwap(TL_phone_confirmCall* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata TL_phone_confirmCall::GetMetadata() const {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TL_phone_confirmCall

// .mtproto.InputPhoneCall peer = 1;
bool TL_phone_confirmCall::has_peer() const {
  return this != internal_default_instance() && peer_ != NULL;
}
void TL_phone_confirmCall::clear_peer() {
  if (GetArenaNoVirtual() == NULL && peer_ != NULL) delete peer_;
  peer_ = NULL;
}
const ::mtproto::InputPhoneCall& TL_phone_confirmCall::peer() const {
  const ::mtproto::InputPhoneCall* p = peer_;
  // @@protoc_insertion_point(field_get:mtproto.TL_phone_confirmCall.peer)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::InputPhoneCall*>(
      &::mtproto::_InputPhoneCall_default_instance_);
}
::mtproto::InputPhoneCall* TL_phone_confirmCall::mutable_peer() {
  
  if (peer_ == NULL) {
    peer_ = new ::mtproto::InputPhoneCall;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_phone_confirmCall.peer)
  return peer_;
}
::mtproto::InputPhoneCall* TL_phone_confirmCall::release_peer() {
  // @@protoc_insertion_point(field_release:mtproto.TL_phone_confirmCall.peer)
  
  ::mtproto::InputPhoneCall* temp = peer_;
  peer_ = NULL;
  return temp;
}
void TL_phone_confirmCall::set_allocated_peer(::mtproto::InputPhoneCall* peer) {
  delete peer_;
  peer_ = peer;
  if (peer) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_phone_confirmCall.peer)
}

// bytes g_a = 2;
void TL_phone_confirmCall::clear_g_a() {
  g_a_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& TL_phone_confirmCall::g_a() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_phone_confirmCall.g_a)
  return g_a_.GetNoArena();
}
void TL_phone_confirmCall::set_g_a(const ::std::string& value) {
  
  g_a_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtproto.TL_phone_confirmCall.g_a)
}
#if LANG_CXX11
void TL_phone_confirmCall::set_g_a(::std::string&& value) {
  
  g_a_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mtproto.TL_phone_confirmCall.g_a)
}
#endif
void TL_phone_confirmCall::set_g_a(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  g_a_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtproto.TL_phone_confirmCall.g_a)
}
void TL_phone_confirmCall::set_g_a(const void* value, size_t size) {
  
  g_a_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtproto.TL_phone_confirmCall.g_a)
}
::std::string* TL_phone_confirmCall::mutable_g_a() {
  
  // @@protoc_insertion_point(field_mutable:mtproto.TL_phone_confirmCall.g_a)
  return g_a_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* TL_phone_confirmCall::release_g_a() {
  // @@protoc_insertion_point(field_release:mtproto.TL_phone_confirmCall.g_a)
  
  return g_a_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TL_phone_confirmCall::set_allocated_g_a(::std::string* g_a) {
  if (g_a != NULL) {
    
  } else {
    
  }
  g_a_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), g_a);
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_phone_confirmCall.g_a)
}

// int64 key_fingerprint = 3;
void TL_phone_confirmCall::clear_key_fingerprint() {
  key_fingerprint_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 TL_phone_confirmCall::key_fingerprint() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_phone_confirmCall.key_fingerprint)
  return key_fingerprint_;
}
void TL_phone_confirmCall::set_key_fingerprint(::google::protobuf::int64 value) {
  
  key_fingerprint_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_phone_confirmCall.key_fingerprint)
}

// .mtproto.PhoneCallProtocol protocol = 4;
bool TL_phone_confirmCall::has_protocol() const {
  return this != internal_default_instance() && protocol_ != NULL;
}
void TL_phone_confirmCall::clear_protocol() {
  if (GetArenaNoVirtual() == NULL && protocol_ != NULL) delete protocol_;
  protocol_ = NULL;
}
const ::mtproto::PhoneCallProtocol& TL_phone_confirmCall::protocol() const {
  const ::mtproto::PhoneCallProtocol* p = protocol_;
  // @@protoc_insertion_point(field_get:mtproto.TL_phone_confirmCall.protocol)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::PhoneCallProtocol*>(
      &::mtproto::_PhoneCallProtocol_default_instance_);
}
::mtproto::PhoneCallProtocol* TL_phone_confirmCall::mutable_protocol() {
  
  if (protocol_ == NULL) {
    protocol_ = new ::mtproto::PhoneCallProtocol;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_phone_confirmCall.protocol)
  return protocol_;
}
::mtproto::PhoneCallProtocol* TL_phone_confirmCall::release_protocol() {
  // @@protoc_insertion_point(field_release:mtproto.TL_phone_confirmCall.protocol)
  
  ::mtproto::PhoneCallProtocol* temp = protocol_;
  protocol_ = NULL;
  return temp;
}
void TL_phone_confirmCall::set_allocated_protocol(::mtproto::PhoneCallProtocol* protocol) {
  delete protocol_;
  protocol_ = protocol;
  if (protocol) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_phone_confirmCall.protocol)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TL_phone_receivedCall::kPeerFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TL_phone_receivedCall::TL_phone_receivedCall()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.TL_phone_receivedCall)
}
TL_phone_receivedCall::TL_phone_receivedCall(const TL_phone_receivedCall& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_peer()) {
    peer_ = new ::mtproto::InputPhoneCall(*from.peer_);
  } else {
    peer_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:mtproto.TL_phone_receivedCall)
}

void TL_phone_receivedCall::SharedCtor() {
  peer_ = NULL;
  _cached_size_ = 0;
}

TL_phone_receivedCall::~TL_phone_receivedCall() {
  // @@protoc_insertion_point(destructor:mtproto.TL_phone_receivedCall)
  SharedDtor();
}

void TL_phone_receivedCall::SharedDtor() {
  if (this != internal_default_instance()) delete peer_;
}

void TL_phone_receivedCall::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TL_phone_receivedCall::descriptor() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TL_phone_receivedCall& TL_phone_receivedCall::default_instance() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  return *internal_default_instance();
}

TL_phone_receivedCall* TL_phone_receivedCall::New(::google::protobuf::Arena* arena) const {
  TL_phone_receivedCall* n = new TL_phone_receivedCall;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TL_phone_receivedCall::Swap(TL_phone_receivedCall* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TL_phone_receivedCall::InternalSwap(TL_phone_receivedCall* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata TL_phone_receivedCall::GetMetadata() const {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TL_phone_receivedCall

// .mtproto.InputPhoneCall peer = 1;
bool TL_phone_receivedCall::has_peer() const {
  return this != internal_default_instance() && peer_ != NULL;
}
void TL_phone_receivedCall::clear_peer() {
  if (GetArenaNoVirtual() == NULL && peer_ != NULL) delete peer_;
  peer_ = NULL;
}
const ::mtproto::InputPhoneCall& TL_phone_receivedCall::peer() const {
  const ::mtproto::InputPhoneCall* p = peer_;
  // @@protoc_insertion_point(field_get:mtproto.TL_phone_receivedCall.peer)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::InputPhoneCall*>(
      &::mtproto::_InputPhoneCall_default_instance_);
}
::mtproto::InputPhoneCall* TL_phone_receivedCall::mutable_peer() {
  
  if (peer_ == NULL) {
    peer_ = new ::mtproto::InputPhoneCall;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_phone_receivedCall.peer)
  return peer_;
}
::mtproto::InputPhoneCall* TL_phone_receivedCall::release_peer() {
  // @@protoc_insertion_point(field_release:mtproto.TL_phone_receivedCall.peer)
  
  ::mtproto::InputPhoneCall* temp = peer_;
  peer_ = NULL;
  return temp;
}
void TL_phone_receivedCall::set_allocated_peer(::mtproto::InputPhoneCall* peer) {
  delete peer_;
  peer_ = peer;
  if (peer) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_phone_receivedCall.peer)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TL_phone_discardCall::kPeerFieldNumber;
const int TL_phone_discardCall::kDurationFieldNumber;
const int TL_phone_discardCall::kReasonFieldNumber;
const int TL_phone_discardCall::kConnectionIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TL_phone_discardCall::TL_phone_discardCall()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.TL_phone_discardCall)
}
TL_phone_discardCall::TL_phone_discardCall(const TL_phone_discardCall& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_peer()) {
    peer_ = new ::mtproto::InputPhoneCall(*from.peer_);
  } else {
    peer_ = NULL;
  }
  if (from.has_reason()) {
    reason_ = new ::mtproto::PhoneCallDiscardReason(*from.reason_);
  } else {
    reason_ = NULL;
  }
  ::memcpy(&connection_id_, &from.connection_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&duration_) -
    reinterpret_cast<char*>(&connection_id_)) + sizeof(duration_));
  // @@protoc_insertion_point(copy_constructor:mtproto.TL_phone_discardCall)
}

void TL_phone_discardCall::SharedCtor() {
  ::memset(&peer_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&duration_) -
      reinterpret_cast<char*>(&peer_)) + sizeof(duration_));
  _cached_size_ = 0;
}

TL_phone_discardCall::~TL_phone_discardCall() {
  // @@protoc_insertion_point(destructor:mtproto.TL_phone_discardCall)
  SharedDtor();
}

void TL_phone_discardCall::SharedDtor() {
  if (this != internal_default_instance()) delete peer_;
  if (this != internal_default_instance()) delete reason_;
}

void TL_phone_discardCall::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TL_phone_discardCall::descriptor() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TL_phone_discardCall& TL_phone_discardCall::default_instance() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  return *internal_default_instance();
}

TL_phone_discardCall* TL_phone_discardCall::New(::google::protobuf::Arena* arena) const {
  TL_phone_discardCall* n = new TL_phone_discardCall;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TL_phone_discardCall::Swap(TL_phone_discardCall* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TL_phone_discardCall::InternalSwap(TL_phone_discardCall* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata TL_phone_discardCall::GetMetadata() const {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TL_phone_discardCall

// .mtproto.InputPhoneCall peer = 1;
bool TL_phone_discardCall::has_peer() const {
  return this != internal_default_instance() && peer_ != NULL;
}
void TL_phone_discardCall::clear_peer() {
  if (GetArenaNoVirtual() == NULL && peer_ != NULL) delete peer_;
  peer_ = NULL;
}
const ::mtproto::InputPhoneCall& TL_phone_discardCall::peer() const {
  const ::mtproto::InputPhoneCall* p = peer_;
  // @@protoc_insertion_point(field_get:mtproto.TL_phone_discardCall.peer)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::InputPhoneCall*>(
      &::mtproto::_InputPhoneCall_default_instance_);
}
::mtproto::InputPhoneCall* TL_phone_discardCall::mutable_peer() {
  
  if (peer_ == NULL) {
    peer_ = new ::mtproto::InputPhoneCall;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_phone_discardCall.peer)
  return peer_;
}
::mtproto::InputPhoneCall* TL_phone_discardCall::release_peer() {
  // @@protoc_insertion_point(field_release:mtproto.TL_phone_discardCall.peer)
  
  ::mtproto::InputPhoneCall* temp = peer_;
  peer_ = NULL;
  return temp;
}
void TL_phone_discardCall::set_allocated_peer(::mtproto::InputPhoneCall* peer) {
  delete peer_;
  peer_ = peer;
  if (peer) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_phone_discardCall.peer)
}

// int32 duration = 2;
void TL_phone_discardCall::clear_duration() {
  duration_ = 0;
}
::google::protobuf::int32 TL_phone_discardCall::duration() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_phone_discardCall.duration)
  return duration_;
}
void TL_phone_discardCall::set_duration(::google::protobuf::int32 value) {
  
  duration_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_phone_discardCall.duration)
}

// .mtproto.PhoneCallDiscardReason reason = 3;
bool TL_phone_discardCall::has_reason() const {
  return this != internal_default_instance() && reason_ != NULL;
}
void TL_phone_discardCall::clear_reason() {
  if (GetArenaNoVirtual() == NULL && reason_ != NULL) delete reason_;
  reason_ = NULL;
}
const ::mtproto::PhoneCallDiscardReason& TL_phone_discardCall::reason() const {
  const ::mtproto::PhoneCallDiscardReason* p = reason_;
  // @@protoc_insertion_point(field_get:mtproto.TL_phone_discardCall.reason)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::PhoneCallDiscardReason*>(
      &::mtproto::_PhoneCallDiscardReason_default_instance_);
}
::mtproto::PhoneCallDiscardReason* TL_phone_discardCall::mutable_reason() {
  
  if (reason_ == NULL) {
    reason_ = new ::mtproto::PhoneCallDiscardReason;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_phone_discardCall.reason)
  return reason_;
}
::mtproto::PhoneCallDiscardReason* TL_phone_discardCall::release_reason() {
  // @@protoc_insertion_point(field_release:mtproto.TL_phone_discardCall.reason)
  
  ::mtproto::PhoneCallDiscardReason* temp = reason_;
  reason_ = NULL;
  return temp;
}
void TL_phone_discardCall::set_allocated_reason(::mtproto::PhoneCallDiscardReason* reason) {
  delete reason_;
  reason_ = reason;
  if (reason) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_phone_discardCall.reason)
}

// int64 connection_id = 4;
void TL_phone_discardCall::clear_connection_id() {
  connection_id_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 TL_phone_discardCall::connection_id() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_phone_discardCall.connection_id)
  return connection_id_;
}
void TL_phone_discardCall::set_connection_id(::google::protobuf::int64 value) {
  
  connection_id_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_phone_discardCall.connection_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TL_phone_setCallRating::kPeerFieldNumber;
const int TL_phone_setCallRating::kRatingFieldNumber;
const int TL_phone_setCallRating::kCommentFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TL_phone_setCallRating::TL_phone_setCallRating()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.TL_phone_setCallRating)
}
TL_phone_setCallRating::TL_phone_setCallRating(const TL_phone_setCallRating& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  comment_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.comment().size() > 0) {
    comment_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.comment_);
  }
  if (from.has_peer()) {
    peer_ = new ::mtproto::InputPhoneCall(*from.peer_);
  } else {
    peer_ = NULL;
  }
  rating_ = from.rating_;
  // @@protoc_insertion_point(copy_constructor:mtproto.TL_phone_setCallRating)
}

void TL_phone_setCallRating::SharedCtor() {
  comment_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&peer_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&rating_) -
      reinterpret_cast<char*>(&peer_)) + sizeof(rating_));
  _cached_size_ = 0;
}

TL_phone_setCallRating::~TL_phone_setCallRating() {
  // @@protoc_insertion_point(destructor:mtproto.TL_phone_setCallRating)
  SharedDtor();
}

void TL_phone_setCallRating::SharedDtor() {
  comment_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete peer_;
}

void TL_phone_setCallRating::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TL_phone_setCallRating::descriptor() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TL_phone_setCallRating& TL_phone_setCallRating::default_instance() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  return *internal_default_instance();
}

TL_phone_setCallRating* TL_phone_setCallRating::New(::google::protobuf::Arena* arena) const {
  TL_phone_setCallRating* n = new TL_phone_setCallRating;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TL_phone_setCallRating::Swap(TL_phone_setCallRating* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TL_phone_setCallRating::InternalSwap(TL_phone_setCallRating* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata TL_phone_setCallRating::GetMetadata() const {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TL_phone_setCallRating

// .mtproto.InputPhoneCall peer = 1;
bool TL_phone_setCallRating::has_peer() const {
  return this != internal_default_instance() && peer_ != NULL;
}
void TL_phone_setCallRating::clear_peer() {
  if (GetArenaNoVirtual() == NULL && peer_ != NULL) delete peer_;
  peer_ = NULL;
}
const ::mtproto::InputPhoneCall& TL_phone_setCallRating::peer() const {
  const ::mtproto::InputPhoneCall* p = peer_;
  // @@protoc_insertion_point(field_get:mtproto.TL_phone_setCallRating.peer)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::InputPhoneCall*>(
      &::mtproto::_InputPhoneCall_default_instance_);
}
::mtproto::InputPhoneCall* TL_phone_setCallRating::mutable_peer() {
  
  if (peer_ == NULL) {
    peer_ = new ::mtproto::InputPhoneCall;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_phone_setCallRating.peer)
  return peer_;
}
::mtproto::InputPhoneCall* TL_phone_setCallRating::release_peer() {
  // @@protoc_insertion_point(field_release:mtproto.TL_phone_setCallRating.peer)
  
  ::mtproto::InputPhoneCall* temp = peer_;
  peer_ = NULL;
  return temp;
}
void TL_phone_setCallRating::set_allocated_peer(::mtproto::InputPhoneCall* peer) {
  delete peer_;
  peer_ = peer;
  if (peer) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_phone_setCallRating.peer)
}

// int32 rating = 2;
void TL_phone_setCallRating::clear_rating() {
  rating_ = 0;
}
::google::protobuf::int32 TL_phone_setCallRating::rating() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_phone_setCallRating.rating)
  return rating_;
}
void TL_phone_setCallRating::set_rating(::google::protobuf::int32 value) {
  
  rating_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_phone_setCallRating.rating)
}

// string comment = 3;
void TL_phone_setCallRating::clear_comment() {
  comment_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& TL_phone_setCallRating::comment() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_phone_setCallRating.comment)
  return comment_.GetNoArena();
}
void TL_phone_setCallRating::set_comment(const ::std::string& value) {
  
  comment_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtproto.TL_phone_setCallRating.comment)
}
#if LANG_CXX11
void TL_phone_setCallRating::set_comment(::std::string&& value) {
  
  comment_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mtproto.TL_phone_setCallRating.comment)
}
#endif
void TL_phone_setCallRating::set_comment(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  comment_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtproto.TL_phone_setCallRating.comment)
}
void TL_phone_setCallRating::set_comment(const char* value, size_t size) {
  
  comment_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtproto.TL_phone_setCallRating.comment)
}
::std::string* TL_phone_setCallRating::mutable_comment() {
  
  // @@protoc_insertion_point(field_mutable:mtproto.TL_phone_setCallRating.comment)
  return comment_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* TL_phone_setCallRating::release_comment() {
  // @@protoc_insertion_point(field_release:mtproto.TL_phone_setCallRating.comment)
  
  return comment_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TL_phone_setCallRating::set_allocated_comment(::std::string* comment) {
  if (comment != NULL) {
    
  } else {
    
  }
  comment_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), comment);
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_phone_setCallRating.comment)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TL_phone_saveCallDebug::kPeerFieldNumber;
const int TL_phone_saveCallDebug::kDebugFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TL_phone_saveCallDebug::TL_phone_saveCallDebug()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.TL_phone_saveCallDebug)
}
TL_phone_saveCallDebug::TL_phone_saveCallDebug(const TL_phone_saveCallDebug& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_peer()) {
    peer_ = new ::mtproto::InputPhoneCall(*from.peer_);
  } else {
    peer_ = NULL;
  }
  if (from.has_debug()) {
    debug_ = new ::mtproto::DataJSON(*from.debug_);
  } else {
    debug_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:mtproto.TL_phone_saveCallDebug)
}

void TL_phone_saveCallDebug::SharedCtor() {
  ::memset(&peer_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&debug_) -
      reinterpret_cast<char*>(&peer_)) + sizeof(debug_));
  _cached_size_ = 0;
}

TL_phone_saveCallDebug::~TL_phone_saveCallDebug() {
  // @@protoc_insertion_point(destructor:mtproto.TL_phone_saveCallDebug)
  SharedDtor();
}

void TL_phone_saveCallDebug::SharedDtor() {
  if (this != internal_default_instance()) delete peer_;
  if (this != internal_default_instance()) delete debug_;
}

void TL_phone_saveCallDebug::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TL_phone_saveCallDebug::descriptor() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TL_phone_saveCallDebug& TL_phone_saveCallDebug::default_instance() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  return *internal_default_instance();
}

TL_phone_saveCallDebug* TL_phone_saveCallDebug::New(::google::protobuf::Arena* arena) const {
  TL_phone_saveCallDebug* n = new TL_phone_saveCallDebug;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TL_phone_saveCallDebug::Swap(TL_phone_saveCallDebug* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TL_phone_saveCallDebug::InternalSwap(TL_phone_saveCallDebug* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata TL_phone_saveCallDebug::GetMetadata() const {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TL_phone_saveCallDebug

// .mtproto.InputPhoneCall peer = 1;
bool TL_phone_saveCallDebug::has_peer() const {
  return this != internal_default_instance() && peer_ != NULL;
}
void TL_phone_saveCallDebug::clear_peer() {
  if (GetArenaNoVirtual() == NULL && peer_ != NULL) delete peer_;
  peer_ = NULL;
}
const ::mtproto::InputPhoneCall& TL_phone_saveCallDebug::peer() const {
  const ::mtproto::InputPhoneCall* p = peer_;
  // @@protoc_insertion_point(field_get:mtproto.TL_phone_saveCallDebug.peer)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::InputPhoneCall*>(
      &::mtproto::_InputPhoneCall_default_instance_);
}
::mtproto::InputPhoneCall* TL_phone_saveCallDebug::mutable_peer() {
  
  if (peer_ == NULL) {
    peer_ = new ::mtproto::InputPhoneCall;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_phone_saveCallDebug.peer)
  return peer_;
}
::mtproto::InputPhoneCall* TL_phone_saveCallDebug::release_peer() {
  // @@protoc_insertion_point(field_release:mtproto.TL_phone_saveCallDebug.peer)
  
  ::mtproto::InputPhoneCall* temp = peer_;
  peer_ = NULL;
  return temp;
}
void TL_phone_saveCallDebug::set_allocated_peer(::mtproto::InputPhoneCall* peer) {
  delete peer_;
  peer_ = peer;
  if (peer) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_phone_saveCallDebug.peer)
}

// .mtproto.DataJSON debug = 2;
bool TL_phone_saveCallDebug::has_debug() const {
  return this != internal_default_instance() && debug_ != NULL;
}
void TL_phone_saveCallDebug::clear_debug() {
  if (GetArenaNoVirtual() == NULL && debug_ != NULL) delete debug_;
  debug_ = NULL;
}
const ::mtproto::DataJSON& TL_phone_saveCallDebug::debug() const {
  const ::mtproto::DataJSON* p = debug_;
  // @@protoc_insertion_point(field_get:mtproto.TL_phone_saveCallDebug.debug)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::DataJSON*>(
      &::mtproto::_DataJSON_default_instance_);
}
::mtproto::DataJSON* TL_phone_saveCallDebug::mutable_debug() {
  
  if (debug_ == NULL) {
    debug_ = new ::mtproto::DataJSON;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_phone_saveCallDebug.debug)
  return debug_;
}
::mtproto::DataJSON* TL_phone_saveCallDebug::release_debug() {
  // @@protoc_insertion_point(field_release:mtproto.TL_phone_saveCallDebug.debug)
  
  ::mtproto::DataJSON* temp = debug_;
  debug_ = NULL;
  return temp;
}
void TL_phone_saveCallDebug::set_allocated_debug(::mtproto::DataJSON* debug) {
  delete debug_;
  debug_ = debug;
  if (debug) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_phone_saveCallDebug.debug)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TL_langpack_getLangPack::kLangPackFieldNumber;
const int TL_langpack_getLangPack::kLangCodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TL_langpack_getLangPack::TL_langpack_getLangPack()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.TL_langpack_getLangPack)
}
TL_langpack_getLangPack::TL_langpack_getLangPack(const TL_langpack_getLangPack& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  lang_pack_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.lang_pack().size() > 0) {
    lang_pack_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.lang_pack_);
  }
  lang_code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.lang_code().size() > 0) {
    lang_code_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.lang_code_);
  }
  // @@protoc_insertion_point(copy_constructor:mtproto.TL_langpack_getLangPack)
}

void TL_langpack_getLangPack::SharedCtor() {
  lang_pack_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  lang_code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

TL_langpack_getLangPack::~TL_langpack_getLangPack() {
  // @@protoc_insertion_point(destructor:mtproto.TL_langpack_getLangPack)
  SharedDtor();
}

void TL_langpack_getLangPack::SharedDtor() {
  lang_pack_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  lang_code_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void TL_langpack_getLangPack::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TL_langpack_getLangPack::descriptor() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TL_langpack_getLangPack& TL_langpack_getLangPack::default_instance() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  return *internal_default_instance();
}

TL_langpack_getLangPack* TL_langpack_getLangPack::New(::google::protobuf::Arena* arena) const {
  TL_langpack_getLangPack* n = new TL_langpack_getLangPack;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TL_langpack_getLangPack::Swap(TL_langpack_getLangPack* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TL_langpack_getLangPack::InternalSwap(TL_langpack_getLangPack* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata TL_langpack_getLangPack::GetMetadata() const {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TL_langpack_getLangPack

// string lang_pack = 1;
void TL_langpack_getLangPack::clear_lang_pack() {
  lang_pack_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& TL_langpack_getLangPack::lang_pack() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_langpack_getLangPack.lang_pack)
  return lang_pack_.GetNoArena();
}
void TL_langpack_getLangPack::set_lang_pack(const ::std::string& value) {
  
  lang_pack_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtproto.TL_langpack_getLangPack.lang_pack)
}
#if LANG_CXX11
void TL_langpack_getLangPack::set_lang_pack(::std::string&& value) {
  
  lang_pack_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mtproto.TL_langpack_getLangPack.lang_pack)
}
#endif
void TL_langpack_getLangPack::set_lang_pack(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  lang_pack_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtproto.TL_langpack_getLangPack.lang_pack)
}
void TL_langpack_getLangPack::set_lang_pack(const char* value, size_t size) {
  
  lang_pack_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtproto.TL_langpack_getLangPack.lang_pack)
}
::std::string* TL_langpack_getLangPack::mutable_lang_pack() {
  
  // @@protoc_insertion_point(field_mutable:mtproto.TL_langpack_getLangPack.lang_pack)
  return lang_pack_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* TL_langpack_getLangPack::release_lang_pack() {
  // @@protoc_insertion_point(field_release:mtproto.TL_langpack_getLangPack.lang_pack)
  
  return lang_pack_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TL_langpack_getLangPack::set_allocated_lang_pack(::std::string* lang_pack) {
  if (lang_pack != NULL) {
    
  } else {
    
  }
  lang_pack_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), lang_pack);
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_langpack_getLangPack.lang_pack)
}

// string lang_code = 2;
void TL_langpack_getLangPack::clear_lang_code() {
  lang_code_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& TL_langpack_getLangPack::lang_code() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_langpack_getLangPack.lang_code)
  return lang_code_.GetNoArena();
}
void TL_langpack_getLangPack::set_lang_code(const ::std::string& value) {
  
  lang_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtproto.TL_langpack_getLangPack.lang_code)
}
#if LANG_CXX11
void TL_langpack_getLangPack::set_lang_code(::std::string&& value) {
  
  lang_code_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mtproto.TL_langpack_getLangPack.lang_code)
}
#endif
void TL_langpack_getLangPack::set_lang_code(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  lang_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtproto.TL_langpack_getLangPack.lang_code)
}
void TL_langpack_getLangPack::set_lang_code(const char* value, size_t size) {
  
  lang_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtproto.TL_langpack_getLangPack.lang_code)
}
::std::string* TL_langpack_getLangPack::mutable_lang_code() {
  
  // @@protoc_insertion_point(field_mutable:mtproto.TL_langpack_getLangPack.lang_code)
  return lang_code_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* TL_langpack_getLangPack::release_lang_code() {
  // @@protoc_insertion_point(field_release:mtproto.TL_langpack_getLangPack.lang_code)
  
  return lang_code_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TL_langpack_getLangPack::set_allocated_lang_code(::std::string* lang_code) {
  if (lang_code != NULL) {
    
  } else {
    
  }
  lang_code_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), lang_code);
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_langpack_getLangPack.lang_code)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TL_langpack_getStrings::kLangPackFieldNumber;
const int TL_langpack_getStrings::kLangCodeFieldNumber;
const int TL_langpack_getStrings::kKeysFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TL_langpack_getStrings::TL_langpack_getStrings()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.TL_langpack_getStrings)
}
TL_langpack_getStrings::TL_langpack_getStrings(const TL_langpack_getStrings& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      keys_(from.keys_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  lang_pack_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.lang_pack().size() > 0) {
    lang_pack_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.lang_pack_);
  }
  lang_code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.lang_code().size() > 0) {
    lang_code_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.lang_code_);
  }
  // @@protoc_insertion_point(copy_constructor:mtproto.TL_langpack_getStrings)
}

void TL_langpack_getStrings::SharedCtor() {
  lang_pack_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  lang_code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

TL_langpack_getStrings::~TL_langpack_getStrings() {
  // @@protoc_insertion_point(destructor:mtproto.TL_langpack_getStrings)
  SharedDtor();
}

void TL_langpack_getStrings::SharedDtor() {
  lang_pack_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  lang_code_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void TL_langpack_getStrings::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TL_langpack_getStrings::descriptor() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TL_langpack_getStrings& TL_langpack_getStrings::default_instance() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  return *internal_default_instance();
}

TL_langpack_getStrings* TL_langpack_getStrings::New(::google::protobuf::Arena* arena) const {
  TL_langpack_getStrings* n = new TL_langpack_getStrings;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TL_langpack_getStrings::Swap(TL_langpack_getStrings* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TL_langpack_getStrings::InternalSwap(TL_langpack_getStrings* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata TL_langpack_getStrings::GetMetadata() const {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TL_langpack_getStrings

// string lang_pack = 1;
void TL_langpack_getStrings::clear_lang_pack() {
  lang_pack_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& TL_langpack_getStrings::lang_pack() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_langpack_getStrings.lang_pack)
  return lang_pack_.GetNoArena();
}
void TL_langpack_getStrings::set_lang_pack(const ::std::string& value) {
  
  lang_pack_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtproto.TL_langpack_getStrings.lang_pack)
}
#if LANG_CXX11
void TL_langpack_getStrings::set_lang_pack(::std::string&& value) {
  
  lang_pack_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mtproto.TL_langpack_getStrings.lang_pack)
}
#endif
void TL_langpack_getStrings::set_lang_pack(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  lang_pack_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtproto.TL_langpack_getStrings.lang_pack)
}
void TL_langpack_getStrings::set_lang_pack(const char* value, size_t size) {
  
  lang_pack_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtproto.TL_langpack_getStrings.lang_pack)
}
::std::string* TL_langpack_getStrings::mutable_lang_pack() {
  
  // @@protoc_insertion_point(field_mutable:mtproto.TL_langpack_getStrings.lang_pack)
  return lang_pack_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* TL_langpack_getStrings::release_lang_pack() {
  // @@protoc_insertion_point(field_release:mtproto.TL_langpack_getStrings.lang_pack)
  
  return lang_pack_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TL_langpack_getStrings::set_allocated_lang_pack(::std::string* lang_pack) {
  if (lang_pack != NULL) {
    
  } else {
    
  }
  lang_pack_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), lang_pack);
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_langpack_getStrings.lang_pack)
}

// string lang_code = 2;
void TL_langpack_getStrings::clear_lang_code() {
  lang_code_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& TL_langpack_getStrings::lang_code() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_langpack_getStrings.lang_code)
  return lang_code_.GetNoArena();
}
void TL_langpack_getStrings::set_lang_code(const ::std::string& value) {
  
  lang_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtproto.TL_langpack_getStrings.lang_code)
}
#if LANG_CXX11
void TL_langpack_getStrings::set_lang_code(::std::string&& value) {
  
  lang_code_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mtproto.TL_langpack_getStrings.lang_code)
}
#endif
void TL_langpack_getStrings::set_lang_code(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  lang_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtproto.TL_langpack_getStrings.lang_code)
}
void TL_langpack_getStrings::set_lang_code(const char* value, size_t size) {
  
  lang_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtproto.TL_langpack_getStrings.lang_code)
}
::std::string* TL_langpack_getStrings::mutable_lang_code() {
  
  // @@protoc_insertion_point(field_mutable:mtproto.TL_langpack_getStrings.lang_code)
  return lang_code_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* TL_langpack_getStrings::release_lang_code() {
  // @@protoc_insertion_point(field_release:mtproto.TL_langpack_getStrings.lang_code)
  
  return lang_code_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TL_langpack_getStrings::set_allocated_lang_code(::std::string* lang_code) {
  if (lang_code != NULL) {
    
  } else {
    
  }
  lang_code_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), lang_code);
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_langpack_getStrings.lang_code)
}

// repeated string keys = 3;
int TL_langpack_getStrings::keys_size() const {
  return keys_.size();
}
void TL_langpack_getStrings::clear_keys() {
  keys_.Clear();
}
const ::std::string& TL_langpack_getStrings::keys(int index) const {
  // @@protoc_insertion_point(field_get:mtproto.TL_langpack_getStrings.keys)
  return keys_.Get(index);
}
::std::string* TL_langpack_getStrings::mutable_keys(int index) {
  // @@protoc_insertion_point(field_mutable:mtproto.TL_langpack_getStrings.keys)
  return keys_.Mutable(index);
}
void TL_langpack_getStrings::set_keys(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:mtproto.TL_langpack_getStrings.keys)
  keys_.Mutable(index)->assign(value);
}
#if LANG_CXX11
void TL_langpack_getStrings::set_keys(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:mtproto.TL_langpack_getStrings.keys)
  keys_.Mutable(index)->assign(std::move(value));
}
#endif
void TL_langpack_getStrings::set_keys(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  keys_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:mtproto.TL_langpack_getStrings.keys)
}
void TL_langpack_getStrings::set_keys(int index, const char* value, size_t size) {
  keys_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:mtproto.TL_langpack_getStrings.keys)
}
::std::string* TL_langpack_getStrings::add_keys() {
  // @@protoc_insertion_point(field_add_mutable:mtproto.TL_langpack_getStrings.keys)
  return keys_.Add();
}
void TL_langpack_getStrings::add_keys(const ::std::string& value) {
  keys_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:mtproto.TL_langpack_getStrings.keys)
}
#if LANG_CXX11
void TL_langpack_getStrings::add_keys(::std::string&& value) {
  keys_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:mtproto.TL_langpack_getStrings.keys)
}
#endif
void TL_langpack_getStrings::add_keys(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  keys_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:mtproto.TL_langpack_getStrings.keys)
}
void TL_langpack_getStrings::add_keys(const char* value, size_t size) {
  keys_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:mtproto.TL_langpack_getStrings.keys)
}
const ::google::protobuf::RepeatedPtrField< ::std::string>&
TL_langpack_getStrings::keys() const {
  // @@protoc_insertion_point(field_list:mtproto.TL_langpack_getStrings.keys)
  return keys_;
}
::google::protobuf::RepeatedPtrField< ::std::string>*
TL_langpack_getStrings::mutable_keys() {
  // @@protoc_insertion_point(field_mutable_list:mtproto.TL_langpack_getStrings.keys)
  return &keys_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TL_langpack_getDifference::kFromVersionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TL_langpack_getDifference::TL_langpack_getDifference()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.TL_langpack_getDifference)
}
TL_langpack_getDifference::TL_langpack_getDifference(const TL_langpack_getDifference& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  from_version_ = from.from_version_;
  // @@protoc_insertion_point(copy_constructor:mtproto.TL_langpack_getDifference)
}

void TL_langpack_getDifference::SharedCtor() {
  from_version_ = 0;
  _cached_size_ = 0;
}

TL_langpack_getDifference::~TL_langpack_getDifference() {
  // @@protoc_insertion_point(destructor:mtproto.TL_langpack_getDifference)
  SharedDtor();
}

void TL_langpack_getDifference::SharedDtor() {
}

void TL_langpack_getDifference::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TL_langpack_getDifference::descriptor() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TL_langpack_getDifference& TL_langpack_getDifference::default_instance() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  return *internal_default_instance();
}

TL_langpack_getDifference* TL_langpack_getDifference::New(::google::protobuf::Arena* arena) const {
  TL_langpack_getDifference* n = new TL_langpack_getDifference;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TL_langpack_getDifference::Swap(TL_langpack_getDifference* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TL_langpack_getDifference::InternalSwap(TL_langpack_getDifference* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata TL_langpack_getDifference::GetMetadata() const {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TL_langpack_getDifference

// int32 from_version = 1;
void TL_langpack_getDifference::clear_from_version() {
  from_version_ = 0;
}
::google::protobuf::int32 TL_langpack_getDifference::from_version() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_langpack_getDifference.from_version)
  return from_version_;
}
void TL_langpack_getDifference::set_from_version(::google::protobuf::int32 value) {
  
  from_version_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_langpack_getDifference.from_version)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TL_langpack_getLanguages::kLangPackFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TL_langpack_getLanguages::TL_langpack_getLanguages()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.TL_langpack_getLanguages)
}
TL_langpack_getLanguages::TL_langpack_getLanguages(const TL_langpack_getLanguages& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  lang_pack_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.lang_pack().size() > 0) {
    lang_pack_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.lang_pack_);
  }
  // @@protoc_insertion_point(copy_constructor:mtproto.TL_langpack_getLanguages)
}

void TL_langpack_getLanguages::SharedCtor() {
  lang_pack_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

TL_langpack_getLanguages::~TL_langpack_getLanguages() {
  // @@protoc_insertion_point(destructor:mtproto.TL_langpack_getLanguages)
  SharedDtor();
}

void TL_langpack_getLanguages::SharedDtor() {
  lang_pack_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void TL_langpack_getLanguages::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TL_langpack_getLanguages::descriptor() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TL_langpack_getLanguages& TL_langpack_getLanguages::default_instance() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  return *internal_default_instance();
}

TL_langpack_getLanguages* TL_langpack_getLanguages::New(::google::protobuf::Arena* arena) const {
  TL_langpack_getLanguages* n = new TL_langpack_getLanguages;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TL_langpack_getLanguages::Swap(TL_langpack_getLanguages* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TL_langpack_getLanguages::InternalSwap(TL_langpack_getLanguages* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata TL_langpack_getLanguages::GetMetadata() const {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TL_langpack_getLanguages

// string lang_pack = 1;
void TL_langpack_getLanguages::clear_lang_pack() {
  lang_pack_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& TL_langpack_getLanguages::lang_pack() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_langpack_getLanguages.lang_pack)
  return lang_pack_.GetNoArena();
}
void TL_langpack_getLanguages::set_lang_pack(const ::std::string& value) {
  
  lang_pack_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtproto.TL_langpack_getLanguages.lang_pack)
}
#if LANG_CXX11
void TL_langpack_getLanguages::set_lang_pack(::std::string&& value) {
  
  lang_pack_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mtproto.TL_langpack_getLanguages.lang_pack)
}
#endif
void TL_langpack_getLanguages::set_lang_pack(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  lang_pack_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtproto.TL_langpack_getLanguages.lang_pack)
}
void TL_langpack_getLanguages::set_lang_pack(const char* value, size_t size) {
  
  lang_pack_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtproto.TL_langpack_getLanguages.lang_pack)
}
::std::string* TL_langpack_getLanguages::mutable_lang_pack() {
  
  // @@protoc_insertion_point(field_mutable:mtproto.TL_langpack_getLanguages.lang_pack)
  return lang_pack_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* TL_langpack_getLanguages::release_lang_pack() {
  // @@protoc_insertion_point(field_release:mtproto.TL_langpack_getLanguages.lang_pack)
  
  return lang_pack_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TL_langpack_getLanguages::set_allocated_lang_pack(::std::string* lang_pack) {
  if (lang_pack != NULL) {
    
  } else {
    
  }
  lang_pack_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), lang_pack);
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_langpack_getLanguages.lang_pack)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Vector_LangPackLanguage::kDatasFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Vector_LangPackLanguage::Vector_LangPackLanguage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.Vector_LangPackLanguage)
}
Vector_LangPackLanguage::Vector_LangPackLanguage(const Vector_LangPackLanguage& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      datas_(from.datas_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:mtproto.Vector_LangPackLanguage)
}

void Vector_LangPackLanguage::SharedCtor() {
  _cached_size_ = 0;
}

Vector_LangPackLanguage::~Vector_LangPackLanguage() {
  // @@protoc_insertion_point(destructor:mtproto.Vector_LangPackLanguage)
  SharedDtor();
}

void Vector_LangPackLanguage::SharedDtor() {
}

void Vector_LangPackLanguage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Vector_LangPackLanguage::descriptor() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Vector_LangPackLanguage& Vector_LangPackLanguage::default_instance() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  return *internal_default_instance();
}

Vector_LangPackLanguage* Vector_LangPackLanguage::New(::google::protobuf::Arena* arena) const {
  Vector_LangPackLanguage* n = new Vector_LangPackLanguage;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Vector_LangPackLanguage::Swap(Vector_LangPackLanguage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Vector_LangPackLanguage::InternalSwap(Vector_LangPackLanguage* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata Vector_LangPackLanguage::GetMetadata() const {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Vector_LangPackLanguage

// repeated .mtproto.LangPackLanguage datas = 1;
int Vector_LangPackLanguage::datas_size() const {
  return datas_.size();
}
void Vector_LangPackLanguage::clear_datas() {
  datas_.Clear();
}
const ::mtproto::LangPackLanguage& Vector_LangPackLanguage::datas(int index) const {
  // @@protoc_insertion_point(field_get:mtproto.Vector_LangPackLanguage.datas)
  return datas_.Get(index);
}
::mtproto::LangPackLanguage* Vector_LangPackLanguage::mutable_datas(int index) {
  // @@protoc_insertion_point(field_mutable:mtproto.Vector_LangPackLanguage.datas)
  return datas_.Mutable(index);
}
::mtproto::LangPackLanguage* Vector_LangPackLanguage::add_datas() {
  // @@protoc_insertion_point(field_add:mtproto.Vector_LangPackLanguage.datas)
  return datas_.Add();
}
::google::protobuf::RepeatedPtrField< ::mtproto::LangPackLanguage >*
Vector_LangPackLanguage::mutable_datas() {
  // @@protoc_insertion_point(field_mutable_list:mtproto.Vector_LangPackLanguage.datas)
  return &datas_;
}
const ::google::protobuf::RepeatedPtrField< ::mtproto::LangPackLanguage >&
Vector_LangPackLanguage::datas() const {
  // @@protoc_insertion_point(field_list:mtproto.Vector_LangPackLanguage.datas)
  return datas_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Vector_WallPaper::kDatasFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Vector_WallPaper::Vector_WallPaper()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.Vector_WallPaper)
}
Vector_WallPaper::Vector_WallPaper(const Vector_WallPaper& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      datas_(from.datas_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:mtproto.Vector_WallPaper)
}

void Vector_WallPaper::SharedCtor() {
  _cached_size_ = 0;
}

Vector_WallPaper::~Vector_WallPaper() {
  // @@protoc_insertion_point(destructor:mtproto.Vector_WallPaper)
  SharedDtor();
}

void Vector_WallPaper::SharedDtor() {
}

void Vector_WallPaper::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Vector_WallPaper::descriptor() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Vector_WallPaper& Vector_WallPaper::default_instance() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  return *internal_default_instance();
}

Vector_WallPaper* Vector_WallPaper::New(::google::protobuf::Arena* arena) const {
  Vector_WallPaper* n = new Vector_WallPaper;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Vector_WallPaper::Swap(Vector_WallPaper* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Vector_WallPaper::InternalSwap(Vector_WallPaper* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata Vector_WallPaper::GetMetadata() const {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Vector_WallPaper

// repeated .mtproto.WallPaper datas = 1;
int Vector_WallPaper::datas_size() const {
  return datas_.size();
}
void Vector_WallPaper::clear_datas() {
  datas_.Clear();
}
const ::mtproto::WallPaper& Vector_WallPaper::datas(int index) const {
  // @@protoc_insertion_point(field_get:mtproto.Vector_WallPaper.datas)
  return datas_.Get(index);
}
::mtproto::WallPaper* Vector_WallPaper::mutable_datas(int index) {
  // @@protoc_insertion_point(field_mutable:mtproto.Vector_WallPaper.datas)
  return datas_.Mutable(index);
}
::mtproto::WallPaper* Vector_WallPaper::add_datas() {
  // @@protoc_insertion_point(field_add:mtproto.Vector_WallPaper.datas)
  return datas_.Add();
}
::google::protobuf::RepeatedPtrField< ::mtproto::WallPaper >*
Vector_WallPaper::mutable_datas() {
  // @@protoc_insertion_point(field_mutable_list:mtproto.Vector_WallPaper.datas)
  return &datas_;
}
const ::google::protobuf::RepeatedPtrField< ::mtproto::WallPaper >&
Vector_WallPaper::datas() const {
  // @@protoc_insertion_point(field_list:mtproto.Vector_WallPaper.datas)
  return datas_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Vector_SecureValue::kDatasFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Vector_SecureValue::Vector_SecureValue()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.Vector_SecureValue)
}
Vector_SecureValue::Vector_SecureValue(const Vector_SecureValue& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      datas_(from.datas_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:mtproto.Vector_SecureValue)
}

void Vector_SecureValue::SharedCtor() {
  _cached_size_ = 0;
}

Vector_SecureValue::~Vector_SecureValue() {
  // @@protoc_insertion_point(destructor:mtproto.Vector_SecureValue)
  SharedDtor();
}

void Vector_SecureValue::SharedDtor() {
}

void Vector_SecureValue::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Vector_SecureValue::descriptor() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Vector_SecureValue& Vector_SecureValue::default_instance() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  return *internal_default_instance();
}

Vector_SecureValue* Vector_SecureValue::New(::google::protobuf::Arena* arena) const {
  Vector_SecureValue* n = new Vector_SecureValue;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Vector_SecureValue::Swap(Vector_SecureValue* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Vector_SecureValue::InternalSwap(Vector_SecureValue* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata Vector_SecureValue::GetMetadata() const {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Vector_SecureValue

// repeated .mtproto.SecureValue datas = 1;
int Vector_SecureValue::datas_size() const {
  return datas_.size();
}
void Vector_SecureValue::clear_datas() {
  datas_.Clear();
}
const ::mtproto::SecureValue& Vector_SecureValue::datas(int index) const {
  // @@protoc_insertion_point(field_get:mtproto.Vector_SecureValue.datas)
  return datas_.Get(index);
}
::mtproto::SecureValue* Vector_SecureValue::mutable_datas(int index) {
  // @@protoc_insertion_point(field_mutable:mtproto.Vector_SecureValue.datas)
  return datas_.Mutable(index);
}
::mtproto::SecureValue* Vector_SecureValue::add_datas() {
  // @@protoc_insertion_point(field_add:mtproto.Vector_SecureValue.datas)
  return datas_.Add();
}
::google::protobuf::RepeatedPtrField< ::mtproto::SecureValue >*
Vector_SecureValue::mutable_datas() {
  // @@protoc_insertion_point(field_mutable_list:mtproto.Vector_SecureValue.datas)
  return &datas_;
}
const ::google::protobuf::RepeatedPtrField< ::mtproto::SecureValue >&
Vector_SecureValue::datas() const {
  // @@protoc_insertion_point(field_list:mtproto.Vector_SecureValue.datas)
  return datas_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Vector_User::kDatasFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Vector_User::Vector_User()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.Vector_User)
}
Vector_User::Vector_User(const Vector_User& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      datas_(from.datas_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:mtproto.Vector_User)
}

void Vector_User::SharedCtor() {
  _cached_size_ = 0;
}

Vector_User::~Vector_User() {
  // @@protoc_insertion_point(destructor:mtproto.Vector_User)
  SharedDtor();
}

void Vector_User::SharedDtor() {
}

void Vector_User::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Vector_User::descriptor() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Vector_User& Vector_User::default_instance() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  return *internal_default_instance();
}

Vector_User* Vector_User::New(::google::protobuf::Arena* arena) const {
  Vector_User* n = new Vector_User;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Vector_User::Swap(Vector_User* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Vector_User::InternalSwap(Vector_User* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata Vector_User::GetMetadata() const {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Vector_User

// repeated .mtproto.User datas = 1;
int Vector_User::datas_size() const {
  return datas_.size();
}
void Vector_User::clear_datas() {
  datas_.Clear();
}
const ::mtproto::User& Vector_User::datas(int index) const {
  // @@protoc_insertion_point(field_get:mtproto.Vector_User.datas)
  return datas_.Get(index);
}
::mtproto::User* Vector_User::mutable_datas(int index) {
  // @@protoc_insertion_point(field_mutable:mtproto.Vector_User.datas)
  return datas_.Mutable(index);
}
::mtproto::User* Vector_User::add_datas() {
  // @@protoc_insertion_point(field_add:mtproto.Vector_User.datas)
  return datas_.Add();
}
::google::protobuf::RepeatedPtrField< ::mtproto::User >*
Vector_User::mutable_datas() {
  // @@protoc_insertion_point(field_mutable_list:mtproto.Vector_User.datas)
  return &datas_;
}
const ::google::protobuf::RepeatedPtrField< ::mtproto::User >&
Vector_User::datas() const {
  // @@protoc_insertion_point(field_list:mtproto.Vector_User.datas)
  return datas_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Vector_ContactStatus::kDatasFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Vector_ContactStatus::Vector_ContactStatus()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.Vector_ContactStatus)
}
Vector_ContactStatus::Vector_ContactStatus(const Vector_ContactStatus& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      datas_(from.datas_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:mtproto.Vector_ContactStatus)
}

void Vector_ContactStatus::SharedCtor() {
  _cached_size_ = 0;
}

Vector_ContactStatus::~Vector_ContactStatus() {
  // @@protoc_insertion_point(destructor:mtproto.Vector_ContactStatus)
  SharedDtor();
}

void Vector_ContactStatus::SharedDtor() {
}

void Vector_ContactStatus::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Vector_ContactStatus::descriptor() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Vector_ContactStatus& Vector_ContactStatus::default_instance() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  return *internal_default_instance();
}

Vector_ContactStatus* Vector_ContactStatus::New(::google::protobuf::Arena* arena) const {
  Vector_ContactStatus* n = new Vector_ContactStatus;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Vector_ContactStatus::Swap(Vector_ContactStatus* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Vector_ContactStatus::InternalSwap(Vector_ContactStatus* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata Vector_ContactStatus::GetMetadata() const {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Vector_ContactStatus

// repeated .mtproto.ContactStatus datas = 1;
int Vector_ContactStatus::datas_size() const {
  return datas_.size();
}
void Vector_ContactStatus::clear_datas() {
  datas_.Clear();
}
const ::mtproto::ContactStatus& Vector_ContactStatus::datas(int index) const {
  // @@protoc_insertion_point(field_get:mtproto.Vector_ContactStatus.datas)
  return datas_.Get(index);
}
::mtproto::ContactStatus* Vector_ContactStatus::mutable_datas(int index) {
  // @@protoc_insertion_point(field_mutable:mtproto.Vector_ContactStatus.datas)
  return datas_.Mutable(index);
}
::mtproto::ContactStatus* Vector_ContactStatus::add_datas() {
  // @@protoc_insertion_point(field_add:mtproto.Vector_ContactStatus.datas)
  return datas_.Add();
}
::google::protobuf::RepeatedPtrField< ::mtproto::ContactStatus >*
Vector_ContactStatus::mutable_datas() {
  // @@protoc_insertion_point(field_mutable_list:mtproto.Vector_ContactStatus.datas)
  return &datas_;
}
const ::google::protobuf::RepeatedPtrField< ::mtproto::ContactStatus >&
Vector_ContactStatus::datas() const {
  // @@protoc_insertion_point(field_list:mtproto.Vector_ContactStatus.datas)
  return datas_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Vector_int::kDatasFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Vector_int::Vector_int()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.Vector_int)
}
Vector_int::Vector_int(const Vector_int& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      datas_(from.datas_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:mtproto.Vector_int)
}

void Vector_int::SharedCtor() {
  _cached_size_ = 0;
}

Vector_int::~Vector_int() {
  // @@protoc_insertion_point(destructor:mtproto.Vector_int)
  SharedDtor();
}

void Vector_int::SharedDtor() {
}

void Vector_int::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Vector_int::descriptor() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Vector_int& Vector_int::default_instance() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  return *internal_default_instance();
}

Vector_int* Vector_int::New(::google::protobuf::Arena* arena) const {
  Vector_int* n = new Vector_int;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Vector_int::Swap(Vector_int* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Vector_int::InternalSwap(Vector_int* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata Vector_int::GetMetadata() const {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Vector_int

// repeated int32 datas = 1;
int Vector_int::datas_size() const {
  return datas_.size();
}
void Vector_int::clear_datas() {
  datas_.Clear();
}
::google::protobuf::int32 Vector_int::datas(int index) const {
  // @@protoc_insertion_point(field_get:mtproto.Vector_int.datas)
  return datas_.Get(index);
}
void Vector_int::set_datas(int index, ::google::protobuf::int32 value) {
  datas_.Set(index, value);
  // @@protoc_insertion_point(field_set:mtproto.Vector_int.datas)
}
void Vector_int::add_datas(::google::protobuf::int32 value) {
  datas_.Add(value);
  // @@protoc_insertion_point(field_add:mtproto.Vector_int.datas)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
Vector_int::datas() const {
  // @@protoc_insertion_point(field_list:mtproto.Vector_int.datas)
  return datas_;
}
::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
Vector_int::mutable_datas() {
  // @@protoc_insertion_point(field_mutable_list:mtproto.Vector_int.datas)
  return &datas_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Vector_SavedContact::kDatasFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Vector_SavedContact::Vector_SavedContact()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.Vector_SavedContact)
}
Vector_SavedContact::Vector_SavedContact(const Vector_SavedContact& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      datas_(from.datas_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:mtproto.Vector_SavedContact)
}

void Vector_SavedContact::SharedCtor() {
  _cached_size_ = 0;
}

Vector_SavedContact::~Vector_SavedContact() {
  // @@protoc_insertion_point(destructor:mtproto.Vector_SavedContact)
  SharedDtor();
}

void Vector_SavedContact::SharedDtor() {
}

void Vector_SavedContact::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Vector_SavedContact::descriptor() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Vector_SavedContact& Vector_SavedContact::default_instance() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  return *internal_default_instance();
}

Vector_SavedContact* Vector_SavedContact::New(::google::protobuf::Arena* arena) const {
  Vector_SavedContact* n = new Vector_SavedContact;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Vector_SavedContact::Swap(Vector_SavedContact* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Vector_SavedContact::InternalSwap(Vector_SavedContact* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata Vector_SavedContact::GetMetadata() const {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Vector_SavedContact

// repeated .mtproto.SavedContact datas = 1;
int Vector_SavedContact::datas_size() const {
  return datas_.size();
}
void Vector_SavedContact::clear_datas() {
  datas_.Clear();
}
const ::mtproto::SavedContact& Vector_SavedContact::datas(int index) const {
  // @@protoc_insertion_point(field_get:mtproto.Vector_SavedContact.datas)
  return datas_.Get(index);
}
::mtproto::SavedContact* Vector_SavedContact::mutable_datas(int index) {
  // @@protoc_insertion_point(field_mutable:mtproto.Vector_SavedContact.datas)
  return datas_.Mutable(index);
}
::mtproto::SavedContact* Vector_SavedContact::add_datas() {
  // @@protoc_insertion_point(field_add:mtproto.Vector_SavedContact.datas)
  return datas_.Add();
}
::google::protobuf::RepeatedPtrField< ::mtproto::SavedContact >*
Vector_SavedContact::mutable_datas() {
  // @@protoc_insertion_point(field_mutable_list:mtproto.Vector_SavedContact.datas)
  return &datas_;
}
const ::google::protobuf::RepeatedPtrField< ::mtproto::SavedContact >&
Vector_SavedContact::datas() const {
  // @@protoc_insertion_point(field_list:mtproto.Vector_SavedContact.datas)
  return datas_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Vector_ReceivedNotifyMessage::kDatasFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Vector_ReceivedNotifyMessage::Vector_ReceivedNotifyMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.Vector_ReceivedNotifyMessage)
}
Vector_ReceivedNotifyMessage::Vector_ReceivedNotifyMessage(const Vector_ReceivedNotifyMessage& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      datas_(from.datas_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:mtproto.Vector_ReceivedNotifyMessage)
}

void Vector_ReceivedNotifyMessage::SharedCtor() {
  _cached_size_ = 0;
}

Vector_ReceivedNotifyMessage::~Vector_ReceivedNotifyMessage() {
  // @@protoc_insertion_point(destructor:mtproto.Vector_ReceivedNotifyMessage)
  SharedDtor();
}

void Vector_ReceivedNotifyMessage::SharedDtor() {
}

void Vector_ReceivedNotifyMessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Vector_ReceivedNotifyMessage::descriptor() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Vector_ReceivedNotifyMessage& Vector_ReceivedNotifyMessage::default_instance() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  return *internal_default_instance();
}

Vector_ReceivedNotifyMessage* Vector_ReceivedNotifyMessage::New(::google::protobuf::Arena* arena) const {
  Vector_ReceivedNotifyMessage* n = new Vector_ReceivedNotifyMessage;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Vector_ReceivedNotifyMessage::Swap(Vector_ReceivedNotifyMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Vector_ReceivedNotifyMessage::InternalSwap(Vector_ReceivedNotifyMessage* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata Vector_ReceivedNotifyMessage::GetMetadata() const {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Vector_ReceivedNotifyMessage

// repeated .mtproto.ReceivedNotifyMessage datas = 1;
int Vector_ReceivedNotifyMessage::datas_size() const {
  return datas_.size();
}
void Vector_ReceivedNotifyMessage::clear_datas() {
  datas_.Clear();
}
const ::mtproto::ReceivedNotifyMessage& Vector_ReceivedNotifyMessage::datas(int index) const {
  // @@protoc_insertion_point(field_get:mtproto.Vector_ReceivedNotifyMessage.datas)
  return datas_.Get(index);
}
::mtproto::ReceivedNotifyMessage* Vector_ReceivedNotifyMessage::mutable_datas(int index) {
  // @@protoc_insertion_point(field_mutable:mtproto.Vector_ReceivedNotifyMessage.datas)
  return datas_.Mutable(index);
}
::mtproto::ReceivedNotifyMessage* Vector_ReceivedNotifyMessage::add_datas() {
  // @@protoc_insertion_point(field_add:mtproto.Vector_ReceivedNotifyMessage.datas)
  return datas_.Add();
}
::google::protobuf::RepeatedPtrField< ::mtproto::ReceivedNotifyMessage >*
Vector_ReceivedNotifyMessage::mutable_datas() {
  // @@protoc_insertion_point(field_mutable_list:mtproto.Vector_ReceivedNotifyMessage.datas)
  return &datas_;
}
const ::google::protobuf::RepeatedPtrField< ::mtproto::ReceivedNotifyMessage >&
Vector_ReceivedNotifyMessage::datas() const {
  // @@protoc_insertion_point(field_list:mtproto.Vector_ReceivedNotifyMessage.datas)
  return datas_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Vector_long::kDatasFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Vector_long::Vector_long()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.Vector_long)
}
Vector_long::Vector_long(const Vector_long& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      datas_(from.datas_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:mtproto.Vector_long)
}

void Vector_long::SharedCtor() {
  _cached_size_ = 0;
}

Vector_long::~Vector_long() {
  // @@protoc_insertion_point(destructor:mtproto.Vector_long)
  SharedDtor();
}

void Vector_long::SharedDtor() {
}

void Vector_long::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Vector_long::descriptor() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Vector_long& Vector_long::default_instance() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  return *internal_default_instance();
}

Vector_long* Vector_long::New(::google::protobuf::Arena* arena) const {
  Vector_long* n = new Vector_long;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Vector_long::Swap(Vector_long* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Vector_long::InternalSwap(Vector_long* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata Vector_long::GetMetadata() const {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Vector_long

// repeated int64 datas = 1;
int Vector_long::datas_size() const {
  return datas_.size();
}
void Vector_long::clear_datas() {
  datas_.Clear();
}
::google::protobuf::int64 Vector_long::datas(int index) const {
  // @@protoc_insertion_point(field_get:mtproto.Vector_long.datas)
  return datas_.Get(index);
}
void Vector_long::set_datas(int index, ::google::protobuf::int64 value) {
  datas_.Set(index, value);
  // @@protoc_insertion_point(field_set:mtproto.Vector_long.datas)
}
void Vector_long::add_datas(::google::protobuf::int64 value) {
  datas_.Add(value);
  // @@protoc_insertion_point(field_add:mtproto.Vector_long.datas)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
Vector_long::datas() const {
  // @@protoc_insertion_point(field_list:mtproto.Vector_long.datas)
  return datas_;
}
::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
Vector_long::mutable_datas() {
  // @@protoc_insertion_point(field_mutable_list:mtproto.Vector_long.datas)
  return &datas_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Vector_StickerSetCovered::kDatasFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Vector_StickerSetCovered::Vector_StickerSetCovered()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.Vector_StickerSetCovered)
}
Vector_StickerSetCovered::Vector_StickerSetCovered(const Vector_StickerSetCovered& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      datas_(from.datas_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:mtproto.Vector_StickerSetCovered)
}

void Vector_StickerSetCovered::SharedCtor() {
  _cached_size_ = 0;
}

Vector_StickerSetCovered::~Vector_StickerSetCovered() {
  // @@protoc_insertion_point(destructor:mtproto.Vector_StickerSetCovered)
  SharedDtor();
}

void Vector_StickerSetCovered::SharedDtor() {
}

void Vector_StickerSetCovered::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Vector_StickerSetCovered::descriptor() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Vector_StickerSetCovered& Vector_StickerSetCovered::default_instance() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  return *internal_default_instance();
}

Vector_StickerSetCovered* Vector_StickerSetCovered::New(::google::protobuf::Arena* arena) const {
  Vector_StickerSetCovered* n = new Vector_StickerSetCovered;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Vector_StickerSetCovered::Swap(Vector_StickerSetCovered* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Vector_StickerSetCovered::InternalSwap(Vector_StickerSetCovered* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata Vector_StickerSetCovered::GetMetadata() const {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Vector_StickerSetCovered

// repeated .mtproto.StickerSetCovered datas = 1;
int Vector_StickerSetCovered::datas_size() const {
  return datas_.size();
}
void Vector_StickerSetCovered::clear_datas() {
  datas_.Clear();
}
const ::mtproto::StickerSetCovered& Vector_StickerSetCovered::datas(int index) const {
  // @@protoc_insertion_point(field_get:mtproto.Vector_StickerSetCovered.datas)
  return datas_.Get(index);
}
::mtproto::StickerSetCovered* Vector_StickerSetCovered::mutable_datas(int index) {
  // @@protoc_insertion_point(field_mutable:mtproto.Vector_StickerSetCovered.datas)
  return datas_.Mutable(index);
}
::mtproto::StickerSetCovered* Vector_StickerSetCovered::add_datas() {
  // @@protoc_insertion_point(field_add:mtproto.Vector_StickerSetCovered.datas)
  return datas_.Add();
}
::google::protobuf::RepeatedPtrField< ::mtproto::StickerSetCovered >*
Vector_StickerSetCovered::mutable_datas() {
  // @@protoc_insertion_point(field_mutable_list:mtproto.Vector_StickerSetCovered.datas)
  return &datas_;
}
const ::google::protobuf::RepeatedPtrField< ::mtproto::StickerSetCovered >&
Vector_StickerSetCovered::datas() const {
  // @@protoc_insertion_point(field_list:mtproto.Vector_StickerSetCovered.datas)
  return datas_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Vector_MessageRange::kDatasFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Vector_MessageRange::Vector_MessageRange()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.Vector_MessageRange)
}
Vector_MessageRange::Vector_MessageRange(const Vector_MessageRange& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      datas_(from.datas_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:mtproto.Vector_MessageRange)
}

void Vector_MessageRange::SharedCtor() {
  _cached_size_ = 0;
}

Vector_MessageRange::~Vector_MessageRange() {
  // @@protoc_insertion_point(destructor:mtproto.Vector_MessageRange)
  SharedDtor();
}

void Vector_MessageRange::SharedDtor() {
}

void Vector_MessageRange::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Vector_MessageRange::descriptor() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Vector_MessageRange& Vector_MessageRange::default_instance() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  return *internal_default_instance();
}

Vector_MessageRange* Vector_MessageRange::New(::google::protobuf::Arena* arena) const {
  Vector_MessageRange* n = new Vector_MessageRange;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Vector_MessageRange::Swap(Vector_MessageRange* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Vector_MessageRange::InternalSwap(Vector_MessageRange* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata Vector_MessageRange::GetMetadata() const {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Vector_MessageRange

// repeated .mtproto.MessageRange datas = 1;
int Vector_MessageRange::datas_size() const {
  return datas_.size();
}
void Vector_MessageRange::clear_datas() {
  datas_.Clear();
}
const ::mtproto::MessageRange& Vector_MessageRange::datas(int index) const {
  // @@protoc_insertion_point(field_get:mtproto.Vector_MessageRange.datas)
  return datas_.Get(index);
}
::mtproto::MessageRange* Vector_MessageRange::mutable_datas(int index) {
  // @@protoc_insertion_point(field_mutable:mtproto.Vector_MessageRange.datas)
  return datas_.Mutable(index);
}
::mtproto::MessageRange* Vector_MessageRange::add_datas() {
  // @@protoc_insertion_point(field_add:mtproto.Vector_MessageRange.datas)
  return datas_.Add();
}
::google::protobuf::RepeatedPtrField< ::mtproto::MessageRange >*
Vector_MessageRange::mutable_datas() {
  // @@protoc_insertion_point(field_mutable_list:mtproto.Vector_MessageRange.datas)
  return &datas_;
}
const ::google::protobuf::RepeatedPtrField< ::mtproto::MessageRange >&
Vector_MessageRange::datas() const {
  // @@protoc_insertion_point(field_list:mtproto.Vector_MessageRange.datas)
  return datas_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Vector_DialogPeer::kDatasFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Vector_DialogPeer::Vector_DialogPeer()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.Vector_DialogPeer)
}
Vector_DialogPeer::Vector_DialogPeer(const Vector_DialogPeer& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      datas_(from.datas_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:mtproto.Vector_DialogPeer)
}

void Vector_DialogPeer::SharedCtor() {
  _cached_size_ = 0;
}

Vector_DialogPeer::~Vector_DialogPeer() {
  // @@protoc_insertion_point(destructor:mtproto.Vector_DialogPeer)
  SharedDtor();
}

void Vector_DialogPeer::SharedDtor() {
}

void Vector_DialogPeer::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Vector_DialogPeer::descriptor() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Vector_DialogPeer& Vector_DialogPeer::default_instance() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  return *internal_default_instance();
}

Vector_DialogPeer* Vector_DialogPeer::New(::google::protobuf::Arena* arena) const {
  Vector_DialogPeer* n = new Vector_DialogPeer;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Vector_DialogPeer::Swap(Vector_DialogPeer* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Vector_DialogPeer::InternalSwap(Vector_DialogPeer* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata Vector_DialogPeer::GetMetadata() const {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Vector_DialogPeer

// repeated .mtproto.DialogPeer datas = 1;
int Vector_DialogPeer::datas_size() const {
  return datas_.size();
}
void Vector_DialogPeer::clear_datas() {
  datas_.Clear();
}
const ::mtproto::DialogPeer& Vector_DialogPeer::datas(int index) const {
  // @@protoc_insertion_point(field_get:mtproto.Vector_DialogPeer.datas)
  return datas_.Get(index);
}
::mtproto::DialogPeer* Vector_DialogPeer::mutable_datas(int index) {
  // @@protoc_insertion_point(field_mutable:mtproto.Vector_DialogPeer.datas)
  return datas_.Mutable(index);
}
::mtproto::DialogPeer* Vector_DialogPeer::add_datas() {
  // @@protoc_insertion_point(field_add:mtproto.Vector_DialogPeer.datas)
  return datas_.Add();
}
::google::protobuf::RepeatedPtrField< ::mtproto::DialogPeer >*
Vector_DialogPeer::mutable_datas() {
  // @@protoc_insertion_point(field_mutable_list:mtproto.Vector_DialogPeer.datas)
  return &datas_;
}
const ::google::protobuf::RepeatedPtrField< ::mtproto::DialogPeer >&
Vector_DialogPeer::datas() const {
  // @@protoc_insertion_point(field_list:mtproto.Vector_DialogPeer.datas)
  return datas_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Vector_FileHash::kDatasFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Vector_FileHash::Vector_FileHash()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.Vector_FileHash)
}
Vector_FileHash::Vector_FileHash(const Vector_FileHash& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      datas_(from.datas_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:mtproto.Vector_FileHash)
}

void Vector_FileHash::SharedCtor() {
  _cached_size_ = 0;
}

Vector_FileHash::~Vector_FileHash() {
  // @@protoc_insertion_point(destructor:mtproto.Vector_FileHash)
  SharedDtor();
}

void Vector_FileHash::SharedDtor() {
}

void Vector_FileHash::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Vector_FileHash::descriptor() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Vector_FileHash& Vector_FileHash::default_instance() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  return *internal_default_instance();
}

Vector_FileHash* Vector_FileHash::New(::google::protobuf::Arena* arena) const {
  Vector_FileHash* n = new Vector_FileHash;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Vector_FileHash::Swap(Vector_FileHash* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Vector_FileHash::InternalSwap(Vector_FileHash* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata Vector_FileHash::GetMetadata() const {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Vector_FileHash

// repeated .mtproto.FileHash datas = 1;
int Vector_FileHash::datas_size() const {
  return datas_.size();
}
void Vector_FileHash::clear_datas() {
  datas_.Clear();
}
const ::mtproto::FileHash& Vector_FileHash::datas(int index) const {
  // @@protoc_insertion_point(field_get:mtproto.Vector_FileHash.datas)
  return datas_.Get(index);
}
::mtproto::FileHash* Vector_FileHash::mutable_datas(int index) {
  // @@protoc_insertion_point(field_mutable:mtproto.Vector_FileHash.datas)
  return datas_.Mutable(index);
}
::mtproto::FileHash* Vector_FileHash::add_datas() {
  // @@protoc_insertion_point(field_add:mtproto.Vector_FileHash.datas)
  return datas_.Add();
}
::google::protobuf::RepeatedPtrField< ::mtproto::FileHash >*
Vector_FileHash::mutable_datas() {
  // @@protoc_insertion_point(field_mutable_list:mtproto.Vector_FileHash.datas)
  return &datas_;
}
const ::google::protobuf::RepeatedPtrField< ::mtproto::FileHash >&
Vector_FileHash::datas() const {
  // @@protoc_insertion_point(field_list:mtproto.Vector_FileHash.datas)
  return datas_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Vector_LangPackString::kDatasFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Vector_LangPackString::Vector_LangPackString()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:mtproto.Vector_LangPackString)
}
Vector_LangPackString::Vector_LangPackString(const Vector_LangPackString& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      datas_(from.datas_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:mtproto.Vector_LangPackString)
}

void Vector_LangPackString::SharedCtor() {
  _cached_size_ = 0;
}

Vector_LangPackString::~Vector_LangPackString() {
  // @@protoc_insertion_point(destructor:mtproto.Vector_LangPackString)
  SharedDtor();
}

void Vector_LangPackString::SharedDtor() {
}

void Vector_LangPackString::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Vector_LangPackString::descriptor() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Vector_LangPackString& Vector_LangPackString::default_instance() {
  protobuf_schema_2etl_2esync_5fservice_2eproto::InitDefaults();
  return *internal_default_instance();
}

Vector_LangPackString* Vector_LangPackString::New(::google::protobuf::Arena* arena) const {
  Vector_LangPackString* n = new Vector_LangPackString;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Vector_LangPackString::Swap(Vector_LangPackString* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Vector_LangPackString::InternalSwap(Vector_LangPackString* other) {
  using std::swap;
  GetReflection()->Swap(this, other);}

::google::protobuf::Metadata Vector_LangPackString::GetMetadata() const {
  protobuf_schema_2etl_2esync_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_schema_2etl_2esync_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Vector_LangPackString

// repeated .mtproto.LangPackString datas = 1;
int Vector_LangPackString::datas_size() const {
  return datas_.size();
}
void Vector_LangPackString::clear_datas() {
  datas_.Clear();
}
const ::mtproto::LangPackString& Vector_LangPackString::datas(int index) const {
  // @@protoc_insertion_point(field_get:mtproto.Vector_LangPackString.datas)
  return datas_.Get(index);
}
::mtproto::LangPackString* Vector_LangPackString::mutable_datas(int index) {
  // @@protoc_insertion_point(field_mutable:mtproto.Vector_LangPackString.datas)
  return datas_.Mutable(index);
}
::mtproto::LangPackString* Vector_LangPackString::add_datas() {
  // @@protoc_insertion_point(field_add:mtproto.Vector_LangPackString.datas)
  return datas_.Add();
}
::google::protobuf::RepeatedPtrField< ::mtproto::LangPackString >*
Vector_LangPackString::mutable_datas() {
  // @@protoc_insertion_point(field_mutable_list:mtproto.Vector_LangPackString.datas)
  return &datas_;
}
const ::google::protobuf::RepeatedPtrField< ::mtproto::LangPackString >&
Vector_LangPackString::datas() const {
  // @@protoc_insertion_point(field_list:mtproto.Vector_LangPackString.datas)
  return datas_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace mtproto

// @@protoc_insertion_point(global_scope)
