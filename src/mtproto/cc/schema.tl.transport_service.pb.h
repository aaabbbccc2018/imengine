// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: schema.tl.transport_service.proto

#ifndef PROTOBUF_schema_2etl_2etransport_5fservice_2eproto__INCLUDED
#define PROTOBUF_schema_2etl_2etransport_5fservice_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3004000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
namespace mtproto {
class TL_contest_saveDeveloperInfo;
class TL_contest_saveDeveloperInfoDefaultTypeInternal;
extern TL_contest_saveDeveloperInfoDefaultTypeInternal _TL_contest_saveDeveloperInfo_default_instance_;
class TL_destroy_session;
class TL_destroy_sessionDefaultTypeInternal;
extern TL_destroy_sessionDefaultTypeInternal _TL_destroy_session_default_instance_;
class TL_get_future_salts;
class TL_get_future_saltsDefaultTypeInternal;
extern TL_get_future_saltsDefaultTypeInternal _TL_get_future_salts_default_instance_;
class TL_ping;
class TL_pingDefaultTypeInternal;
extern TL_pingDefaultTypeInternal _TL_ping_default_instance_;
class TL_ping_delay_disconnect;
class TL_ping_delay_disconnectDefaultTypeInternal;
extern TL_ping_delay_disconnectDefaultTypeInternal _TL_ping_delay_disconnect_default_instance_;
class TL_rpc_drop_answer;
class TL_rpc_drop_answerDefaultTypeInternal;
extern TL_rpc_drop_answerDefaultTypeInternal _TL_rpc_drop_answer_default_instance_;
}  // namespace mtproto

namespace mtproto {

namespace protobuf_schema_2etl_2etransport_5fservice_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static void InitDefaultsImpl();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_schema_2etl_2etransport_5fservice_2eproto

// ===================================================================

class TL_rpc_drop_answer : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtproto.TL_rpc_drop_answer) */ {
 public:
  TL_rpc_drop_answer();
  virtual ~TL_rpc_drop_answer();

  TL_rpc_drop_answer(const TL_rpc_drop_answer& from);

  inline TL_rpc_drop_answer& operator=(const TL_rpc_drop_answer& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TL_rpc_drop_answer(TL_rpc_drop_answer&& from) noexcept
    : TL_rpc_drop_answer() {
    *this = ::std::move(from);
  }

  inline TL_rpc_drop_answer& operator=(TL_rpc_drop_answer&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TL_rpc_drop_answer& default_instance();

  static inline const TL_rpc_drop_answer* internal_default_instance() {
    return reinterpret_cast<const TL_rpc_drop_answer*>(
               &_TL_rpc_drop_answer_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(TL_rpc_drop_answer* other);
  friend void swap(TL_rpc_drop_answer& a, TL_rpc_drop_answer& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TL_rpc_drop_answer* New() const PROTOBUF_FINAL { return New(NULL); }

  TL_rpc_drop_answer* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TL_rpc_drop_answer* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int64 req_msg_id = 1;
  void clear_req_msg_id();
  static const int kReqMsgIdFieldNumber = 1;
  ::google::protobuf::int64 req_msg_id() const;
  void set_req_msg_id(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:mtproto.TL_rpc_drop_answer)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int64 req_msg_id_;
  mutable int _cached_size_;
  friend struct protobuf_schema_2etl_2etransport_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TL_get_future_salts : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtproto.TL_get_future_salts) */ {
 public:
  TL_get_future_salts();
  virtual ~TL_get_future_salts();

  TL_get_future_salts(const TL_get_future_salts& from);

  inline TL_get_future_salts& operator=(const TL_get_future_salts& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TL_get_future_salts(TL_get_future_salts&& from) noexcept
    : TL_get_future_salts() {
    *this = ::std::move(from);
  }

  inline TL_get_future_salts& operator=(TL_get_future_salts&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TL_get_future_salts& default_instance();

  static inline const TL_get_future_salts* internal_default_instance() {
    return reinterpret_cast<const TL_get_future_salts*>(
               &_TL_get_future_salts_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(TL_get_future_salts* other);
  friend void swap(TL_get_future_salts& a, TL_get_future_salts& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TL_get_future_salts* New() const PROTOBUF_FINAL { return New(NULL); }

  TL_get_future_salts* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TL_get_future_salts* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 num = 1;
  void clear_num();
  static const int kNumFieldNumber = 1;
  ::google::protobuf::int32 num() const;
  void set_num(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:mtproto.TL_get_future_salts)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 num_;
  mutable int _cached_size_;
  friend struct protobuf_schema_2etl_2etransport_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TL_ping : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtproto.TL_ping) */ {
 public:
  TL_ping();
  virtual ~TL_ping();

  TL_ping(const TL_ping& from);

  inline TL_ping& operator=(const TL_ping& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TL_ping(TL_ping&& from) noexcept
    : TL_ping() {
    *this = ::std::move(from);
  }

  inline TL_ping& operator=(TL_ping&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TL_ping& default_instance();

  static inline const TL_ping* internal_default_instance() {
    return reinterpret_cast<const TL_ping*>(
               &_TL_ping_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(TL_ping* other);
  friend void swap(TL_ping& a, TL_ping& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TL_ping* New() const PROTOBUF_FINAL { return New(NULL); }

  TL_ping* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TL_ping* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int64 ping_id = 1;
  void clear_ping_id();
  static const int kPingIdFieldNumber = 1;
  ::google::protobuf::int64 ping_id() const;
  void set_ping_id(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:mtproto.TL_ping)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int64 ping_id_;
  mutable int _cached_size_;
  friend struct protobuf_schema_2etl_2etransport_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TL_ping_delay_disconnect : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtproto.TL_ping_delay_disconnect) */ {
 public:
  TL_ping_delay_disconnect();
  virtual ~TL_ping_delay_disconnect();

  TL_ping_delay_disconnect(const TL_ping_delay_disconnect& from);

  inline TL_ping_delay_disconnect& operator=(const TL_ping_delay_disconnect& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TL_ping_delay_disconnect(TL_ping_delay_disconnect&& from) noexcept
    : TL_ping_delay_disconnect() {
    *this = ::std::move(from);
  }

  inline TL_ping_delay_disconnect& operator=(TL_ping_delay_disconnect&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TL_ping_delay_disconnect& default_instance();

  static inline const TL_ping_delay_disconnect* internal_default_instance() {
    return reinterpret_cast<const TL_ping_delay_disconnect*>(
               &_TL_ping_delay_disconnect_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(TL_ping_delay_disconnect* other);
  friend void swap(TL_ping_delay_disconnect& a, TL_ping_delay_disconnect& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TL_ping_delay_disconnect* New() const PROTOBUF_FINAL { return New(NULL); }

  TL_ping_delay_disconnect* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TL_ping_delay_disconnect* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int64 ping_id = 1;
  void clear_ping_id();
  static const int kPingIdFieldNumber = 1;
  ::google::protobuf::int64 ping_id() const;
  void set_ping_id(::google::protobuf::int64 value);

  // int32 disconnect_delay = 2;
  void clear_disconnect_delay();
  static const int kDisconnectDelayFieldNumber = 2;
  ::google::protobuf::int32 disconnect_delay() const;
  void set_disconnect_delay(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:mtproto.TL_ping_delay_disconnect)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int64 ping_id_;
  ::google::protobuf::int32 disconnect_delay_;
  mutable int _cached_size_;
  friend struct protobuf_schema_2etl_2etransport_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TL_destroy_session : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtproto.TL_destroy_session) */ {
 public:
  TL_destroy_session();
  virtual ~TL_destroy_session();

  TL_destroy_session(const TL_destroy_session& from);

  inline TL_destroy_session& operator=(const TL_destroy_session& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TL_destroy_session(TL_destroy_session&& from) noexcept
    : TL_destroy_session() {
    *this = ::std::move(from);
  }

  inline TL_destroy_session& operator=(TL_destroy_session&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TL_destroy_session& default_instance();

  static inline const TL_destroy_session* internal_default_instance() {
    return reinterpret_cast<const TL_destroy_session*>(
               &_TL_destroy_session_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    4;

  void Swap(TL_destroy_session* other);
  friend void swap(TL_destroy_session& a, TL_destroy_session& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TL_destroy_session* New() const PROTOBUF_FINAL { return New(NULL); }

  TL_destroy_session* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TL_destroy_session* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int64 session_id = 1;
  void clear_session_id();
  static const int kSessionIdFieldNumber = 1;
  ::google::protobuf::int64 session_id() const;
  void set_session_id(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:mtproto.TL_destroy_session)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int64 session_id_;
  mutable int _cached_size_;
  friend struct protobuf_schema_2etl_2etransport_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TL_contest_saveDeveloperInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtproto.TL_contest_saveDeveloperInfo) */ {
 public:
  TL_contest_saveDeveloperInfo();
  virtual ~TL_contest_saveDeveloperInfo();

  TL_contest_saveDeveloperInfo(const TL_contest_saveDeveloperInfo& from);

  inline TL_contest_saveDeveloperInfo& operator=(const TL_contest_saveDeveloperInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TL_contest_saveDeveloperInfo(TL_contest_saveDeveloperInfo&& from) noexcept
    : TL_contest_saveDeveloperInfo() {
    *this = ::std::move(from);
  }

  inline TL_contest_saveDeveloperInfo& operator=(TL_contest_saveDeveloperInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TL_contest_saveDeveloperInfo& default_instance();

  static inline const TL_contest_saveDeveloperInfo* internal_default_instance() {
    return reinterpret_cast<const TL_contest_saveDeveloperInfo*>(
               &_TL_contest_saveDeveloperInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    5;

  void Swap(TL_contest_saveDeveloperInfo* other);
  friend void swap(TL_contest_saveDeveloperInfo& a, TL_contest_saveDeveloperInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TL_contest_saveDeveloperInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  TL_contest_saveDeveloperInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TL_contest_saveDeveloperInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string name = 2;
  void clear_name();
  static const int kNameFieldNumber = 2;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // string phone_number = 3;
  void clear_phone_number();
  static const int kPhoneNumberFieldNumber = 3;
  const ::std::string& phone_number() const;
  void set_phone_number(const ::std::string& value);
  #if LANG_CXX11
  void set_phone_number(::std::string&& value);
  #endif
  void set_phone_number(const char* value);
  void set_phone_number(const char* value, size_t size);
  ::std::string* mutable_phone_number();
  ::std::string* release_phone_number();
  void set_allocated_phone_number(::std::string* phone_number);

  // string city = 5;
  void clear_city();
  static const int kCityFieldNumber = 5;
  const ::std::string& city() const;
  void set_city(const ::std::string& value);
  #if LANG_CXX11
  void set_city(::std::string&& value);
  #endif
  void set_city(const char* value);
  void set_city(const char* value, size_t size);
  ::std::string* mutable_city();
  ::std::string* release_city();
  void set_allocated_city(::std::string* city);

  // int32 vk_id = 1;
  void clear_vk_id();
  static const int kVkIdFieldNumber = 1;
  ::google::protobuf::int32 vk_id() const;
  void set_vk_id(::google::protobuf::int32 value);

  // int32 age = 4;
  void clear_age();
  static const int kAgeFieldNumber = 4;
  ::google::protobuf::int32 age() const;
  void set_age(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:mtproto.TL_contest_saveDeveloperInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr phone_number_;
  ::google::protobuf::internal::ArenaStringPtr city_;
  ::google::protobuf::int32 vk_id_;
  ::google::protobuf::int32 age_;
  mutable int _cached_size_;
  friend struct protobuf_schema_2etl_2etransport_5fservice_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// TL_rpc_drop_answer

// int64 req_msg_id = 1;
inline void TL_rpc_drop_answer::clear_req_msg_id() {
  req_msg_id_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 TL_rpc_drop_answer::req_msg_id() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_rpc_drop_answer.req_msg_id)
  return req_msg_id_;
}
inline void TL_rpc_drop_answer::set_req_msg_id(::google::protobuf::int64 value) {
  
  req_msg_id_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_rpc_drop_answer.req_msg_id)
}

// -------------------------------------------------------------------

// TL_get_future_salts

// int32 num = 1;
inline void TL_get_future_salts::clear_num() {
  num_ = 0;
}
inline ::google::protobuf::int32 TL_get_future_salts::num() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_get_future_salts.num)
  return num_;
}
inline void TL_get_future_salts::set_num(::google::protobuf::int32 value) {
  
  num_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_get_future_salts.num)
}

// -------------------------------------------------------------------

// TL_ping

// int64 ping_id = 1;
inline void TL_ping::clear_ping_id() {
  ping_id_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 TL_ping::ping_id() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_ping.ping_id)
  return ping_id_;
}
inline void TL_ping::set_ping_id(::google::protobuf::int64 value) {
  
  ping_id_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_ping.ping_id)
}

// -------------------------------------------------------------------

// TL_ping_delay_disconnect

// int64 ping_id = 1;
inline void TL_ping_delay_disconnect::clear_ping_id() {
  ping_id_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 TL_ping_delay_disconnect::ping_id() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_ping_delay_disconnect.ping_id)
  return ping_id_;
}
inline void TL_ping_delay_disconnect::set_ping_id(::google::protobuf::int64 value) {
  
  ping_id_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_ping_delay_disconnect.ping_id)
}

// int32 disconnect_delay = 2;
inline void TL_ping_delay_disconnect::clear_disconnect_delay() {
  disconnect_delay_ = 0;
}
inline ::google::protobuf::int32 TL_ping_delay_disconnect::disconnect_delay() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_ping_delay_disconnect.disconnect_delay)
  return disconnect_delay_;
}
inline void TL_ping_delay_disconnect::set_disconnect_delay(::google::protobuf::int32 value) {
  
  disconnect_delay_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_ping_delay_disconnect.disconnect_delay)
}

// -------------------------------------------------------------------

// TL_destroy_session

// int64 session_id = 1;
inline void TL_destroy_session::clear_session_id() {
  session_id_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 TL_destroy_session::session_id() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_destroy_session.session_id)
  return session_id_;
}
inline void TL_destroy_session::set_session_id(::google::protobuf::int64 value) {
  
  session_id_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_destroy_session.session_id)
}

// -------------------------------------------------------------------

// TL_contest_saveDeveloperInfo

// int32 vk_id = 1;
inline void TL_contest_saveDeveloperInfo::clear_vk_id() {
  vk_id_ = 0;
}
inline ::google::protobuf::int32 TL_contest_saveDeveloperInfo::vk_id() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_contest_saveDeveloperInfo.vk_id)
  return vk_id_;
}
inline void TL_contest_saveDeveloperInfo::set_vk_id(::google::protobuf::int32 value) {
  
  vk_id_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_contest_saveDeveloperInfo.vk_id)
}

// string name = 2;
inline void TL_contest_saveDeveloperInfo::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& TL_contest_saveDeveloperInfo::name() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_contest_saveDeveloperInfo.name)
  return name_.GetNoArena();
}
inline void TL_contest_saveDeveloperInfo::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtproto.TL_contest_saveDeveloperInfo.name)
}
#if LANG_CXX11
inline void TL_contest_saveDeveloperInfo::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mtproto.TL_contest_saveDeveloperInfo.name)
}
#endif
inline void TL_contest_saveDeveloperInfo::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtproto.TL_contest_saveDeveloperInfo.name)
}
inline void TL_contest_saveDeveloperInfo::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtproto.TL_contest_saveDeveloperInfo.name)
}
inline ::std::string* TL_contest_saveDeveloperInfo::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:mtproto.TL_contest_saveDeveloperInfo.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TL_contest_saveDeveloperInfo::release_name() {
  // @@protoc_insertion_point(field_release:mtproto.TL_contest_saveDeveloperInfo.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TL_contest_saveDeveloperInfo::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_contest_saveDeveloperInfo.name)
}

// string phone_number = 3;
inline void TL_contest_saveDeveloperInfo::clear_phone_number() {
  phone_number_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& TL_contest_saveDeveloperInfo::phone_number() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_contest_saveDeveloperInfo.phone_number)
  return phone_number_.GetNoArena();
}
inline void TL_contest_saveDeveloperInfo::set_phone_number(const ::std::string& value) {
  
  phone_number_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtproto.TL_contest_saveDeveloperInfo.phone_number)
}
#if LANG_CXX11
inline void TL_contest_saveDeveloperInfo::set_phone_number(::std::string&& value) {
  
  phone_number_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mtproto.TL_contest_saveDeveloperInfo.phone_number)
}
#endif
inline void TL_contest_saveDeveloperInfo::set_phone_number(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  phone_number_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtproto.TL_contest_saveDeveloperInfo.phone_number)
}
inline void TL_contest_saveDeveloperInfo::set_phone_number(const char* value, size_t size) {
  
  phone_number_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtproto.TL_contest_saveDeveloperInfo.phone_number)
}
inline ::std::string* TL_contest_saveDeveloperInfo::mutable_phone_number() {
  
  // @@protoc_insertion_point(field_mutable:mtproto.TL_contest_saveDeveloperInfo.phone_number)
  return phone_number_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TL_contest_saveDeveloperInfo::release_phone_number() {
  // @@protoc_insertion_point(field_release:mtproto.TL_contest_saveDeveloperInfo.phone_number)
  
  return phone_number_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TL_contest_saveDeveloperInfo::set_allocated_phone_number(::std::string* phone_number) {
  if (phone_number != NULL) {
    
  } else {
    
  }
  phone_number_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), phone_number);
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_contest_saveDeveloperInfo.phone_number)
}

// int32 age = 4;
inline void TL_contest_saveDeveloperInfo::clear_age() {
  age_ = 0;
}
inline ::google::protobuf::int32 TL_contest_saveDeveloperInfo::age() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_contest_saveDeveloperInfo.age)
  return age_;
}
inline void TL_contest_saveDeveloperInfo::set_age(::google::protobuf::int32 value) {
  
  age_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_contest_saveDeveloperInfo.age)
}

// string city = 5;
inline void TL_contest_saveDeveloperInfo::clear_city() {
  city_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& TL_contest_saveDeveloperInfo::city() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_contest_saveDeveloperInfo.city)
  return city_.GetNoArena();
}
inline void TL_contest_saveDeveloperInfo::set_city(const ::std::string& value) {
  
  city_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtproto.TL_contest_saveDeveloperInfo.city)
}
#if LANG_CXX11
inline void TL_contest_saveDeveloperInfo::set_city(::std::string&& value) {
  
  city_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mtproto.TL_contest_saveDeveloperInfo.city)
}
#endif
inline void TL_contest_saveDeveloperInfo::set_city(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  city_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtproto.TL_contest_saveDeveloperInfo.city)
}
inline void TL_contest_saveDeveloperInfo::set_city(const char* value, size_t size) {
  
  city_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtproto.TL_contest_saveDeveloperInfo.city)
}
inline ::std::string* TL_contest_saveDeveloperInfo::mutable_city() {
  
  // @@protoc_insertion_point(field_mutable:mtproto.TL_contest_saveDeveloperInfo.city)
  return city_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TL_contest_saveDeveloperInfo::release_city() {
  // @@protoc_insertion_point(field_release:mtproto.TL_contest_saveDeveloperInfo.city)
  
  return city_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TL_contest_saveDeveloperInfo::set_allocated_city(::std::string* city) {
  if (city != NULL) {
    
  } else {
    
  }
  city_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), city);
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_contest_saveDeveloperInfo.city)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


}  // namespace mtproto

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_schema_2etl_2etransport_5fservice_2eproto__INCLUDED
