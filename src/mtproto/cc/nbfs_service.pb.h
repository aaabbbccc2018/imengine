// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: nbfs_service.proto

#ifndef PROTOBUF_nbfs_5fservice_2eproto__INCLUDED
#define PROTOBUF_nbfs_5fservice_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3004000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "schema.tl.sync.pb.h"
// @@protoc_insertion_point(includes)
namespace mtproto {
class DocumentAttributeList;
class DocumentAttributeListDefaultTypeInternal;
extern DocumentAttributeListDefaultTypeInternal _DocumentAttributeList_default_instance_;
class DocumentId;
class DocumentIdDefaultTypeInternal;
extern DocumentIdDefaultTypeInternal _DocumentId_default_instance_;
class DocumentIdList;
class DocumentIdListDefaultTypeInternal;
extern DocumentIdListDefaultTypeInternal _DocumentIdList_default_instance_;
class DocumentList;
class DocumentListDefaultTypeInternal;
extern DocumentListDefaultTypeInternal _DocumentList_default_instance_;
class GetPhotoFileDataRequest;
class GetPhotoFileDataRequestDefaultTypeInternal;
extern GetPhotoFileDataRequestDefaultTypeInternal _GetPhotoFileDataRequest_default_instance_;
class NbfsUploadedDocumentMedia;
class NbfsUploadedDocumentMediaDefaultTypeInternal;
extern NbfsUploadedDocumentMediaDefaultTypeInternal _NbfsUploadedDocumentMedia_default_instance_;
class NbfsUploadedPhotoMedia;
class NbfsUploadedPhotoMediaDefaultTypeInternal;
extern NbfsUploadedPhotoMediaDefaultTypeInternal _NbfsUploadedPhotoMedia_default_instance_;
class PhotoDataRsp;
class PhotoDataRspDefaultTypeInternal;
extern PhotoDataRspDefaultTypeInternal _PhotoDataRsp_default_instance_;
class UploadPhotoFileRequest;
class UploadPhotoFileRequestDefaultTypeInternal;
extern UploadPhotoFileRequestDefaultTypeInternal _UploadPhotoFileRequest_default_instance_;
}  // namespace mtproto

namespace mtproto {

namespace protobuf_nbfs_5fservice_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static void InitDefaultsImpl();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_nbfs_5fservice_2eproto

// ===================================================================

class UploadPhotoFileRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtproto.UploadPhotoFileRequest) */ {
 public:
  UploadPhotoFileRequest();
  virtual ~UploadPhotoFileRequest();

  UploadPhotoFileRequest(const UploadPhotoFileRequest& from);

  inline UploadPhotoFileRequest& operator=(const UploadPhotoFileRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UploadPhotoFileRequest(UploadPhotoFileRequest&& from) noexcept
    : UploadPhotoFileRequest() {
    *this = ::std::move(from);
  }

  inline UploadPhotoFileRequest& operator=(UploadPhotoFileRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const UploadPhotoFileRequest& default_instance();

  static inline const UploadPhotoFileRequest* internal_default_instance() {
    return reinterpret_cast<const UploadPhotoFileRequest*>(
               &_UploadPhotoFileRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(UploadPhotoFileRequest* other);
  friend void swap(UploadPhotoFileRequest& a, UploadPhotoFileRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UploadPhotoFileRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  UploadPhotoFileRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(UploadPhotoFileRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .mtproto.InputFile file = 2;
  bool has_file() const;
  void clear_file();
  static const int kFileFieldNumber = 2;
  const ::mtproto::InputFile& file() const;
  ::mtproto::InputFile* mutable_file();
  ::mtproto::InputFile* release_file();
  void set_allocated_file(::mtproto::InputFile* file);

  // int64 ownerId = 1;
  void clear_ownerid();
  static const int kOwnerIdFieldNumber = 1;
  ::google::protobuf::int64 ownerid() const;
  void set_ownerid(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:mtproto.UploadPhotoFileRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::mtproto::InputFile* file_;
  ::google::protobuf::int64 ownerid_;
  mutable int _cached_size_;
  friend struct protobuf_nbfs_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetPhotoFileDataRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtproto.GetPhotoFileDataRequest) */ {
 public:
  GetPhotoFileDataRequest();
  virtual ~GetPhotoFileDataRequest();

  GetPhotoFileDataRequest(const GetPhotoFileDataRequest& from);

  inline GetPhotoFileDataRequest& operator=(const GetPhotoFileDataRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetPhotoFileDataRequest(GetPhotoFileDataRequest&& from) noexcept
    : GetPhotoFileDataRequest() {
    *this = ::std::move(from);
  }

  inline GetPhotoFileDataRequest& operator=(GetPhotoFileDataRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetPhotoFileDataRequest& default_instance();

  static inline const GetPhotoFileDataRequest* internal_default_instance() {
    return reinterpret_cast<const GetPhotoFileDataRequest*>(
               &_GetPhotoFileDataRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(GetPhotoFileDataRequest* other);
  friend void swap(GetPhotoFileDataRequest& a, GetPhotoFileDataRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetPhotoFileDataRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  GetPhotoFileDataRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GetPhotoFileDataRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int64 photo_id = 1;
  void clear_photo_id();
  static const int kPhotoIdFieldNumber = 1;
  ::google::protobuf::int64 photo_id() const;
  void set_photo_id(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:mtproto.GetPhotoFileDataRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int64 photo_id_;
  mutable int _cached_size_;
  friend struct protobuf_nbfs_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PhotoDataRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtproto.PhotoDataRsp) */ {
 public:
  PhotoDataRsp();
  virtual ~PhotoDataRsp();

  PhotoDataRsp(const PhotoDataRsp& from);

  inline PhotoDataRsp& operator=(const PhotoDataRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PhotoDataRsp(PhotoDataRsp&& from) noexcept
    : PhotoDataRsp() {
    *this = ::std::move(from);
  }

  inline PhotoDataRsp& operator=(PhotoDataRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PhotoDataRsp& default_instance();

  static inline const PhotoDataRsp* internal_default_instance() {
    return reinterpret_cast<const PhotoDataRsp*>(
               &_PhotoDataRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(PhotoDataRsp* other);
  friend void swap(PhotoDataRsp& a, PhotoDataRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PhotoDataRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  PhotoDataRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PhotoDataRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .mtproto.PhotoSize size_list = 4;
  int size_list_size() const;
  void clear_size_list();
  static const int kSizeListFieldNumber = 4;
  const ::mtproto::PhotoSize& size_list(int index) const;
  ::mtproto::PhotoSize* mutable_size_list(int index);
  ::mtproto::PhotoSize* add_size_list();
  ::google::protobuf::RepeatedPtrField< ::mtproto::PhotoSize >*
      mutable_size_list();
  const ::google::protobuf::RepeatedPtrField< ::mtproto::PhotoSize >&
      size_list() const;

  // int64 photo_id = 1;
  void clear_photo_id();
  static const int kPhotoIdFieldNumber = 1;
  ::google::protobuf::int64 photo_id() const;
  void set_photo_id(::google::protobuf::int64 value);

  // int64 access_hash = 2;
  void clear_access_hash();
  static const int kAccessHashFieldNumber = 2;
  ::google::protobuf::int64 access_hash() const;
  void set_access_hash(::google::protobuf::int64 value);

  // int32 date = 3;
  void clear_date();
  static const int kDateFieldNumber = 3;
  ::google::protobuf::int32 date() const;
  void set_date(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:mtproto.PhotoDataRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::mtproto::PhotoSize > size_list_;
  ::google::protobuf::int64 photo_id_;
  ::google::protobuf::int64 access_hash_;
  ::google::protobuf::int32 date_;
  mutable int _cached_size_;
  friend struct protobuf_nbfs_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class NbfsUploadedPhotoMedia : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtproto.NbfsUploadedPhotoMedia) */ {
 public:
  NbfsUploadedPhotoMedia();
  virtual ~NbfsUploadedPhotoMedia();

  NbfsUploadedPhotoMedia(const NbfsUploadedPhotoMedia& from);

  inline NbfsUploadedPhotoMedia& operator=(const NbfsUploadedPhotoMedia& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  NbfsUploadedPhotoMedia(NbfsUploadedPhotoMedia&& from) noexcept
    : NbfsUploadedPhotoMedia() {
    *this = ::std::move(from);
  }

  inline NbfsUploadedPhotoMedia& operator=(NbfsUploadedPhotoMedia&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const NbfsUploadedPhotoMedia& default_instance();

  static inline const NbfsUploadedPhotoMedia* internal_default_instance() {
    return reinterpret_cast<const NbfsUploadedPhotoMedia*>(
               &_NbfsUploadedPhotoMedia_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(NbfsUploadedPhotoMedia* other);
  friend void swap(NbfsUploadedPhotoMedia& a, NbfsUploadedPhotoMedia& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline NbfsUploadedPhotoMedia* New() const PROTOBUF_FINAL { return New(NULL); }

  NbfsUploadedPhotoMedia* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(NbfsUploadedPhotoMedia* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .mtproto.TL_inputMediaUploadedPhoto media = 2;
  bool has_media() const;
  void clear_media();
  static const int kMediaFieldNumber = 2;
  const ::mtproto::TL_inputMediaUploadedPhoto& media() const;
  ::mtproto::TL_inputMediaUploadedPhoto* mutable_media();
  ::mtproto::TL_inputMediaUploadedPhoto* release_media();
  void set_allocated_media(::mtproto::TL_inputMediaUploadedPhoto* media);

  // int64 ownerId = 1;
  void clear_ownerid();
  static const int kOwnerIdFieldNumber = 1;
  ::google::protobuf::int64 ownerid() const;
  void set_ownerid(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:mtproto.NbfsUploadedPhotoMedia)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::mtproto::TL_inputMediaUploadedPhoto* media_;
  ::google::protobuf::int64 ownerid_;
  mutable int _cached_size_;
  friend struct protobuf_nbfs_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class NbfsUploadedDocumentMedia : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtproto.NbfsUploadedDocumentMedia) */ {
 public:
  NbfsUploadedDocumentMedia();
  virtual ~NbfsUploadedDocumentMedia();

  NbfsUploadedDocumentMedia(const NbfsUploadedDocumentMedia& from);

  inline NbfsUploadedDocumentMedia& operator=(const NbfsUploadedDocumentMedia& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  NbfsUploadedDocumentMedia(NbfsUploadedDocumentMedia&& from) noexcept
    : NbfsUploadedDocumentMedia() {
    *this = ::std::move(from);
  }

  inline NbfsUploadedDocumentMedia& operator=(NbfsUploadedDocumentMedia&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const NbfsUploadedDocumentMedia& default_instance();

  static inline const NbfsUploadedDocumentMedia* internal_default_instance() {
    return reinterpret_cast<const NbfsUploadedDocumentMedia*>(
               &_NbfsUploadedDocumentMedia_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    4;

  void Swap(NbfsUploadedDocumentMedia* other);
  friend void swap(NbfsUploadedDocumentMedia& a, NbfsUploadedDocumentMedia& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline NbfsUploadedDocumentMedia* New() const PROTOBUF_FINAL { return New(NULL); }

  NbfsUploadedDocumentMedia* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(NbfsUploadedDocumentMedia* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .mtproto.TL_inputMediaUploadedDocument media = 2;
  bool has_media() const;
  void clear_media();
  static const int kMediaFieldNumber = 2;
  const ::mtproto::TL_inputMediaUploadedDocument& media() const;
  ::mtproto::TL_inputMediaUploadedDocument* mutable_media();
  ::mtproto::TL_inputMediaUploadedDocument* release_media();
  void set_allocated_media(::mtproto::TL_inputMediaUploadedDocument* media);

  // int64 ownerId = 1;
  void clear_ownerid();
  static const int kOwnerIdFieldNumber = 1;
  ::google::protobuf::int64 ownerid() const;
  void set_ownerid(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:mtproto.NbfsUploadedDocumentMedia)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::mtproto::TL_inputMediaUploadedDocument* media_;
  ::google::protobuf::int64 ownerid_;
  mutable int _cached_size_;
  friend struct protobuf_nbfs_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DocumentId : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtproto.DocumentId) */ {
 public:
  DocumentId();
  virtual ~DocumentId();

  DocumentId(const DocumentId& from);

  inline DocumentId& operator=(const DocumentId& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DocumentId(DocumentId&& from) noexcept
    : DocumentId() {
    *this = ::std::move(from);
  }

  inline DocumentId& operator=(DocumentId&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const DocumentId& default_instance();

  static inline const DocumentId* internal_default_instance() {
    return reinterpret_cast<const DocumentId*>(
               &_DocumentId_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    5;

  void Swap(DocumentId* other);
  friend void swap(DocumentId& a, DocumentId& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DocumentId* New() const PROTOBUF_FINAL { return New(NULL); }

  DocumentId* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DocumentId* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int64 id = 1;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::int64 id() const;
  void set_id(::google::protobuf::int64 value);

  // int64 access_hash = 2;
  void clear_access_hash();
  static const int kAccessHashFieldNumber = 2;
  ::google::protobuf::int64 access_hash() const;
  void set_access_hash(::google::protobuf::int64 value);

  // int32 version = 3;
  void clear_version();
  static const int kVersionFieldNumber = 3;
  ::google::protobuf::int32 version() const;
  void set_version(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:mtproto.DocumentId)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int64 id_;
  ::google::protobuf::int64 access_hash_;
  ::google::protobuf::int32 version_;
  mutable int _cached_size_;
  friend struct protobuf_nbfs_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DocumentAttributeList : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtproto.DocumentAttributeList) */ {
 public:
  DocumentAttributeList();
  virtual ~DocumentAttributeList();

  DocumentAttributeList(const DocumentAttributeList& from);

  inline DocumentAttributeList& operator=(const DocumentAttributeList& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DocumentAttributeList(DocumentAttributeList&& from) noexcept
    : DocumentAttributeList() {
    *this = ::std::move(from);
  }

  inline DocumentAttributeList& operator=(DocumentAttributeList&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const DocumentAttributeList& default_instance();

  static inline const DocumentAttributeList* internal_default_instance() {
    return reinterpret_cast<const DocumentAttributeList*>(
               &_DocumentAttributeList_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    6;

  void Swap(DocumentAttributeList* other);
  friend void swap(DocumentAttributeList& a, DocumentAttributeList& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DocumentAttributeList* New() const PROTOBUF_FINAL { return New(NULL); }

  DocumentAttributeList* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DocumentAttributeList* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .mtproto.DocumentAttribute attributes = 1;
  int attributes_size() const;
  void clear_attributes();
  static const int kAttributesFieldNumber = 1;
  const ::mtproto::DocumentAttribute& attributes(int index) const;
  ::mtproto::DocumentAttribute* mutable_attributes(int index);
  ::mtproto::DocumentAttribute* add_attributes();
  ::google::protobuf::RepeatedPtrField< ::mtproto::DocumentAttribute >*
      mutable_attributes();
  const ::google::protobuf::RepeatedPtrField< ::mtproto::DocumentAttribute >&
      attributes() const;

  // @@protoc_insertion_point(class_scope:mtproto.DocumentAttributeList)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::mtproto::DocumentAttribute > attributes_;
  mutable int _cached_size_;
  friend struct protobuf_nbfs_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DocumentIdList : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtproto.DocumentIdList) */ {
 public:
  DocumentIdList();
  virtual ~DocumentIdList();

  DocumentIdList(const DocumentIdList& from);

  inline DocumentIdList& operator=(const DocumentIdList& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DocumentIdList(DocumentIdList&& from) noexcept
    : DocumentIdList() {
    *this = ::std::move(from);
  }

  inline DocumentIdList& operator=(DocumentIdList&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const DocumentIdList& default_instance();

  static inline const DocumentIdList* internal_default_instance() {
    return reinterpret_cast<const DocumentIdList*>(
               &_DocumentIdList_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    7;

  void Swap(DocumentIdList* other);
  friend void swap(DocumentIdList& a, DocumentIdList& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DocumentIdList* New() const PROTOBUF_FINAL { return New(NULL); }

  DocumentIdList* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DocumentIdList* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int64 id_list = 1;
  int id_list_size() const;
  void clear_id_list();
  static const int kIdListFieldNumber = 1;
  ::google::protobuf::int64 id_list(int index) const;
  void set_id_list(int index, ::google::protobuf::int64 value);
  void add_id_list(::google::protobuf::int64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      id_list() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_id_list();

  // @@protoc_insertion_point(class_scope:mtproto.DocumentIdList)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > id_list_;
  mutable int _cached_size_;
  friend struct protobuf_nbfs_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DocumentList : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtproto.DocumentList) */ {
 public:
  DocumentList();
  virtual ~DocumentList();

  DocumentList(const DocumentList& from);

  inline DocumentList& operator=(const DocumentList& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DocumentList(DocumentList&& from) noexcept
    : DocumentList() {
    *this = ::std::move(from);
  }

  inline DocumentList& operator=(DocumentList&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const DocumentList& default_instance();

  static inline const DocumentList* internal_default_instance() {
    return reinterpret_cast<const DocumentList*>(
               &_DocumentList_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    8;

  void Swap(DocumentList* other);
  friend void swap(DocumentList& a, DocumentList& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DocumentList* New() const PROTOBUF_FINAL { return New(NULL); }

  DocumentList* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DocumentList* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .mtproto.Document documents = 1;
  int documents_size() const;
  void clear_documents();
  static const int kDocumentsFieldNumber = 1;
  const ::mtproto::Document& documents(int index) const;
  ::mtproto::Document* mutable_documents(int index);
  ::mtproto::Document* add_documents();
  ::google::protobuf::RepeatedPtrField< ::mtproto::Document >*
      mutable_documents();
  const ::google::protobuf::RepeatedPtrField< ::mtproto::Document >&
      documents() const;

  // @@protoc_insertion_point(class_scope:mtproto.DocumentList)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::mtproto::Document > documents_;
  mutable int _cached_size_;
  friend struct protobuf_nbfs_5fservice_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// UploadPhotoFileRequest

// int64 ownerId = 1;
inline void UploadPhotoFileRequest::clear_ownerid() {
  ownerid_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 UploadPhotoFileRequest::ownerid() const {
  // @@protoc_insertion_point(field_get:mtproto.UploadPhotoFileRequest.ownerId)
  return ownerid_;
}
inline void UploadPhotoFileRequest::set_ownerid(::google::protobuf::int64 value) {
  
  ownerid_ = value;
  // @@protoc_insertion_point(field_set:mtproto.UploadPhotoFileRequest.ownerId)
}

// .mtproto.InputFile file = 2;
inline bool UploadPhotoFileRequest::has_file() const {
  return this != internal_default_instance() && file_ != NULL;
}
inline void UploadPhotoFileRequest::clear_file() {
  if (GetArenaNoVirtual() == NULL && file_ != NULL) delete file_;
  file_ = NULL;
}
inline const ::mtproto::InputFile& UploadPhotoFileRequest::file() const {
  const ::mtproto::InputFile* p = file_;
  // @@protoc_insertion_point(field_get:mtproto.UploadPhotoFileRequest.file)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::InputFile*>(
      &::mtproto::_InputFile_default_instance_);
}
inline ::mtproto::InputFile* UploadPhotoFileRequest::mutable_file() {
  
  if (file_ == NULL) {
    file_ = new ::mtproto::InputFile;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.UploadPhotoFileRequest.file)
  return file_;
}
inline ::mtproto::InputFile* UploadPhotoFileRequest::release_file() {
  // @@protoc_insertion_point(field_release:mtproto.UploadPhotoFileRequest.file)
  
  ::mtproto::InputFile* temp = file_;
  file_ = NULL;
  return temp;
}
inline void UploadPhotoFileRequest::set_allocated_file(::mtproto::InputFile* file) {
  delete file_;
  file_ = file;
  if (file) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.UploadPhotoFileRequest.file)
}

// -------------------------------------------------------------------

// GetPhotoFileDataRequest

// int64 photo_id = 1;
inline void GetPhotoFileDataRequest::clear_photo_id() {
  photo_id_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 GetPhotoFileDataRequest::photo_id() const {
  // @@protoc_insertion_point(field_get:mtproto.GetPhotoFileDataRequest.photo_id)
  return photo_id_;
}
inline void GetPhotoFileDataRequest::set_photo_id(::google::protobuf::int64 value) {
  
  photo_id_ = value;
  // @@protoc_insertion_point(field_set:mtproto.GetPhotoFileDataRequest.photo_id)
}

// -------------------------------------------------------------------

// PhotoDataRsp

// int64 photo_id = 1;
inline void PhotoDataRsp::clear_photo_id() {
  photo_id_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 PhotoDataRsp::photo_id() const {
  // @@protoc_insertion_point(field_get:mtproto.PhotoDataRsp.photo_id)
  return photo_id_;
}
inline void PhotoDataRsp::set_photo_id(::google::protobuf::int64 value) {
  
  photo_id_ = value;
  // @@protoc_insertion_point(field_set:mtproto.PhotoDataRsp.photo_id)
}

// int64 access_hash = 2;
inline void PhotoDataRsp::clear_access_hash() {
  access_hash_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 PhotoDataRsp::access_hash() const {
  // @@protoc_insertion_point(field_get:mtproto.PhotoDataRsp.access_hash)
  return access_hash_;
}
inline void PhotoDataRsp::set_access_hash(::google::protobuf::int64 value) {
  
  access_hash_ = value;
  // @@protoc_insertion_point(field_set:mtproto.PhotoDataRsp.access_hash)
}

// int32 date = 3;
inline void PhotoDataRsp::clear_date() {
  date_ = 0;
}
inline ::google::protobuf::int32 PhotoDataRsp::date() const {
  // @@protoc_insertion_point(field_get:mtproto.PhotoDataRsp.date)
  return date_;
}
inline void PhotoDataRsp::set_date(::google::protobuf::int32 value) {
  
  date_ = value;
  // @@protoc_insertion_point(field_set:mtproto.PhotoDataRsp.date)
}

// repeated .mtproto.PhotoSize size_list = 4;
inline int PhotoDataRsp::size_list_size() const {
  return size_list_.size();
}
inline void PhotoDataRsp::clear_size_list() {
  size_list_.Clear();
}
inline const ::mtproto::PhotoSize& PhotoDataRsp::size_list(int index) const {
  // @@protoc_insertion_point(field_get:mtproto.PhotoDataRsp.size_list)
  return size_list_.Get(index);
}
inline ::mtproto::PhotoSize* PhotoDataRsp::mutable_size_list(int index) {
  // @@protoc_insertion_point(field_mutable:mtproto.PhotoDataRsp.size_list)
  return size_list_.Mutable(index);
}
inline ::mtproto::PhotoSize* PhotoDataRsp::add_size_list() {
  // @@protoc_insertion_point(field_add:mtproto.PhotoDataRsp.size_list)
  return size_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::mtproto::PhotoSize >*
PhotoDataRsp::mutable_size_list() {
  // @@protoc_insertion_point(field_mutable_list:mtproto.PhotoDataRsp.size_list)
  return &size_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::mtproto::PhotoSize >&
PhotoDataRsp::size_list() const {
  // @@protoc_insertion_point(field_list:mtproto.PhotoDataRsp.size_list)
  return size_list_;
}

// -------------------------------------------------------------------

// NbfsUploadedPhotoMedia

// int64 ownerId = 1;
inline void NbfsUploadedPhotoMedia::clear_ownerid() {
  ownerid_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 NbfsUploadedPhotoMedia::ownerid() const {
  // @@protoc_insertion_point(field_get:mtproto.NbfsUploadedPhotoMedia.ownerId)
  return ownerid_;
}
inline void NbfsUploadedPhotoMedia::set_ownerid(::google::protobuf::int64 value) {
  
  ownerid_ = value;
  // @@protoc_insertion_point(field_set:mtproto.NbfsUploadedPhotoMedia.ownerId)
}

// .mtproto.TL_inputMediaUploadedPhoto media = 2;
inline bool NbfsUploadedPhotoMedia::has_media() const {
  return this != internal_default_instance() && media_ != NULL;
}
inline void NbfsUploadedPhotoMedia::clear_media() {
  if (GetArenaNoVirtual() == NULL && media_ != NULL) delete media_;
  media_ = NULL;
}
inline const ::mtproto::TL_inputMediaUploadedPhoto& NbfsUploadedPhotoMedia::media() const {
  const ::mtproto::TL_inputMediaUploadedPhoto* p = media_;
  // @@protoc_insertion_point(field_get:mtproto.NbfsUploadedPhotoMedia.media)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::TL_inputMediaUploadedPhoto*>(
      &::mtproto::_TL_inputMediaUploadedPhoto_default_instance_);
}
inline ::mtproto::TL_inputMediaUploadedPhoto* NbfsUploadedPhotoMedia::mutable_media() {
  
  if (media_ == NULL) {
    media_ = new ::mtproto::TL_inputMediaUploadedPhoto;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.NbfsUploadedPhotoMedia.media)
  return media_;
}
inline ::mtproto::TL_inputMediaUploadedPhoto* NbfsUploadedPhotoMedia::release_media() {
  // @@protoc_insertion_point(field_release:mtproto.NbfsUploadedPhotoMedia.media)
  
  ::mtproto::TL_inputMediaUploadedPhoto* temp = media_;
  media_ = NULL;
  return temp;
}
inline void NbfsUploadedPhotoMedia::set_allocated_media(::mtproto::TL_inputMediaUploadedPhoto* media) {
  delete media_;
  media_ = media;
  if (media) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.NbfsUploadedPhotoMedia.media)
}

// -------------------------------------------------------------------

// NbfsUploadedDocumentMedia

// int64 ownerId = 1;
inline void NbfsUploadedDocumentMedia::clear_ownerid() {
  ownerid_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 NbfsUploadedDocumentMedia::ownerid() const {
  // @@protoc_insertion_point(field_get:mtproto.NbfsUploadedDocumentMedia.ownerId)
  return ownerid_;
}
inline void NbfsUploadedDocumentMedia::set_ownerid(::google::protobuf::int64 value) {
  
  ownerid_ = value;
  // @@protoc_insertion_point(field_set:mtproto.NbfsUploadedDocumentMedia.ownerId)
}

// .mtproto.TL_inputMediaUploadedDocument media = 2;
inline bool NbfsUploadedDocumentMedia::has_media() const {
  return this != internal_default_instance() && media_ != NULL;
}
inline void NbfsUploadedDocumentMedia::clear_media() {
  if (GetArenaNoVirtual() == NULL && media_ != NULL) delete media_;
  media_ = NULL;
}
inline const ::mtproto::TL_inputMediaUploadedDocument& NbfsUploadedDocumentMedia::media() const {
  const ::mtproto::TL_inputMediaUploadedDocument* p = media_;
  // @@protoc_insertion_point(field_get:mtproto.NbfsUploadedDocumentMedia.media)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::TL_inputMediaUploadedDocument*>(
      &::mtproto::_TL_inputMediaUploadedDocument_default_instance_);
}
inline ::mtproto::TL_inputMediaUploadedDocument* NbfsUploadedDocumentMedia::mutable_media() {
  
  if (media_ == NULL) {
    media_ = new ::mtproto::TL_inputMediaUploadedDocument;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.NbfsUploadedDocumentMedia.media)
  return media_;
}
inline ::mtproto::TL_inputMediaUploadedDocument* NbfsUploadedDocumentMedia::release_media() {
  // @@protoc_insertion_point(field_release:mtproto.NbfsUploadedDocumentMedia.media)
  
  ::mtproto::TL_inputMediaUploadedDocument* temp = media_;
  media_ = NULL;
  return temp;
}
inline void NbfsUploadedDocumentMedia::set_allocated_media(::mtproto::TL_inputMediaUploadedDocument* media) {
  delete media_;
  media_ = media;
  if (media) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.NbfsUploadedDocumentMedia.media)
}

// -------------------------------------------------------------------

// DocumentId

// int64 id = 1;
inline void DocumentId::clear_id() {
  id_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 DocumentId::id() const {
  // @@protoc_insertion_point(field_get:mtproto.DocumentId.id)
  return id_;
}
inline void DocumentId::set_id(::google::protobuf::int64 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:mtproto.DocumentId.id)
}

// int64 access_hash = 2;
inline void DocumentId::clear_access_hash() {
  access_hash_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 DocumentId::access_hash() const {
  // @@protoc_insertion_point(field_get:mtproto.DocumentId.access_hash)
  return access_hash_;
}
inline void DocumentId::set_access_hash(::google::protobuf::int64 value) {
  
  access_hash_ = value;
  // @@protoc_insertion_point(field_set:mtproto.DocumentId.access_hash)
}

// int32 version = 3;
inline void DocumentId::clear_version() {
  version_ = 0;
}
inline ::google::protobuf::int32 DocumentId::version() const {
  // @@protoc_insertion_point(field_get:mtproto.DocumentId.version)
  return version_;
}
inline void DocumentId::set_version(::google::protobuf::int32 value) {
  
  version_ = value;
  // @@protoc_insertion_point(field_set:mtproto.DocumentId.version)
}

// -------------------------------------------------------------------

// DocumentAttributeList

// repeated .mtproto.DocumentAttribute attributes = 1;
inline int DocumentAttributeList::attributes_size() const {
  return attributes_.size();
}
inline void DocumentAttributeList::clear_attributes() {
  attributes_.Clear();
}
inline const ::mtproto::DocumentAttribute& DocumentAttributeList::attributes(int index) const {
  // @@protoc_insertion_point(field_get:mtproto.DocumentAttributeList.attributes)
  return attributes_.Get(index);
}
inline ::mtproto::DocumentAttribute* DocumentAttributeList::mutable_attributes(int index) {
  // @@protoc_insertion_point(field_mutable:mtproto.DocumentAttributeList.attributes)
  return attributes_.Mutable(index);
}
inline ::mtproto::DocumentAttribute* DocumentAttributeList::add_attributes() {
  // @@protoc_insertion_point(field_add:mtproto.DocumentAttributeList.attributes)
  return attributes_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::mtproto::DocumentAttribute >*
DocumentAttributeList::mutable_attributes() {
  // @@protoc_insertion_point(field_mutable_list:mtproto.DocumentAttributeList.attributes)
  return &attributes_;
}
inline const ::google::protobuf::RepeatedPtrField< ::mtproto::DocumentAttribute >&
DocumentAttributeList::attributes() const {
  // @@protoc_insertion_point(field_list:mtproto.DocumentAttributeList.attributes)
  return attributes_;
}

// -------------------------------------------------------------------

// DocumentIdList

// repeated int64 id_list = 1;
inline int DocumentIdList::id_list_size() const {
  return id_list_.size();
}
inline void DocumentIdList::clear_id_list() {
  id_list_.Clear();
}
inline ::google::protobuf::int64 DocumentIdList::id_list(int index) const {
  // @@protoc_insertion_point(field_get:mtproto.DocumentIdList.id_list)
  return id_list_.Get(index);
}
inline void DocumentIdList::set_id_list(int index, ::google::protobuf::int64 value) {
  id_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:mtproto.DocumentIdList.id_list)
}
inline void DocumentIdList::add_id_list(::google::protobuf::int64 value) {
  id_list_.Add(value);
  // @@protoc_insertion_point(field_add:mtproto.DocumentIdList.id_list)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
DocumentIdList::id_list() const {
  // @@protoc_insertion_point(field_list:mtproto.DocumentIdList.id_list)
  return id_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
DocumentIdList::mutable_id_list() {
  // @@protoc_insertion_point(field_mutable_list:mtproto.DocumentIdList.id_list)
  return &id_list_;
}

// -------------------------------------------------------------------

// DocumentList

// repeated .mtproto.Document documents = 1;
inline int DocumentList::documents_size() const {
  return documents_.size();
}
inline void DocumentList::clear_documents() {
  documents_.Clear();
}
inline const ::mtproto::Document& DocumentList::documents(int index) const {
  // @@protoc_insertion_point(field_get:mtproto.DocumentList.documents)
  return documents_.Get(index);
}
inline ::mtproto::Document* DocumentList::mutable_documents(int index) {
  // @@protoc_insertion_point(field_mutable:mtproto.DocumentList.documents)
  return documents_.Mutable(index);
}
inline ::mtproto::Document* DocumentList::add_documents() {
  // @@protoc_insertion_point(field_add:mtproto.DocumentList.documents)
  return documents_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::mtproto::Document >*
DocumentList::mutable_documents() {
  // @@protoc_insertion_point(field_mutable_list:mtproto.DocumentList.documents)
  return &documents_;
}
inline const ::google::protobuf::RepeatedPtrField< ::mtproto::Document >&
DocumentList::documents() const {
  // @@protoc_insertion_point(field_list:mtproto.DocumentList.documents)
  return documents_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


}  // namespace mtproto

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_nbfs_5fservice_2eproto__INCLUDED
