// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: schema.tl.handshake.proto

#ifndef PROTOBUF_schema_2etl_2ehandshake_2eproto__INCLUDED
#define PROTOBUF_schema_2etl_2ehandshake_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3004000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "schema.tl.crc32.pb.h"
// @@protoc_insertion_point(includes)
namespace mtproto {
class Client_DH_Inner_Data;
class Client_DH_Inner_DataDefaultTypeInternal;
extern Client_DH_Inner_DataDefaultTypeInternal _Client_DH_Inner_Data_default_instance_;
class Client_DH_Inner_Data_Data;
class Client_DH_Inner_Data_DataDefaultTypeInternal;
extern Client_DH_Inner_Data_DataDefaultTypeInternal _Client_DH_Inner_Data_Data_default_instance_;
class DestroyAuthKeyRes;
class DestroyAuthKeyResDefaultTypeInternal;
extern DestroyAuthKeyResDefaultTypeInternal _DestroyAuthKeyRes_default_instance_;
class DestroyAuthKeyRes_Data;
class DestroyAuthKeyRes_DataDefaultTypeInternal;
extern DestroyAuthKeyRes_DataDefaultTypeInternal _DestroyAuthKeyRes_Data_default_instance_;
class P_Q_inner_data;
class P_Q_inner_dataDefaultTypeInternal;
extern P_Q_inner_dataDefaultTypeInternal _P_Q_inner_data_default_instance_;
class P_Q_inner_data_Data;
class P_Q_inner_data_DataDefaultTypeInternal;
extern P_Q_inner_data_DataDefaultTypeInternal _P_Q_inner_data_Data_default_instance_;
class ResPQ;
class ResPQDefaultTypeInternal;
extern ResPQDefaultTypeInternal _ResPQ_default_instance_;
class ResPQ_Data;
class ResPQ_DataDefaultTypeInternal;
extern ResPQ_DataDefaultTypeInternal _ResPQ_Data_default_instance_;
class Server_DH_Params;
class Server_DH_ParamsDefaultTypeInternal;
extern Server_DH_ParamsDefaultTypeInternal _Server_DH_Params_default_instance_;
class Server_DH_Params_Data;
class Server_DH_Params_DataDefaultTypeInternal;
extern Server_DH_Params_DataDefaultTypeInternal _Server_DH_Params_Data_default_instance_;
class Server_DH_inner_data;
class Server_DH_inner_dataDefaultTypeInternal;
extern Server_DH_inner_dataDefaultTypeInternal _Server_DH_inner_data_default_instance_;
class Server_DH_inner_data_Data;
class Server_DH_inner_data_DataDefaultTypeInternal;
extern Server_DH_inner_data_DataDefaultTypeInternal _Server_DH_inner_data_Data_default_instance_;
class Set_client_DH_params_answer;
class Set_client_DH_params_answerDefaultTypeInternal;
extern Set_client_DH_params_answerDefaultTypeInternal _Set_client_DH_params_answer_default_instance_;
class Set_client_DH_params_answer_Data;
class Set_client_DH_params_answer_DataDefaultTypeInternal;
extern Set_client_DH_params_answer_DataDefaultTypeInternal _Set_client_DH_params_answer_Data_default_instance_;
class TL_client_DH_inner_data;
class TL_client_DH_inner_dataDefaultTypeInternal;
extern TL_client_DH_inner_dataDefaultTypeInternal _TL_client_DH_inner_data_default_instance_;
class TL_destroy_auth_key_fail;
class TL_destroy_auth_key_failDefaultTypeInternal;
extern TL_destroy_auth_key_failDefaultTypeInternal _TL_destroy_auth_key_fail_default_instance_;
class TL_destroy_auth_key_none;
class TL_destroy_auth_key_noneDefaultTypeInternal;
extern TL_destroy_auth_key_noneDefaultTypeInternal _TL_destroy_auth_key_none_default_instance_;
class TL_destroy_auth_key_ok;
class TL_destroy_auth_key_okDefaultTypeInternal;
extern TL_destroy_auth_key_okDefaultTypeInternal _TL_destroy_auth_key_ok_default_instance_;
class TL_dh_gen_fail;
class TL_dh_gen_failDefaultTypeInternal;
extern TL_dh_gen_failDefaultTypeInternal _TL_dh_gen_fail_default_instance_;
class TL_dh_gen_ok;
class TL_dh_gen_okDefaultTypeInternal;
extern TL_dh_gen_okDefaultTypeInternal _TL_dh_gen_ok_default_instance_;
class TL_dh_gen_retry;
class TL_dh_gen_retryDefaultTypeInternal;
extern TL_dh_gen_retryDefaultTypeInternal _TL_dh_gen_retry_default_instance_;
class TL_p_q_inner_data;
class TL_p_q_inner_dataDefaultTypeInternal;
extern TL_p_q_inner_dataDefaultTypeInternal _TL_p_q_inner_data_default_instance_;
class TL_p_q_inner_data_dc;
class TL_p_q_inner_data_dcDefaultTypeInternal;
extern TL_p_q_inner_data_dcDefaultTypeInternal _TL_p_q_inner_data_dc_default_instance_;
class TL_p_q_inner_data_temp;
class TL_p_q_inner_data_tempDefaultTypeInternal;
extern TL_p_q_inner_data_tempDefaultTypeInternal _TL_p_q_inner_data_temp_default_instance_;
class TL_p_q_inner_data_temp_dc;
class TL_p_q_inner_data_temp_dcDefaultTypeInternal;
extern TL_p_q_inner_data_temp_dcDefaultTypeInternal _TL_p_q_inner_data_temp_dc_default_instance_;
class TL_resPQ;
class TL_resPQDefaultTypeInternal;
extern TL_resPQDefaultTypeInternal _TL_resPQ_default_instance_;
class TL_server_DH_inner_data;
class TL_server_DH_inner_dataDefaultTypeInternal;
extern TL_server_DH_inner_dataDefaultTypeInternal _TL_server_DH_inner_data_default_instance_;
class TL_server_DH_params_fail;
class TL_server_DH_params_failDefaultTypeInternal;
extern TL_server_DH_params_failDefaultTypeInternal _TL_server_DH_params_fail_default_instance_;
class TL_server_DH_params_ok;
class TL_server_DH_params_okDefaultTypeInternal;
extern TL_server_DH_params_okDefaultTypeInternal _TL_server_DH_params_ok_default_instance_;
}  // namespace mtproto

namespace mtproto {

namespace protobuf_schema_2etl_2ehandshake_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static void InitDefaultsImpl();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_schema_2etl_2ehandshake_2eproto

// ===================================================================

class P_Q_inner_data_Data : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtproto.P_Q_inner_data_Data) */ {
 public:
  P_Q_inner_data_Data();
  virtual ~P_Q_inner_data_Data();

  P_Q_inner_data_Data(const P_Q_inner_data_Data& from);

  inline P_Q_inner_data_Data& operator=(const P_Q_inner_data_Data& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  P_Q_inner_data_Data(P_Q_inner_data_Data&& from) noexcept
    : P_Q_inner_data_Data() {
    *this = ::std::move(from);
  }

  inline P_Q_inner_data_Data& operator=(P_Q_inner_data_Data&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const P_Q_inner_data_Data& default_instance();

  static inline const P_Q_inner_data_Data* internal_default_instance() {
    return reinterpret_cast<const P_Q_inner_data_Data*>(
               &_P_Q_inner_data_Data_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(P_Q_inner_data_Data* other);
  friend void swap(P_Q_inner_data_Data& a, P_Q_inner_data_Data& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline P_Q_inner_data_Data* New() const PROTOBUF_FINAL { return New(NULL); }

  P_Q_inner_data_Data* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(P_Q_inner_data_Data* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string pq = 1;
  void clear_pq();
  static const int kPqFieldNumber = 1;
  const ::std::string& pq() const;
  void set_pq(const ::std::string& value);
  #if LANG_CXX11
  void set_pq(::std::string&& value);
  #endif
  void set_pq(const char* value);
  void set_pq(const char* value, size_t size);
  ::std::string* mutable_pq();
  ::std::string* release_pq();
  void set_allocated_pq(::std::string* pq);

  // string p = 2;
  void clear_p();
  static const int kPFieldNumber = 2;
  const ::std::string& p() const;
  void set_p(const ::std::string& value);
  #if LANG_CXX11
  void set_p(::std::string&& value);
  #endif
  void set_p(const char* value);
  void set_p(const char* value, size_t size);
  ::std::string* mutable_p();
  ::std::string* release_p();
  void set_allocated_p(::std::string* p);

  // string q = 3;
  void clear_q();
  static const int kQFieldNumber = 3;
  const ::std::string& q() const;
  void set_q(const ::std::string& value);
  #if LANG_CXX11
  void set_q(::std::string&& value);
  #endif
  void set_q(const char* value);
  void set_q(const char* value, size_t size);
  ::std::string* mutable_q();
  ::std::string* release_q();
  void set_allocated_q(::std::string* q);

  // bytes nonce = 4;
  void clear_nonce();
  static const int kNonceFieldNumber = 4;
  const ::std::string& nonce() const;
  void set_nonce(const ::std::string& value);
  #if LANG_CXX11
  void set_nonce(::std::string&& value);
  #endif
  void set_nonce(const char* value);
  void set_nonce(const void* value, size_t size);
  ::std::string* mutable_nonce();
  ::std::string* release_nonce();
  void set_allocated_nonce(::std::string* nonce);

  // bytes server_nonce = 5;
  void clear_server_nonce();
  static const int kServerNonceFieldNumber = 5;
  const ::std::string& server_nonce() const;
  void set_server_nonce(const ::std::string& value);
  #if LANG_CXX11
  void set_server_nonce(::std::string&& value);
  #endif
  void set_server_nonce(const char* value);
  void set_server_nonce(const void* value, size_t size);
  ::std::string* mutable_server_nonce();
  ::std::string* release_server_nonce();
  void set_allocated_server_nonce(::std::string* server_nonce);

  // bytes new_nonce = 6;
  void clear_new_nonce();
  static const int kNewNonceFieldNumber = 6;
  const ::std::string& new_nonce() const;
  void set_new_nonce(const ::std::string& value);
  #if LANG_CXX11
  void set_new_nonce(::std::string&& value);
  #endif
  void set_new_nonce(const char* value);
  void set_new_nonce(const void* value, size_t size);
  ::std::string* mutable_new_nonce();
  ::std::string* release_new_nonce();
  void set_allocated_new_nonce(::std::string* new_nonce);

  // int32 dc = 7;
  void clear_dc();
  static const int kDcFieldNumber = 7;
  ::google::protobuf::int32 dc() const;
  void set_dc(::google::protobuf::int32 value);

  // int32 expires_in = 8;
  void clear_expires_in();
  static const int kExpiresInFieldNumber = 8;
  ::google::protobuf::int32 expires_in() const;
  void set_expires_in(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:mtproto.P_Q_inner_data_Data)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr pq_;
  ::google::protobuf::internal::ArenaStringPtr p_;
  ::google::protobuf::internal::ArenaStringPtr q_;
  ::google::protobuf::internal::ArenaStringPtr nonce_;
  ::google::protobuf::internal::ArenaStringPtr server_nonce_;
  ::google::protobuf::internal::ArenaStringPtr new_nonce_;
  ::google::protobuf::int32 dc_;
  ::google::protobuf::int32 expires_in_;
  mutable int _cached_size_;
  friend struct protobuf_schema_2etl_2ehandshake_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class P_Q_inner_data : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtproto.P_Q_inner_data) */ {
 public:
  P_Q_inner_data();
  virtual ~P_Q_inner_data();

  P_Q_inner_data(const P_Q_inner_data& from);

  inline P_Q_inner_data& operator=(const P_Q_inner_data& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  P_Q_inner_data(P_Q_inner_data&& from) noexcept
    : P_Q_inner_data() {
    *this = ::std::move(from);
  }

  inline P_Q_inner_data& operator=(P_Q_inner_data&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const P_Q_inner_data& default_instance();

  static inline const P_Q_inner_data* internal_default_instance() {
    return reinterpret_cast<const P_Q_inner_data*>(
               &_P_Q_inner_data_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(P_Q_inner_data* other);
  friend void swap(P_Q_inner_data& a, P_Q_inner_data& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline P_Q_inner_data* New() const PROTOBUF_FINAL { return New(NULL); }

  P_Q_inner_data* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(P_Q_inner_data* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .mtproto.P_Q_inner_data_Data data2 = 2;
  bool has_data2() const;
  void clear_data2();
  static const int kData2FieldNumber = 2;
  const ::mtproto::P_Q_inner_data_Data& data2() const;
  ::mtproto::P_Q_inner_data_Data* mutable_data2();
  ::mtproto::P_Q_inner_data_Data* release_data2();
  void set_allocated_data2(::mtproto::P_Q_inner_data_Data* data2);

  // .mtproto.TLConstructor constructor = 1;
  void clear_constructor();
  static const int kConstructorFieldNumber = 1;
  ::mtproto::TLConstructor constructor() const;
  void set_constructor(::mtproto::TLConstructor value);

  // @@protoc_insertion_point(class_scope:mtproto.P_Q_inner_data)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::mtproto::P_Q_inner_data_Data* data2_;
  int constructor_;
  mutable int _cached_size_;
  friend struct protobuf_schema_2etl_2ehandshake_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TL_p_q_inner_data : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtproto.TL_p_q_inner_data) */ {
 public:
  TL_p_q_inner_data();
  virtual ~TL_p_q_inner_data();

  TL_p_q_inner_data(const TL_p_q_inner_data& from);

  inline TL_p_q_inner_data& operator=(const TL_p_q_inner_data& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TL_p_q_inner_data(TL_p_q_inner_data&& from) noexcept
    : TL_p_q_inner_data() {
    *this = ::std::move(from);
  }

  inline TL_p_q_inner_data& operator=(TL_p_q_inner_data&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TL_p_q_inner_data& default_instance();

  static inline const TL_p_q_inner_data* internal_default_instance() {
    return reinterpret_cast<const TL_p_q_inner_data*>(
               &_TL_p_q_inner_data_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(TL_p_q_inner_data* other);
  friend void swap(TL_p_q_inner_data& a, TL_p_q_inner_data& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TL_p_q_inner_data* New() const PROTOBUF_FINAL { return New(NULL); }

  TL_p_q_inner_data* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TL_p_q_inner_data* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .mtproto.P_Q_inner_data_Data data2 = 2;
  bool has_data2() const;
  void clear_data2();
  static const int kData2FieldNumber = 2;
  const ::mtproto::P_Q_inner_data_Data& data2() const;
  ::mtproto::P_Q_inner_data_Data* mutable_data2();
  ::mtproto::P_Q_inner_data_Data* release_data2();
  void set_allocated_data2(::mtproto::P_Q_inner_data_Data* data2);

  // @@protoc_insertion_point(class_scope:mtproto.TL_p_q_inner_data)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::mtproto::P_Q_inner_data_Data* data2_;
  mutable int _cached_size_;
  friend struct protobuf_schema_2etl_2ehandshake_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TL_p_q_inner_data_dc : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtproto.TL_p_q_inner_data_dc) */ {
 public:
  TL_p_q_inner_data_dc();
  virtual ~TL_p_q_inner_data_dc();

  TL_p_q_inner_data_dc(const TL_p_q_inner_data_dc& from);

  inline TL_p_q_inner_data_dc& operator=(const TL_p_q_inner_data_dc& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TL_p_q_inner_data_dc(TL_p_q_inner_data_dc&& from) noexcept
    : TL_p_q_inner_data_dc() {
    *this = ::std::move(from);
  }

  inline TL_p_q_inner_data_dc& operator=(TL_p_q_inner_data_dc&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TL_p_q_inner_data_dc& default_instance();

  static inline const TL_p_q_inner_data_dc* internal_default_instance() {
    return reinterpret_cast<const TL_p_q_inner_data_dc*>(
               &_TL_p_q_inner_data_dc_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(TL_p_q_inner_data_dc* other);
  friend void swap(TL_p_q_inner_data_dc& a, TL_p_q_inner_data_dc& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TL_p_q_inner_data_dc* New() const PROTOBUF_FINAL { return New(NULL); }

  TL_p_q_inner_data_dc* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TL_p_q_inner_data_dc* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .mtproto.P_Q_inner_data_Data data2 = 2;
  bool has_data2() const;
  void clear_data2();
  static const int kData2FieldNumber = 2;
  const ::mtproto::P_Q_inner_data_Data& data2() const;
  ::mtproto::P_Q_inner_data_Data* mutable_data2();
  ::mtproto::P_Q_inner_data_Data* release_data2();
  void set_allocated_data2(::mtproto::P_Q_inner_data_Data* data2);

  // @@protoc_insertion_point(class_scope:mtproto.TL_p_q_inner_data_dc)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::mtproto::P_Q_inner_data_Data* data2_;
  mutable int _cached_size_;
  friend struct protobuf_schema_2etl_2ehandshake_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TL_p_q_inner_data_temp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtproto.TL_p_q_inner_data_temp) */ {
 public:
  TL_p_q_inner_data_temp();
  virtual ~TL_p_q_inner_data_temp();

  TL_p_q_inner_data_temp(const TL_p_q_inner_data_temp& from);

  inline TL_p_q_inner_data_temp& operator=(const TL_p_q_inner_data_temp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TL_p_q_inner_data_temp(TL_p_q_inner_data_temp&& from) noexcept
    : TL_p_q_inner_data_temp() {
    *this = ::std::move(from);
  }

  inline TL_p_q_inner_data_temp& operator=(TL_p_q_inner_data_temp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TL_p_q_inner_data_temp& default_instance();

  static inline const TL_p_q_inner_data_temp* internal_default_instance() {
    return reinterpret_cast<const TL_p_q_inner_data_temp*>(
               &_TL_p_q_inner_data_temp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    4;

  void Swap(TL_p_q_inner_data_temp* other);
  friend void swap(TL_p_q_inner_data_temp& a, TL_p_q_inner_data_temp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TL_p_q_inner_data_temp* New() const PROTOBUF_FINAL { return New(NULL); }

  TL_p_q_inner_data_temp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TL_p_q_inner_data_temp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .mtproto.P_Q_inner_data_Data data2 = 2;
  bool has_data2() const;
  void clear_data2();
  static const int kData2FieldNumber = 2;
  const ::mtproto::P_Q_inner_data_Data& data2() const;
  ::mtproto::P_Q_inner_data_Data* mutable_data2();
  ::mtproto::P_Q_inner_data_Data* release_data2();
  void set_allocated_data2(::mtproto::P_Q_inner_data_Data* data2);

  // @@protoc_insertion_point(class_scope:mtproto.TL_p_q_inner_data_temp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::mtproto::P_Q_inner_data_Data* data2_;
  mutable int _cached_size_;
  friend struct protobuf_schema_2etl_2ehandshake_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TL_p_q_inner_data_temp_dc : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtproto.TL_p_q_inner_data_temp_dc) */ {
 public:
  TL_p_q_inner_data_temp_dc();
  virtual ~TL_p_q_inner_data_temp_dc();

  TL_p_q_inner_data_temp_dc(const TL_p_q_inner_data_temp_dc& from);

  inline TL_p_q_inner_data_temp_dc& operator=(const TL_p_q_inner_data_temp_dc& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TL_p_q_inner_data_temp_dc(TL_p_q_inner_data_temp_dc&& from) noexcept
    : TL_p_q_inner_data_temp_dc() {
    *this = ::std::move(from);
  }

  inline TL_p_q_inner_data_temp_dc& operator=(TL_p_q_inner_data_temp_dc&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TL_p_q_inner_data_temp_dc& default_instance();

  static inline const TL_p_q_inner_data_temp_dc* internal_default_instance() {
    return reinterpret_cast<const TL_p_q_inner_data_temp_dc*>(
               &_TL_p_q_inner_data_temp_dc_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    5;

  void Swap(TL_p_q_inner_data_temp_dc* other);
  friend void swap(TL_p_q_inner_data_temp_dc& a, TL_p_q_inner_data_temp_dc& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TL_p_q_inner_data_temp_dc* New() const PROTOBUF_FINAL { return New(NULL); }

  TL_p_q_inner_data_temp_dc* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TL_p_q_inner_data_temp_dc* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .mtproto.P_Q_inner_data_Data data2 = 2;
  bool has_data2() const;
  void clear_data2();
  static const int kData2FieldNumber = 2;
  const ::mtproto::P_Q_inner_data_Data& data2() const;
  ::mtproto::P_Q_inner_data_Data* mutable_data2();
  ::mtproto::P_Q_inner_data_Data* release_data2();
  void set_allocated_data2(::mtproto::P_Q_inner_data_Data* data2);

  // @@protoc_insertion_point(class_scope:mtproto.TL_p_q_inner_data_temp_dc)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::mtproto::P_Q_inner_data_Data* data2_;
  mutable int _cached_size_;
  friend struct protobuf_schema_2etl_2ehandshake_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Server_DH_Params_Data : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtproto.Server_DH_Params_Data) */ {
 public:
  Server_DH_Params_Data();
  virtual ~Server_DH_Params_Data();

  Server_DH_Params_Data(const Server_DH_Params_Data& from);

  inline Server_DH_Params_Data& operator=(const Server_DH_Params_Data& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Server_DH_Params_Data(Server_DH_Params_Data&& from) noexcept
    : Server_DH_Params_Data() {
    *this = ::std::move(from);
  }

  inline Server_DH_Params_Data& operator=(Server_DH_Params_Data&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Server_DH_Params_Data& default_instance();

  static inline const Server_DH_Params_Data* internal_default_instance() {
    return reinterpret_cast<const Server_DH_Params_Data*>(
               &_Server_DH_Params_Data_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    6;

  void Swap(Server_DH_Params_Data* other);
  friend void swap(Server_DH_Params_Data& a, Server_DH_Params_Data& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Server_DH_Params_Data* New() const PROTOBUF_FINAL { return New(NULL); }

  Server_DH_Params_Data* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Server_DH_Params_Data* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes nonce = 1;
  void clear_nonce();
  static const int kNonceFieldNumber = 1;
  const ::std::string& nonce() const;
  void set_nonce(const ::std::string& value);
  #if LANG_CXX11
  void set_nonce(::std::string&& value);
  #endif
  void set_nonce(const char* value);
  void set_nonce(const void* value, size_t size);
  ::std::string* mutable_nonce();
  ::std::string* release_nonce();
  void set_allocated_nonce(::std::string* nonce);

  // bytes server_nonce = 2;
  void clear_server_nonce();
  static const int kServerNonceFieldNumber = 2;
  const ::std::string& server_nonce() const;
  void set_server_nonce(const ::std::string& value);
  #if LANG_CXX11
  void set_server_nonce(::std::string&& value);
  #endif
  void set_server_nonce(const char* value);
  void set_server_nonce(const void* value, size_t size);
  ::std::string* mutable_server_nonce();
  ::std::string* release_server_nonce();
  void set_allocated_server_nonce(::std::string* server_nonce);

  // bytes new_nonce_hash = 3;
  void clear_new_nonce_hash();
  static const int kNewNonceHashFieldNumber = 3;
  const ::std::string& new_nonce_hash() const;
  void set_new_nonce_hash(const ::std::string& value);
  #if LANG_CXX11
  void set_new_nonce_hash(::std::string&& value);
  #endif
  void set_new_nonce_hash(const char* value);
  void set_new_nonce_hash(const void* value, size_t size);
  ::std::string* mutable_new_nonce_hash();
  ::std::string* release_new_nonce_hash();
  void set_allocated_new_nonce_hash(::std::string* new_nonce_hash);

  // string encrypted_answer = 4;
  void clear_encrypted_answer();
  static const int kEncryptedAnswerFieldNumber = 4;
  const ::std::string& encrypted_answer() const;
  void set_encrypted_answer(const ::std::string& value);
  #if LANG_CXX11
  void set_encrypted_answer(::std::string&& value);
  #endif
  void set_encrypted_answer(const char* value);
  void set_encrypted_answer(const char* value, size_t size);
  ::std::string* mutable_encrypted_answer();
  ::std::string* release_encrypted_answer();
  void set_allocated_encrypted_answer(::std::string* encrypted_answer);

  // @@protoc_insertion_point(class_scope:mtproto.Server_DH_Params_Data)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr nonce_;
  ::google::protobuf::internal::ArenaStringPtr server_nonce_;
  ::google::protobuf::internal::ArenaStringPtr new_nonce_hash_;
  ::google::protobuf::internal::ArenaStringPtr encrypted_answer_;
  mutable int _cached_size_;
  friend struct protobuf_schema_2etl_2ehandshake_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Server_DH_Params : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtproto.Server_DH_Params) */ {
 public:
  Server_DH_Params();
  virtual ~Server_DH_Params();

  Server_DH_Params(const Server_DH_Params& from);

  inline Server_DH_Params& operator=(const Server_DH_Params& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Server_DH_Params(Server_DH_Params&& from) noexcept
    : Server_DH_Params() {
    *this = ::std::move(from);
  }

  inline Server_DH_Params& operator=(Server_DH_Params&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Server_DH_Params& default_instance();

  static inline const Server_DH_Params* internal_default_instance() {
    return reinterpret_cast<const Server_DH_Params*>(
               &_Server_DH_Params_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    7;

  void Swap(Server_DH_Params* other);
  friend void swap(Server_DH_Params& a, Server_DH_Params& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Server_DH_Params* New() const PROTOBUF_FINAL { return New(NULL); }

  Server_DH_Params* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Server_DH_Params* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .mtproto.Server_DH_Params_Data data2 = 2;
  bool has_data2() const;
  void clear_data2();
  static const int kData2FieldNumber = 2;
  const ::mtproto::Server_DH_Params_Data& data2() const;
  ::mtproto::Server_DH_Params_Data* mutable_data2();
  ::mtproto::Server_DH_Params_Data* release_data2();
  void set_allocated_data2(::mtproto::Server_DH_Params_Data* data2);

  // .mtproto.TLConstructor constructor = 1;
  void clear_constructor();
  static const int kConstructorFieldNumber = 1;
  ::mtproto::TLConstructor constructor() const;
  void set_constructor(::mtproto::TLConstructor value);

  // @@protoc_insertion_point(class_scope:mtproto.Server_DH_Params)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::mtproto::Server_DH_Params_Data* data2_;
  int constructor_;
  mutable int _cached_size_;
  friend struct protobuf_schema_2etl_2ehandshake_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TL_server_DH_params_fail : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtproto.TL_server_DH_params_fail) */ {
 public:
  TL_server_DH_params_fail();
  virtual ~TL_server_DH_params_fail();

  TL_server_DH_params_fail(const TL_server_DH_params_fail& from);

  inline TL_server_DH_params_fail& operator=(const TL_server_DH_params_fail& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TL_server_DH_params_fail(TL_server_DH_params_fail&& from) noexcept
    : TL_server_DH_params_fail() {
    *this = ::std::move(from);
  }

  inline TL_server_DH_params_fail& operator=(TL_server_DH_params_fail&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TL_server_DH_params_fail& default_instance();

  static inline const TL_server_DH_params_fail* internal_default_instance() {
    return reinterpret_cast<const TL_server_DH_params_fail*>(
               &_TL_server_DH_params_fail_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    8;

  void Swap(TL_server_DH_params_fail* other);
  friend void swap(TL_server_DH_params_fail& a, TL_server_DH_params_fail& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TL_server_DH_params_fail* New() const PROTOBUF_FINAL { return New(NULL); }

  TL_server_DH_params_fail* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TL_server_DH_params_fail* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .mtproto.Server_DH_Params_Data data2 = 2;
  bool has_data2() const;
  void clear_data2();
  static const int kData2FieldNumber = 2;
  const ::mtproto::Server_DH_Params_Data& data2() const;
  ::mtproto::Server_DH_Params_Data* mutable_data2();
  ::mtproto::Server_DH_Params_Data* release_data2();
  void set_allocated_data2(::mtproto::Server_DH_Params_Data* data2);

  // @@protoc_insertion_point(class_scope:mtproto.TL_server_DH_params_fail)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::mtproto::Server_DH_Params_Data* data2_;
  mutable int _cached_size_;
  friend struct protobuf_schema_2etl_2ehandshake_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TL_server_DH_params_ok : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtproto.TL_server_DH_params_ok) */ {
 public:
  TL_server_DH_params_ok();
  virtual ~TL_server_DH_params_ok();

  TL_server_DH_params_ok(const TL_server_DH_params_ok& from);

  inline TL_server_DH_params_ok& operator=(const TL_server_DH_params_ok& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TL_server_DH_params_ok(TL_server_DH_params_ok&& from) noexcept
    : TL_server_DH_params_ok() {
    *this = ::std::move(from);
  }

  inline TL_server_DH_params_ok& operator=(TL_server_DH_params_ok&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TL_server_DH_params_ok& default_instance();

  static inline const TL_server_DH_params_ok* internal_default_instance() {
    return reinterpret_cast<const TL_server_DH_params_ok*>(
               &_TL_server_DH_params_ok_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    9;

  void Swap(TL_server_DH_params_ok* other);
  friend void swap(TL_server_DH_params_ok& a, TL_server_DH_params_ok& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TL_server_DH_params_ok* New() const PROTOBUF_FINAL { return New(NULL); }

  TL_server_DH_params_ok* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TL_server_DH_params_ok* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .mtproto.Server_DH_Params_Data data2 = 2;
  bool has_data2() const;
  void clear_data2();
  static const int kData2FieldNumber = 2;
  const ::mtproto::Server_DH_Params_Data& data2() const;
  ::mtproto::Server_DH_Params_Data* mutable_data2();
  ::mtproto::Server_DH_Params_Data* release_data2();
  void set_allocated_data2(::mtproto::Server_DH_Params_Data* data2);

  // @@protoc_insertion_point(class_scope:mtproto.TL_server_DH_params_ok)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::mtproto::Server_DH_Params_Data* data2_;
  mutable int _cached_size_;
  friend struct protobuf_schema_2etl_2ehandshake_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Server_DH_inner_data_Data : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtproto.Server_DH_inner_data_Data) */ {
 public:
  Server_DH_inner_data_Data();
  virtual ~Server_DH_inner_data_Data();

  Server_DH_inner_data_Data(const Server_DH_inner_data_Data& from);

  inline Server_DH_inner_data_Data& operator=(const Server_DH_inner_data_Data& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Server_DH_inner_data_Data(Server_DH_inner_data_Data&& from) noexcept
    : Server_DH_inner_data_Data() {
    *this = ::std::move(from);
  }

  inline Server_DH_inner_data_Data& operator=(Server_DH_inner_data_Data&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Server_DH_inner_data_Data& default_instance();

  static inline const Server_DH_inner_data_Data* internal_default_instance() {
    return reinterpret_cast<const Server_DH_inner_data_Data*>(
               &_Server_DH_inner_data_Data_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    10;

  void Swap(Server_DH_inner_data_Data* other);
  friend void swap(Server_DH_inner_data_Data& a, Server_DH_inner_data_Data& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Server_DH_inner_data_Data* New() const PROTOBUF_FINAL { return New(NULL); }

  Server_DH_inner_data_Data* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Server_DH_inner_data_Data* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes nonce = 1;
  void clear_nonce();
  static const int kNonceFieldNumber = 1;
  const ::std::string& nonce() const;
  void set_nonce(const ::std::string& value);
  #if LANG_CXX11
  void set_nonce(::std::string&& value);
  #endif
  void set_nonce(const char* value);
  void set_nonce(const void* value, size_t size);
  ::std::string* mutable_nonce();
  ::std::string* release_nonce();
  void set_allocated_nonce(::std::string* nonce);

  // bytes server_nonce = 2;
  void clear_server_nonce();
  static const int kServerNonceFieldNumber = 2;
  const ::std::string& server_nonce() const;
  void set_server_nonce(const ::std::string& value);
  #if LANG_CXX11
  void set_server_nonce(::std::string&& value);
  #endif
  void set_server_nonce(const char* value);
  void set_server_nonce(const void* value, size_t size);
  ::std::string* mutable_server_nonce();
  ::std::string* release_server_nonce();
  void set_allocated_server_nonce(::std::string* server_nonce);

  // string dh_prime = 4;
  void clear_dh_prime();
  static const int kDhPrimeFieldNumber = 4;
  const ::std::string& dh_prime() const;
  void set_dh_prime(const ::std::string& value);
  #if LANG_CXX11
  void set_dh_prime(::std::string&& value);
  #endif
  void set_dh_prime(const char* value);
  void set_dh_prime(const char* value, size_t size);
  ::std::string* mutable_dh_prime();
  ::std::string* release_dh_prime();
  void set_allocated_dh_prime(::std::string* dh_prime);

  // string g_a = 5;
  void clear_g_a();
  static const int kGAFieldNumber = 5;
  const ::std::string& g_a() const;
  void set_g_a(const ::std::string& value);
  #if LANG_CXX11
  void set_g_a(::std::string&& value);
  #endif
  void set_g_a(const char* value);
  void set_g_a(const char* value, size_t size);
  ::std::string* mutable_g_a();
  ::std::string* release_g_a();
  void set_allocated_g_a(::std::string* g_a);

  // int32 g = 3;
  void clear_g();
  static const int kGFieldNumber = 3;
  ::google::protobuf::int32 g() const;
  void set_g(::google::protobuf::int32 value);

  // int32 server_time = 6;
  void clear_server_time();
  static const int kServerTimeFieldNumber = 6;
  ::google::protobuf::int32 server_time() const;
  void set_server_time(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:mtproto.Server_DH_inner_data_Data)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr nonce_;
  ::google::protobuf::internal::ArenaStringPtr server_nonce_;
  ::google::protobuf::internal::ArenaStringPtr dh_prime_;
  ::google::protobuf::internal::ArenaStringPtr g_a_;
  ::google::protobuf::int32 g_;
  ::google::protobuf::int32 server_time_;
  mutable int _cached_size_;
  friend struct protobuf_schema_2etl_2ehandshake_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Server_DH_inner_data : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtproto.Server_DH_inner_data) */ {
 public:
  Server_DH_inner_data();
  virtual ~Server_DH_inner_data();

  Server_DH_inner_data(const Server_DH_inner_data& from);

  inline Server_DH_inner_data& operator=(const Server_DH_inner_data& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Server_DH_inner_data(Server_DH_inner_data&& from) noexcept
    : Server_DH_inner_data() {
    *this = ::std::move(from);
  }

  inline Server_DH_inner_data& operator=(Server_DH_inner_data&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Server_DH_inner_data& default_instance();

  static inline const Server_DH_inner_data* internal_default_instance() {
    return reinterpret_cast<const Server_DH_inner_data*>(
               &_Server_DH_inner_data_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    11;

  void Swap(Server_DH_inner_data* other);
  friend void swap(Server_DH_inner_data& a, Server_DH_inner_data& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Server_DH_inner_data* New() const PROTOBUF_FINAL { return New(NULL); }

  Server_DH_inner_data* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Server_DH_inner_data* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .mtproto.Server_DH_inner_data_Data data2 = 2;
  bool has_data2() const;
  void clear_data2();
  static const int kData2FieldNumber = 2;
  const ::mtproto::Server_DH_inner_data_Data& data2() const;
  ::mtproto::Server_DH_inner_data_Data* mutable_data2();
  ::mtproto::Server_DH_inner_data_Data* release_data2();
  void set_allocated_data2(::mtproto::Server_DH_inner_data_Data* data2);

  // .mtproto.TLConstructor constructor = 1;
  void clear_constructor();
  static const int kConstructorFieldNumber = 1;
  ::mtproto::TLConstructor constructor() const;
  void set_constructor(::mtproto::TLConstructor value);

  // @@protoc_insertion_point(class_scope:mtproto.Server_DH_inner_data)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::mtproto::Server_DH_inner_data_Data* data2_;
  int constructor_;
  mutable int _cached_size_;
  friend struct protobuf_schema_2etl_2ehandshake_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TL_server_DH_inner_data : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtproto.TL_server_DH_inner_data) */ {
 public:
  TL_server_DH_inner_data();
  virtual ~TL_server_DH_inner_data();

  TL_server_DH_inner_data(const TL_server_DH_inner_data& from);

  inline TL_server_DH_inner_data& operator=(const TL_server_DH_inner_data& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TL_server_DH_inner_data(TL_server_DH_inner_data&& from) noexcept
    : TL_server_DH_inner_data() {
    *this = ::std::move(from);
  }

  inline TL_server_DH_inner_data& operator=(TL_server_DH_inner_data&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TL_server_DH_inner_data& default_instance();

  static inline const TL_server_DH_inner_data* internal_default_instance() {
    return reinterpret_cast<const TL_server_DH_inner_data*>(
               &_TL_server_DH_inner_data_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    12;

  void Swap(TL_server_DH_inner_data* other);
  friend void swap(TL_server_DH_inner_data& a, TL_server_DH_inner_data& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TL_server_DH_inner_data* New() const PROTOBUF_FINAL { return New(NULL); }

  TL_server_DH_inner_data* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TL_server_DH_inner_data* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .mtproto.Server_DH_inner_data_Data data2 = 2;
  bool has_data2() const;
  void clear_data2();
  static const int kData2FieldNumber = 2;
  const ::mtproto::Server_DH_inner_data_Data& data2() const;
  ::mtproto::Server_DH_inner_data_Data* mutable_data2();
  ::mtproto::Server_DH_inner_data_Data* release_data2();
  void set_allocated_data2(::mtproto::Server_DH_inner_data_Data* data2);

  // @@protoc_insertion_point(class_scope:mtproto.TL_server_DH_inner_data)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::mtproto::Server_DH_inner_data_Data* data2_;
  mutable int _cached_size_;
  friend struct protobuf_schema_2etl_2ehandshake_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Client_DH_Inner_Data_Data : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtproto.Client_DH_Inner_Data_Data) */ {
 public:
  Client_DH_Inner_Data_Data();
  virtual ~Client_DH_Inner_Data_Data();

  Client_DH_Inner_Data_Data(const Client_DH_Inner_Data_Data& from);

  inline Client_DH_Inner_Data_Data& operator=(const Client_DH_Inner_Data_Data& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Client_DH_Inner_Data_Data(Client_DH_Inner_Data_Data&& from) noexcept
    : Client_DH_Inner_Data_Data() {
    *this = ::std::move(from);
  }

  inline Client_DH_Inner_Data_Data& operator=(Client_DH_Inner_Data_Data&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Client_DH_Inner_Data_Data& default_instance();

  static inline const Client_DH_Inner_Data_Data* internal_default_instance() {
    return reinterpret_cast<const Client_DH_Inner_Data_Data*>(
               &_Client_DH_Inner_Data_Data_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    13;

  void Swap(Client_DH_Inner_Data_Data* other);
  friend void swap(Client_DH_Inner_Data_Data& a, Client_DH_Inner_Data_Data& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Client_DH_Inner_Data_Data* New() const PROTOBUF_FINAL { return New(NULL); }

  Client_DH_Inner_Data_Data* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Client_DH_Inner_Data_Data* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes nonce = 1;
  void clear_nonce();
  static const int kNonceFieldNumber = 1;
  const ::std::string& nonce() const;
  void set_nonce(const ::std::string& value);
  #if LANG_CXX11
  void set_nonce(::std::string&& value);
  #endif
  void set_nonce(const char* value);
  void set_nonce(const void* value, size_t size);
  ::std::string* mutable_nonce();
  ::std::string* release_nonce();
  void set_allocated_nonce(::std::string* nonce);

  // bytes server_nonce = 2;
  void clear_server_nonce();
  static const int kServerNonceFieldNumber = 2;
  const ::std::string& server_nonce() const;
  void set_server_nonce(const ::std::string& value);
  #if LANG_CXX11
  void set_server_nonce(::std::string&& value);
  #endif
  void set_server_nonce(const char* value);
  void set_server_nonce(const void* value, size_t size);
  ::std::string* mutable_server_nonce();
  ::std::string* release_server_nonce();
  void set_allocated_server_nonce(::std::string* server_nonce);

  // string g_b = 4;
  void clear_g_b();
  static const int kGBFieldNumber = 4;
  const ::std::string& g_b() const;
  void set_g_b(const ::std::string& value);
  #if LANG_CXX11
  void set_g_b(::std::string&& value);
  #endif
  void set_g_b(const char* value);
  void set_g_b(const char* value, size_t size);
  ::std::string* mutable_g_b();
  ::std::string* release_g_b();
  void set_allocated_g_b(::std::string* g_b);

  // int64 retry_id = 3;
  void clear_retry_id();
  static const int kRetryIdFieldNumber = 3;
  ::google::protobuf::int64 retry_id() const;
  void set_retry_id(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:mtproto.Client_DH_Inner_Data_Data)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr nonce_;
  ::google::protobuf::internal::ArenaStringPtr server_nonce_;
  ::google::protobuf::internal::ArenaStringPtr g_b_;
  ::google::protobuf::int64 retry_id_;
  mutable int _cached_size_;
  friend struct protobuf_schema_2etl_2ehandshake_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Client_DH_Inner_Data : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtproto.Client_DH_Inner_Data) */ {
 public:
  Client_DH_Inner_Data();
  virtual ~Client_DH_Inner_Data();

  Client_DH_Inner_Data(const Client_DH_Inner_Data& from);

  inline Client_DH_Inner_Data& operator=(const Client_DH_Inner_Data& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Client_DH_Inner_Data(Client_DH_Inner_Data&& from) noexcept
    : Client_DH_Inner_Data() {
    *this = ::std::move(from);
  }

  inline Client_DH_Inner_Data& operator=(Client_DH_Inner_Data&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Client_DH_Inner_Data& default_instance();

  static inline const Client_DH_Inner_Data* internal_default_instance() {
    return reinterpret_cast<const Client_DH_Inner_Data*>(
               &_Client_DH_Inner_Data_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    14;

  void Swap(Client_DH_Inner_Data* other);
  friend void swap(Client_DH_Inner_Data& a, Client_DH_Inner_Data& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Client_DH_Inner_Data* New() const PROTOBUF_FINAL { return New(NULL); }

  Client_DH_Inner_Data* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Client_DH_Inner_Data* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .mtproto.Client_DH_Inner_Data_Data data2 = 2;
  bool has_data2() const;
  void clear_data2();
  static const int kData2FieldNumber = 2;
  const ::mtproto::Client_DH_Inner_Data_Data& data2() const;
  ::mtproto::Client_DH_Inner_Data_Data* mutable_data2();
  ::mtproto::Client_DH_Inner_Data_Data* release_data2();
  void set_allocated_data2(::mtproto::Client_DH_Inner_Data_Data* data2);

  // .mtproto.TLConstructor constructor = 1;
  void clear_constructor();
  static const int kConstructorFieldNumber = 1;
  ::mtproto::TLConstructor constructor() const;
  void set_constructor(::mtproto::TLConstructor value);

  // @@protoc_insertion_point(class_scope:mtproto.Client_DH_Inner_Data)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::mtproto::Client_DH_Inner_Data_Data* data2_;
  int constructor_;
  mutable int _cached_size_;
  friend struct protobuf_schema_2etl_2ehandshake_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TL_client_DH_inner_data : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtproto.TL_client_DH_inner_data) */ {
 public:
  TL_client_DH_inner_data();
  virtual ~TL_client_DH_inner_data();

  TL_client_DH_inner_data(const TL_client_DH_inner_data& from);

  inline TL_client_DH_inner_data& operator=(const TL_client_DH_inner_data& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TL_client_DH_inner_data(TL_client_DH_inner_data&& from) noexcept
    : TL_client_DH_inner_data() {
    *this = ::std::move(from);
  }

  inline TL_client_DH_inner_data& operator=(TL_client_DH_inner_data&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TL_client_DH_inner_data& default_instance();

  static inline const TL_client_DH_inner_data* internal_default_instance() {
    return reinterpret_cast<const TL_client_DH_inner_data*>(
               &_TL_client_DH_inner_data_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    15;

  void Swap(TL_client_DH_inner_data* other);
  friend void swap(TL_client_DH_inner_data& a, TL_client_DH_inner_data& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TL_client_DH_inner_data* New() const PROTOBUF_FINAL { return New(NULL); }

  TL_client_DH_inner_data* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TL_client_DH_inner_data* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .mtproto.Client_DH_Inner_Data_Data data2 = 2;
  bool has_data2() const;
  void clear_data2();
  static const int kData2FieldNumber = 2;
  const ::mtproto::Client_DH_Inner_Data_Data& data2() const;
  ::mtproto::Client_DH_Inner_Data_Data* mutable_data2();
  ::mtproto::Client_DH_Inner_Data_Data* release_data2();
  void set_allocated_data2(::mtproto::Client_DH_Inner_Data_Data* data2);

  // @@protoc_insertion_point(class_scope:mtproto.TL_client_DH_inner_data)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::mtproto::Client_DH_Inner_Data_Data* data2_;
  mutable int _cached_size_;
  friend struct protobuf_schema_2etl_2ehandshake_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Set_client_DH_params_answer_Data : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtproto.Set_client_DH_params_answer_Data) */ {
 public:
  Set_client_DH_params_answer_Data();
  virtual ~Set_client_DH_params_answer_Data();

  Set_client_DH_params_answer_Data(const Set_client_DH_params_answer_Data& from);

  inline Set_client_DH_params_answer_Data& operator=(const Set_client_DH_params_answer_Data& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Set_client_DH_params_answer_Data(Set_client_DH_params_answer_Data&& from) noexcept
    : Set_client_DH_params_answer_Data() {
    *this = ::std::move(from);
  }

  inline Set_client_DH_params_answer_Data& operator=(Set_client_DH_params_answer_Data&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Set_client_DH_params_answer_Data& default_instance();

  static inline const Set_client_DH_params_answer_Data* internal_default_instance() {
    return reinterpret_cast<const Set_client_DH_params_answer_Data*>(
               &_Set_client_DH_params_answer_Data_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    16;

  void Swap(Set_client_DH_params_answer_Data* other);
  friend void swap(Set_client_DH_params_answer_Data& a, Set_client_DH_params_answer_Data& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Set_client_DH_params_answer_Data* New() const PROTOBUF_FINAL { return New(NULL); }

  Set_client_DH_params_answer_Data* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Set_client_DH_params_answer_Data* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes nonce = 1;
  void clear_nonce();
  static const int kNonceFieldNumber = 1;
  const ::std::string& nonce() const;
  void set_nonce(const ::std::string& value);
  #if LANG_CXX11
  void set_nonce(::std::string&& value);
  #endif
  void set_nonce(const char* value);
  void set_nonce(const void* value, size_t size);
  ::std::string* mutable_nonce();
  ::std::string* release_nonce();
  void set_allocated_nonce(::std::string* nonce);

  // bytes server_nonce = 2;
  void clear_server_nonce();
  static const int kServerNonceFieldNumber = 2;
  const ::std::string& server_nonce() const;
  void set_server_nonce(const ::std::string& value);
  #if LANG_CXX11
  void set_server_nonce(::std::string&& value);
  #endif
  void set_server_nonce(const char* value);
  void set_server_nonce(const void* value, size_t size);
  ::std::string* mutable_server_nonce();
  ::std::string* release_server_nonce();
  void set_allocated_server_nonce(::std::string* server_nonce);

  // bytes new_nonce_hash1 = 3;
  void clear_new_nonce_hash1();
  static const int kNewNonceHash1FieldNumber = 3;
  const ::std::string& new_nonce_hash1() const;
  void set_new_nonce_hash1(const ::std::string& value);
  #if LANG_CXX11
  void set_new_nonce_hash1(::std::string&& value);
  #endif
  void set_new_nonce_hash1(const char* value);
  void set_new_nonce_hash1(const void* value, size_t size);
  ::std::string* mutable_new_nonce_hash1();
  ::std::string* release_new_nonce_hash1();
  void set_allocated_new_nonce_hash1(::std::string* new_nonce_hash1);

  // bytes new_nonce_hash2 = 4;
  void clear_new_nonce_hash2();
  static const int kNewNonceHash2FieldNumber = 4;
  const ::std::string& new_nonce_hash2() const;
  void set_new_nonce_hash2(const ::std::string& value);
  #if LANG_CXX11
  void set_new_nonce_hash2(::std::string&& value);
  #endif
  void set_new_nonce_hash2(const char* value);
  void set_new_nonce_hash2(const void* value, size_t size);
  ::std::string* mutable_new_nonce_hash2();
  ::std::string* release_new_nonce_hash2();
  void set_allocated_new_nonce_hash2(::std::string* new_nonce_hash2);

  // bytes new_nonce_hash3 = 5;
  void clear_new_nonce_hash3();
  static const int kNewNonceHash3FieldNumber = 5;
  const ::std::string& new_nonce_hash3() const;
  void set_new_nonce_hash3(const ::std::string& value);
  #if LANG_CXX11
  void set_new_nonce_hash3(::std::string&& value);
  #endif
  void set_new_nonce_hash3(const char* value);
  void set_new_nonce_hash3(const void* value, size_t size);
  ::std::string* mutable_new_nonce_hash3();
  ::std::string* release_new_nonce_hash3();
  void set_allocated_new_nonce_hash3(::std::string* new_nonce_hash3);

  // @@protoc_insertion_point(class_scope:mtproto.Set_client_DH_params_answer_Data)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr nonce_;
  ::google::protobuf::internal::ArenaStringPtr server_nonce_;
  ::google::protobuf::internal::ArenaStringPtr new_nonce_hash1_;
  ::google::protobuf::internal::ArenaStringPtr new_nonce_hash2_;
  ::google::protobuf::internal::ArenaStringPtr new_nonce_hash3_;
  mutable int _cached_size_;
  friend struct protobuf_schema_2etl_2ehandshake_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Set_client_DH_params_answer : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtproto.Set_client_DH_params_answer) */ {
 public:
  Set_client_DH_params_answer();
  virtual ~Set_client_DH_params_answer();

  Set_client_DH_params_answer(const Set_client_DH_params_answer& from);

  inline Set_client_DH_params_answer& operator=(const Set_client_DH_params_answer& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Set_client_DH_params_answer(Set_client_DH_params_answer&& from) noexcept
    : Set_client_DH_params_answer() {
    *this = ::std::move(from);
  }

  inline Set_client_DH_params_answer& operator=(Set_client_DH_params_answer&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Set_client_DH_params_answer& default_instance();

  static inline const Set_client_DH_params_answer* internal_default_instance() {
    return reinterpret_cast<const Set_client_DH_params_answer*>(
               &_Set_client_DH_params_answer_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    17;

  void Swap(Set_client_DH_params_answer* other);
  friend void swap(Set_client_DH_params_answer& a, Set_client_DH_params_answer& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Set_client_DH_params_answer* New() const PROTOBUF_FINAL { return New(NULL); }

  Set_client_DH_params_answer* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Set_client_DH_params_answer* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .mtproto.Set_client_DH_params_answer_Data data2 = 2;
  bool has_data2() const;
  void clear_data2();
  static const int kData2FieldNumber = 2;
  const ::mtproto::Set_client_DH_params_answer_Data& data2() const;
  ::mtproto::Set_client_DH_params_answer_Data* mutable_data2();
  ::mtproto::Set_client_DH_params_answer_Data* release_data2();
  void set_allocated_data2(::mtproto::Set_client_DH_params_answer_Data* data2);

  // .mtproto.TLConstructor constructor = 1;
  void clear_constructor();
  static const int kConstructorFieldNumber = 1;
  ::mtproto::TLConstructor constructor() const;
  void set_constructor(::mtproto::TLConstructor value);

  // @@protoc_insertion_point(class_scope:mtproto.Set_client_DH_params_answer)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::mtproto::Set_client_DH_params_answer_Data* data2_;
  int constructor_;
  mutable int _cached_size_;
  friend struct protobuf_schema_2etl_2ehandshake_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TL_dh_gen_ok : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtproto.TL_dh_gen_ok) */ {
 public:
  TL_dh_gen_ok();
  virtual ~TL_dh_gen_ok();

  TL_dh_gen_ok(const TL_dh_gen_ok& from);

  inline TL_dh_gen_ok& operator=(const TL_dh_gen_ok& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TL_dh_gen_ok(TL_dh_gen_ok&& from) noexcept
    : TL_dh_gen_ok() {
    *this = ::std::move(from);
  }

  inline TL_dh_gen_ok& operator=(TL_dh_gen_ok&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TL_dh_gen_ok& default_instance();

  static inline const TL_dh_gen_ok* internal_default_instance() {
    return reinterpret_cast<const TL_dh_gen_ok*>(
               &_TL_dh_gen_ok_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    18;

  void Swap(TL_dh_gen_ok* other);
  friend void swap(TL_dh_gen_ok& a, TL_dh_gen_ok& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TL_dh_gen_ok* New() const PROTOBUF_FINAL { return New(NULL); }

  TL_dh_gen_ok* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TL_dh_gen_ok* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .mtproto.Set_client_DH_params_answer_Data data2 = 2;
  bool has_data2() const;
  void clear_data2();
  static const int kData2FieldNumber = 2;
  const ::mtproto::Set_client_DH_params_answer_Data& data2() const;
  ::mtproto::Set_client_DH_params_answer_Data* mutable_data2();
  ::mtproto::Set_client_DH_params_answer_Data* release_data2();
  void set_allocated_data2(::mtproto::Set_client_DH_params_answer_Data* data2);

  // @@protoc_insertion_point(class_scope:mtproto.TL_dh_gen_ok)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::mtproto::Set_client_DH_params_answer_Data* data2_;
  mutable int _cached_size_;
  friend struct protobuf_schema_2etl_2ehandshake_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TL_dh_gen_retry : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtproto.TL_dh_gen_retry) */ {
 public:
  TL_dh_gen_retry();
  virtual ~TL_dh_gen_retry();

  TL_dh_gen_retry(const TL_dh_gen_retry& from);

  inline TL_dh_gen_retry& operator=(const TL_dh_gen_retry& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TL_dh_gen_retry(TL_dh_gen_retry&& from) noexcept
    : TL_dh_gen_retry() {
    *this = ::std::move(from);
  }

  inline TL_dh_gen_retry& operator=(TL_dh_gen_retry&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TL_dh_gen_retry& default_instance();

  static inline const TL_dh_gen_retry* internal_default_instance() {
    return reinterpret_cast<const TL_dh_gen_retry*>(
               &_TL_dh_gen_retry_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    19;

  void Swap(TL_dh_gen_retry* other);
  friend void swap(TL_dh_gen_retry& a, TL_dh_gen_retry& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TL_dh_gen_retry* New() const PROTOBUF_FINAL { return New(NULL); }

  TL_dh_gen_retry* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TL_dh_gen_retry* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .mtproto.Set_client_DH_params_answer_Data data2 = 2;
  bool has_data2() const;
  void clear_data2();
  static const int kData2FieldNumber = 2;
  const ::mtproto::Set_client_DH_params_answer_Data& data2() const;
  ::mtproto::Set_client_DH_params_answer_Data* mutable_data2();
  ::mtproto::Set_client_DH_params_answer_Data* release_data2();
  void set_allocated_data2(::mtproto::Set_client_DH_params_answer_Data* data2);

  // @@protoc_insertion_point(class_scope:mtproto.TL_dh_gen_retry)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::mtproto::Set_client_DH_params_answer_Data* data2_;
  mutable int _cached_size_;
  friend struct protobuf_schema_2etl_2ehandshake_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TL_dh_gen_fail : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtproto.TL_dh_gen_fail) */ {
 public:
  TL_dh_gen_fail();
  virtual ~TL_dh_gen_fail();

  TL_dh_gen_fail(const TL_dh_gen_fail& from);

  inline TL_dh_gen_fail& operator=(const TL_dh_gen_fail& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TL_dh_gen_fail(TL_dh_gen_fail&& from) noexcept
    : TL_dh_gen_fail() {
    *this = ::std::move(from);
  }

  inline TL_dh_gen_fail& operator=(TL_dh_gen_fail&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TL_dh_gen_fail& default_instance();

  static inline const TL_dh_gen_fail* internal_default_instance() {
    return reinterpret_cast<const TL_dh_gen_fail*>(
               &_TL_dh_gen_fail_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    20;

  void Swap(TL_dh_gen_fail* other);
  friend void swap(TL_dh_gen_fail& a, TL_dh_gen_fail& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TL_dh_gen_fail* New() const PROTOBUF_FINAL { return New(NULL); }

  TL_dh_gen_fail* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TL_dh_gen_fail* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .mtproto.Set_client_DH_params_answer_Data data2 = 2;
  bool has_data2() const;
  void clear_data2();
  static const int kData2FieldNumber = 2;
  const ::mtproto::Set_client_DH_params_answer_Data& data2() const;
  ::mtproto::Set_client_DH_params_answer_Data* mutable_data2();
  ::mtproto::Set_client_DH_params_answer_Data* release_data2();
  void set_allocated_data2(::mtproto::Set_client_DH_params_answer_Data* data2);

  // @@protoc_insertion_point(class_scope:mtproto.TL_dh_gen_fail)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::mtproto::Set_client_DH_params_answer_Data* data2_;
  mutable int _cached_size_;
  friend struct protobuf_schema_2etl_2ehandshake_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DestroyAuthKeyRes_Data : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtproto.DestroyAuthKeyRes_Data) */ {
 public:
  DestroyAuthKeyRes_Data();
  virtual ~DestroyAuthKeyRes_Data();

  DestroyAuthKeyRes_Data(const DestroyAuthKeyRes_Data& from);

  inline DestroyAuthKeyRes_Data& operator=(const DestroyAuthKeyRes_Data& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DestroyAuthKeyRes_Data(DestroyAuthKeyRes_Data&& from) noexcept
    : DestroyAuthKeyRes_Data() {
    *this = ::std::move(from);
  }

  inline DestroyAuthKeyRes_Data& operator=(DestroyAuthKeyRes_Data&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const DestroyAuthKeyRes_Data& default_instance();

  static inline const DestroyAuthKeyRes_Data* internal_default_instance() {
    return reinterpret_cast<const DestroyAuthKeyRes_Data*>(
               &_DestroyAuthKeyRes_Data_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    21;

  void Swap(DestroyAuthKeyRes_Data* other);
  friend void swap(DestroyAuthKeyRes_Data& a, DestroyAuthKeyRes_Data& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DestroyAuthKeyRes_Data* New() const PROTOBUF_FINAL { return New(NULL); }

  DestroyAuthKeyRes_Data* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DestroyAuthKeyRes_Data* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:mtproto.DestroyAuthKeyRes_Data)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable int _cached_size_;
  friend struct protobuf_schema_2etl_2ehandshake_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DestroyAuthKeyRes : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtproto.DestroyAuthKeyRes) */ {
 public:
  DestroyAuthKeyRes();
  virtual ~DestroyAuthKeyRes();

  DestroyAuthKeyRes(const DestroyAuthKeyRes& from);

  inline DestroyAuthKeyRes& operator=(const DestroyAuthKeyRes& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DestroyAuthKeyRes(DestroyAuthKeyRes&& from) noexcept
    : DestroyAuthKeyRes() {
    *this = ::std::move(from);
  }

  inline DestroyAuthKeyRes& operator=(DestroyAuthKeyRes&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const DestroyAuthKeyRes& default_instance();

  static inline const DestroyAuthKeyRes* internal_default_instance() {
    return reinterpret_cast<const DestroyAuthKeyRes*>(
               &_DestroyAuthKeyRes_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    22;

  void Swap(DestroyAuthKeyRes* other);
  friend void swap(DestroyAuthKeyRes& a, DestroyAuthKeyRes& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DestroyAuthKeyRes* New() const PROTOBUF_FINAL { return New(NULL); }

  DestroyAuthKeyRes* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DestroyAuthKeyRes* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .mtproto.DestroyAuthKeyRes_Data data2 = 2;
  bool has_data2() const;
  void clear_data2();
  static const int kData2FieldNumber = 2;
  const ::mtproto::DestroyAuthKeyRes_Data& data2() const;
  ::mtproto::DestroyAuthKeyRes_Data* mutable_data2();
  ::mtproto::DestroyAuthKeyRes_Data* release_data2();
  void set_allocated_data2(::mtproto::DestroyAuthKeyRes_Data* data2);

  // .mtproto.TLConstructor constructor = 1;
  void clear_constructor();
  static const int kConstructorFieldNumber = 1;
  ::mtproto::TLConstructor constructor() const;
  void set_constructor(::mtproto::TLConstructor value);

  // @@protoc_insertion_point(class_scope:mtproto.DestroyAuthKeyRes)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::mtproto::DestroyAuthKeyRes_Data* data2_;
  int constructor_;
  mutable int _cached_size_;
  friend struct protobuf_schema_2etl_2ehandshake_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TL_destroy_auth_key_ok : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtproto.TL_destroy_auth_key_ok) */ {
 public:
  TL_destroy_auth_key_ok();
  virtual ~TL_destroy_auth_key_ok();

  TL_destroy_auth_key_ok(const TL_destroy_auth_key_ok& from);

  inline TL_destroy_auth_key_ok& operator=(const TL_destroy_auth_key_ok& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TL_destroy_auth_key_ok(TL_destroy_auth_key_ok&& from) noexcept
    : TL_destroy_auth_key_ok() {
    *this = ::std::move(from);
  }

  inline TL_destroy_auth_key_ok& operator=(TL_destroy_auth_key_ok&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TL_destroy_auth_key_ok& default_instance();

  static inline const TL_destroy_auth_key_ok* internal_default_instance() {
    return reinterpret_cast<const TL_destroy_auth_key_ok*>(
               &_TL_destroy_auth_key_ok_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    23;

  void Swap(TL_destroy_auth_key_ok* other);
  friend void swap(TL_destroy_auth_key_ok& a, TL_destroy_auth_key_ok& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TL_destroy_auth_key_ok* New() const PROTOBUF_FINAL { return New(NULL); }

  TL_destroy_auth_key_ok* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TL_destroy_auth_key_ok* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .mtproto.DestroyAuthKeyRes_Data data2 = 2;
  bool has_data2() const;
  void clear_data2();
  static const int kData2FieldNumber = 2;
  const ::mtproto::DestroyAuthKeyRes_Data& data2() const;
  ::mtproto::DestroyAuthKeyRes_Data* mutable_data2();
  ::mtproto::DestroyAuthKeyRes_Data* release_data2();
  void set_allocated_data2(::mtproto::DestroyAuthKeyRes_Data* data2);

  // @@protoc_insertion_point(class_scope:mtproto.TL_destroy_auth_key_ok)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::mtproto::DestroyAuthKeyRes_Data* data2_;
  mutable int _cached_size_;
  friend struct protobuf_schema_2etl_2ehandshake_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TL_destroy_auth_key_none : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtproto.TL_destroy_auth_key_none) */ {
 public:
  TL_destroy_auth_key_none();
  virtual ~TL_destroy_auth_key_none();

  TL_destroy_auth_key_none(const TL_destroy_auth_key_none& from);

  inline TL_destroy_auth_key_none& operator=(const TL_destroy_auth_key_none& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TL_destroy_auth_key_none(TL_destroy_auth_key_none&& from) noexcept
    : TL_destroy_auth_key_none() {
    *this = ::std::move(from);
  }

  inline TL_destroy_auth_key_none& operator=(TL_destroy_auth_key_none&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TL_destroy_auth_key_none& default_instance();

  static inline const TL_destroy_auth_key_none* internal_default_instance() {
    return reinterpret_cast<const TL_destroy_auth_key_none*>(
               &_TL_destroy_auth_key_none_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    24;

  void Swap(TL_destroy_auth_key_none* other);
  friend void swap(TL_destroy_auth_key_none& a, TL_destroy_auth_key_none& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TL_destroy_auth_key_none* New() const PROTOBUF_FINAL { return New(NULL); }

  TL_destroy_auth_key_none* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TL_destroy_auth_key_none* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .mtproto.DestroyAuthKeyRes_Data data2 = 2;
  bool has_data2() const;
  void clear_data2();
  static const int kData2FieldNumber = 2;
  const ::mtproto::DestroyAuthKeyRes_Data& data2() const;
  ::mtproto::DestroyAuthKeyRes_Data* mutable_data2();
  ::mtproto::DestroyAuthKeyRes_Data* release_data2();
  void set_allocated_data2(::mtproto::DestroyAuthKeyRes_Data* data2);

  // @@protoc_insertion_point(class_scope:mtproto.TL_destroy_auth_key_none)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::mtproto::DestroyAuthKeyRes_Data* data2_;
  mutable int _cached_size_;
  friend struct protobuf_schema_2etl_2ehandshake_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TL_destroy_auth_key_fail : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtproto.TL_destroy_auth_key_fail) */ {
 public:
  TL_destroy_auth_key_fail();
  virtual ~TL_destroy_auth_key_fail();

  TL_destroy_auth_key_fail(const TL_destroy_auth_key_fail& from);

  inline TL_destroy_auth_key_fail& operator=(const TL_destroy_auth_key_fail& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TL_destroy_auth_key_fail(TL_destroy_auth_key_fail&& from) noexcept
    : TL_destroy_auth_key_fail() {
    *this = ::std::move(from);
  }

  inline TL_destroy_auth_key_fail& operator=(TL_destroy_auth_key_fail&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TL_destroy_auth_key_fail& default_instance();

  static inline const TL_destroy_auth_key_fail* internal_default_instance() {
    return reinterpret_cast<const TL_destroy_auth_key_fail*>(
               &_TL_destroy_auth_key_fail_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    25;

  void Swap(TL_destroy_auth_key_fail* other);
  friend void swap(TL_destroy_auth_key_fail& a, TL_destroy_auth_key_fail& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TL_destroy_auth_key_fail* New() const PROTOBUF_FINAL { return New(NULL); }

  TL_destroy_auth_key_fail* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TL_destroy_auth_key_fail* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .mtproto.DestroyAuthKeyRes_Data data2 = 2;
  bool has_data2() const;
  void clear_data2();
  static const int kData2FieldNumber = 2;
  const ::mtproto::DestroyAuthKeyRes_Data& data2() const;
  ::mtproto::DestroyAuthKeyRes_Data* mutable_data2();
  ::mtproto::DestroyAuthKeyRes_Data* release_data2();
  void set_allocated_data2(::mtproto::DestroyAuthKeyRes_Data* data2);

  // @@protoc_insertion_point(class_scope:mtproto.TL_destroy_auth_key_fail)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::mtproto::DestroyAuthKeyRes_Data* data2_;
  mutable int _cached_size_;
  friend struct protobuf_schema_2etl_2ehandshake_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ResPQ_Data : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtproto.ResPQ_Data) */ {
 public:
  ResPQ_Data();
  virtual ~ResPQ_Data();

  ResPQ_Data(const ResPQ_Data& from);

  inline ResPQ_Data& operator=(const ResPQ_Data& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ResPQ_Data(ResPQ_Data&& from) noexcept
    : ResPQ_Data() {
    *this = ::std::move(from);
  }

  inline ResPQ_Data& operator=(ResPQ_Data&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ResPQ_Data& default_instance();

  static inline const ResPQ_Data* internal_default_instance() {
    return reinterpret_cast<const ResPQ_Data*>(
               &_ResPQ_Data_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    26;

  void Swap(ResPQ_Data* other);
  friend void swap(ResPQ_Data& a, ResPQ_Data& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ResPQ_Data* New() const PROTOBUF_FINAL { return New(NULL); }

  ResPQ_Data* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ResPQ_Data* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int64 server_public_key_fingerprints = 4;
  int server_public_key_fingerprints_size() const;
  void clear_server_public_key_fingerprints();
  static const int kServerPublicKeyFingerprintsFieldNumber = 4;
  ::google::protobuf::int64 server_public_key_fingerprints(int index) const;
  void set_server_public_key_fingerprints(int index, ::google::protobuf::int64 value);
  void add_server_public_key_fingerprints(::google::protobuf::int64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      server_public_key_fingerprints() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_server_public_key_fingerprints();

  // bytes nonce = 1;
  void clear_nonce();
  static const int kNonceFieldNumber = 1;
  const ::std::string& nonce() const;
  void set_nonce(const ::std::string& value);
  #if LANG_CXX11
  void set_nonce(::std::string&& value);
  #endif
  void set_nonce(const char* value);
  void set_nonce(const void* value, size_t size);
  ::std::string* mutable_nonce();
  ::std::string* release_nonce();
  void set_allocated_nonce(::std::string* nonce);

  // bytes server_nonce = 2;
  void clear_server_nonce();
  static const int kServerNonceFieldNumber = 2;
  const ::std::string& server_nonce() const;
  void set_server_nonce(const ::std::string& value);
  #if LANG_CXX11
  void set_server_nonce(::std::string&& value);
  #endif
  void set_server_nonce(const char* value);
  void set_server_nonce(const void* value, size_t size);
  ::std::string* mutable_server_nonce();
  ::std::string* release_server_nonce();
  void set_allocated_server_nonce(::std::string* server_nonce);

  // string pq = 3;
  void clear_pq();
  static const int kPqFieldNumber = 3;
  const ::std::string& pq() const;
  void set_pq(const ::std::string& value);
  #if LANG_CXX11
  void set_pq(::std::string&& value);
  #endif
  void set_pq(const char* value);
  void set_pq(const char* value, size_t size);
  ::std::string* mutable_pq();
  ::std::string* release_pq();
  void set_allocated_pq(::std::string* pq);

  // @@protoc_insertion_point(class_scope:mtproto.ResPQ_Data)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > server_public_key_fingerprints_;
  ::google::protobuf::internal::ArenaStringPtr nonce_;
  ::google::protobuf::internal::ArenaStringPtr server_nonce_;
  ::google::protobuf::internal::ArenaStringPtr pq_;
  mutable int _cached_size_;
  friend struct protobuf_schema_2etl_2ehandshake_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ResPQ : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtproto.ResPQ) */ {
 public:
  ResPQ();
  virtual ~ResPQ();

  ResPQ(const ResPQ& from);

  inline ResPQ& operator=(const ResPQ& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ResPQ(ResPQ&& from) noexcept
    : ResPQ() {
    *this = ::std::move(from);
  }

  inline ResPQ& operator=(ResPQ&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ResPQ& default_instance();

  static inline const ResPQ* internal_default_instance() {
    return reinterpret_cast<const ResPQ*>(
               &_ResPQ_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    27;

  void Swap(ResPQ* other);
  friend void swap(ResPQ& a, ResPQ& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ResPQ* New() const PROTOBUF_FINAL { return New(NULL); }

  ResPQ* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ResPQ* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .mtproto.ResPQ_Data data2 = 2;
  bool has_data2() const;
  void clear_data2();
  static const int kData2FieldNumber = 2;
  const ::mtproto::ResPQ_Data& data2() const;
  ::mtproto::ResPQ_Data* mutable_data2();
  ::mtproto::ResPQ_Data* release_data2();
  void set_allocated_data2(::mtproto::ResPQ_Data* data2);

  // .mtproto.TLConstructor constructor = 1;
  void clear_constructor();
  static const int kConstructorFieldNumber = 1;
  ::mtproto::TLConstructor constructor() const;
  void set_constructor(::mtproto::TLConstructor value);

  // @@protoc_insertion_point(class_scope:mtproto.ResPQ)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::mtproto::ResPQ_Data* data2_;
  int constructor_;
  mutable int _cached_size_;
  friend struct protobuf_schema_2etl_2ehandshake_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TL_resPQ : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtproto.TL_resPQ) */ {
 public:
  TL_resPQ();
  virtual ~TL_resPQ();

  TL_resPQ(const TL_resPQ& from);

  inline TL_resPQ& operator=(const TL_resPQ& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TL_resPQ(TL_resPQ&& from) noexcept
    : TL_resPQ() {
    *this = ::std::move(from);
  }

  inline TL_resPQ& operator=(TL_resPQ&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TL_resPQ& default_instance();

  static inline const TL_resPQ* internal_default_instance() {
    return reinterpret_cast<const TL_resPQ*>(
               &_TL_resPQ_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    28;

  void Swap(TL_resPQ* other);
  friend void swap(TL_resPQ& a, TL_resPQ& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TL_resPQ* New() const PROTOBUF_FINAL { return New(NULL); }

  TL_resPQ* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TL_resPQ* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .mtproto.ResPQ_Data data2 = 2;
  bool has_data2() const;
  void clear_data2();
  static const int kData2FieldNumber = 2;
  const ::mtproto::ResPQ_Data& data2() const;
  ::mtproto::ResPQ_Data* mutable_data2();
  ::mtproto::ResPQ_Data* release_data2();
  void set_allocated_data2(::mtproto::ResPQ_Data* data2);

  // @@protoc_insertion_point(class_scope:mtproto.TL_resPQ)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::mtproto::ResPQ_Data* data2_;
  mutable int _cached_size_;
  friend struct protobuf_schema_2etl_2ehandshake_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// P_Q_inner_data_Data

// string pq = 1;
inline void P_Q_inner_data_Data::clear_pq() {
  pq_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& P_Q_inner_data_Data::pq() const {
  // @@protoc_insertion_point(field_get:mtproto.P_Q_inner_data_Data.pq)
  return pq_.GetNoArena();
}
inline void P_Q_inner_data_Data::set_pq(const ::std::string& value) {
  
  pq_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtproto.P_Q_inner_data_Data.pq)
}
#if LANG_CXX11
inline void P_Q_inner_data_Data::set_pq(::std::string&& value) {
  
  pq_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mtproto.P_Q_inner_data_Data.pq)
}
#endif
inline void P_Q_inner_data_Data::set_pq(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  pq_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtproto.P_Q_inner_data_Data.pq)
}
inline void P_Q_inner_data_Data::set_pq(const char* value, size_t size) {
  
  pq_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtproto.P_Q_inner_data_Data.pq)
}
inline ::std::string* P_Q_inner_data_Data::mutable_pq() {
  
  // @@protoc_insertion_point(field_mutable:mtproto.P_Q_inner_data_Data.pq)
  return pq_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* P_Q_inner_data_Data::release_pq() {
  // @@protoc_insertion_point(field_release:mtproto.P_Q_inner_data_Data.pq)
  
  return pq_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void P_Q_inner_data_Data::set_allocated_pq(::std::string* pq) {
  if (pq != NULL) {
    
  } else {
    
  }
  pq_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), pq);
  // @@protoc_insertion_point(field_set_allocated:mtproto.P_Q_inner_data_Data.pq)
}

// string p = 2;
inline void P_Q_inner_data_Data::clear_p() {
  p_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& P_Q_inner_data_Data::p() const {
  // @@protoc_insertion_point(field_get:mtproto.P_Q_inner_data_Data.p)
  return p_.GetNoArena();
}
inline void P_Q_inner_data_Data::set_p(const ::std::string& value) {
  
  p_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtproto.P_Q_inner_data_Data.p)
}
#if LANG_CXX11
inline void P_Q_inner_data_Data::set_p(::std::string&& value) {
  
  p_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mtproto.P_Q_inner_data_Data.p)
}
#endif
inline void P_Q_inner_data_Data::set_p(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  p_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtproto.P_Q_inner_data_Data.p)
}
inline void P_Q_inner_data_Data::set_p(const char* value, size_t size) {
  
  p_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtproto.P_Q_inner_data_Data.p)
}
inline ::std::string* P_Q_inner_data_Data::mutable_p() {
  
  // @@protoc_insertion_point(field_mutable:mtproto.P_Q_inner_data_Data.p)
  return p_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* P_Q_inner_data_Data::release_p() {
  // @@protoc_insertion_point(field_release:mtproto.P_Q_inner_data_Data.p)
  
  return p_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void P_Q_inner_data_Data::set_allocated_p(::std::string* p) {
  if (p != NULL) {
    
  } else {
    
  }
  p_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), p);
  // @@protoc_insertion_point(field_set_allocated:mtproto.P_Q_inner_data_Data.p)
}

// string q = 3;
inline void P_Q_inner_data_Data::clear_q() {
  q_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& P_Q_inner_data_Data::q() const {
  // @@protoc_insertion_point(field_get:mtproto.P_Q_inner_data_Data.q)
  return q_.GetNoArena();
}
inline void P_Q_inner_data_Data::set_q(const ::std::string& value) {
  
  q_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtproto.P_Q_inner_data_Data.q)
}
#if LANG_CXX11
inline void P_Q_inner_data_Data::set_q(::std::string&& value) {
  
  q_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mtproto.P_Q_inner_data_Data.q)
}
#endif
inline void P_Q_inner_data_Data::set_q(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  q_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtproto.P_Q_inner_data_Data.q)
}
inline void P_Q_inner_data_Data::set_q(const char* value, size_t size) {
  
  q_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtproto.P_Q_inner_data_Data.q)
}
inline ::std::string* P_Q_inner_data_Data::mutable_q() {
  
  // @@protoc_insertion_point(field_mutable:mtproto.P_Q_inner_data_Data.q)
  return q_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* P_Q_inner_data_Data::release_q() {
  // @@protoc_insertion_point(field_release:mtproto.P_Q_inner_data_Data.q)
  
  return q_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void P_Q_inner_data_Data::set_allocated_q(::std::string* q) {
  if (q != NULL) {
    
  } else {
    
  }
  q_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), q);
  // @@protoc_insertion_point(field_set_allocated:mtproto.P_Q_inner_data_Data.q)
}

// bytes nonce = 4;
inline void P_Q_inner_data_Data::clear_nonce() {
  nonce_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& P_Q_inner_data_Data::nonce() const {
  // @@protoc_insertion_point(field_get:mtproto.P_Q_inner_data_Data.nonce)
  return nonce_.GetNoArena();
}
inline void P_Q_inner_data_Data::set_nonce(const ::std::string& value) {
  
  nonce_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtproto.P_Q_inner_data_Data.nonce)
}
#if LANG_CXX11
inline void P_Q_inner_data_Data::set_nonce(::std::string&& value) {
  
  nonce_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mtproto.P_Q_inner_data_Data.nonce)
}
#endif
inline void P_Q_inner_data_Data::set_nonce(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  nonce_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtproto.P_Q_inner_data_Data.nonce)
}
inline void P_Q_inner_data_Data::set_nonce(const void* value, size_t size) {
  
  nonce_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtproto.P_Q_inner_data_Data.nonce)
}
inline ::std::string* P_Q_inner_data_Data::mutable_nonce() {
  
  // @@protoc_insertion_point(field_mutable:mtproto.P_Q_inner_data_Data.nonce)
  return nonce_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* P_Q_inner_data_Data::release_nonce() {
  // @@protoc_insertion_point(field_release:mtproto.P_Q_inner_data_Data.nonce)
  
  return nonce_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void P_Q_inner_data_Data::set_allocated_nonce(::std::string* nonce) {
  if (nonce != NULL) {
    
  } else {
    
  }
  nonce_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), nonce);
  // @@protoc_insertion_point(field_set_allocated:mtproto.P_Q_inner_data_Data.nonce)
}

// bytes server_nonce = 5;
inline void P_Q_inner_data_Data::clear_server_nonce() {
  server_nonce_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& P_Q_inner_data_Data::server_nonce() const {
  // @@protoc_insertion_point(field_get:mtproto.P_Q_inner_data_Data.server_nonce)
  return server_nonce_.GetNoArena();
}
inline void P_Q_inner_data_Data::set_server_nonce(const ::std::string& value) {
  
  server_nonce_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtproto.P_Q_inner_data_Data.server_nonce)
}
#if LANG_CXX11
inline void P_Q_inner_data_Data::set_server_nonce(::std::string&& value) {
  
  server_nonce_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mtproto.P_Q_inner_data_Data.server_nonce)
}
#endif
inline void P_Q_inner_data_Data::set_server_nonce(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  server_nonce_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtproto.P_Q_inner_data_Data.server_nonce)
}
inline void P_Q_inner_data_Data::set_server_nonce(const void* value, size_t size) {
  
  server_nonce_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtproto.P_Q_inner_data_Data.server_nonce)
}
inline ::std::string* P_Q_inner_data_Data::mutable_server_nonce() {
  
  // @@protoc_insertion_point(field_mutable:mtproto.P_Q_inner_data_Data.server_nonce)
  return server_nonce_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* P_Q_inner_data_Data::release_server_nonce() {
  // @@protoc_insertion_point(field_release:mtproto.P_Q_inner_data_Data.server_nonce)
  
  return server_nonce_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void P_Q_inner_data_Data::set_allocated_server_nonce(::std::string* server_nonce) {
  if (server_nonce != NULL) {
    
  } else {
    
  }
  server_nonce_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), server_nonce);
  // @@protoc_insertion_point(field_set_allocated:mtproto.P_Q_inner_data_Data.server_nonce)
}

// bytes new_nonce = 6;
inline void P_Q_inner_data_Data::clear_new_nonce() {
  new_nonce_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& P_Q_inner_data_Data::new_nonce() const {
  // @@protoc_insertion_point(field_get:mtproto.P_Q_inner_data_Data.new_nonce)
  return new_nonce_.GetNoArena();
}
inline void P_Q_inner_data_Data::set_new_nonce(const ::std::string& value) {
  
  new_nonce_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtproto.P_Q_inner_data_Data.new_nonce)
}
#if LANG_CXX11
inline void P_Q_inner_data_Data::set_new_nonce(::std::string&& value) {
  
  new_nonce_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mtproto.P_Q_inner_data_Data.new_nonce)
}
#endif
inline void P_Q_inner_data_Data::set_new_nonce(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  new_nonce_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtproto.P_Q_inner_data_Data.new_nonce)
}
inline void P_Q_inner_data_Data::set_new_nonce(const void* value, size_t size) {
  
  new_nonce_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtproto.P_Q_inner_data_Data.new_nonce)
}
inline ::std::string* P_Q_inner_data_Data::mutable_new_nonce() {
  
  // @@protoc_insertion_point(field_mutable:mtproto.P_Q_inner_data_Data.new_nonce)
  return new_nonce_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* P_Q_inner_data_Data::release_new_nonce() {
  // @@protoc_insertion_point(field_release:mtproto.P_Q_inner_data_Data.new_nonce)
  
  return new_nonce_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void P_Q_inner_data_Data::set_allocated_new_nonce(::std::string* new_nonce) {
  if (new_nonce != NULL) {
    
  } else {
    
  }
  new_nonce_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), new_nonce);
  // @@protoc_insertion_point(field_set_allocated:mtproto.P_Q_inner_data_Data.new_nonce)
}

// int32 dc = 7;
inline void P_Q_inner_data_Data::clear_dc() {
  dc_ = 0;
}
inline ::google::protobuf::int32 P_Q_inner_data_Data::dc() const {
  // @@protoc_insertion_point(field_get:mtproto.P_Q_inner_data_Data.dc)
  return dc_;
}
inline void P_Q_inner_data_Data::set_dc(::google::protobuf::int32 value) {
  
  dc_ = value;
  // @@protoc_insertion_point(field_set:mtproto.P_Q_inner_data_Data.dc)
}

// int32 expires_in = 8;
inline void P_Q_inner_data_Data::clear_expires_in() {
  expires_in_ = 0;
}
inline ::google::protobuf::int32 P_Q_inner_data_Data::expires_in() const {
  // @@protoc_insertion_point(field_get:mtproto.P_Q_inner_data_Data.expires_in)
  return expires_in_;
}
inline void P_Q_inner_data_Data::set_expires_in(::google::protobuf::int32 value) {
  
  expires_in_ = value;
  // @@protoc_insertion_point(field_set:mtproto.P_Q_inner_data_Data.expires_in)
}

// -------------------------------------------------------------------

// P_Q_inner_data

// .mtproto.TLConstructor constructor = 1;
inline void P_Q_inner_data::clear_constructor() {
  constructor_ = 0;
}
inline ::mtproto::TLConstructor P_Q_inner_data::constructor() const {
  // @@protoc_insertion_point(field_get:mtproto.P_Q_inner_data.constructor)
  return static_cast< ::mtproto::TLConstructor >(constructor_);
}
inline void P_Q_inner_data::set_constructor(::mtproto::TLConstructor value) {
  
  constructor_ = value;
  // @@protoc_insertion_point(field_set:mtproto.P_Q_inner_data.constructor)
}

// .mtproto.P_Q_inner_data_Data data2 = 2;
inline bool P_Q_inner_data::has_data2() const {
  return this != internal_default_instance() && data2_ != NULL;
}
inline void P_Q_inner_data::clear_data2() {
  if (GetArenaNoVirtual() == NULL && data2_ != NULL) delete data2_;
  data2_ = NULL;
}
inline const ::mtproto::P_Q_inner_data_Data& P_Q_inner_data::data2() const {
  const ::mtproto::P_Q_inner_data_Data* p = data2_;
  // @@protoc_insertion_point(field_get:mtproto.P_Q_inner_data.data2)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::P_Q_inner_data_Data*>(
      &::mtproto::_P_Q_inner_data_Data_default_instance_);
}
inline ::mtproto::P_Q_inner_data_Data* P_Q_inner_data::mutable_data2() {
  
  if (data2_ == NULL) {
    data2_ = new ::mtproto::P_Q_inner_data_Data;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.P_Q_inner_data.data2)
  return data2_;
}
inline ::mtproto::P_Q_inner_data_Data* P_Q_inner_data::release_data2() {
  // @@protoc_insertion_point(field_release:mtproto.P_Q_inner_data.data2)
  
  ::mtproto::P_Q_inner_data_Data* temp = data2_;
  data2_ = NULL;
  return temp;
}
inline void P_Q_inner_data::set_allocated_data2(::mtproto::P_Q_inner_data_Data* data2) {
  delete data2_;
  data2_ = data2;
  if (data2) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.P_Q_inner_data.data2)
}

// -------------------------------------------------------------------

// TL_p_q_inner_data

// .mtproto.P_Q_inner_data_Data data2 = 2;
inline bool TL_p_q_inner_data::has_data2() const {
  return this != internal_default_instance() && data2_ != NULL;
}
inline void TL_p_q_inner_data::clear_data2() {
  if (GetArenaNoVirtual() == NULL && data2_ != NULL) delete data2_;
  data2_ = NULL;
}
inline const ::mtproto::P_Q_inner_data_Data& TL_p_q_inner_data::data2() const {
  const ::mtproto::P_Q_inner_data_Data* p = data2_;
  // @@protoc_insertion_point(field_get:mtproto.TL_p_q_inner_data.data2)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::P_Q_inner_data_Data*>(
      &::mtproto::_P_Q_inner_data_Data_default_instance_);
}
inline ::mtproto::P_Q_inner_data_Data* TL_p_q_inner_data::mutable_data2() {
  
  if (data2_ == NULL) {
    data2_ = new ::mtproto::P_Q_inner_data_Data;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_p_q_inner_data.data2)
  return data2_;
}
inline ::mtproto::P_Q_inner_data_Data* TL_p_q_inner_data::release_data2() {
  // @@protoc_insertion_point(field_release:mtproto.TL_p_q_inner_data.data2)
  
  ::mtproto::P_Q_inner_data_Data* temp = data2_;
  data2_ = NULL;
  return temp;
}
inline void TL_p_q_inner_data::set_allocated_data2(::mtproto::P_Q_inner_data_Data* data2) {
  delete data2_;
  data2_ = data2;
  if (data2) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_p_q_inner_data.data2)
}

// -------------------------------------------------------------------

// TL_p_q_inner_data_dc

// .mtproto.P_Q_inner_data_Data data2 = 2;
inline bool TL_p_q_inner_data_dc::has_data2() const {
  return this != internal_default_instance() && data2_ != NULL;
}
inline void TL_p_q_inner_data_dc::clear_data2() {
  if (GetArenaNoVirtual() == NULL && data2_ != NULL) delete data2_;
  data2_ = NULL;
}
inline const ::mtproto::P_Q_inner_data_Data& TL_p_q_inner_data_dc::data2() const {
  const ::mtproto::P_Q_inner_data_Data* p = data2_;
  // @@protoc_insertion_point(field_get:mtproto.TL_p_q_inner_data_dc.data2)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::P_Q_inner_data_Data*>(
      &::mtproto::_P_Q_inner_data_Data_default_instance_);
}
inline ::mtproto::P_Q_inner_data_Data* TL_p_q_inner_data_dc::mutable_data2() {
  
  if (data2_ == NULL) {
    data2_ = new ::mtproto::P_Q_inner_data_Data;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_p_q_inner_data_dc.data2)
  return data2_;
}
inline ::mtproto::P_Q_inner_data_Data* TL_p_q_inner_data_dc::release_data2() {
  // @@protoc_insertion_point(field_release:mtproto.TL_p_q_inner_data_dc.data2)
  
  ::mtproto::P_Q_inner_data_Data* temp = data2_;
  data2_ = NULL;
  return temp;
}
inline void TL_p_q_inner_data_dc::set_allocated_data2(::mtproto::P_Q_inner_data_Data* data2) {
  delete data2_;
  data2_ = data2;
  if (data2) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_p_q_inner_data_dc.data2)
}

// -------------------------------------------------------------------

// TL_p_q_inner_data_temp

// .mtproto.P_Q_inner_data_Data data2 = 2;
inline bool TL_p_q_inner_data_temp::has_data2() const {
  return this != internal_default_instance() && data2_ != NULL;
}
inline void TL_p_q_inner_data_temp::clear_data2() {
  if (GetArenaNoVirtual() == NULL && data2_ != NULL) delete data2_;
  data2_ = NULL;
}
inline const ::mtproto::P_Q_inner_data_Data& TL_p_q_inner_data_temp::data2() const {
  const ::mtproto::P_Q_inner_data_Data* p = data2_;
  // @@protoc_insertion_point(field_get:mtproto.TL_p_q_inner_data_temp.data2)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::P_Q_inner_data_Data*>(
      &::mtproto::_P_Q_inner_data_Data_default_instance_);
}
inline ::mtproto::P_Q_inner_data_Data* TL_p_q_inner_data_temp::mutable_data2() {
  
  if (data2_ == NULL) {
    data2_ = new ::mtproto::P_Q_inner_data_Data;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_p_q_inner_data_temp.data2)
  return data2_;
}
inline ::mtproto::P_Q_inner_data_Data* TL_p_q_inner_data_temp::release_data2() {
  // @@protoc_insertion_point(field_release:mtproto.TL_p_q_inner_data_temp.data2)
  
  ::mtproto::P_Q_inner_data_Data* temp = data2_;
  data2_ = NULL;
  return temp;
}
inline void TL_p_q_inner_data_temp::set_allocated_data2(::mtproto::P_Q_inner_data_Data* data2) {
  delete data2_;
  data2_ = data2;
  if (data2) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_p_q_inner_data_temp.data2)
}

// -------------------------------------------------------------------

// TL_p_q_inner_data_temp_dc

// .mtproto.P_Q_inner_data_Data data2 = 2;
inline bool TL_p_q_inner_data_temp_dc::has_data2() const {
  return this != internal_default_instance() && data2_ != NULL;
}
inline void TL_p_q_inner_data_temp_dc::clear_data2() {
  if (GetArenaNoVirtual() == NULL && data2_ != NULL) delete data2_;
  data2_ = NULL;
}
inline const ::mtproto::P_Q_inner_data_Data& TL_p_q_inner_data_temp_dc::data2() const {
  const ::mtproto::P_Q_inner_data_Data* p = data2_;
  // @@protoc_insertion_point(field_get:mtproto.TL_p_q_inner_data_temp_dc.data2)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::P_Q_inner_data_Data*>(
      &::mtproto::_P_Q_inner_data_Data_default_instance_);
}
inline ::mtproto::P_Q_inner_data_Data* TL_p_q_inner_data_temp_dc::mutable_data2() {
  
  if (data2_ == NULL) {
    data2_ = new ::mtproto::P_Q_inner_data_Data;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_p_q_inner_data_temp_dc.data2)
  return data2_;
}
inline ::mtproto::P_Q_inner_data_Data* TL_p_q_inner_data_temp_dc::release_data2() {
  // @@protoc_insertion_point(field_release:mtproto.TL_p_q_inner_data_temp_dc.data2)
  
  ::mtproto::P_Q_inner_data_Data* temp = data2_;
  data2_ = NULL;
  return temp;
}
inline void TL_p_q_inner_data_temp_dc::set_allocated_data2(::mtproto::P_Q_inner_data_Data* data2) {
  delete data2_;
  data2_ = data2;
  if (data2) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_p_q_inner_data_temp_dc.data2)
}

// -------------------------------------------------------------------

// Server_DH_Params_Data

// bytes nonce = 1;
inline void Server_DH_Params_Data::clear_nonce() {
  nonce_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Server_DH_Params_Data::nonce() const {
  // @@protoc_insertion_point(field_get:mtproto.Server_DH_Params_Data.nonce)
  return nonce_.GetNoArena();
}
inline void Server_DH_Params_Data::set_nonce(const ::std::string& value) {
  
  nonce_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtproto.Server_DH_Params_Data.nonce)
}
#if LANG_CXX11
inline void Server_DH_Params_Data::set_nonce(::std::string&& value) {
  
  nonce_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mtproto.Server_DH_Params_Data.nonce)
}
#endif
inline void Server_DH_Params_Data::set_nonce(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  nonce_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtproto.Server_DH_Params_Data.nonce)
}
inline void Server_DH_Params_Data::set_nonce(const void* value, size_t size) {
  
  nonce_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtproto.Server_DH_Params_Data.nonce)
}
inline ::std::string* Server_DH_Params_Data::mutable_nonce() {
  
  // @@protoc_insertion_point(field_mutable:mtproto.Server_DH_Params_Data.nonce)
  return nonce_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Server_DH_Params_Data::release_nonce() {
  // @@protoc_insertion_point(field_release:mtproto.Server_DH_Params_Data.nonce)
  
  return nonce_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Server_DH_Params_Data::set_allocated_nonce(::std::string* nonce) {
  if (nonce != NULL) {
    
  } else {
    
  }
  nonce_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), nonce);
  // @@protoc_insertion_point(field_set_allocated:mtproto.Server_DH_Params_Data.nonce)
}

// bytes server_nonce = 2;
inline void Server_DH_Params_Data::clear_server_nonce() {
  server_nonce_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Server_DH_Params_Data::server_nonce() const {
  // @@protoc_insertion_point(field_get:mtproto.Server_DH_Params_Data.server_nonce)
  return server_nonce_.GetNoArena();
}
inline void Server_DH_Params_Data::set_server_nonce(const ::std::string& value) {
  
  server_nonce_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtproto.Server_DH_Params_Data.server_nonce)
}
#if LANG_CXX11
inline void Server_DH_Params_Data::set_server_nonce(::std::string&& value) {
  
  server_nonce_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mtproto.Server_DH_Params_Data.server_nonce)
}
#endif
inline void Server_DH_Params_Data::set_server_nonce(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  server_nonce_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtproto.Server_DH_Params_Data.server_nonce)
}
inline void Server_DH_Params_Data::set_server_nonce(const void* value, size_t size) {
  
  server_nonce_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtproto.Server_DH_Params_Data.server_nonce)
}
inline ::std::string* Server_DH_Params_Data::mutable_server_nonce() {
  
  // @@protoc_insertion_point(field_mutable:mtproto.Server_DH_Params_Data.server_nonce)
  return server_nonce_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Server_DH_Params_Data::release_server_nonce() {
  // @@protoc_insertion_point(field_release:mtproto.Server_DH_Params_Data.server_nonce)
  
  return server_nonce_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Server_DH_Params_Data::set_allocated_server_nonce(::std::string* server_nonce) {
  if (server_nonce != NULL) {
    
  } else {
    
  }
  server_nonce_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), server_nonce);
  // @@protoc_insertion_point(field_set_allocated:mtproto.Server_DH_Params_Data.server_nonce)
}

// bytes new_nonce_hash = 3;
inline void Server_DH_Params_Data::clear_new_nonce_hash() {
  new_nonce_hash_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Server_DH_Params_Data::new_nonce_hash() const {
  // @@protoc_insertion_point(field_get:mtproto.Server_DH_Params_Data.new_nonce_hash)
  return new_nonce_hash_.GetNoArena();
}
inline void Server_DH_Params_Data::set_new_nonce_hash(const ::std::string& value) {
  
  new_nonce_hash_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtproto.Server_DH_Params_Data.new_nonce_hash)
}
#if LANG_CXX11
inline void Server_DH_Params_Data::set_new_nonce_hash(::std::string&& value) {
  
  new_nonce_hash_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mtproto.Server_DH_Params_Data.new_nonce_hash)
}
#endif
inline void Server_DH_Params_Data::set_new_nonce_hash(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  new_nonce_hash_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtproto.Server_DH_Params_Data.new_nonce_hash)
}
inline void Server_DH_Params_Data::set_new_nonce_hash(const void* value, size_t size) {
  
  new_nonce_hash_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtproto.Server_DH_Params_Data.new_nonce_hash)
}
inline ::std::string* Server_DH_Params_Data::mutable_new_nonce_hash() {
  
  // @@protoc_insertion_point(field_mutable:mtproto.Server_DH_Params_Data.new_nonce_hash)
  return new_nonce_hash_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Server_DH_Params_Data::release_new_nonce_hash() {
  // @@protoc_insertion_point(field_release:mtproto.Server_DH_Params_Data.new_nonce_hash)
  
  return new_nonce_hash_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Server_DH_Params_Data::set_allocated_new_nonce_hash(::std::string* new_nonce_hash) {
  if (new_nonce_hash != NULL) {
    
  } else {
    
  }
  new_nonce_hash_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), new_nonce_hash);
  // @@protoc_insertion_point(field_set_allocated:mtproto.Server_DH_Params_Data.new_nonce_hash)
}

// string encrypted_answer = 4;
inline void Server_DH_Params_Data::clear_encrypted_answer() {
  encrypted_answer_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Server_DH_Params_Data::encrypted_answer() const {
  // @@protoc_insertion_point(field_get:mtproto.Server_DH_Params_Data.encrypted_answer)
  return encrypted_answer_.GetNoArena();
}
inline void Server_DH_Params_Data::set_encrypted_answer(const ::std::string& value) {
  
  encrypted_answer_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtproto.Server_DH_Params_Data.encrypted_answer)
}
#if LANG_CXX11
inline void Server_DH_Params_Data::set_encrypted_answer(::std::string&& value) {
  
  encrypted_answer_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mtproto.Server_DH_Params_Data.encrypted_answer)
}
#endif
inline void Server_DH_Params_Data::set_encrypted_answer(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  encrypted_answer_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtproto.Server_DH_Params_Data.encrypted_answer)
}
inline void Server_DH_Params_Data::set_encrypted_answer(const char* value, size_t size) {
  
  encrypted_answer_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtproto.Server_DH_Params_Data.encrypted_answer)
}
inline ::std::string* Server_DH_Params_Data::mutable_encrypted_answer() {
  
  // @@protoc_insertion_point(field_mutable:mtproto.Server_DH_Params_Data.encrypted_answer)
  return encrypted_answer_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Server_DH_Params_Data::release_encrypted_answer() {
  // @@protoc_insertion_point(field_release:mtproto.Server_DH_Params_Data.encrypted_answer)
  
  return encrypted_answer_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Server_DH_Params_Data::set_allocated_encrypted_answer(::std::string* encrypted_answer) {
  if (encrypted_answer != NULL) {
    
  } else {
    
  }
  encrypted_answer_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), encrypted_answer);
  // @@protoc_insertion_point(field_set_allocated:mtproto.Server_DH_Params_Data.encrypted_answer)
}

// -------------------------------------------------------------------

// Server_DH_Params

// .mtproto.TLConstructor constructor = 1;
inline void Server_DH_Params::clear_constructor() {
  constructor_ = 0;
}
inline ::mtproto::TLConstructor Server_DH_Params::constructor() const {
  // @@protoc_insertion_point(field_get:mtproto.Server_DH_Params.constructor)
  return static_cast< ::mtproto::TLConstructor >(constructor_);
}
inline void Server_DH_Params::set_constructor(::mtproto::TLConstructor value) {
  
  constructor_ = value;
  // @@protoc_insertion_point(field_set:mtproto.Server_DH_Params.constructor)
}

// .mtproto.Server_DH_Params_Data data2 = 2;
inline bool Server_DH_Params::has_data2() const {
  return this != internal_default_instance() && data2_ != NULL;
}
inline void Server_DH_Params::clear_data2() {
  if (GetArenaNoVirtual() == NULL && data2_ != NULL) delete data2_;
  data2_ = NULL;
}
inline const ::mtproto::Server_DH_Params_Data& Server_DH_Params::data2() const {
  const ::mtproto::Server_DH_Params_Data* p = data2_;
  // @@protoc_insertion_point(field_get:mtproto.Server_DH_Params.data2)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::Server_DH_Params_Data*>(
      &::mtproto::_Server_DH_Params_Data_default_instance_);
}
inline ::mtproto::Server_DH_Params_Data* Server_DH_Params::mutable_data2() {
  
  if (data2_ == NULL) {
    data2_ = new ::mtproto::Server_DH_Params_Data;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.Server_DH_Params.data2)
  return data2_;
}
inline ::mtproto::Server_DH_Params_Data* Server_DH_Params::release_data2() {
  // @@protoc_insertion_point(field_release:mtproto.Server_DH_Params.data2)
  
  ::mtproto::Server_DH_Params_Data* temp = data2_;
  data2_ = NULL;
  return temp;
}
inline void Server_DH_Params::set_allocated_data2(::mtproto::Server_DH_Params_Data* data2) {
  delete data2_;
  data2_ = data2;
  if (data2) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.Server_DH_Params.data2)
}

// -------------------------------------------------------------------

// TL_server_DH_params_fail

// .mtproto.Server_DH_Params_Data data2 = 2;
inline bool TL_server_DH_params_fail::has_data2() const {
  return this != internal_default_instance() && data2_ != NULL;
}
inline void TL_server_DH_params_fail::clear_data2() {
  if (GetArenaNoVirtual() == NULL && data2_ != NULL) delete data2_;
  data2_ = NULL;
}
inline const ::mtproto::Server_DH_Params_Data& TL_server_DH_params_fail::data2() const {
  const ::mtproto::Server_DH_Params_Data* p = data2_;
  // @@protoc_insertion_point(field_get:mtproto.TL_server_DH_params_fail.data2)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::Server_DH_Params_Data*>(
      &::mtproto::_Server_DH_Params_Data_default_instance_);
}
inline ::mtproto::Server_DH_Params_Data* TL_server_DH_params_fail::mutable_data2() {
  
  if (data2_ == NULL) {
    data2_ = new ::mtproto::Server_DH_Params_Data;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_server_DH_params_fail.data2)
  return data2_;
}
inline ::mtproto::Server_DH_Params_Data* TL_server_DH_params_fail::release_data2() {
  // @@protoc_insertion_point(field_release:mtproto.TL_server_DH_params_fail.data2)
  
  ::mtproto::Server_DH_Params_Data* temp = data2_;
  data2_ = NULL;
  return temp;
}
inline void TL_server_DH_params_fail::set_allocated_data2(::mtproto::Server_DH_Params_Data* data2) {
  delete data2_;
  data2_ = data2;
  if (data2) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_server_DH_params_fail.data2)
}

// -------------------------------------------------------------------

// TL_server_DH_params_ok

// .mtproto.Server_DH_Params_Data data2 = 2;
inline bool TL_server_DH_params_ok::has_data2() const {
  return this != internal_default_instance() && data2_ != NULL;
}
inline void TL_server_DH_params_ok::clear_data2() {
  if (GetArenaNoVirtual() == NULL && data2_ != NULL) delete data2_;
  data2_ = NULL;
}
inline const ::mtproto::Server_DH_Params_Data& TL_server_DH_params_ok::data2() const {
  const ::mtproto::Server_DH_Params_Data* p = data2_;
  // @@protoc_insertion_point(field_get:mtproto.TL_server_DH_params_ok.data2)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::Server_DH_Params_Data*>(
      &::mtproto::_Server_DH_Params_Data_default_instance_);
}
inline ::mtproto::Server_DH_Params_Data* TL_server_DH_params_ok::mutable_data2() {
  
  if (data2_ == NULL) {
    data2_ = new ::mtproto::Server_DH_Params_Data;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_server_DH_params_ok.data2)
  return data2_;
}
inline ::mtproto::Server_DH_Params_Data* TL_server_DH_params_ok::release_data2() {
  // @@protoc_insertion_point(field_release:mtproto.TL_server_DH_params_ok.data2)
  
  ::mtproto::Server_DH_Params_Data* temp = data2_;
  data2_ = NULL;
  return temp;
}
inline void TL_server_DH_params_ok::set_allocated_data2(::mtproto::Server_DH_Params_Data* data2) {
  delete data2_;
  data2_ = data2;
  if (data2) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_server_DH_params_ok.data2)
}

// -------------------------------------------------------------------

// Server_DH_inner_data_Data

// bytes nonce = 1;
inline void Server_DH_inner_data_Data::clear_nonce() {
  nonce_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Server_DH_inner_data_Data::nonce() const {
  // @@protoc_insertion_point(field_get:mtproto.Server_DH_inner_data_Data.nonce)
  return nonce_.GetNoArena();
}
inline void Server_DH_inner_data_Data::set_nonce(const ::std::string& value) {
  
  nonce_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtproto.Server_DH_inner_data_Data.nonce)
}
#if LANG_CXX11
inline void Server_DH_inner_data_Data::set_nonce(::std::string&& value) {
  
  nonce_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mtproto.Server_DH_inner_data_Data.nonce)
}
#endif
inline void Server_DH_inner_data_Data::set_nonce(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  nonce_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtproto.Server_DH_inner_data_Data.nonce)
}
inline void Server_DH_inner_data_Data::set_nonce(const void* value, size_t size) {
  
  nonce_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtproto.Server_DH_inner_data_Data.nonce)
}
inline ::std::string* Server_DH_inner_data_Data::mutable_nonce() {
  
  // @@protoc_insertion_point(field_mutable:mtproto.Server_DH_inner_data_Data.nonce)
  return nonce_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Server_DH_inner_data_Data::release_nonce() {
  // @@protoc_insertion_point(field_release:mtproto.Server_DH_inner_data_Data.nonce)
  
  return nonce_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Server_DH_inner_data_Data::set_allocated_nonce(::std::string* nonce) {
  if (nonce != NULL) {
    
  } else {
    
  }
  nonce_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), nonce);
  // @@protoc_insertion_point(field_set_allocated:mtproto.Server_DH_inner_data_Data.nonce)
}

// bytes server_nonce = 2;
inline void Server_DH_inner_data_Data::clear_server_nonce() {
  server_nonce_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Server_DH_inner_data_Data::server_nonce() const {
  // @@protoc_insertion_point(field_get:mtproto.Server_DH_inner_data_Data.server_nonce)
  return server_nonce_.GetNoArena();
}
inline void Server_DH_inner_data_Data::set_server_nonce(const ::std::string& value) {
  
  server_nonce_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtproto.Server_DH_inner_data_Data.server_nonce)
}
#if LANG_CXX11
inline void Server_DH_inner_data_Data::set_server_nonce(::std::string&& value) {
  
  server_nonce_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mtproto.Server_DH_inner_data_Data.server_nonce)
}
#endif
inline void Server_DH_inner_data_Data::set_server_nonce(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  server_nonce_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtproto.Server_DH_inner_data_Data.server_nonce)
}
inline void Server_DH_inner_data_Data::set_server_nonce(const void* value, size_t size) {
  
  server_nonce_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtproto.Server_DH_inner_data_Data.server_nonce)
}
inline ::std::string* Server_DH_inner_data_Data::mutable_server_nonce() {
  
  // @@protoc_insertion_point(field_mutable:mtproto.Server_DH_inner_data_Data.server_nonce)
  return server_nonce_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Server_DH_inner_data_Data::release_server_nonce() {
  // @@protoc_insertion_point(field_release:mtproto.Server_DH_inner_data_Data.server_nonce)
  
  return server_nonce_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Server_DH_inner_data_Data::set_allocated_server_nonce(::std::string* server_nonce) {
  if (server_nonce != NULL) {
    
  } else {
    
  }
  server_nonce_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), server_nonce);
  // @@protoc_insertion_point(field_set_allocated:mtproto.Server_DH_inner_data_Data.server_nonce)
}

// int32 g = 3;
inline void Server_DH_inner_data_Data::clear_g() {
  g_ = 0;
}
inline ::google::protobuf::int32 Server_DH_inner_data_Data::g() const {
  // @@protoc_insertion_point(field_get:mtproto.Server_DH_inner_data_Data.g)
  return g_;
}
inline void Server_DH_inner_data_Data::set_g(::google::protobuf::int32 value) {
  
  g_ = value;
  // @@protoc_insertion_point(field_set:mtproto.Server_DH_inner_data_Data.g)
}

// string dh_prime = 4;
inline void Server_DH_inner_data_Data::clear_dh_prime() {
  dh_prime_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Server_DH_inner_data_Data::dh_prime() const {
  // @@protoc_insertion_point(field_get:mtproto.Server_DH_inner_data_Data.dh_prime)
  return dh_prime_.GetNoArena();
}
inline void Server_DH_inner_data_Data::set_dh_prime(const ::std::string& value) {
  
  dh_prime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtproto.Server_DH_inner_data_Data.dh_prime)
}
#if LANG_CXX11
inline void Server_DH_inner_data_Data::set_dh_prime(::std::string&& value) {
  
  dh_prime_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mtproto.Server_DH_inner_data_Data.dh_prime)
}
#endif
inline void Server_DH_inner_data_Data::set_dh_prime(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  dh_prime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtproto.Server_DH_inner_data_Data.dh_prime)
}
inline void Server_DH_inner_data_Data::set_dh_prime(const char* value, size_t size) {
  
  dh_prime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtproto.Server_DH_inner_data_Data.dh_prime)
}
inline ::std::string* Server_DH_inner_data_Data::mutable_dh_prime() {
  
  // @@protoc_insertion_point(field_mutable:mtproto.Server_DH_inner_data_Data.dh_prime)
  return dh_prime_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Server_DH_inner_data_Data::release_dh_prime() {
  // @@protoc_insertion_point(field_release:mtproto.Server_DH_inner_data_Data.dh_prime)
  
  return dh_prime_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Server_DH_inner_data_Data::set_allocated_dh_prime(::std::string* dh_prime) {
  if (dh_prime != NULL) {
    
  } else {
    
  }
  dh_prime_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), dh_prime);
  // @@protoc_insertion_point(field_set_allocated:mtproto.Server_DH_inner_data_Data.dh_prime)
}

// string g_a = 5;
inline void Server_DH_inner_data_Data::clear_g_a() {
  g_a_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Server_DH_inner_data_Data::g_a() const {
  // @@protoc_insertion_point(field_get:mtproto.Server_DH_inner_data_Data.g_a)
  return g_a_.GetNoArena();
}
inline void Server_DH_inner_data_Data::set_g_a(const ::std::string& value) {
  
  g_a_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtproto.Server_DH_inner_data_Data.g_a)
}
#if LANG_CXX11
inline void Server_DH_inner_data_Data::set_g_a(::std::string&& value) {
  
  g_a_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mtproto.Server_DH_inner_data_Data.g_a)
}
#endif
inline void Server_DH_inner_data_Data::set_g_a(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  g_a_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtproto.Server_DH_inner_data_Data.g_a)
}
inline void Server_DH_inner_data_Data::set_g_a(const char* value, size_t size) {
  
  g_a_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtproto.Server_DH_inner_data_Data.g_a)
}
inline ::std::string* Server_DH_inner_data_Data::mutable_g_a() {
  
  // @@protoc_insertion_point(field_mutable:mtproto.Server_DH_inner_data_Data.g_a)
  return g_a_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Server_DH_inner_data_Data::release_g_a() {
  // @@protoc_insertion_point(field_release:mtproto.Server_DH_inner_data_Data.g_a)
  
  return g_a_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Server_DH_inner_data_Data::set_allocated_g_a(::std::string* g_a) {
  if (g_a != NULL) {
    
  } else {
    
  }
  g_a_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), g_a);
  // @@protoc_insertion_point(field_set_allocated:mtproto.Server_DH_inner_data_Data.g_a)
}

// int32 server_time = 6;
inline void Server_DH_inner_data_Data::clear_server_time() {
  server_time_ = 0;
}
inline ::google::protobuf::int32 Server_DH_inner_data_Data::server_time() const {
  // @@protoc_insertion_point(field_get:mtproto.Server_DH_inner_data_Data.server_time)
  return server_time_;
}
inline void Server_DH_inner_data_Data::set_server_time(::google::protobuf::int32 value) {
  
  server_time_ = value;
  // @@protoc_insertion_point(field_set:mtproto.Server_DH_inner_data_Data.server_time)
}

// -------------------------------------------------------------------

// Server_DH_inner_data

// .mtproto.TLConstructor constructor = 1;
inline void Server_DH_inner_data::clear_constructor() {
  constructor_ = 0;
}
inline ::mtproto::TLConstructor Server_DH_inner_data::constructor() const {
  // @@protoc_insertion_point(field_get:mtproto.Server_DH_inner_data.constructor)
  return static_cast< ::mtproto::TLConstructor >(constructor_);
}
inline void Server_DH_inner_data::set_constructor(::mtproto::TLConstructor value) {
  
  constructor_ = value;
  // @@protoc_insertion_point(field_set:mtproto.Server_DH_inner_data.constructor)
}

// .mtproto.Server_DH_inner_data_Data data2 = 2;
inline bool Server_DH_inner_data::has_data2() const {
  return this != internal_default_instance() && data2_ != NULL;
}
inline void Server_DH_inner_data::clear_data2() {
  if (GetArenaNoVirtual() == NULL && data2_ != NULL) delete data2_;
  data2_ = NULL;
}
inline const ::mtproto::Server_DH_inner_data_Data& Server_DH_inner_data::data2() const {
  const ::mtproto::Server_DH_inner_data_Data* p = data2_;
  // @@protoc_insertion_point(field_get:mtproto.Server_DH_inner_data.data2)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::Server_DH_inner_data_Data*>(
      &::mtproto::_Server_DH_inner_data_Data_default_instance_);
}
inline ::mtproto::Server_DH_inner_data_Data* Server_DH_inner_data::mutable_data2() {
  
  if (data2_ == NULL) {
    data2_ = new ::mtproto::Server_DH_inner_data_Data;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.Server_DH_inner_data.data2)
  return data2_;
}
inline ::mtproto::Server_DH_inner_data_Data* Server_DH_inner_data::release_data2() {
  // @@protoc_insertion_point(field_release:mtproto.Server_DH_inner_data.data2)
  
  ::mtproto::Server_DH_inner_data_Data* temp = data2_;
  data2_ = NULL;
  return temp;
}
inline void Server_DH_inner_data::set_allocated_data2(::mtproto::Server_DH_inner_data_Data* data2) {
  delete data2_;
  data2_ = data2;
  if (data2) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.Server_DH_inner_data.data2)
}

// -------------------------------------------------------------------

// TL_server_DH_inner_data

// .mtproto.Server_DH_inner_data_Data data2 = 2;
inline bool TL_server_DH_inner_data::has_data2() const {
  return this != internal_default_instance() && data2_ != NULL;
}
inline void TL_server_DH_inner_data::clear_data2() {
  if (GetArenaNoVirtual() == NULL && data2_ != NULL) delete data2_;
  data2_ = NULL;
}
inline const ::mtproto::Server_DH_inner_data_Data& TL_server_DH_inner_data::data2() const {
  const ::mtproto::Server_DH_inner_data_Data* p = data2_;
  // @@protoc_insertion_point(field_get:mtproto.TL_server_DH_inner_data.data2)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::Server_DH_inner_data_Data*>(
      &::mtproto::_Server_DH_inner_data_Data_default_instance_);
}
inline ::mtproto::Server_DH_inner_data_Data* TL_server_DH_inner_data::mutable_data2() {
  
  if (data2_ == NULL) {
    data2_ = new ::mtproto::Server_DH_inner_data_Data;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_server_DH_inner_data.data2)
  return data2_;
}
inline ::mtproto::Server_DH_inner_data_Data* TL_server_DH_inner_data::release_data2() {
  // @@protoc_insertion_point(field_release:mtproto.TL_server_DH_inner_data.data2)
  
  ::mtproto::Server_DH_inner_data_Data* temp = data2_;
  data2_ = NULL;
  return temp;
}
inline void TL_server_DH_inner_data::set_allocated_data2(::mtproto::Server_DH_inner_data_Data* data2) {
  delete data2_;
  data2_ = data2;
  if (data2) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_server_DH_inner_data.data2)
}

// -------------------------------------------------------------------

// Client_DH_Inner_Data_Data

// bytes nonce = 1;
inline void Client_DH_Inner_Data_Data::clear_nonce() {
  nonce_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Client_DH_Inner_Data_Data::nonce() const {
  // @@protoc_insertion_point(field_get:mtproto.Client_DH_Inner_Data_Data.nonce)
  return nonce_.GetNoArena();
}
inline void Client_DH_Inner_Data_Data::set_nonce(const ::std::string& value) {
  
  nonce_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtproto.Client_DH_Inner_Data_Data.nonce)
}
#if LANG_CXX11
inline void Client_DH_Inner_Data_Data::set_nonce(::std::string&& value) {
  
  nonce_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mtproto.Client_DH_Inner_Data_Data.nonce)
}
#endif
inline void Client_DH_Inner_Data_Data::set_nonce(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  nonce_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtproto.Client_DH_Inner_Data_Data.nonce)
}
inline void Client_DH_Inner_Data_Data::set_nonce(const void* value, size_t size) {
  
  nonce_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtproto.Client_DH_Inner_Data_Data.nonce)
}
inline ::std::string* Client_DH_Inner_Data_Data::mutable_nonce() {
  
  // @@protoc_insertion_point(field_mutable:mtproto.Client_DH_Inner_Data_Data.nonce)
  return nonce_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Client_DH_Inner_Data_Data::release_nonce() {
  // @@protoc_insertion_point(field_release:mtproto.Client_DH_Inner_Data_Data.nonce)
  
  return nonce_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Client_DH_Inner_Data_Data::set_allocated_nonce(::std::string* nonce) {
  if (nonce != NULL) {
    
  } else {
    
  }
  nonce_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), nonce);
  // @@protoc_insertion_point(field_set_allocated:mtproto.Client_DH_Inner_Data_Data.nonce)
}

// bytes server_nonce = 2;
inline void Client_DH_Inner_Data_Data::clear_server_nonce() {
  server_nonce_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Client_DH_Inner_Data_Data::server_nonce() const {
  // @@protoc_insertion_point(field_get:mtproto.Client_DH_Inner_Data_Data.server_nonce)
  return server_nonce_.GetNoArena();
}
inline void Client_DH_Inner_Data_Data::set_server_nonce(const ::std::string& value) {
  
  server_nonce_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtproto.Client_DH_Inner_Data_Data.server_nonce)
}
#if LANG_CXX11
inline void Client_DH_Inner_Data_Data::set_server_nonce(::std::string&& value) {
  
  server_nonce_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mtproto.Client_DH_Inner_Data_Data.server_nonce)
}
#endif
inline void Client_DH_Inner_Data_Data::set_server_nonce(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  server_nonce_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtproto.Client_DH_Inner_Data_Data.server_nonce)
}
inline void Client_DH_Inner_Data_Data::set_server_nonce(const void* value, size_t size) {
  
  server_nonce_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtproto.Client_DH_Inner_Data_Data.server_nonce)
}
inline ::std::string* Client_DH_Inner_Data_Data::mutable_server_nonce() {
  
  // @@protoc_insertion_point(field_mutable:mtproto.Client_DH_Inner_Data_Data.server_nonce)
  return server_nonce_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Client_DH_Inner_Data_Data::release_server_nonce() {
  // @@protoc_insertion_point(field_release:mtproto.Client_DH_Inner_Data_Data.server_nonce)
  
  return server_nonce_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Client_DH_Inner_Data_Data::set_allocated_server_nonce(::std::string* server_nonce) {
  if (server_nonce != NULL) {
    
  } else {
    
  }
  server_nonce_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), server_nonce);
  // @@protoc_insertion_point(field_set_allocated:mtproto.Client_DH_Inner_Data_Data.server_nonce)
}

// int64 retry_id = 3;
inline void Client_DH_Inner_Data_Data::clear_retry_id() {
  retry_id_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 Client_DH_Inner_Data_Data::retry_id() const {
  // @@protoc_insertion_point(field_get:mtproto.Client_DH_Inner_Data_Data.retry_id)
  return retry_id_;
}
inline void Client_DH_Inner_Data_Data::set_retry_id(::google::protobuf::int64 value) {
  
  retry_id_ = value;
  // @@protoc_insertion_point(field_set:mtproto.Client_DH_Inner_Data_Data.retry_id)
}

// string g_b = 4;
inline void Client_DH_Inner_Data_Data::clear_g_b() {
  g_b_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Client_DH_Inner_Data_Data::g_b() const {
  // @@protoc_insertion_point(field_get:mtproto.Client_DH_Inner_Data_Data.g_b)
  return g_b_.GetNoArena();
}
inline void Client_DH_Inner_Data_Data::set_g_b(const ::std::string& value) {
  
  g_b_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtproto.Client_DH_Inner_Data_Data.g_b)
}
#if LANG_CXX11
inline void Client_DH_Inner_Data_Data::set_g_b(::std::string&& value) {
  
  g_b_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mtproto.Client_DH_Inner_Data_Data.g_b)
}
#endif
inline void Client_DH_Inner_Data_Data::set_g_b(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  g_b_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtproto.Client_DH_Inner_Data_Data.g_b)
}
inline void Client_DH_Inner_Data_Data::set_g_b(const char* value, size_t size) {
  
  g_b_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtproto.Client_DH_Inner_Data_Data.g_b)
}
inline ::std::string* Client_DH_Inner_Data_Data::mutable_g_b() {
  
  // @@protoc_insertion_point(field_mutable:mtproto.Client_DH_Inner_Data_Data.g_b)
  return g_b_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Client_DH_Inner_Data_Data::release_g_b() {
  // @@protoc_insertion_point(field_release:mtproto.Client_DH_Inner_Data_Data.g_b)
  
  return g_b_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Client_DH_Inner_Data_Data::set_allocated_g_b(::std::string* g_b) {
  if (g_b != NULL) {
    
  } else {
    
  }
  g_b_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), g_b);
  // @@protoc_insertion_point(field_set_allocated:mtproto.Client_DH_Inner_Data_Data.g_b)
}

// -------------------------------------------------------------------

// Client_DH_Inner_Data

// .mtproto.TLConstructor constructor = 1;
inline void Client_DH_Inner_Data::clear_constructor() {
  constructor_ = 0;
}
inline ::mtproto::TLConstructor Client_DH_Inner_Data::constructor() const {
  // @@protoc_insertion_point(field_get:mtproto.Client_DH_Inner_Data.constructor)
  return static_cast< ::mtproto::TLConstructor >(constructor_);
}
inline void Client_DH_Inner_Data::set_constructor(::mtproto::TLConstructor value) {
  
  constructor_ = value;
  // @@protoc_insertion_point(field_set:mtproto.Client_DH_Inner_Data.constructor)
}

// .mtproto.Client_DH_Inner_Data_Data data2 = 2;
inline bool Client_DH_Inner_Data::has_data2() const {
  return this != internal_default_instance() && data2_ != NULL;
}
inline void Client_DH_Inner_Data::clear_data2() {
  if (GetArenaNoVirtual() == NULL && data2_ != NULL) delete data2_;
  data2_ = NULL;
}
inline const ::mtproto::Client_DH_Inner_Data_Data& Client_DH_Inner_Data::data2() const {
  const ::mtproto::Client_DH_Inner_Data_Data* p = data2_;
  // @@protoc_insertion_point(field_get:mtproto.Client_DH_Inner_Data.data2)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::Client_DH_Inner_Data_Data*>(
      &::mtproto::_Client_DH_Inner_Data_Data_default_instance_);
}
inline ::mtproto::Client_DH_Inner_Data_Data* Client_DH_Inner_Data::mutable_data2() {
  
  if (data2_ == NULL) {
    data2_ = new ::mtproto::Client_DH_Inner_Data_Data;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.Client_DH_Inner_Data.data2)
  return data2_;
}
inline ::mtproto::Client_DH_Inner_Data_Data* Client_DH_Inner_Data::release_data2() {
  // @@protoc_insertion_point(field_release:mtproto.Client_DH_Inner_Data.data2)
  
  ::mtproto::Client_DH_Inner_Data_Data* temp = data2_;
  data2_ = NULL;
  return temp;
}
inline void Client_DH_Inner_Data::set_allocated_data2(::mtproto::Client_DH_Inner_Data_Data* data2) {
  delete data2_;
  data2_ = data2;
  if (data2) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.Client_DH_Inner_Data.data2)
}

// -------------------------------------------------------------------

// TL_client_DH_inner_data

// .mtproto.Client_DH_Inner_Data_Data data2 = 2;
inline bool TL_client_DH_inner_data::has_data2() const {
  return this != internal_default_instance() && data2_ != NULL;
}
inline void TL_client_DH_inner_data::clear_data2() {
  if (GetArenaNoVirtual() == NULL && data2_ != NULL) delete data2_;
  data2_ = NULL;
}
inline const ::mtproto::Client_DH_Inner_Data_Data& TL_client_DH_inner_data::data2() const {
  const ::mtproto::Client_DH_Inner_Data_Data* p = data2_;
  // @@protoc_insertion_point(field_get:mtproto.TL_client_DH_inner_data.data2)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::Client_DH_Inner_Data_Data*>(
      &::mtproto::_Client_DH_Inner_Data_Data_default_instance_);
}
inline ::mtproto::Client_DH_Inner_Data_Data* TL_client_DH_inner_data::mutable_data2() {
  
  if (data2_ == NULL) {
    data2_ = new ::mtproto::Client_DH_Inner_Data_Data;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_client_DH_inner_data.data2)
  return data2_;
}
inline ::mtproto::Client_DH_Inner_Data_Data* TL_client_DH_inner_data::release_data2() {
  // @@protoc_insertion_point(field_release:mtproto.TL_client_DH_inner_data.data2)
  
  ::mtproto::Client_DH_Inner_Data_Data* temp = data2_;
  data2_ = NULL;
  return temp;
}
inline void TL_client_DH_inner_data::set_allocated_data2(::mtproto::Client_DH_Inner_Data_Data* data2) {
  delete data2_;
  data2_ = data2;
  if (data2) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_client_DH_inner_data.data2)
}

// -------------------------------------------------------------------

// Set_client_DH_params_answer_Data

// bytes nonce = 1;
inline void Set_client_DH_params_answer_Data::clear_nonce() {
  nonce_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Set_client_DH_params_answer_Data::nonce() const {
  // @@protoc_insertion_point(field_get:mtproto.Set_client_DH_params_answer_Data.nonce)
  return nonce_.GetNoArena();
}
inline void Set_client_DH_params_answer_Data::set_nonce(const ::std::string& value) {
  
  nonce_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtproto.Set_client_DH_params_answer_Data.nonce)
}
#if LANG_CXX11
inline void Set_client_DH_params_answer_Data::set_nonce(::std::string&& value) {
  
  nonce_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mtproto.Set_client_DH_params_answer_Data.nonce)
}
#endif
inline void Set_client_DH_params_answer_Data::set_nonce(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  nonce_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtproto.Set_client_DH_params_answer_Data.nonce)
}
inline void Set_client_DH_params_answer_Data::set_nonce(const void* value, size_t size) {
  
  nonce_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtproto.Set_client_DH_params_answer_Data.nonce)
}
inline ::std::string* Set_client_DH_params_answer_Data::mutable_nonce() {
  
  // @@protoc_insertion_point(field_mutable:mtproto.Set_client_DH_params_answer_Data.nonce)
  return nonce_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Set_client_DH_params_answer_Data::release_nonce() {
  // @@protoc_insertion_point(field_release:mtproto.Set_client_DH_params_answer_Data.nonce)
  
  return nonce_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Set_client_DH_params_answer_Data::set_allocated_nonce(::std::string* nonce) {
  if (nonce != NULL) {
    
  } else {
    
  }
  nonce_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), nonce);
  // @@protoc_insertion_point(field_set_allocated:mtproto.Set_client_DH_params_answer_Data.nonce)
}

// bytes server_nonce = 2;
inline void Set_client_DH_params_answer_Data::clear_server_nonce() {
  server_nonce_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Set_client_DH_params_answer_Data::server_nonce() const {
  // @@protoc_insertion_point(field_get:mtproto.Set_client_DH_params_answer_Data.server_nonce)
  return server_nonce_.GetNoArena();
}
inline void Set_client_DH_params_answer_Data::set_server_nonce(const ::std::string& value) {
  
  server_nonce_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtproto.Set_client_DH_params_answer_Data.server_nonce)
}
#if LANG_CXX11
inline void Set_client_DH_params_answer_Data::set_server_nonce(::std::string&& value) {
  
  server_nonce_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mtproto.Set_client_DH_params_answer_Data.server_nonce)
}
#endif
inline void Set_client_DH_params_answer_Data::set_server_nonce(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  server_nonce_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtproto.Set_client_DH_params_answer_Data.server_nonce)
}
inline void Set_client_DH_params_answer_Data::set_server_nonce(const void* value, size_t size) {
  
  server_nonce_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtproto.Set_client_DH_params_answer_Data.server_nonce)
}
inline ::std::string* Set_client_DH_params_answer_Data::mutable_server_nonce() {
  
  // @@protoc_insertion_point(field_mutable:mtproto.Set_client_DH_params_answer_Data.server_nonce)
  return server_nonce_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Set_client_DH_params_answer_Data::release_server_nonce() {
  // @@protoc_insertion_point(field_release:mtproto.Set_client_DH_params_answer_Data.server_nonce)
  
  return server_nonce_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Set_client_DH_params_answer_Data::set_allocated_server_nonce(::std::string* server_nonce) {
  if (server_nonce != NULL) {
    
  } else {
    
  }
  server_nonce_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), server_nonce);
  // @@protoc_insertion_point(field_set_allocated:mtproto.Set_client_DH_params_answer_Data.server_nonce)
}

// bytes new_nonce_hash1 = 3;
inline void Set_client_DH_params_answer_Data::clear_new_nonce_hash1() {
  new_nonce_hash1_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Set_client_DH_params_answer_Data::new_nonce_hash1() const {
  // @@protoc_insertion_point(field_get:mtproto.Set_client_DH_params_answer_Data.new_nonce_hash1)
  return new_nonce_hash1_.GetNoArena();
}
inline void Set_client_DH_params_answer_Data::set_new_nonce_hash1(const ::std::string& value) {
  
  new_nonce_hash1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtproto.Set_client_DH_params_answer_Data.new_nonce_hash1)
}
#if LANG_CXX11
inline void Set_client_DH_params_answer_Data::set_new_nonce_hash1(::std::string&& value) {
  
  new_nonce_hash1_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mtproto.Set_client_DH_params_answer_Data.new_nonce_hash1)
}
#endif
inline void Set_client_DH_params_answer_Data::set_new_nonce_hash1(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  new_nonce_hash1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtproto.Set_client_DH_params_answer_Data.new_nonce_hash1)
}
inline void Set_client_DH_params_answer_Data::set_new_nonce_hash1(const void* value, size_t size) {
  
  new_nonce_hash1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtproto.Set_client_DH_params_answer_Data.new_nonce_hash1)
}
inline ::std::string* Set_client_DH_params_answer_Data::mutable_new_nonce_hash1() {
  
  // @@protoc_insertion_point(field_mutable:mtproto.Set_client_DH_params_answer_Data.new_nonce_hash1)
  return new_nonce_hash1_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Set_client_DH_params_answer_Data::release_new_nonce_hash1() {
  // @@protoc_insertion_point(field_release:mtproto.Set_client_DH_params_answer_Data.new_nonce_hash1)
  
  return new_nonce_hash1_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Set_client_DH_params_answer_Data::set_allocated_new_nonce_hash1(::std::string* new_nonce_hash1) {
  if (new_nonce_hash1 != NULL) {
    
  } else {
    
  }
  new_nonce_hash1_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), new_nonce_hash1);
  // @@protoc_insertion_point(field_set_allocated:mtproto.Set_client_DH_params_answer_Data.new_nonce_hash1)
}

// bytes new_nonce_hash2 = 4;
inline void Set_client_DH_params_answer_Data::clear_new_nonce_hash2() {
  new_nonce_hash2_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Set_client_DH_params_answer_Data::new_nonce_hash2() const {
  // @@protoc_insertion_point(field_get:mtproto.Set_client_DH_params_answer_Data.new_nonce_hash2)
  return new_nonce_hash2_.GetNoArena();
}
inline void Set_client_DH_params_answer_Data::set_new_nonce_hash2(const ::std::string& value) {
  
  new_nonce_hash2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtproto.Set_client_DH_params_answer_Data.new_nonce_hash2)
}
#if LANG_CXX11
inline void Set_client_DH_params_answer_Data::set_new_nonce_hash2(::std::string&& value) {
  
  new_nonce_hash2_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mtproto.Set_client_DH_params_answer_Data.new_nonce_hash2)
}
#endif
inline void Set_client_DH_params_answer_Data::set_new_nonce_hash2(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  new_nonce_hash2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtproto.Set_client_DH_params_answer_Data.new_nonce_hash2)
}
inline void Set_client_DH_params_answer_Data::set_new_nonce_hash2(const void* value, size_t size) {
  
  new_nonce_hash2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtproto.Set_client_DH_params_answer_Data.new_nonce_hash2)
}
inline ::std::string* Set_client_DH_params_answer_Data::mutable_new_nonce_hash2() {
  
  // @@protoc_insertion_point(field_mutable:mtproto.Set_client_DH_params_answer_Data.new_nonce_hash2)
  return new_nonce_hash2_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Set_client_DH_params_answer_Data::release_new_nonce_hash2() {
  // @@protoc_insertion_point(field_release:mtproto.Set_client_DH_params_answer_Data.new_nonce_hash2)
  
  return new_nonce_hash2_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Set_client_DH_params_answer_Data::set_allocated_new_nonce_hash2(::std::string* new_nonce_hash2) {
  if (new_nonce_hash2 != NULL) {
    
  } else {
    
  }
  new_nonce_hash2_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), new_nonce_hash2);
  // @@protoc_insertion_point(field_set_allocated:mtproto.Set_client_DH_params_answer_Data.new_nonce_hash2)
}

// bytes new_nonce_hash3 = 5;
inline void Set_client_DH_params_answer_Data::clear_new_nonce_hash3() {
  new_nonce_hash3_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Set_client_DH_params_answer_Data::new_nonce_hash3() const {
  // @@protoc_insertion_point(field_get:mtproto.Set_client_DH_params_answer_Data.new_nonce_hash3)
  return new_nonce_hash3_.GetNoArena();
}
inline void Set_client_DH_params_answer_Data::set_new_nonce_hash3(const ::std::string& value) {
  
  new_nonce_hash3_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtproto.Set_client_DH_params_answer_Data.new_nonce_hash3)
}
#if LANG_CXX11
inline void Set_client_DH_params_answer_Data::set_new_nonce_hash3(::std::string&& value) {
  
  new_nonce_hash3_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mtproto.Set_client_DH_params_answer_Data.new_nonce_hash3)
}
#endif
inline void Set_client_DH_params_answer_Data::set_new_nonce_hash3(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  new_nonce_hash3_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtproto.Set_client_DH_params_answer_Data.new_nonce_hash3)
}
inline void Set_client_DH_params_answer_Data::set_new_nonce_hash3(const void* value, size_t size) {
  
  new_nonce_hash3_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtproto.Set_client_DH_params_answer_Data.new_nonce_hash3)
}
inline ::std::string* Set_client_DH_params_answer_Data::mutable_new_nonce_hash3() {
  
  // @@protoc_insertion_point(field_mutable:mtproto.Set_client_DH_params_answer_Data.new_nonce_hash3)
  return new_nonce_hash3_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Set_client_DH_params_answer_Data::release_new_nonce_hash3() {
  // @@protoc_insertion_point(field_release:mtproto.Set_client_DH_params_answer_Data.new_nonce_hash3)
  
  return new_nonce_hash3_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Set_client_DH_params_answer_Data::set_allocated_new_nonce_hash3(::std::string* new_nonce_hash3) {
  if (new_nonce_hash3 != NULL) {
    
  } else {
    
  }
  new_nonce_hash3_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), new_nonce_hash3);
  // @@protoc_insertion_point(field_set_allocated:mtproto.Set_client_DH_params_answer_Data.new_nonce_hash3)
}

// -------------------------------------------------------------------

// Set_client_DH_params_answer

// .mtproto.TLConstructor constructor = 1;
inline void Set_client_DH_params_answer::clear_constructor() {
  constructor_ = 0;
}
inline ::mtproto::TLConstructor Set_client_DH_params_answer::constructor() const {
  // @@protoc_insertion_point(field_get:mtproto.Set_client_DH_params_answer.constructor)
  return static_cast< ::mtproto::TLConstructor >(constructor_);
}
inline void Set_client_DH_params_answer::set_constructor(::mtproto::TLConstructor value) {
  
  constructor_ = value;
  // @@protoc_insertion_point(field_set:mtproto.Set_client_DH_params_answer.constructor)
}

// .mtproto.Set_client_DH_params_answer_Data data2 = 2;
inline bool Set_client_DH_params_answer::has_data2() const {
  return this != internal_default_instance() && data2_ != NULL;
}
inline void Set_client_DH_params_answer::clear_data2() {
  if (GetArenaNoVirtual() == NULL && data2_ != NULL) delete data2_;
  data2_ = NULL;
}
inline const ::mtproto::Set_client_DH_params_answer_Data& Set_client_DH_params_answer::data2() const {
  const ::mtproto::Set_client_DH_params_answer_Data* p = data2_;
  // @@protoc_insertion_point(field_get:mtproto.Set_client_DH_params_answer.data2)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::Set_client_DH_params_answer_Data*>(
      &::mtproto::_Set_client_DH_params_answer_Data_default_instance_);
}
inline ::mtproto::Set_client_DH_params_answer_Data* Set_client_DH_params_answer::mutable_data2() {
  
  if (data2_ == NULL) {
    data2_ = new ::mtproto::Set_client_DH_params_answer_Data;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.Set_client_DH_params_answer.data2)
  return data2_;
}
inline ::mtproto::Set_client_DH_params_answer_Data* Set_client_DH_params_answer::release_data2() {
  // @@protoc_insertion_point(field_release:mtproto.Set_client_DH_params_answer.data2)
  
  ::mtproto::Set_client_DH_params_answer_Data* temp = data2_;
  data2_ = NULL;
  return temp;
}
inline void Set_client_DH_params_answer::set_allocated_data2(::mtproto::Set_client_DH_params_answer_Data* data2) {
  delete data2_;
  data2_ = data2;
  if (data2) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.Set_client_DH_params_answer.data2)
}

// -------------------------------------------------------------------

// TL_dh_gen_ok

// .mtproto.Set_client_DH_params_answer_Data data2 = 2;
inline bool TL_dh_gen_ok::has_data2() const {
  return this != internal_default_instance() && data2_ != NULL;
}
inline void TL_dh_gen_ok::clear_data2() {
  if (GetArenaNoVirtual() == NULL && data2_ != NULL) delete data2_;
  data2_ = NULL;
}
inline const ::mtproto::Set_client_DH_params_answer_Data& TL_dh_gen_ok::data2() const {
  const ::mtproto::Set_client_DH_params_answer_Data* p = data2_;
  // @@protoc_insertion_point(field_get:mtproto.TL_dh_gen_ok.data2)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::Set_client_DH_params_answer_Data*>(
      &::mtproto::_Set_client_DH_params_answer_Data_default_instance_);
}
inline ::mtproto::Set_client_DH_params_answer_Data* TL_dh_gen_ok::mutable_data2() {
  
  if (data2_ == NULL) {
    data2_ = new ::mtproto::Set_client_DH_params_answer_Data;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_dh_gen_ok.data2)
  return data2_;
}
inline ::mtproto::Set_client_DH_params_answer_Data* TL_dh_gen_ok::release_data2() {
  // @@protoc_insertion_point(field_release:mtproto.TL_dh_gen_ok.data2)
  
  ::mtproto::Set_client_DH_params_answer_Data* temp = data2_;
  data2_ = NULL;
  return temp;
}
inline void TL_dh_gen_ok::set_allocated_data2(::mtproto::Set_client_DH_params_answer_Data* data2) {
  delete data2_;
  data2_ = data2;
  if (data2) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_dh_gen_ok.data2)
}

// -------------------------------------------------------------------

// TL_dh_gen_retry

// .mtproto.Set_client_DH_params_answer_Data data2 = 2;
inline bool TL_dh_gen_retry::has_data2() const {
  return this != internal_default_instance() && data2_ != NULL;
}
inline void TL_dh_gen_retry::clear_data2() {
  if (GetArenaNoVirtual() == NULL && data2_ != NULL) delete data2_;
  data2_ = NULL;
}
inline const ::mtproto::Set_client_DH_params_answer_Data& TL_dh_gen_retry::data2() const {
  const ::mtproto::Set_client_DH_params_answer_Data* p = data2_;
  // @@protoc_insertion_point(field_get:mtproto.TL_dh_gen_retry.data2)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::Set_client_DH_params_answer_Data*>(
      &::mtproto::_Set_client_DH_params_answer_Data_default_instance_);
}
inline ::mtproto::Set_client_DH_params_answer_Data* TL_dh_gen_retry::mutable_data2() {
  
  if (data2_ == NULL) {
    data2_ = new ::mtproto::Set_client_DH_params_answer_Data;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_dh_gen_retry.data2)
  return data2_;
}
inline ::mtproto::Set_client_DH_params_answer_Data* TL_dh_gen_retry::release_data2() {
  // @@protoc_insertion_point(field_release:mtproto.TL_dh_gen_retry.data2)
  
  ::mtproto::Set_client_DH_params_answer_Data* temp = data2_;
  data2_ = NULL;
  return temp;
}
inline void TL_dh_gen_retry::set_allocated_data2(::mtproto::Set_client_DH_params_answer_Data* data2) {
  delete data2_;
  data2_ = data2;
  if (data2) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_dh_gen_retry.data2)
}

// -------------------------------------------------------------------

// TL_dh_gen_fail

// .mtproto.Set_client_DH_params_answer_Data data2 = 2;
inline bool TL_dh_gen_fail::has_data2() const {
  return this != internal_default_instance() && data2_ != NULL;
}
inline void TL_dh_gen_fail::clear_data2() {
  if (GetArenaNoVirtual() == NULL && data2_ != NULL) delete data2_;
  data2_ = NULL;
}
inline const ::mtproto::Set_client_DH_params_answer_Data& TL_dh_gen_fail::data2() const {
  const ::mtproto::Set_client_DH_params_answer_Data* p = data2_;
  // @@protoc_insertion_point(field_get:mtproto.TL_dh_gen_fail.data2)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::Set_client_DH_params_answer_Data*>(
      &::mtproto::_Set_client_DH_params_answer_Data_default_instance_);
}
inline ::mtproto::Set_client_DH_params_answer_Data* TL_dh_gen_fail::mutable_data2() {
  
  if (data2_ == NULL) {
    data2_ = new ::mtproto::Set_client_DH_params_answer_Data;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_dh_gen_fail.data2)
  return data2_;
}
inline ::mtproto::Set_client_DH_params_answer_Data* TL_dh_gen_fail::release_data2() {
  // @@protoc_insertion_point(field_release:mtproto.TL_dh_gen_fail.data2)
  
  ::mtproto::Set_client_DH_params_answer_Data* temp = data2_;
  data2_ = NULL;
  return temp;
}
inline void TL_dh_gen_fail::set_allocated_data2(::mtproto::Set_client_DH_params_answer_Data* data2) {
  delete data2_;
  data2_ = data2;
  if (data2) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_dh_gen_fail.data2)
}

// -------------------------------------------------------------------

// DestroyAuthKeyRes_Data

// -------------------------------------------------------------------

// DestroyAuthKeyRes

// .mtproto.TLConstructor constructor = 1;
inline void DestroyAuthKeyRes::clear_constructor() {
  constructor_ = 0;
}
inline ::mtproto::TLConstructor DestroyAuthKeyRes::constructor() const {
  // @@protoc_insertion_point(field_get:mtproto.DestroyAuthKeyRes.constructor)
  return static_cast< ::mtproto::TLConstructor >(constructor_);
}
inline void DestroyAuthKeyRes::set_constructor(::mtproto::TLConstructor value) {
  
  constructor_ = value;
  // @@protoc_insertion_point(field_set:mtproto.DestroyAuthKeyRes.constructor)
}

// .mtproto.DestroyAuthKeyRes_Data data2 = 2;
inline bool DestroyAuthKeyRes::has_data2() const {
  return this != internal_default_instance() && data2_ != NULL;
}
inline void DestroyAuthKeyRes::clear_data2() {
  if (GetArenaNoVirtual() == NULL && data2_ != NULL) delete data2_;
  data2_ = NULL;
}
inline const ::mtproto::DestroyAuthKeyRes_Data& DestroyAuthKeyRes::data2() const {
  const ::mtproto::DestroyAuthKeyRes_Data* p = data2_;
  // @@protoc_insertion_point(field_get:mtproto.DestroyAuthKeyRes.data2)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::DestroyAuthKeyRes_Data*>(
      &::mtproto::_DestroyAuthKeyRes_Data_default_instance_);
}
inline ::mtproto::DestroyAuthKeyRes_Data* DestroyAuthKeyRes::mutable_data2() {
  
  if (data2_ == NULL) {
    data2_ = new ::mtproto::DestroyAuthKeyRes_Data;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.DestroyAuthKeyRes.data2)
  return data2_;
}
inline ::mtproto::DestroyAuthKeyRes_Data* DestroyAuthKeyRes::release_data2() {
  // @@protoc_insertion_point(field_release:mtproto.DestroyAuthKeyRes.data2)
  
  ::mtproto::DestroyAuthKeyRes_Data* temp = data2_;
  data2_ = NULL;
  return temp;
}
inline void DestroyAuthKeyRes::set_allocated_data2(::mtproto::DestroyAuthKeyRes_Data* data2) {
  delete data2_;
  data2_ = data2;
  if (data2) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.DestroyAuthKeyRes.data2)
}

// -------------------------------------------------------------------

// TL_destroy_auth_key_ok

// .mtproto.DestroyAuthKeyRes_Data data2 = 2;
inline bool TL_destroy_auth_key_ok::has_data2() const {
  return this != internal_default_instance() && data2_ != NULL;
}
inline void TL_destroy_auth_key_ok::clear_data2() {
  if (GetArenaNoVirtual() == NULL && data2_ != NULL) delete data2_;
  data2_ = NULL;
}
inline const ::mtproto::DestroyAuthKeyRes_Data& TL_destroy_auth_key_ok::data2() const {
  const ::mtproto::DestroyAuthKeyRes_Data* p = data2_;
  // @@protoc_insertion_point(field_get:mtproto.TL_destroy_auth_key_ok.data2)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::DestroyAuthKeyRes_Data*>(
      &::mtproto::_DestroyAuthKeyRes_Data_default_instance_);
}
inline ::mtproto::DestroyAuthKeyRes_Data* TL_destroy_auth_key_ok::mutable_data2() {
  
  if (data2_ == NULL) {
    data2_ = new ::mtproto::DestroyAuthKeyRes_Data;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_destroy_auth_key_ok.data2)
  return data2_;
}
inline ::mtproto::DestroyAuthKeyRes_Data* TL_destroy_auth_key_ok::release_data2() {
  // @@protoc_insertion_point(field_release:mtproto.TL_destroy_auth_key_ok.data2)
  
  ::mtproto::DestroyAuthKeyRes_Data* temp = data2_;
  data2_ = NULL;
  return temp;
}
inline void TL_destroy_auth_key_ok::set_allocated_data2(::mtproto::DestroyAuthKeyRes_Data* data2) {
  delete data2_;
  data2_ = data2;
  if (data2) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_destroy_auth_key_ok.data2)
}

// -------------------------------------------------------------------

// TL_destroy_auth_key_none

// .mtproto.DestroyAuthKeyRes_Data data2 = 2;
inline bool TL_destroy_auth_key_none::has_data2() const {
  return this != internal_default_instance() && data2_ != NULL;
}
inline void TL_destroy_auth_key_none::clear_data2() {
  if (GetArenaNoVirtual() == NULL && data2_ != NULL) delete data2_;
  data2_ = NULL;
}
inline const ::mtproto::DestroyAuthKeyRes_Data& TL_destroy_auth_key_none::data2() const {
  const ::mtproto::DestroyAuthKeyRes_Data* p = data2_;
  // @@protoc_insertion_point(field_get:mtproto.TL_destroy_auth_key_none.data2)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::DestroyAuthKeyRes_Data*>(
      &::mtproto::_DestroyAuthKeyRes_Data_default_instance_);
}
inline ::mtproto::DestroyAuthKeyRes_Data* TL_destroy_auth_key_none::mutable_data2() {
  
  if (data2_ == NULL) {
    data2_ = new ::mtproto::DestroyAuthKeyRes_Data;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_destroy_auth_key_none.data2)
  return data2_;
}
inline ::mtproto::DestroyAuthKeyRes_Data* TL_destroy_auth_key_none::release_data2() {
  // @@protoc_insertion_point(field_release:mtproto.TL_destroy_auth_key_none.data2)
  
  ::mtproto::DestroyAuthKeyRes_Data* temp = data2_;
  data2_ = NULL;
  return temp;
}
inline void TL_destroy_auth_key_none::set_allocated_data2(::mtproto::DestroyAuthKeyRes_Data* data2) {
  delete data2_;
  data2_ = data2;
  if (data2) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_destroy_auth_key_none.data2)
}

// -------------------------------------------------------------------

// TL_destroy_auth_key_fail

// .mtproto.DestroyAuthKeyRes_Data data2 = 2;
inline bool TL_destroy_auth_key_fail::has_data2() const {
  return this != internal_default_instance() && data2_ != NULL;
}
inline void TL_destroy_auth_key_fail::clear_data2() {
  if (GetArenaNoVirtual() == NULL && data2_ != NULL) delete data2_;
  data2_ = NULL;
}
inline const ::mtproto::DestroyAuthKeyRes_Data& TL_destroy_auth_key_fail::data2() const {
  const ::mtproto::DestroyAuthKeyRes_Data* p = data2_;
  // @@protoc_insertion_point(field_get:mtproto.TL_destroy_auth_key_fail.data2)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::DestroyAuthKeyRes_Data*>(
      &::mtproto::_DestroyAuthKeyRes_Data_default_instance_);
}
inline ::mtproto::DestroyAuthKeyRes_Data* TL_destroy_auth_key_fail::mutable_data2() {
  
  if (data2_ == NULL) {
    data2_ = new ::mtproto::DestroyAuthKeyRes_Data;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_destroy_auth_key_fail.data2)
  return data2_;
}
inline ::mtproto::DestroyAuthKeyRes_Data* TL_destroy_auth_key_fail::release_data2() {
  // @@protoc_insertion_point(field_release:mtproto.TL_destroy_auth_key_fail.data2)
  
  ::mtproto::DestroyAuthKeyRes_Data* temp = data2_;
  data2_ = NULL;
  return temp;
}
inline void TL_destroy_auth_key_fail::set_allocated_data2(::mtproto::DestroyAuthKeyRes_Data* data2) {
  delete data2_;
  data2_ = data2;
  if (data2) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_destroy_auth_key_fail.data2)
}

// -------------------------------------------------------------------

// ResPQ_Data

// bytes nonce = 1;
inline void ResPQ_Data::clear_nonce() {
  nonce_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ResPQ_Data::nonce() const {
  // @@protoc_insertion_point(field_get:mtproto.ResPQ_Data.nonce)
  return nonce_.GetNoArena();
}
inline void ResPQ_Data::set_nonce(const ::std::string& value) {
  
  nonce_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtproto.ResPQ_Data.nonce)
}
#if LANG_CXX11
inline void ResPQ_Data::set_nonce(::std::string&& value) {
  
  nonce_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mtproto.ResPQ_Data.nonce)
}
#endif
inline void ResPQ_Data::set_nonce(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  nonce_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtproto.ResPQ_Data.nonce)
}
inline void ResPQ_Data::set_nonce(const void* value, size_t size) {
  
  nonce_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtproto.ResPQ_Data.nonce)
}
inline ::std::string* ResPQ_Data::mutable_nonce() {
  
  // @@protoc_insertion_point(field_mutable:mtproto.ResPQ_Data.nonce)
  return nonce_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ResPQ_Data::release_nonce() {
  // @@protoc_insertion_point(field_release:mtproto.ResPQ_Data.nonce)
  
  return nonce_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ResPQ_Data::set_allocated_nonce(::std::string* nonce) {
  if (nonce != NULL) {
    
  } else {
    
  }
  nonce_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), nonce);
  // @@protoc_insertion_point(field_set_allocated:mtproto.ResPQ_Data.nonce)
}

// bytes server_nonce = 2;
inline void ResPQ_Data::clear_server_nonce() {
  server_nonce_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ResPQ_Data::server_nonce() const {
  // @@protoc_insertion_point(field_get:mtproto.ResPQ_Data.server_nonce)
  return server_nonce_.GetNoArena();
}
inline void ResPQ_Data::set_server_nonce(const ::std::string& value) {
  
  server_nonce_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtproto.ResPQ_Data.server_nonce)
}
#if LANG_CXX11
inline void ResPQ_Data::set_server_nonce(::std::string&& value) {
  
  server_nonce_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mtproto.ResPQ_Data.server_nonce)
}
#endif
inline void ResPQ_Data::set_server_nonce(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  server_nonce_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtproto.ResPQ_Data.server_nonce)
}
inline void ResPQ_Data::set_server_nonce(const void* value, size_t size) {
  
  server_nonce_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtproto.ResPQ_Data.server_nonce)
}
inline ::std::string* ResPQ_Data::mutable_server_nonce() {
  
  // @@protoc_insertion_point(field_mutable:mtproto.ResPQ_Data.server_nonce)
  return server_nonce_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ResPQ_Data::release_server_nonce() {
  // @@protoc_insertion_point(field_release:mtproto.ResPQ_Data.server_nonce)
  
  return server_nonce_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ResPQ_Data::set_allocated_server_nonce(::std::string* server_nonce) {
  if (server_nonce != NULL) {
    
  } else {
    
  }
  server_nonce_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), server_nonce);
  // @@protoc_insertion_point(field_set_allocated:mtproto.ResPQ_Data.server_nonce)
}

// string pq = 3;
inline void ResPQ_Data::clear_pq() {
  pq_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ResPQ_Data::pq() const {
  // @@protoc_insertion_point(field_get:mtproto.ResPQ_Data.pq)
  return pq_.GetNoArena();
}
inline void ResPQ_Data::set_pq(const ::std::string& value) {
  
  pq_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtproto.ResPQ_Data.pq)
}
#if LANG_CXX11
inline void ResPQ_Data::set_pq(::std::string&& value) {
  
  pq_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mtproto.ResPQ_Data.pq)
}
#endif
inline void ResPQ_Data::set_pq(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  pq_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtproto.ResPQ_Data.pq)
}
inline void ResPQ_Data::set_pq(const char* value, size_t size) {
  
  pq_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtproto.ResPQ_Data.pq)
}
inline ::std::string* ResPQ_Data::mutable_pq() {
  
  // @@protoc_insertion_point(field_mutable:mtproto.ResPQ_Data.pq)
  return pq_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ResPQ_Data::release_pq() {
  // @@protoc_insertion_point(field_release:mtproto.ResPQ_Data.pq)
  
  return pq_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ResPQ_Data::set_allocated_pq(::std::string* pq) {
  if (pq != NULL) {
    
  } else {
    
  }
  pq_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), pq);
  // @@protoc_insertion_point(field_set_allocated:mtproto.ResPQ_Data.pq)
}

// repeated int64 server_public_key_fingerprints = 4;
inline int ResPQ_Data::server_public_key_fingerprints_size() const {
  return server_public_key_fingerprints_.size();
}
inline void ResPQ_Data::clear_server_public_key_fingerprints() {
  server_public_key_fingerprints_.Clear();
}
inline ::google::protobuf::int64 ResPQ_Data::server_public_key_fingerprints(int index) const {
  // @@protoc_insertion_point(field_get:mtproto.ResPQ_Data.server_public_key_fingerprints)
  return server_public_key_fingerprints_.Get(index);
}
inline void ResPQ_Data::set_server_public_key_fingerprints(int index, ::google::protobuf::int64 value) {
  server_public_key_fingerprints_.Set(index, value);
  // @@protoc_insertion_point(field_set:mtproto.ResPQ_Data.server_public_key_fingerprints)
}
inline void ResPQ_Data::add_server_public_key_fingerprints(::google::protobuf::int64 value) {
  server_public_key_fingerprints_.Add(value);
  // @@protoc_insertion_point(field_add:mtproto.ResPQ_Data.server_public_key_fingerprints)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
ResPQ_Data::server_public_key_fingerprints() const {
  // @@protoc_insertion_point(field_list:mtproto.ResPQ_Data.server_public_key_fingerprints)
  return server_public_key_fingerprints_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
ResPQ_Data::mutable_server_public_key_fingerprints() {
  // @@protoc_insertion_point(field_mutable_list:mtproto.ResPQ_Data.server_public_key_fingerprints)
  return &server_public_key_fingerprints_;
}

// -------------------------------------------------------------------

// ResPQ

// .mtproto.TLConstructor constructor = 1;
inline void ResPQ::clear_constructor() {
  constructor_ = 0;
}
inline ::mtproto::TLConstructor ResPQ::constructor() const {
  // @@protoc_insertion_point(field_get:mtproto.ResPQ.constructor)
  return static_cast< ::mtproto::TLConstructor >(constructor_);
}
inline void ResPQ::set_constructor(::mtproto::TLConstructor value) {
  
  constructor_ = value;
  // @@protoc_insertion_point(field_set:mtproto.ResPQ.constructor)
}

// .mtproto.ResPQ_Data data2 = 2;
inline bool ResPQ::has_data2() const {
  return this != internal_default_instance() && data2_ != NULL;
}
inline void ResPQ::clear_data2() {
  if (GetArenaNoVirtual() == NULL && data2_ != NULL) delete data2_;
  data2_ = NULL;
}
inline const ::mtproto::ResPQ_Data& ResPQ::data2() const {
  const ::mtproto::ResPQ_Data* p = data2_;
  // @@protoc_insertion_point(field_get:mtproto.ResPQ.data2)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::ResPQ_Data*>(
      &::mtproto::_ResPQ_Data_default_instance_);
}
inline ::mtproto::ResPQ_Data* ResPQ::mutable_data2() {
  
  if (data2_ == NULL) {
    data2_ = new ::mtproto::ResPQ_Data;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.ResPQ.data2)
  return data2_;
}
inline ::mtproto::ResPQ_Data* ResPQ::release_data2() {
  // @@protoc_insertion_point(field_release:mtproto.ResPQ.data2)
  
  ::mtproto::ResPQ_Data* temp = data2_;
  data2_ = NULL;
  return temp;
}
inline void ResPQ::set_allocated_data2(::mtproto::ResPQ_Data* data2) {
  delete data2_;
  data2_ = data2;
  if (data2) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.ResPQ.data2)
}

// -------------------------------------------------------------------

// TL_resPQ

// .mtproto.ResPQ_Data data2 = 2;
inline bool TL_resPQ::has_data2() const {
  return this != internal_default_instance() && data2_ != NULL;
}
inline void TL_resPQ::clear_data2() {
  if (GetArenaNoVirtual() == NULL && data2_ != NULL) delete data2_;
  data2_ = NULL;
}
inline const ::mtproto::ResPQ_Data& TL_resPQ::data2() const {
  const ::mtproto::ResPQ_Data* p = data2_;
  // @@protoc_insertion_point(field_get:mtproto.TL_resPQ.data2)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::ResPQ_Data*>(
      &::mtproto::_ResPQ_Data_default_instance_);
}
inline ::mtproto::ResPQ_Data* TL_resPQ::mutable_data2() {
  
  if (data2_ == NULL) {
    data2_ = new ::mtproto::ResPQ_Data;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_resPQ.data2)
  return data2_;
}
inline ::mtproto::ResPQ_Data* TL_resPQ::release_data2() {
  // @@protoc_insertion_point(field_release:mtproto.TL_resPQ.data2)
  
  ::mtproto::ResPQ_Data* temp = data2_;
  data2_ = NULL;
  return temp;
}
inline void TL_resPQ::set_allocated_data2(::mtproto::ResPQ_Data* data2) {
  delete data2_;
  data2_ = data2;
  if (data2) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_resPQ.data2)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


}  // namespace mtproto

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_schema_2etl_2ehandshake_2eproto__INCLUDED
