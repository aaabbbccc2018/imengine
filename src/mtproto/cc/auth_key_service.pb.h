// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: auth_key_service.proto

#ifndef PROTOBUF_auth_5fkey_5fservice_2eproto__INCLUDED
#define PROTOBUF_auth_5fkey_5fservice_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3004000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
namespace mtproto {
class AuthKeyData;
class AuthKeyDataDefaultTypeInternal;
extern AuthKeyDataDefaultTypeInternal _AuthKeyData_default_instance_;
class AuthKeyIdRequest;
class AuthKeyIdRequestDefaultTypeInternal;
extern AuthKeyIdRequestDefaultTypeInternal _AuthKeyIdRequest_default_instance_;
class AuthKeyMetadata;
class AuthKeyMetadataDefaultTypeInternal;
extern AuthKeyMetadataDefaultTypeInternal _AuthKeyMetadata_default_instance_;
class AuthKeyRequest;
class AuthKeyRequestDefaultTypeInternal;
extern AuthKeyRequestDefaultTypeInternal _AuthKeyRequest_default_instance_;
class UserIdResponse;
class UserIdResponseDefaultTypeInternal;
extern UserIdResponseDefaultTypeInternal _UserIdResponse_default_instance_;
}  // namespace mtproto

namespace mtproto {

namespace protobuf_auth_5fkey_5fservice_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static void InitDefaultsImpl();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_auth_5fkey_5fservice_2eproto

// ===================================================================

class AuthKeyMetadata : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtproto.AuthKeyMetadata) */ {
 public:
  AuthKeyMetadata();
  virtual ~AuthKeyMetadata();

  AuthKeyMetadata(const AuthKeyMetadata& from);

  inline AuthKeyMetadata& operator=(const AuthKeyMetadata& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AuthKeyMetadata(AuthKeyMetadata&& from) noexcept
    : AuthKeyMetadata() {
    *this = ::std::move(from);
  }

  inline AuthKeyMetadata& operator=(AuthKeyMetadata&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AuthKeyMetadata& default_instance();

  static inline const AuthKeyMetadata* internal_default_instance() {
    return reinterpret_cast<const AuthKeyMetadata*>(
               &_AuthKeyMetadata_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(AuthKeyMetadata* other);
  friend void swap(AuthKeyMetadata& a, AuthKeyMetadata& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AuthKeyMetadata* New() const PROTOBUF_FINAL { return New(NULL); }

  AuthKeyMetadata* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AuthKeyMetadata* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes nonce = 1;
  void clear_nonce();
  static const int kNonceFieldNumber = 1;
  const ::std::string& nonce() const;
  void set_nonce(const ::std::string& value);
  #if LANG_CXX11
  void set_nonce(::std::string&& value);
  #endif
  void set_nonce(const char* value);
  void set_nonce(const void* value, size_t size);
  ::std::string* mutable_nonce();
  ::std::string* release_nonce();
  void set_allocated_nonce(::std::string* nonce);

  // bytes server_nonce = 2;
  void clear_server_nonce();
  static const int kServerNonceFieldNumber = 2;
  const ::std::string& server_nonce() const;
  void set_server_nonce(const ::std::string& value);
  #if LANG_CXX11
  void set_server_nonce(::std::string&& value);
  #endif
  void set_server_nonce(const char* value);
  void set_server_nonce(const void* value, size_t size);
  ::std::string* mutable_server_nonce();
  ::std::string* release_server_nonce();
  void set_allocated_server_nonce(::std::string* server_nonce);

  // bytes new_nonce = 3;
  void clear_new_nonce();
  static const int kNewNonceFieldNumber = 3;
  const ::std::string& new_nonce() const;
  void set_new_nonce(const ::std::string& value);
  #if LANG_CXX11
  void set_new_nonce(::std::string&& value);
  #endif
  void set_new_nonce(const char* value);
  void set_new_nonce(const void* value, size_t size);
  ::std::string* mutable_new_nonce();
  ::std::string* release_new_nonce();
  void set_allocated_new_nonce(::std::string* new_nonce);

  // bytes a = 4;
  void clear_a();
  static const int kAFieldNumber = 4;
  const ::std::string& a() const;
  void set_a(const ::std::string& value);
  #if LANG_CXX11
  void set_a(::std::string&& value);
  #endif
  void set_a(const char* value);
  void set_a(const void* value, size_t size);
  ::std::string* mutable_a();
  ::std::string* release_a();
  void set_allocated_a(::std::string* a);

  // bytes p = 5;
  void clear_p();
  static const int kPFieldNumber = 5;
  const ::std::string& p() const;
  void set_p(const ::std::string& value);
  #if LANG_CXX11
  void set_p(::std::string&& value);
  #endif
  void set_p(const char* value);
  void set_p(const void* value, size_t size);
  ::std::string* mutable_p();
  ::std::string* release_p();
  void set_allocated_p(::std::string* p);

  // bytes auth_key = 7;
  void clear_auth_key();
  static const int kAuthKeyFieldNumber = 7;
  const ::std::string& auth_key() const;
  void set_auth_key(const ::std::string& value);
  #if LANG_CXX11
  void set_auth_key(::std::string&& value);
  #endif
  void set_auth_key(const char* value);
  void set_auth_key(const void* value, size_t size);
  ::std::string* mutable_auth_key();
  ::std::string* release_auth_key();
  void set_allocated_auth_key(::std::string* auth_key);

  // int64 auth_key_id = 6;
  void clear_auth_key_id();
  static const int kAuthKeyIdFieldNumber = 6;
  ::google::protobuf::int64 auth_key_id() const;
  void set_auth_key_id(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:mtproto.AuthKeyMetadata)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr nonce_;
  ::google::protobuf::internal::ArenaStringPtr server_nonce_;
  ::google::protobuf::internal::ArenaStringPtr new_nonce_;
  ::google::protobuf::internal::ArenaStringPtr a_;
  ::google::protobuf::internal::ArenaStringPtr p_;
  ::google::protobuf::internal::ArenaStringPtr auth_key_;
  ::google::protobuf::int64 auth_key_id_;
  mutable int _cached_size_;
  friend struct protobuf_auth_5fkey_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AuthKeyRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtproto.AuthKeyRequest) */ {
 public:
  AuthKeyRequest();
  virtual ~AuthKeyRequest();

  AuthKeyRequest(const AuthKeyRequest& from);

  inline AuthKeyRequest& operator=(const AuthKeyRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AuthKeyRequest(AuthKeyRequest&& from) noexcept
    : AuthKeyRequest() {
    *this = ::std::move(from);
  }

  inline AuthKeyRequest& operator=(AuthKeyRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AuthKeyRequest& default_instance();

  static inline const AuthKeyRequest* internal_default_instance() {
    return reinterpret_cast<const AuthKeyRequest*>(
               &_AuthKeyRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(AuthKeyRequest* other);
  friend void swap(AuthKeyRequest& a, AuthKeyRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AuthKeyRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  AuthKeyRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AuthKeyRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int64 auth_key_id = 1;
  void clear_auth_key_id();
  static const int kAuthKeyIdFieldNumber = 1;
  ::google::protobuf::int64 auth_key_id() const;
  void set_auth_key_id(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:mtproto.AuthKeyRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int64 auth_key_id_;
  mutable int _cached_size_;
  friend struct protobuf_auth_5fkey_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AuthKeyData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtproto.AuthKeyData) */ {
 public:
  AuthKeyData();
  virtual ~AuthKeyData();

  AuthKeyData(const AuthKeyData& from);

  inline AuthKeyData& operator=(const AuthKeyData& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AuthKeyData(AuthKeyData&& from) noexcept
    : AuthKeyData() {
    *this = ::std::move(from);
  }

  inline AuthKeyData& operator=(AuthKeyData&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AuthKeyData& default_instance();

  static inline const AuthKeyData* internal_default_instance() {
    return reinterpret_cast<const AuthKeyData*>(
               &_AuthKeyData_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(AuthKeyData* other);
  friend void swap(AuthKeyData& a, AuthKeyData& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AuthKeyData* New() const PROTOBUF_FINAL { return New(NULL); }

  AuthKeyData* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AuthKeyData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes auth_key = 3;
  void clear_auth_key();
  static const int kAuthKeyFieldNumber = 3;
  const ::std::string& auth_key() const;
  void set_auth_key(const ::std::string& value);
  #if LANG_CXX11
  void set_auth_key(::std::string&& value);
  #endif
  void set_auth_key(const char* value);
  void set_auth_key(const void* value, size_t size);
  ::std::string* mutable_auth_key();
  ::std::string* release_auth_key();
  void set_allocated_auth_key(::std::string* auth_key);

  // int64 auth_key_id = 2;
  void clear_auth_key_id();
  static const int kAuthKeyIdFieldNumber = 2;
  ::google::protobuf::int64 auth_key_id() const;
  void set_auth_key_id(::google::protobuf::int64 value);

  // int32 result = 1;
  void clear_result();
  static const int kResultFieldNumber = 1;
  ::google::protobuf::int32 result() const;
  void set_result(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:mtproto.AuthKeyData)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr auth_key_;
  ::google::protobuf::int64 auth_key_id_;
  ::google::protobuf::int32 result_;
  mutable int _cached_size_;
  friend struct protobuf_auth_5fkey_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AuthKeyIdRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtproto.AuthKeyIdRequest) */ {
 public:
  AuthKeyIdRequest();
  virtual ~AuthKeyIdRequest();

  AuthKeyIdRequest(const AuthKeyIdRequest& from);

  inline AuthKeyIdRequest& operator=(const AuthKeyIdRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AuthKeyIdRequest(AuthKeyIdRequest&& from) noexcept
    : AuthKeyIdRequest() {
    *this = ::std::move(from);
  }

  inline AuthKeyIdRequest& operator=(AuthKeyIdRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AuthKeyIdRequest& default_instance();

  static inline const AuthKeyIdRequest* internal_default_instance() {
    return reinterpret_cast<const AuthKeyIdRequest*>(
               &_AuthKeyIdRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(AuthKeyIdRequest* other);
  friend void swap(AuthKeyIdRequest& a, AuthKeyIdRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AuthKeyIdRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  AuthKeyIdRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AuthKeyIdRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int64 auth_key_id = 1;
  void clear_auth_key_id();
  static const int kAuthKeyIdFieldNumber = 1;
  ::google::protobuf::int64 auth_key_id() const;
  void set_auth_key_id(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:mtproto.AuthKeyIdRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int64 auth_key_id_;
  mutable int _cached_size_;
  friend struct protobuf_auth_5fkey_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class UserIdResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtproto.UserIdResponse) */ {
 public:
  UserIdResponse();
  virtual ~UserIdResponse();

  UserIdResponse(const UserIdResponse& from);

  inline UserIdResponse& operator=(const UserIdResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UserIdResponse(UserIdResponse&& from) noexcept
    : UserIdResponse() {
    *this = ::std::move(from);
  }

  inline UserIdResponse& operator=(UserIdResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const UserIdResponse& default_instance();

  static inline const UserIdResponse* internal_default_instance() {
    return reinterpret_cast<const UserIdResponse*>(
               &_UserIdResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    4;

  void Swap(UserIdResponse* other);
  friend void swap(UserIdResponse& a, UserIdResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UserIdResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  UserIdResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(UserIdResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int64 auth_key_id = 2;
  void clear_auth_key_id();
  static const int kAuthKeyIdFieldNumber = 2;
  ::google::protobuf::int64 auth_key_id() const;
  void set_auth_key_id(::google::protobuf::int64 value);

  // int32 result = 1;
  void clear_result();
  static const int kResultFieldNumber = 1;
  ::google::protobuf::int32 result() const;
  void set_result(::google::protobuf::int32 value);

  // int32 user_id = 3;
  void clear_user_id();
  static const int kUserIdFieldNumber = 3;
  ::google::protobuf::int32 user_id() const;
  void set_user_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:mtproto.UserIdResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int64 auth_key_id_;
  ::google::protobuf::int32 result_;
  ::google::protobuf::int32 user_id_;
  mutable int _cached_size_;
  friend struct protobuf_auth_5fkey_5fservice_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// AuthKeyMetadata

// bytes nonce = 1;
inline void AuthKeyMetadata::clear_nonce() {
  nonce_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AuthKeyMetadata::nonce() const {
  // @@protoc_insertion_point(field_get:mtproto.AuthKeyMetadata.nonce)
  return nonce_.GetNoArena();
}
inline void AuthKeyMetadata::set_nonce(const ::std::string& value) {
  
  nonce_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtproto.AuthKeyMetadata.nonce)
}
#if LANG_CXX11
inline void AuthKeyMetadata::set_nonce(::std::string&& value) {
  
  nonce_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mtproto.AuthKeyMetadata.nonce)
}
#endif
inline void AuthKeyMetadata::set_nonce(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  nonce_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtproto.AuthKeyMetadata.nonce)
}
inline void AuthKeyMetadata::set_nonce(const void* value, size_t size) {
  
  nonce_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtproto.AuthKeyMetadata.nonce)
}
inline ::std::string* AuthKeyMetadata::mutable_nonce() {
  
  // @@protoc_insertion_point(field_mutable:mtproto.AuthKeyMetadata.nonce)
  return nonce_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AuthKeyMetadata::release_nonce() {
  // @@protoc_insertion_point(field_release:mtproto.AuthKeyMetadata.nonce)
  
  return nonce_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AuthKeyMetadata::set_allocated_nonce(::std::string* nonce) {
  if (nonce != NULL) {
    
  } else {
    
  }
  nonce_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), nonce);
  // @@protoc_insertion_point(field_set_allocated:mtproto.AuthKeyMetadata.nonce)
}

// bytes server_nonce = 2;
inline void AuthKeyMetadata::clear_server_nonce() {
  server_nonce_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AuthKeyMetadata::server_nonce() const {
  // @@protoc_insertion_point(field_get:mtproto.AuthKeyMetadata.server_nonce)
  return server_nonce_.GetNoArena();
}
inline void AuthKeyMetadata::set_server_nonce(const ::std::string& value) {
  
  server_nonce_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtproto.AuthKeyMetadata.server_nonce)
}
#if LANG_CXX11
inline void AuthKeyMetadata::set_server_nonce(::std::string&& value) {
  
  server_nonce_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mtproto.AuthKeyMetadata.server_nonce)
}
#endif
inline void AuthKeyMetadata::set_server_nonce(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  server_nonce_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtproto.AuthKeyMetadata.server_nonce)
}
inline void AuthKeyMetadata::set_server_nonce(const void* value, size_t size) {
  
  server_nonce_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtproto.AuthKeyMetadata.server_nonce)
}
inline ::std::string* AuthKeyMetadata::mutable_server_nonce() {
  
  // @@protoc_insertion_point(field_mutable:mtproto.AuthKeyMetadata.server_nonce)
  return server_nonce_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AuthKeyMetadata::release_server_nonce() {
  // @@protoc_insertion_point(field_release:mtproto.AuthKeyMetadata.server_nonce)
  
  return server_nonce_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AuthKeyMetadata::set_allocated_server_nonce(::std::string* server_nonce) {
  if (server_nonce != NULL) {
    
  } else {
    
  }
  server_nonce_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), server_nonce);
  // @@protoc_insertion_point(field_set_allocated:mtproto.AuthKeyMetadata.server_nonce)
}

// bytes new_nonce = 3;
inline void AuthKeyMetadata::clear_new_nonce() {
  new_nonce_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AuthKeyMetadata::new_nonce() const {
  // @@protoc_insertion_point(field_get:mtproto.AuthKeyMetadata.new_nonce)
  return new_nonce_.GetNoArena();
}
inline void AuthKeyMetadata::set_new_nonce(const ::std::string& value) {
  
  new_nonce_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtproto.AuthKeyMetadata.new_nonce)
}
#if LANG_CXX11
inline void AuthKeyMetadata::set_new_nonce(::std::string&& value) {
  
  new_nonce_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mtproto.AuthKeyMetadata.new_nonce)
}
#endif
inline void AuthKeyMetadata::set_new_nonce(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  new_nonce_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtproto.AuthKeyMetadata.new_nonce)
}
inline void AuthKeyMetadata::set_new_nonce(const void* value, size_t size) {
  
  new_nonce_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtproto.AuthKeyMetadata.new_nonce)
}
inline ::std::string* AuthKeyMetadata::mutable_new_nonce() {
  
  // @@protoc_insertion_point(field_mutable:mtproto.AuthKeyMetadata.new_nonce)
  return new_nonce_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AuthKeyMetadata::release_new_nonce() {
  // @@protoc_insertion_point(field_release:mtproto.AuthKeyMetadata.new_nonce)
  
  return new_nonce_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AuthKeyMetadata::set_allocated_new_nonce(::std::string* new_nonce) {
  if (new_nonce != NULL) {
    
  } else {
    
  }
  new_nonce_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), new_nonce);
  // @@protoc_insertion_point(field_set_allocated:mtproto.AuthKeyMetadata.new_nonce)
}

// bytes a = 4;
inline void AuthKeyMetadata::clear_a() {
  a_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AuthKeyMetadata::a() const {
  // @@protoc_insertion_point(field_get:mtproto.AuthKeyMetadata.a)
  return a_.GetNoArena();
}
inline void AuthKeyMetadata::set_a(const ::std::string& value) {
  
  a_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtproto.AuthKeyMetadata.a)
}
#if LANG_CXX11
inline void AuthKeyMetadata::set_a(::std::string&& value) {
  
  a_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mtproto.AuthKeyMetadata.a)
}
#endif
inline void AuthKeyMetadata::set_a(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  a_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtproto.AuthKeyMetadata.a)
}
inline void AuthKeyMetadata::set_a(const void* value, size_t size) {
  
  a_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtproto.AuthKeyMetadata.a)
}
inline ::std::string* AuthKeyMetadata::mutable_a() {
  
  // @@protoc_insertion_point(field_mutable:mtproto.AuthKeyMetadata.a)
  return a_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AuthKeyMetadata::release_a() {
  // @@protoc_insertion_point(field_release:mtproto.AuthKeyMetadata.a)
  
  return a_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AuthKeyMetadata::set_allocated_a(::std::string* a) {
  if (a != NULL) {
    
  } else {
    
  }
  a_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), a);
  // @@protoc_insertion_point(field_set_allocated:mtproto.AuthKeyMetadata.a)
}

// bytes p = 5;
inline void AuthKeyMetadata::clear_p() {
  p_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AuthKeyMetadata::p() const {
  // @@protoc_insertion_point(field_get:mtproto.AuthKeyMetadata.p)
  return p_.GetNoArena();
}
inline void AuthKeyMetadata::set_p(const ::std::string& value) {
  
  p_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtproto.AuthKeyMetadata.p)
}
#if LANG_CXX11
inline void AuthKeyMetadata::set_p(::std::string&& value) {
  
  p_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mtproto.AuthKeyMetadata.p)
}
#endif
inline void AuthKeyMetadata::set_p(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  p_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtproto.AuthKeyMetadata.p)
}
inline void AuthKeyMetadata::set_p(const void* value, size_t size) {
  
  p_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtproto.AuthKeyMetadata.p)
}
inline ::std::string* AuthKeyMetadata::mutable_p() {
  
  // @@protoc_insertion_point(field_mutable:mtproto.AuthKeyMetadata.p)
  return p_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AuthKeyMetadata::release_p() {
  // @@protoc_insertion_point(field_release:mtproto.AuthKeyMetadata.p)
  
  return p_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AuthKeyMetadata::set_allocated_p(::std::string* p) {
  if (p != NULL) {
    
  } else {
    
  }
  p_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), p);
  // @@protoc_insertion_point(field_set_allocated:mtproto.AuthKeyMetadata.p)
}

// int64 auth_key_id = 6;
inline void AuthKeyMetadata::clear_auth_key_id() {
  auth_key_id_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 AuthKeyMetadata::auth_key_id() const {
  // @@protoc_insertion_point(field_get:mtproto.AuthKeyMetadata.auth_key_id)
  return auth_key_id_;
}
inline void AuthKeyMetadata::set_auth_key_id(::google::protobuf::int64 value) {
  
  auth_key_id_ = value;
  // @@protoc_insertion_point(field_set:mtproto.AuthKeyMetadata.auth_key_id)
}

// bytes auth_key = 7;
inline void AuthKeyMetadata::clear_auth_key() {
  auth_key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AuthKeyMetadata::auth_key() const {
  // @@protoc_insertion_point(field_get:mtproto.AuthKeyMetadata.auth_key)
  return auth_key_.GetNoArena();
}
inline void AuthKeyMetadata::set_auth_key(const ::std::string& value) {
  
  auth_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtproto.AuthKeyMetadata.auth_key)
}
#if LANG_CXX11
inline void AuthKeyMetadata::set_auth_key(::std::string&& value) {
  
  auth_key_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mtproto.AuthKeyMetadata.auth_key)
}
#endif
inline void AuthKeyMetadata::set_auth_key(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  auth_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtproto.AuthKeyMetadata.auth_key)
}
inline void AuthKeyMetadata::set_auth_key(const void* value, size_t size) {
  
  auth_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtproto.AuthKeyMetadata.auth_key)
}
inline ::std::string* AuthKeyMetadata::mutable_auth_key() {
  
  // @@protoc_insertion_point(field_mutable:mtproto.AuthKeyMetadata.auth_key)
  return auth_key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AuthKeyMetadata::release_auth_key() {
  // @@protoc_insertion_point(field_release:mtproto.AuthKeyMetadata.auth_key)
  
  return auth_key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AuthKeyMetadata::set_allocated_auth_key(::std::string* auth_key) {
  if (auth_key != NULL) {
    
  } else {
    
  }
  auth_key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), auth_key);
  // @@protoc_insertion_point(field_set_allocated:mtproto.AuthKeyMetadata.auth_key)
}

// -------------------------------------------------------------------

// AuthKeyRequest

// int64 auth_key_id = 1;
inline void AuthKeyRequest::clear_auth_key_id() {
  auth_key_id_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 AuthKeyRequest::auth_key_id() const {
  // @@protoc_insertion_point(field_get:mtproto.AuthKeyRequest.auth_key_id)
  return auth_key_id_;
}
inline void AuthKeyRequest::set_auth_key_id(::google::protobuf::int64 value) {
  
  auth_key_id_ = value;
  // @@protoc_insertion_point(field_set:mtproto.AuthKeyRequest.auth_key_id)
}

// -------------------------------------------------------------------

// AuthKeyData

// int32 result = 1;
inline void AuthKeyData::clear_result() {
  result_ = 0;
}
inline ::google::protobuf::int32 AuthKeyData::result() const {
  // @@protoc_insertion_point(field_get:mtproto.AuthKeyData.result)
  return result_;
}
inline void AuthKeyData::set_result(::google::protobuf::int32 value) {
  
  result_ = value;
  // @@protoc_insertion_point(field_set:mtproto.AuthKeyData.result)
}

// int64 auth_key_id = 2;
inline void AuthKeyData::clear_auth_key_id() {
  auth_key_id_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 AuthKeyData::auth_key_id() const {
  // @@protoc_insertion_point(field_get:mtproto.AuthKeyData.auth_key_id)
  return auth_key_id_;
}
inline void AuthKeyData::set_auth_key_id(::google::protobuf::int64 value) {
  
  auth_key_id_ = value;
  // @@protoc_insertion_point(field_set:mtproto.AuthKeyData.auth_key_id)
}

// bytes auth_key = 3;
inline void AuthKeyData::clear_auth_key() {
  auth_key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AuthKeyData::auth_key() const {
  // @@protoc_insertion_point(field_get:mtproto.AuthKeyData.auth_key)
  return auth_key_.GetNoArena();
}
inline void AuthKeyData::set_auth_key(const ::std::string& value) {
  
  auth_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtproto.AuthKeyData.auth_key)
}
#if LANG_CXX11
inline void AuthKeyData::set_auth_key(::std::string&& value) {
  
  auth_key_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mtproto.AuthKeyData.auth_key)
}
#endif
inline void AuthKeyData::set_auth_key(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  auth_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtproto.AuthKeyData.auth_key)
}
inline void AuthKeyData::set_auth_key(const void* value, size_t size) {
  
  auth_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtproto.AuthKeyData.auth_key)
}
inline ::std::string* AuthKeyData::mutable_auth_key() {
  
  // @@protoc_insertion_point(field_mutable:mtproto.AuthKeyData.auth_key)
  return auth_key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AuthKeyData::release_auth_key() {
  // @@protoc_insertion_point(field_release:mtproto.AuthKeyData.auth_key)
  
  return auth_key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AuthKeyData::set_allocated_auth_key(::std::string* auth_key) {
  if (auth_key != NULL) {
    
  } else {
    
  }
  auth_key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), auth_key);
  // @@protoc_insertion_point(field_set_allocated:mtproto.AuthKeyData.auth_key)
}

// -------------------------------------------------------------------

// AuthKeyIdRequest

// int64 auth_key_id = 1;
inline void AuthKeyIdRequest::clear_auth_key_id() {
  auth_key_id_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 AuthKeyIdRequest::auth_key_id() const {
  // @@protoc_insertion_point(field_get:mtproto.AuthKeyIdRequest.auth_key_id)
  return auth_key_id_;
}
inline void AuthKeyIdRequest::set_auth_key_id(::google::protobuf::int64 value) {
  
  auth_key_id_ = value;
  // @@protoc_insertion_point(field_set:mtproto.AuthKeyIdRequest.auth_key_id)
}

// -------------------------------------------------------------------

// UserIdResponse

// int32 result = 1;
inline void UserIdResponse::clear_result() {
  result_ = 0;
}
inline ::google::protobuf::int32 UserIdResponse::result() const {
  // @@protoc_insertion_point(field_get:mtproto.UserIdResponse.result)
  return result_;
}
inline void UserIdResponse::set_result(::google::protobuf::int32 value) {
  
  result_ = value;
  // @@protoc_insertion_point(field_set:mtproto.UserIdResponse.result)
}

// int64 auth_key_id = 2;
inline void UserIdResponse::clear_auth_key_id() {
  auth_key_id_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 UserIdResponse::auth_key_id() const {
  // @@protoc_insertion_point(field_get:mtproto.UserIdResponse.auth_key_id)
  return auth_key_id_;
}
inline void UserIdResponse::set_auth_key_id(::google::protobuf::int64 value) {
  
  auth_key_id_ = value;
  // @@protoc_insertion_point(field_set:mtproto.UserIdResponse.auth_key_id)
}

// int32 user_id = 3;
inline void UserIdResponse::clear_user_id() {
  user_id_ = 0;
}
inline ::google::protobuf::int32 UserIdResponse::user_id() const {
  // @@protoc_insertion_point(field_get:mtproto.UserIdResponse.user_id)
  return user_id_;
}
inline void UserIdResponse::set_user_id(::google::protobuf::int32 value) {
  
  user_id_ = value;
  // @@protoc_insertion_point(field_set:mtproto.UserIdResponse.user_id)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


}  // namespace mtproto

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_auth_5fkey_5fservice_2eproto__INCLUDED
