// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: schema.tl.sync_service.proto

#ifndef PROTOBUF_schema_2etl_2esync_5fservice_2eproto__INCLUDED
#define PROTOBUF_schema_2etl_2esync_5fservice_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3004000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "schema.tl.core_types.pb.h"
#include "schema.tl.sync.pb.h"
// @@protoc_insertion_point(includes)
namespace mtproto {
class TL_account_acceptAuthorization;
class TL_account_acceptAuthorizationDefaultTypeInternal;
extern TL_account_acceptAuthorizationDefaultTypeInternal _TL_account_acceptAuthorization_default_instance_;
class TL_account_changePhone;
class TL_account_changePhoneDefaultTypeInternal;
extern TL_account_changePhoneDefaultTypeInternal _TL_account_changePhone_default_instance_;
class TL_account_checkUsername;
class TL_account_checkUsernameDefaultTypeInternal;
extern TL_account_checkUsernameDefaultTypeInternal _TL_account_checkUsername_default_instance_;
class TL_account_confirmPhone;
class TL_account_confirmPhoneDefaultTypeInternal;
extern TL_account_confirmPhoneDefaultTypeInternal _TL_account_confirmPhone_default_instance_;
class TL_account_deleteAccount;
class TL_account_deleteAccountDefaultTypeInternal;
extern TL_account_deleteAccountDefaultTypeInternal _TL_account_deleteAccount_default_instance_;
class TL_account_deleteSecureValue;
class TL_account_deleteSecureValueDefaultTypeInternal;
extern TL_account_deleteSecureValueDefaultTypeInternal _TL_account_deleteSecureValue_default_instance_;
class TL_account_finishTakeoutSession;
class TL_account_finishTakeoutSessionDefaultTypeInternal;
extern TL_account_finishTakeoutSessionDefaultTypeInternal _TL_account_finishTakeoutSession_default_instance_;
class TL_account_getAccountTTL;
class TL_account_getAccountTTLDefaultTypeInternal;
extern TL_account_getAccountTTLDefaultTypeInternal _TL_account_getAccountTTL_default_instance_;
class TL_account_getAllSecureValues;
class TL_account_getAllSecureValuesDefaultTypeInternal;
extern TL_account_getAllSecureValuesDefaultTypeInternal _TL_account_getAllSecureValues_default_instance_;
class TL_account_getAuthorizationForm;
class TL_account_getAuthorizationFormDefaultTypeInternal;
extern TL_account_getAuthorizationFormDefaultTypeInternal _TL_account_getAuthorizationForm_default_instance_;
class TL_account_getAuthorizations;
class TL_account_getAuthorizationsDefaultTypeInternal;
extern TL_account_getAuthorizationsDefaultTypeInternal _TL_account_getAuthorizations_default_instance_;
class TL_account_getNotifySettings;
class TL_account_getNotifySettingsDefaultTypeInternal;
extern TL_account_getNotifySettingsDefaultTypeInternal _TL_account_getNotifySettings_default_instance_;
class TL_account_getPassword;
class TL_account_getPasswordDefaultTypeInternal;
extern TL_account_getPasswordDefaultTypeInternal _TL_account_getPassword_default_instance_;
class TL_account_getPasswordSettings;
class TL_account_getPasswordSettingsDefaultTypeInternal;
extern TL_account_getPasswordSettingsDefaultTypeInternal _TL_account_getPasswordSettings_default_instance_;
class TL_account_getPrivacy;
class TL_account_getPrivacyDefaultTypeInternal;
extern TL_account_getPrivacyDefaultTypeInternal _TL_account_getPrivacy_default_instance_;
class TL_account_getSecureValue;
class TL_account_getSecureValueDefaultTypeInternal;
extern TL_account_getSecureValueDefaultTypeInternal _TL_account_getSecureValue_default_instance_;
class TL_account_getTmpPassword;
class TL_account_getTmpPasswordDefaultTypeInternal;
extern TL_account_getTmpPasswordDefaultTypeInternal _TL_account_getTmpPassword_default_instance_;
class TL_account_getWallPapers;
class TL_account_getWallPapersDefaultTypeInternal;
extern TL_account_getWallPapersDefaultTypeInternal _TL_account_getWallPapers_default_instance_;
class TL_account_getWebAuthorizations;
class TL_account_getWebAuthorizationsDefaultTypeInternal;
extern TL_account_getWebAuthorizationsDefaultTypeInternal _TL_account_getWebAuthorizations_default_instance_;
class TL_account_initTakeoutSession;
class TL_account_initTakeoutSessionDefaultTypeInternal;
extern TL_account_initTakeoutSessionDefaultTypeInternal _TL_account_initTakeoutSession_default_instance_;
class TL_account_registerDevice;
class TL_account_registerDeviceDefaultTypeInternal;
extern TL_account_registerDeviceDefaultTypeInternal _TL_account_registerDevice_default_instance_;
class TL_account_registerDeviceLayer71;
class TL_account_registerDeviceLayer71DefaultTypeInternal;
extern TL_account_registerDeviceLayer71DefaultTypeInternal _TL_account_registerDeviceLayer71_default_instance_;
class TL_account_reportPeer;
class TL_account_reportPeerDefaultTypeInternal;
extern TL_account_reportPeerDefaultTypeInternal _TL_account_reportPeer_default_instance_;
class TL_account_resetAuthorization;
class TL_account_resetAuthorizationDefaultTypeInternal;
extern TL_account_resetAuthorizationDefaultTypeInternal _TL_account_resetAuthorization_default_instance_;
class TL_account_resetNotifySettings;
class TL_account_resetNotifySettingsDefaultTypeInternal;
extern TL_account_resetNotifySettingsDefaultTypeInternal _TL_account_resetNotifySettings_default_instance_;
class TL_account_resetWebAuthorization;
class TL_account_resetWebAuthorizationDefaultTypeInternal;
extern TL_account_resetWebAuthorizationDefaultTypeInternal _TL_account_resetWebAuthorization_default_instance_;
class TL_account_resetWebAuthorizations;
class TL_account_resetWebAuthorizationsDefaultTypeInternal;
extern TL_account_resetWebAuthorizationsDefaultTypeInternal _TL_account_resetWebAuthorizations_default_instance_;
class TL_account_saveSecureValue;
class TL_account_saveSecureValueDefaultTypeInternal;
extern TL_account_saveSecureValueDefaultTypeInternal _TL_account_saveSecureValue_default_instance_;
class TL_account_sendChangePhoneCode;
class TL_account_sendChangePhoneCodeDefaultTypeInternal;
extern TL_account_sendChangePhoneCodeDefaultTypeInternal _TL_account_sendChangePhoneCode_default_instance_;
class TL_account_sendConfirmPhoneCode;
class TL_account_sendConfirmPhoneCodeDefaultTypeInternal;
extern TL_account_sendConfirmPhoneCodeDefaultTypeInternal _TL_account_sendConfirmPhoneCode_default_instance_;
class TL_account_sendVerifyEmailCode;
class TL_account_sendVerifyEmailCodeDefaultTypeInternal;
extern TL_account_sendVerifyEmailCodeDefaultTypeInternal _TL_account_sendVerifyEmailCode_default_instance_;
class TL_account_sendVerifyPhoneCode;
class TL_account_sendVerifyPhoneCodeDefaultTypeInternal;
extern TL_account_sendVerifyPhoneCodeDefaultTypeInternal _TL_account_sendVerifyPhoneCode_default_instance_;
class TL_account_setAccountTTL;
class TL_account_setAccountTTLDefaultTypeInternal;
extern TL_account_setAccountTTLDefaultTypeInternal _TL_account_setAccountTTL_default_instance_;
class TL_account_setPrivacy;
class TL_account_setPrivacyDefaultTypeInternal;
extern TL_account_setPrivacyDefaultTypeInternal _TL_account_setPrivacy_default_instance_;
class TL_account_unregisterDevice;
class TL_account_unregisterDeviceDefaultTypeInternal;
extern TL_account_unregisterDeviceDefaultTypeInternal _TL_account_unregisterDevice_default_instance_;
class TL_account_unregisterDeviceLayer71;
class TL_account_unregisterDeviceLayer71DefaultTypeInternal;
extern TL_account_unregisterDeviceLayer71DefaultTypeInternal _TL_account_unregisterDeviceLayer71_default_instance_;
class TL_account_updateDeviceLocked;
class TL_account_updateDeviceLockedDefaultTypeInternal;
extern TL_account_updateDeviceLockedDefaultTypeInternal _TL_account_updateDeviceLocked_default_instance_;
class TL_account_updateNotifySettings;
class TL_account_updateNotifySettingsDefaultTypeInternal;
extern TL_account_updateNotifySettingsDefaultTypeInternal _TL_account_updateNotifySettings_default_instance_;
class TL_account_updatePasswordSettings;
class TL_account_updatePasswordSettingsDefaultTypeInternal;
extern TL_account_updatePasswordSettingsDefaultTypeInternal _TL_account_updatePasswordSettings_default_instance_;
class TL_account_updateProfile;
class TL_account_updateProfileDefaultTypeInternal;
extern TL_account_updateProfileDefaultTypeInternal _TL_account_updateProfile_default_instance_;
class TL_account_updateStatus;
class TL_account_updateStatusDefaultTypeInternal;
extern TL_account_updateStatusDefaultTypeInternal _TL_account_updateStatus_default_instance_;
class TL_account_updateUsername;
class TL_account_updateUsernameDefaultTypeInternal;
extern TL_account_updateUsernameDefaultTypeInternal _TL_account_updateUsername_default_instance_;
class TL_account_verifyEmail;
class TL_account_verifyEmailDefaultTypeInternal;
extern TL_account_verifyEmailDefaultTypeInternal _TL_account_verifyEmail_default_instance_;
class TL_account_verifyPhone;
class TL_account_verifyPhoneDefaultTypeInternal;
extern TL_account_verifyPhoneDefaultTypeInternal _TL_account_verifyPhone_default_instance_;
class TL_auth_bindTempAuthKey;
class TL_auth_bindTempAuthKeyDefaultTypeInternal;
extern TL_auth_bindTempAuthKeyDefaultTypeInternal _TL_auth_bindTempAuthKey_default_instance_;
class TL_auth_cancelCode;
class TL_auth_cancelCodeDefaultTypeInternal;
extern TL_auth_cancelCodeDefaultTypeInternal _TL_auth_cancelCode_default_instance_;
class TL_auth_checkPassword;
class TL_auth_checkPasswordDefaultTypeInternal;
extern TL_auth_checkPasswordDefaultTypeInternal _TL_auth_checkPassword_default_instance_;
class TL_auth_dropTempAuthKeys;
class TL_auth_dropTempAuthKeysDefaultTypeInternal;
extern TL_auth_dropTempAuthKeysDefaultTypeInternal _TL_auth_dropTempAuthKeys_default_instance_;
class TL_auth_exportAuthorization;
class TL_auth_exportAuthorizationDefaultTypeInternal;
extern TL_auth_exportAuthorizationDefaultTypeInternal _TL_auth_exportAuthorization_default_instance_;
class TL_auth_importAuthorization;
class TL_auth_importAuthorizationDefaultTypeInternal;
extern TL_auth_importAuthorizationDefaultTypeInternal _TL_auth_importAuthorization_default_instance_;
class TL_auth_importBotAuthorization;
class TL_auth_importBotAuthorizationDefaultTypeInternal;
extern TL_auth_importBotAuthorizationDefaultTypeInternal _TL_auth_importBotAuthorization_default_instance_;
class TL_auth_logOut;
class TL_auth_logOutDefaultTypeInternal;
extern TL_auth_logOutDefaultTypeInternal _TL_auth_logOut_default_instance_;
class TL_auth_recoverPassword;
class TL_auth_recoverPasswordDefaultTypeInternal;
extern TL_auth_recoverPasswordDefaultTypeInternal _TL_auth_recoverPassword_default_instance_;
class TL_auth_requestPasswordRecovery;
class TL_auth_requestPasswordRecoveryDefaultTypeInternal;
extern TL_auth_requestPasswordRecoveryDefaultTypeInternal _TL_auth_requestPasswordRecovery_default_instance_;
class TL_auth_resendCode;
class TL_auth_resendCodeDefaultTypeInternal;
extern TL_auth_resendCodeDefaultTypeInternal _TL_auth_resendCode_default_instance_;
class TL_auth_resetAuthorizations;
class TL_auth_resetAuthorizationsDefaultTypeInternal;
extern TL_auth_resetAuthorizationsDefaultTypeInternal _TL_auth_resetAuthorizations_default_instance_;
class TL_auth_sendCode;
class TL_auth_sendCodeDefaultTypeInternal;
extern TL_auth_sendCodeDefaultTypeInternal _TL_auth_sendCode_default_instance_;
class TL_auth_sendCodeLayer51;
class TL_auth_sendCodeLayer51DefaultTypeInternal;
extern TL_auth_sendCodeLayer51DefaultTypeInternal _TL_auth_sendCodeLayer51_default_instance_;
class TL_auth_signIn;
class TL_auth_signInDefaultTypeInternal;
extern TL_auth_signInDefaultTypeInternal _TL_auth_signIn_default_instance_;
class TL_auth_signUp;
class TL_auth_signUpDefaultTypeInternal;
extern TL_auth_signUpDefaultTypeInternal _TL_auth_signUp_default_instance_;
class TL_bots_answerWebhookJSONQuery;
class TL_bots_answerWebhookJSONQueryDefaultTypeInternal;
extern TL_bots_answerWebhookJSONQueryDefaultTypeInternal _TL_bots_answerWebhookJSONQuery_default_instance_;
class TL_bots_sendCustomRequest;
class TL_bots_sendCustomRequestDefaultTypeInternal;
extern TL_bots_sendCustomRequestDefaultTypeInternal _TL_bots_sendCustomRequest_default_instance_;
class TL_channels_checkUsername;
class TL_channels_checkUsernameDefaultTypeInternal;
extern TL_channels_checkUsernameDefaultTypeInternal _TL_channels_checkUsername_default_instance_;
class TL_channels_createChannel;
class TL_channels_createChannelDefaultTypeInternal;
extern TL_channels_createChannelDefaultTypeInternal _TL_channels_createChannel_default_instance_;
class TL_channels_deleteChannel;
class TL_channels_deleteChannelDefaultTypeInternal;
extern TL_channels_deleteChannelDefaultTypeInternal _TL_channels_deleteChannel_default_instance_;
class TL_channels_deleteHistory;
class TL_channels_deleteHistoryDefaultTypeInternal;
extern TL_channels_deleteHistoryDefaultTypeInternal _TL_channels_deleteHistory_default_instance_;
class TL_channels_deleteMessages;
class TL_channels_deleteMessagesDefaultTypeInternal;
extern TL_channels_deleteMessagesDefaultTypeInternal _TL_channels_deleteMessages_default_instance_;
class TL_channels_deleteUserHistory;
class TL_channels_deleteUserHistoryDefaultTypeInternal;
extern TL_channels_deleteUserHistoryDefaultTypeInternal _TL_channels_deleteUserHistory_default_instance_;
class TL_channels_editAbout;
class TL_channels_editAboutDefaultTypeInternal;
extern TL_channels_editAboutDefaultTypeInternal _TL_channels_editAbout_default_instance_;
class TL_channels_editAdmin;
class TL_channels_editAdminDefaultTypeInternal;
extern TL_channels_editAdminDefaultTypeInternal _TL_channels_editAdmin_default_instance_;
class TL_channels_editBanned;
class TL_channels_editBannedDefaultTypeInternal;
extern TL_channels_editBannedDefaultTypeInternal _TL_channels_editBanned_default_instance_;
class TL_channels_editPhoto;
class TL_channels_editPhotoDefaultTypeInternal;
extern TL_channels_editPhotoDefaultTypeInternal _TL_channels_editPhoto_default_instance_;
class TL_channels_editTitle;
class TL_channels_editTitleDefaultTypeInternal;
extern TL_channels_editTitleDefaultTypeInternal _TL_channels_editTitle_default_instance_;
class TL_channels_exportInvite;
class TL_channels_exportInviteDefaultTypeInternal;
extern TL_channels_exportInviteDefaultTypeInternal _TL_channels_exportInvite_default_instance_;
class TL_channels_exportMessageLink;
class TL_channels_exportMessageLinkDefaultTypeInternal;
extern TL_channels_exportMessageLinkDefaultTypeInternal _TL_channels_exportMessageLink_default_instance_;
class TL_channels_getAdminLog;
class TL_channels_getAdminLogDefaultTypeInternal;
extern TL_channels_getAdminLogDefaultTypeInternal _TL_channels_getAdminLog_default_instance_;
class TL_channels_getAdminedPublicChannels;
class TL_channels_getAdminedPublicChannelsDefaultTypeInternal;
extern TL_channels_getAdminedPublicChannelsDefaultTypeInternal _TL_channels_getAdminedPublicChannels_default_instance_;
class TL_channels_getChannels;
class TL_channels_getChannelsDefaultTypeInternal;
extern TL_channels_getChannelsDefaultTypeInternal _TL_channels_getChannels_default_instance_;
class TL_channels_getFullChannel;
class TL_channels_getFullChannelDefaultTypeInternal;
extern TL_channels_getFullChannelDefaultTypeInternal _TL_channels_getFullChannel_default_instance_;
class TL_channels_getLeftChannels;
class TL_channels_getLeftChannelsDefaultTypeInternal;
extern TL_channels_getLeftChannelsDefaultTypeInternal _TL_channels_getLeftChannels_default_instance_;
class TL_channels_getMessages;
class TL_channels_getMessagesDefaultTypeInternal;
extern TL_channels_getMessagesDefaultTypeInternal _TL_channels_getMessages_default_instance_;
class TL_channels_getParticipant;
class TL_channels_getParticipantDefaultTypeInternal;
extern TL_channels_getParticipantDefaultTypeInternal _TL_channels_getParticipant_default_instance_;
class TL_channels_getParticipants;
class TL_channels_getParticipantsDefaultTypeInternal;
extern TL_channels_getParticipantsDefaultTypeInternal _TL_channels_getParticipants_default_instance_;
class TL_channels_inviteToChannel;
class TL_channels_inviteToChannelDefaultTypeInternal;
extern TL_channels_inviteToChannelDefaultTypeInternal _TL_channels_inviteToChannel_default_instance_;
class TL_channels_joinChannel;
class TL_channels_joinChannelDefaultTypeInternal;
extern TL_channels_joinChannelDefaultTypeInternal _TL_channels_joinChannel_default_instance_;
class TL_channels_leaveChannel;
class TL_channels_leaveChannelDefaultTypeInternal;
extern TL_channels_leaveChannelDefaultTypeInternal _TL_channels_leaveChannel_default_instance_;
class TL_channels_readHistory;
class TL_channels_readHistoryDefaultTypeInternal;
extern TL_channels_readHistoryDefaultTypeInternal _TL_channels_readHistory_default_instance_;
class TL_channels_readMessageContents;
class TL_channels_readMessageContentsDefaultTypeInternal;
extern TL_channels_readMessageContentsDefaultTypeInternal _TL_channels_readMessageContents_default_instance_;
class TL_channels_reportSpam;
class TL_channels_reportSpamDefaultTypeInternal;
extern TL_channels_reportSpamDefaultTypeInternal _TL_channels_reportSpam_default_instance_;
class TL_channels_setStickers;
class TL_channels_setStickersDefaultTypeInternal;
extern TL_channels_setStickersDefaultTypeInternal _TL_channels_setStickers_default_instance_;
class TL_channels_toggleInvites;
class TL_channels_toggleInvitesDefaultTypeInternal;
extern TL_channels_toggleInvitesDefaultTypeInternal _TL_channels_toggleInvites_default_instance_;
class TL_channels_togglePreHistoryHidden;
class TL_channels_togglePreHistoryHiddenDefaultTypeInternal;
extern TL_channels_togglePreHistoryHiddenDefaultTypeInternal _TL_channels_togglePreHistoryHidden_default_instance_;
class TL_channels_toggleSignatures;
class TL_channels_toggleSignaturesDefaultTypeInternal;
extern TL_channels_toggleSignaturesDefaultTypeInternal _TL_channels_toggleSignatures_default_instance_;
class TL_channels_updatePinnedMessage;
class TL_channels_updatePinnedMessageDefaultTypeInternal;
extern TL_channels_updatePinnedMessageDefaultTypeInternal _TL_channels_updatePinnedMessage_default_instance_;
class TL_channels_updateUsername;
class TL_channels_updateUsernameDefaultTypeInternal;
extern TL_channels_updateUsernameDefaultTypeInternal _TL_channels_updateUsername_default_instance_;
class TL_contacts_block;
class TL_contacts_blockDefaultTypeInternal;
extern TL_contacts_blockDefaultTypeInternal _TL_contacts_block_default_instance_;
class TL_contacts_deleteContact;
class TL_contacts_deleteContactDefaultTypeInternal;
extern TL_contacts_deleteContactDefaultTypeInternal _TL_contacts_deleteContact_default_instance_;
class TL_contacts_deleteContacts;
class TL_contacts_deleteContactsDefaultTypeInternal;
extern TL_contacts_deleteContactsDefaultTypeInternal _TL_contacts_deleteContacts_default_instance_;
class TL_contacts_exportCard;
class TL_contacts_exportCardDefaultTypeInternal;
extern TL_contacts_exportCardDefaultTypeInternal _TL_contacts_exportCard_default_instance_;
class TL_contacts_getBlocked;
class TL_contacts_getBlockedDefaultTypeInternal;
extern TL_contacts_getBlockedDefaultTypeInternal _TL_contacts_getBlocked_default_instance_;
class TL_contacts_getContacts;
class TL_contacts_getContactsDefaultTypeInternal;
extern TL_contacts_getContactsDefaultTypeInternal _TL_contacts_getContacts_default_instance_;
class TL_contacts_getSaved;
class TL_contacts_getSavedDefaultTypeInternal;
extern TL_contacts_getSavedDefaultTypeInternal _TL_contacts_getSaved_default_instance_;
class TL_contacts_getStatuses;
class TL_contacts_getStatusesDefaultTypeInternal;
extern TL_contacts_getStatusesDefaultTypeInternal _TL_contacts_getStatuses_default_instance_;
class TL_contacts_getTopPeers;
class TL_contacts_getTopPeersDefaultTypeInternal;
extern TL_contacts_getTopPeersDefaultTypeInternal _TL_contacts_getTopPeers_default_instance_;
class TL_contacts_importCard;
class TL_contacts_importCardDefaultTypeInternal;
extern TL_contacts_importCardDefaultTypeInternal _TL_contacts_importCard_default_instance_;
class TL_contacts_importContacts;
class TL_contacts_importContactsDefaultTypeInternal;
extern TL_contacts_importContactsDefaultTypeInternal _TL_contacts_importContacts_default_instance_;
class TL_contacts_resetSaved;
class TL_contacts_resetSavedDefaultTypeInternal;
extern TL_contacts_resetSavedDefaultTypeInternal _TL_contacts_resetSaved_default_instance_;
class TL_contacts_resetTopPeerRating;
class TL_contacts_resetTopPeerRatingDefaultTypeInternal;
extern TL_contacts_resetTopPeerRatingDefaultTypeInternal _TL_contacts_resetTopPeerRating_default_instance_;
class TL_contacts_resolveUsername;
class TL_contacts_resolveUsernameDefaultTypeInternal;
extern TL_contacts_resolveUsernameDefaultTypeInternal _TL_contacts_resolveUsername_default_instance_;
class TL_contacts_search;
class TL_contacts_searchDefaultTypeInternal;
extern TL_contacts_searchDefaultTypeInternal _TL_contacts_search_default_instance_;
class TL_contacts_toggleTopPeers;
class TL_contacts_toggleTopPeersDefaultTypeInternal;
extern TL_contacts_toggleTopPeersDefaultTypeInternal _TL_contacts_toggleTopPeers_default_instance_;
class TL_contacts_unblock;
class TL_contacts_unblockDefaultTypeInternal;
extern TL_contacts_unblockDefaultTypeInternal _TL_contacts_unblock_default_instance_;
class TL_help_acceptTermsOfService;
class TL_help_acceptTermsOfServiceDefaultTypeInternal;
extern TL_help_acceptTermsOfServiceDefaultTypeInternal _TL_help_acceptTermsOfService_default_instance_;
class TL_help_getAppChangelog;
class TL_help_getAppChangelogDefaultTypeInternal;
extern TL_help_getAppChangelogDefaultTypeInternal _TL_help_getAppChangelog_default_instance_;
class TL_help_getAppUpdate;
class TL_help_getAppUpdateDefaultTypeInternal;
extern TL_help_getAppUpdateDefaultTypeInternal _TL_help_getAppUpdate_default_instance_;
class TL_help_getAppUpdateLayer46;
class TL_help_getAppUpdateLayer46DefaultTypeInternal;
extern TL_help_getAppUpdateLayer46DefaultTypeInternal _TL_help_getAppUpdateLayer46_default_instance_;
class TL_help_getCdnConfig;
class TL_help_getCdnConfigDefaultTypeInternal;
extern TL_help_getCdnConfigDefaultTypeInternal _TL_help_getCdnConfig_default_instance_;
class TL_help_getConfig;
class TL_help_getConfigDefaultTypeInternal;
extern TL_help_getConfigDefaultTypeInternal _TL_help_getConfig_default_instance_;
class TL_help_getDeepLinkInfo;
class TL_help_getDeepLinkInfoDefaultTypeInternal;
extern TL_help_getDeepLinkInfoDefaultTypeInternal _TL_help_getDeepLinkInfo_default_instance_;
class TL_help_getInviteText;
class TL_help_getInviteTextDefaultTypeInternal;
extern TL_help_getInviteTextDefaultTypeInternal _TL_help_getInviteText_default_instance_;
class TL_help_getInviteTextLayer46;
class TL_help_getInviteTextLayer46DefaultTypeInternal;
extern TL_help_getInviteTextLayer46DefaultTypeInternal _TL_help_getInviteTextLayer46_default_instance_;
class TL_help_getNearestDc;
class TL_help_getNearestDcDefaultTypeInternal;
extern TL_help_getNearestDcDefaultTypeInternal _TL_help_getNearestDc_default_instance_;
class TL_help_getPassportConfig;
class TL_help_getPassportConfigDefaultTypeInternal;
extern TL_help_getPassportConfigDefaultTypeInternal _TL_help_getPassportConfig_default_instance_;
class TL_help_getProxyData;
class TL_help_getProxyDataDefaultTypeInternal;
extern TL_help_getProxyDataDefaultTypeInternal _TL_help_getProxyData_default_instance_;
class TL_help_getRecentMeUrls;
class TL_help_getRecentMeUrlsDefaultTypeInternal;
extern TL_help_getRecentMeUrlsDefaultTypeInternal _TL_help_getRecentMeUrls_default_instance_;
class TL_help_getScheme;
class TL_help_getSchemeDefaultTypeInternal;
extern TL_help_getSchemeDefaultTypeInternal _TL_help_getScheme_default_instance_;
class TL_help_getSupport;
class TL_help_getSupportDefaultTypeInternal;
extern TL_help_getSupportDefaultTypeInternal _TL_help_getSupport_default_instance_;
class TL_help_getTermsOfServiceUpdate;
class TL_help_getTermsOfServiceUpdateDefaultTypeInternal;
extern TL_help_getTermsOfServiceUpdateDefaultTypeInternal _TL_help_getTermsOfServiceUpdate_default_instance_;
class TL_help_saveAppLog;
class TL_help_saveAppLogDefaultTypeInternal;
extern TL_help_saveAppLogDefaultTypeInternal _TL_help_saveAppLog_default_instance_;
class TL_help_setBotUpdatesStatus;
class TL_help_setBotUpdatesStatusDefaultTypeInternal;
extern TL_help_setBotUpdatesStatusDefaultTypeInternal _TL_help_setBotUpdatesStatus_default_instance_;
class TL_initConnection;
class TL_initConnectionDefaultTypeInternal;
extern TL_initConnectionDefaultTypeInternal _TL_initConnection_default_instance_;
class TL_initConnectionLayer68;
class TL_initConnectionLayer68DefaultTypeInternal;
extern TL_initConnectionLayer68DefaultTypeInternal _TL_initConnectionLayer68_default_instance_;
class TL_invokeAfterMsg;
class TL_invokeAfterMsgDefaultTypeInternal;
extern TL_invokeAfterMsgDefaultTypeInternal _TL_invokeAfterMsg_default_instance_;
class TL_invokeAfterMsgs;
class TL_invokeAfterMsgsDefaultTypeInternal;
extern TL_invokeAfterMsgsDefaultTypeInternal _TL_invokeAfterMsgs_default_instance_;
class TL_invokeWithLayer;
class TL_invokeWithLayerDefaultTypeInternal;
extern TL_invokeWithLayerDefaultTypeInternal _TL_invokeWithLayer_default_instance_;
class TL_invokeWithMessagesRange;
class TL_invokeWithMessagesRangeDefaultTypeInternal;
extern TL_invokeWithMessagesRangeDefaultTypeInternal _TL_invokeWithMessagesRange_default_instance_;
class TL_invokeWithTakeout;
class TL_invokeWithTakeoutDefaultTypeInternal;
extern TL_invokeWithTakeoutDefaultTypeInternal _TL_invokeWithTakeout_default_instance_;
class TL_invokeWithoutUpdates;
class TL_invokeWithoutUpdatesDefaultTypeInternal;
extern TL_invokeWithoutUpdatesDefaultTypeInternal _TL_invokeWithoutUpdates_default_instance_;
class TL_langpack_getDifference;
class TL_langpack_getDifferenceDefaultTypeInternal;
extern TL_langpack_getDifferenceDefaultTypeInternal _TL_langpack_getDifference_default_instance_;
class TL_langpack_getLangPack;
class TL_langpack_getLangPackDefaultTypeInternal;
extern TL_langpack_getLangPackDefaultTypeInternal _TL_langpack_getLangPack_default_instance_;
class TL_langpack_getLangPackLayer71;
class TL_langpack_getLangPackLayer71DefaultTypeInternal;
extern TL_langpack_getLangPackLayer71DefaultTypeInternal _TL_langpack_getLangPackLayer71_default_instance_;
class TL_langpack_getLanguages;
class TL_langpack_getLanguagesDefaultTypeInternal;
extern TL_langpack_getLanguagesDefaultTypeInternal _TL_langpack_getLanguages_default_instance_;
class TL_langpack_getLanguagesLayer70;
class TL_langpack_getLanguagesLayer70DefaultTypeInternal;
extern TL_langpack_getLanguagesLayer70DefaultTypeInternal _TL_langpack_getLanguagesLayer70_default_instance_;
class TL_langpack_getStrings;
class TL_langpack_getStringsDefaultTypeInternal;
extern TL_langpack_getStringsDefaultTypeInternal _TL_langpack_getStrings_default_instance_;
class TL_messages_acceptEncryption;
class TL_messages_acceptEncryptionDefaultTypeInternal;
extern TL_messages_acceptEncryptionDefaultTypeInternal _TL_messages_acceptEncryption_default_instance_;
class TL_messages_addChatUser;
class TL_messages_addChatUserDefaultTypeInternal;
extern TL_messages_addChatUserDefaultTypeInternal _TL_messages_addChatUser_default_instance_;
class TL_messages_checkChatInvite;
class TL_messages_checkChatInviteDefaultTypeInternal;
extern TL_messages_checkChatInviteDefaultTypeInternal _TL_messages_checkChatInvite_default_instance_;
class TL_messages_clearAllDrafts;
class TL_messages_clearAllDraftsDefaultTypeInternal;
extern TL_messages_clearAllDraftsDefaultTypeInternal _TL_messages_clearAllDrafts_default_instance_;
class TL_messages_clearRecentStickers;
class TL_messages_clearRecentStickersDefaultTypeInternal;
extern TL_messages_clearRecentStickersDefaultTypeInternal _TL_messages_clearRecentStickers_default_instance_;
class TL_messages_createChat;
class TL_messages_createChatDefaultTypeInternal;
extern TL_messages_createChatDefaultTypeInternal _TL_messages_createChat_default_instance_;
class TL_messages_deleteChatUser;
class TL_messages_deleteChatUserDefaultTypeInternal;
extern TL_messages_deleteChatUserDefaultTypeInternal _TL_messages_deleteChatUser_default_instance_;
class TL_messages_deleteHistory;
class TL_messages_deleteHistoryDefaultTypeInternal;
extern TL_messages_deleteHistoryDefaultTypeInternal _TL_messages_deleteHistory_default_instance_;
class TL_messages_deleteMessages;
class TL_messages_deleteMessagesDefaultTypeInternal;
extern TL_messages_deleteMessagesDefaultTypeInternal _TL_messages_deleteMessages_default_instance_;
class TL_messages_discardEncryption;
class TL_messages_discardEncryptionDefaultTypeInternal;
extern TL_messages_discardEncryptionDefaultTypeInternal _TL_messages_discardEncryption_default_instance_;
class TL_messages_editChatAdmin;
class TL_messages_editChatAdminDefaultTypeInternal;
extern TL_messages_editChatAdminDefaultTypeInternal _TL_messages_editChatAdmin_default_instance_;
class TL_messages_editChatPhoto;
class TL_messages_editChatPhotoDefaultTypeInternal;
extern TL_messages_editChatPhotoDefaultTypeInternal _TL_messages_editChatPhoto_default_instance_;
class TL_messages_editChatTitle;
class TL_messages_editChatTitleDefaultTypeInternal;
extern TL_messages_editChatTitleDefaultTypeInternal _TL_messages_editChatTitle_default_instance_;
class TL_messages_editInlineBotMessage;
class TL_messages_editInlineBotMessageDefaultTypeInternal;
extern TL_messages_editInlineBotMessageDefaultTypeInternal _TL_messages_editInlineBotMessage_default_instance_;
class TL_messages_editMessage;
class TL_messages_editMessageDefaultTypeInternal;
extern TL_messages_editMessageDefaultTypeInternal _TL_messages_editMessage_default_instance_;
class TL_messages_exportChatInvite;
class TL_messages_exportChatInviteDefaultTypeInternal;
extern TL_messages_exportChatInviteDefaultTypeInternal _TL_messages_exportChatInvite_default_instance_;
class TL_messages_faveSticker;
class TL_messages_faveStickerDefaultTypeInternal;
extern TL_messages_faveStickerDefaultTypeInternal _TL_messages_faveSticker_default_instance_;
class TL_messages_forwardMessages;
class TL_messages_forwardMessagesDefaultTypeInternal;
extern TL_messages_forwardMessagesDefaultTypeInternal _TL_messages_forwardMessages_default_instance_;
class TL_messages_getAllChats;
class TL_messages_getAllChatsDefaultTypeInternal;
extern TL_messages_getAllChatsDefaultTypeInternal _TL_messages_getAllChats_default_instance_;
class TL_messages_getAllDrafts;
class TL_messages_getAllDraftsDefaultTypeInternal;
extern TL_messages_getAllDraftsDefaultTypeInternal _TL_messages_getAllDrafts_default_instance_;
class TL_messages_getAllStickers;
class TL_messages_getAllStickersDefaultTypeInternal;
extern TL_messages_getAllStickersDefaultTypeInternal _TL_messages_getAllStickers_default_instance_;
class TL_messages_getArchivedStickers;
class TL_messages_getArchivedStickersDefaultTypeInternal;
extern TL_messages_getArchivedStickersDefaultTypeInternal _TL_messages_getArchivedStickers_default_instance_;
class TL_messages_getAttachedStickers;
class TL_messages_getAttachedStickersDefaultTypeInternal;
extern TL_messages_getAttachedStickersDefaultTypeInternal _TL_messages_getAttachedStickers_default_instance_;
class TL_messages_getBotCallbackAnswer;
class TL_messages_getBotCallbackAnswerDefaultTypeInternal;
extern TL_messages_getBotCallbackAnswerDefaultTypeInternal _TL_messages_getBotCallbackAnswer_default_instance_;
class TL_messages_getChats;
class TL_messages_getChatsDefaultTypeInternal;
extern TL_messages_getChatsDefaultTypeInternal _TL_messages_getChats_default_instance_;
class TL_messages_getCommonChats;
class TL_messages_getCommonChatsDefaultTypeInternal;
extern TL_messages_getCommonChatsDefaultTypeInternal _TL_messages_getCommonChats_default_instance_;
class TL_messages_getDhConfig;
class TL_messages_getDhConfigDefaultTypeInternal;
extern TL_messages_getDhConfigDefaultTypeInternal _TL_messages_getDhConfig_default_instance_;
class TL_messages_getDialogUnreadMarks;
class TL_messages_getDialogUnreadMarksDefaultTypeInternal;
extern TL_messages_getDialogUnreadMarksDefaultTypeInternal _TL_messages_getDialogUnreadMarks_default_instance_;
class TL_messages_getDialogs;
class TL_messages_getDialogsDefaultTypeInternal;
extern TL_messages_getDialogsDefaultTypeInternal _TL_messages_getDialogs_default_instance_;
class TL_messages_getDocumentByHash;
class TL_messages_getDocumentByHashDefaultTypeInternal;
extern TL_messages_getDocumentByHashDefaultTypeInternal _TL_messages_getDocumentByHash_default_instance_;
class TL_messages_getFavedStickers;
class TL_messages_getFavedStickersDefaultTypeInternal;
extern TL_messages_getFavedStickersDefaultTypeInternal _TL_messages_getFavedStickers_default_instance_;
class TL_messages_getFeaturedStickers;
class TL_messages_getFeaturedStickersDefaultTypeInternal;
extern TL_messages_getFeaturedStickersDefaultTypeInternal _TL_messages_getFeaturedStickers_default_instance_;
class TL_messages_getFullChat;
class TL_messages_getFullChatDefaultTypeInternal;
extern TL_messages_getFullChatDefaultTypeInternal _TL_messages_getFullChat_default_instance_;
class TL_messages_getGameHighScores;
class TL_messages_getGameHighScoresDefaultTypeInternal;
extern TL_messages_getGameHighScoresDefaultTypeInternal _TL_messages_getGameHighScores_default_instance_;
class TL_messages_getHistory;
class TL_messages_getHistoryDefaultTypeInternal;
extern TL_messages_getHistoryDefaultTypeInternal _TL_messages_getHistory_default_instance_;
class TL_messages_getHistoryLayer51;
class TL_messages_getHistoryLayer51DefaultTypeInternal;
extern TL_messages_getHistoryLayer51DefaultTypeInternal _TL_messages_getHistoryLayer51_default_instance_;
class TL_messages_getInlineBotResults;
class TL_messages_getInlineBotResultsDefaultTypeInternal;
extern TL_messages_getInlineBotResultsDefaultTypeInternal _TL_messages_getInlineBotResults_default_instance_;
class TL_messages_getInlineGameHighScores;
class TL_messages_getInlineGameHighScoresDefaultTypeInternal;
extern TL_messages_getInlineGameHighScoresDefaultTypeInternal _TL_messages_getInlineGameHighScores_default_instance_;
class TL_messages_getMaskStickers;
class TL_messages_getMaskStickersDefaultTypeInternal;
extern TL_messages_getMaskStickersDefaultTypeInternal _TL_messages_getMaskStickers_default_instance_;
class TL_messages_getMessageEditData;
class TL_messages_getMessageEditDataDefaultTypeInternal;
extern TL_messages_getMessageEditDataDefaultTypeInternal _TL_messages_getMessageEditData_default_instance_;
class TL_messages_getMessages;
class TL_messages_getMessagesDefaultTypeInternal;
extern TL_messages_getMessagesDefaultTypeInternal _TL_messages_getMessages_default_instance_;
class TL_messages_getMessagesViews;
class TL_messages_getMessagesViewsDefaultTypeInternal;
extern TL_messages_getMessagesViewsDefaultTypeInternal _TL_messages_getMessagesViews_default_instance_;
class TL_messages_getPeerDialogs;
class TL_messages_getPeerDialogsDefaultTypeInternal;
extern TL_messages_getPeerDialogsDefaultTypeInternal _TL_messages_getPeerDialogs_default_instance_;
class TL_messages_getPeerSettings;
class TL_messages_getPeerSettingsDefaultTypeInternal;
extern TL_messages_getPeerSettingsDefaultTypeInternal _TL_messages_getPeerSettings_default_instance_;
class TL_messages_getPinnedDialogs;
class TL_messages_getPinnedDialogsDefaultTypeInternal;
extern TL_messages_getPinnedDialogsDefaultTypeInternal _TL_messages_getPinnedDialogs_default_instance_;
class TL_messages_getRecentLocations;
class TL_messages_getRecentLocationsDefaultTypeInternal;
extern TL_messages_getRecentLocationsDefaultTypeInternal _TL_messages_getRecentLocations_default_instance_;
class TL_messages_getRecentStickers;
class TL_messages_getRecentStickersDefaultTypeInternal;
extern TL_messages_getRecentStickersDefaultTypeInternal _TL_messages_getRecentStickers_default_instance_;
class TL_messages_getSavedGifs;
class TL_messages_getSavedGifsDefaultTypeInternal;
extern TL_messages_getSavedGifsDefaultTypeInternal _TL_messages_getSavedGifs_default_instance_;
class TL_messages_getSplitRanges;
class TL_messages_getSplitRangesDefaultTypeInternal;
extern TL_messages_getSplitRangesDefaultTypeInternal _TL_messages_getSplitRanges_default_instance_;
class TL_messages_getStickerSet;
class TL_messages_getStickerSetDefaultTypeInternal;
extern TL_messages_getStickerSetDefaultTypeInternal _TL_messages_getStickerSet_default_instance_;
class TL_messages_getStickers;
class TL_messages_getStickersDefaultTypeInternal;
extern TL_messages_getStickersDefaultTypeInternal _TL_messages_getStickers_default_instance_;
class TL_messages_getUnreadMentions;
class TL_messages_getUnreadMentionsDefaultTypeInternal;
extern TL_messages_getUnreadMentionsDefaultTypeInternal _TL_messages_getUnreadMentions_default_instance_;
class TL_messages_getWebPage;
class TL_messages_getWebPageDefaultTypeInternal;
extern TL_messages_getWebPageDefaultTypeInternal _TL_messages_getWebPage_default_instance_;
class TL_messages_getWebPagePreview;
class TL_messages_getWebPagePreviewDefaultTypeInternal;
extern TL_messages_getWebPagePreviewDefaultTypeInternal _TL_messages_getWebPagePreview_default_instance_;
class TL_messages_hideReportSpam;
class TL_messages_hideReportSpamDefaultTypeInternal;
extern TL_messages_hideReportSpamDefaultTypeInternal _TL_messages_hideReportSpam_default_instance_;
class TL_messages_importChatInvite;
class TL_messages_importChatInviteDefaultTypeInternal;
extern TL_messages_importChatInviteDefaultTypeInternal _TL_messages_importChatInvite_default_instance_;
class TL_messages_installStickerSet;
class TL_messages_installStickerSetDefaultTypeInternal;
extern TL_messages_installStickerSetDefaultTypeInternal _TL_messages_installStickerSet_default_instance_;
class TL_messages_markDialogUnread;
class TL_messages_markDialogUnreadDefaultTypeInternal;
extern TL_messages_markDialogUnreadDefaultTypeInternal _TL_messages_markDialogUnread_default_instance_;
class TL_messages_migrateChat;
class TL_messages_migrateChatDefaultTypeInternal;
extern TL_messages_migrateChatDefaultTypeInternal _TL_messages_migrateChat_default_instance_;
class TL_messages_readEncryptedHistory;
class TL_messages_readEncryptedHistoryDefaultTypeInternal;
extern TL_messages_readEncryptedHistoryDefaultTypeInternal _TL_messages_readEncryptedHistory_default_instance_;
class TL_messages_readFeaturedStickers;
class TL_messages_readFeaturedStickersDefaultTypeInternal;
extern TL_messages_readFeaturedStickersDefaultTypeInternal _TL_messages_readFeaturedStickers_default_instance_;
class TL_messages_readHistory;
class TL_messages_readHistoryDefaultTypeInternal;
extern TL_messages_readHistoryDefaultTypeInternal _TL_messages_readHistory_default_instance_;
class TL_messages_readHistoryLayer2;
class TL_messages_readHistoryLayer2DefaultTypeInternal;
extern TL_messages_readHistoryLayer2DefaultTypeInternal _TL_messages_readHistoryLayer2_default_instance_;
class TL_messages_readMentions;
class TL_messages_readMentionsDefaultTypeInternal;
extern TL_messages_readMentionsDefaultTypeInternal _TL_messages_readMentions_default_instance_;
class TL_messages_readMessageContents;
class TL_messages_readMessageContentsDefaultTypeInternal;
extern TL_messages_readMessageContentsDefaultTypeInternal _TL_messages_readMessageContents_default_instance_;
class TL_messages_receivedMessages;
class TL_messages_receivedMessagesDefaultTypeInternal;
extern TL_messages_receivedMessagesDefaultTypeInternal _TL_messages_receivedMessages_default_instance_;
class TL_messages_receivedQueue;
class TL_messages_receivedQueueDefaultTypeInternal;
extern TL_messages_receivedQueueDefaultTypeInternal _TL_messages_receivedQueue_default_instance_;
class TL_messages_reorderPinnedDialogs;
class TL_messages_reorderPinnedDialogsDefaultTypeInternal;
extern TL_messages_reorderPinnedDialogsDefaultTypeInternal _TL_messages_reorderPinnedDialogs_default_instance_;
class TL_messages_reorderStickerSets;
class TL_messages_reorderStickerSetsDefaultTypeInternal;
extern TL_messages_reorderStickerSetsDefaultTypeInternal _TL_messages_reorderStickerSets_default_instance_;
class TL_messages_report;
class TL_messages_reportDefaultTypeInternal;
extern TL_messages_reportDefaultTypeInternal _TL_messages_report_default_instance_;
class TL_messages_reportEncryptedSpam;
class TL_messages_reportEncryptedSpamDefaultTypeInternal;
extern TL_messages_reportEncryptedSpamDefaultTypeInternal _TL_messages_reportEncryptedSpam_default_instance_;
class TL_messages_reportSpam;
class TL_messages_reportSpamDefaultTypeInternal;
extern TL_messages_reportSpamDefaultTypeInternal _TL_messages_reportSpam_default_instance_;
class TL_messages_requestEncryption;
class TL_messages_requestEncryptionDefaultTypeInternal;
extern TL_messages_requestEncryptionDefaultTypeInternal _TL_messages_requestEncryption_default_instance_;
class TL_messages_saveDraft;
class TL_messages_saveDraftDefaultTypeInternal;
extern TL_messages_saveDraftDefaultTypeInternal _TL_messages_saveDraft_default_instance_;
class TL_messages_saveGif;
class TL_messages_saveGifDefaultTypeInternal;
extern TL_messages_saveGifDefaultTypeInternal _TL_messages_saveGif_default_instance_;
class TL_messages_saveRecentSticker;
class TL_messages_saveRecentStickerDefaultTypeInternal;
extern TL_messages_saveRecentStickerDefaultTypeInternal _TL_messages_saveRecentSticker_default_instance_;
class TL_messages_search;
class TL_messages_searchDefaultTypeInternal;
extern TL_messages_searchDefaultTypeInternal _TL_messages_search_default_instance_;
class TL_messages_searchGifs;
class TL_messages_searchGifsDefaultTypeInternal;
extern TL_messages_searchGifsDefaultTypeInternal _TL_messages_searchGifs_default_instance_;
class TL_messages_searchGlobal;
class TL_messages_searchGlobalDefaultTypeInternal;
extern TL_messages_searchGlobalDefaultTypeInternal _TL_messages_searchGlobal_default_instance_;
class TL_messages_searchLayer68;
class TL_messages_searchLayer68DefaultTypeInternal;
extern TL_messages_searchLayer68DefaultTypeInternal _TL_messages_searchLayer68_default_instance_;
class TL_messages_searchStickerSets;
class TL_messages_searchStickerSetsDefaultTypeInternal;
extern TL_messages_searchStickerSetsDefaultTypeInternal _TL_messages_searchStickerSets_default_instance_;
class TL_messages_sendEncrypted;
class TL_messages_sendEncryptedDefaultTypeInternal;
extern TL_messages_sendEncryptedDefaultTypeInternal _TL_messages_sendEncrypted_default_instance_;
class TL_messages_sendEncryptedFile;
class TL_messages_sendEncryptedFileDefaultTypeInternal;
extern TL_messages_sendEncryptedFileDefaultTypeInternal _TL_messages_sendEncryptedFile_default_instance_;
class TL_messages_sendEncryptedService;
class TL_messages_sendEncryptedServiceDefaultTypeInternal;
extern TL_messages_sendEncryptedServiceDefaultTypeInternal _TL_messages_sendEncryptedService_default_instance_;
class TL_messages_sendInlineBotResult;
class TL_messages_sendInlineBotResultDefaultTypeInternal;
extern TL_messages_sendInlineBotResultDefaultTypeInternal _TL_messages_sendInlineBotResult_default_instance_;
class TL_messages_sendMedia;
class TL_messages_sendMediaDefaultTypeInternal;
extern TL_messages_sendMediaDefaultTypeInternal _TL_messages_sendMedia_default_instance_;
class TL_messages_sendMessage;
class TL_messages_sendMessageDefaultTypeInternal;
extern TL_messages_sendMessageDefaultTypeInternal _TL_messages_sendMessage_default_instance_;
class TL_messages_sendMultiMedia;
class TL_messages_sendMultiMediaDefaultTypeInternal;
extern TL_messages_sendMultiMediaDefaultTypeInternal _TL_messages_sendMultiMedia_default_instance_;
class TL_messages_sendScreenshotNotification;
class TL_messages_sendScreenshotNotificationDefaultTypeInternal;
extern TL_messages_sendScreenshotNotificationDefaultTypeInternal _TL_messages_sendScreenshotNotification_default_instance_;
class TL_messages_setBotCallbackAnswer;
class TL_messages_setBotCallbackAnswerDefaultTypeInternal;
extern TL_messages_setBotCallbackAnswerDefaultTypeInternal _TL_messages_setBotCallbackAnswer_default_instance_;
class TL_messages_setBotPrecheckoutResults;
class TL_messages_setBotPrecheckoutResultsDefaultTypeInternal;
extern TL_messages_setBotPrecheckoutResultsDefaultTypeInternal _TL_messages_setBotPrecheckoutResults_default_instance_;
class TL_messages_setBotShippingResults;
class TL_messages_setBotShippingResultsDefaultTypeInternal;
extern TL_messages_setBotShippingResultsDefaultTypeInternal _TL_messages_setBotShippingResults_default_instance_;
class TL_messages_setEncryptedTyping;
class TL_messages_setEncryptedTypingDefaultTypeInternal;
extern TL_messages_setEncryptedTypingDefaultTypeInternal _TL_messages_setEncryptedTyping_default_instance_;
class TL_messages_setGameScore;
class TL_messages_setGameScoreDefaultTypeInternal;
extern TL_messages_setGameScoreDefaultTypeInternal _TL_messages_setGameScore_default_instance_;
class TL_messages_setInlineBotResults;
class TL_messages_setInlineBotResultsDefaultTypeInternal;
extern TL_messages_setInlineBotResultsDefaultTypeInternal _TL_messages_setInlineBotResults_default_instance_;
class TL_messages_setInlineGameScore;
class TL_messages_setInlineGameScoreDefaultTypeInternal;
extern TL_messages_setInlineGameScoreDefaultTypeInternal _TL_messages_setInlineGameScore_default_instance_;
class TL_messages_setTyping;
class TL_messages_setTypingDefaultTypeInternal;
extern TL_messages_setTypingDefaultTypeInternal _TL_messages_setTyping_default_instance_;
class TL_messages_startBot;
class TL_messages_startBotDefaultTypeInternal;
extern TL_messages_startBotDefaultTypeInternal _TL_messages_startBot_default_instance_;
class TL_messages_toggleChatAdmins;
class TL_messages_toggleChatAdminsDefaultTypeInternal;
extern TL_messages_toggleChatAdminsDefaultTypeInternal _TL_messages_toggleChatAdmins_default_instance_;
class TL_messages_toggleDialogPin;
class TL_messages_toggleDialogPinDefaultTypeInternal;
extern TL_messages_toggleDialogPinDefaultTypeInternal _TL_messages_toggleDialogPin_default_instance_;
class TL_messages_uninstallStickerSet;
class TL_messages_uninstallStickerSetDefaultTypeInternal;
extern TL_messages_uninstallStickerSetDefaultTypeInternal _TL_messages_uninstallStickerSet_default_instance_;
class TL_messages_uploadEncryptedFile;
class TL_messages_uploadEncryptedFileDefaultTypeInternal;
extern TL_messages_uploadEncryptedFileDefaultTypeInternal _TL_messages_uploadEncryptedFile_default_instance_;
class TL_messages_uploadMedia;
class TL_messages_uploadMediaDefaultTypeInternal;
extern TL_messages_uploadMediaDefaultTypeInternal _TL_messages_uploadMedia_default_instance_;
class TL_payments_clearSavedInfo;
class TL_payments_clearSavedInfoDefaultTypeInternal;
extern TL_payments_clearSavedInfoDefaultTypeInternal _TL_payments_clearSavedInfo_default_instance_;
class TL_payments_getPaymentForm;
class TL_payments_getPaymentFormDefaultTypeInternal;
extern TL_payments_getPaymentFormDefaultTypeInternal _TL_payments_getPaymentForm_default_instance_;
class TL_payments_getPaymentReceipt;
class TL_payments_getPaymentReceiptDefaultTypeInternal;
extern TL_payments_getPaymentReceiptDefaultTypeInternal _TL_payments_getPaymentReceipt_default_instance_;
class TL_payments_getSavedInfo;
class TL_payments_getSavedInfoDefaultTypeInternal;
extern TL_payments_getSavedInfoDefaultTypeInternal _TL_payments_getSavedInfo_default_instance_;
class TL_payments_sendPaymentForm;
class TL_payments_sendPaymentFormDefaultTypeInternal;
extern TL_payments_sendPaymentFormDefaultTypeInternal _TL_payments_sendPaymentForm_default_instance_;
class TL_payments_validateRequestedInfo;
class TL_payments_validateRequestedInfoDefaultTypeInternal;
extern TL_payments_validateRequestedInfoDefaultTypeInternal _TL_payments_validateRequestedInfo_default_instance_;
class TL_phone_acceptCall;
class TL_phone_acceptCallDefaultTypeInternal;
extern TL_phone_acceptCallDefaultTypeInternal _TL_phone_acceptCall_default_instance_;
class TL_phone_confirmCall;
class TL_phone_confirmCallDefaultTypeInternal;
extern TL_phone_confirmCallDefaultTypeInternal _TL_phone_confirmCall_default_instance_;
class TL_phone_discardCall;
class TL_phone_discardCallDefaultTypeInternal;
extern TL_phone_discardCallDefaultTypeInternal _TL_phone_discardCall_default_instance_;
class TL_phone_getCallConfig;
class TL_phone_getCallConfigDefaultTypeInternal;
extern TL_phone_getCallConfigDefaultTypeInternal _TL_phone_getCallConfig_default_instance_;
class TL_phone_receivedCall;
class TL_phone_receivedCallDefaultTypeInternal;
extern TL_phone_receivedCallDefaultTypeInternal _TL_phone_receivedCall_default_instance_;
class TL_phone_requestCall;
class TL_phone_requestCallDefaultTypeInternal;
extern TL_phone_requestCallDefaultTypeInternal _TL_phone_requestCall_default_instance_;
class TL_phone_saveCallDebug;
class TL_phone_saveCallDebugDefaultTypeInternal;
extern TL_phone_saveCallDebugDefaultTypeInternal _TL_phone_saveCallDebug_default_instance_;
class TL_phone_setCallRating;
class TL_phone_setCallRatingDefaultTypeInternal;
extern TL_phone_setCallRatingDefaultTypeInternal _TL_phone_setCallRating_default_instance_;
class TL_photos_deletePhotos;
class TL_photos_deletePhotosDefaultTypeInternal;
extern TL_photos_deletePhotosDefaultTypeInternal _TL_photos_deletePhotos_default_instance_;
class TL_photos_getUserPhotos;
class TL_photos_getUserPhotosDefaultTypeInternal;
extern TL_photos_getUserPhotosDefaultTypeInternal _TL_photos_getUserPhotos_default_instance_;
class TL_photos_updateProfilePhoto;
class TL_photos_updateProfilePhotoDefaultTypeInternal;
extern TL_photos_updateProfilePhotoDefaultTypeInternal _TL_photos_updateProfilePhoto_default_instance_;
class TL_photos_uploadProfilePhoto;
class TL_photos_uploadProfilePhotoDefaultTypeInternal;
extern TL_photos_uploadProfilePhotoDefaultTypeInternal _TL_photos_uploadProfilePhoto_default_instance_;
class TL_stickers_addStickerToSet;
class TL_stickers_addStickerToSetDefaultTypeInternal;
extern TL_stickers_addStickerToSetDefaultTypeInternal _TL_stickers_addStickerToSet_default_instance_;
class TL_stickers_changeStickerPosition;
class TL_stickers_changeStickerPositionDefaultTypeInternal;
extern TL_stickers_changeStickerPositionDefaultTypeInternal _TL_stickers_changeStickerPosition_default_instance_;
class TL_stickers_createStickerSet;
class TL_stickers_createStickerSetDefaultTypeInternal;
extern TL_stickers_createStickerSetDefaultTypeInternal _TL_stickers_createStickerSet_default_instance_;
class TL_stickers_removeStickerFromSet;
class TL_stickers_removeStickerFromSetDefaultTypeInternal;
extern TL_stickers_removeStickerFromSetDefaultTypeInternal _TL_stickers_removeStickerFromSet_default_instance_;
class TL_updates_getChannelDifference;
class TL_updates_getChannelDifferenceDefaultTypeInternal;
extern TL_updates_getChannelDifferenceDefaultTypeInternal _TL_updates_getChannelDifference_default_instance_;
class TL_updates_getChannelDifferenceLayer46;
class TL_updates_getChannelDifferenceLayer46DefaultTypeInternal;
extern TL_updates_getChannelDifferenceLayer46DefaultTypeInternal _TL_updates_getChannelDifferenceLayer46_default_instance_;
class TL_updates_getDifference;
class TL_updates_getDifferenceDefaultTypeInternal;
extern TL_updates_getDifferenceDefaultTypeInternal _TL_updates_getDifference_default_instance_;
class TL_updates_getState;
class TL_updates_getStateDefaultTypeInternal;
extern TL_updates_getStateDefaultTypeInternal _TL_updates_getState_default_instance_;
class TL_upload_getCdnFile;
class TL_upload_getCdnFileDefaultTypeInternal;
extern TL_upload_getCdnFileDefaultTypeInternal _TL_upload_getCdnFile_default_instance_;
class TL_upload_getCdnFileHashes;
class TL_upload_getCdnFileHashesDefaultTypeInternal;
extern TL_upload_getCdnFileHashesDefaultTypeInternal _TL_upload_getCdnFileHashes_default_instance_;
class TL_upload_getFile;
class TL_upload_getFileDefaultTypeInternal;
extern TL_upload_getFileDefaultTypeInternal _TL_upload_getFile_default_instance_;
class TL_upload_getFileHashes;
class TL_upload_getFileHashesDefaultTypeInternal;
extern TL_upload_getFileHashesDefaultTypeInternal _TL_upload_getFileHashes_default_instance_;
class TL_upload_getWebFile;
class TL_upload_getWebFileDefaultTypeInternal;
extern TL_upload_getWebFileDefaultTypeInternal _TL_upload_getWebFile_default_instance_;
class TL_upload_reuploadCdnFile;
class TL_upload_reuploadCdnFileDefaultTypeInternal;
extern TL_upload_reuploadCdnFileDefaultTypeInternal _TL_upload_reuploadCdnFile_default_instance_;
class TL_upload_saveBigFilePart;
class TL_upload_saveBigFilePartDefaultTypeInternal;
extern TL_upload_saveBigFilePartDefaultTypeInternal _TL_upload_saveBigFilePart_default_instance_;
class TL_upload_saveFilePart;
class TL_upload_saveFilePartDefaultTypeInternal;
extern TL_upload_saveFilePartDefaultTypeInternal _TL_upload_saveFilePart_default_instance_;
class TL_users_getFullUser;
class TL_users_getFullUserDefaultTypeInternal;
extern TL_users_getFullUserDefaultTypeInternal _TL_users_getFullUser_default_instance_;
class TL_users_getUsers;
class TL_users_getUsersDefaultTypeInternal;
extern TL_users_getUsersDefaultTypeInternal _TL_users_getUsers_default_instance_;
class TL_users_setSecureValueErrors;
class TL_users_setSecureValueErrorsDefaultTypeInternal;
extern TL_users_setSecureValueErrorsDefaultTypeInternal _TL_users_setSecureValueErrors_default_instance_;
class Vector_ContactStatus;
class Vector_ContactStatusDefaultTypeInternal;
extern Vector_ContactStatusDefaultTypeInternal _Vector_ContactStatus_default_instance_;
class Vector_DialogPeer;
class Vector_DialogPeerDefaultTypeInternal;
extern Vector_DialogPeerDefaultTypeInternal _Vector_DialogPeer_default_instance_;
class Vector_FileHash;
class Vector_FileHashDefaultTypeInternal;
extern Vector_FileHashDefaultTypeInternal _Vector_FileHash_default_instance_;
class Vector_LangPackLanguage;
class Vector_LangPackLanguageDefaultTypeInternal;
extern Vector_LangPackLanguageDefaultTypeInternal _Vector_LangPackLanguage_default_instance_;
class Vector_LangPackString;
class Vector_LangPackStringDefaultTypeInternal;
extern Vector_LangPackStringDefaultTypeInternal _Vector_LangPackString_default_instance_;
class Vector_MessageRange;
class Vector_MessageRangeDefaultTypeInternal;
extern Vector_MessageRangeDefaultTypeInternal _Vector_MessageRange_default_instance_;
class Vector_ReceivedNotifyMessage;
class Vector_ReceivedNotifyMessageDefaultTypeInternal;
extern Vector_ReceivedNotifyMessageDefaultTypeInternal _Vector_ReceivedNotifyMessage_default_instance_;
class Vector_SavedContact;
class Vector_SavedContactDefaultTypeInternal;
extern Vector_SavedContactDefaultTypeInternal _Vector_SavedContact_default_instance_;
class Vector_SecureValue;
class Vector_SecureValueDefaultTypeInternal;
extern Vector_SecureValueDefaultTypeInternal _Vector_SecureValue_default_instance_;
class Vector_StickerSetCovered;
class Vector_StickerSetCoveredDefaultTypeInternal;
extern Vector_StickerSetCoveredDefaultTypeInternal _Vector_StickerSetCovered_default_instance_;
class Vector_User;
class Vector_UserDefaultTypeInternal;
extern Vector_UserDefaultTypeInternal _Vector_User_default_instance_;
class Vector_WallPaper;
class Vector_WallPaperDefaultTypeInternal;
extern Vector_WallPaperDefaultTypeInternal _Vector_WallPaper_default_instance_;
class Vector_int;
class Vector_intDefaultTypeInternal;
extern Vector_intDefaultTypeInternal _Vector_int_default_instance_;
class Vector_long;
class Vector_longDefaultTypeInternal;
extern Vector_longDefaultTypeInternal _Vector_long_default_instance_;
}  // namespace mtproto

namespace mtproto {

namespace protobuf_schema_2etl_2esync_5fservice_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static void InitDefaultsImpl();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_schema_2etl_2esync_5fservice_2eproto

// ===================================================================

class TL_langpack_getLanguagesLayer70 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtproto.TL_langpack_getLanguagesLayer70) */ {
 public:
  TL_langpack_getLanguagesLayer70();
  virtual ~TL_langpack_getLanguagesLayer70();

  TL_langpack_getLanguagesLayer70(const TL_langpack_getLanguagesLayer70& from);

  inline TL_langpack_getLanguagesLayer70& operator=(const TL_langpack_getLanguagesLayer70& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TL_langpack_getLanguagesLayer70(TL_langpack_getLanguagesLayer70&& from) noexcept
    : TL_langpack_getLanguagesLayer70() {
    *this = ::std::move(from);
  }

  inline TL_langpack_getLanguagesLayer70& operator=(TL_langpack_getLanguagesLayer70&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TL_langpack_getLanguagesLayer70& default_instance();

  static inline const TL_langpack_getLanguagesLayer70* internal_default_instance() {
    return reinterpret_cast<const TL_langpack_getLanguagesLayer70*>(
               &_TL_langpack_getLanguagesLayer70_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(TL_langpack_getLanguagesLayer70* other);
  friend void swap(TL_langpack_getLanguagesLayer70& a, TL_langpack_getLanguagesLayer70& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TL_langpack_getLanguagesLayer70* New() const PROTOBUF_FINAL { return New(NULL); }

  TL_langpack_getLanguagesLayer70* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TL_langpack_getLanguagesLayer70* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:mtproto.TL_langpack_getLanguagesLayer70)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable int _cached_size_;
  friend struct protobuf_schema_2etl_2esync_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TL_help_getScheme : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtproto.TL_help_getScheme) */ {
 public:
  TL_help_getScheme();
  virtual ~TL_help_getScheme();

  TL_help_getScheme(const TL_help_getScheme& from);

  inline TL_help_getScheme& operator=(const TL_help_getScheme& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TL_help_getScheme(TL_help_getScheme&& from) noexcept
    : TL_help_getScheme() {
    *this = ::std::move(from);
  }

  inline TL_help_getScheme& operator=(TL_help_getScheme&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TL_help_getScheme& default_instance();

  static inline const TL_help_getScheme* internal_default_instance() {
    return reinterpret_cast<const TL_help_getScheme*>(
               &_TL_help_getScheme_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(TL_help_getScheme* other);
  friend void swap(TL_help_getScheme& a, TL_help_getScheme& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TL_help_getScheme* New() const PROTOBUF_FINAL { return New(NULL); }

  TL_help_getScheme* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TL_help_getScheme* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 version = 1;
  void clear_version();
  static const int kVersionFieldNumber = 1;
  ::google::protobuf::int32 version() const;
  void set_version(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:mtproto.TL_help_getScheme)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 version_;
  mutable int _cached_size_;
  friend struct protobuf_schema_2etl_2esync_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TL_messages_readHistoryLayer2 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtproto.TL_messages_readHistoryLayer2) */ {
 public:
  TL_messages_readHistoryLayer2();
  virtual ~TL_messages_readHistoryLayer2();

  TL_messages_readHistoryLayer2(const TL_messages_readHistoryLayer2& from);

  inline TL_messages_readHistoryLayer2& operator=(const TL_messages_readHistoryLayer2& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TL_messages_readHistoryLayer2(TL_messages_readHistoryLayer2&& from) noexcept
    : TL_messages_readHistoryLayer2() {
    *this = ::std::move(from);
  }

  inline TL_messages_readHistoryLayer2& operator=(TL_messages_readHistoryLayer2&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TL_messages_readHistoryLayer2& default_instance();

  static inline const TL_messages_readHistoryLayer2* internal_default_instance() {
    return reinterpret_cast<const TL_messages_readHistoryLayer2*>(
               &_TL_messages_readHistoryLayer2_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(TL_messages_readHistoryLayer2* other);
  friend void swap(TL_messages_readHistoryLayer2& a, TL_messages_readHistoryLayer2& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TL_messages_readHistoryLayer2* New() const PROTOBUF_FINAL { return New(NULL); }

  TL_messages_readHistoryLayer2* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TL_messages_readHistoryLayer2* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .mtproto.InputPeer peer = 1;
  bool has_peer() const;
  void clear_peer();
  static const int kPeerFieldNumber = 1;
  const ::mtproto::InputPeer& peer() const;
  ::mtproto::InputPeer* mutable_peer();
  ::mtproto::InputPeer* release_peer();
  void set_allocated_peer(::mtproto::InputPeer* peer);

  // int32 max_id = 2;
  void clear_max_id();
  static const int kMaxIdFieldNumber = 2;
  ::google::protobuf::int32 max_id() const;
  void set_max_id(::google::protobuf::int32 value);

  // int32 offset = 3;
  void clear_offset();
  static const int kOffsetFieldNumber = 3;
  ::google::protobuf::int32 offset() const;
  void set_offset(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:mtproto.TL_messages_readHistoryLayer2)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::mtproto::InputPeer* peer_;
  ::google::protobuf::int32 max_id_;
  ::google::protobuf::int32 offset_;
  mutable int _cached_size_;
  friend struct protobuf_schema_2etl_2esync_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TL_help_getInviteTextLayer46 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtproto.TL_help_getInviteTextLayer46) */ {
 public:
  TL_help_getInviteTextLayer46();
  virtual ~TL_help_getInviteTextLayer46();

  TL_help_getInviteTextLayer46(const TL_help_getInviteTextLayer46& from);

  inline TL_help_getInviteTextLayer46& operator=(const TL_help_getInviteTextLayer46& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TL_help_getInviteTextLayer46(TL_help_getInviteTextLayer46&& from) noexcept
    : TL_help_getInviteTextLayer46() {
    *this = ::std::move(from);
  }

  inline TL_help_getInviteTextLayer46& operator=(TL_help_getInviteTextLayer46&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TL_help_getInviteTextLayer46& default_instance();

  static inline const TL_help_getInviteTextLayer46* internal_default_instance() {
    return reinterpret_cast<const TL_help_getInviteTextLayer46*>(
               &_TL_help_getInviteTextLayer46_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(TL_help_getInviteTextLayer46* other);
  friend void swap(TL_help_getInviteTextLayer46& a, TL_help_getInviteTextLayer46& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TL_help_getInviteTextLayer46* New() const PROTOBUF_FINAL { return New(NULL); }

  TL_help_getInviteTextLayer46* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TL_help_getInviteTextLayer46* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string lang_code = 1;
  void clear_lang_code();
  static const int kLangCodeFieldNumber = 1;
  const ::std::string& lang_code() const;
  void set_lang_code(const ::std::string& value);
  #if LANG_CXX11
  void set_lang_code(::std::string&& value);
  #endif
  void set_lang_code(const char* value);
  void set_lang_code(const char* value, size_t size);
  ::std::string* mutable_lang_code();
  ::std::string* release_lang_code();
  void set_allocated_lang_code(::std::string* lang_code);

  // @@protoc_insertion_point(class_scope:mtproto.TL_help_getInviteTextLayer46)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr lang_code_;
  mutable int _cached_size_;
  friend struct protobuf_schema_2etl_2esync_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TL_help_getAppUpdateLayer46 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtproto.TL_help_getAppUpdateLayer46) */ {
 public:
  TL_help_getAppUpdateLayer46();
  virtual ~TL_help_getAppUpdateLayer46();

  TL_help_getAppUpdateLayer46(const TL_help_getAppUpdateLayer46& from);

  inline TL_help_getAppUpdateLayer46& operator=(const TL_help_getAppUpdateLayer46& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TL_help_getAppUpdateLayer46(TL_help_getAppUpdateLayer46&& from) noexcept
    : TL_help_getAppUpdateLayer46() {
    *this = ::std::move(from);
  }

  inline TL_help_getAppUpdateLayer46& operator=(TL_help_getAppUpdateLayer46&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TL_help_getAppUpdateLayer46& default_instance();

  static inline const TL_help_getAppUpdateLayer46* internal_default_instance() {
    return reinterpret_cast<const TL_help_getAppUpdateLayer46*>(
               &_TL_help_getAppUpdateLayer46_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    4;

  void Swap(TL_help_getAppUpdateLayer46* other);
  friend void swap(TL_help_getAppUpdateLayer46& a, TL_help_getAppUpdateLayer46& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TL_help_getAppUpdateLayer46* New() const PROTOBUF_FINAL { return New(NULL); }

  TL_help_getAppUpdateLayer46* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TL_help_getAppUpdateLayer46* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string device_model = 1;
  void clear_device_model();
  static const int kDeviceModelFieldNumber = 1;
  const ::std::string& device_model() const;
  void set_device_model(const ::std::string& value);
  #if LANG_CXX11
  void set_device_model(::std::string&& value);
  #endif
  void set_device_model(const char* value);
  void set_device_model(const char* value, size_t size);
  ::std::string* mutable_device_model();
  ::std::string* release_device_model();
  void set_allocated_device_model(::std::string* device_model);

  // string system_version = 2;
  void clear_system_version();
  static const int kSystemVersionFieldNumber = 2;
  const ::std::string& system_version() const;
  void set_system_version(const ::std::string& value);
  #if LANG_CXX11
  void set_system_version(::std::string&& value);
  #endif
  void set_system_version(const char* value);
  void set_system_version(const char* value, size_t size);
  ::std::string* mutable_system_version();
  ::std::string* release_system_version();
  void set_allocated_system_version(::std::string* system_version);

  // string app_version = 3;
  void clear_app_version();
  static const int kAppVersionFieldNumber = 3;
  const ::std::string& app_version() const;
  void set_app_version(const ::std::string& value);
  #if LANG_CXX11
  void set_app_version(::std::string&& value);
  #endif
  void set_app_version(const char* value);
  void set_app_version(const char* value, size_t size);
  ::std::string* mutable_app_version();
  ::std::string* release_app_version();
  void set_allocated_app_version(::std::string* app_version);

  // string lang_code = 4;
  void clear_lang_code();
  static const int kLangCodeFieldNumber = 4;
  const ::std::string& lang_code() const;
  void set_lang_code(const ::std::string& value);
  #if LANG_CXX11
  void set_lang_code(::std::string&& value);
  #endif
  void set_lang_code(const char* value);
  void set_lang_code(const char* value, size_t size);
  ::std::string* mutable_lang_code();
  ::std::string* release_lang_code();
  void set_allocated_lang_code(::std::string* lang_code);

  // @@protoc_insertion_point(class_scope:mtproto.TL_help_getAppUpdateLayer46)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr device_model_;
  ::google::protobuf::internal::ArenaStringPtr system_version_;
  ::google::protobuf::internal::ArenaStringPtr app_version_;
  ::google::protobuf::internal::ArenaStringPtr lang_code_;
  mutable int _cached_size_;
  friend struct protobuf_schema_2etl_2esync_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TL_updates_getChannelDifferenceLayer46 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtproto.TL_updates_getChannelDifferenceLayer46) */ {
 public:
  TL_updates_getChannelDifferenceLayer46();
  virtual ~TL_updates_getChannelDifferenceLayer46();

  TL_updates_getChannelDifferenceLayer46(const TL_updates_getChannelDifferenceLayer46& from);

  inline TL_updates_getChannelDifferenceLayer46& operator=(const TL_updates_getChannelDifferenceLayer46& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TL_updates_getChannelDifferenceLayer46(TL_updates_getChannelDifferenceLayer46&& from) noexcept
    : TL_updates_getChannelDifferenceLayer46() {
    *this = ::std::move(from);
  }

  inline TL_updates_getChannelDifferenceLayer46& operator=(TL_updates_getChannelDifferenceLayer46&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TL_updates_getChannelDifferenceLayer46& default_instance();

  static inline const TL_updates_getChannelDifferenceLayer46* internal_default_instance() {
    return reinterpret_cast<const TL_updates_getChannelDifferenceLayer46*>(
               &_TL_updates_getChannelDifferenceLayer46_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    5;

  void Swap(TL_updates_getChannelDifferenceLayer46* other);
  friend void swap(TL_updates_getChannelDifferenceLayer46& a, TL_updates_getChannelDifferenceLayer46& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TL_updates_getChannelDifferenceLayer46* New() const PROTOBUF_FINAL { return New(NULL); }

  TL_updates_getChannelDifferenceLayer46* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TL_updates_getChannelDifferenceLayer46* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .mtproto.InputChannel channel = 1;
  bool has_channel() const;
  void clear_channel();
  static const int kChannelFieldNumber = 1;
  const ::mtproto::InputChannel& channel() const;
  ::mtproto::InputChannel* mutable_channel();
  ::mtproto::InputChannel* release_channel();
  void set_allocated_channel(::mtproto::InputChannel* channel);

  // .mtproto.ChannelMessagesFilter filter = 2;
  bool has_filter() const;
  void clear_filter();
  static const int kFilterFieldNumber = 2;
  const ::mtproto::ChannelMessagesFilter& filter() const;
  ::mtproto::ChannelMessagesFilter* mutable_filter();
  ::mtproto::ChannelMessagesFilter* release_filter();
  void set_allocated_filter(::mtproto::ChannelMessagesFilter* filter);

  // int32 pts = 3;
  void clear_pts();
  static const int kPtsFieldNumber = 3;
  ::google::protobuf::int32 pts() const;
  void set_pts(::google::protobuf::int32 value);

  // int32 limit = 4;
  void clear_limit();
  static const int kLimitFieldNumber = 4;
  ::google::protobuf::int32 limit() const;
  void set_limit(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:mtproto.TL_updates_getChannelDifferenceLayer46)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::mtproto::InputChannel* channel_;
  ::mtproto::ChannelMessagesFilter* filter_;
  ::google::protobuf::int32 pts_;
  ::google::protobuf::int32 limit_;
  mutable int _cached_size_;
  friend struct protobuf_schema_2etl_2esync_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TL_auth_sendCodeLayer51 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtproto.TL_auth_sendCodeLayer51) */ {
 public:
  TL_auth_sendCodeLayer51();
  virtual ~TL_auth_sendCodeLayer51();

  TL_auth_sendCodeLayer51(const TL_auth_sendCodeLayer51& from);

  inline TL_auth_sendCodeLayer51& operator=(const TL_auth_sendCodeLayer51& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TL_auth_sendCodeLayer51(TL_auth_sendCodeLayer51&& from) noexcept
    : TL_auth_sendCodeLayer51() {
    *this = ::std::move(from);
  }

  inline TL_auth_sendCodeLayer51& operator=(TL_auth_sendCodeLayer51&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TL_auth_sendCodeLayer51& default_instance();

  static inline const TL_auth_sendCodeLayer51* internal_default_instance() {
    return reinterpret_cast<const TL_auth_sendCodeLayer51*>(
               &_TL_auth_sendCodeLayer51_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    6;

  void Swap(TL_auth_sendCodeLayer51* other);
  friend void swap(TL_auth_sendCodeLayer51& a, TL_auth_sendCodeLayer51& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TL_auth_sendCodeLayer51* New() const PROTOBUF_FINAL { return New(NULL); }

  TL_auth_sendCodeLayer51* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TL_auth_sendCodeLayer51* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string phone_number = 3;
  void clear_phone_number();
  static const int kPhoneNumberFieldNumber = 3;
  const ::std::string& phone_number() const;
  void set_phone_number(const ::std::string& value);
  #if LANG_CXX11
  void set_phone_number(::std::string&& value);
  #endif
  void set_phone_number(const char* value);
  void set_phone_number(const char* value, size_t size);
  ::std::string* mutable_phone_number();
  ::std::string* release_phone_number();
  void set_allocated_phone_number(::std::string* phone_number);

  // string api_hash = 6;
  void clear_api_hash();
  static const int kApiHashFieldNumber = 6;
  const ::std::string& api_hash() const;
  void set_api_hash(const ::std::string& value);
  #if LANG_CXX11
  void set_api_hash(::std::string&& value);
  #endif
  void set_api_hash(const char* value);
  void set_api_hash(const char* value, size_t size);
  ::std::string* mutable_api_hash();
  ::std::string* release_api_hash();
  void set_allocated_api_hash(::std::string* api_hash);

  // string lang_code = 7;
  void clear_lang_code();
  static const int kLangCodeFieldNumber = 7;
  const ::std::string& lang_code() const;
  void set_lang_code(const ::std::string& value);
  #if LANG_CXX11
  void set_lang_code(::std::string&& value);
  #endif
  void set_lang_code(const char* value);
  void set_lang_code(const char* value, size_t size);
  ::std::string* mutable_lang_code();
  ::std::string* release_lang_code();
  void set_allocated_lang_code(::std::string* lang_code);

  // .mtproto.Bool current_number = 4;
  bool has_current_number() const;
  void clear_current_number();
  static const int kCurrentNumberFieldNumber = 4;
  const ::mtproto::Bool& current_number() const;
  ::mtproto::Bool* mutable_current_number();
  ::mtproto::Bool* release_current_number();
  void set_allocated_current_number(::mtproto::Bool* current_number);

  // bool allow_flashcall = 2;
  void clear_allow_flashcall();
  static const int kAllowFlashcallFieldNumber = 2;
  bool allow_flashcall() const;
  void set_allow_flashcall(bool value);

  // int32 api_id = 5;
  void clear_api_id();
  static const int kApiIdFieldNumber = 5;
  ::google::protobuf::int32 api_id() const;
  void set_api_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:mtproto.TL_auth_sendCodeLayer51)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr phone_number_;
  ::google::protobuf::internal::ArenaStringPtr api_hash_;
  ::google::protobuf::internal::ArenaStringPtr lang_code_;
  ::mtproto::Bool* current_number_;
  bool allow_flashcall_;
  ::google::protobuf::int32 api_id_;
  mutable int _cached_size_;
  friend struct protobuf_schema_2etl_2esync_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TL_messages_getHistoryLayer51 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtproto.TL_messages_getHistoryLayer51) */ {
 public:
  TL_messages_getHistoryLayer51();
  virtual ~TL_messages_getHistoryLayer51();

  TL_messages_getHistoryLayer51(const TL_messages_getHistoryLayer51& from);

  inline TL_messages_getHistoryLayer51& operator=(const TL_messages_getHistoryLayer51& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TL_messages_getHistoryLayer51(TL_messages_getHistoryLayer51&& from) noexcept
    : TL_messages_getHistoryLayer51() {
    *this = ::std::move(from);
  }

  inline TL_messages_getHistoryLayer51& operator=(TL_messages_getHistoryLayer51&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TL_messages_getHistoryLayer51& default_instance();

  static inline const TL_messages_getHistoryLayer51* internal_default_instance() {
    return reinterpret_cast<const TL_messages_getHistoryLayer51*>(
               &_TL_messages_getHistoryLayer51_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    7;

  void Swap(TL_messages_getHistoryLayer51* other);
  friend void swap(TL_messages_getHistoryLayer51& a, TL_messages_getHistoryLayer51& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TL_messages_getHistoryLayer51* New() const PROTOBUF_FINAL { return New(NULL); }

  TL_messages_getHistoryLayer51* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TL_messages_getHistoryLayer51* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .mtproto.InputPeer peer = 1;
  bool has_peer() const;
  void clear_peer();
  static const int kPeerFieldNumber = 1;
  const ::mtproto::InputPeer& peer() const;
  ::mtproto::InputPeer* mutable_peer();
  ::mtproto::InputPeer* release_peer();
  void set_allocated_peer(::mtproto::InputPeer* peer);

  // int32 offset_id = 2;
  void clear_offset_id();
  static const int kOffsetIdFieldNumber = 2;
  ::google::protobuf::int32 offset_id() const;
  void set_offset_id(::google::protobuf::int32 value);

  // int32 offset_date = 3;
  void clear_offset_date();
  static const int kOffsetDateFieldNumber = 3;
  ::google::protobuf::int32 offset_date() const;
  void set_offset_date(::google::protobuf::int32 value);

  // int32 add_offset = 4;
  void clear_add_offset();
  static const int kAddOffsetFieldNumber = 4;
  ::google::protobuf::int32 add_offset() const;
  void set_add_offset(::google::protobuf::int32 value);

  // int32 limit = 5;
  void clear_limit();
  static const int kLimitFieldNumber = 5;
  ::google::protobuf::int32 limit() const;
  void set_limit(::google::protobuf::int32 value);

  // int32 max_id = 6;
  void clear_max_id();
  static const int kMaxIdFieldNumber = 6;
  ::google::protobuf::int32 max_id() const;
  void set_max_id(::google::protobuf::int32 value);

  // int32 min_id = 7;
  void clear_min_id();
  static const int kMinIdFieldNumber = 7;
  ::google::protobuf::int32 min_id() const;
  void set_min_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:mtproto.TL_messages_getHistoryLayer51)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::mtproto::InputPeer* peer_;
  ::google::protobuf::int32 offset_id_;
  ::google::protobuf::int32 offset_date_;
  ::google::protobuf::int32 add_offset_;
  ::google::protobuf::int32 limit_;
  ::google::protobuf::int32 max_id_;
  ::google::protobuf::int32 min_id_;
  mutable int _cached_size_;
  friend struct protobuf_schema_2etl_2esync_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TL_initConnectionLayer68 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtproto.TL_initConnectionLayer68) */ {
 public:
  TL_initConnectionLayer68();
  virtual ~TL_initConnectionLayer68();

  TL_initConnectionLayer68(const TL_initConnectionLayer68& from);

  inline TL_initConnectionLayer68& operator=(const TL_initConnectionLayer68& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TL_initConnectionLayer68(TL_initConnectionLayer68&& from) noexcept
    : TL_initConnectionLayer68() {
    *this = ::std::move(from);
  }

  inline TL_initConnectionLayer68& operator=(TL_initConnectionLayer68&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TL_initConnectionLayer68& default_instance();

  static inline const TL_initConnectionLayer68* internal_default_instance() {
    return reinterpret_cast<const TL_initConnectionLayer68*>(
               &_TL_initConnectionLayer68_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    8;

  void Swap(TL_initConnectionLayer68* other);
  friend void swap(TL_initConnectionLayer68& a, TL_initConnectionLayer68& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TL_initConnectionLayer68* New() const PROTOBUF_FINAL { return New(NULL); }

  TL_initConnectionLayer68* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TL_initConnectionLayer68* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string device_model = 2;
  void clear_device_model();
  static const int kDeviceModelFieldNumber = 2;
  const ::std::string& device_model() const;
  void set_device_model(const ::std::string& value);
  #if LANG_CXX11
  void set_device_model(::std::string&& value);
  #endif
  void set_device_model(const char* value);
  void set_device_model(const char* value, size_t size);
  ::std::string* mutable_device_model();
  ::std::string* release_device_model();
  void set_allocated_device_model(::std::string* device_model);

  // string system_version = 3;
  void clear_system_version();
  static const int kSystemVersionFieldNumber = 3;
  const ::std::string& system_version() const;
  void set_system_version(const ::std::string& value);
  #if LANG_CXX11
  void set_system_version(::std::string&& value);
  #endif
  void set_system_version(const char* value);
  void set_system_version(const char* value, size_t size);
  ::std::string* mutable_system_version();
  ::std::string* release_system_version();
  void set_allocated_system_version(::std::string* system_version);

  // string app_version = 4;
  void clear_app_version();
  static const int kAppVersionFieldNumber = 4;
  const ::std::string& app_version() const;
  void set_app_version(const ::std::string& value);
  #if LANG_CXX11
  void set_app_version(::std::string&& value);
  #endif
  void set_app_version(const char* value);
  void set_app_version(const char* value, size_t size);
  ::std::string* mutable_app_version();
  ::std::string* release_app_version();
  void set_allocated_app_version(::std::string* app_version);

  // string system_lang_code = 5;
  void clear_system_lang_code();
  static const int kSystemLangCodeFieldNumber = 5;
  const ::std::string& system_lang_code() const;
  void set_system_lang_code(const ::std::string& value);
  #if LANG_CXX11
  void set_system_lang_code(::std::string&& value);
  #endif
  void set_system_lang_code(const char* value);
  void set_system_lang_code(const char* value, size_t size);
  ::std::string* mutable_system_lang_code();
  ::std::string* release_system_lang_code();
  void set_allocated_system_lang_code(::std::string* system_lang_code);

  // string lang_pack = 6;
  void clear_lang_pack();
  static const int kLangPackFieldNumber = 6;
  const ::std::string& lang_pack() const;
  void set_lang_pack(const ::std::string& value);
  #if LANG_CXX11
  void set_lang_pack(::std::string&& value);
  #endif
  void set_lang_pack(const char* value);
  void set_lang_pack(const char* value, size_t size);
  ::std::string* mutable_lang_pack();
  ::std::string* release_lang_pack();
  void set_allocated_lang_pack(::std::string* lang_pack);

  // string lang_code = 7;
  void clear_lang_code();
  static const int kLangCodeFieldNumber = 7;
  const ::std::string& lang_code() const;
  void set_lang_code(const ::std::string& value);
  #if LANG_CXX11
  void set_lang_code(::std::string&& value);
  #endif
  void set_lang_code(const char* value);
  void set_lang_code(const char* value, size_t size);
  ::std::string* mutable_lang_code();
  ::std::string* release_lang_code();
  void set_allocated_lang_code(::std::string* lang_code);

  // bytes query = 8;
  void clear_query();
  static const int kQueryFieldNumber = 8;
  const ::std::string& query() const;
  void set_query(const ::std::string& value);
  #if LANG_CXX11
  void set_query(::std::string&& value);
  #endif
  void set_query(const char* value);
  void set_query(const void* value, size_t size);
  ::std::string* mutable_query();
  ::std::string* release_query();
  void set_allocated_query(::std::string* query);

  // int32 api_id = 1;
  void clear_api_id();
  static const int kApiIdFieldNumber = 1;
  ::google::protobuf::int32 api_id() const;
  void set_api_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:mtproto.TL_initConnectionLayer68)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr device_model_;
  ::google::protobuf::internal::ArenaStringPtr system_version_;
  ::google::protobuf::internal::ArenaStringPtr app_version_;
  ::google::protobuf::internal::ArenaStringPtr system_lang_code_;
  ::google::protobuf::internal::ArenaStringPtr lang_pack_;
  ::google::protobuf::internal::ArenaStringPtr lang_code_;
  ::google::protobuf::internal::ArenaStringPtr query_;
  ::google::protobuf::int32 api_id_;
  mutable int _cached_size_;
  friend struct protobuf_schema_2etl_2esync_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TL_messages_searchLayer68 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtproto.TL_messages_searchLayer68) */ {
 public:
  TL_messages_searchLayer68();
  virtual ~TL_messages_searchLayer68();

  TL_messages_searchLayer68(const TL_messages_searchLayer68& from);

  inline TL_messages_searchLayer68& operator=(const TL_messages_searchLayer68& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TL_messages_searchLayer68(TL_messages_searchLayer68&& from) noexcept
    : TL_messages_searchLayer68() {
    *this = ::std::move(from);
  }

  inline TL_messages_searchLayer68& operator=(TL_messages_searchLayer68&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TL_messages_searchLayer68& default_instance();

  static inline const TL_messages_searchLayer68* internal_default_instance() {
    return reinterpret_cast<const TL_messages_searchLayer68*>(
               &_TL_messages_searchLayer68_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    9;

  void Swap(TL_messages_searchLayer68* other);
  friend void swap(TL_messages_searchLayer68& a, TL_messages_searchLayer68& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TL_messages_searchLayer68* New() const PROTOBUF_FINAL { return New(NULL); }

  TL_messages_searchLayer68* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TL_messages_searchLayer68* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string q = 3;
  void clear_q();
  static const int kQFieldNumber = 3;
  const ::std::string& q() const;
  void set_q(const ::std::string& value);
  #if LANG_CXX11
  void set_q(::std::string&& value);
  #endif
  void set_q(const char* value);
  void set_q(const char* value, size_t size);
  ::std::string* mutable_q();
  ::std::string* release_q();
  void set_allocated_q(::std::string* q);

  // .mtproto.InputPeer peer = 2;
  bool has_peer() const;
  void clear_peer();
  static const int kPeerFieldNumber = 2;
  const ::mtproto::InputPeer& peer() const;
  ::mtproto::InputPeer* mutable_peer();
  ::mtproto::InputPeer* release_peer();
  void set_allocated_peer(::mtproto::InputPeer* peer);

  // .mtproto.InputUser from_id = 4;
  bool has_from_id() const;
  void clear_from_id();
  static const int kFromIdFieldNumber = 4;
  const ::mtproto::InputUser& from_id() const;
  ::mtproto::InputUser* mutable_from_id();
  ::mtproto::InputUser* release_from_id();
  void set_allocated_from_id(::mtproto::InputUser* from_id);

  // .mtproto.MessagesFilter filter = 5;
  bool has_filter() const;
  void clear_filter();
  static const int kFilterFieldNumber = 5;
  const ::mtproto::MessagesFilter& filter() const;
  ::mtproto::MessagesFilter* mutable_filter();
  ::mtproto::MessagesFilter* release_filter();
  void set_allocated_filter(::mtproto::MessagesFilter* filter);

  // int32 min_date = 6;
  void clear_min_date();
  static const int kMinDateFieldNumber = 6;
  ::google::protobuf::int32 min_date() const;
  void set_min_date(::google::protobuf::int32 value);

  // int32 max_date = 7;
  void clear_max_date();
  static const int kMaxDateFieldNumber = 7;
  ::google::protobuf::int32 max_date() const;
  void set_max_date(::google::protobuf::int32 value);

  // int32 offset = 8;
  void clear_offset();
  static const int kOffsetFieldNumber = 8;
  ::google::protobuf::int32 offset() const;
  void set_offset(::google::protobuf::int32 value);

  // int32 max_id = 9;
  void clear_max_id();
  static const int kMaxIdFieldNumber = 9;
  ::google::protobuf::int32 max_id() const;
  void set_max_id(::google::protobuf::int32 value);

  // int32 limit = 10;
  void clear_limit();
  static const int kLimitFieldNumber = 10;
  ::google::protobuf::int32 limit() const;
  void set_limit(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:mtproto.TL_messages_searchLayer68)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr q_;
  ::mtproto::InputPeer* peer_;
  ::mtproto::InputUser* from_id_;
  ::mtproto::MessagesFilter* filter_;
  ::google::protobuf::int32 min_date_;
  ::google::protobuf::int32 max_date_;
  ::google::protobuf::int32 offset_;
  ::google::protobuf::int32 max_id_;
  ::google::protobuf::int32 limit_;
  mutable int _cached_size_;
  friend struct protobuf_schema_2etl_2esync_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TL_account_registerDeviceLayer71 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtproto.TL_account_registerDeviceLayer71) */ {
 public:
  TL_account_registerDeviceLayer71();
  virtual ~TL_account_registerDeviceLayer71();

  TL_account_registerDeviceLayer71(const TL_account_registerDeviceLayer71& from);

  inline TL_account_registerDeviceLayer71& operator=(const TL_account_registerDeviceLayer71& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TL_account_registerDeviceLayer71(TL_account_registerDeviceLayer71&& from) noexcept
    : TL_account_registerDeviceLayer71() {
    *this = ::std::move(from);
  }

  inline TL_account_registerDeviceLayer71& operator=(TL_account_registerDeviceLayer71&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TL_account_registerDeviceLayer71& default_instance();

  static inline const TL_account_registerDeviceLayer71* internal_default_instance() {
    return reinterpret_cast<const TL_account_registerDeviceLayer71*>(
               &_TL_account_registerDeviceLayer71_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    10;

  void Swap(TL_account_registerDeviceLayer71* other);
  friend void swap(TL_account_registerDeviceLayer71& a, TL_account_registerDeviceLayer71& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TL_account_registerDeviceLayer71* New() const PROTOBUF_FINAL { return New(NULL); }

  TL_account_registerDeviceLayer71* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TL_account_registerDeviceLayer71* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string token = 2;
  void clear_token();
  static const int kTokenFieldNumber = 2;
  const ::std::string& token() const;
  void set_token(const ::std::string& value);
  #if LANG_CXX11
  void set_token(::std::string&& value);
  #endif
  void set_token(const char* value);
  void set_token(const char* value, size_t size);
  ::std::string* mutable_token();
  ::std::string* release_token();
  void set_allocated_token(::std::string* token);

  // int32 token_type = 1;
  void clear_token_type();
  static const int kTokenTypeFieldNumber = 1;
  ::google::protobuf::int32 token_type() const;
  void set_token_type(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:mtproto.TL_account_registerDeviceLayer71)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr token_;
  ::google::protobuf::int32 token_type_;
  mutable int _cached_size_;
  friend struct protobuf_schema_2etl_2esync_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TL_account_unregisterDeviceLayer71 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtproto.TL_account_unregisterDeviceLayer71) */ {
 public:
  TL_account_unregisterDeviceLayer71();
  virtual ~TL_account_unregisterDeviceLayer71();

  TL_account_unregisterDeviceLayer71(const TL_account_unregisterDeviceLayer71& from);

  inline TL_account_unregisterDeviceLayer71& operator=(const TL_account_unregisterDeviceLayer71& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TL_account_unregisterDeviceLayer71(TL_account_unregisterDeviceLayer71&& from) noexcept
    : TL_account_unregisterDeviceLayer71() {
    *this = ::std::move(from);
  }

  inline TL_account_unregisterDeviceLayer71& operator=(TL_account_unregisterDeviceLayer71&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TL_account_unregisterDeviceLayer71& default_instance();

  static inline const TL_account_unregisterDeviceLayer71* internal_default_instance() {
    return reinterpret_cast<const TL_account_unregisterDeviceLayer71*>(
               &_TL_account_unregisterDeviceLayer71_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    11;

  void Swap(TL_account_unregisterDeviceLayer71* other);
  friend void swap(TL_account_unregisterDeviceLayer71& a, TL_account_unregisterDeviceLayer71& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TL_account_unregisterDeviceLayer71* New() const PROTOBUF_FINAL { return New(NULL); }

  TL_account_unregisterDeviceLayer71* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TL_account_unregisterDeviceLayer71* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string token = 2;
  void clear_token();
  static const int kTokenFieldNumber = 2;
  const ::std::string& token() const;
  void set_token(const ::std::string& value);
  #if LANG_CXX11
  void set_token(::std::string&& value);
  #endif
  void set_token(const char* value);
  void set_token(const char* value, size_t size);
  ::std::string* mutable_token();
  ::std::string* release_token();
  void set_allocated_token(::std::string* token);

  // int32 token_type = 1;
  void clear_token_type();
  static const int kTokenTypeFieldNumber = 1;
  ::google::protobuf::int32 token_type() const;
  void set_token_type(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:mtproto.TL_account_unregisterDeviceLayer71)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr token_;
  ::google::protobuf::int32 token_type_;
  mutable int _cached_size_;
  friend struct protobuf_schema_2etl_2esync_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TL_langpack_getLangPackLayer71 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtproto.TL_langpack_getLangPackLayer71) */ {
 public:
  TL_langpack_getLangPackLayer71();
  virtual ~TL_langpack_getLangPackLayer71();

  TL_langpack_getLangPackLayer71(const TL_langpack_getLangPackLayer71& from);

  inline TL_langpack_getLangPackLayer71& operator=(const TL_langpack_getLangPackLayer71& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TL_langpack_getLangPackLayer71(TL_langpack_getLangPackLayer71&& from) noexcept
    : TL_langpack_getLangPackLayer71() {
    *this = ::std::move(from);
  }

  inline TL_langpack_getLangPackLayer71& operator=(TL_langpack_getLangPackLayer71&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TL_langpack_getLangPackLayer71& default_instance();

  static inline const TL_langpack_getLangPackLayer71* internal_default_instance() {
    return reinterpret_cast<const TL_langpack_getLangPackLayer71*>(
               &_TL_langpack_getLangPackLayer71_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    12;

  void Swap(TL_langpack_getLangPackLayer71* other);
  friend void swap(TL_langpack_getLangPackLayer71& a, TL_langpack_getLangPackLayer71& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TL_langpack_getLangPackLayer71* New() const PROTOBUF_FINAL { return New(NULL); }

  TL_langpack_getLangPackLayer71* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TL_langpack_getLangPackLayer71* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string lang_code = 1;
  void clear_lang_code();
  static const int kLangCodeFieldNumber = 1;
  const ::std::string& lang_code() const;
  void set_lang_code(const ::std::string& value);
  #if LANG_CXX11
  void set_lang_code(::std::string&& value);
  #endif
  void set_lang_code(const char* value);
  void set_lang_code(const char* value, size_t size);
  ::std::string* mutable_lang_code();
  ::std::string* release_lang_code();
  void set_allocated_lang_code(::std::string* lang_code);

  // @@protoc_insertion_point(class_scope:mtproto.TL_langpack_getLangPackLayer71)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr lang_code_;
  mutable int _cached_size_;
  friend struct protobuf_schema_2etl_2esync_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TL_invokeAfterMsg : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtproto.TL_invokeAfterMsg) */ {
 public:
  TL_invokeAfterMsg();
  virtual ~TL_invokeAfterMsg();

  TL_invokeAfterMsg(const TL_invokeAfterMsg& from);

  inline TL_invokeAfterMsg& operator=(const TL_invokeAfterMsg& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TL_invokeAfterMsg(TL_invokeAfterMsg&& from) noexcept
    : TL_invokeAfterMsg() {
    *this = ::std::move(from);
  }

  inline TL_invokeAfterMsg& operator=(TL_invokeAfterMsg&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TL_invokeAfterMsg& default_instance();

  static inline const TL_invokeAfterMsg* internal_default_instance() {
    return reinterpret_cast<const TL_invokeAfterMsg*>(
               &_TL_invokeAfterMsg_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    13;

  void Swap(TL_invokeAfterMsg* other);
  friend void swap(TL_invokeAfterMsg& a, TL_invokeAfterMsg& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TL_invokeAfterMsg* New() const PROTOBUF_FINAL { return New(NULL); }

  TL_invokeAfterMsg* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TL_invokeAfterMsg* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes query = 2;
  void clear_query();
  static const int kQueryFieldNumber = 2;
  const ::std::string& query() const;
  void set_query(const ::std::string& value);
  #if LANG_CXX11
  void set_query(::std::string&& value);
  #endif
  void set_query(const char* value);
  void set_query(const void* value, size_t size);
  ::std::string* mutable_query();
  ::std::string* release_query();
  void set_allocated_query(::std::string* query);

  // int64 msg_id = 1;
  void clear_msg_id();
  static const int kMsgIdFieldNumber = 1;
  ::google::protobuf::int64 msg_id() const;
  void set_msg_id(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:mtproto.TL_invokeAfterMsg)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr query_;
  ::google::protobuf::int64 msg_id_;
  mutable int _cached_size_;
  friend struct protobuf_schema_2etl_2esync_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TL_invokeAfterMsgs : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtproto.TL_invokeAfterMsgs) */ {
 public:
  TL_invokeAfterMsgs();
  virtual ~TL_invokeAfterMsgs();

  TL_invokeAfterMsgs(const TL_invokeAfterMsgs& from);

  inline TL_invokeAfterMsgs& operator=(const TL_invokeAfterMsgs& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TL_invokeAfterMsgs(TL_invokeAfterMsgs&& from) noexcept
    : TL_invokeAfterMsgs() {
    *this = ::std::move(from);
  }

  inline TL_invokeAfterMsgs& operator=(TL_invokeAfterMsgs&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TL_invokeAfterMsgs& default_instance();

  static inline const TL_invokeAfterMsgs* internal_default_instance() {
    return reinterpret_cast<const TL_invokeAfterMsgs*>(
               &_TL_invokeAfterMsgs_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    14;

  void Swap(TL_invokeAfterMsgs* other);
  friend void swap(TL_invokeAfterMsgs& a, TL_invokeAfterMsgs& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TL_invokeAfterMsgs* New() const PROTOBUF_FINAL { return New(NULL); }

  TL_invokeAfterMsgs* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TL_invokeAfterMsgs* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int64 msg_ids = 1;
  int msg_ids_size() const;
  void clear_msg_ids();
  static const int kMsgIdsFieldNumber = 1;
  ::google::protobuf::int64 msg_ids(int index) const;
  void set_msg_ids(int index, ::google::protobuf::int64 value);
  void add_msg_ids(::google::protobuf::int64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      msg_ids() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_msg_ids();

  // bytes query = 2;
  void clear_query();
  static const int kQueryFieldNumber = 2;
  const ::std::string& query() const;
  void set_query(const ::std::string& value);
  #if LANG_CXX11
  void set_query(::std::string&& value);
  #endif
  void set_query(const char* value);
  void set_query(const void* value, size_t size);
  ::std::string* mutable_query();
  ::std::string* release_query();
  void set_allocated_query(::std::string* query);

  // @@protoc_insertion_point(class_scope:mtproto.TL_invokeAfterMsgs)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > msg_ids_;
  ::google::protobuf::internal::ArenaStringPtr query_;
  mutable int _cached_size_;
  friend struct protobuf_schema_2etl_2esync_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TL_initConnection : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtproto.TL_initConnection) */ {
 public:
  TL_initConnection();
  virtual ~TL_initConnection();

  TL_initConnection(const TL_initConnection& from);

  inline TL_initConnection& operator=(const TL_initConnection& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TL_initConnection(TL_initConnection&& from) noexcept
    : TL_initConnection() {
    *this = ::std::move(from);
  }

  inline TL_initConnection& operator=(TL_initConnection&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TL_initConnection& default_instance();

  static inline const TL_initConnection* internal_default_instance() {
    return reinterpret_cast<const TL_initConnection*>(
               &_TL_initConnection_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    15;

  void Swap(TL_initConnection* other);
  friend void swap(TL_initConnection& a, TL_initConnection& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TL_initConnection* New() const PROTOBUF_FINAL { return New(NULL); }

  TL_initConnection* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TL_initConnection* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string device_model = 3;
  void clear_device_model();
  static const int kDeviceModelFieldNumber = 3;
  const ::std::string& device_model() const;
  void set_device_model(const ::std::string& value);
  #if LANG_CXX11
  void set_device_model(::std::string&& value);
  #endif
  void set_device_model(const char* value);
  void set_device_model(const char* value, size_t size);
  ::std::string* mutable_device_model();
  ::std::string* release_device_model();
  void set_allocated_device_model(::std::string* device_model);

  // string system_version = 4;
  void clear_system_version();
  static const int kSystemVersionFieldNumber = 4;
  const ::std::string& system_version() const;
  void set_system_version(const ::std::string& value);
  #if LANG_CXX11
  void set_system_version(::std::string&& value);
  #endif
  void set_system_version(const char* value);
  void set_system_version(const char* value, size_t size);
  ::std::string* mutable_system_version();
  ::std::string* release_system_version();
  void set_allocated_system_version(::std::string* system_version);

  // string app_version = 5;
  void clear_app_version();
  static const int kAppVersionFieldNumber = 5;
  const ::std::string& app_version() const;
  void set_app_version(const ::std::string& value);
  #if LANG_CXX11
  void set_app_version(::std::string&& value);
  #endif
  void set_app_version(const char* value);
  void set_app_version(const char* value, size_t size);
  ::std::string* mutable_app_version();
  ::std::string* release_app_version();
  void set_allocated_app_version(::std::string* app_version);

  // string system_lang_code = 6;
  void clear_system_lang_code();
  static const int kSystemLangCodeFieldNumber = 6;
  const ::std::string& system_lang_code() const;
  void set_system_lang_code(const ::std::string& value);
  #if LANG_CXX11
  void set_system_lang_code(::std::string&& value);
  #endif
  void set_system_lang_code(const char* value);
  void set_system_lang_code(const char* value, size_t size);
  ::std::string* mutable_system_lang_code();
  ::std::string* release_system_lang_code();
  void set_allocated_system_lang_code(::std::string* system_lang_code);

  // string lang_pack = 7;
  void clear_lang_pack();
  static const int kLangPackFieldNumber = 7;
  const ::std::string& lang_pack() const;
  void set_lang_pack(const ::std::string& value);
  #if LANG_CXX11
  void set_lang_pack(::std::string&& value);
  #endif
  void set_lang_pack(const char* value);
  void set_lang_pack(const char* value, size_t size);
  ::std::string* mutable_lang_pack();
  ::std::string* release_lang_pack();
  void set_allocated_lang_pack(::std::string* lang_pack);

  // string lang_code = 8;
  void clear_lang_code();
  static const int kLangCodeFieldNumber = 8;
  const ::std::string& lang_code() const;
  void set_lang_code(const ::std::string& value);
  #if LANG_CXX11
  void set_lang_code(::std::string&& value);
  #endif
  void set_lang_code(const char* value);
  void set_lang_code(const char* value, size_t size);
  ::std::string* mutable_lang_code();
  ::std::string* release_lang_code();
  void set_allocated_lang_code(::std::string* lang_code);

  // bytes query = 10;
  void clear_query();
  static const int kQueryFieldNumber = 10;
  const ::std::string& query() const;
  void set_query(const ::std::string& value);
  #if LANG_CXX11
  void set_query(::std::string&& value);
  #endif
  void set_query(const char* value);
  void set_query(const void* value, size_t size);
  ::std::string* mutable_query();
  ::std::string* release_query();
  void set_allocated_query(::std::string* query);

  // .mtproto.InputClientProxy proxy = 9;
  bool has_proxy() const;
  void clear_proxy();
  static const int kProxyFieldNumber = 9;
  const ::mtproto::InputClientProxy& proxy() const;
  ::mtproto::InputClientProxy* mutable_proxy();
  ::mtproto::InputClientProxy* release_proxy();
  void set_allocated_proxy(::mtproto::InputClientProxy* proxy);

  // int32 api_id = 2;
  void clear_api_id();
  static const int kApiIdFieldNumber = 2;
  ::google::protobuf::int32 api_id() const;
  void set_api_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:mtproto.TL_initConnection)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr device_model_;
  ::google::protobuf::internal::ArenaStringPtr system_version_;
  ::google::protobuf::internal::ArenaStringPtr app_version_;
  ::google::protobuf::internal::ArenaStringPtr system_lang_code_;
  ::google::protobuf::internal::ArenaStringPtr lang_pack_;
  ::google::protobuf::internal::ArenaStringPtr lang_code_;
  ::google::protobuf::internal::ArenaStringPtr query_;
  ::mtproto::InputClientProxy* proxy_;
  ::google::protobuf::int32 api_id_;
  mutable int _cached_size_;
  friend struct protobuf_schema_2etl_2esync_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TL_invokeWithLayer : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtproto.TL_invokeWithLayer) */ {
 public:
  TL_invokeWithLayer();
  virtual ~TL_invokeWithLayer();

  TL_invokeWithLayer(const TL_invokeWithLayer& from);

  inline TL_invokeWithLayer& operator=(const TL_invokeWithLayer& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TL_invokeWithLayer(TL_invokeWithLayer&& from) noexcept
    : TL_invokeWithLayer() {
    *this = ::std::move(from);
  }

  inline TL_invokeWithLayer& operator=(TL_invokeWithLayer&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TL_invokeWithLayer& default_instance();

  static inline const TL_invokeWithLayer* internal_default_instance() {
    return reinterpret_cast<const TL_invokeWithLayer*>(
               &_TL_invokeWithLayer_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    16;

  void Swap(TL_invokeWithLayer* other);
  friend void swap(TL_invokeWithLayer& a, TL_invokeWithLayer& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TL_invokeWithLayer* New() const PROTOBUF_FINAL { return New(NULL); }

  TL_invokeWithLayer* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TL_invokeWithLayer* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes query = 2;
  void clear_query();
  static const int kQueryFieldNumber = 2;
  const ::std::string& query() const;
  void set_query(const ::std::string& value);
  #if LANG_CXX11
  void set_query(::std::string&& value);
  #endif
  void set_query(const char* value);
  void set_query(const void* value, size_t size);
  ::std::string* mutable_query();
  ::std::string* release_query();
  void set_allocated_query(::std::string* query);

  // int32 layer = 1;
  void clear_layer();
  static const int kLayerFieldNumber = 1;
  ::google::protobuf::int32 layer() const;
  void set_layer(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:mtproto.TL_invokeWithLayer)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr query_;
  ::google::protobuf::int32 layer_;
  mutable int _cached_size_;
  friend struct protobuf_schema_2etl_2esync_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TL_invokeWithoutUpdates : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtproto.TL_invokeWithoutUpdates) */ {
 public:
  TL_invokeWithoutUpdates();
  virtual ~TL_invokeWithoutUpdates();

  TL_invokeWithoutUpdates(const TL_invokeWithoutUpdates& from);

  inline TL_invokeWithoutUpdates& operator=(const TL_invokeWithoutUpdates& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TL_invokeWithoutUpdates(TL_invokeWithoutUpdates&& from) noexcept
    : TL_invokeWithoutUpdates() {
    *this = ::std::move(from);
  }

  inline TL_invokeWithoutUpdates& operator=(TL_invokeWithoutUpdates&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TL_invokeWithoutUpdates& default_instance();

  static inline const TL_invokeWithoutUpdates* internal_default_instance() {
    return reinterpret_cast<const TL_invokeWithoutUpdates*>(
               &_TL_invokeWithoutUpdates_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    17;

  void Swap(TL_invokeWithoutUpdates* other);
  friend void swap(TL_invokeWithoutUpdates& a, TL_invokeWithoutUpdates& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TL_invokeWithoutUpdates* New() const PROTOBUF_FINAL { return New(NULL); }

  TL_invokeWithoutUpdates* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TL_invokeWithoutUpdates* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes query = 1;
  void clear_query();
  static const int kQueryFieldNumber = 1;
  const ::std::string& query() const;
  void set_query(const ::std::string& value);
  #if LANG_CXX11
  void set_query(::std::string&& value);
  #endif
  void set_query(const char* value);
  void set_query(const void* value, size_t size);
  ::std::string* mutable_query();
  ::std::string* release_query();
  void set_allocated_query(::std::string* query);

  // @@protoc_insertion_point(class_scope:mtproto.TL_invokeWithoutUpdates)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr query_;
  mutable int _cached_size_;
  friend struct protobuf_schema_2etl_2esync_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TL_invokeWithMessagesRange : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtproto.TL_invokeWithMessagesRange) */ {
 public:
  TL_invokeWithMessagesRange();
  virtual ~TL_invokeWithMessagesRange();

  TL_invokeWithMessagesRange(const TL_invokeWithMessagesRange& from);

  inline TL_invokeWithMessagesRange& operator=(const TL_invokeWithMessagesRange& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TL_invokeWithMessagesRange(TL_invokeWithMessagesRange&& from) noexcept
    : TL_invokeWithMessagesRange() {
    *this = ::std::move(from);
  }

  inline TL_invokeWithMessagesRange& operator=(TL_invokeWithMessagesRange&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TL_invokeWithMessagesRange& default_instance();

  static inline const TL_invokeWithMessagesRange* internal_default_instance() {
    return reinterpret_cast<const TL_invokeWithMessagesRange*>(
               &_TL_invokeWithMessagesRange_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    18;

  void Swap(TL_invokeWithMessagesRange* other);
  friend void swap(TL_invokeWithMessagesRange& a, TL_invokeWithMessagesRange& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TL_invokeWithMessagesRange* New() const PROTOBUF_FINAL { return New(NULL); }

  TL_invokeWithMessagesRange* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TL_invokeWithMessagesRange* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes query = 2;
  void clear_query();
  static const int kQueryFieldNumber = 2;
  const ::std::string& query() const;
  void set_query(const ::std::string& value);
  #if LANG_CXX11
  void set_query(::std::string&& value);
  #endif
  void set_query(const char* value);
  void set_query(const void* value, size_t size);
  ::std::string* mutable_query();
  ::std::string* release_query();
  void set_allocated_query(::std::string* query);

  // .mtproto.MessageRange range = 1;
  bool has_range() const;
  void clear_range();
  static const int kRangeFieldNumber = 1;
  const ::mtproto::MessageRange& range() const;
  ::mtproto::MessageRange* mutable_range();
  ::mtproto::MessageRange* release_range();
  void set_allocated_range(::mtproto::MessageRange* range);

  // @@protoc_insertion_point(class_scope:mtproto.TL_invokeWithMessagesRange)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr query_;
  ::mtproto::MessageRange* range_;
  mutable int _cached_size_;
  friend struct protobuf_schema_2etl_2esync_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TL_invokeWithTakeout : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtproto.TL_invokeWithTakeout) */ {
 public:
  TL_invokeWithTakeout();
  virtual ~TL_invokeWithTakeout();

  TL_invokeWithTakeout(const TL_invokeWithTakeout& from);

  inline TL_invokeWithTakeout& operator=(const TL_invokeWithTakeout& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TL_invokeWithTakeout(TL_invokeWithTakeout&& from) noexcept
    : TL_invokeWithTakeout() {
    *this = ::std::move(from);
  }

  inline TL_invokeWithTakeout& operator=(TL_invokeWithTakeout&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TL_invokeWithTakeout& default_instance();

  static inline const TL_invokeWithTakeout* internal_default_instance() {
    return reinterpret_cast<const TL_invokeWithTakeout*>(
               &_TL_invokeWithTakeout_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    19;

  void Swap(TL_invokeWithTakeout* other);
  friend void swap(TL_invokeWithTakeout& a, TL_invokeWithTakeout& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TL_invokeWithTakeout* New() const PROTOBUF_FINAL { return New(NULL); }

  TL_invokeWithTakeout* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TL_invokeWithTakeout* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes query = 2;
  void clear_query();
  static const int kQueryFieldNumber = 2;
  const ::std::string& query() const;
  void set_query(const ::std::string& value);
  #if LANG_CXX11
  void set_query(::std::string&& value);
  #endif
  void set_query(const char* value);
  void set_query(const void* value, size_t size);
  ::std::string* mutable_query();
  ::std::string* release_query();
  void set_allocated_query(::std::string* query);

  // int64 takeout_id = 1;
  void clear_takeout_id();
  static const int kTakeoutIdFieldNumber = 1;
  ::google::protobuf::int64 takeout_id() const;
  void set_takeout_id(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:mtproto.TL_invokeWithTakeout)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr query_;
  ::google::protobuf::int64 takeout_id_;
  mutable int _cached_size_;
  friend struct protobuf_schema_2etl_2esync_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TL_auth_sendCode : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtproto.TL_auth_sendCode) */ {
 public:
  TL_auth_sendCode();
  virtual ~TL_auth_sendCode();

  TL_auth_sendCode(const TL_auth_sendCode& from);

  inline TL_auth_sendCode& operator=(const TL_auth_sendCode& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TL_auth_sendCode(TL_auth_sendCode&& from) noexcept
    : TL_auth_sendCode() {
    *this = ::std::move(from);
  }

  inline TL_auth_sendCode& operator=(TL_auth_sendCode&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TL_auth_sendCode& default_instance();

  static inline const TL_auth_sendCode* internal_default_instance() {
    return reinterpret_cast<const TL_auth_sendCode*>(
               &_TL_auth_sendCode_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    20;

  void Swap(TL_auth_sendCode* other);
  friend void swap(TL_auth_sendCode& a, TL_auth_sendCode& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TL_auth_sendCode* New() const PROTOBUF_FINAL { return New(NULL); }

  TL_auth_sendCode* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TL_auth_sendCode* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string phone_number = 3;
  void clear_phone_number();
  static const int kPhoneNumberFieldNumber = 3;
  const ::std::string& phone_number() const;
  void set_phone_number(const ::std::string& value);
  #if LANG_CXX11
  void set_phone_number(::std::string&& value);
  #endif
  void set_phone_number(const char* value);
  void set_phone_number(const char* value, size_t size);
  ::std::string* mutable_phone_number();
  ::std::string* release_phone_number();
  void set_allocated_phone_number(::std::string* phone_number);

  // string api_hash = 6;
  void clear_api_hash();
  static const int kApiHashFieldNumber = 6;
  const ::std::string& api_hash() const;
  void set_api_hash(const ::std::string& value);
  #if LANG_CXX11
  void set_api_hash(::std::string&& value);
  #endif
  void set_api_hash(const char* value);
  void set_api_hash(const char* value, size_t size);
  ::std::string* mutable_api_hash();
  ::std::string* release_api_hash();
  void set_allocated_api_hash(::std::string* api_hash);

  // .mtproto.Bool current_number = 4;
  bool has_current_number() const;
  void clear_current_number();
  static const int kCurrentNumberFieldNumber = 4;
  const ::mtproto::Bool& current_number() const;
  ::mtproto::Bool* mutable_current_number();
  ::mtproto::Bool* release_current_number();
  void set_allocated_current_number(::mtproto::Bool* current_number);

  // bool allow_flashcall = 2;
  void clear_allow_flashcall();
  static const int kAllowFlashcallFieldNumber = 2;
  bool allow_flashcall() const;
  void set_allow_flashcall(bool value);

  // int32 api_id = 5;
  void clear_api_id();
  static const int kApiIdFieldNumber = 5;
  ::google::protobuf::int32 api_id() const;
  void set_api_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:mtproto.TL_auth_sendCode)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr phone_number_;
  ::google::protobuf::internal::ArenaStringPtr api_hash_;
  ::mtproto::Bool* current_number_;
  bool allow_flashcall_;
  ::google::protobuf::int32 api_id_;
  mutable int _cached_size_;
  friend struct protobuf_schema_2etl_2esync_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TL_auth_signUp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtproto.TL_auth_signUp) */ {
 public:
  TL_auth_signUp();
  virtual ~TL_auth_signUp();

  TL_auth_signUp(const TL_auth_signUp& from);

  inline TL_auth_signUp& operator=(const TL_auth_signUp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TL_auth_signUp(TL_auth_signUp&& from) noexcept
    : TL_auth_signUp() {
    *this = ::std::move(from);
  }

  inline TL_auth_signUp& operator=(TL_auth_signUp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TL_auth_signUp& default_instance();

  static inline const TL_auth_signUp* internal_default_instance() {
    return reinterpret_cast<const TL_auth_signUp*>(
               &_TL_auth_signUp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    21;

  void Swap(TL_auth_signUp* other);
  friend void swap(TL_auth_signUp& a, TL_auth_signUp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TL_auth_signUp* New() const PROTOBUF_FINAL { return New(NULL); }

  TL_auth_signUp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TL_auth_signUp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string phone_number = 1;
  void clear_phone_number();
  static const int kPhoneNumberFieldNumber = 1;
  const ::std::string& phone_number() const;
  void set_phone_number(const ::std::string& value);
  #if LANG_CXX11
  void set_phone_number(::std::string&& value);
  #endif
  void set_phone_number(const char* value);
  void set_phone_number(const char* value, size_t size);
  ::std::string* mutable_phone_number();
  ::std::string* release_phone_number();
  void set_allocated_phone_number(::std::string* phone_number);

  // string phone_code_hash = 2;
  void clear_phone_code_hash();
  static const int kPhoneCodeHashFieldNumber = 2;
  const ::std::string& phone_code_hash() const;
  void set_phone_code_hash(const ::std::string& value);
  #if LANG_CXX11
  void set_phone_code_hash(::std::string&& value);
  #endif
  void set_phone_code_hash(const char* value);
  void set_phone_code_hash(const char* value, size_t size);
  ::std::string* mutable_phone_code_hash();
  ::std::string* release_phone_code_hash();
  void set_allocated_phone_code_hash(::std::string* phone_code_hash);

  // string phone_code = 3;
  void clear_phone_code();
  static const int kPhoneCodeFieldNumber = 3;
  const ::std::string& phone_code() const;
  void set_phone_code(const ::std::string& value);
  #if LANG_CXX11
  void set_phone_code(::std::string&& value);
  #endif
  void set_phone_code(const char* value);
  void set_phone_code(const char* value, size_t size);
  ::std::string* mutable_phone_code();
  ::std::string* release_phone_code();
  void set_allocated_phone_code(::std::string* phone_code);

  // string first_name = 4;
  void clear_first_name();
  static const int kFirstNameFieldNumber = 4;
  const ::std::string& first_name() const;
  void set_first_name(const ::std::string& value);
  #if LANG_CXX11
  void set_first_name(::std::string&& value);
  #endif
  void set_first_name(const char* value);
  void set_first_name(const char* value, size_t size);
  ::std::string* mutable_first_name();
  ::std::string* release_first_name();
  void set_allocated_first_name(::std::string* first_name);

  // string last_name = 5;
  void clear_last_name();
  static const int kLastNameFieldNumber = 5;
  const ::std::string& last_name() const;
  void set_last_name(const ::std::string& value);
  #if LANG_CXX11
  void set_last_name(::std::string&& value);
  #endif
  void set_last_name(const char* value);
  void set_last_name(const char* value, size_t size);
  ::std::string* mutable_last_name();
  ::std::string* release_last_name();
  void set_allocated_last_name(::std::string* last_name);

  // @@protoc_insertion_point(class_scope:mtproto.TL_auth_signUp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr phone_number_;
  ::google::protobuf::internal::ArenaStringPtr phone_code_hash_;
  ::google::protobuf::internal::ArenaStringPtr phone_code_;
  ::google::protobuf::internal::ArenaStringPtr first_name_;
  ::google::protobuf::internal::ArenaStringPtr last_name_;
  mutable int _cached_size_;
  friend struct protobuf_schema_2etl_2esync_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TL_auth_signIn : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtproto.TL_auth_signIn) */ {
 public:
  TL_auth_signIn();
  virtual ~TL_auth_signIn();

  TL_auth_signIn(const TL_auth_signIn& from);

  inline TL_auth_signIn& operator=(const TL_auth_signIn& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TL_auth_signIn(TL_auth_signIn&& from) noexcept
    : TL_auth_signIn() {
    *this = ::std::move(from);
  }

  inline TL_auth_signIn& operator=(TL_auth_signIn&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TL_auth_signIn& default_instance();

  static inline const TL_auth_signIn* internal_default_instance() {
    return reinterpret_cast<const TL_auth_signIn*>(
               &_TL_auth_signIn_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    22;

  void Swap(TL_auth_signIn* other);
  friend void swap(TL_auth_signIn& a, TL_auth_signIn& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TL_auth_signIn* New() const PROTOBUF_FINAL { return New(NULL); }

  TL_auth_signIn* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TL_auth_signIn* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string phone_number = 1;
  void clear_phone_number();
  static const int kPhoneNumberFieldNumber = 1;
  const ::std::string& phone_number() const;
  void set_phone_number(const ::std::string& value);
  #if LANG_CXX11
  void set_phone_number(::std::string&& value);
  #endif
  void set_phone_number(const char* value);
  void set_phone_number(const char* value, size_t size);
  ::std::string* mutable_phone_number();
  ::std::string* release_phone_number();
  void set_allocated_phone_number(::std::string* phone_number);

  // string phone_code_hash = 2;
  void clear_phone_code_hash();
  static const int kPhoneCodeHashFieldNumber = 2;
  const ::std::string& phone_code_hash() const;
  void set_phone_code_hash(const ::std::string& value);
  #if LANG_CXX11
  void set_phone_code_hash(::std::string&& value);
  #endif
  void set_phone_code_hash(const char* value);
  void set_phone_code_hash(const char* value, size_t size);
  ::std::string* mutable_phone_code_hash();
  ::std::string* release_phone_code_hash();
  void set_allocated_phone_code_hash(::std::string* phone_code_hash);

  // string phone_code = 3;
  void clear_phone_code();
  static const int kPhoneCodeFieldNumber = 3;
  const ::std::string& phone_code() const;
  void set_phone_code(const ::std::string& value);
  #if LANG_CXX11
  void set_phone_code(::std::string&& value);
  #endif
  void set_phone_code(const char* value);
  void set_phone_code(const char* value, size_t size);
  ::std::string* mutable_phone_code();
  ::std::string* release_phone_code();
  void set_allocated_phone_code(::std::string* phone_code);

  // @@protoc_insertion_point(class_scope:mtproto.TL_auth_signIn)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr phone_number_;
  ::google::protobuf::internal::ArenaStringPtr phone_code_hash_;
  ::google::protobuf::internal::ArenaStringPtr phone_code_;
  mutable int _cached_size_;
  friend struct protobuf_schema_2etl_2esync_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TL_auth_logOut : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtproto.TL_auth_logOut) */ {
 public:
  TL_auth_logOut();
  virtual ~TL_auth_logOut();

  TL_auth_logOut(const TL_auth_logOut& from);

  inline TL_auth_logOut& operator=(const TL_auth_logOut& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TL_auth_logOut(TL_auth_logOut&& from) noexcept
    : TL_auth_logOut() {
    *this = ::std::move(from);
  }

  inline TL_auth_logOut& operator=(TL_auth_logOut&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TL_auth_logOut& default_instance();

  static inline const TL_auth_logOut* internal_default_instance() {
    return reinterpret_cast<const TL_auth_logOut*>(
               &_TL_auth_logOut_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    23;

  void Swap(TL_auth_logOut* other);
  friend void swap(TL_auth_logOut& a, TL_auth_logOut& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TL_auth_logOut* New() const PROTOBUF_FINAL { return New(NULL); }

  TL_auth_logOut* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TL_auth_logOut* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:mtproto.TL_auth_logOut)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable int _cached_size_;
  friend struct protobuf_schema_2etl_2esync_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TL_auth_resetAuthorizations : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtproto.TL_auth_resetAuthorizations) */ {
 public:
  TL_auth_resetAuthorizations();
  virtual ~TL_auth_resetAuthorizations();

  TL_auth_resetAuthorizations(const TL_auth_resetAuthorizations& from);

  inline TL_auth_resetAuthorizations& operator=(const TL_auth_resetAuthorizations& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TL_auth_resetAuthorizations(TL_auth_resetAuthorizations&& from) noexcept
    : TL_auth_resetAuthorizations() {
    *this = ::std::move(from);
  }

  inline TL_auth_resetAuthorizations& operator=(TL_auth_resetAuthorizations&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TL_auth_resetAuthorizations& default_instance();

  static inline const TL_auth_resetAuthorizations* internal_default_instance() {
    return reinterpret_cast<const TL_auth_resetAuthorizations*>(
               &_TL_auth_resetAuthorizations_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    24;

  void Swap(TL_auth_resetAuthorizations* other);
  friend void swap(TL_auth_resetAuthorizations& a, TL_auth_resetAuthorizations& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TL_auth_resetAuthorizations* New() const PROTOBUF_FINAL { return New(NULL); }

  TL_auth_resetAuthorizations* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TL_auth_resetAuthorizations* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:mtproto.TL_auth_resetAuthorizations)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable int _cached_size_;
  friend struct protobuf_schema_2etl_2esync_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TL_auth_exportAuthorization : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtproto.TL_auth_exportAuthorization) */ {
 public:
  TL_auth_exportAuthorization();
  virtual ~TL_auth_exportAuthorization();

  TL_auth_exportAuthorization(const TL_auth_exportAuthorization& from);

  inline TL_auth_exportAuthorization& operator=(const TL_auth_exportAuthorization& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TL_auth_exportAuthorization(TL_auth_exportAuthorization&& from) noexcept
    : TL_auth_exportAuthorization() {
    *this = ::std::move(from);
  }

  inline TL_auth_exportAuthorization& operator=(TL_auth_exportAuthorization&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TL_auth_exportAuthorization& default_instance();

  static inline const TL_auth_exportAuthorization* internal_default_instance() {
    return reinterpret_cast<const TL_auth_exportAuthorization*>(
               &_TL_auth_exportAuthorization_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    25;

  void Swap(TL_auth_exportAuthorization* other);
  friend void swap(TL_auth_exportAuthorization& a, TL_auth_exportAuthorization& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TL_auth_exportAuthorization* New() const PROTOBUF_FINAL { return New(NULL); }

  TL_auth_exportAuthorization* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TL_auth_exportAuthorization* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 dc_id = 1;
  void clear_dc_id();
  static const int kDcIdFieldNumber = 1;
  ::google::protobuf::int32 dc_id() const;
  void set_dc_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:mtproto.TL_auth_exportAuthorization)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 dc_id_;
  mutable int _cached_size_;
  friend struct protobuf_schema_2etl_2esync_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TL_auth_importAuthorization : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtproto.TL_auth_importAuthorization) */ {
 public:
  TL_auth_importAuthorization();
  virtual ~TL_auth_importAuthorization();

  TL_auth_importAuthorization(const TL_auth_importAuthorization& from);

  inline TL_auth_importAuthorization& operator=(const TL_auth_importAuthorization& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TL_auth_importAuthorization(TL_auth_importAuthorization&& from) noexcept
    : TL_auth_importAuthorization() {
    *this = ::std::move(from);
  }

  inline TL_auth_importAuthorization& operator=(TL_auth_importAuthorization&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TL_auth_importAuthorization& default_instance();

  static inline const TL_auth_importAuthorization* internal_default_instance() {
    return reinterpret_cast<const TL_auth_importAuthorization*>(
               &_TL_auth_importAuthorization_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    26;

  void Swap(TL_auth_importAuthorization* other);
  friend void swap(TL_auth_importAuthorization& a, TL_auth_importAuthorization& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TL_auth_importAuthorization* New() const PROTOBUF_FINAL { return New(NULL); }

  TL_auth_importAuthorization* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TL_auth_importAuthorization* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes bytes = 2;
  void clear_bytes();
  static const int kBytesFieldNumber = 2;
  const ::std::string& bytes() const;
  void set_bytes(const ::std::string& value);
  #if LANG_CXX11
  void set_bytes(::std::string&& value);
  #endif
  void set_bytes(const char* value);
  void set_bytes(const void* value, size_t size);
  ::std::string* mutable_bytes();
  ::std::string* release_bytes();
  void set_allocated_bytes(::std::string* bytes);

  // int32 id = 1;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::int32 id() const;
  void set_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:mtproto.TL_auth_importAuthorization)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr bytes_;
  ::google::protobuf::int32 id_;
  mutable int _cached_size_;
  friend struct protobuf_schema_2etl_2esync_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TL_auth_bindTempAuthKey : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtproto.TL_auth_bindTempAuthKey) */ {
 public:
  TL_auth_bindTempAuthKey();
  virtual ~TL_auth_bindTempAuthKey();

  TL_auth_bindTempAuthKey(const TL_auth_bindTempAuthKey& from);

  inline TL_auth_bindTempAuthKey& operator=(const TL_auth_bindTempAuthKey& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TL_auth_bindTempAuthKey(TL_auth_bindTempAuthKey&& from) noexcept
    : TL_auth_bindTempAuthKey() {
    *this = ::std::move(from);
  }

  inline TL_auth_bindTempAuthKey& operator=(TL_auth_bindTempAuthKey&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TL_auth_bindTempAuthKey& default_instance();

  static inline const TL_auth_bindTempAuthKey* internal_default_instance() {
    return reinterpret_cast<const TL_auth_bindTempAuthKey*>(
               &_TL_auth_bindTempAuthKey_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    27;

  void Swap(TL_auth_bindTempAuthKey* other);
  friend void swap(TL_auth_bindTempAuthKey& a, TL_auth_bindTempAuthKey& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TL_auth_bindTempAuthKey* New() const PROTOBUF_FINAL { return New(NULL); }

  TL_auth_bindTempAuthKey* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TL_auth_bindTempAuthKey* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes encrypted_message = 4;
  void clear_encrypted_message();
  static const int kEncryptedMessageFieldNumber = 4;
  const ::std::string& encrypted_message() const;
  void set_encrypted_message(const ::std::string& value);
  #if LANG_CXX11
  void set_encrypted_message(::std::string&& value);
  #endif
  void set_encrypted_message(const char* value);
  void set_encrypted_message(const void* value, size_t size);
  ::std::string* mutable_encrypted_message();
  ::std::string* release_encrypted_message();
  void set_allocated_encrypted_message(::std::string* encrypted_message);

  // int64 perm_auth_key_id = 1;
  void clear_perm_auth_key_id();
  static const int kPermAuthKeyIdFieldNumber = 1;
  ::google::protobuf::int64 perm_auth_key_id() const;
  void set_perm_auth_key_id(::google::protobuf::int64 value);

  // int64 nonce = 2;
  void clear_nonce();
  static const int kNonceFieldNumber = 2;
  ::google::protobuf::int64 nonce() const;
  void set_nonce(::google::protobuf::int64 value);

  // int32 expires_at = 3;
  void clear_expires_at();
  static const int kExpiresAtFieldNumber = 3;
  ::google::protobuf::int32 expires_at() const;
  void set_expires_at(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:mtproto.TL_auth_bindTempAuthKey)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr encrypted_message_;
  ::google::protobuf::int64 perm_auth_key_id_;
  ::google::protobuf::int64 nonce_;
  ::google::protobuf::int32 expires_at_;
  mutable int _cached_size_;
  friend struct protobuf_schema_2etl_2esync_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TL_auth_importBotAuthorization : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtproto.TL_auth_importBotAuthorization) */ {
 public:
  TL_auth_importBotAuthorization();
  virtual ~TL_auth_importBotAuthorization();

  TL_auth_importBotAuthorization(const TL_auth_importBotAuthorization& from);

  inline TL_auth_importBotAuthorization& operator=(const TL_auth_importBotAuthorization& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TL_auth_importBotAuthorization(TL_auth_importBotAuthorization&& from) noexcept
    : TL_auth_importBotAuthorization() {
    *this = ::std::move(from);
  }

  inline TL_auth_importBotAuthorization& operator=(TL_auth_importBotAuthorization&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TL_auth_importBotAuthorization& default_instance();

  static inline const TL_auth_importBotAuthorization* internal_default_instance() {
    return reinterpret_cast<const TL_auth_importBotAuthorization*>(
               &_TL_auth_importBotAuthorization_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    28;

  void Swap(TL_auth_importBotAuthorization* other);
  friend void swap(TL_auth_importBotAuthorization& a, TL_auth_importBotAuthorization& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TL_auth_importBotAuthorization* New() const PROTOBUF_FINAL { return New(NULL); }

  TL_auth_importBotAuthorization* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TL_auth_importBotAuthorization* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string api_hash = 3;
  void clear_api_hash();
  static const int kApiHashFieldNumber = 3;
  const ::std::string& api_hash() const;
  void set_api_hash(const ::std::string& value);
  #if LANG_CXX11
  void set_api_hash(::std::string&& value);
  #endif
  void set_api_hash(const char* value);
  void set_api_hash(const char* value, size_t size);
  ::std::string* mutable_api_hash();
  ::std::string* release_api_hash();
  void set_allocated_api_hash(::std::string* api_hash);

  // string bot_auth_token = 4;
  void clear_bot_auth_token();
  static const int kBotAuthTokenFieldNumber = 4;
  const ::std::string& bot_auth_token() const;
  void set_bot_auth_token(const ::std::string& value);
  #if LANG_CXX11
  void set_bot_auth_token(::std::string&& value);
  #endif
  void set_bot_auth_token(const char* value);
  void set_bot_auth_token(const char* value, size_t size);
  ::std::string* mutable_bot_auth_token();
  ::std::string* release_bot_auth_token();
  void set_allocated_bot_auth_token(::std::string* bot_auth_token);

  // int32 flags = 1;
  void clear_flags();
  static const int kFlagsFieldNumber = 1;
  ::google::protobuf::int32 flags() const;
  void set_flags(::google::protobuf::int32 value);

  // int32 api_id = 2;
  void clear_api_id();
  static const int kApiIdFieldNumber = 2;
  ::google::protobuf::int32 api_id() const;
  void set_api_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:mtproto.TL_auth_importBotAuthorization)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr api_hash_;
  ::google::protobuf::internal::ArenaStringPtr bot_auth_token_;
  ::google::protobuf::int32 flags_;
  ::google::protobuf::int32 api_id_;
  mutable int _cached_size_;
  friend struct protobuf_schema_2etl_2esync_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TL_auth_checkPassword : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtproto.TL_auth_checkPassword) */ {
 public:
  TL_auth_checkPassword();
  virtual ~TL_auth_checkPassword();

  TL_auth_checkPassword(const TL_auth_checkPassword& from);

  inline TL_auth_checkPassword& operator=(const TL_auth_checkPassword& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TL_auth_checkPassword(TL_auth_checkPassword&& from) noexcept
    : TL_auth_checkPassword() {
    *this = ::std::move(from);
  }

  inline TL_auth_checkPassword& operator=(TL_auth_checkPassword&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TL_auth_checkPassword& default_instance();

  static inline const TL_auth_checkPassword* internal_default_instance() {
    return reinterpret_cast<const TL_auth_checkPassword*>(
               &_TL_auth_checkPassword_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    29;

  void Swap(TL_auth_checkPassword* other);
  friend void swap(TL_auth_checkPassword& a, TL_auth_checkPassword& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TL_auth_checkPassword* New() const PROTOBUF_FINAL { return New(NULL); }

  TL_auth_checkPassword* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TL_auth_checkPassword* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .mtproto.InputCheckPasswordSRP password = 1;
  bool has_password() const;
  void clear_password();
  static const int kPasswordFieldNumber = 1;
  const ::mtproto::InputCheckPasswordSRP& password() const;
  ::mtproto::InputCheckPasswordSRP* mutable_password();
  ::mtproto::InputCheckPasswordSRP* release_password();
  void set_allocated_password(::mtproto::InputCheckPasswordSRP* password);

  // @@protoc_insertion_point(class_scope:mtproto.TL_auth_checkPassword)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::mtproto::InputCheckPasswordSRP* password_;
  mutable int _cached_size_;
  friend struct protobuf_schema_2etl_2esync_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TL_auth_requestPasswordRecovery : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtproto.TL_auth_requestPasswordRecovery) */ {
 public:
  TL_auth_requestPasswordRecovery();
  virtual ~TL_auth_requestPasswordRecovery();

  TL_auth_requestPasswordRecovery(const TL_auth_requestPasswordRecovery& from);

  inline TL_auth_requestPasswordRecovery& operator=(const TL_auth_requestPasswordRecovery& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TL_auth_requestPasswordRecovery(TL_auth_requestPasswordRecovery&& from) noexcept
    : TL_auth_requestPasswordRecovery() {
    *this = ::std::move(from);
  }

  inline TL_auth_requestPasswordRecovery& operator=(TL_auth_requestPasswordRecovery&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TL_auth_requestPasswordRecovery& default_instance();

  static inline const TL_auth_requestPasswordRecovery* internal_default_instance() {
    return reinterpret_cast<const TL_auth_requestPasswordRecovery*>(
               &_TL_auth_requestPasswordRecovery_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    30;

  void Swap(TL_auth_requestPasswordRecovery* other);
  friend void swap(TL_auth_requestPasswordRecovery& a, TL_auth_requestPasswordRecovery& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TL_auth_requestPasswordRecovery* New() const PROTOBUF_FINAL { return New(NULL); }

  TL_auth_requestPasswordRecovery* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TL_auth_requestPasswordRecovery* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:mtproto.TL_auth_requestPasswordRecovery)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable int _cached_size_;
  friend struct protobuf_schema_2etl_2esync_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TL_auth_recoverPassword : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtproto.TL_auth_recoverPassword) */ {
 public:
  TL_auth_recoverPassword();
  virtual ~TL_auth_recoverPassword();

  TL_auth_recoverPassword(const TL_auth_recoverPassword& from);

  inline TL_auth_recoverPassword& operator=(const TL_auth_recoverPassword& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TL_auth_recoverPassword(TL_auth_recoverPassword&& from) noexcept
    : TL_auth_recoverPassword() {
    *this = ::std::move(from);
  }

  inline TL_auth_recoverPassword& operator=(TL_auth_recoverPassword&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TL_auth_recoverPassword& default_instance();

  static inline const TL_auth_recoverPassword* internal_default_instance() {
    return reinterpret_cast<const TL_auth_recoverPassword*>(
               &_TL_auth_recoverPassword_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    31;

  void Swap(TL_auth_recoverPassword* other);
  friend void swap(TL_auth_recoverPassword& a, TL_auth_recoverPassword& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TL_auth_recoverPassword* New() const PROTOBUF_FINAL { return New(NULL); }

  TL_auth_recoverPassword* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TL_auth_recoverPassword* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string code = 1;
  void clear_code();
  static const int kCodeFieldNumber = 1;
  const ::std::string& code() const;
  void set_code(const ::std::string& value);
  #if LANG_CXX11
  void set_code(::std::string&& value);
  #endif
  void set_code(const char* value);
  void set_code(const char* value, size_t size);
  ::std::string* mutable_code();
  ::std::string* release_code();
  void set_allocated_code(::std::string* code);

  // @@protoc_insertion_point(class_scope:mtproto.TL_auth_recoverPassword)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr code_;
  mutable int _cached_size_;
  friend struct protobuf_schema_2etl_2esync_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TL_auth_resendCode : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtproto.TL_auth_resendCode) */ {
 public:
  TL_auth_resendCode();
  virtual ~TL_auth_resendCode();

  TL_auth_resendCode(const TL_auth_resendCode& from);

  inline TL_auth_resendCode& operator=(const TL_auth_resendCode& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TL_auth_resendCode(TL_auth_resendCode&& from) noexcept
    : TL_auth_resendCode() {
    *this = ::std::move(from);
  }

  inline TL_auth_resendCode& operator=(TL_auth_resendCode&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TL_auth_resendCode& default_instance();

  static inline const TL_auth_resendCode* internal_default_instance() {
    return reinterpret_cast<const TL_auth_resendCode*>(
               &_TL_auth_resendCode_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    32;

  void Swap(TL_auth_resendCode* other);
  friend void swap(TL_auth_resendCode& a, TL_auth_resendCode& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TL_auth_resendCode* New() const PROTOBUF_FINAL { return New(NULL); }

  TL_auth_resendCode* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TL_auth_resendCode* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string phone_number = 1;
  void clear_phone_number();
  static const int kPhoneNumberFieldNumber = 1;
  const ::std::string& phone_number() const;
  void set_phone_number(const ::std::string& value);
  #if LANG_CXX11
  void set_phone_number(::std::string&& value);
  #endif
  void set_phone_number(const char* value);
  void set_phone_number(const char* value, size_t size);
  ::std::string* mutable_phone_number();
  ::std::string* release_phone_number();
  void set_allocated_phone_number(::std::string* phone_number);

  // string phone_code_hash = 2;
  void clear_phone_code_hash();
  static const int kPhoneCodeHashFieldNumber = 2;
  const ::std::string& phone_code_hash() const;
  void set_phone_code_hash(const ::std::string& value);
  #if LANG_CXX11
  void set_phone_code_hash(::std::string&& value);
  #endif
  void set_phone_code_hash(const char* value);
  void set_phone_code_hash(const char* value, size_t size);
  ::std::string* mutable_phone_code_hash();
  ::std::string* release_phone_code_hash();
  void set_allocated_phone_code_hash(::std::string* phone_code_hash);

  // @@protoc_insertion_point(class_scope:mtproto.TL_auth_resendCode)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr phone_number_;
  ::google::protobuf::internal::ArenaStringPtr phone_code_hash_;
  mutable int _cached_size_;
  friend struct protobuf_schema_2etl_2esync_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TL_auth_cancelCode : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtproto.TL_auth_cancelCode) */ {
 public:
  TL_auth_cancelCode();
  virtual ~TL_auth_cancelCode();

  TL_auth_cancelCode(const TL_auth_cancelCode& from);

  inline TL_auth_cancelCode& operator=(const TL_auth_cancelCode& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TL_auth_cancelCode(TL_auth_cancelCode&& from) noexcept
    : TL_auth_cancelCode() {
    *this = ::std::move(from);
  }

  inline TL_auth_cancelCode& operator=(TL_auth_cancelCode&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TL_auth_cancelCode& default_instance();

  static inline const TL_auth_cancelCode* internal_default_instance() {
    return reinterpret_cast<const TL_auth_cancelCode*>(
               &_TL_auth_cancelCode_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    33;

  void Swap(TL_auth_cancelCode* other);
  friend void swap(TL_auth_cancelCode& a, TL_auth_cancelCode& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TL_auth_cancelCode* New() const PROTOBUF_FINAL { return New(NULL); }

  TL_auth_cancelCode* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TL_auth_cancelCode* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string phone_number = 1;
  void clear_phone_number();
  static const int kPhoneNumberFieldNumber = 1;
  const ::std::string& phone_number() const;
  void set_phone_number(const ::std::string& value);
  #if LANG_CXX11
  void set_phone_number(::std::string&& value);
  #endif
  void set_phone_number(const char* value);
  void set_phone_number(const char* value, size_t size);
  ::std::string* mutable_phone_number();
  ::std::string* release_phone_number();
  void set_allocated_phone_number(::std::string* phone_number);

  // string phone_code_hash = 2;
  void clear_phone_code_hash();
  static const int kPhoneCodeHashFieldNumber = 2;
  const ::std::string& phone_code_hash() const;
  void set_phone_code_hash(const ::std::string& value);
  #if LANG_CXX11
  void set_phone_code_hash(::std::string&& value);
  #endif
  void set_phone_code_hash(const char* value);
  void set_phone_code_hash(const char* value, size_t size);
  ::std::string* mutable_phone_code_hash();
  ::std::string* release_phone_code_hash();
  void set_allocated_phone_code_hash(::std::string* phone_code_hash);

  // @@protoc_insertion_point(class_scope:mtproto.TL_auth_cancelCode)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr phone_number_;
  ::google::protobuf::internal::ArenaStringPtr phone_code_hash_;
  mutable int _cached_size_;
  friend struct protobuf_schema_2etl_2esync_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TL_auth_dropTempAuthKeys : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtproto.TL_auth_dropTempAuthKeys) */ {
 public:
  TL_auth_dropTempAuthKeys();
  virtual ~TL_auth_dropTempAuthKeys();

  TL_auth_dropTempAuthKeys(const TL_auth_dropTempAuthKeys& from);

  inline TL_auth_dropTempAuthKeys& operator=(const TL_auth_dropTempAuthKeys& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TL_auth_dropTempAuthKeys(TL_auth_dropTempAuthKeys&& from) noexcept
    : TL_auth_dropTempAuthKeys() {
    *this = ::std::move(from);
  }

  inline TL_auth_dropTempAuthKeys& operator=(TL_auth_dropTempAuthKeys&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TL_auth_dropTempAuthKeys& default_instance();

  static inline const TL_auth_dropTempAuthKeys* internal_default_instance() {
    return reinterpret_cast<const TL_auth_dropTempAuthKeys*>(
               &_TL_auth_dropTempAuthKeys_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    34;

  void Swap(TL_auth_dropTempAuthKeys* other);
  friend void swap(TL_auth_dropTempAuthKeys& a, TL_auth_dropTempAuthKeys& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TL_auth_dropTempAuthKeys* New() const PROTOBUF_FINAL { return New(NULL); }

  TL_auth_dropTempAuthKeys* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TL_auth_dropTempAuthKeys* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int64 except_auth_keys = 1;
  int except_auth_keys_size() const;
  void clear_except_auth_keys();
  static const int kExceptAuthKeysFieldNumber = 1;
  ::google::protobuf::int64 except_auth_keys(int index) const;
  void set_except_auth_keys(int index, ::google::protobuf::int64 value);
  void add_except_auth_keys(::google::protobuf::int64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      except_auth_keys() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_except_auth_keys();

  // @@protoc_insertion_point(class_scope:mtproto.TL_auth_dropTempAuthKeys)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > except_auth_keys_;
  mutable int _cached_size_;
  friend struct protobuf_schema_2etl_2esync_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TL_account_registerDevice : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtproto.TL_account_registerDevice) */ {
 public:
  TL_account_registerDevice();
  virtual ~TL_account_registerDevice();

  TL_account_registerDevice(const TL_account_registerDevice& from);

  inline TL_account_registerDevice& operator=(const TL_account_registerDevice& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TL_account_registerDevice(TL_account_registerDevice&& from) noexcept
    : TL_account_registerDevice() {
    *this = ::std::move(from);
  }

  inline TL_account_registerDevice& operator=(TL_account_registerDevice&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TL_account_registerDevice& default_instance();

  static inline const TL_account_registerDevice* internal_default_instance() {
    return reinterpret_cast<const TL_account_registerDevice*>(
               &_TL_account_registerDevice_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    35;

  void Swap(TL_account_registerDevice* other);
  friend void swap(TL_account_registerDevice& a, TL_account_registerDevice& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TL_account_registerDevice* New() const PROTOBUF_FINAL { return New(NULL); }

  TL_account_registerDevice* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TL_account_registerDevice* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 other_uids = 5;
  int other_uids_size() const;
  void clear_other_uids();
  static const int kOtherUidsFieldNumber = 5;
  ::google::protobuf::int32 other_uids(int index) const;
  void set_other_uids(int index, ::google::protobuf::int32 value);
  void add_other_uids(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      other_uids() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_other_uids();

  // string token = 2;
  void clear_token();
  static const int kTokenFieldNumber = 2;
  const ::std::string& token() const;
  void set_token(const ::std::string& value);
  #if LANG_CXX11
  void set_token(::std::string&& value);
  #endif
  void set_token(const char* value);
  void set_token(const char* value, size_t size);
  ::std::string* mutable_token();
  ::std::string* release_token();
  void set_allocated_token(::std::string* token);

  // bytes secret = 4;
  void clear_secret();
  static const int kSecretFieldNumber = 4;
  const ::std::string& secret() const;
  void set_secret(const ::std::string& value);
  #if LANG_CXX11
  void set_secret(::std::string&& value);
  #endif
  void set_secret(const char* value);
  void set_secret(const void* value, size_t size);
  ::std::string* mutable_secret();
  ::std::string* release_secret();
  void set_allocated_secret(::std::string* secret);

  // .mtproto.Bool app_sandbox = 3;
  bool has_app_sandbox() const;
  void clear_app_sandbox();
  static const int kAppSandboxFieldNumber = 3;
  const ::mtproto::Bool& app_sandbox() const;
  ::mtproto::Bool* mutable_app_sandbox();
  ::mtproto::Bool* release_app_sandbox();
  void set_allocated_app_sandbox(::mtproto::Bool* app_sandbox);

  // int32 token_type = 1;
  void clear_token_type();
  static const int kTokenTypeFieldNumber = 1;
  ::google::protobuf::int32 token_type() const;
  void set_token_type(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:mtproto.TL_account_registerDevice)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > other_uids_;
  ::google::protobuf::internal::ArenaStringPtr token_;
  ::google::protobuf::internal::ArenaStringPtr secret_;
  ::mtproto::Bool* app_sandbox_;
  ::google::protobuf::int32 token_type_;
  mutable int _cached_size_;
  friend struct protobuf_schema_2etl_2esync_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TL_account_unregisterDevice : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtproto.TL_account_unregisterDevice) */ {
 public:
  TL_account_unregisterDevice();
  virtual ~TL_account_unregisterDevice();

  TL_account_unregisterDevice(const TL_account_unregisterDevice& from);

  inline TL_account_unregisterDevice& operator=(const TL_account_unregisterDevice& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TL_account_unregisterDevice(TL_account_unregisterDevice&& from) noexcept
    : TL_account_unregisterDevice() {
    *this = ::std::move(from);
  }

  inline TL_account_unregisterDevice& operator=(TL_account_unregisterDevice&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TL_account_unregisterDevice& default_instance();

  static inline const TL_account_unregisterDevice* internal_default_instance() {
    return reinterpret_cast<const TL_account_unregisterDevice*>(
               &_TL_account_unregisterDevice_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    36;

  void Swap(TL_account_unregisterDevice* other);
  friend void swap(TL_account_unregisterDevice& a, TL_account_unregisterDevice& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TL_account_unregisterDevice* New() const PROTOBUF_FINAL { return New(NULL); }

  TL_account_unregisterDevice* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TL_account_unregisterDevice* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 other_uids = 3;
  int other_uids_size() const;
  void clear_other_uids();
  static const int kOtherUidsFieldNumber = 3;
  ::google::protobuf::int32 other_uids(int index) const;
  void set_other_uids(int index, ::google::protobuf::int32 value);
  void add_other_uids(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      other_uids() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_other_uids();

  // string token = 2;
  void clear_token();
  static const int kTokenFieldNumber = 2;
  const ::std::string& token() const;
  void set_token(const ::std::string& value);
  #if LANG_CXX11
  void set_token(::std::string&& value);
  #endif
  void set_token(const char* value);
  void set_token(const char* value, size_t size);
  ::std::string* mutable_token();
  ::std::string* release_token();
  void set_allocated_token(::std::string* token);

  // int32 token_type = 1;
  void clear_token_type();
  static const int kTokenTypeFieldNumber = 1;
  ::google::protobuf::int32 token_type() const;
  void set_token_type(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:mtproto.TL_account_unregisterDevice)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > other_uids_;
  ::google::protobuf::internal::ArenaStringPtr token_;
  ::google::protobuf::int32 token_type_;
  mutable int _cached_size_;
  friend struct protobuf_schema_2etl_2esync_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TL_account_updateNotifySettings : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtproto.TL_account_updateNotifySettings) */ {
 public:
  TL_account_updateNotifySettings();
  virtual ~TL_account_updateNotifySettings();

  TL_account_updateNotifySettings(const TL_account_updateNotifySettings& from);

  inline TL_account_updateNotifySettings& operator=(const TL_account_updateNotifySettings& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TL_account_updateNotifySettings(TL_account_updateNotifySettings&& from) noexcept
    : TL_account_updateNotifySettings() {
    *this = ::std::move(from);
  }

  inline TL_account_updateNotifySettings& operator=(TL_account_updateNotifySettings&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TL_account_updateNotifySettings& default_instance();

  static inline const TL_account_updateNotifySettings* internal_default_instance() {
    return reinterpret_cast<const TL_account_updateNotifySettings*>(
               &_TL_account_updateNotifySettings_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    37;

  void Swap(TL_account_updateNotifySettings* other);
  friend void swap(TL_account_updateNotifySettings& a, TL_account_updateNotifySettings& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TL_account_updateNotifySettings* New() const PROTOBUF_FINAL { return New(NULL); }

  TL_account_updateNotifySettings* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TL_account_updateNotifySettings* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .mtproto.InputNotifyPeer peer = 1;
  bool has_peer() const;
  void clear_peer();
  static const int kPeerFieldNumber = 1;
  const ::mtproto::InputNotifyPeer& peer() const;
  ::mtproto::InputNotifyPeer* mutable_peer();
  ::mtproto::InputNotifyPeer* release_peer();
  void set_allocated_peer(::mtproto::InputNotifyPeer* peer);

  // .mtproto.InputPeerNotifySettings settings = 2;
  bool has_settings() const;
  void clear_settings();
  static const int kSettingsFieldNumber = 2;
  const ::mtproto::InputPeerNotifySettings& settings() const;
  ::mtproto::InputPeerNotifySettings* mutable_settings();
  ::mtproto::InputPeerNotifySettings* release_settings();
  void set_allocated_settings(::mtproto::InputPeerNotifySettings* settings);

  // @@protoc_insertion_point(class_scope:mtproto.TL_account_updateNotifySettings)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::mtproto::InputNotifyPeer* peer_;
  ::mtproto::InputPeerNotifySettings* settings_;
  mutable int _cached_size_;
  friend struct protobuf_schema_2etl_2esync_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TL_account_getNotifySettings : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtproto.TL_account_getNotifySettings) */ {
 public:
  TL_account_getNotifySettings();
  virtual ~TL_account_getNotifySettings();

  TL_account_getNotifySettings(const TL_account_getNotifySettings& from);

  inline TL_account_getNotifySettings& operator=(const TL_account_getNotifySettings& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TL_account_getNotifySettings(TL_account_getNotifySettings&& from) noexcept
    : TL_account_getNotifySettings() {
    *this = ::std::move(from);
  }

  inline TL_account_getNotifySettings& operator=(TL_account_getNotifySettings&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TL_account_getNotifySettings& default_instance();

  static inline const TL_account_getNotifySettings* internal_default_instance() {
    return reinterpret_cast<const TL_account_getNotifySettings*>(
               &_TL_account_getNotifySettings_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    38;

  void Swap(TL_account_getNotifySettings* other);
  friend void swap(TL_account_getNotifySettings& a, TL_account_getNotifySettings& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TL_account_getNotifySettings* New() const PROTOBUF_FINAL { return New(NULL); }

  TL_account_getNotifySettings* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TL_account_getNotifySettings* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .mtproto.InputNotifyPeer peer = 1;
  bool has_peer() const;
  void clear_peer();
  static const int kPeerFieldNumber = 1;
  const ::mtproto::InputNotifyPeer& peer() const;
  ::mtproto::InputNotifyPeer* mutable_peer();
  ::mtproto::InputNotifyPeer* release_peer();
  void set_allocated_peer(::mtproto::InputNotifyPeer* peer);

  // @@protoc_insertion_point(class_scope:mtproto.TL_account_getNotifySettings)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::mtproto::InputNotifyPeer* peer_;
  mutable int _cached_size_;
  friend struct protobuf_schema_2etl_2esync_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TL_account_resetNotifySettings : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtproto.TL_account_resetNotifySettings) */ {
 public:
  TL_account_resetNotifySettings();
  virtual ~TL_account_resetNotifySettings();

  TL_account_resetNotifySettings(const TL_account_resetNotifySettings& from);

  inline TL_account_resetNotifySettings& operator=(const TL_account_resetNotifySettings& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TL_account_resetNotifySettings(TL_account_resetNotifySettings&& from) noexcept
    : TL_account_resetNotifySettings() {
    *this = ::std::move(from);
  }

  inline TL_account_resetNotifySettings& operator=(TL_account_resetNotifySettings&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TL_account_resetNotifySettings& default_instance();

  static inline const TL_account_resetNotifySettings* internal_default_instance() {
    return reinterpret_cast<const TL_account_resetNotifySettings*>(
               &_TL_account_resetNotifySettings_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    39;

  void Swap(TL_account_resetNotifySettings* other);
  friend void swap(TL_account_resetNotifySettings& a, TL_account_resetNotifySettings& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TL_account_resetNotifySettings* New() const PROTOBUF_FINAL { return New(NULL); }

  TL_account_resetNotifySettings* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TL_account_resetNotifySettings* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:mtproto.TL_account_resetNotifySettings)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable int _cached_size_;
  friend struct protobuf_schema_2etl_2esync_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TL_account_updateProfile : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtproto.TL_account_updateProfile) */ {
 public:
  TL_account_updateProfile();
  virtual ~TL_account_updateProfile();

  TL_account_updateProfile(const TL_account_updateProfile& from);

  inline TL_account_updateProfile& operator=(const TL_account_updateProfile& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TL_account_updateProfile(TL_account_updateProfile&& from) noexcept
    : TL_account_updateProfile() {
    *this = ::std::move(from);
  }

  inline TL_account_updateProfile& operator=(TL_account_updateProfile&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TL_account_updateProfile& default_instance();

  static inline const TL_account_updateProfile* internal_default_instance() {
    return reinterpret_cast<const TL_account_updateProfile*>(
               &_TL_account_updateProfile_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    40;

  void Swap(TL_account_updateProfile* other);
  friend void swap(TL_account_updateProfile& a, TL_account_updateProfile& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TL_account_updateProfile* New() const PROTOBUF_FINAL { return New(NULL); }

  TL_account_updateProfile* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TL_account_updateProfile* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string first_name = 2;
  void clear_first_name();
  static const int kFirstNameFieldNumber = 2;
  const ::std::string& first_name() const;
  void set_first_name(const ::std::string& value);
  #if LANG_CXX11
  void set_first_name(::std::string&& value);
  #endif
  void set_first_name(const char* value);
  void set_first_name(const char* value, size_t size);
  ::std::string* mutable_first_name();
  ::std::string* release_first_name();
  void set_allocated_first_name(::std::string* first_name);

  // string last_name = 3;
  void clear_last_name();
  static const int kLastNameFieldNumber = 3;
  const ::std::string& last_name() const;
  void set_last_name(const ::std::string& value);
  #if LANG_CXX11
  void set_last_name(::std::string&& value);
  #endif
  void set_last_name(const char* value);
  void set_last_name(const char* value, size_t size);
  ::std::string* mutable_last_name();
  ::std::string* release_last_name();
  void set_allocated_last_name(::std::string* last_name);

  // string about = 4;
  void clear_about();
  static const int kAboutFieldNumber = 4;
  const ::std::string& about() const;
  void set_about(const ::std::string& value);
  #if LANG_CXX11
  void set_about(::std::string&& value);
  #endif
  void set_about(const char* value);
  void set_about(const char* value, size_t size);
  ::std::string* mutable_about();
  ::std::string* release_about();
  void set_allocated_about(::std::string* about);

  // @@protoc_insertion_point(class_scope:mtproto.TL_account_updateProfile)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr first_name_;
  ::google::protobuf::internal::ArenaStringPtr last_name_;
  ::google::protobuf::internal::ArenaStringPtr about_;
  mutable int _cached_size_;
  friend struct protobuf_schema_2etl_2esync_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TL_account_updateStatus : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtproto.TL_account_updateStatus) */ {
 public:
  TL_account_updateStatus();
  virtual ~TL_account_updateStatus();

  TL_account_updateStatus(const TL_account_updateStatus& from);

  inline TL_account_updateStatus& operator=(const TL_account_updateStatus& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TL_account_updateStatus(TL_account_updateStatus&& from) noexcept
    : TL_account_updateStatus() {
    *this = ::std::move(from);
  }

  inline TL_account_updateStatus& operator=(TL_account_updateStatus&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TL_account_updateStatus& default_instance();

  static inline const TL_account_updateStatus* internal_default_instance() {
    return reinterpret_cast<const TL_account_updateStatus*>(
               &_TL_account_updateStatus_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    41;

  void Swap(TL_account_updateStatus* other);
  friend void swap(TL_account_updateStatus& a, TL_account_updateStatus& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TL_account_updateStatus* New() const PROTOBUF_FINAL { return New(NULL); }

  TL_account_updateStatus* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TL_account_updateStatus* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .mtproto.Bool offline = 1;
  bool has_offline() const;
  void clear_offline();
  static const int kOfflineFieldNumber = 1;
  const ::mtproto::Bool& offline() const;
  ::mtproto::Bool* mutable_offline();
  ::mtproto::Bool* release_offline();
  void set_allocated_offline(::mtproto::Bool* offline);

  // @@protoc_insertion_point(class_scope:mtproto.TL_account_updateStatus)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::mtproto::Bool* offline_;
  mutable int _cached_size_;
  friend struct protobuf_schema_2etl_2esync_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TL_account_getWallPapers : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtproto.TL_account_getWallPapers) */ {
 public:
  TL_account_getWallPapers();
  virtual ~TL_account_getWallPapers();

  TL_account_getWallPapers(const TL_account_getWallPapers& from);

  inline TL_account_getWallPapers& operator=(const TL_account_getWallPapers& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TL_account_getWallPapers(TL_account_getWallPapers&& from) noexcept
    : TL_account_getWallPapers() {
    *this = ::std::move(from);
  }

  inline TL_account_getWallPapers& operator=(TL_account_getWallPapers&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TL_account_getWallPapers& default_instance();

  static inline const TL_account_getWallPapers* internal_default_instance() {
    return reinterpret_cast<const TL_account_getWallPapers*>(
               &_TL_account_getWallPapers_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    42;

  void Swap(TL_account_getWallPapers* other);
  friend void swap(TL_account_getWallPapers& a, TL_account_getWallPapers& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TL_account_getWallPapers* New() const PROTOBUF_FINAL { return New(NULL); }

  TL_account_getWallPapers* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TL_account_getWallPapers* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:mtproto.TL_account_getWallPapers)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable int _cached_size_;
  friend struct protobuf_schema_2etl_2esync_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TL_account_reportPeer : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtproto.TL_account_reportPeer) */ {
 public:
  TL_account_reportPeer();
  virtual ~TL_account_reportPeer();

  TL_account_reportPeer(const TL_account_reportPeer& from);

  inline TL_account_reportPeer& operator=(const TL_account_reportPeer& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TL_account_reportPeer(TL_account_reportPeer&& from) noexcept
    : TL_account_reportPeer() {
    *this = ::std::move(from);
  }

  inline TL_account_reportPeer& operator=(TL_account_reportPeer&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TL_account_reportPeer& default_instance();

  static inline const TL_account_reportPeer* internal_default_instance() {
    return reinterpret_cast<const TL_account_reportPeer*>(
               &_TL_account_reportPeer_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    43;

  void Swap(TL_account_reportPeer* other);
  friend void swap(TL_account_reportPeer& a, TL_account_reportPeer& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TL_account_reportPeer* New() const PROTOBUF_FINAL { return New(NULL); }

  TL_account_reportPeer* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TL_account_reportPeer* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .mtproto.InputPeer peer = 1;
  bool has_peer() const;
  void clear_peer();
  static const int kPeerFieldNumber = 1;
  const ::mtproto::InputPeer& peer() const;
  ::mtproto::InputPeer* mutable_peer();
  ::mtproto::InputPeer* release_peer();
  void set_allocated_peer(::mtproto::InputPeer* peer);

  // .mtproto.ReportReason reason = 2;
  bool has_reason() const;
  void clear_reason();
  static const int kReasonFieldNumber = 2;
  const ::mtproto::ReportReason& reason() const;
  ::mtproto::ReportReason* mutable_reason();
  ::mtproto::ReportReason* release_reason();
  void set_allocated_reason(::mtproto::ReportReason* reason);

  // @@protoc_insertion_point(class_scope:mtproto.TL_account_reportPeer)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::mtproto::InputPeer* peer_;
  ::mtproto::ReportReason* reason_;
  mutable int _cached_size_;
  friend struct protobuf_schema_2etl_2esync_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TL_account_checkUsername : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtproto.TL_account_checkUsername) */ {
 public:
  TL_account_checkUsername();
  virtual ~TL_account_checkUsername();

  TL_account_checkUsername(const TL_account_checkUsername& from);

  inline TL_account_checkUsername& operator=(const TL_account_checkUsername& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TL_account_checkUsername(TL_account_checkUsername&& from) noexcept
    : TL_account_checkUsername() {
    *this = ::std::move(from);
  }

  inline TL_account_checkUsername& operator=(TL_account_checkUsername&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TL_account_checkUsername& default_instance();

  static inline const TL_account_checkUsername* internal_default_instance() {
    return reinterpret_cast<const TL_account_checkUsername*>(
               &_TL_account_checkUsername_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    44;

  void Swap(TL_account_checkUsername* other);
  friend void swap(TL_account_checkUsername& a, TL_account_checkUsername& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TL_account_checkUsername* New() const PROTOBUF_FINAL { return New(NULL); }

  TL_account_checkUsername* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TL_account_checkUsername* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string username = 1;
  void clear_username();
  static const int kUsernameFieldNumber = 1;
  const ::std::string& username() const;
  void set_username(const ::std::string& value);
  #if LANG_CXX11
  void set_username(::std::string&& value);
  #endif
  void set_username(const char* value);
  void set_username(const char* value, size_t size);
  ::std::string* mutable_username();
  ::std::string* release_username();
  void set_allocated_username(::std::string* username);

  // @@protoc_insertion_point(class_scope:mtproto.TL_account_checkUsername)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr username_;
  mutable int _cached_size_;
  friend struct protobuf_schema_2etl_2esync_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TL_account_updateUsername : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtproto.TL_account_updateUsername) */ {
 public:
  TL_account_updateUsername();
  virtual ~TL_account_updateUsername();

  TL_account_updateUsername(const TL_account_updateUsername& from);

  inline TL_account_updateUsername& operator=(const TL_account_updateUsername& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TL_account_updateUsername(TL_account_updateUsername&& from) noexcept
    : TL_account_updateUsername() {
    *this = ::std::move(from);
  }

  inline TL_account_updateUsername& operator=(TL_account_updateUsername&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TL_account_updateUsername& default_instance();

  static inline const TL_account_updateUsername* internal_default_instance() {
    return reinterpret_cast<const TL_account_updateUsername*>(
               &_TL_account_updateUsername_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    45;

  void Swap(TL_account_updateUsername* other);
  friend void swap(TL_account_updateUsername& a, TL_account_updateUsername& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TL_account_updateUsername* New() const PROTOBUF_FINAL { return New(NULL); }

  TL_account_updateUsername* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TL_account_updateUsername* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string username = 1;
  void clear_username();
  static const int kUsernameFieldNumber = 1;
  const ::std::string& username() const;
  void set_username(const ::std::string& value);
  #if LANG_CXX11
  void set_username(::std::string&& value);
  #endif
  void set_username(const char* value);
  void set_username(const char* value, size_t size);
  ::std::string* mutable_username();
  ::std::string* release_username();
  void set_allocated_username(::std::string* username);

  // @@protoc_insertion_point(class_scope:mtproto.TL_account_updateUsername)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr username_;
  mutable int _cached_size_;
  friend struct protobuf_schema_2etl_2esync_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TL_account_getPrivacy : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtproto.TL_account_getPrivacy) */ {
 public:
  TL_account_getPrivacy();
  virtual ~TL_account_getPrivacy();

  TL_account_getPrivacy(const TL_account_getPrivacy& from);

  inline TL_account_getPrivacy& operator=(const TL_account_getPrivacy& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TL_account_getPrivacy(TL_account_getPrivacy&& from) noexcept
    : TL_account_getPrivacy() {
    *this = ::std::move(from);
  }

  inline TL_account_getPrivacy& operator=(TL_account_getPrivacy&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TL_account_getPrivacy& default_instance();

  static inline const TL_account_getPrivacy* internal_default_instance() {
    return reinterpret_cast<const TL_account_getPrivacy*>(
               &_TL_account_getPrivacy_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    46;

  void Swap(TL_account_getPrivacy* other);
  friend void swap(TL_account_getPrivacy& a, TL_account_getPrivacy& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TL_account_getPrivacy* New() const PROTOBUF_FINAL { return New(NULL); }

  TL_account_getPrivacy* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TL_account_getPrivacy* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .mtproto.InputPrivacyKey key = 1;
  bool has_key() const;
  void clear_key();
  static const int kKeyFieldNumber = 1;
  const ::mtproto::InputPrivacyKey& key() const;
  ::mtproto::InputPrivacyKey* mutable_key();
  ::mtproto::InputPrivacyKey* release_key();
  void set_allocated_key(::mtproto::InputPrivacyKey* key);

  // @@protoc_insertion_point(class_scope:mtproto.TL_account_getPrivacy)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::mtproto::InputPrivacyKey* key_;
  mutable int _cached_size_;
  friend struct protobuf_schema_2etl_2esync_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TL_account_setPrivacy : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtproto.TL_account_setPrivacy) */ {
 public:
  TL_account_setPrivacy();
  virtual ~TL_account_setPrivacy();

  TL_account_setPrivacy(const TL_account_setPrivacy& from);

  inline TL_account_setPrivacy& operator=(const TL_account_setPrivacy& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TL_account_setPrivacy(TL_account_setPrivacy&& from) noexcept
    : TL_account_setPrivacy() {
    *this = ::std::move(from);
  }

  inline TL_account_setPrivacy& operator=(TL_account_setPrivacy&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TL_account_setPrivacy& default_instance();

  static inline const TL_account_setPrivacy* internal_default_instance() {
    return reinterpret_cast<const TL_account_setPrivacy*>(
               &_TL_account_setPrivacy_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    47;

  void Swap(TL_account_setPrivacy* other);
  friend void swap(TL_account_setPrivacy& a, TL_account_setPrivacy& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TL_account_setPrivacy* New() const PROTOBUF_FINAL { return New(NULL); }

  TL_account_setPrivacy* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TL_account_setPrivacy* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .mtproto.InputPrivacyRule rules = 2;
  int rules_size() const;
  void clear_rules();
  static const int kRulesFieldNumber = 2;
  const ::mtproto::InputPrivacyRule& rules(int index) const;
  ::mtproto::InputPrivacyRule* mutable_rules(int index);
  ::mtproto::InputPrivacyRule* add_rules();
  ::google::protobuf::RepeatedPtrField< ::mtproto::InputPrivacyRule >*
      mutable_rules();
  const ::google::protobuf::RepeatedPtrField< ::mtproto::InputPrivacyRule >&
      rules() const;

  // .mtproto.InputPrivacyKey key = 1;
  bool has_key() const;
  void clear_key();
  static const int kKeyFieldNumber = 1;
  const ::mtproto::InputPrivacyKey& key() const;
  ::mtproto::InputPrivacyKey* mutable_key();
  ::mtproto::InputPrivacyKey* release_key();
  void set_allocated_key(::mtproto::InputPrivacyKey* key);

  // @@protoc_insertion_point(class_scope:mtproto.TL_account_setPrivacy)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::mtproto::InputPrivacyRule > rules_;
  ::mtproto::InputPrivacyKey* key_;
  mutable int _cached_size_;
  friend struct protobuf_schema_2etl_2esync_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TL_account_deleteAccount : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtproto.TL_account_deleteAccount) */ {
 public:
  TL_account_deleteAccount();
  virtual ~TL_account_deleteAccount();

  TL_account_deleteAccount(const TL_account_deleteAccount& from);

  inline TL_account_deleteAccount& operator=(const TL_account_deleteAccount& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TL_account_deleteAccount(TL_account_deleteAccount&& from) noexcept
    : TL_account_deleteAccount() {
    *this = ::std::move(from);
  }

  inline TL_account_deleteAccount& operator=(TL_account_deleteAccount&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TL_account_deleteAccount& default_instance();

  static inline const TL_account_deleteAccount* internal_default_instance() {
    return reinterpret_cast<const TL_account_deleteAccount*>(
               &_TL_account_deleteAccount_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    48;

  void Swap(TL_account_deleteAccount* other);
  friend void swap(TL_account_deleteAccount& a, TL_account_deleteAccount& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TL_account_deleteAccount* New() const PROTOBUF_FINAL { return New(NULL); }

  TL_account_deleteAccount* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TL_account_deleteAccount* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string reason = 1;
  void clear_reason();
  static const int kReasonFieldNumber = 1;
  const ::std::string& reason() const;
  void set_reason(const ::std::string& value);
  #if LANG_CXX11
  void set_reason(::std::string&& value);
  #endif
  void set_reason(const char* value);
  void set_reason(const char* value, size_t size);
  ::std::string* mutable_reason();
  ::std::string* release_reason();
  void set_allocated_reason(::std::string* reason);

  // @@protoc_insertion_point(class_scope:mtproto.TL_account_deleteAccount)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr reason_;
  mutable int _cached_size_;
  friend struct protobuf_schema_2etl_2esync_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TL_account_getAccountTTL : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtproto.TL_account_getAccountTTL) */ {
 public:
  TL_account_getAccountTTL();
  virtual ~TL_account_getAccountTTL();

  TL_account_getAccountTTL(const TL_account_getAccountTTL& from);

  inline TL_account_getAccountTTL& operator=(const TL_account_getAccountTTL& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TL_account_getAccountTTL(TL_account_getAccountTTL&& from) noexcept
    : TL_account_getAccountTTL() {
    *this = ::std::move(from);
  }

  inline TL_account_getAccountTTL& operator=(TL_account_getAccountTTL&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TL_account_getAccountTTL& default_instance();

  static inline const TL_account_getAccountTTL* internal_default_instance() {
    return reinterpret_cast<const TL_account_getAccountTTL*>(
               &_TL_account_getAccountTTL_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    49;

  void Swap(TL_account_getAccountTTL* other);
  friend void swap(TL_account_getAccountTTL& a, TL_account_getAccountTTL& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TL_account_getAccountTTL* New() const PROTOBUF_FINAL { return New(NULL); }

  TL_account_getAccountTTL* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TL_account_getAccountTTL* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:mtproto.TL_account_getAccountTTL)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable int _cached_size_;
  friend struct protobuf_schema_2etl_2esync_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TL_account_setAccountTTL : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtproto.TL_account_setAccountTTL) */ {
 public:
  TL_account_setAccountTTL();
  virtual ~TL_account_setAccountTTL();

  TL_account_setAccountTTL(const TL_account_setAccountTTL& from);

  inline TL_account_setAccountTTL& operator=(const TL_account_setAccountTTL& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TL_account_setAccountTTL(TL_account_setAccountTTL&& from) noexcept
    : TL_account_setAccountTTL() {
    *this = ::std::move(from);
  }

  inline TL_account_setAccountTTL& operator=(TL_account_setAccountTTL&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TL_account_setAccountTTL& default_instance();

  static inline const TL_account_setAccountTTL* internal_default_instance() {
    return reinterpret_cast<const TL_account_setAccountTTL*>(
               &_TL_account_setAccountTTL_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    50;

  void Swap(TL_account_setAccountTTL* other);
  friend void swap(TL_account_setAccountTTL& a, TL_account_setAccountTTL& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TL_account_setAccountTTL* New() const PROTOBUF_FINAL { return New(NULL); }

  TL_account_setAccountTTL* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TL_account_setAccountTTL* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .mtproto.AccountDaysTTL ttl = 1;
  bool has_ttl() const;
  void clear_ttl();
  static const int kTtlFieldNumber = 1;
  const ::mtproto::AccountDaysTTL& ttl() const;
  ::mtproto::AccountDaysTTL* mutable_ttl();
  ::mtproto::AccountDaysTTL* release_ttl();
  void set_allocated_ttl(::mtproto::AccountDaysTTL* ttl);

  // @@protoc_insertion_point(class_scope:mtproto.TL_account_setAccountTTL)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::mtproto::AccountDaysTTL* ttl_;
  mutable int _cached_size_;
  friend struct protobuf_schema_2etl_2esync_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TL_account_sendChangePhoneCode : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtproto.TL_account_sendChangePhoneCode) */ {
 public:
  TL_account_sendChangePhoneCode();
  virtual ~TL_account_sendChangePhoneCode();

  TL_account_sendChangePhoneCode(const TL_account_sendChangePhoneCode& from);

  inline TL_account_sendChangePhoneCode& operator=(const TL_account_sendChangePhoneCode& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TL_account_sendChangePhoneCode(TL_account_sendChangePhoneCode&& from) noexcept
    : TL_account_sendChangePhoneCode() {
    *this = ::std::move(from);
  }

  inline TL_account_sendChangePhoneCode& operator=(TL_account_sendChangePhoneCode&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TL_account_sendChangePhoneCode& default_instance();

  static inline const TL_account_sendChangePhoneCode* internal_default_instance() {
    return reinterpret_cast<const TL_account_sendChangePhoneCode*>(
               &_TL_account_sendChangePhoneCode_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    51;

  void Swap(TL_account_sendChangePhoneCode* other);
  friend void swap(TL_account_sendChangePhoneCode& a, TL_account_sendChangePhoneCode& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TL_account_sendChangePhoneCode* New() const PROTOBUF_FINAL { return New(NULL); }

  TL_account_sendChangePhoneCode* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TL_account_sendChangePhoneCode* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string phone_number = 3;
  void clear_phone_number();
  static const int kPhoneNumberFieldNumber = 3;
  const ::std::string& phone_number() const;
  void set_phone_number(const ::std::string& value);
  #if LANG_CXX11
  void set_phone_number(::std::string&& value);
  #endif
  void set_phone_number(const char* value);
  void set_phone_number(const char* value, size_t size);
  ::std::string* mutable_phone_number();
  ::std::string* release_phone_number();
  void set_allocated_phone_number(::std::string* phone_number);

  // .mtproto.Bool current_number = 4;
  bool has_current_number() const;
  void clear_current_number();
  static const int kCurrentNumberFieldNumber = 4;
  const ::mtproto::Bool& current_number() const;
  ::mtproto::Bool* mutable_current_number();
  ::mtproto::Bool* release_current_number();
  void set_allocated_current_number(::mtproto::Bool* current_number);

  // bool allow_flashcall = 2;
  void clear_allow_flashcall();
  static const int kAllowFlashcallFieldNumber = 2;
  bool allow_flashcall() const;
  void set_allow_flashcall(bool value);

  // @@protoc_insertion_point(class_scope:mtproto.TL_account_sendChangePhoneCode)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr phone_number_;
  ::mtproto::Bool* current_number_;
  bool allow_flashcall_;
  mutable int _cached_size_;
  friend struct protobuf_schema_2etl_2esync_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TL_account_changePhone : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtproto.TL_account_changePhone) */ {
 public:
  TL_account_changePhone();
  virtual ~TL_account_changePhone();

  TL_account_changePhone(const TL_account_changePhone& from);

  inline TL_account_changePhone& operator=(const TL_account_changePhone& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TL_account_changePhone(TL_account_changePhone&& from) noexcept
    : TL_account_changePhone() {
    *this = ::std::move(from);
  }

  inline TL_account_changePhone& operator=(TL_account_changePhone&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TL_account_changePhone& default_instance();

  static inline const TL_account_changePhone* internal_default_instance() {
    return reinterpret_cast<const TL_account_changePhone*>(
               &_TL_account_changePhone_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    52;

  void Swap(TL_account_changePhone* other);
  friend void swap(TL_account_changePhone& a, TL_account_changePhone& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TL_account_changePhone* New() const PROTOBUF_FINAL { return New(NULL); }

  TL_account_changePhone* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TL_account_changePhone* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string phone_number = 1;
  void clear_phone_number();
  static const int kPhoneNumberFieldNumber = 1;
  const ::std::string& phone_number() const;
  void set_phone_number(const ::std::string& value);
  #if LANG_CXX11
  void set_phone_number(::std::string&& value);
  #endif
  void set_phone_number(const char* value);
  void set_phone_number(const char* value, size_t size);
  ::std::string* mutable_phone_number();
  ::std::string* release_phone_number();
  void set_allocated_phone_number(::std::string* phone_number);

  // string phone_code_hash = 2;
  void clear_phone_code_hash();
  static const int kPhoneCodeHashFieldNumber = 2;
  const ::std::string& phone_code_hash() const;
  void set_phone_code_hash(const ::std::string& value);
  #if LANG_CXX11
  void set_phone_code_hash(::std::string&& value);
  #endif
  void set_phone_code_hash(const char* value);
  void set_phone_code_hash(const char* value, size_t size);
  ::std::string* mutable_phone_code_hash();
  ::std::string* release_phone_code_hash();
  void set_allocated_phone_code_hash(::std::string* phone_code_hash);

  // string phone_code = 3;
  void clear_phone_code();
  static const int kPhoneCodeFieldNumber = 3;
  const ::std::string& phone_code() const;
  void set_phone_code(const ::std::string& value);
  #if LANG_CXX11
  void set_phone_code(::std::string&& value);
  #endif
  void set_phone_code(const char* value);
  void set_phone_code(const char* value, size_t size);
  ::std::string* mutable_phone_code();
  ::std::string* release_phone_code();
  void set_allocated_phone_code(::std::string* phone_code);

  // @@protoc_insertion_point(class_scope:mtproto.TL_account_changePhone)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr phone_number_;
  ::google::protobuf::internal::ArenaStringPtr phone_code_hash_;
  ::google::protobuf::internal::ArenaStringPtr phone_code_;
  mutable int _cached_size_;
  friend struct protobuf_schema_2etl_2esync_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TL_account_updateDeviceLocked : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtproto.TL_account_updateDeviceLocked) */ {
 public:
  TL_account_updateDeviceLocked();
  virtual ~TL_account_updateDeviceLocked();

  TL_account_updateDeviceLocked(const TL_account_updateDeviceLocked& from);

  inline TL_account_updateDeviceLocked& operator=(const TL_account_updateDeviceLocked& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TL_account_updateDeviceLocked(TL_account_updateDeviceLocked&& from) noexcept
    : TL_account_updateDeviceLocked() {
    *this = ::std::move(from);
  }

  inline TL_account_updateDeviceLocked& operator=(TL_account_updateDeviceLocked&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TL_account_updateDeviceLocked& default_instance();

  static inline const TL_account_updateDeviceLocked* internal_default_instance() {
    return reinterpret_cast<const TL_account_updateDeviceLocked*>(
               &_TL_account_updateDeviceLocked_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    53;

  void Swap(TL_account_updateDeviceLocked* other);
  friend void swap(TL_account_updateDeviceLocked& a, TL_account_updateDeviceLocked& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TL_account_updateDeviceLocked* New() const PROTOBUF_FINAL { return New(NULL); }

  TL_account_updateDeviceLocked* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TL_account_updateDeviceLocked* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 period = 1;
  void clear_period();
  static const int kPeriodFieldNumber = 1;
  ::google::protobuf::int32 period() const;
  void set_period(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:mtproto.TL_account_updateDeviceLocked)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 period_;
  mutable int _cached_size_;
  friend struct protobuf_schema_2etl_2esync_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TL_account_getAuthorizations : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtproto.TL_account_getAuthorizations) */ {
 public:
  TL_account_getAuthorizations();
  virtual ~TL_account_getAuthorizations();

  TL_account_getAuthorizations(const TL_account_getAuthorizations& from);

  inline TL_account_getAuthorizations& operator=(const TL_account_getAuthorizations& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TL_account_getAuthorizations(TL_account_getAuthorizations&& from) noexcept
    : TL_account_getAuthorizations() {
    *this = ::std::move(from);
  }

  inline TL_account_getAuthorizations& operator=(TL_account_getAuthorizations&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TL_account_getAuthorizations& default_instance();

  static inline const TL_account_getAuthorizations* internal_default_instance() {
    return reinterpret_cast<const TL_account_getAuthorizations*>(
               &_TL_account_getAuthorizations_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    54;

  void Swap(TL_account_getAuthorizations* other);
  friend void swap(TL_account_getAuthorizations& a, TL_account_getAuthorizations& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TL_account_getAuthorizations* New() const PROTOBUF_FINAL { return New(NULL); }

  TL_account_getAuthorizations* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TL_account_getAuthorizations* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:mtproto.TL_account_getAuthorizations)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable int _cached_size_;
  friend struct protobuf_schema_2etl_2esync_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TL_account_resetAuthorization : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtproto.TL_account_resetAuthorization) */ {
 public:
  TL_account_resetAuthorization();
  virtual ~TL_account_resetAuthorization();

  TL_account_resetAuthorization(const TL_account_resetAuthorization& from);

  inline TL_account_resetAuthorization& operator=(const TL_account_resetAuthorization& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TL_account_resetAuthorization(TL_account_resetAuthorization&& from) noexcept
    : TL_account_resetAuthorization() {
    *this = ::std::move(from);
  }

  inline TL_account_resetAuthorization& operator=(TL_account_resetAuthorization&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TL_account_resetAuthorization& default_instance();

  static inline const TL_account_resetAuthorization* internal_default_instance() {
    return reinterpret_cast<const TL_account_resetAuthorization*>(
               &_TL_account_resetAuthorization_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    55;

  void Swap(TL_account_resetAuthorization* other);
  friend void swap(TL_account_resetAuthorization& a, TL_account_resetAuthorization& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TL_account_resetAuthorization* New() const PROTOBUF_FINAL { return New(NULL); }

  TL_account_resetAuthorization* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TL_account_resetAuthorization* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int64 hash = 1;
  void clear_hash();
  static const int kHashFieldNumber = 1;
  ::google::protobuf::int64 hash() const;
  void set_hash(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:mtproto.TL_account_resetAuthorization)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int64 hash_;
  mutable int _cached_size_;
  friend struct protobuf_schema_2etl_2esync_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TL_account_getPassword : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtproto.TL_account_getPassword) */ {
 public:
  TL_account_getPassword();
  virtual ~TL_account_getPassword();

  TL_account_getPassword(const TL_account_getPassword& from);

  inline TL_account_getPassword& operator=(const TL_account_getPassword& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TL_account_getPassword(TL_account_getPassword&& from) noexcept
    : TL_account_getPassword() {
    *this = ::std::move(from);
  }

  inline TL_account_getPassword& operator=(TL_account_getPassword&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TL_account_getPassword& default_instance();

  static inline const TL_account_getPassword* internal_default_instance() {
    return reinterpret_cast<const TL_account_getPassword*>(
               &_TL_account_getPassword_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    56;

  void Swap(TL_account_getPassword* other);
  friend void swap(TL_account_getPassword& a, TL_account_getPassword& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TL_account_getPassword* New() const PROTOBUF_FINAL { return New(NULL); }

  TL_account_getPassword* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TL_account_getPassword* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:mtproto.TL_account_getPassword)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable int _cached_size_;
  friend struct protobuf_schema_2etl_2esync_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TL_account_getPasswordSettings : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtproto.TL_account_getPasswordSettings) */ {
 public:
  TL_account_getPasswordSettings();
  virtual ~TL_account_getPasswordSettings();

  TL_account_getPasswordSettings(const TL_account_getPasswordSettings& from);

  inline TL_account_getPasswordSettings& operator=(const TL_account_getPasswordSettings& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TL_account_getPasswordSettings(TL_account_getPasswordSettings&& from) noexcept
    : TL_account_getPasswordSettings() {
    *this = ::std::move(from);
  }

  inline TL_account_getPasswordSettings& operator=(TL_account_getPasswordSettings&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TL_account_getPasswordSettings& default_instance();

  static inline const TL_account_getPasswordSettings* internal_default_instance() {
    return reinterpret_cast<const TL_account_getPasswordSettings*>(
               &_TL_account_getPasswordSettings_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    57;

  void Swap(TL_account_getPasswordSettings* other);
  friend void swap(TL_account_getPasswordSettings& a, TL_account_getPasswordSettings& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TL_account_getPasswordSettings* New() const PROTOBUF_FINAL { return New(NULL); }

  TL_account_getPasswordSettings* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TL_account_getPasswordSettings* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .mtproto.InputCheckPasswordSRP password = 1;
  bool has_password() const;
  void clear_password();
  static const int kPasswordFieldNumber = 1;
  const ::mtproto::InputCheckPasswordSRP& password() const;
  ::mtproto::InputCheckPasswordSRP* mutable_password();
  ::mtproto::InputCheckPasswordSRP* release_password();
  void set_allocated_password(::mtproto::InputCheckPasswordSRP* password);

  // @@protoc_insertion_point(class_scope:mtproto.TL_account_getPasswordSettings)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::mtproto::InputCheckPasswordSRP* password_;
  mutable int _cached_size_;
  friend struct protobuf_schema_2etl_2esync_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TL_account_updatePasswordSettings : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtproto.TL_account_updatePasswordSettings) */ {
 public:
  TL_account_updatePasswordSettings();
  virtual ~TL_account_updatePasswordSettings();

  TL_account_updatePasswordSettings(const TL_account_updatePasswordSettings& from);

  inline TL_account_updatePasswordSettings& operator=(const TL_account_updatePasswordSettings& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TL_account_updatePasswordSettings(TL_account_updatePasswordSettings&& from) noexcept
    : TL_account_updatePasswordSettings() {
    *this = ::std::move(from);
  }

  inline TL_account_updatePasswordSettings& operator=(TL_account_updatePasswordSettings&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TL_account_updatePasswordSettings& default_instance();

  static inline const TL_account_updatePasswordSettings* internal_default_instance() {
    return reinterpret_cast<const TL_account_updatePasswordSettings*>(
               &_TL_account_updatePasswordSettings_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    58;

  void Swap(TL_account_updatePasswordSettings* other);
  friend void swap(TL_account_updatePasswordSettings& a, TL_account_updatePasswordSettings& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TL_account_updatePasswordSettings* New() const PROTOBUF_FINAL { return New(NULL); }

  TL_account_updatePasswordSettings* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TL_account_updatePasswordSettings* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .mtproto.InputCheckPasswordSRP password = 1;
  bool has_password() const;
  void clear_password();
  static const int kPasswordFieldNumber = 1;
  const ::mtproto::InputCheckPasswordSRP& password() const;
  ::mtproto::InputCheckPasswordSRP* mutable_password();
  ::mtproto::InputCheckPasswordSRP* release_password();
  void set_allocated_password(::mtproto::InputCheckPasswordSRP* password);

  // .mtproto.account_PasswordInputSettings new_settings = 2;
  bool has_new_settings() const;
  void clear_new_settings();
  static const int kNewSettingsFieldNumber = 2;
  const ::mtproto::account_PasswordInputSettings& new_settings() const;
  ::mtproto::account_PasswordInputSettings* mutable_new_settings();
  ::mtproto::account_PasswordInputSettings* release_new_settings();
  void set_allocated_new_settings(::mtproto::account_PasswordInputSettings* new_settings);

  // @@protoc_insertion_point(class_scope:mtproto.TL_account_updatePasswordSettings)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::mtproto::InputCheckPasswordSRP* password_;
  ::mtproto::account_PasswordInputSettings* new_settings_;
  mutable int _cached_size_;
  friend struct protobuf_schema_2etl_2esync_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TL_account_sendConfirmPhoneCode : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtproto.TL_account_sendConfirmPhoneCode) */ {
 public:
  TL_account_sendConfirmPhoneCode();
  virtual ~TL_account_sendConfirmPhoneCode();

  TL_account_sendConfirmPhoneCode(const TL_account_sendConfirmPhoneCode& from);

  inline TL_account_sendConfirmPhoneCode& operator=(const TL_account_sendConfirmPhoneCode& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TL_account_sendConfirmPhoneCode(TL_account_sendConfirmPhoneCode&& from) noexcept
    : TL_account_sendConfirmPhoneCode() {
    *this = ::std::move(from);
  }

  inline TL_account_sendConfirmPhoneCode& operator=(TL_account_sendConfirmPhoneCode&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TL_account_sendConfirmPhoneCode& default_instance();

  static inline const TL_account_sendConfirmPhoneCode* internal_default_instance() {
    return reinterpret_cast<const TL_account_sendConfirmPhoneCode*>(
               &_TL_account_sendConfirmPhoneCode_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    59;

  void Swap(TL_account_sendConfirmPhoneCode* other);
  friend void swap(TL_account_sendConfirmPhoneCode& a, TL_account_sendConfirmPhoneCode& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TL_account_sendConfirmPhoneCode* New() const PROTOBUF_FINAL { return New(NULL); }

  TL_account_sendConfirmPhoneCode* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TL_account_sendConfirmPhoneCode* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string hash = 3;
  void clear_hash();
  static const int kHashFieldNumber = 3;
  const ::std::string& hash() const;
  void set_hash(const ::std::string& value);
  #if LANG_CXX11
  void set_hash(::std::string&& value);
  #endif
  void set_hash(const char* value);
  void set_hash(const char* value, size_t size);
  ::std::string* mutable_hash();
  ::std::string* release_hash();
  void set_allocated_hash(::std::string* hash);

  // .mtproto.Bool current_number = 4;
  bool has_current_number() const;
  void clear_current_number();
  static const int kCurrentNumberFieldNumber = 4;
  const ::mtproto::Bool& current_number() const;
  ::mtproto::Bool* mutable_current_number();
  ::mtproto::Bool* release_current_number();
  void set_allocated_current_number(::mtproto::Bool* current_number);

  // bool allow_flashcall = 2;
  void clear_allow_flashcall();
  static const int kAllowFlashcallFieldNumber = 2;
  bool allow_flashcall() const;
  void set_allow_flashcall(bool value);

  // @@protoc_insertion_point(class_scope:mtproto.TL_account_sendConfirmPhoneCode)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr hash_;
  ::mtproto::Bool* current_number_;
  bool allow_flashcall_;
  mutable int _cached_size_;
  friend struct protobuf_schema_2etl_2esync_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TL_account_confirmPhone : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtproto.TL_account_confirmPhone) */ {
 public:
  TL_account_confirmPhone();
  virtual ~TL_account_confirmPhone();

  TL_account_confirmPhone(const TL_account_confirmPhone& from);

  inline TL_account_confirmPhone& operator=(const TL_account_confirmPhone& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TL_account_confirmPhone(TL_account_confirmPhone&& from) noexcept
    : TL_account_confirmPhone() {
    *this = ::std::move(from);
  }

  inline TL_account_confirmPhone& operator=(TL_account_confirmPhone&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TL_account_confirmPhone& default_instance();

  static inline const TL_account_confirmPhone* internal_default_instance() {
    return reinterpret_cast<const TL_account_confirmPhone*>(
               &_TL_account_confirmPhone_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    60;

  void Swap(TL_account_confirmPhone* other);
  friend void swap(TL_account_confirmPhone& a, TL_account_confirmPhone& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TL_account_confirmPhone* New() const PROTOBUF_FINAL { return New(NULL); }

  TL_account_confirmPhone* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TL_account_confirmPhone* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string phone_code_hash = 1;
  void clear_phone_code_hash();
  static const int kPhoneCodeHashFieldNumber = 1;
  const ::std::string& phone_code_hash() const;
  void set_phone_code_hash(const ::std::string& value);
  #if LANG_CXX11
  void set_phone_code_hash(::std::string&& value);
  #endif
  void set_phone_code_hash(const char* value);
  void set_phone_code_hash(const char* value, size_t size);
  ::std::string* mutable_phone_code_hash();
  ::std::string* release_phone_code_hash();
  void set_allocated_phone_code_hash(::std::string* phone_code_hash);

  // string phone_code = 2;
  void clear_phone_code();
  static const int kPhoneCodeFieldNumber = 2;
  const ::std::string& phone_code() const;
  void set_phone_code(const ::std::string& value);
  #if LANG_CXX11
  void set_phone_code(::std::string&& value);
  #endif
  void set_phone_code(const char* value);
  void set_phone_code(const char* value, size_t size);
  ::std::string* mutable_phone_code();
  ::std::string* release_phone_code();
  void set_allocated_phone_code(::std::string* phone_code);

  // @@protoc_insertion_point(class_scope:mtproto.TL_account_confirmPhone)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr phone_code_hash_;
  ::google::protobuf::internal::ArenaStringPtr phone_code_;
  mutable int _cached_size_;
  friend struct protobuf_schema_2etl_2esync_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TL_account_getTmpPassword : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtproto.TL_account_getTmpPassword) */ {
 public:
  TL_account_getTmpPassword();
  virtual ~TL_account_getTmpPassword();

  TL_account_getTmpPassword(const TL_account_getTmpPassword& from);

  inline TL_account_getTmpPassword& operator=(const TL_account_getTmpPassword& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TL_account_getTmpPassword(TL_account_getTmpPassword&& from) noexcept
    : TL_account_getTmpPassword() {
    *this = ::std::move(from);
  }

  inline TL_account_getTmpPassword& operator=(TL_account_getTmpPassword&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TL_account_getTmpPassword& default_instance();

  static inline const TL_account_getTmpPassword* internal_default_instance() {
    return reinterpret_cast<const TL_account_getTmpPassword*>(
               &_TL_account_getTmpPassword_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    61;

  void Swap(TL_account_getTmpPassword* other);
  friend void swap(TL_account_getTmpPassword& a, TL_account_getTmpPassword& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TL_account_getTmpPassword* New() const PROTOBUF_FINAL { return New(NULL); }

  TL_account_getTmpPassword* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TL_account_getTmpPassword* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .mtproto.InputCheckPasswordSRP password = 1;
  bool has_password() const;
  void clear_password();
  static const int kPasswordFieldNumber = 1;
  const ::mtproto::InputCheckPasswordSRP& password() const;
  ::mtproto::InputCheckPasswordSRP* mutable_password();
  ::mtproto::InputCheckPasswordSRP* release_password();
  void set_allocated_password(::mtproto::InputCheckPasswordSRP* password);

  // int32 period = 2;
  void clear_period();
  static const int kPeriodFieldNumber = 2;
  ::google::protobuf::int32 period() const;
  void set_period(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:mtproto.TL_account_getTmpPassword)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::mtproto::InputCheckPasswordSRP* password_;
  ::google::protobuf::int32 period_;
  mutable int _cached_size_;
  friend struct protobuf_schema_2etl_2esync_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TL_account_getWebAuthorizations : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtproto.TL_account_getWebAuthorizations) */ {
 public:
  TL_account_getWebAuthorizations();
  virtual ~TL_account_getWebAuthorizations();

  TL_account_getWebAuthorizations(const TL_account_getWebAuthorizations& from);

  inline TL_account_getWebAuthorizations& operator=(const TL_account_getWebAuthorizations& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TL_account_getWebAuthorizations(TL_account_getWebAuthorizations&& from) noexcept
    : TL_account_getWebAuthorizations() {
    *this = ::std::move(from);
  }

  inline TL_account_getWebAuthorizations& operator=(TL_account_getWebAuthorizations&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TL_account_getWebAuthorizations& default_instance();

  static inline const TL_account_getWebAuthorizations* internal_default_instance() {
    return reinterpret_cast<const TL_account_getWebAuthorizations*>(
               &_TL_account_getWebAuthorizations_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    62;

  void Swap(TL_account_getWebAuthorizations* other);
  friend void swap(TL_account_getWebAuthorizations& a, TL_account_getWebAuthorizations& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TL_account_getWebAuthorizations* New() const PROTOBUF_FINAL { return New(NULL); }

  TL_account_getWebAuthorizations* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TL_account_getWebAuthorizations* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:mtproto.TL_account_getWebAuthorizations)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable int _cached_size_;
  friend struct protobuf_schema_2etl_2esync_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TL_account_resetWebAuthorization : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtproto.TL_account_resetWebAuthorization) */ {
 public:
  TL_account_resetWebAuthorization();
  virtual ~TL_account_resetWebAuthorization();

  TL_account_resetWebAuthorization(const TL_account_resetWebAuthorization& from);

  inline TL_account_resetWebAuthorization& operator=(const TL_account_resetWebAuthorization& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TL_account_resetWebAuthorization(TL_account_resetWebAuthorization&& from) noexcept
    : TL_account_resetWebAuthorization() {
    *this = ::std::move(from);
  }

  inline TL_account_resetWebAuthorization& operator=(TL_account_resetWebAuthorization&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TL_account_resetWebAuthorization& default_instance();

  static inline const TL_account_resetWebAuthorization* internal_default_instance() {
    return reinterpret_cast<const TL_account_resetWebAuthorization*>(
               &_TL_account_resetWebAuthorization_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    63;

  void Swap(TL_account_resetWebAuthorization* other);
  friend void swap(TL_account_resetWebAuthorization& a, TL_account_resetWebAuthorization& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TL_account_resetWebAuthorization* New() const PROTOBUF_FINAL { return New(NULL); }

  TL_account_resetWebAuthorization* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TL_account_resetWebAuthorization* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int64 hash = 1;
  void clear_hash();
  static const int kHashFieldNumber = 1;
  ::google::protobuf::int64 hash() const;
  void set_hash(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:mtproto.TL_account_resetWebAuthorization)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int64 hash_;
  mutable int _cached_size_;
  friend struct protobuf_schema_2etl_2esync_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TL_account_resetWebAuthorizations : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtproto.TL_account_resetWebAuthorizations) */ {
 public:
  TL_account_resetWebAuthorizations();
  virtual ~TL_account_resetWebAuthorizations();

  TL_account_resetWebAuthorizations(const TL_account_resetWebAuthorizations& from);

  inline TL_account_resetWebAuthorizations& operator=(const TL_account_resetWebAuthorizations& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TL_account_resetWebAuthorizations(TL_account_resetWebAuthorizations&& from) noexcept
    : TL_account_resetWebAuthorizations() {
    *this = ::std::move(from);
  }

  inline TL_account_resetWebAuthorizations& operator=(TL_account_resetWebAuthorizations&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TL_account_resetWebAuthorizations& default_instance();

  static inline const TL_account_resetWebAuthorizations* internal_default_instance() {
    return reinterpret_cast<const TL_account_resetWebAuthorizations*>(
               &_TL_account_resetWebAuthorizations_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    64;

  void Swap(TL_account_resetWebAuthorizations* other);
  friend void swap(TL_account_resetWebAuthorizations& a, TL_account_resetWebAuthorizations& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TL_account_resetWebAuthorizations* New() const PROTOBUF_FINAL { return New(NULL); }

  TL_account_resetWebAuthorizations* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TL_account_resetWebAuthorizations* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:mtproto.TL_account_resetWebAuthorizations)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable int _cached_size_;
  friend struct protobuf_schema_2etl_2esync_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TL_account_getAllSecureValues : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtproto.TL_account_getAllSecureValues) */ {
 public:
  TL_account_getAllSecureValues();
  virtual ~TL_account_getAllSecureValues();

  TL_account_getAllSecureValues(const TL_account_getAllSecureValues& from);

  inline TL_account_getAllSecureValues& operator=(const TL_account_getAllSecureValues& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TL_account_getAllSecureValues(TL_account_getAllSecureValues&& from) noexcept
    : TL_account_getAllSecureValues() {
    *this = ::std::move(from);
  }

  inline TL_account_getAllSecureValues& operator=(TL_account_getAllSecureValues&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TL_account_getAllSecureValues& default_instance();

  static inline const TL_account_getAllSecureValues* internal_default_instance() {
    return reinterpret_cast<const TL_account_getAllSecureValues*>(
               &_TL_account_getAllSecureValues_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    65;

  void Swap(TL_account_getAllSecureValues* other);
  friend void swap(TL_account_getAllSecureValues& a, TL_account_getAllSecureValues& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TL_account_getAllSecureValues* New() const PROTOBUF_FINAL { return New(NULL); }

  TL_account_getAllSecureValues* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TL_account_getAllSecureValues* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:mtproto.TL_account_getAllSecureValues)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable int _cached_size_;
  friend struct protobuf_schema_2etl_2esync_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TL_account_getSecureValue : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtproto.TL_account_getSecureValue) */ {
 public:
  TL_account_getSecureValue();
  virtual ~TL_account_getSecureValue();

  TL_account_getSecureValue(const TL_account_getSecureValue& from);

  inline TL_account_getSecureValue& operator=(const TL_account_getSecureValue& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TL_account_getSecureValue(TL_account_getSecureValue&& from) noexcept
    : TL_account_getSecureValue() {
    *this = ::std::move(from);
  }

  inline TL_account_getSecureValue& operator=(TL_account_getSecureValue&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TL_account_getSecureValue& default_instance();

  static inline const TL_account_getSecureValue* internal_default_instance() {
    return reinterpret_cast<const TL_account_getSecureValue*>(
               &_TL_account_getSecureValue_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    66;

  void Swap(TL_account_getSecureValue* other);
  friend void swap(TL_account_getSecureValue& a, TL_account_getSecureValue& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TL_account_getSecureValue* New() const PROTOBUF_FINAL { return New(NULL); }

  TL_account_getSecureValue* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TL_account_getSecureValue* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .mtproto.SecureValueType types = 1;
  int types_size() const;
  void clear_types();
  static const int kTypesFieldNumber = 1;
  const ::mtproto::SecureValueType& types(int index) const;
  ::mtproto::SecureValueType* mutable_types(int index);
  ::mtproto::SecureValueType* add_types();
  ::google::protobuf::RepeatedPtrField< ::mtproto::SecureValueType >*
      mutable_types();
  const ::google::protobuf::RepeatedPtrField< ::mtproto::SecureValueType >&
      types() const;

  // @@protoc_insertion_point(class_scope:mtproto.TL_account_getSecureValue)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::mtproto::SecureValueType > types_;
  mutable int _cached_size_;
  friend struct protobuf_schema_2etl_2esync_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TL_account_saveSecureValue : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtproto.TL_account_saveSecureValue) */ {
 public:
  TL_account_saveSecureValue();
  virtual ~TL_account_saveSecureValue();

  TL_account_saveSecureValue(const TL_account_saveSecureValue& from);

  inline TL_account_saveSecureValue& operator=(const TL_account_saveSecureValue& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TL_account_saveSecureValue(TL_account_saveSecureValue&& from) noexcept
    : TL_account_saveSecureValue() {
    *this = ::std::move(from);
  }

  inline TL_account_saveSecureValue& operator=(TL_account_saveSecureValue&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TL_account_saveSecureValue& default_instance();

  static inline const TL_account_saveSecureValue* internal_default_instance() {
    return reinterpret_cast<const TL_account_saveSecureValue*>(
               &_TL_account_saveSecureValue_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    67;

  void Swap(TL_account_saveSecureValue* other);
  friend void swap(TL_account_saveSecureValue& a, TL_account_saveSecureValue& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TL_account_saveSecureValue* New() const PROTOBUF_FINAL { return New(NULL); }

  TL_account_saveSecureValue* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TL_account_saveSecureValue* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .mtproto.InputSecureValue value = 1;
  bool has_value() const;
  void clear_value();
  static const int kValueFieldNumber = 1;
  const ::mtproto::InputSecureValue& value() const;
  ::mtproto::InputSecureValue* mutable_value();
  ::mtproto::InputSecureValue* release_value();
  void set_allocated_value(::mtproto::InputSecureValue* value);

  // int64 secure_secret_id = 2;
  void clear_secure_secret_id();
  static const int kSecureSecretIdFieldNumber = 2;
  ::google::protobuf::int64 secure_secret_id() const;
  void set_secure_secret_id(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:mtproto.TL_account_saveSecureValue)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::mtproto::InputSecureValue* value_;
  ::google::protobuf::int64 secure_secret_id_;
  mutable int _cached_size_;
  friend struct protobuf_schema_2etl_2esync_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TL_account_deleteSecureValue : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtproto.TL_account_deleteSecureValue) */ {
 public:
  TL_account_deleteSecureValue();
  virtual ~TL_account_deleteSecureValue();

  TL_account_deleteSecureValue(const TL_account_deleteSecureValue& from);

  inline TL_account_deleteSecureValue& operator=(const TL_account_deleteSecureValue& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TL_account_deleteSecureValue(TL_account_deleteSecureValue&& from) noexcept
    : TL_account_deleteSecureValue() {
    *this = ::std::move(from);
  }

  inline TL_account_deleteSecureValue& operator=(TL_account_deleteSecureValue&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TL_account_deleteSecureValue& default_instance();

  static inline const TL_account_deleteSecureValue* internal_default_instance() {
    return reinterpret_cast<const TL_account_deleteSecureValue*>(
               &_TL_account_deleteSecureValue_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    68;

  void Swap(TL_account_deleteSecureValue* other);
  friend void swap(TL_account_deleteSecureValue& a, TL_account_deleteSecureValue& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TL_account_deleteSecureValue* New() const PROTOBUF_FINAL { return New(NULL); }

  TL_account_deleteSecureValue* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TL_account_deleteSecureValue* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .mtproto.SecureValueType types = 1;
  int types_size() const;
  void clear_types();
  static const int kTypesFieldNumber = 1;
  const ::mtproto::SecureValueType& types(int index) const;
  ::mtproto::SecureValueType* mutable_types(int index);
  ::mtproto::SecureValueType* add_types();
  ::google::protobuf::RepeatedPtrField< ::mtproto::SecureValueType >*
      mutable_types();
  const ::google::protobuf::RepeatedPtrField< ::mtproto::SecureValueType >&
      types() const;

  // @@protoc_insertion_point(class_scope:mtproto.TL_account_deleteSecureValue)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::mtproto::SecureValueType > types_;
  mutable int _cached_size_;
  friend struct protobuf_schema_2etl_2esync_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TL_account_getAuthorizationForm : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtproto.TL_account_getAuthorizationForm) */ {
 public:
  TL_account_getAuthorizationForm();
  virtual ~TL_account_getAuthorizationForm();

  TL_account_getAuthorizationForm(const TL_account_getAuthorizationForm& from);

  inline TL_account_getAuthorizationForm& operator=(const TL_account_getAuthorizationForm& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TL_account_getAuthorizationForm(TL_account_getAuthorizationForm&& from) noexcept
    : TL_account_getAuthorizationForm() {
    *this = ::std::move(from);
  }

  inline TL_account_getAuthorizationForm& operator=(TL_account_getAuthorizationForm&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TL_account_getAuthorizationForm& default_instance();

  static inline const TL_account_getAuthorizationForm* internal_default_instance() {
    return reinterpret_cast<const TL_account_getAuthorizationForm*>(
               &_TL_account_getAuthorizationForm_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    69;

  void Swap(TL_account_getAuthorizationForm* other);
  friend void swap(TL_account_getAuthorizationForm& a, TL_account_getAuthorizationForm& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TL_account_getAuthorizationForm* New() const PROTOBUF_FINAL { return New(NULL); }

  TL_account_getAuthorizationForm* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TL_account_getAuthorizationForm* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string scope = 2;
  void clear_scope();
  static const int kScopeFieldNumber = 2;
  const ::std::string& scope() const;
  void set_scope(const ::std::string& value);
  #if LANG_CXX11
  void set_scope(::std::string&& value);
  #endif
  void set_scope(const char* value);
  void set_scope(const char* value, size_t size);
  ::std::string* mutable_scope();
  ::std::string* release_scope();
  void set_allocated_scope(::std::string* scope);

  // string public_key = 3;
  void clear_public_key();
  static const int kPublicKeyFieldNumber = 3;
  const ::std::string& public_key() const;
  void set_public_key(const ::std::string& value);
  #if LANG_CXX11
  void set_public_key(::std::string&& value);
  #endif
  void set_public_key(const char* value);
  void set_public_key(const char* value, size_t size);
  ::std::string* mutable_public_key();
  ::std::string* release_public_key();
  void set_allocated_public_key(::std::string* public_key);

  // int32 bot_id = 1;
  void clear_bot_id();
  static const int kBotIdFieldNumber = 1;
  ::google::protobuf::int32 bot_id() const;
  void set_bot_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:mtproto.TL_account_getAuthorizationForm)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr scope_;
  ::google::protobuf::internal::ArenaStringPtr public_key_;
  ::google::protobuf::int32 bot_id_;
  mutable int _cached_size_;
  friend struct protobuf_schema_2etl_2esync_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TL_account_acceptAuthorization : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtproto.TL_account_acceptAuthorization) */ {
 public:
  TL_account_acceptAuthorization();
  virtual ~TL_account_acceptAuthorization();

  TL_account_acceptAuthorization(const TL_account_acceptAuthorization& from);

  inline TL_account_acceptAuthorization& operator=(const TL_account_acceptAuthorization& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TL_account_acceptAuthorization(TL_account_acceptAuthorization&& from) noexcept
    : TL_account_acceptAuthorization() {
    *this = ::std::move(from);
  }

  inline TL_account_acceptAuthorization& operator=(TL_account_acceptAuthorization&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TL_account_acceptAuthorization& default_instance();

  static inline const TL_account_acceptAuthorization* internal_default_instance() {
    return reinterpret_cast<const TL_account_acceptAuthorization*>(
               &_TL_account_acceptAuthorization_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    70;

  void Swap(TL_account_acceptAuthorization* other);
  friend void swap(TL_account_acceptAuthorization& a, TL_account_acceptAuthorization& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TL_account_acceptAuthorization* New() const PROTOBUF_FINAL { return New(NULL); }

  TL_account_acceptAuthorization* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TL_account_acceptAuthorization* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .mtproto.SecureValueHash value_hashes = 4;
  int value_hashes_size() const;
  void clear_value_hashes();
  static const int kValueHashesFieldNumber = 4;
  const ::mtproto::SecureValueHash& value_hashes(int index) const;
  ::mtproto::SecureValueHash* mutable_value_hashes(int index);
  ::mtproto::SecureValueHash* add_value_hashes();
  ::google::protobuf::RepeatedPtrField< ::mtproto::SecureValueHash >*
      mutable_value_hashes();
  const ::google::protobuf::RepeatedPtrField< ::mtproto::SecureValueHash >&
      value_hashes() const;

  // string scope = 2;
  void clear_scope();
  static const int kScopeFieldNumber = 2;
  const ::std::string& scope() const;
  void set_scope(const ::std::string& value);
  #if LANG_CXX11
  void set_scope(::std::string&& value);
  #endif
  void set_scope(const char* value);
  void set_scope(const char* value, size_t size);
  ::std::string* mutable_scope();
  ::std::string* release_scope();
  void set_allocated_scope(::std::string* scope);

  // string public_key = 3;
  void clear_public_key();
  static const int kPublicKeyFieldNumber = 3;
  const ::std::string& public_key() const;
  void set_public_key(const ::std::string& value);
  #if LANG_CXX11
  void set_public_key(::std::string&& value);
  #endif
  void set_public_key(const char* value);
  void set_public_key(const char* value, size_t size);
  ::std::string* mutable_public_key();
  ::std::string* release_public_key();
  void set_allocated_public_key(::std::string* public_key);

  // .mtproto.SecureCredentialsEncrypted credentials = 5;
  bool has_credentials() const;
  void clear_credentials();
  static const int kCredentialsFieldNumber = 5;
  const ::mtproto::SecureCredentialsEncrypted& credentials() const;
  ::mtproto::SecureCredentialsEncrypted* mutable_credentials();
  ::mtproto::SecureCredentialsEncrypted* release_credentials();
  void set_allocated_credentials(::mtproto::SecureCredentialsEncrypted* credentials);

  // int32 bot_id = 1;
  void clear_bot_id();
  static const int kBotIdFieldNumber = 1;
  ::google::protobuf::int32 bot_id() const;
  void set_bot_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:mtproto.TL_account_acceptAuthorization)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::mtproto::SecureValueHash > value_hashes_;
  ::google::protobuf::internal::ArenaStringPtr scope_;
  ::google::protobuf::internal::ArenaStringPtr public_key_;
  ::mtproto::SecureCredentialsEncrypted* credentials_;
  ::google::protobuf::int32 bot_id_;
  mutable int _cached_size_;
  friend struct protobuf_schema_2etl_2esync_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TL_account_sendVerifyPhoneCode : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtproto.TL_account_sendVerifyPhoneCode) */ {
 public:
  TL_account_sendVerifyPhoneCode();
  virtual ~TL_account_sendVerifyPhoneCode();

  TL_account_sendVerifyPhoneCode(const TL_account_sendVerifyPhoneCode& from);

  inline TL_account_sendVerifyPhoneCode& operator=(const TL_account_sendVerifyPhoneCode& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TL_account_sendVerifyPhoneCode(TL_account_sendVerifyPhoneCode&& from) noexcept
    : TL_account_sendVerifyPhoneCode() {
    *this = ::std::move(from);
  }

  inline TL_account_sendVerifyPhoneCode& operator=(TL_account_sendVerifyPhoneCode&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TL_account_sendVerifyPhoneCode& default_instance();

  static inline const TL_account_sendVerifyPhoneCode* internal_default_instance() {
    return reinterpret_cast<const TL_account_sendVerifyPhoneCode*>(
               &_TL_account_sendVerifyPhoneCode_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    71;

  void Swap(TL_account_sendVerifyPhoneCode* other);
  friend void swap(TL_account_sendVerifyPhoneCode& a, TL_account_sendVerifyPhoneCode& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TL_account_sendVerifyPhoneCode* New() const PROTOBUF_FINAL { return New(NULL); }

  TL_account_sendVerifyPhoneCode* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TL_account_sendVerifyPhoneCode* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string phone_number = 3;
  void clear_phone_number();
  static const int kPhoneNumberFieldNumber = 3;
  const ::std::string& phone_number() const;
  void set_phone_number(const ::std::string& value);
  #if LANG_CXX11
  void set_phone_number(::std::string&& value);
  #endif
  void set_phone_number(const char* value);
  void set_phone_number(const char* value, size_t size);
  ::std::string* mutable_phone_number();
  ::std::string* release_phone_number();
  void set_allocated_phone_number(::std::string* phone_number);

  // .mtproto.Bool current_number = 4;
  bool has_current_number() const;
  void clear_current_number();
  static const int kCurrentNumberFieldNumber = 4;
  const ::mtproto::Bool& current_number() const;
  ::mtproto::Bool* mutable_current_number();
  ::mtproto::Bool* release_current_number();
  void set_allocated_current_number(::mtproto::Bool* current_number);

  // bool allow_flashcall = 2;
  void clear_allow_flashcall();
  static const int kAllowFlashcallFieldNumber = 2;
  bool allow_flashcall() const;
  void set_allow_flashcall(bool value);

  // @@protoc_insertion_point(class_scope:mtproto.TL_account_sendVerifyPhoneCode)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr phone_number_;
  ::mtproto::Bool* current_number_;
  bool allow_flashcall_;
  mutable int _cached_size_;
  friend struct protobuf_schema_2etl_2esync_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TL_account_verifyPhone : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtproto.TL_account_verifyPhone) */ {
 public:
  TL_account_verifyPhone();
  virtual ~TL_account_verifyPhone();

  TL_account_verifyPhone(const TL_account_verifyPhone& from);

  inline TL_account_verifyPhone& operator=(const TL_account_verifyPhone& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TL_account_verifyPhone(TL_account_verifyPhone&& from) noexcept
    : TL_account_verifyPhone() {
    *this = ::std::move(from);
  }

  inline TL_account_verifyPhone& operator=(TL_account_verifyPhone&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TL_account_verifyPhone& default_instance();

  static inline const TL_account_verifyPhone* internal_default_instance() {
    return reinterpret_cast<const TL_account_verifyPhone*>(
               &_TL_account_verifyPhone_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    72;

  void Swap(TL_account_verifyPhone* other);
  friend void swap(TL_account_verifyPhone& a, TL_account_verifyPhone& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TL_account_verifyPhone* New() const PROTOBUF_FINAL { return New(NULL); }

  TL_account_verifyPhone* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TL_account_verifyPhone* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string phone_number = 1;
  void clear_phone_number();
  static const int kPhoneNumberFieldNumber = 1;
  const ::std::string& phone_number() const;
  void set_phone_number(const ::std::string& value);
  #if LANG_CXX11
  void set_phone_number(::std::string&& value);
  #endif
  void set_phone_number(const char* value);
  void set_phone_number(const char* value, size_t size);
  ::std::string* mutable_phone_number();
  ::std::string* release_phone_number();
  void set_allocated_phone_number(::std::string* phone_number);

  // string phone_code_hash = 2;
  void clear_phone_code_hash();
  static const int kPhoneCodeHashFieldNumber = 2;
  const ::std::string& phone_code_hash() const;
  void set_phone_code_hash(const ::std::string& value);
  #if LANG_CXX11
  void set_phone_code_hash(::std::string&& value);
  #endif
  void set_phone_code_hash(const char* value);
  void set_phone_code_hash(const char* value, size_t size);
  ::std::string* mutable_phone_code_hash();
  ::std::string* release_phone_code_hash();
  void set_allocated_phone_code_hash(::std::string* phone_code_hash);

  // string phone_code = 3;
  void clear_phone_code();
  static const int kPhoneCodeFieldNumber = 3;
  const ::std::string& phone_code() const;
  void set_phone_code(const ::std::string& value);
  #if LANG_CXX11
  void set_phone_code(::std::string&& value);
  #endif
  void set_phone_code(const char* value);
  void set_phone_code(const char* value, size_t size);
  ::std::string* mutable_phone_code();
  ::std::string* release_phone_code();
  void set_allocated_phone_code(::std::string* phone_code);

  // @@protoc_insertion_point(class_scope:mtproto.TL_account_verifyPhone)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr phone_number_;
  ::google::protobuf::internal::ArenaStringPtr phone_code_hash_;
  ::google::protobuf::internal::ArenaStringPtr phone_code_;
  mutable int _cached_size_;
  friend struct protobuf_schema_2etl_2esync_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TL_account_sendVerifyEmailCode : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtproto.TL_account_sendVerifyEmailCode) */ {
 public:
  TL_account_sendVerifyEmailCode();
  virtual ~TL_account_sendVerifyEmailCode();

  TL_account_sendVerifyEmailCode(const TL_account_sendVerifyEmailCode& from);

  inline TL_account_sendVerifyEmailCode& operator=(const TL_account_sendVerifyEmailCode& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TL_account_sendVerifyEmailCode(TL_account_sendVerifyEmailCode&& from) noexcept
    : TL_account_sendVerifyEmailCode() {
    *this = ::std::move(from);
  }

  inline TL_account_sendVerifyEmailCode& operator=(TL_account_sendVerifyEmailCode&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TL_account_sendVerifyEmailCode& default_instance();

  static inline const TL_account_sendVerifyEmailCode* internal_default_instance() {
    return reinterpret_cast<const TL_account_sendVerifyEmailCode*>(
               &_TL_account_sendVerifyEmailCode_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    73;

  void Swap(TL_account_sendVerifyEmailCode* other);
  friend void swap(TL_account_sendVerifyEmailCode& a, TL_account_sendVerifyEmailCode& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TL_account_sendVerifyEmailCode* New() const PROTOBUF_FINAL { return New(NULL); }

  TL_account_sendVerifyEmailCode* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TL_account_sendVerifyEmailCode* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string email = 1;
  void clear_email();
  static const int kEmailFieldNumber = 1;
  const ::std::string& email() const;
  void set_email(const ::std::string& value);
  #if LANG_CXX11
  void set_email(::std::string&& value);
  #endif
  void set_email(const char* value);
  void set_email(const char* value, size_t size);
  ::std::string* mutable_email();
  ::std::string* release_email();
  void set_allocated_email(::std::string* email);

  // @@protoc_insertion_point(class_scope:mtproto.TL_account_sendVerifyEmailCode)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr email_;
  mutable int _cached_size_;
  friend struct protobuf_schema_2etl_2esync_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TL_account_verifyEmail : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtproto.TL_account_verifyEmail) */ {
 public:
  TL_account_verifyEmail();
  virtual ~TL_account_verifyEmail();

  TL_account_verifyEmail(const TL_account_verifyEmail& from);

  inline TL_account_verifyEmail& operator=(const TL_account_verifyEmail& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TL_account_verifyEmail(TL_account_verifyEmail&& from) noexcept
    : TL_account_verifyEmail() {
    *this = ::std::move(from);
  }

  inline TL_account_verifyEmail& operator=(TL_account_verifyEmail&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TL_account_verifyEmail& default_instance();

  static inline const TL_account_verifyEmail* internal_default_instance() {
    return reinterpret_cast<const TL_account_verifyEmail*>(
               &_TL_account_verifyEmail_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    74;

  void Swap(TL_account_verifyEmail* other);
  friend void swap(TL_account_verifyEmail& a, TL_account_verifyEmail& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TL_account_verifyEmail* New() const PROTOBUF_FINAL { return New(NULL); }

  TL_account_verifyEmail* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TL_account_verifyEmail* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string email = 1;
  void clear_email();
  static const int kEmailFieldNumber = 1;
  const ::std::string& email() const;
  void set_email(const ::std::string& value);
  #if LANG_CXX11
  void set_email(::std::string&& value);
  #endif
  void set_email(const char* value);
  void set_email(const char* value, size_t size);
  ::std::string* mutable_email();
  ::std::string* release_email();
  void set_allocated_email(::std::string* email);

  // string code = 2;
  void clear_code();
  static const int kCodeFieldNumber = 2;
  const ::std::string& code() const;
  void set_code(const ::std::string& value);
  #if LANG_CXX11
  void set_code(::std::string&& value);
  #endif
  void set_code(const char* value);
  void set_code(const char* value, size_t size);
  ::std::string* mutable_code();
  ::std::string* release_code();
  void set_allocated_code(::std::string* code);

  // @@protoc_insertion_point(class_scope:mtproto.TL_account_verifyEmail)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr email_;
  ::google::protobuf::internal::ArenaStringPtr code_;
  mutable int _cached_size_;
  friend struct protobuf_schema_2etl_2esync_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TL_account_initTakeoutSession : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtproto.TL_account_initTakeoutSession) */ {
 public:
  TL_account_initTakeoutSession();
  virtual ~TL_account_initTakeoutSession();

  TL_account_initTakeoutSession(const TL_account_initTakeoutSession& from);

  inline TL_account_initTakeoutSession& operator=(const TL_account_initTakeoutSession& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TL_account_initTakeoutSession(TL_account_initTakeoutSession&& from) noexcept
    : TL_account_initTakeoutSession() {
    *this = ::std::move(from);
  }

  inline TL_account_initTakeoutSession& operator=(TL_account_initTakeoutSession&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TL_account_initTakeoutSession& default_instance();

  static inline const TL_account_initTakeoutSession* internal_default_instance() {
    return reinterpret_cast<const TL_account_initTakeoutSession*>(
               &_TL_account_initTakeoutSession_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    75;

  void Swap(TL_account_initTakeoutSession* other);
  friend void swap(TL_account_initTakeoutSession& a, TL_account_initTakeoutSession& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TL_account_initTakeoutSession* New() const PROTOBUF_FINAL { return New(NULL); }

  TL_account_initTakeoutSession* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TL_account_initTakeoutSession* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bool contacts = 2;
  void clear_contacts();
  static const int kContactsFieldNumber = 2;
  bool contacts() const;
  void set_contacts(bool value);

  // bool message_users = 3;
  void clear_message_users();
  static const int kMessageUsersFieldNumber = 3;
  bool message_users() const;
  void set_message_users(bool value);

  // bool message_chats = 4;
  void clear_message_chats();
  static const int kMessageChatsFieldNumber = 4;
  bool message_chats() const;
  void set_message_chats(bool value);

  // bool message_megagroups = 5;
  void clear_message_megagroups();
  static const int kMessageMegagroupsFieldNumber = 5;
  bool message_megagroups() const;
  void set_message_megagroups(bool value);

  // bool message_channels = 6;
  void clear_message_channels();
  static const int kMessageChannelsFieldNumber = 6;
  bool message_channels() const;
  void set_message_channels(bool value);

  // bool files = 7;
  void clear_files();
  static const int kFilesFieldNumber = 7;
  bool files() const;
  void set_files(bool value);

  // int32 file_max_size = 8;
  void clear_file_max_size();
  static const int kFileMaxSizeFieldNumber = 8;
  ::google::protobuf::int32 file_max_size() const;
  void set_file_max_size(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:mtproto.TL_account_initTakeoutSession)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool contacts_;
  bool message_users_;
  bool message_chats_;
  bool message_megagroups_;
  bool message_channels_;
  bool files_;
  ::google::protobuf::int32 file_max_size_;
  mutable int _cached_size_;
  friend struct protobuf_schema_2etl_2esync_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TL_account_finishTakeoutSession : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtproto.TL_account_finishTakeoutSession) */ {
 public:
  TL_account_finishTakeoutSession();
  virtual ~TL_account_finishTakeoutSession();

  TL_account_finishTakeoutSession(const TL_account_finishTakeoutSession& from);

  inline TL_account_finishTakeoutSession& operator=(const TL_account_finishTakeoutSession& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TL_account_finishTakeoutSession(TL_account_finishTakeoutSession&& from) noexcept
    : TL_account_finishTakeoutSession() {
    *this = ::std::move(from);
  }

  inline TL_account_finishTakeoutSession& operator=(TL_account_finishTakeoutSession&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TL_account_finishTakeoutSession& default_instance();

  static inline const TL_account_finishTakeoutSession* internal_default_instance() {
    return reinterpret_cast<const TL_account_finishTakeoutSession*>(
               &_TL_account_finishTakeoutSession_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    76;

  void Swap(TL_account_finishTakeoutSession* other);
  friend void swap(TL_account_finishTakeoutSession& a, TL_account_finishTakeoutSession& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TL_account_finishTakeoutSession* New() const PROTOBUF_FINAL { return New(NULL); }

  TL_account_finishTakeoutSession* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TL_account_finishTakeoutSession* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bool success = 2;
  void clear_success();
  static const int kSuccessFieldNumber = 2;
  bool success() const;
  void set_success(bool value);

  // @@protoc_insertion_point(class_scope:mtproto.TL_account_finishTakeoutSession)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool success_;
  mutable int _cached_size_;
  friend struct protobuf_schema_2etl_2esync_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TL_users_getUsers : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtproto.TL_users_getUsers) */ {
 public:
  TL_users_getUsers();
  virtual ~TL_users_getUsers();

  TL_users_getUsers(const TL_users_getUsers& from);

  inline TL_users_getUsers& operator=(const TL_users_getUsers& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TL_users_getUsers(TL_users_getUsers&& from) noexcept
    : TL_users_getUsers() {
    *this = ::std::move(from);
  }

  inline TL_users_getUsers& operator=(TL_users_getUsers&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TL_users_getUsers& default_instance();

  static inline const TL_users_getUsers* internal_default_instance() {
    return reinterpret_cast<const TL_users_getUsers*>(
               &_TL_users_getUsers_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    77;

  void Swap(TL_users_getUsers* other);
  friend void swap(TL_users_getUsers& a, TL_users_getUsers& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TL_users_getUsers* New() const PROTOBUF_FINAL { return New(NULL); }

  TL_users_getUsers* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TL_users_getUsers* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .mtproto.InputUser id = 1;
  int id_size() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  const ::mtproto::InputUser& id(int index) const;
  ::mtproto::InputUser* mutable_id(int index);
  ::mtproto::InputUser* add_id();
  ::google::protobuf::RepeatedPtrField< ::mtproto::InputUser >*
      mutable_id();
  const ::google::protobuf::RepeatedPtrField< ::mtproto::InputUser >&
      id() const;

  // @@protoc_insertion_point(class_scope:mtproto.TL_users_getUsers)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::mtproto::InputUser > id_;
  mutable int _cached_size_;
  friend struct protobuf_schema_2etl_2esync_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TL_users_getFullUser : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtproto.TL_users_getFullUser) */ {
 public:
  TL_users_getFullUser();
  virtual ~TL_users_getFullUser();

  TL_users_getFullUser(const TL_users_getFullUser& from);

  inline TL_users_getFullUser& operator=(const TL_users_getFullUser& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TL_users_getFullUser(TL_users_getFullUser&& from) noexcept
    : TL_users_getFullUser() {
    *this = ::std::move(from);
  }

  inline TL_users_getFullUser& operator=(TL_users_getFullUser&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TL_users_getFullUser& default_instance();

  static inline const TL_users_getFullUser* internal_default_instance() {
    return reinterpret_cast<const TL_users_getFullUser*>(
               &_TL_users_getFullUser_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    78;

  void Swap(TL_users_getFullUser* other);
  friend void swap(TL_users_getFullUser& a, TL_users_getFullUser& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TL_users_getFullUser* New() const PROTOBUF_FINAL { return New(NULL); }

  TL_users_getFullUser* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TL_users_getFullUser* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .mtproto.InputUser id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  const ::mtproto::InputUser& id() const;
  ::mtproto::InputUser* mutable_id();
  ::mtproto::InputUser* release_id();
  void set_allocated_id(::mtproto::InputUser* id);

  // @@protoc_insertion_point(class_scope:mtproto.TL_users_getFullUser)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::mtproto::InputUser* id_;
  mutable int _cached_size_;
  friend struct protobuf_schema_2etl_2esync_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TL_users_setSecureValueErrors : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtproto.TL_users_setSecureValueErrors) */ {
 public:
  TL_users_setSecureValueErrors();
  virtual ~TL_users_setSecureValueErrors();

  TL_users_setSecureValueErrors(const TL_users_setSecureValueErrors& from);

  inline TL_users_setSecureValueErrors& operator=(const TL_users_setSecureValueErrors& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TL_users_setSecureValueErrors(TL_users_setSecureValueErrors&& from) noexcept
    : TL_users_setSecureValueErrors() {
    *this = ::std::move(from);
  }

  inline TL_users_setSecureValueErrors& operator=(TL_users_setSecureValueErrors&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TL_users_setSecureValueErrors& default_instance();

  static inline const TL_users_setSecureValueErrors* internal_default_instance() {
    return reinterpret_cast<const TL_users_setSecureValueErrors*>(
               &_TL_users_setSecureValueErrors_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    79;

  void Swap(TL_users_setSecureValueErrors* other);
  friend void swap(TL_users_setSecureValueErrors& a, TL_users_setSecureValueErrors& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TL_users_setSecureValueErrors* New() const PROTOBUF_FINAL { return New(NULL); }

  TL_users_setSecureValueErrors* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TL_users_setSecureValueErrors* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .mtproto.SecureValueError errors = 2;
  int errors_size() const;
  void clear_errors();
  static const int kErrorsFieldNumber = 2;
  const ::mtproto::SecureValueError& errors(int index) const;
  ::mtproto::SecureValueError* mutable_errors(int index);
  ::mtproto::SecureValueError* add_errors();
  ::google::protobuf::RepeatedPtrField< ::mtproto::SecureValueError >*
      mutable_errors();
  const ::google::protobuf::RepeatedPtrField< ::mtproto::SecureValueError >&
      errors() const;

  // .mtproto.InputUser id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  const ::mtproto::InputUser& id() const;
  ::mtproto::InputUser* mutable_id();
  ::mtproto::InputUser* release_id();
  void set_allocated_id(::mtproto::InputUser* id);

  // @@protoc_insertion_point(class_scope:mtproto.TL_users_setSecureValueErrors)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::mtproto::SecureValueError > errors_;
  ::mtproto::InputUser* id_;
  mutable int _cached_size_;
  friend struct protobuf_schema_2etl_2esync_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TL_contacts_getStatuses : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtproto.TL_contacts_getStatuses) */ {
 public:
  TL_contacts_getStatuses();
  virtual ~TL_contacts_getStatuses();

  TL_contacts_getStatuses(const TL_contacts_getStatuses& from);

  inline TL_contacts_getStatuses& operator=(const TL_contacts_getStatuses& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TL_contacts_getStatuses(TL_contacts_getStatuses&& from) noexcept
    : TL_contacts_getStatuses() {
    *this = ::std::move(from);
  }

  inline TL_contacts_getStatuses& operator=(TL_contacts_getStatuses&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TL_contacts_getStatuses& default_instance();

  static inline const TL_contacts_getStatuses* internal_default_instance() {
    return reinterpret_cast<const TL_contacts_getStatuses*>(
               &_TL_contacts_getStatuses_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    80;

  void Swap(TL_contacts_getStatuses* other);
  friend void swap(TL_contacts_getStatuses& a, TL_contacts_getStatuses& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TL_contacts_getStatuses* New() const PROTOBUF_FINAL { return New(NULL); }

  TL_contacts_getStatuses* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TL_contacts_getStatuses* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:mtproto.TL_contacts_getStatuses)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable int _cached_size_;
  friend struct protobuf_schema_2etl_2esync_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TL_contacts_getContacts : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtproto.TL_contacts_getContacts) */ {
 public:
  TL_contacts_getContacts();
  virtual ~TL_contacts_getContacts();

  TL_contacts_getContacts(const TL_contacts_getContacts& from);

  inline TL_contacts_getContacts& operator=(const TL_contacts_getContacts& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TL_contacts_getContacts(TL_contacts_getContacts&& from) noexcept
    : TL_contacts_getContacts() {
    *this = ::std::move(from);
  }

  inline TL_contacts_getContacts& operator=(TL_contacts_getContacts&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TL_contacts_getContacts& default_instance();

  static inline const TL_contacts_getContacts* internal_default_instance() {
    return reinterpret_cast<const TL_contacts_getContacts*>(
               &_TL_contacts_getContacts_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    81;

  void Swap(TL_contacts_getContacts* other);
  friend void swap(TL_contacts_getContacts& a, TL_contacts_getContacts& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TL_contacts_getContacts* New() const PROTOBUF_FINAL { return New(NULL); }

  TL_contacts_getContacts* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TL_contacts_getContacts* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 hash = 1;
  void clear_hash();
  static const int kHashFieldNumber = 1;
  ::google::protobuf::int32 hash() const;
  void set_hash(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:mtproto.TL_contacts_getContacts)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 hash_;
  mutable int _cached_size_;
  friend struct protobuf_schema_2etl_2esync_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TL_contacts_importContacts : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtproto.TL_contacts_importContacts) */ {
 public:
  TL_contacts_importContacts();
  virtual ~TL_contacts_importContacts();

  TL_contacts_importContacts(const TL_contacts_importContacts& from);

  inline TL_contacts_importContacts& operator=(const TL_contacts_importContacts& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TL_contacts_importContacts(TL_contacts_importContacts&& from) noexcept
    : TL_contacts_importContacts() {
    *this = ::std::move(from);
  }

  inline TL_contacts_importContacts& operator=(TL_contacts_importContacts&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TL_contacts_importContacts& default_instance();

  static inline const TL_contacts_importContacts* internal_default_instance() {
    return reinterpret_cast<const TL_contacts_importContacts*>(
               &_TL_contacts_importContacts_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    82;

  void Swap(TL_contacts_importContacts* other);
  friend void swap(TL_contacts_importContacts& a, TL_contacts_importContacts& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TL_contacts_importContacts* New() const PROTOBUF_FINAL { return New(NULL); }

  TL_contacts_importContacts* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TL_contacts_importContacts* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .mtproto.InputContact contacts = 1;
  int contacts_size() const;
  void clear_contacts();
  static const int kContactsFieldNumber = 1;
  const ::mtproto::InputContact& contacts(int index) const;
  ::mtproto::InputContact* mutable_contacts(int index);
  ::mtproto::InputContact* add_contacts();
  ::google::protobuf::RepeatedPtrField< ::mtproto::InputContact >*
      mutable_contacts();
  const ::google::protobuf::RepeatedPtrField< ::mtproto::InputContact >&
      contacts() const;

  // @@protoc_insertion_point(class_scope:mtproto.TL_contacts_importContacts)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::mtproto::InputContact > contacts_;
  mutable int _cached_size_;
  friend struct protobuf_schema_2etl_2esync_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TL_contacts_deleteContact : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtproto.TL_contacts_deleteContact) */ {
 public:
  TL_contacts_deleteContact();
  virtual ~TL_contacts_deleteContact();

  TL_contacts_deleteContact(const TL_contacts_deleteContact& from);

  inline TL_contacts_deleteContact& operator=(const TL_contacts_deleteContact& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TL_contacts_deleteContact(TL_contacts_deleteContact&& from) noexcept
    : TL_contacts_deleteContact() {
    *this = ::std::move(from);
  }

  inline TL_contacts_deleteContact& operator=(TL_contacts_deleteContact&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TL_contacts_deleteContact& default_instance();

  static inline const TL_contacts_deleteContact* internal_default_instance() {
    return reinterpret_cast<const TL_contacts_deleteContact*>(
               &_TL_contacts_deleteContact_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    83;

  void Swap(TL_contacts_deleteContact* other);
  friend void swap(TL_contacts_deleteContact& a, TL_contacts_deleteContact& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TL_contacts_deleteContact* New() const PROTOBUF_FINAL { return New(NULL); }

  TL_contacts_deleteContact* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TL_contacts_deleteContact* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .mtproto.InputUser id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  const ::mtproto::InputUser& id() const;
  ::mtproto::InputUser* mutable_id();
  ::mtproto::InputUser* release_id();
  void set_allocated_id(::mtproto::InputUser* id);

  // @@protoc_insertion_point(class_scope:mtproto.TL_contacts_deleteContact)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::mtproto::InputUser* id_;
  mutable int _cached_size_;
  friend struct protobuf_schema_2etl_2esync_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TL_contacts_deleteContacts : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtproto.TL_contacts_deleteContacts) */ {
 public:
  TL_contacts_deleteContacts();
  virtual ~TL_contacts_deleteContacts();

  TL_contacts_deleteContacts(const TL_contacts_deleteContacts& from);

  inline TL_contacts_deleteContacts& operator=(const TL_contacts_deleteContacts& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TL_contacts_deleteContacts(TL_contacts_deleteContacts&& from) noexcept
    : TL_contacts_deleteContacts() {
    *this = ::std::move(from);
  }

  inline TL_contacts_deleteContacts& operator=(TL_contacts_deleteContacts&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TL_contacts_deleteContacts& default_instance();

  static inline const TL_contacts_deleteContacts* internal_default_instance() {
    return reinterpret_cast<const TL_contacts_deleteContacts*>(
               &_TL_contacts_deleteContacts_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    84;

  void Swap(TL_contacts_deleteContacts* other);
  friend void swap(TL_contacts_deleteContacts& a, TL_contacts_deleteContacts& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TL_contacts_deleteContacts* New() const PROTOBUF_FINAL { return New(NULL); }

  TL_contacts_deleteContacts* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TL_contacts_deleteContacts* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .mtproto.InputUser id = 1;
  int id_size() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  const ::mtproto::InputUser& id(int index) const;
  ::mtproto::InputUser* mutable_id(int index);
  ::mtproto::InputUser* add_id();
  ::google::protobuf::RepeatedPtrField< ::mtproto::InputUser >*
      mutable_id();
  const ::google::protobuf::RepeatedPtrField< ::mtproto::InputUser >&
      id() const;

  // @@protoc_insertion_point(class_scope:mtproto.TL_contacts_deleteContacts)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::mtproto::InputUser > id_;
  mutable int _cached_size_;
  friend struct protobuf_schema_2etl_2esync_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TL_contacts_block : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtproto.TL_contacts_block) */ {
 public:
  TL_contacts_block();
  virtual ~TL_contacts_block();

  TL_contacts_block(const TL_contacts_block& from);

  inline TL_contacts_block& operator=(const TL_contacts_block& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TL_contacts_block(TL_contacts_block&& from) noexcept
    : TL_contacts_block() {
    *this = ::std::move(from);
  }

  inline TL_contacts_block& operator=(TL_contacts_block&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TL_contacts_block& default_instance();

  static inline const TL_contacts_block* internal_default_instance() {
    return reinterpret_cast<const TL_contacts_block*>(
               &_TL_contacts_block_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    85;

  void Swap(TL_contacts_block* other);
  friend void swap(TL_contacts_block& a, TL_contacts_block& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TL_contacts_block* New() const PROTOBUF_FINAL { return New(NULL); }

  TL_contacts_block* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TL_contacts_block* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .mtproto.InputUser id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  const ::mtproto::InputUser& id() const;
  ::mtproto::InputUser* mutable_id();
  ::mtproto::InputUser* release_id();
  void set_allocated_id(::mtproto::InputUser* id);

  // @@protoc_insertion_point(class_scope:mtproto.TL_contacts_block)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::mtproto::InputUser* id_;
  mutable int _cached_size_;
  friend struct protobuf_schema_2etl_2esync_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TL_contacts_unblock : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtproto.TL_contacts_unblock) */ {
 public:
  TL_contacts_unblock();
  virtual ~TL_contacts_unblock();

  TL_contacts_unblock(const TL_contacts_unblock& from);

  inline TL_contacts_unblock& operator=(const TL_contacts_unblock& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TL_contacts_unblock(TL_contacts_unblock&& from) noexcept
    : TL_contacts_unblock() {
    *this = ::std::move(from);
  }

  inline TL_contacts_unblock& operator=(TL_contacts_unblock&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TL_contacts_unblock& default_instance();

  static inline const TL_contacts_unblock* internal_default_instance() {
    return reinterpret_cast<const TL_contacts_unblock*>(
               &_TL_contacts_unblock_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    86;

  void Swap(TL_contacts_unblock* other);
  friend void swap(TL_contacts_unblock& a, TL_contacts_unblock& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TL_contacts_unblock* New() const PROTOBUF_FINAL { return New(NULL); }

  TL_contacts_unblock* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TL_contacts_unblock* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .mtproto.InputUser id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  const ::mtproto::InputUser& id() const;
  ::mtproto::InputUser* mutable_id();
  ::mtproto::InputUser* release_id();
  void set_allocated_id(::mtproto::InputUser* id);

  // @@protoc_insertion_point(class_scope:mtproto.TL_contacts_unblock)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::mtproto::InputUser* id_;
  mutable int _cached_size_;
  friend struct protobuf_schema_2etl_2esync_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TL_contacts_getBlocked : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtproto.TL_contacts_getBlocked) */ {
 public:
  TL_contacts_getBlocked();
  virtual ~TL_contacts_getBlocked();

  TL_contacts_getBlocked(const TL_contacts_getBlocked& from);

  inline TL_contacts_getBlocked& operator=(const TL_contacts_getBlocked& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TL_contacts_getBlocked(TL_contacts_getBlocked&& from) noexcept
    : TL_contacts_getBlocked() {
    *this = ::std::move(from);
  }

  inline TL_contacts_getBlocked& operator=(TL_contacts_getBlocked&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TL_contacts_getBlocked& default_instance();

  static inline const TL_contacts_getBlocked* internal_default_instance() {
    return reinterpret_cast<const TL_contacts_getBlocked*>(
               &_TL_contacts_getBlocked_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    87;

  void Swap(TL_contacts_getBlocked* other);
  friend void swap(TL_contacts_getBlocked& a, TL_contacts_getBlocked& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TL_contacts_getBlocked* New() const PROTOBUF_FINAL { return New(NULL); }

  TL_contacts_getBlocked* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TL_contacts_getBlocked* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 offset = 1;
  void clear_offset();
  static const int kOffsetFieldNumber = 1;
  ::google::protobuf::int32 offset() const;
  void set_offset(::google::protobuf::int32 value);

  // int32 limit = 2;
  void clear_limit();
  static const int kLimitFieldNumber = 2;
  ::google::protobuf::int32 limit() const;
  void set_limit(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:mtproto.TL_contacts_getBlocked)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 offset_;
  ::google::protobuf::int32 limit_;
  mutable int _cached_size_;
  friend struct protobuf_schema_2etl_2esync_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TL_contacts_exportCard : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtproto.TL_contacts_exportCard) */ {
 public:
  TL_contacts_exportCard();
  virtual ~TL_contacts_exportCard();

  TL_contacts_exportCard(const TL_contacts_exportCard& from);

  inline TL_contacts_exportCard& operator=(const TL_contacts_exportCard& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TL_contacts_exportCard(TL_contacts_exportCard&& from) noexcept
    : TL_contacts_exportCard() {
    *this = ::std::move(from);
  }

  inline TL_contacts_exportCard& operator=(TL_contacts_exportCard&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TL_contacts_exportCard& default_instance();

  static inline const TL_contacts_exportCard* internal_default_instance() {
    return reinterpret_cast<const TL_contacts_exportCard*>(
               &_TL_contacts_exportCard_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    88;

  void Swap(TL_contacts_exportCard* other);
  friend void swap(TL_contacts_exportCard& a, TL_contacts_exportCard& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TL_contacts_exportCard* New() const PROTOBUF_FINAL { return New(NULL); }

  TL_contacts_exportCard* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TL_contacts_exportCard* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:mtproto.TL_contacts_exportCard)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable int _cached_size_;
  friend struct protobuf_schema_2etl_2esync_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TL_contacts_importCard : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtproto.TL_contacts_importCard) */ {
 public:
  TL_contacts_importCard();
  virtual ~TL_contacts_importCard();

  TL_contacts_importCard(const TL_contacts_importCard& from);

  inline TL_contacts_importCard& operator=(const TL_contacts_importCard& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TL_contacts_importCard(TL_contacts_importCard&& from) noexcept
    : TL_contacts_importCard() {
    *this = ::std::move(from);
  }

  inline TL_contacts_importCard& operator=(TL_contacts_importCard&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TL_contacts_importCard& default_instance();

  static inline const TL_contacts_importCard* internal_default_instance() {
    return reinterpret_cast<const TL_contacts_importCard*>(
               &_TL_contacts_importCard_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    89;

  void Swap(TL_contacts_importCard* other);
  friend void swap(TL_contacts_importCard& a, TL_contacts_importCard& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TL_contacts_importCard* New() const PROTOBUF_FINAL { return New(NULL); }

  TL_contacts_importCard* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TL_contacts_importCard* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 export_card = 1;
  int export_card_size() const;
  void clear_export_card();
  static const int kExportCardFieldNumber = 1;
  ::google::protobuf::int32 export_card(int index) const;
  void set_export_card(int index, ::google::protobuf::int32 value);
  void add_export_card(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      export_card() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_export_card();

  // @@protoc_insertion_point(class_scope:mtproto.TL_contacts_importCard)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > export_card_;
  mutable int _cached_size_;
  friend struct protobuf_schema_2etl_2esync_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TL_contacts_search : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtproto.TL_contacts_search) */ {
 public:
  TL_contacts_search();
  virtual ~TL_contacts_search();

  TL_contacts_search(const TL_contacts_search& from);

  inline TL_contacts_search& operator=(const TL_contacts_search& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TL_contacts_search(TL_contacts_search&& from) noexcept
    : TL_contacts_search() {
    *this = ::std::move(from);
  }

  inline TL_contacts_search& operator=(TL_contacts_search&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TL_contacts_search& default_instance();

  static inline const TL_contacts_search* internal_default_instance() {
    return reinterpret_cast<const TL_contacts_search*>(
               &_TL_contacts_search_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    90;

  void Swap(TL_contacts_search* other);
  friend void swap(TL_contacts_search& a, TL_contacts_search& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TL_contacts_search* New() const PROTOBUF_FINAL { return New(NULL); }

  TL_contacts_search* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TL_contacts_search* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string q = 1;
  void clear_q();
  static const int kQFieldNumber = 1;
  const ::std::string& q() const;
  void set_q(const ::std::string& value);
  #if LANG_CXX11
  void set_q(::std::string&& value);
  #endif
  void set_q(const char* value);
  void set_q(const char* value, size_t size);
  ::std::string* mutable_q();
  ::std::string* release_q();
  void set_allocated_q(::std::string* q);

  // int32 limit = 2;
  void clear_limit();
  static const int kLimitFieldNumber = 2;
  ::google::protobuf::int32 limit() const;
  void set_limit(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:mtproto.TL_contacts_search)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr q_;
  ::google::protobuf::int32 limit_;
  mutable int _cached_size_;
  friend struct protobuf_schema_2etl_2esync_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TL_contacts_resolveUsername : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtproto.TL_contacts_resolveUsername) */ {
 public:
  TL_contacts_resolveUsername();
  virtual ~TL_contacts_resolveUsername();

  TL_contacts_resolveUsername(const TL_contacts_resolveUsername& from);

  inline TL_contacts_resolveUsername& operator=(const TL_contacts_resolveUsername& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TL_contacts_resolveUsername(TL_contacts_resolveUsername&& from) noexcept
    : TL_contacts_resolveUsername() {
    *this = ::std::move(from);
  }

  inline TL_contacts_resolveUsername& operator=(TL_contacts_resolveUsername&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TL_contacts_resolveUsername& default_instance();

  static inline const TL_contacts_resolveUsername* internal_default_instance() {
    return reinterpret_cast<const TL_contacts_resolveUsername*>(
               &_TL_contacts_resolveUsername_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    91;

  void Swap(TL_contacts_resolveUsername* other);
  friend void swap(TL_contacts_resolveUsername& a, TL_contacts_resolveUsername& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TL_contacts_resolveUsername* New() const PROTOBUF_FINAL { return New(NULL); }

  TL_contacts_resolveUsername* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TL_contacts_resolveUsername* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string username = 1;
  void clear_username();
  static const int kUsernameFieldNumber = 1;
  const ::std::string& username() const;
  void set_username(const ::std::string& value);
  #if LANG_CXX11
  void set_username(::std::string&& value);
  #endif
  void set_username(const char* value);
  void set_username(const char* value, size_t size);
  ::std::string* mutable_username();
  ::std::string* release_username();
  void set_allocated_username(::std::string* username);

  // @@protoc_insertion_point(class_scope:mtproto.TL_contacts_resolveUsername)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr username_;
  mutable int _cached_size_;
  friend struct protobuf_schema_2etl_2esync_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TL_contacts_getTopPeers : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtproto.TL_contacts_getTopPeers) */ {
 public:
  TL_contacts_getTopPeers();
  virtual ~TL_contacts_getTopPeers();

  TL_contacts_getTopPeers(const TL_contacts_getTopPeers& from);

  inline TL_contacts_getTopPeers& operator=(const TL_contacts_getTopPeers& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TL_contacts_getTopPeers(TL_contacts_getTopPeers&& from) noexcept
    : TL_contacts_getTopPeers() {
    *this = ::std::move(from);
  }

  inline TL_contacts_getTopPeers& operator=(TL_contacts_getTopPeers&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TL_contacts_getTopPeers& default_instance();

  static inline const TL_contacts_getTopPeers* internal_default_instance() {
    return reinterpret_cast<const TL_contacts_getTopPeers*>(
               &_TL_contacts_getTopPeers_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    92;

  void Swap(TL_contacts_getTopPeers* other);
  friend void swap(TL_contacts_getTopPeers& a, TL_contacts_getTopPeers& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TL_contacts_getTopPeers* New() const PROTOBUF_FINAL { return New(NULL); }

  TL_contacts_getTopPeers* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TL_contacts_getTopPeers* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bool correspondents = 2;
  void clear_correspondents();
  static const int kCorrespondentsFieldNumber = 2;
  bool correspondents() const;
  void set_correspondents(bool value);

  // bool bots_pm = 3;
  void clear_bots_pm();
  static const int kBotsPmFieldNumber = 3;
  bool bots_pm() const;
  void set_bots_pm(bool value);

  // bool bots_inline = 4;
  void clear_bots_inline();
  static const int kBotsInlineFieldNumber = 4;
  bool bots_inline() const;
  void set_bots_inline(bool value);

  // bool phone_calls = 5;
  void clear_phone_calls();
  static const int kPhoneCallsFieldNumber = 5;
  bool phone_calls() const;
  void set_phone_calls(bool value);

  // bool groups = 6;
  void clear_groups();
  static const int kGroupsFieldNumber = 6;
  bool groups() const;
  void set_groups(bool value);

  // bool channels = 7;
  void clear_channels();
  static const int kChannelsFieldNumber = 7;
  bool channels() const;
  void set_channels(bool value);

  // int32 offset = 8;
  void clear_offset();
  static const int kOffsetFieldNumber = 8;
  ::google::protobuf::int32 offset() const;
  void set_offset(::google::protobuf::int32 value);

  // int32 limit = 9;
  void clear_limit();
  static const int kLimitFieldNumber = 9;
  ::google::protobuf::int32 limit() const;
  void set_limit(::google::protobuf::int32 value);

  // int32 hash = 10;
  void clear_hash();
  static const int kHashFieldNumber = 10;
  ::google::protobuf::int32 hash() const;
  void set_hash(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:mtproto.TL_contacts_getTopPeers)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool correspondents_;
  bool bots_pm_;
  bool bots_inline_;
  bool phone_calls_;
  bool groups_;
  bool channels_;
  ::google::protobuf::int32 offset_;
  ::google::protobuf::int32 limit_;
  ::google::protobuf::int32 hash_;
  mutable int _cached_size_;
  friend struct protobuf_schema_2etl_2esync_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TL_contacts_resetTopPeerRating : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtproto.TL_contacts_resetTopPeerRating) */ {
 public:
  TL_contacts_resetTopPeerRating();
  virtual ~TL_contacts_resetTopPeerRating();

  TL_contacts_resetTopPeerRating(const TL_contacts_resetTopPeerRating& from);

  inline TL_contacts_resetTopPeerRating& operator=(const TL_contacts_resetTopPeerRating& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TL_contacts_resetTopPeerRating(TL_contacts_resetTopPeerRating&& from) noexcept
    : TL_contacts_resetTopPeerRating() {
    *this = ::std::move(from);
  }

  inline TL_contacts_resetTopPeerRating& operator=(TL_contacts_resetTopPeerRating&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TL_contacts_resetTopPeerRating& default_instance();

  static inline const TL_contacts_resetTopPeerRating* internal_default_instance() {
    return reinterpret_cast<const TL_contacts_resetTopPeerRating*>(
               &_TL_contacts_resetTopPeerRating_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    93;

  void Swap(TL_contacts_resetTopPeerRating* other);
  friend void swap(TL_contacts_resetTopPeerRating& a, TL_contacts_resetTopPeerRating& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TL_contacts_resetTopPeerRating* New() const PROTOBUF_FINAL { return New(NULL); }

  TL_contacts_resetTopPeerRating* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TL_contacts_resetTopPeerRating* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .mtproto.TopPeerCategory category = 1;
  bool has_category() const;
  void clear_category();
  static const int kCategoryFieldNumber = 1;
  const ::mtproto::TopPeerCategory& category() const;
  ::mtproto::TopPeerCategory* mutable_category();
  ::mtproto::TopPeerCategory* release_category();
  void set_allocated_category(::mtproto::TopPeerCategory* category);

  // .mtproto.InputPeer peer = 2;
  bool has_peer() const;
  void clear_peer();
  static const int kPeerFieldNumber = 2;
  const ::mtproto::InputPeer& peer() const;
  ::mtproto::InputPeer* mutable_peer();
  ::mtproto::InputPeer* release_peer();
  void set_allocated_peer(::mtproto::InputPeer* peer);

  // @@protoc_insertion_point(class_scope:mtproto.TL_contacts_resetTopPeerRating)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::mtproto::TopPeerCategory* category_;
  ::mtproto::InputPeer* peer_;
  mutable int _cached_size_;
  friend struct protobuf_schema_2etl_2esync_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TL_contacts_resetSaved : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtproto.TL_contacts_resetSaved) */ {
 public:
  TL_contacts_resetSaved();
  virtual ~TL_contacts_resetSaved();

  TL_contacts_resetSaved(const TL_contacts_resetSaved& from);

  inline TL_contacts_resetSaved& operator=(const TL_contacts_resetSaved& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TL_contacts_resetSaved(TL_contacts_resetSaved&& from) noexcept
    : TL_contacts_resetSaved() {
    *this = ::std::move(from);
  }

  inline TL_contacts_resetSaved& operator=(TL_contacts_resetSaved&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TL_contacts_resetSaved& default_instance();

  static inline const TL_contacts_resetSaved* internal_default_instance() {
    return reinterpret_cast<const TL_contacts_resetSaved*>(
               &_TL_contacts_resetSaved_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    94;

  void Swap(TL_contacts_resetSaved* other);
  friend void swap(TL_contacts_resetSaved& a, TL_contacts_resetSaved& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TL_contacts_resetSaved* New() const PROTOBUF_FINAL { return New(NULL); }

  TL_contacts_resetSaved* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TL_contacts_resetSaved* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:mtproto.TL_contacts_resetSaved)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable int _cached_size_;
  friend struct protobuf_schema_2etl_2esync_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TL_contacts_getSaved : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtproto.TL_contacts_getSaved) */ {
 public:
  TL_contacts_getSaved();
  virtual ~TL_contacts_getSaved();

  TL_contacts_getSaved(const TL_contacts_getSaved& from);

  inline TL_contacts_getSaved& operator=(const TL_contacts_getSaved& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TL_contacts_getSaved(TL_contacts_getSaved&& from) noexcept
    : TL_contacts_getSaved() {
    *this = ::std::move(from);
  }

  inline TL_contacts_getSaved& operator=(TL_contacts_getSaved&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TL_contacts_getSaved& default_instance();

  static inline const TL_contacts_getSaved* internal_default_instance() {
    return reinterpret_cast<const TL_contacts_getSaved*>(
               &_TL_contacts_getSaved_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    95;

  void Swap(TL_contacts_getSaved* other);
  friend void swap(TL_contacts_getSaved& a, TL_contacts_getSaved& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TL_contacts_getSaved* New() const PROTOBUF_FINAL { return New(NULL); }

  TL_contacts_getSaved* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TL_contacts_getSaved* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:mtproto.TL_contacts_getSaved)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable int _cached_size_;
  friend struct protobuf_schema_2etl_2esync_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TL_contacts_toggleTopPeers : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtproto.TL_contacts_toggleTopPeers) */ {
 public:
  TL_contacts_toggleTopPeers();
  virtual ~TL_contacts_toggleTopPeers();

  TL_contacts_toggleTopPeers(const TL_contacts_toggleTopPeers& from);

  inline TL_contacts_toggleTopPeers& operator=(const TL_contacts_toggleTopPeers& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TL_contacts_toggleTopPeers(TL_contacts_toggleTopPeers&& from) noexcept
    : TL_contacts_toggleTopPeers() {
    *this = ::std::move(from);
  }

  inline TL_contacts_toggleTopPeers& operator=(TL_contacts_toggleTopPeers&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TL_contacts_toggleTopPeers& default_instance();

  static inline const TL_contacts_toggleTopPeers* internal_default_instance() {
    return reinterpret_cast<const TL_contacts_toggleTopPeers*>(
               &_TL_contacts_toggleTopPeers_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    96;

  void Swap(TL_contacts_toggleTopPeers* other);
  friend void swap(TL_contacts_toggleTopPeers& a, TL_contacts_toggleTopPeers& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TL_contacts_toggleTopPeers* New() const PROTOBUF_FINAL { return New(NULL); }

  TL_contacts_toggleTopPeers* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TL_contacts_toggleTopPeers* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .mtproto.Bool enabled = 1;
  bool has_enabled() const;
  void clear_enabled();
  static const int kEnabledFieldNumber = 1;
  const ::mtproto::Bool& enabled() const;
  ::mtproto::Bool* mutable_enabled();
  ::mtproto::Bool* release_enabled();
  void set_allocated_enabled(::mtproto::Bool* enabled);

  // @@protoc_insertion_point(class_scope:mtproto.TL_contacts_toggleTopPeers)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::mtproto::Bool* enabled_;
  mutable int _cached_size_;
  friend struct protobuf_schema_2etl_2esync_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TL_messages_getMessages : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtproto.TL_messages_getMessages) */ {
 public:
  TL_messages_getMessages();
  virtual ~TL_messages_getMessages();

  TL_messages_getMessages(const TL_messages_getMessages& from);

  inline TL_messages_getMessages& operator=(const TL_messages_getMessages& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TL_messages_getMessages(TL_messages_getMessages&& from) noexcept
    : TL_messages_getMessages() {
    *this = ::std::move(from);
  }

  inline TL_messages_getMessages& operator=(TL_messages_getMessages&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TL_messages_getMessages& default_instance();

  static inline const TL_messages_getMessages* internal_default_instance() {
    return reinterpret_cast<const TL_messages_getMessages*>(
               &_TL_messages_getMessages_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    97;

  void Swap(TL_messages_getMessages* other);
  friend void swap(TL_messages_getMessages& a, TL_messages_getMessages& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TL_messages_getMessages* New() const PROTOBUF_FINAL { return New(NULL); }

  TL_messages_getMessages* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TL_messages_getMessages* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .mtproto.InputMessage id = 1;
  int id_size() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  const ::mtproto::InputMessage& id(int index) const;
  ::mtproto::InputMessage* mutable_id(int index);
  ::mtproto::InputMessage* add_id();
  ::google::protobuf::RepeatedPtrField< ::mtproto::InputMessage >*
      mutable_id();
  const ::google::protobuf::RepeatedPtrField< ::mtproto::InputMessage >&
      id() const;

  // @@protoc_insertion_point(class_scope:mtproto.TL_messages_getMessages)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::mtproto::InputMessage > id_;
  mutable int _cached_size_;
  friend struct protobuf_schema_2etl_2esync_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TL_messages_getDialogs : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtproto.TL_messages_getDialogs) */ {
 public:
  TL_messages_getDialogs();
  virtual ~TL_messages_getDialogs();

  TL_messages_getDialogs(const TL_messages_getDialogs& from);

  inline TL_messages_getDialogs& operator=(const TL_messages_getDialogs& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TL_messages_getDialogs(TL_messages_getDialogs&& from) noexcept
    : TL_messages_getDialogs() {
    *this = ::std::move(from);
  }

  inline TL_messages_getDialogs& operator=(TL_messages_getDialogs&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TL_messages_getDialogs& default_instance();

  static inline const TL_messages_getDialogs* internal_default_instance() {
    return reinterpret_cast<const TL_messages_getDialogs*>(
               &_TL_messages_getDialogs_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    98;

  void Swap(TL_messages_getDialogs* other);
  friend void swap(TL_messages_getDialogs& a, TL_messages_getDialogs& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TL_messages_getDialogs* New() const PROTOBUF_FINAL { return New(NULL); }

  TL_messages_getDialogs* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TL_messages_getDialogs* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .mtproto.InputPeer offset_peer = 5;
  bool has_offset_peer() const;
  void clear_offset_peer();
  static const int kOffsetPeerFieldNumber = 5;
  const ::mtproto::InputPeer& offset_peer() const;
  ::mtproto::InputPeer* mutable_offset_peer();
  ::mtproto::InputPeer* release_offset_peer();
  void set_allocated_offset_peer(::mtproto::InputPeer* offset_peer);

  // bool exclude_pinned = 2;
  void clear_exclude_pinned();
  static const int kExcludePinnedFieldNumber = 2;
  bool exclude_pinned() const;
  void set_exclude_pinned(bool value);

  // int32 offset_date = 3;
  void clear_offset_date();
  static const int kOffsetDateFieldNumber = 3;
  ::google::protobuf::int32 offset_date() const;
  void set_offset_date(::google::protobuf::int32 value);

  // int32 offset_id = 4;
  void clear_offset_id();
  static const int kOffsetIdFieldNumber = 4;
  ::google::protobuf::int32 offset_id() const;
  void set_offset_id(::google::protobuf::int32 value);

  // int32 limit = 6;
  void clear_limit();
  static const int kLimitFieldNumber = 6;
  ::google::protobuf::int32 limit() const;
  void set_limit(::google::protobuf::int32 value);

  // int32 hash = 7;
  void clear_hash();
  static const int kHashFieldNumber = 7;
  ::google::protobuf::int32 hash() const;
  void set_hash(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:mtproto.TL_messages_getDialogs)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::mtproto::InputPeer* offset_peer_;
  bool exclude_pinned_;
  ::google::protobuf::int32 offset_date_;
  ::google::protobuf::int32 offset_id_;
  ::google::protobuf::int32 limit_;
  ::google::protobuf::int32 hash_;
  mutable int _cached_size_;
  friend struct protobuf_schema_2etl_2esync_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TL_messages_getHistory : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtproto.TL_messages_getHistory) */ {
 public:
  TL_messages_getHistory();
  virtual ~TL_messages_getHistory();

  TL_messages_getHistory(const TL_messages_getHistory& from);

  inline TL_messages_getHistory& operator=(const TL_messages_getHistory& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TL_messages_getHistory(TL_messages_getHistory&& from) noexcept
    : TL_messages_getHistory() {
    *this = ::std::move(from);
  }

  inline TL_messages_getHistory& operator=(TL_messages_getHistory&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TL_messages_getHistory& default_instance();

  static inline const TL_messages_getHistory* internal_default_instance() {
    return reinterpret_cast<const TL_messages_getHistory*>(
               &_TL_messages_getHistory_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    99;

  void Swap(TL_messages_getHistory* other);
  friend void swap(TL_messages_getHistory& a, TL_messages_getHistory& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TL_messages_getHistory* New() const PROTOBUF_FINAL { return New(NULL); }

  TL_messages_getHistory* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TL_messages_getHistory* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .mtproto.InputPeer peer = 1;
  bool has_peer() const;
  void clear_peer();
  static const int kPeerFieldNumber = 1;
  const ::mtproto::InputPeer& peer() const;
  ::mtproto::InputPeer* mutable_peer();
  ::mtproto::InputPeer* release_peer();
  void set_allocated_peer(::mtproto::InputPeer* peer);

  // int32 offset_id = 2;
  void clear_offset_id();
  static const int kOffsetIdFieldNumber = 2;
  ::google::protobuf::int32 offset_id() const;
  void set_offset_id(::google::protobuf::int32 value);

  // int32 offset_date = 3;
  void clear_offset_date();
  static const int kOffsetDateFieldNumber = 3;
  ::google::protobuf::int32 offset_date() const;
  void set_offset_date(::google::protobuf::int32 value);

  // int32 add_offset = 4;
  void clear_add_offset();
  static const int kAddOffsetFieldNumber = 4;
  ::google::protobuf::int32 add_offset() const;
  void set_add_offset(::google::protobuf::int32 value);

  // int32 limit = 5;
  void clear_limit();
  static const int kLimitFieldNumber = 5;
  ::google::protobuf::int32 limit() const;
  void set_limit(::google::protobuf::int32 value);

  // int32 max_id = 6;
  void clear_max_id();
  static const int kMaxIdFieldNumber = 6;
  ::google::protobuf::int32 max_id() const;
  void set_max_id(::google::protobuf::int32 value);

  // int32 min_id = 7;
  void clear_min_id();
  static const int kMinIdFieldNumber = 7;
  ::google::protobuf::int32 min_id() const;
  void set_min_id(::google::protobuf::int32 value);

  // int32 hash = 8;
  void clear_hash();
  static const int kHashFieldNumber = 8;
  ::google::protobuf::int32 hash() const;
  void set_hash(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:mtproto.TL_messages_getHistory)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::mtproto::InputPeer* peer_;
  ::google::protobuf::int32 offset_id_;
  ::google::protobuf::int32 offset_date_;
  ::google::protobuf::int32 add_offset_;
  ::google::protobuf::int32 limit_;
  ::google::protobuf::int32 max_id_;
  ::google::protobuf::int32 min_id_;
  ::google::protobuf::int32 hash_;
  mutable int _cached_size_;
  friend struct protobuf_schema_2etl_2esync_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TL_messages_search : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtproto.TL_messages_search) */ {
 public:
  TL_messages_search();
  virtual ~TL_messages_search();

  TL_messages_search(const TL_messages_search& from);

  inline TL_messages_search& operator=(const TL_messages_search& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TL_messages_search(TL_messages_search&& from) noexcept
    : TL_messages_search() {
    *this = ::std::move(from);
  }

  inline TL_messages_search& operator=(TL_messages_search&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TL_messages_search& default_instance();

  static inline const TL_messages_search* internal_default_instance() {
    return reinterpret_cast<const TL_messages_search*>(
               &_TL_messages_search_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    100;

  void Swap(TL_messages_search* other);
  friend void swap(TL_messages_search& a, TL_messages_search& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TL_messages_search* New() const PROTOBUF_FINAL { return New(NULL); }

  TL_messages_search* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TL_messages_search* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string q = 3;
  void clear_q();
  static const int kQFieldNumber = 3;
  const ::std::string& q() const;
  void set_q(const ::std::string& value);
  #if LANG_CXX11
  void set_q(::std::string&& value);
  #endif
  void set_q(const char* value);
  void set_q(const char* value, size_t size);
  ::std::string* mutable_q();
  ::std::string* release_q();
  void set_allocated_q(::std::string* q);

  // .mtproto.InputPeer peer = 2;
  bool has_peer() const;
  void clear_peer();
  static const int kPeerFieldNumber = 2;
  const ::mtproto::InputPeer& peer() const;
  ::mtproto::InputPeer* mutable_peer();
  ::mtproto::InputPeer* release_peer();
  void set_allocated_peer(::mtproto::InputPeer* peer);

  // .mtproto.InputUser from_id = 4;
  bool has_from_id() const;
  void clear_from_id();
  static const int kFromIdFieldNumber = 4;
  const ::mtproto::InputUser& from_id() const;
  ::mtproto::InputUser* mutable_from_id();
  ::mtproto::InputUser* release_from_id();
  void set_allocated_from_id(::mtproto::InputUser* from_id);

  // .mtproto.MessagesFilter filter = 5;
  bool has_filter() const;
  void clear_filter();
  static const int kFilterFieldNumber = 5;
  const ::mtproto::MessagesFilter& filter() const;
  ::mtproto::MessagesFilter* mutable_filter();
  ::mtproto::MessagesFilter* release_filter();
  void set_allocated_filter(::mtproto::MessagesFilter* filter);

  // int32 min_date = 6;
  void clear_min_date();
  static const int kMinDateFieldNumber = 6;
  ::google::protobuf::int32 min_date() const;
  void set_min_date(::google::protobuf::int32 value);

  // int32 max_date = 7;
  void clear_max_date();
  static const int kMaxDateFieldNumber = 7;
  ::google::protobuf::int32 max_date() const;
  void set_max_date(::google::protobuf::int32 value);

  // int32 offset_id = 8;
  void clear_offset_id();
  static const int kOffsetIdFieldNumber = 8;
  ::google::protobuf::int32 offset_id() const;
  void set_offset_id(::google::protobuf::int32 value);

  // int32 add_offset = 9;
  void clear_add_offset();
  static const int kAddOffsetFieldNumber = 9;
  ::google::protobuf::int32 add_offset() const;
  void set_add_offset(::google::protobuf::int32 value);

  // int32 limit = 10;
  void clear_limit();
  static const int kLimitFieldNumber = 10;
  ::google::protobuf::int32 limit() const;
  void set_limit(::google::protobuf::int32 value);

  // int32 max_id = 11;
  void clear_max_id();
  static const int kMaxIdFieldNumber = 11;
  ::google::protobuf::int32 max_id() const;
  void set_max_id(::google::protobuf::int32 value);

  // int32 min_id = 12;
  void clear_min_id();
  static const int kMinIdFieldNumber = 12;
  ::google::protobuf::int32 min_id() const;
  void set_min_id(::google::protobuf::int32 value);

  // int32 hash = 13;
  void clear_hash();
  static const int kHashFieldNumber = 13;
  ::google::protobuf::int32 hash() const;
  void set_hash(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:mtproto.TL_messages_search)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr q_;
  ::mtproto::InputPeer* peer_;
  ::mtproto::InputUser* from_id_;
  ::mtproto::MessagesFilter* filter_;
  ::google::protobuf::int32 min_date_;
  ::google::protobuf::int32 max_date_;
  ::google::protobuf::int32 offset_id_;
  ::google::protobuf::int32 add_offset_;
  ::google::protobuf::int32 limit_;
  ::google::protobuf::int32 max_id_;
  ::google::protobuf::int32 min_id_;
  ::google::protobuf::int32 hash_;
  mutable int _cached_size_;
  friend struct protobuf_schema_2etl_2esync_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TL_messages_readHistory : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtproto.TL_messages_readHistory) */ {
 public:
  TL_messages_readHistory();
  virtual ~TL_messages_readHistory();

  TL_messages_readHistory(const TL_messages_readHistory& from);

  inline TL_messages_readHistory& operator=(const TL_messages_readHistory& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TL_messages_readHistory(TL_messages_readHistory&& from) noexcept
    : TL_messages_readHistory() {
    *this = ::std::move(from);
  }

  inline TL_messages_readHistory& operator=(TL_messages_readHistory&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TL_messages_readHistory& default_instance();

  static inline const TL_messages_readHistory* internal_default_instance() {
    return reinterpret_cast<const TL_messages_readHistory*>(
               &_TL_messages_readHistory_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    101;

  void Swap(TL_messages_readHistory* other);
  friend void swap(TL_messages_readHistory& a, TL_messages_readHistory& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TL_messages_readHistory* New() const PROTOBUF_FINAL { return New(NULL); }

  TL_messages_readHistory* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TL_messages_readHistory* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .mtproto.InputPeer peer = 1;
  bool has_peer() const;
  void clear_peer();
  static const int kPeerFieldNumber = 1;
  const ::mtproto::InputPeer& peer() const;
  ::mtproto::InputPeer* mutable_peer();
  ::mtproto::InputPeer* release_peer();
  void set_allocated_peer(::mtproto::InputPeer* peer);

  // int32 max_id = 2;
  void clear_max_id();
  static const int kMaxIdFieldNumber = 2;
  ::google::protobuf::int32 max_id() const;
  void set_max_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:mtproto.TL_messages_readHistory)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::mtproto::InputPeer* peer_;
  ::google::protobuf::int32 max_id_;
  mutable int _cached_size_;
  friend struct protobuf_schema_2etl_2esync_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TL_messages_deleteHistory : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtproto.TL_messages_deleteHistory) */ {
 public:
  TL_messages_deleteHistory();
  virtual ~TL_messages_deleteHistory();

  TL_messages_deleteHistory(const TL_messages_deleteHistory& from);

  inline TL_messages_deleteHistory& operator=(const TL_messages_deleteHistory& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TL_messages_deleteHistory(TL_messages_deleteHistory&& from) noexcept
    : TL_messages_deleteHistory() {
    *this = ::std::move(from);
  }

  inline TL_messages_deleteHistory& operator=(TL_messages_deleteHistory&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TL_messages_deleteHistory& default_instance();

  static inline const TL_messages_deleteHistory* internal_default_instance() {
    return reinterpret_cast<const TL_messages_deleteHistory*>(
               &_TL_messages_deleteHistory_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    102;

  void Swap(TL_messages_deleteHistory* other);
  friend void swap(TL_messages_deleteHistory& a, TL_messages_deleteHistory& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TL_messages_deleteHistory* New() const PROTOBUF_FINAL { return New(NULL); }

  TL_messages_deleteHistory* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TL_messages_deleteHistory* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .mtproto.InputPeer peer = 3;
  bool has_peer() const;
  void clear_peer();
  static const int kPeerFieldNumber = 3;
  const ::mtproto::InputPeer& peer() const;
  ::mtproto::InputPeer* mutable_peer();
  ::mtproto::InputPeer* release_peer();
  void set_allocated_peer(::mtproto::InputPeer* peer);

  // bool just_clear = 2;
  void clear_just_clear();
  static const int kJustClearFieldNumber = 2;
  bool just_clear() const;
  void set_just_clear(bool value);

  // int32 max_id = 4;
  void clear_max_id();
  static const int kMaxIdFieldNumber = 4;
  ::google::protobuf::int32 max_id() const;
  void set_max_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:mtproto.TL_messages_deleteHistory)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::mtproto::InputPeer* peer_;
  bool just_clear_;
  ::google::protobuf::int32 max_id_;
  mutable int _cached_size_;
  friend struct protobuf_schema_2etl_2esync_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TL_messages_deleteMessages : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtproto.TL_messages_deleteMessages) */ {
 public:
  TL_messages_deleteMessages();
  virtual ~TL_messages_deleteMessages();

  TL_messages_deleteMessages(const TL_messages_deleteMessages& from);

  inline TL_messages_deleteMessages& operator=(const TL_messages_deleteMessages& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TL_messages_deleteMessages(TL_messages_deleteMessages&& from) noexcept
    : TL_messages_deleteMessages() {
    *this = ::std::move(from);
  }

  inline TL_messages_deleteMessages& operator=(TL_messages_deleteMessages&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TL_messages_deleteMessages& default_instance();

  static inline const TL_messages_deleteMessages* internal_default_instance() {
    return reinterpret_cast<const TL_messages_deleteMessages*>(
               &_TL_messages_deleteMessages_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    103;

  void Swap(TL_messages_deleteMessages* other);
  friend void swap(TL_messages_deleteMessages& a, TL_messages_deleteMessages& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TL_messages_deleteMessages* New() const PROTOBUF_FINAL { return New(NULL); }

  TL_messages_deleteMessages* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TL_messages_deleteMessages* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 id = 3;
  int id_size() const;
  void clear_id();
  static const int kIdFieldNumber = 3;
  ::google::protobuf::int32 id(int index) const;
  void set_id(int index, ::google::protobuf::int32 value);
  void add_id(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      id() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_id();

  // bool revoke = 2;
  void clear_revoke();
  static const int kRevokeFieldNumber = 2;
  bool revoke() const;
  void set_revoke(bool value);

  // @@protoc_insertion_point(class_scope:mtproto.TL_messages_deleteMessages)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > id_;
  bool revoke_;
  mutable int _cached_size_;
  friend struct protobuf_schema_2etl_2esync_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TL_messages_receivedMessages : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtproto.TL_messages_receivedMessages) */ {
 public:
  TL_messages_receivedMessages();
  virtual ~TL_messages_receivedMessages();

  TL_messages_receivedMessages(const TL_messages_receivedMessages& from);

  inline TL_messages_receivedMessages& operator=(const TL_messages_receivedMessages& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TL_messages_receivedMessages(TL_messages_receivedMessages&& from) noexcept
    : TL_messages_receivedMessages() {
    *this = ::std::move(from);
  }

  inline TL_messages_receivedMessages& operator=(TL_messages_receivedMessages&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TL_messages_receivedMessages& default_instance();

  static inline const TL_messages_receivedMessages* internal_default_instance() {
    return reinterpret_cast<const TL_messages_receivedMessages*>(
               &_TL_messages_receivedMessages_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    104;

  void Swap(TL_messages_receivedMessages* other);
  friend void swap(TL_messages_receivedMessages& a, TL_messages_receivedMessages& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TL_messages_receivedMessages* New() const PROTOBUF_FINAL { return New(NULL); }

  TL_messages_receivedMessages* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TL_messages_receivedMessages* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 max_id = 1;
  void clear_max_id();
  static const int kMaxIdFieldNumber = 1;
  ::google::protobuf::int32 max_id() const;
  void set_max_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:mtproto.TL_messages_receivedMessages)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 max_id_;
  mutable int _cached_size_;
  friend struct protobuf_schema_2etl_2esync_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TL_messages_setTyping : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtproto.TL_messages_setTyping) */ {
 public:
  TL_messages_setTyping();
  virtual ~TL_messages_setTyping();

  TL_messages_setTyping(const TL_messages_setTyping& from);

  inline TL_messages_setTyping& operator=(const TL_messages_setTyping& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TL_messages_setTyping(TL_messages_setTyping&& from) noexcept
    : TL_messages_setTyping() {
    *this = ::std::move(from);
  }

  inline TL_messages_setTyping& operator=(TL_messages_setTyping&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TL_messages_setTyping& default_instance();

  static inline const TL_messages_setTyping* internal_default_instance() {
    return reinterpret_cast<const TL_messages_setTyping*>(
               &_TL_messages_setTyping_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    105;

  void Swap(TL_messages_setTyping* other);
  friend void swap(TL_messages_setTyping& a, TL_messages_setTyping& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TL_messages_setTyping* New() const PROTOBUF_FINAL { return New(NULL); }

  TL_messages_setTyping* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TL_messages_setTyping* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .mtproto.InputPeer peer = 1;
  bool has_peer() const;
  void clear_peer();
  static const int kPeerFieldNumber = 1;
  const ::mtproto::InputPeer& peer() const;
  ::mtproto::InputPeer* mutable_peer();
  ::mtproto::InputPeer* release_peer();
  void set_allocated_peer(::mtproto::InputPeer* peer);

  // .mtproto.SendMessageAction action = 2;
  bool has_action() const;
  void clear_action();
  static const int kActionFieldNumber = 2;
  const ::mtproto::SendMessageAction& action() const;
  ::mtproto::SendMessageAction* mutable_action();
  ::mtproto::SendMessageAction* release_action();
  void set_allocated_action(::mtproto::SendMessageAction* action);

  // @@protoc_insertion_point(class_scope:mtproto.TL_messages_setTyping)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::mtproto::InputPeer* peer_;
  ::mtproto::SendMessageAction* action_;
  mutable int _cached_size_;
  friend struct protobuf_schema_2etl_2esync_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TL_messages_sendMessage : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtproto.TL_messages_sendMessage) */ {
 public:
  TL_messages_sendMessage();
  virtual ~TL_messages_sendMessage();

  TL_messages_sendMessage(const TL_messages_sendMessage& from);

  inline TL_messages_sendMessage& operator=(const TL_messages_sendMessage& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TL_messages_sendMessage(TL_messages_sendMessage&& from) noexcept
    : TL_messages_sendMessage() {
    *this = ::std::move(from);
  }

  inline TL_messages_sendMessage& operator=(TL_messages_sendMessage&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TL_messages_sendMessage& default_instance();

  static inline const TL_messages_sendMessage* internal_default_instance() {
    return reinterpret_cast<const TL_messages_sendMessage*>(
               &_TL_messages_sendMessage_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    106;

  void Swap(TL_messages_sendMessage* other);
  friend void swap(TL_messages_sendMessage& a, TL_messages_sendMessage& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TL_messages_sendMessage* New() const PROTOBUF_FINAL { return New(NULL); }

  TL_messages_sendMessage* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TL_messages_sendMessage* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .mtproto.MessageEntity entities = 11;
  int entities_size() const;
  void clear_entities();
  static const int kEntitiesFieldNumber = 11;
  const ::mtproto::MessageEntity& entities(int index) const;
  ::mtproto::MessageEntity* mutable_entities(int index);
  ::mtproto::MessageEntity* add_entities();
  ::google::protobuf::RepeatedPtrField< ::mtproto::MessageEntity >*
      mutable_entities();
  const ::google::protobuf::RepeatedPtrField< ::mtproto::MessageEntity >&
      entities() const;

  // string message = 8;
  void clear_message();
  static const int kMessageFieldNumber = 8;
  const ::std::string& message() const;
  void set_message(const ::std::string& value);
  #if LANG_CXX11
  void set_message(::std::string&& value);
  #endif
  void set_message(const char* value);
  void set_message(const char* value, size_t size);
  ::std::string* mutable_message();
  ::std::string* release_message();
  void set_allocated_message(::std::string* message);

  // .mtproto.InputPeer peer = 6;
  bool has_peer() const;
  void clear_peer();
  static const int kPeerFieldNumber = 6;
  const ::mtproto::InputPeer& peer() const;
  ::mtproto::InputPeer* mutable_peer();
  ::mtproto::InputPeer* release_peer();
  void set_allocated_peer(::mtproto::InputPeer* peer);

  // .mtproto.ReplyMarkup reply_markup = 10;
  bool has_reply_markup() const;
  void clear_reply_markup();
  static const int kReplyMarkupFieldNumber = 10;
  const ::mtproto::ReplyMarkup& reply_markup() const;
  ::mtproto::ReplyMarkup* mutable_reply_markup();
  ::mtproto::ReplyMarkup* release_reply_markup();
  void set_allocated_reply_markup(::mtproto::ReplyMarkup* reply_markup);

  // bool no_webpage = 2;
  void clear_no_webpage();
  static const int kNoWebpageFieldNumber = 2;
  bool no_webpage() const;
  void set_no_webpage(bool value);

  // bool silent = 3;
  void clear_silent();
  static const int kSilentFieldNumber = 3;
  bool silent() const;
  void set_silent(bool value);

  // bool background = 4;
  void clear_background();
  static const int kBackgroundFieldNumber = 4;
  bool background() const;
  void set_background(bool value);

  // bool clear_draft = 5;
  void clear_clear_draft();
  static const int kClearDraftFieldNumber = 5;
  bool clear_draft() const;
  void set_clear_draft(bool value);

  // int32 reply_to_msg_id = 7;
  void clear_reply_to_msg_id();
  static const int kReplyToMsgIdFieldNumber = 7;
  ::google::protobuf::int32 reply_to_msg_id() const;
  void set_reply_to_msg_id(::google::protobuf::int32 value);

  // int64 random_id = 9;
  void clear_random_id();
  static const int kRandomIdFieldNumber = 9;
  ::google::protobuf::int64 random_id() const;
  void set_random_id(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:mtproto.TL_messages_sendMessage)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::mtproto::MessageEntity > entities_;
  ::google::protobuf::internal::ArenaStringPtr message_;
  ::mtproto::InputPeer* peer_;
  ::mtproto::ReplyMarkup* reply_markup_;
  bool no_webpage_;
  bool silent_;
  bool background_;
  bool clear_draft_;
  ::google::protobuf::int32 reply_to_msg_id_;
  ::google::protobuf::int64 random_id_;
  mutable int _cached_size_;
  friend struct protobuf_schema_2etl_2esync_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TL_messages_sendMedia : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtproto.TL_messages_sendMedia) */ {
 public:
  TL_messages_sendMedia();
  virtual ~TL_messages_sendMedia();

  TL_messages_sendMedia(const TL_messages_sendMedia& from);

  inline TL_messages_sendMedia& operator=(const TL_messages_sendMedia& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TL_messages_sendMedia(TL_messages_sendMedia&& from) noexcept
    : TL_messages_sendMedia() {
    *this = ::std::move(from);
  }

  inline TL_messages_sendMedia& operator=(TL_messages_sendMedia&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TL_messages_sendMedia& default_instance();

  static inline const TL_messages_sendMedia* internal_default_instance() {
    return reinterpret_cast<const TL_messages_sendMedia*>(
               &_TL_messages_sendMedia_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    107;

  void Swap(TL_messages_sendMedia* other);
  friend void swap(TL_messages_sendMedia& a, TL_messages_sendMedia& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TL_messages_sendMedia* New() const PROTOBUF_FINAL { return New(NULL); }

  TL_messages_sendMedia* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TL_messages_sendMedia* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .mtproto.MessageEntity entities = 11;
  int entities_size() const;
  void clear_entities();
  static const int kEntitiesFieldNumber = 11;
  const ::mtproto::MessageEntity& entities(int index) const;
  ::mtproto::MessageEntity* mutable_entities(int index);
  ::mtproto::MessageEntity* add_entities();
  ::google::protobuf::RepeatedPtrField< ::mtproto::MessageEntity >*
      mutable_entities();
  const ::google::protobuf::RepeatedPtrField< ::mtproto::MessageEntity >&
      entities() const;

  // string message = 8;
  void clear_message();
  static const int kMessageFieldNumber = 8;
  const ::std::string& message() const;
  void set_message(const ::std::string& value);
  #if LANG_CXX11
  void set_message(::std::string&& value);
  #endif
  void set_message(const char* value);
  void set_message(const char* value, size_t size);
  ::std::string* mutable_message();
  ::std::string* release_message();
  void set_allocated_message(::std::string* message);

  // .mtproto.InputPeer peer = 5;
  bool has_peer() const;
  void clear_peer();
  static const int kPeerFieldNumber = 5;
  const ::mtproto::InputPeer& peer() const;
  ::mtproto::InputPeer* mutable_peer();
  ::mtproto::InputPeer* release_peer();
  void set_allocated_peer(::mtproto::InputPeer* peer);

  // .mtproto.InputMedia media = 7;
  bool has_media() const;
  void clear_media();
  static const int kMediaFieldNumber = 7;
  const ::mtproto::InputMedia& media() const;
  ::mtproto::InputMedia* mutable_media();
  ::mtproto::InputMedia* release_media();
  void set_allocated_media(::mtproto::InputMedia* media);

  // .mtproto.ReplyMarkup reply_markup = 10;
  bool has_reply_markup() const;
  void clear_reply_markup();
  static const int kReplyMarkupFieldNumber = 10;
  const ::mtproto::ReplyMarkup& reply_markup() const;
  ::mtproto::ReplyMarkup* mutable_reply_markup();
  ::mtproto::ReplyMarkup* release_reply_markup();
  void set_allocated_reply_markup(::mtproto::ReplyMarkup* reply_markup);

  // bool silent = 2;
  void clear_silent();
  static const int kSilentFieldNumber = 2;
  bool silent() const;
  void set_silent(bool value);

  // bool background = 3;
  void clear_background();
  static const int kBackgroundFieldNumber = 3;
  bool background() const;
  void set_background(bool value);

  // bool clear_draft = 4;
  void clear_clear_draft();
  static const int kClearDraftFieldNumber = 4;
  bool clear_draft() const;
  void set_clear_draft(bool value);

  // int32 reply_to_msg_id = 6;
  void clear_reply_to_msg_id();
  static const int kReplyToMsgIdFieldNumber = 6;
  ::google::protobuf::int32 reply_to_msg_id() const;
  void set_reply_to_msg_id(::google::protobuf::int32 value);

  // int64 random_id = 9;
  void clear_random_id();
  static const int kRandomIdFieldNumber = 9;
  ::google::protobuf::int64 random_id() const;
  void set_random_id(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:mtproto.TL_messages_sendMedia)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::mtproto::MessageEntity > entities_;
  ::google::protobuf::internal::ArenaStringPtr message_;
  ::mtproto::InputPeer* peer_;
  ::mtproto::InputMedia* media_;
  ::mtproto::ReplyMarkup* reply_markup_;
  bool silent_;
  bool background_;
  bool clear_draft_;
  ::google::protobuf::int32 reply_to_msg_id_;
  ::google::protobuf::int64 random_id_;
  mutable int _cached_size_;
  friend struct protobuf_schema_2etl_2esync_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TL_messages_forwardMessages : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtproto.TL_messages_forwardMessages) */ {
 public:
  TL_messages_forwardMessages();
  virtual ~TL_messages_forwardMessages();

  TL_messages_forwardMessages(const TL_messages_forwardMessages& from);

  inline TL_messages_forwardMessages& operator=(const TL_messages_forwardMessages& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TL_messages_forwardMessages(TL_messages_forwardMessages&& from) noexcept
    : TL_messages_forwardMessages() {
    *this = ::std::move(from);
  }

  inline TL_messages_forwardMessages& operator=(TL_messages_forwardMessages&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TL_messages_forwardMessages& default_instance();

  static inline const TL_messages_forwardMessages* internal_default_instance() {
    return reinterpret_cast<const TL_messages_forwardMessages*>(
               &_TL_messages_forwardMessages_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    108;

  void Swap(TL_messages_forwardMessages* other);
  friend void swap(TL_messages_forwardMessages& a, TL_messages_forwardMessages& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TL_messages_forwardMessages* New() const PROTOBUF_FINAL { return New(NULL); }

  TL_messages_forwardMessages* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TL_messages_forwardMessages* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 id = 7;
  int id_size() const;
  void clear_id();
  static const int kIdFieldNumber = 7;
  ::google::protobuf::int32 id(int index) const;
  void set_id(int index, ::google::protobuf::int32 value);
  void add_id(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      id() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_id();

  // repeated int64 random_id = 8;
  int random_id_size() const;
  void clear_random_id();
  static const int kRandomIdFieldNumber = 8;
  ::google::protobuf::int64 random_id(int index) const;
  void set_random_id(int index, ::google::protobuf::int64 value);
  void add_random_id(::google::protobuf::int64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      random_id() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_random_id();

  // .mtproto.InputPeer from_peer = 6;
  bool has_from_peer() const;
  void clear_from_peer();
  static const int kFromPeerFieldNumber = 6;
  const ::mtproto::InputPeer& from_peer() const;
  ::mtproto::InputPeer* mutable_from_peer();
  ::mtproto::InputPeer* release_from_peer();
  void set_allocated_from_peer(::mtproto::InputPeer* from_peer);

  // .mtproto.InputPeer to_peer = 9;
  bool has_to_peer() const;
  void clear_to_peer();
  static const int kToPeerFieldNumber = 9;
  const ::mtproto::InputPeer& to_peer() const;
  ::mtproto::InputPeer* mutable_to_peer();
  ::mtproto::InputPeer* release_to_peer();
  void set_allocated_to_peer(::mtproto::InputPeer* to_peer);

  // bool silent = 2;
  void clear_silent();
  static const int kSilentFieldNumber = 2;
  bool silent() const;
  void set_silent(bool value);

  // bool background = 3;
  void clear_background();
  static const int kBackgroundFieldNumber = 3;
  bool background() const;
  void set_background(bool value);

  // bool with_my_score = 4;
  void clear_with_my_score();
  static const int kWithMyScoreFieldNumber = 4;
  bool with_my_score() const;
  void set_with_my_score(bool value);

  // bool grouped = 5;
  void clear_grouped();
  static const int kGroupedFieldNumber = 5;
  bool grouped() const;
  void set_grouped(bool value);

  // @@protoc_insertion_point(class_scope:mtproto.TL_messages_forwardMessages)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > id_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > random_id_;
  ::mtproto::InputPeer* from_peer_;
  ::mtproto::InputPeer* to_peer_;
  bool silent_;
  bool background_;
  bool with_my_score_;
  bool grouped_;
  mutable int _cached_size_;
  friend struct protobuf_schema_2etl_2esync_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TL_messages_reportSpam : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtproto.TL_messages_reportSpam) */ {
 public:
  TL_messages_reportSpam();
  virtual ~TL_messages_reportSpam();

  TL_messages_reportSpam(const TL_messages_reportSpam& from);

  inline TL_messages_reportSpam& operator=(const TL_messages_reportSpam& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TL_messages_reportSpam(TL_messages_reportSpam&& from) noexcept
    : TL_messages_reportSpam() {
    *this = ::std::move(from);
  }

  inline TL_messages_reportSpam& operator=(TL_messages_reportSpam&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TL_messages_reportSpam& default_instance();

  static inline const TL_messages_reportSpam* internal_default_instance() {
    return reinterpret_cast<const TL_messages_reportSpam*>(
               &_TL_messages_reportSpam_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    109;

  void Swap(TL_messages_reportSpam* other);
  friend void swap(TL_messages_reportSpam& a, TL_messages_reportSpam& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TL_messages_reportSpam* New() const PROTOBUF_FINAL { return New(NULL); }

  TL_messages_reportSpam* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TL_messages_reportSpam* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .mtproto.InputPeer peer = 1;
  bool has_peer() const;
  void clear_peer();
  static const int kPeerFieldNumber = 1;
  const ::mtproto::InputPeer& peer() const;
  ::mtproto::InputPeer* mutable_peer();
  ::mtproto::InputPeer* release_peer();
  void set_allocated_peer(::mtproto::InputPeer* peer);

  // @@protoc_insertion_point(class_scope:mtproto.TL_messages_reportSpam)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::mtproto::InputPeer* peer_;
  mutable int _cached_size_;
  friend struct protobuf_schema_2etl_2esync_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TL_messages_hideReportSpam : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtproto.TL_messages_hideReportSpam) */ {
 public:
  TL_messages_hideReportSpam();
  virtual ~TL_messages_hideReportSpam();

  TL_messages_hideReportSpam(const TL_messages_hideReportSpam& from);

  inline TL_messages_hideReportSpam& operator=(const TL_messages_hideReportSpam& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TL_messages_hideReportSpam(TL_messages_hideReportSpam&& from) noexcept
    : TL_messages_hideReportSpam() {
    *this = ::std::move(from);
  }

  inline TL_messages_hideReportSpam& operator=(TL_messages_hideReportSpam&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TL_messages_hideReportSpam& default_instance();

  static inline const TL_messages_hideReportSpam* internal_default_instance() {
    return reinterpret_cast<const TL_messages_hideReportSpam*>(
               &_TL_messages_hideReportSpam_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    110;

  void Swap(TL_messages_hideReportSpam* other);
  friend void swap(TL_messages_hideReportSpam& a, TL_messages_hideReportSpam& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TL_messages_hideReportSpam* New() const PROTOBUF_FINAL { return New(NULL); }

  TL_messages_hideReportSpam* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TL_messages_hideReportSpam* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .mtproto.InputPeer peer = 1;
  bool has_peer() const;
  void clear_peer();
  static const int kPeerFieldNumber = 1;
  const ::mtproto::InputPeer& peer() const;
  ::mtproto::InputPeer* mutable_peer();
  ::mtproto::InputPeer* release_peer();
  void set_allocated_peer(::mtproto::InputPeer* peer);

  // @@protoc_insertion_point(class_scope:mtproto.TL_messages_hideReportSpam)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::mtproto::InputPeer* peer_;
  mutable int _cached_size_;
  friend struct protobuf_schema_2etl_2esync_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TL_messages_getPeerSettings : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtproto.TL_messages_getPeerSettings) */ {
 public:
  TL_messages_getPeerSettings();
  virtual ~TL_messages_getPeerSettings();

  TL_messages_getPeerSettings(const TL_messages_getPeerSettings& from);

  inline TL_messages_getPeerSettings& operator=(const TL_messages_getPeerSettings& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TL_messages_getPeerSettings(TL_messages_getPeerSettings&& from) noexcept
    : TL_messages_getPeerSettings() {
    *this = ::std::move(from);
  }

  inline TL_messages_getPeerSettings& operator=(TL_messages_getPeerSettings&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TL_messages_getPeerSettings& default_instance();

  static inline const TL_messages_getPeerSettings* internal_default_instance() {
    return reinterpret_cast<const TL_messages_getPeerSettings*>(
               &_TL_messages_getPeerSettings_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    111;

  void Swap(TL_messages_getPeerSettings* other);
  friend void swap(TL_messages_getPeerSettings& a, TL_messages_getPeerSettings& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TL_messages_getPeerSettings* New() const PROTOBUF_FINAL { return New(NULL); }

  TL_messages_getPeerSettings* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TL_messages_getPeerSettings* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .mtproto.InputPeer peer = 1;
  bool has_peer() const;
  void clear_peer();
  static const int kPeerFieldNumber = 1;
  const ::mtproto::InputPeer& peer() const;
  ::mtproto::InputPeer* mutable_peer();
  ::mtproto::InputPeer* release_peer();
  void set_allocated_peer(::mtproto::InputPeer* peer);

  // @@protoc_insertion_point(class_scope:mtproto.TL_messages_getPeerSettings)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::mtproto::InputPeer* peer_;
  mutable int _cached_size_;
  friend struct protobuf_schema_2etl_2esync_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TL_messages_report : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtproto.TL_messages_report) */ {
 public:
  TL_messages_report();
  virtual ~TL_messages_report();

  TL_messages_report(const TL_messages_report& from);

  inline TL_messages_report& operator=(const TL_messages_report& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TL_messages_report(TL_messages_report&& from) noexcept
    : TL_messages_report() {
    *this = ::std::move(from);
  }

  inline TL_messages_report& operator=(TL_messages_report&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TL_messages_report& default_instance();

  static inline const TL_messages_report* internal_default_instance() {
    return reinterpret_cast<const TL_messages_report*>(
               &_TL_messages_report_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    112;

  void Swap(TL_messages_report* other);
  friend void swap(TL_messages_report& a, TL_messages_report& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TL_messages_report* New() const PROTOBUF_FINAL { return New(NULL); }

  TL_messages_report* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TL_messages_report* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 id = 2;
  int id_size() const;
  void clear_id();
  static const int kIdFieldNumber = 2;
  ::google::protobuf::int32 id(int index) const;
  void set_id(int index, ::google::protobuf::int32 value);
  void add_id(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      id() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_id();

  // .mtproto.InputPeer peer = 1;
  bool has_peer() const;
  void clear_peer();
  static const int kPeerFieldNumber = 1;
  const ::mtproto::InputPeer& peer() const;
  ::mtproto::InputPeer* mutable_peer();
  ::mtproto::InputPeer* release_peer();
  void set_allocated_peer(::mtproto::InputPeer* peer);

  // .mtproto.ReportReason reason = 3;
  bool has_reason() const;
  void clear_reason();
  static const int kReasonFieldNumber = 3;
  const ::mtproto::ReportReason& reason() const;
  ::mtproto::ReportReason* mutable_reason();
  ::mtproto::ReportReason* release_reason();
  void set_allocated_reason(::mtproto::ReportReason* reason);

  // @@protoc_insertion_point(class_scope:mtproto.TL_messages_report)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > id_;
  ::mtproto::InputPeer* peer_;
  ::mtproto::ReportReason* reason_;
  mutable int _cached_size_;
  friend struct protobuf_schema_2etl_2esync_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TL_messages_getChats : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtproto.TL_messages_getChats) */ {
 public:
  TL_messages_getChats();
  virtual ~TL_messages_getChats();

  TL_messages_getChats(const TL_messages_getChats& from);

  inline TL_messages_getChats& operator=(const TL_messages_getChats& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TL_messages_getChats(TL_messages_getChats&& from) noexcept
    : TL_messages_getChats() {
    *this = ::std::move(from);
  }

  inline TL_messages_getChats& operator=(TL_messages_getChats&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TL_messages_getChats& default_instance();

  static inline const TL_messages_getChats* internal_default_instance() {
    return reinterpret_cast<const TL_messages_getChats*>(
               &_TL_messages_getChats_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    113;

  void Swap(TL_messages_getChats* other);
  friend void swap(TL_messages_getChats& a, TL_messages_getChats& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TL_messages_getChats* New() const PROTOBUF_FINAL { return New(NULL); }

  TL_messages_getChats* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TL_messages_getChats* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 id = 1;
  int id_size() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::int32 id(int index) const;
  void set_id(int index, ::google::protobuf::int32 value);
  void add_id(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      id() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_id();

  // @@protoc_insertion_point(class_scope:mtproto.TL_messages_getChats)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > id_;
  mutable int _cached_size_;
  friend struct protobuf_schema_2etl_2esync_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TL_messages_getFullChat : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtproto.TL_messages_getFullChat) */ {
 public:
  TL_messages_getFullChat();
  virtual ~TL_messages_getFullChat();

  TL_messages_getFullChat(const TL_messages_getFullChat& from);

  inline TL_messages_getFullChat& operator=(const TL_messages_getFullChat& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TL_messages_getFullChat(TL_messages_getFullChat&& from) noexcept
    : TL_messages_getFullChat() {
    *this = ::std::move(from);
  }

  inline TL_messages_getFullChat& operator=(TL_messages_getFullChat&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TL_messages_getFullChat& default_instance();

  static inline const TL_messages_getFullChat* internal_default_instance() {
    return reinterpret_cast<const TL_messages_getFullChat*>(
               &_TL_messages_getFullChat_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    114;

  void Swap(TL_messages_getFullChat* other);
  friend void swap(TL_messages_getFullChat& a, TL_messages_getFullChat& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TL_messages_getFullChat* New() const PROTOBUF_FINAL { return New(NULL); }

  TL_messages_getFullChat* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TL_messages_getFullChat* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 chat_id = 1;
  void clear_chat_id();
  static const int kChatIdFieldNumber = 1;
  ::google::protobuf::int32 chat_id() const;
  void set_chat_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:mtproto.TL_messages_getFullChat)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 chat_id_;
  mutable int _cached_size_;
  friend struct protobuf_schema_2etl_2esync_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TL_messages_editChatTitle : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtproto.TL_messages_editChatTitle) */ {
 public:
  TL_messages_editChatTitle();
  virtual ~TL_messages_editChatTitle();

  TL_messages_editChatTitle(const TL_messages_editChatTitle& from);

  inline TL_messages_editChatTitle& operator=(const TL_messages_editChatTitle& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TL_messages_editChatTitle(TL_messages_editChatTitle&& from) noexcept
    : TL_messages_editChatTitle() {
    *this = ::std::move(from);
  }

  inline TL_messages_editChatTitle& operator=(TL_messages_editChatTitle&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TL_messages_editChatTitle& default_instance();

  static inline const TL_messages_editChatTitle* internal_default_instance() {
    return reinterpret_cast<const TL_messages_editChatTitle*>(
               &_TL_messages_editChatTitle_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    115;

  void Swap(TL_messages_editChatTitle* other);
  friend void swap(TL_messages_editChatTitle& a, TL_messages_editChatTitle& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TL_messages_editChatTitle* New() const PROTOBUF_FINAL { return New(NULL); }

  TL_messages_editChatTitle* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TL_messages_editChatTitle* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string title = 2;
  void clear_title();
  static const int kTitleFieldNumber = 2;
  const ::std::string& title() const;
  void set_title(const ::std::string& value);
  #if LANG_CXX11
  void set_title(::std::string&& value);
  #endif
  void set_title(const char* value);
  void set_title(const char* value, size_t size);
  ::std::string* mutable_title();
  ::std::string* release_title();
  void set_allocated_title(::std::string* title);

  // int32 chat_id = 1;
  void clear_chat_id();
  static const int kChatIdFieldNumber = 1;
  ::google::protobuf::int32 chat_id() const;
  void set_chat_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:mtproto.TL_messages_editChatTitle)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr title_;
  ::google::protobuf::int32 chat_id_;
  mutable int _cached_size_;
  friend struct protobuf_schema_2etl_2esync_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TL_messages_editChatPhoto : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtproto.TL_messages_editChatPhoto) */ {
 public:
  TL_messages_editChatPhoto();
  virtual ~TL_messages_editChatPhoto();

  TL_messages_editChatPhoto(const TL_messages_editChatPhoto& from);

  inline TL_messages_editChatPhoto& operator=(const TL_messages_editChatPhoto& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TL_messages_editChatPhoto(TL_messages_editChatPhoto&& from) noexcept
    : TL_messages_editChatPhoto() {
    *this = ::std::move(from);
  }

  inline TL_messages_editChatPhoto& operator=(TL_messages_editChatPhoto&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TL_messages_editChatPhoto& default_instance();

  static inline const TL_messages_editChatPhoto* internal_default_instance() {
    return reinterpret_cast<const TL_messages_editChatPhoto*>(
               &_TL_messages_editChatPhoto_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    116;

  void Swap(TL_messages_editChatPhoto* other);
  friend void swap(TL_messages_editChatPhoto& a, TL_messages_editChatPhoto& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TL_messages_editChatPhoto* New() const PROTOBUF_FINAL { return New(NULL); }

  TL_messages_editChatPhoto* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TL_messages_editChatPhoto* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .mtproto.InputChatPhoto photo = 2;
  bool has_photo() const;
  void clear_photo();
  static const int kPhotoFieldNumber = 2;
  const ::mtproto::InputChatPhoto& photo() const;
  ::mtproto::InputChatPhoto* mutable_photo();
  ::mtproto::InputChatPhoto* release_photo();
  void set_allocated_photo(::mtproto::InputChatPhoto* photo);

  // int32 chat_id = 1;
  void clear_chat_id();
  static const int kChatIdFieldNumber = 1;
  ::google::protobuf::int32 chat_id() const;
  void set_chat_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:mtproto.TL_messages_editChatPhoto)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::mtproto::InputChatPhoto* photo_;
  ::google::protobuf::int32 chat_id_;
  mutable int _cached_size_;
  friend struct protobuf_schema_2etl_2esync_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TL_messages_addChatUser : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtproto.TL_messages_addChatUser) */ {
 public:
  TL_messages_addChatUser();
  virtual ~TL_messages_addChatUser();

  TL_messages_addChatUser(const TL_messages_addChatUser& from);

  inline TL_messages_addChatUser& operator=(const TL_messages_addChatUser& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TL_messages_addChatUser(TL_messages_addChatUser&& from) noexcept
    : TL_messages_addChatUser() {
    *this = ::std::move(from);
  }

  inline TL_messages_addChatUser& operator=(TL_messages_addChatUser&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TL_messages_addChatUser& default_instance();

  static inline const TL_messages_addChatUser* internal_default_instance() {
    return reinterpret_cast<const TL_messages_addChatUser*>(
               &_TL_messages_addChatUser_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    117;

  void Swap(TL_messages_addChatUser* other);
  friend void swap(TL_messages_addChatUser& a, TL_messages_addChatUser& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TL_messages_addChatUser* New() const PROTOBUF_FINAL { return New(NULL); }

  TL_messages_addChatUser* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TL_messages_addChatUser* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .mtproto.InputUser user_id = 2;
  bool has_user_id() const;
  void clear_user_id();
  static const int kUserIdFieldNumber = 2;
  const ::mtproto::InputUser& user_id() const;
  ::mtproto::InputUser* mutable_user_id();
  ::mtproto::InputUser* release_user_id();
  void set_allocated_user_id(::mtproto::InputUser* user_id);

  // int32 chat_id = 1;
  void clear_chat_id();
  static const int kChatIdFieldNumber = 1;
  ::google::protobuf::int32 chat_id() const;
  void set_chat_id(::google::protobuf::int32 value);

  // int32 fwd_limit = 3;
  void clear_fwd_limit();
  static const int kFwdLimitFieldNumber = 3;
  ::google::protobuf::int32 fwd_limit() const;
  void set_fwd_limit(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:mtproto.TL_messages_addChatUser)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::mtproto::InputUser* user_id_;
  ::google::protobuf::int32 chat_id_;
  ::google::protobuf::int32 fwd_limit_;
  mutable int _cached_size_;
  friend struct protobuf_schema_2etl_2esync_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TL_messages_deleteChatUser : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtproto.TL_messages_deleteChatUser) */ {
 public:
  TL_messages_deleteChatUser();
  virtual ~TL_messages_deleteChatUser();

  TL_messages_deleteChatUser(const TL_messages_deleteChatUser& from);

  inline TL_messages_deleteChatUser& operator=(const TL_messages_deleteChatUser& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TL_messages_deleteChatUser(TL_messages_deleteChatUser&& from) noexcept
    : TL_messages_deleteChatUser() {
    *this = ::std::move(from);
  }

  inline TL_messages_deleteChatUser& operator=(TL_messages_deleteChatUser&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TL_messages_deleteChatUser& default_instance();

  static inline const TL_messages_deleteChatUser* internal_default_instance() {
    return reinterpret_cast<const TL_messages_deleteChatUser*>(
               &_TL_messages_deleteChatUser_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    118;

  void Swap(TL_messages_deleteChatUser* other);
  friend void swap(TL_messages_deleteChatUser& a, TL_messages_deleteChatUser& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TL_messages_deleteChatUser* New() const PROTOBUF_FINAL { return New(NULL); }

  TL_messages_deleteChatUser* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TL_messages_deleteChatUser* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .mtproto.InputUser user_id = 2;
  bool has_user_id() const;
  void clear_user_id();
  static const int kUserIdFieldNumber = 2;
  const ::mtproto::InputUser& user_id() const;
  ::mtproto::InputUser* mutable_user_id();
  ::mtproto::InputUser* release_user_id();
  void set_allocated_user_id(::mtproto::InputUser* user_id);

  // int32 chat_id = 1;
  void clear_chat_id();
  static const int kChatIdFieldNumber = 1;
  ::google::protobuf::int32 chat_id() const;
  void set_chat_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:mtproto.TL_messages_deleteChatUser)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::mtproto::InputUser* user_id_;
  ::google::protobuf::int32 chat_id_;
  mutable int _cached_size_;
  friend struct protobuf_schema_2etl_2esync_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TL_messages_createChat : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtproto.TL_messages_createChat) */ {
 public:
  TL_messages_createChat();
  virtual ~TL_messages_createChat();

  TL_messages_createChat(const TL_messages_createChat& from);

  inline TL_messages_createChat& operator=(const TL_messages_createChat& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TL_messages_createChat(TL_messages_createChat&& from) noexcept
    : TL_messages_createChat() {
    *this = ::std::move(from);
  }

  inline TL_messages_createChat& operator=(TL_messages_createChat&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TL_messages_createChat& default_instance();

  static inline const TL_messages_createChat* internal_default_instance() {
    return reinterpret_cast<const TL_messages_createChat*>(
               &_TL_messages_createChat_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    119;

  void Swap(TL_messages_createChat* other);
  friend void swap(TL_messages_createChat& a, TL_messages_createChat& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TL_messages_createChat* New() const PROTOBUF_FINAL { return New(NULL); }

  TL_messages_createChat* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TL_messages_createChat* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .mtproto.InputUser users = 1;
  int users_size() const;
  void clear_users();
  static const int kUsersFieldNumber = 1;
  const ::mtproto::InputUser& users(int index) const;
  ::mtproto::InputUser* mutable_users(int index);
  ::mtproto::InputUser* add_users();
  ::google::protobuf::RepeatedPtrField< ::mtproto::InputUser >*
      mutable_users();
  const ::google::protobuf::RepeatedPtrField< ::mtproto::InputUser >&
      users() const;

  // string title = 2;
  void clear_title();
  static const int kTitleFieldNumber = 2;
  const ::std::string& title() const;
  void set_title(const ::std::string& value);
  #if LANG_CXX11
  void set_title(::std::string&& value);
  #endif
  void set_title(const char* value);
  void set_title(const char* value, size_t size);
  ::std::string* mutable_title();
  ::std::string* release_title();
  void set_allocated_title(::std::string* title);

  // @@protoc_insertion_point(class_scope:mtproto.TL_messages_createChat)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::mtproto::InputUser > users_;
  ::google::protobuf::internal::ArenaStringPtr title_;
  mutable int _cached_size_;
  friend struct protobuf_schema_2etl_2esync_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TL_messages_getDhConfig : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtproto.TL_messages_getDhConfig) */ {
 public:
  TL_messages_getDhConfig();
  virtual ~TL_messages_getDhConfig();

  TL_messages_getDhConfig(const TL_messages_getDhConfig& from);

  inline TL_messages_getDhConfig& operator=(const TL_messages_getDhConfig& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TL_messages_getDhConfig(TL_messages_getDhConfig&& from) noexcept
    : TL_messages_getDhConfig() {
    *this = ::std::move(from);
  }

  inline TL_messages_getDhConfig& operator=(TL_messages_getDhConfig&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TL_messages_getDhConfig& default_instance();

  static inline const TL_messages_getDhConfig* internal_default_instance() {
    return reinterpret_cast<const TL_messages_getDhConfig*>(
               &_TL_messages_getDhConfig_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    120;

  void Swap(TL_messages_getDhConfig* other);
  friend void swap(TL_messages_getDhConfig& a, TL_messages_getDhConfig& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TL_messages_getDhConfig* New() const PROTOBUF_FINAL { return New(NULL); }

  TL_messages_getDhConfig* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TL_messages_getDhConfig* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 version = 1;
  void clear_version();
  static const int kVersionFieldNumber = 1;
  ::google::protobuf::int32 version() const;
  void set_version(::google::protobuf::int32 value);

  // int32 random_length = 2;
  void clear_random_length();
  static const int kRandomLengthFieldNumber = 2;
  ::google::protobuf::int32 random_length() const;
  void set_random_length(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:mtproto.TL_messages_getDhConfig)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 version_;
  ::google::protobuf::int32 random_length_;
  mutable int _cached_size_;
  friend struct protobuf_schema_2etl_2esync_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TL_messages_requestEncryption : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtproto.TL_messages_requestEncryption) */ {
 public:
  TL_messages_requestEncryption();
  virtual ~TL_messages_requestEncryption();

  TL_messages_requestEncryption(const TL_messages_requestEncryption& from);

  inline TL_messages_requestEncryption& operator=(const TL_messages_requestEncryption& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TL_messages_requestEncryption(TL_messages_requestEncryption&& from) noexcept
    : TL_messages_requestEncryption() {
    *this = ::std::move(from);
  }

  inline TL_messages_requestEncryption& operator=(TL_messages_requestEncryption&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TL_messages_requestEncryption& default_instance();

  static inline const TL_messages_requestEncryption* internal_default_instance() {
    return reinterpret_cast<const TL_messages_requestEncryption*>(
               &_TL_messages_requestEncryption_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    121;

  void Swap(TL_messages_requestEncryption* other);
  friend void swap(TL_messages_requestEncryption& a, TL_messages_requestEncryption& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TL_messages_requestEncryption* New() const PROTOBUF_FINAL { return New(NULL); }

  TL_messages_requestEncryption* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TL_messages_requestEncryption* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes g_a = 3;
  void clear_g_a();
  static const int kGAFieldNumber = 3;
  const ::std::string& g_a() const;
  void set_g_a(const ::std::string& value);
  #if LANG_CXX11
  void set_g_a(::std::string&& value);
  #endif
  void set_g_a(const char* value);
  void set_g_a(const void* value, size_t size);
  ::std::string* mutable_g_a();
  ::std::string* release_g_a();
  void set_allocated_g_a(::std::string* g_a);

  // .mtproto.InputUser user_id = 1;
  bool has_user_id() const;
  void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  const ::mtproto::InputUser& user_id() const;
  ::mtproto::InputUser* mutable_user_id();
  ::mtproto::InputUser* release_user_id();
  void set_allocated_user_id(::mtproto::InputUser* user_id);

  // int32 random_id = 2;
  void clear_random_id();
  static const int kRandomIdFieldNumber = 2;
  ::google::protobuf::int32 random_id() const;
  void set_random_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:mtproto.TL_messages_requestEncryption)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr g_a_;
  ::mtproto::InputUser* user_id_;
  ::google::protobuf::int32 random_id_;
  mutable int _cached_size_;
  friend struct protobuf_schema_2etl_2esync_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TL_messages_acceptEncryption : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtproto.TL_messages_acceptEncryption) */ {
 public:
  TL_messages_acceptEncryption();
  virtual ~TL_messages_acceptEncryption();

  TL_messages_acceptEncryption(const TL_messages_acceptEncryption& from);

  inline TL_messages_acceptEncryption& operator=(const TL_messages_acceptEncryption& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TL_messages_acceptEncryption(TL_messages_acceptEncryption&& from) noexcept
    : TL_messages_acceptEncryption() {
    *this = ::std::move(from);
  }

  inline TL_messages_acceptEncryption& operator=(TL_messages_acceptEncryption&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TL_messages_acceptEncryption& default_instance();

  static inline const TL_messages_acceptEncryption* internal_default_instance() {
    return reinterpret_cast<const TL_messages_acceptEncryption*>(
               &_TL_messages_acceptEncryption_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    122;

  void Swap(TL_messages_acceptEncryption* other);
  friend void swap(TL_messages_acceptEncryption& a, TL_messages_acceptEncryption& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TL_messages_acceptEncryption* New() const PROTOBUF_FINAL { return New(NULL); }

  TL_messages_acceptEncryption* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TL_messages_acceptEncryption* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes g_b = 2;
  void clear_g_b();
  static const int kGBFieldNumber = 2;
  const ::std::string& g_b() const;
  void set_g_b(const ::std::string& value);
  #if LANG_CXX11
  void set_g_b(::std::string&& value);
  #endif
  void set_g_b(const char* value);
  void set_g_b(const void* value, size_t size);
  ::std::string* mutable_g_b();
  ::std::string* release_g_b();
  void set_allocated_g_b(::std::string* g_b);

  // .mtproto.InputEncryptedChat peer = 1;
  bool has_peer() const;
  void clear_peer();
  static const int kPeerFieldNumber = 1;
  const ::mtproto::InputEncryptedChat& peer() const;
  ::mtproto::InputEncryptedChat* mutable_peer();
  ::mtproto::InputEncryptedChat* release_peer();
  void set_allocated_peer(::mtproto::InputEncryptedChat* peer);

  // int64 key_fingerprint = 3;
  void clear_key_fingerprint();
  static const int kKeyFingerprintFieldNumber = 3;
  ::google::protobuf::int64 key_fingerprint() const;
  void set_key_fingerprint(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:mtproto.TL_messages_acceptEncryption)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr g_b_;
  ::mtproto::InputEncryptedChat* peer_;
  ::google::protobuf::int64 key_fingerprint_;
  mutable int _cached_size_;
  friend struct protobuf_schema_2etl_2esync_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TL_messages_discardEncryption : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtproto.TL_messages_discardEncryption) */ {
 public:
  TL_messages_discardEncryption();
  virtual ~TL_messages_discardEncryption();

  TL_messages_discardEncryption(const TL_messages_discardEncryption& from);

  inline TL_messages_discardEncryption& operator=(const TL_messages_discardEncryption& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TL_messages_discardEncryption(TL_messages_discardEncryption&& from) noexcept
    : TL_messages_discardEncryption() {
    *this = ::std::move(from);
  }

  inline TL_messages_discardEncryption& operator=(TL_messages_discardEncryption&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TL_messages_discardEncryption& default_instance();

  static inline const TL_messages_discardEncryption* internal_default_instance() {
    return reinterpret_cast<const TL_messages_discardEncryption*>(
               &_TL_messages_discardEncryption_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    123;

  void Swap(TL_messages_discardEncryption* other);
  friend void swap(TL_messages_discardEncryption& a, TL_messages_discardEncryption& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TL_messages_discardEncryption* New() const PROTOBUF_FINAL { return New(NULL); }

  TL_messages_discardEncryption* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TL_messages_discardEncryption* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 chat_id = 1;
  void clear_chat_id();
  static const int kChatIdFieldNumber = 1;
  ::google::protobuf::int32 chat_id() const;
  void set_chat_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:mtproto.TL_messages_discardEncryption)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 chat_id_;
  mutable int _cached_size_;
  friend struct protobuf_schema_2etl_2esync_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TL_messages_setEncryptedTyping : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtproto.TL_messages_setEncryptedTyping) */ {
 public:
  TL_messages_setEncryptedTyping();
  virtual ~TL_messages_setEncryptedTyping();

  TL_messages_setEncryptedTyping(const TL_messages_setEncryptedTyping& from);

  inline TL_messages_setEncryptedTyping& operator=(const TL_messages_setEncryptedTyping& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TL_messages_setEncryptedTyping(TL_messages_setEncryptedTyping&& from) noexcept
    : TL_messages_setEncryptedTyping() {
    *this = ::std::move(from);
  }

  inline TL_messages_setEncryptedTyping& operator=(TL_messages_setEncryptedTyping&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TL_messages_setEncryptedTyping& default_instance();

  static inline const TL_messages_setEncryptedTyping* internal_default_instance() {
    return reinterpret_cast<const TL_messages_setEncryptedTyping*>(
               &_TL_messages_setEncryptedTyping_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    124;

  void Swap(TL_messages_setEncryptedTyping* other);
  friend void swap(TL_messages_setEncryptedTyping& a, TL_messages_setEncryptedTyping& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TL_messages_setEncryptedTyping* New() const PROTOBUF_FINAL { return New(NULL); }

  TL_messages_setEncryptedTyping* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TL_messages_setEncryptedTyping* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .mtproto.InputEncryptedChat peer = 1;
  bool has_peer() const;
  void clear_peer();
  static const int kPeerFieldNumber = 1;
  const ::mtproto::InputEncryptedChat& peer() const;
  ::mtproto::InputEncryptedChat* mutable_peer();
  ::mtproto::InputEncryptedChat* release_peer();
  void set_allocated_peer(::mtproto::InputEncryptedChat* peer);

  // .mtproto.Bool typing = 2;
  bool has_typing() const;
  void clear_typing();
  static const int kTypingFieldNumber = 2;
  const ::mtproto::Bool& typing() const;
  ::mtproto::Bool* mutable_typing();
  ::mtproto::Bool* release_typing();
  void set_allocated_typing(::mtproto::Bool* typing);

  // @@protoc_insertion_point(class_scope:mtproto.TL_messages_setEncryptedTyping)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::mtproto::InputEncryptedChat* peer_;
  ::mtproto::Bool* typing_;
  mutable int _cached_size_;
  friend struct protobuf_schema_2etl_2esync_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TL_messages_readEncryptedHistory : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtproto.TL_messages_readEncryptedHistory) */ {
 public:
  TL_messages_readEncryptedHistory();
  virtual ~TL_messages_readEncryptedHistory();

  TL_messages_readEncryptedHistory(const TL_messages_readEncryptedHistory& from);

  inline TL_messages_readEncryptedHistory& operator=(const TL_messages_readEncryptedHistory& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TL_messages_readEncryptedHistory(TL_messages_readEncryptedHistory&& from) noexcept
    : TL_messages_readEncryptedHistory() {
    *this = ::std::move(from);
  }

  inline TL_messages_readEncryptedHistory& operator=(TL_messages_readEncryptedHistory&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TL_messages_readEncryptedHistory& default_instance();

  static inline const TL_messages_readEncryptedHistory* internal_default_instance() {
    return reinterpret_cast<const TL_messages_readEncryptedHistory*>(
               &_TL_messages_readEncryptedHistory_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    125;

  void Swap(TL_messages_readEncryptedHistory* other);
  friend void swap(TL_messages_readEncryptedHistory& a, TL_messages_readEncryptedHistory& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TL_messages_readEncryptedHistory* New() const PROTOBUF_FINAL { return New(NULL); }

  TL_messages_readEncryptedHistory* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TL_messages_readEncryptedHistory* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .mtproto.InputEncryptedChat peer = 1;
  bool has_peer() const;
  void clear_peer();
  static const int kPeerFieldNumber = 1;
  const ::mtproto::InputEncryptedChat& peer() const;
  ::mtproto::InputEncryptedChat* mutable_peer();
  ::mtproto::InputEncryptedChat* release_peer();
  void set_allocated_peer(::mtproto::InputEncryptedChat* peer);

  // int32 max_date = 2;
  void clear_max_date();
  static const int kMaxDateFieldNumber = 2;
  ::google::protobuf::int32 max_date() const;
  void set_max_date(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:mtproto.TL_messages_readEncryptedHistory)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::mtproto::InputEncryptedChat* peer_;
  ::google::protobuf::int32 max_date_;
  mutable int _cached_size_;
  friend struct protobuf_schema_2etl_2esync_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TL_messages_sendEncrypted : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtproto.TL_messages_sendEncrypted) */ {
 public:
  TL_messages_sendEncrypted();
  virtual ~TL_messages_sendEncrypted();

  TL_messages_sendEncrypted(const TL_messages_sendEncrypted& from);

  inline TL_messages_sendEncrypted& operator=(const TL_messages_sendEncrypted& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TL_messages_sendEncrypted(TL_messages_sendEncrypted&& from) noexcept
    : TL_messages_sendEncrypted() {
    *this = ::std::move(from);
  }

  inline TL_messages_sendEncrypted& operator=(TL_messages_sendEncrypted&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TL_messages_sendEncrypted& default_instance();

  static inline const TL_messages_sendEncrypted* internal_default_instance() {
    return reinterpret_cast<const TL_messages_sendEncrypted*>(
               &_TL_messages_sendEncrypted_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    126;

  void Swap(TL_messages_sendEncrypted* other);
  friend void swap(TL_messages_sendEncrypted& a, TL_messages_sendEncrypted& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TL_messages_sendEncrypted* New() const PROTOBUF_FINAL { return New(NULL); }

  TL_messages_sendEncrypted* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TL_messages_sendEncrypted* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes data = 3;
  void clear_data();
  static const int kDataFieldNumber = 3;
  const ::std::string& data() const;
  void set_data(const ::std::string& value);
  #if LANG_CXX11
  void set_data(::std::string&& value);
  #endif
  void set_data(const char* value);
  void set_data(const void* value, size_t size);
  ::std::string* mutable_data();
  ::std::string* release_data();
  void set_allocated_data(::std::string* data);

  // .mtproto.InputEncryptedChat peer = 1;
  bool has_peer() const;
  void clear_peer();
  static const int kPeerFieldNumber = 1;
  const ::mtproto::InputEncryptedChat& peer() const;
  ::mtproto::InputEncryptedChat* mutable_peer();
  ::mtproto::InputEncryptedChat* release_peer();
  void set_allocated_peer(::mtproto::InputEncryptedChat* peer);

  // int64 random_id = 2;
  void clear_random_id();
  static const int kRandomIdFieldNumber = 2;
  ::google::protobuf::int64 random_id() const;
  void set_random_id(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:mtproto.TL_messages_sendEncrypted)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr data_;
  ::mtproto::InputEncryptedChat* peer_;
  ::google::protobuf::int64 random_id_;
  mutable int _cached_size_;
  friend struct protobuf_schema_2etl_2esync_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TL_messages_sendEncryptedFile : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtproto.TL_messages_sendEncryptedFile) */ {
 public:
  TL_messages_sendEncryptedFile();
  virtual ~TL_messages_sendEncryptedFile();

  TL_messages_sendEncryptedFile(const TL_messages_sendEncryptedFile& from);

  inline TL_messages_sendEncryptedFile& operator=(const TL_messages_sendEncryptedFile& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TL_messages_sendEncryptedFile(TL_messages_sendEncryptedFile&& from) noexcept
    : TL_messages_sendEncryptedFile() {
    *this = ::std::move(from);
  }

  inline TL_messages_sendEncryptedFile& operator=(TL_messages_sendEncryptedFile&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TL_messages_sendEncryptedFile& default_instance();

  static inline const TL_messages_sendEncryptedFile* internal_default_instance() {
    return reinterpret_cast<const TL_messages_sendEncryptedFile*>(
               &_TL_messages_sendEncryptedFile_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    127;

  void Swap(TL_messages_sendEncryptedFile* other);
  friend void swap(TL_messages_sendEncryptedFile& a, TL_messages_sendEncryptedFile& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TL_messages_sendEncryptedFile* New() const PROTOBUF_FINAL { return New(NULL); }

  TL_messages_sendEncryptedFile* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TL_messages_sendEncryptedFile* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes data = 3;
  void clear_data();
  static const int kDataFieldNumber = 3;
  const ::std::string& data() const;
  void set_data(const ::std::string& value);
  #if LANG_CXX11
  void set_data(::std::string&& value);
  #endif
  void set_data(const char* value);
  void set_data(const void* value, size_t size);
  ::std::string* mutable_data();
  ::std::string* release_data();
  void set_allocated_data(::std::string* data);

  // .mtproto.InputEncryptedChat peer = 1;
  bool has_peer() const;
  void clear_peer();
  static const int kPeerFieldNumber = 1;
  const ::mtproto::InputEncryptedChat& peer() const;
  ::mtproto::InputEncryptedChat* mutable_peer();
  ::mtproto::InputEncryptedChat* release_peer();
  void set_allocated_peer(::mtproto::InputEncryptedChat* peer);

  // .mtproto.InputEncryptedFile file = 4;
  bool has_file() const;
  void clear_file();
  static const int kFileFieldNumber = 4;
  const ::mtproto::InputEncryptedFile& file() const;
  ::mtproto::InputEncryptedFile* mutable_file();
  ::mtproto::InputEncryptedFile* release_file();
  void set_allocated_file(::mtproto::InputEncryptedFile* file);

  // int64 random_id = 2;
  void clear_random_id();
  static const int kRandomIdFieldNumber = 2;
  ::google::protobuf::int64 random_id() const;
  void set_random_id(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:mtproto.TL_messages_sendEncryptedFile)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr data_;
  ::mtproto::InputEncryptedChat* peer_;
  ::mtproto::InputEncryptedFile* file_;
  ::google::protobuf::int64 random_id_;
  mutable int _cached_size_;
  friend struct protobuf_schema_2etl_2esync_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TL_messages_sendEncryptedService : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtproto.TL_messages_sendEncryptedService) */ {
 public:
  TL_messages_sendEncryptedService();
  virtual ~TL_messages_sendEncryptedService();

  TL_messages_sendEncryptedService(const TL_messages_sendEncryptedService& from);

  inline TL_messages_sendEncryptedService& operator=(const TL_messages_sendEncryptedService& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TL_messages_sendEncryptedService(TL_messages_sendEncryptedService&& from) noexcept
    : TL_messages_sendEncryptedService() {
    *this = ::std::move(from);
  }

  inline TL_messages_sendEncryptedService& operator=(TL_messages_sendEncryptedService&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TL_messages_sendEncryptedService& default_instance();

  static inline const TL_messages_sendEncryptedService* internal_default_instance() {
    return reinterpret_cast<const TL_messages_sendEncryptedService*>(
               &_TL_messages_sendEncryptedService_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    128;

  void Swap(TL_messages_sendEncryptedService* other);
  friend void swap(TL_messages_sendEncryptedService& a, TL_messages_sendEncryptedService& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TL_messages_sendEncryptedService* New() const PROTOBUF_FINAL { return New(NULL); }

  TL_messages_sendEncryptedService* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TL_messages_sendEncryptedService* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes data = 3;
  void clear_data();
  static const int kDataFieldNumber = 3;
  const ::std::string& data() const;
  void set_data(const ::std::string& value);
  #if LANG_CXX11
  void set_data(::std::string&& value);
  #endif
  void set_data(const char* value);
  void set_data(const void* value, size_t size);
  ::std::string* mutable_data();
  ::std::string* release_data();
  void set_allocated_data(::std::string* data);

  // .mtproto.InputEncryptedChat peer = 1;
  bool has_peer() const;
  void clear_peer();
  static const int kPeerFieldNumber = 1;
  const ::mtproto::InputEncryptedChat& peer() const;
  ::mtproto::InputEncryptedChat* mutable_peer();
  ::mtproto::InputEncryptedChat* release_peer();
  void set_allocated_peer(::mtproto::InputEncryptedChat* peer);

  // int64 random_id = 2;
  void clear_random_id();
  static const int kRandomIdFieldNumber = 2;
  ::google::protobuf::int64 random_id() const;
  void set_random_id(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:mtproto.TL_messages_sendEncryptedService)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr data_;
  ::mtproto::InputEncryptedChat* peer_;
  ::google::protobuf::int64 random_id_;
  mutable int _cached_size_;
  friend struct protobuf_schema_2etl_2esync_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TL_messages_receivedQueue : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtproto.TL_messages_receivedQueue) */ {
 public:
  TL_messages_receivedQueue();
  virtual ~TL_messages_receivedQueue();

  TL_messages_receivedQueue(const TL_messages_receivedQueue& from);

  inline TL_messages_receivedQueue& operator=(const TL_messages_receivedQueue& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TL_messages_receivedQueue(TL_messages_receivedQueue&& from) noexcept
    : TL_messages_receivedQueue() {
    *this = ::std::move(from);
  }

  inline TL_messages_receivedQueue& operator=(TL_messages_receivedQueue&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TL_messages_receivedQueue& default_instance();

  static inline const TL_messages_receivedQueue* internal_default_instance() {
    return reinterpret_cast<const TL_messages_receivedQueue*>(
               &_TL_messages_receivedQueue_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    129;

  void Swap(TL_messages_receivedQueue* other);
  friend void swap(TL_messages_receivedQueue& a, TL_messages_receivedQueue& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TL_messages_receivedQueue* New() const PROTOBUF_FINAL { return New(NULL); }

  TL_messages_receivedQueue* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TL_messages_receivedQueue* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 max_qts = 1;
  void clear_max_qts();
  static const int kMaxQtsFieldNumber = 1;
  ::google::protobuf::int32 max_qts() const;
  void set_max_qts(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:mtproto.TL_messages_receivedQueue)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 max_qts_;
  mutable int _cached_size_;
  friend struct protobuf_schema_2etl_2esync_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TL_messages_reportEncryptedSpam : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtproto.TL_messages_reportEncryptedSpam) */ {
 public:
  TL_messages_reportEncryptedSpam();
  virtual ~TL_messages_reportEncryptedSpam();

  TL_messages_reportEncryptedSpam(const TL_messages_reportEncryptedSpam& from);

  inline TL_messages_reportEncryptedSpam& operator=(const TL_messages_reportEncryptedSpam& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TL_messages_reportEncryptedSpam(TL_messages_reportEncryptedSpam&& from) noexcept
    : TL_messages_reportEncryptedSpam() {
    *this = ::std::move(from);
  }

  inline TL_messages_reportEncryptedSpam& operator=(TL_messages_reportEncryptedSpam&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TL_messages_reportEncryptedSpam& default_instance();

  static inline const TL_messages_reportEncryptedSpam* internal_default_instance() {
    return reinterpret_cast<const TL_messages_reportEncryptedSpam*>(
               &_TL_messages_reportEncryptedSpam_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    130;

  void Swap(TL_messages_reportEncryptedSpam* other);
  friend void swap(TL_messages_reportEncryptedSpam& a, TL_messages_reportEncryptedSpam& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TL_messages_reportEncryptedSpam* New() const PROTOBUF_FINAL { return New(NULL); }

  TL_messages_reportEncryptedSpam* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TL_messages_reportEncryptedSpam* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .mtproto.InputEncryptedChat peer = 1;
  bool has_peer() const;
  void clear_peer();
  static const int kPeerFieldNumber = 1;
  const ::mtproto::InputEncryptedChat& peer() const;
  ::mtproto::InputEncryptedChat* mutable_peer();
  ::mtproto::InputEncryptedChat* release_peer();
  void set_allocated_peer(::mtproto::InputEncryptedChat* peer);

  // @@protoc_insertion_point(class_scope:mtproto.TL_messages_reportEncryptedSpam)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::mtproto::InputEncryptedChat* peer_;
  mutable int _cached_size_;
  friend struct protobuf_schema_2etl_2esync_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TL_messages_readMessageContents : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtproto.TL_messages_readMessageContents) */ {
 public:
  TL_messages_readMessageContents();
  virtual ~TL_messages_readMessageContents();

  TL_messages_readMessageContents(const TL_messages_readMessageContents& from);

  inline TL_messages_readMessageContents& operator=(const TL_messages_readMessageContents& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TL_messages_readMessageContents(TL_messages_readMessageContents&& from) noexcept
    : TL_messages_readMessageContents() {
    *this = ::std::move(from);
  }

  inline TL_messages_readMessageContents& operator=(TL_messages_readMessageContents&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TL_messages_readMessageContents& default_instance();

  static inline const TL_messages_readMessageContents* internal_default_instance() {
    return reinterpret_cast<const TL_messages_readMessageContents*>(
               &_TL_messages_readMessageContents_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    131;

  void Swap(TL_messages_readMessageContents* other);
  friend void swap(TL_messages_readMessageContents& a, TL_messages_readMessageContents& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TL_messages_readMessageContents* New() const PROTOBUF_FINAL { return New(NULL); }

  TL_messages_readMessageContents* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TL_messages_readMessageContents* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 id = 1;
  int id_size() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::int32 id(int index) const;
  void set_id(int index, ::google::protobuf::int32 value);
  void add_id(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      id() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_id();

  // @@protoc_insertion_point(class_scope:mtproto.TL_messages_readMessageContents)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > id_;
  mutable int _cached_size_;
  friend struct protobuf_schema_2etl_2esync_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TL_messages_getStickers : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtproto.TL_messages_getStickers) */ {
 public:
  TL_messages_getStickers();
  virtual ~TL_messages_getStickers();

  TL_messages_getStickers(const TL_messages_getStickers& from);

  inline TL_messages_getStickers& operator=(const TL_messages_getStickers& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TL_messages_getStickers(TL_messages_getStickers&& from) noexcept
    : TL_messages_getStickers() {
    *this = ::std::move(from);
  }

  inline TL_messages_getStickers& operator=(TL_messages_getStickers&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TL_messages_getStickers& default_instance();

  static inline const TL_messages_getStickers* internal_default_instance() {
    return reinterpret_cast<const TL_messages_getStickers*>(
               &_TL_messages_getStickers_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    132;

  void Swap(TL_messages_getStickers* other);
  friend void swap(TL_messages_getStickers& a, TL_messages_getStickers& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TL_messages_getStickers* New() const PROTOBUF_FINAL { return New(NULL); }

  TL_messages_getStickers* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TL_messages_getStickers* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string emoticon = 1;
  void clear_emoticon();
  static const int kEmoticonFieldNumber = 1;
  const ::std::string& emoticon() const;
  void set_emoticon(const ::std::string& value);
  #if LANG_CXX11
  void set_emoticon(::std::string&& value);
  #endif
  void set_emoticon(const char* value);
  void set_emoticon(const char* value, size_t size);
  ::std::string* mutable_emoticon();
  ::std::string* release_emoticon();
  void set_allocated_emoticon(::std::string* emoticon);

  // int32 hash = 2;
  void clear_hash();
  static const int kHashFieldNumber = 2;
  ::google::protobuf::int32 hash() const;
  void set_hash(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:mtproto.TL_messages_getStickers)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr emoticon_;
  ::google::protobuf::int32 hash_;
  mutable int _cached_size_;
  friend struct protobuf_schema_2etl_2esync_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TL_messages_getAllStickers : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtproto.TL_messages_getAllStickers) */ {
 public:
  TL_messages_getAllStickers();
  virtual ~TL_messages_getAllStickers();

  TL_messages_getAllStickers(const TL_messages_getAllStickers& from);

  inline TL_messages_getAllStickers& operator=(const TL_messages_getAllStickers& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TL_messages_getAllStickers(TL_messages_getAllStickers&& from) noexcept
    : TL_messages_getAllStickers() {
    *this = ::std::move(from);
  }

  inline TL_messages_getAllStickers& operator=(TL_messages_getAllStickers&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TL_messages_getAllStickers& default_instance();

  static inline const TL_messages_getAllStickers* internal_default_instance() {
    return reinterpret_cast<const TL_messages_getAllStickers*>(
               &_TL_messages_getAllStickers_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    133;

  void Swap(TL_messages_getAllStickers* other);
  friend void swap(TL_messages_getAllStickers& a, TL_messages_getAllStickers& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TL_messages_getAllStickers* New() const PROTOBUF_FINAL { return New(NULL); }

  TL_messages_getAllStickers* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TL_messages_getAllStickers* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 hash = 1;
  void clear_hash();
  static const int kHashFieldNumber = 1;
  ::google::protobuf::int32 hash() const;
  void set_hash(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:mtproto.TL_messages_getAllStickers)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 hash_;
  mutable int _cached_size_;
  friend struct protobuf_schema_2etl_2esync_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TL_messages_getWebPagePreview : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtproto.TL_messages_getWebPagePreview) */ {
 public:
  TL_messages_getWebPagePreview();
  virtual ~TL_messages_getWebPagePreview();

  TL_messages_getWebPagePreview(const TL_messages_getWebPagePreview& from);

  inline TL_messages_getWebPagePreview& operator=(const TL_messages_getWebPagePreview& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TL_messages_getWebPagePreview(TL_messages_getWebPagePreview&& from) noexcept
    : TL_messages_getWebPagePreview() {
    *this = ::std::move(from);
  }

  inline TL_messages_getWebPagePreview& operator=(TL_messages_getWebPagePreview&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TL_messages_getWebPagePreview& default_instance();

  static inline const TL_messages_getWebPagePreview* internal_default_instance() {
    return reinterpret_cast<const TL_messages_getWebPagePreview*>(
               &_TL_messages_getWebPagePreview_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    134;

  void Swap(TL_messages_getWebPagePreview* other);
  friend void swap(TL_messages_getWebPagePreview& a, TL_messages_getWebPagePreview& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TL_messages_getWebPagePreview* New() const PROTOBUF_FINAL { return New(NULL); }

  TL_messages_getWebPagePreview* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TL_messages_getWebPagePreview* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .mtproto.MessageEntity entities = 3;
  int entities_size() const;
  void clear_entities();
  static const int kEntitiesFieldNumber = 3;
  const ::mtproto::MessageEntity& entities(int index) const;
  ::mtproto::MessageEntity* mutable_entities(int index);
  ::mtproto::MessageEntity* add_entities();
  ::google::protobuf::RepeatedPtrField< ::mtproto::MessageEntity >*
      mutable_entities();
  const ::google::protobuf::RepeatedPtrField< ::mtproto::MessageEntity >&
      entities() const;

  // string message = 2;
  void clear_message();
  static const int kMessageFieldNumber = 2;
  const ::std::string& message() const;
  void set_message(const ::std::string& value);
  #if LANG_CXX11
  void set_message(::std::string&& value);
  #endif
  void set_message(const char* value);
  void set_message(const char* value, size_t size);
  ::std::string* mutable_message();
  ::std::string* release_message();
  void set_allocated_message(::std::string* message);

  // @@protoc_insertion_point(class_scope:mtproto.TL_messages_getWebPagePreview)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::mtproto::MessageEntity > entities_;
  ::google::protobuf::internal::ArenaStringPtr message_;
  mutable int _cached_size_;
  friend struct protobuf_schema_2etl_2esync_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TL_messages_exportChatInvite : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtproto.TL_messages_exportChatInvite) */ {
 public:
  TL_messages_exportChatInvite();
  virtual ~TL_messages_exportChatInvite();

  TL_messages_exportChatInvite(const TL_messages_exportChatInvite& from);

  inline TL_messages_exportChatInvite& operator=(const TL_messages_exportChatInvite& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TL_messages_exportChatInvite(TL_messages_exportChatInvite&& from) noexcept
    : TL_messages_exportChatInvite() {
    *this = ::std::move(from);
  }

  inline TL_messages_exportChatInvite& operator=(TL_messages_exportChatInvite&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TL_messages_exportChatInvite& default_instance();

  static inline const TL_messages_exportChatInvite* internal_default_instance() {
    return reinterpret_cast<const TL_messages_exportChatInvite*>(
               &_TL_messages_exportChatInvite_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    135;

  void Swap(TL_messages_exportChatInvite* other);
  friend void swap(TL_messages_exportChatInvite& a, TL_messages_exportChatInvite& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TL_messages_exportChatInvite* New() const PROTOBUF_FINAL { return New(NULL); }

  TL_messages_exportChatInvite* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TL_messages_exportChatInvite* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 chat_id = 1;
  void clear_chat_id();
  static const int kChatIdFieldNumber = 1;
  ::google::protobuf::int32 chat_id() const;
  void set_chat_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:mtproto.TL_messages_exportChatInvite)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 chat_id_;
  mutable int _cached_size_;
  friend struct protobuf_schema_2etl_2esync_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TL_messages_checkChatInvite : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtproto.TL_messages_checkChatInvite) */ {
 public:
  TL_messages_checkChatInvite();
  virtual ~TL_messages_checkChatInvite();

  TL_messages_checkChatInvite(const TL_messages_checkChatInvite& from);

  inline TL_messages_checkChatInvite& operator=(const TL_messages_checkChatInvite& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TL_messages_checkChatInvite(TL_messages_checkChatInvite&& from) noexcept
    : TL_messages_checkChatInvite() {
    *this = ::std::move(from);
  }

  inline TL_messages_checkChatInvite& operator=(TL_messages_checkChatInvite&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TL_messages_checkChatInvite& default_instance();

  static inline const TL_messages_checkChatInvite* internal_default_instance() {
    return reinterpret_cast<const TL_messages_checkChatInvite*>(
               &_TL_messages_checkChatInvite_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    136;

  void Swap(TL_messages_checkChatInvite* other);
  friend void swap(TL_messages_checkChatInvite& a, TL_messages_checkChatInvite& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TL_messages_checkChatInvite* New() const PROTOBUF_FINAL { return New(NULL); }

  TL_messages_checkChatInvite* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TL_messages_checkChatInvite* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string hash = 1;
  void clear_hash();
  static const int kHashFieldNumber = 1;
  const ::std::string& hash() const;
  void set_hash(const ::std::string& value);
  #if LANG_CXX11
  void set_hash(::std::string&& value);
  #endif
  void set_hash(const char* value);
  void set_hash(const char* value, size_t size);
  ::std::string* mutable_hash();
  ::std::string* release_hash();
  void set_allocated_hash(::std::string* hash);

  // @@protoc_insertion_point(class_scope:mtproto.TL_messages_checkChatInvite)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr hash_;
  mutable int _cached_size_;
  friend struct protobuf_schema_2etl_2esync_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TL_messages_importChatInvite : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtproto.TL_messages_importChatInvite) */ {
 public:
  TL_messages_importChatInvite();
  virtual ~TL_messages_importChatInvite();

  TL_messages_importChatInvite(const TL_messages_importChatInvite& from);

  inline TL_messages_importChatInvite& operator=(const TL_messages_importChatInvite& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TL_messages_importChatInvite(TL_messages_importChatInvite&& from) noexcept
    : TL_messages_importChatInvite() {
    *this = ::std::move(from);
  }

  inline TL_messages_importChatInvite& operator=(TL_messages_importChatInvite&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TL_messages_importChatInvite& default_instance();

  static inline const TL_messages_importChatInvite* internal_default_instance() {
    return reinterpret_cast<const TL_messages_importChatInvite*>(
               &_TL_messages_importChatInvite_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    137;

  void Swap(TL_messages_importChatInvite* other);
  friend void swap(TL_messages_importChatInvite& a, TL_messages_importChatInvite& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TL_messages_importChatInvite* New() const PROTOBUF_FINAL { return New(NULL); }

  TL_messages_importChatInvite* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TL_messages_importChatInvite* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string hash = 1;
  void clear_hash();
  static const int kHashFieldNumber = 1;
  const ::std::string& hash() const;
  void set_hash(const ::std::string& value);
  #if LANG_CXX11
  void set_hash(::std::string&& value);
  #endif
  void set_hash(const char* value);
  void set_hash(const char* value, size_t size);
  ::std::string* mutable_hash();
  ::std::string* release_hash();
  void set_allocated_hash(::std::string* hash);

  // @@protoc_insertion_point(class_scope:mtproto.TL_messages_importChatInvite)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr hash_;
  mutable int _cached_size_;
  friend struct protobuf_schema_2etl_2esync_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TL_messages_getStickerSet : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtproto.TL_messages_getStickerSet) */ {
 public:
  TL_messages_getStickerSet();
  virtual ~TL_messages_getStickerSet();

  TL_messages_getStickerSet(const TL_messages_getStickerSet& from);

  inline TL_messages_getStickerSet& operator=(const TL_messages_getStickerSet& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TL_messages_getStickerSet(TL_messages_getStickerSet&& from) noexcept
    : TL_messages_getStickerSet() {
    *this = ::std::move(from);
  }

  inline TL_messages_getStickerSet& operator=(TL_messages_getStickerSet&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TL_messages_getStickerSet& default_instance();

  static inline const TL_messages_getStickerSet* internal_default_instance() {
    return reinterpret_cast<const TL_messages_getStickerSet*>(
               &_TL_messages_getStickerSet_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    138;

  void Swap(TL_messages_getStickerSet* other);
  friend void swap(TL_messages_getStickerSet& a, TL_messages_getStickerSet& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TL_messages_getStickerSet* New() const PROTOBUF_FINAL { return New(NULL); }

  TL_messages_getStickerSet* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TL_messages_getStickerSet* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .mtproto.InputStickerSet stickerset = 1;
  bool has_stickerset() const;
  void clear_stickerset();
  static const int kStickersetFieldNumber = 1;
  const ::mtproto::InputStickerSet& stickerset() const;
  ::mtproto::InputStickerSet* mutable_stickerset();
  ::mtproto::InputStickerSet* release_stickerset();
  void set_allocated_stickerset(::mtproto::InputStickerSet* stickerset);

  // @@protoc_insertion_point(class_scope:mtproto.TL_messages_getStickerSet)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::mtproto::InputStickerSet* stickerset_;
  mutable int _cached_size_;
  friend struct protobuf_schema_2etl_2esync_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TL_messages_installStickerSet : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtproto.TL_messages_installStickerSet) */ {
 public:
  TL_messages_installStickerSet();
  virtual ~TL_messages_installStickerSet();

  TL_messages_installStickerSet(const TL_messages_installStickerSet& from);

  inline TL_messages_installStickerSet& operator=(const TL_messages_installStickerSet& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TL_messages_installStickerSet(TL_messages_installStickerSet&& from) noexcept
    : TL_messages_installStickerSet() {
    *this = ::std::move(from);
  }

  inline TL_messages_installStickerSet& operator=(TL_messages_installStickerSet&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TL_messages_installStickerSet& default_instance();

  static inline const TL_messages_installStickerSet* internal_default_instance() {
    return reinterpret_cast<const TL_messages_installStickerSet*>(
               &_TL_messages_installStickerSet_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    139;

  void Swap(TL_messages_installStickerSet* other);
  friend void swap(TL_messages_installStickerSet& a, TL_messages_installStickerSet& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TL_messages_installStickerSet* New() const PROTOBUF_FINAL { return New(NULL); }

  TL_messages_installStickerSet* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TL_messages_installStickerSet* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .mtproto.InputStickerSet stickerset = 1;
  bool has_stickerset() const;
  void clear_stickerset();
  static const int kStickersetFieldNumber = 1;
  const ::mtproto::InputStickerSet& stickerset() const;
  ::mtproto::InputStickerSet* mutable_stickerset();
  ::mtproto::InputStickerSet* release_stickerset();
  void set_allocated_stickerset(::mtproto::InputStickerSet* stickerset);

  // .mtproto.Bool archived = 2;
  bool has_archived() const;
  void clear_archived();
  static const int kArchivedFieldNumber = 2;
  const ::mtproto::Bool& archived() const;
  ::mtproto::Bool* mutable_archived();
  ::mtproto::Bool* release_archived();
  void set_allocated_archived(::mtproto::Bool* archived);

  // @@protoc_insertion_point(class_scope:mtproto.TL_messages_installStickerSet)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::mtproto::InputStickerSet* stickerset_;
  ::mtproto::Bool* archived_;
  mutable int _cached_size_;
  friend struct protobuf_schema_2etl_2esync_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TL_messages_uninstallStickerSet : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtproto.TL_messages_uninstallStickerSet) */ {
 public:
  TL_messages_uninstallStickerSet();
  virtual ~TL_messages_uninstallStickerSet();

  TL_messages_uninstallStickerSet(const TL_messages_uninstallStickerSet& from);

  inline TL_messages_uninstallStickerSet& operator=(const TL_messages_uninstallStickerSet& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TL_messages_uninstallStickerSet(TL_messages_uninstallStickerSet&& from) noexcept
    : TL_messages_uninstallStickerSet() {
    *this = ::std::move(from);
  }

  inline TL_messages_uninstallStickerSet& operator=(TL_messages_uninstallStickerSet&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TL_messages_uninstallStickerSet& default_instance();

  static inline const TL_messages_uninstallStickerSet* internal_default_instance() {
    return reinterpret_cast<const TL_messages_uninstallStickerSet*>(
               &_TL_messages_uninstallStickerSet_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    140;

  void Swap(TL_messages_uninstallStickerSet* other);
  friend void swap(TL_messages_uninstallStickerSet& a, TL_messages_uninstallStickerSet& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TL_messages_uninstallStickerSet* New() const PROTOBUF_FINAL { return New(NULL); }

  TL_messages_uninstallStickerSet* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TL_messages_uninstallStickerSet* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .mtproto.InputStickerSet stickerset = 1;
  bool has_stickerset() const;
  void clear_stickerset();
  static const int kStickersetFieldNumber = 1;
  const ::mtproto::InputStickerSet& stickerset() const;
  ::mtproto::InputStickerSet* mutable_stickerset();
  ::mtproto::InputStickerSet* release_stickerset();
  void set_allocated_stickerset(::mtproto::InputStickerSet* stickerset);

  // @@protoc_insertion_point(class_scope:mtproto.TL_messages_uninstallStickerSet)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::mtproto::InputStickerSet* stickerset_;
  mutable int _cached_size_;
  friend struct protobuf_schema_2etl_2esync_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TL_messages_startBot : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtproto.TL_messages_startBot) */ {
 public:
  TL_messages_startBot();
  virtual ~TL_messages_startBot();

  TL_messages_startBot(const TL_messages_startBot& from);

  inline TL_messages_startBot& operator=(const TL_messages_startBot& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TL_messages_startBot(TL_messages_startBot&& from) noexcept
    : TL_messages_startBot() {
    *this = ::std::move(from);
  }

  inline TL_messages_startBot& operator=(TL_messages_startBot&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TL_messages_startBot& default_instance();

  static inline const TL_messages_startBot* internal_default_instance() {
    return reinterpret_cast<const TL_messages_startBot*>(
               &_TL_messages_startBot_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    141;

  void Swap(TL_messages_startBot* other);
  friend void swap(TL_messages_startBot& a, TL_messages_startBot& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TL_messages_startBot* New() const PROTOBUF_FINAL { return New(NULL); }

  TL_messages_startBot* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TL_messages_startBot* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string start_param = 4;
  void clear_start_param();
  static const int kStartParamFieldNumber = 4;
  const ::std::string& start_param() const;
  void set_start_param(const ::std::string& value);
  #if LANG_CXX11
  void set_start_param(::std::string&& value);
  #endif
  void set_start_param(const char* value);
  void set_start_param(const char* value, size_t size);
  ::std::string* mutable_start_param();
  ::std::string* release_start_param();
  void set_allocated_start_param(::std::string* start_param);

  // .mtproto.InputUser bot = 1;
  bool has_bot() const;
  void clear_bot();
  static const int kBotFieldNumber = 1;
  const ::mtproto::InputUser& bot() const;
  ::mtproto::InputUser* mutable_bot();
  ::mtproto::InputUser* release_bot();
  void set_allocated_bot(::mtproto::InputUser* bot);

  // .mtproto.InputPeer peer = 2;
  bool has_peer() const;
  void clear_peer();
  static const int kPeerFieldNumber = 2;
  const ::mtproto::InputPeer& peer() const;
  ::mtproto::InputPeer* mutable_peer();
  ::mtproto::InputPeer* release_peer();
  void set_allocated_peer(::mtproto::InputPeer* peer);

  // int64 random_id = 3;
  void clear_random_id();
  static const int kRandomIdFieldNumber = 3;
  ::google::protobuf::int64 random_id() const;
  void set_random_id(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:mtproto.TL_messages_startBot)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr start_param_;
  ::mtproto::InputUser* bot_;
  ::mtproto::InputPeer* peer_;
  ::google::protobuf::int64 random_id_;
  mutable int _cached_size_;
  friend struct protobuf_schema_2etl_2esync_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TL_messages_getMessagesViews : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtproto.TL_messages_getMessagesViews) */ {
 public:
  TL_messages_getMessagesViews();
  virtual ~TL_messages_getMessagesViews();

  TL_messages_getMessagesViews(const TL_messages_getMessagesViews& from);

  inline TL_messages_getMessagesViews& operator=(const TL_messages_getMessagesViews& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TL_messages_getMessagesViews(TL_messages_getMessagesViews&& from) noexcept
    : TL_messages_getMessagesViews() {
    *this = ::std::move(from);
  }

  inline TL_messages_getMessagesViews& operator=(TL_messages_getMessagesViews&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TL_messages_getMessagesViews& default_instance();

  static inline const TL_messages_getMessagesViews* internal_default_instance() {
    return reinterpret_cast<const TL_messages_getMessagesViews*>(
               &_TL_messages_getMessagesViews_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    142;

  void Swap(TL_messages_getMessagesViews* other);
  friend void swap(TL_messages_getMessagesViews& a, TL_messages_getMessagesViews& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TL_messages_getMessagesViews* New() const PROTOBUF_FINAL { return New(NULL); }

  TL_messages_getMessagesViews* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TL_messages_getMessagesViews* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 id = 2;
  int id_size() const;
  void clear_id();
  static const int kIdFieldNumber = 2;
  ::google::protobuf::int32 id(int index) const;
  void set_id(int index, ::google::protobuf::int32 value);
  void add_id(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      id() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_id();

  // .mtproto.InputPeer peer = 1;
  bool has_peer() const;
  void clear_peer();
  static const int kPeerFieldNumber = 1;
  const ::mtproto::InputPeer& peer() const;
  ::mtproto::InputPeer* mutable_peer();
  ::mtproto::InputPeer* release_peer();
  void set_allocated_peer(::mtproto::InputPeer* peer);

  // .mtproto.Bool increment = 3;
  bool has_increment() const;
  void clear_increment();
  static const int kIncrementFieldNumber = 3;
  const ::mtproto::Bool& increment() const;
  ::mtproto::Bool* mutable_increment();
  ::mtproto::Bool* release_increment();
  void set_allocated_increment(::mtproto::Bool* increment);

  // @@protoc_insertion_point(class_scope:mtproto.TL_messages_getMessagesViews)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > id_;
  ::mtproto::InputPeer* peer_;
  ::mtproto::Bool* increment_;
  mutable int _cached_size_;
  friend struct protobuf_schema_2etl_2esync_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TL_messages_toggleChatAdmins : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtproto.TL_messages_toggleChatAdmins) */ {
 public:
  TL_messages_toggleChatAdmins();
  virtual ~TL_messages_toggleChatAdmins();

  TL_messages_toggleChatAdmins(const TL_messages_toggleChatAdmins& from);

  inline TL_messages_toggleChatAdmins& operator=(const TL_messages_toggleChatAdmins& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TL_messages_toggleChatAdmins(TL_messages_toggleChatAdmins&& from) noexcept
    : TL_messages_toggleChatAdmins() {
    *this = ::std::move(from);
  }

  inline TL_messages_toggleChatAdmins& operator=(TL_messages_toggleChatAdmins&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TL_messages_toggleChatAdmins& default_instance();

  static inline const TL_messages_toggleChatAdmins* internal_default_instance() {
    return reinterpret_cast<const TL_messages_toggleChatAdmins*>(
               &_TL_messages_toggleChatAdmins_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    143;

  void Swap(TL_messages_toggleChatAdmins* other);
  friend void swap(TL_messages_toggleChatAdmins& a, TL_messages_toggleChatAdmins& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TL_messages_toggleChatAdmins* New() const PROTOBUF_FINAL { return New(NULL); }

  TL_messages_toggleChatAdmins* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TL_messages_toggleChatAdmins* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .mtproto.Bool enabled = 2;
  bool has_enabled() const;
  void clear_enabled();
  static const int kEnabledFieldNumber = 2;
  const ::mtproto::Bool& enabled() const;
  ::mtproto::Bool* mutable_enabled();
  ::mtproto::Bool* release_enabled();
  void set_allocated_enabled(::mtproto::Bool* enabled);

  // int32 chat_id = 1;
  void clear_chat_id();
  static const int kChatIdFieldNumber = 1;
  ::google::protobuf::int32 chat_id() const;
  void set_chat_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:mtproto.TL_messages_toggleChatAdmins)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::mtproto::Bool* enabled_;
  ::google::protobuf::int32 chat_id_;
  mutable int _cached_size_;
  friend struct protobuf_schema_2etl_2esync_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TL_messages_editChatAdmin : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtproto.TL_messages_editChatAdmin) */ {
 public:
  TL_messages_editChatAdmin();
  virtual ~TL_messages_editChatAdmin();

  TL_messages_editChatAdmin(const TL_messages_editChatAdmin& from);

  inline TL_messages_editChatAdmin& operator=(const TL_messages_editChatAdmin& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TL_messages_editChatAdmin(TL_messages_editChatAdmin&& from) noexcept
    : TL_messages_editChatAdmin() {
    *this = ::std::move(from);
  }

  inline TL_messages_editChatAdmin& operator=(TL_messages_editChatAdmin&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TL_messages_editChatAdmin& default_instance();

  static inline const TL_messages_editChatAdmin* internal_default_instance() {
    return reinterpret_cast<const TL_messages_editChatAdmin*>(
               &_TL_messages_editChatAdmin_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    144;

  void Swap(TL_messages_editChatAdmin* other);
  friend void swap(TL_messages_editChatAdmin& a, TL_messages_editChatAdmin& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TL_messages_editChatAdmin* New() const PROTOBUF_FINAL { return New(NULL); }

  TL_messages_editChatAdmin* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TL_messages_editChatAdmin* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .mtproto.InputUser user_id = 2;
  bool has_user_id() const;
  void clear_user_id();
  static const int kUserIdFieldNumber = 2;
  const ::mtproto::InputUser& user_id() const;
  ::mtproto::InputUser* mutable_user_id();
  ::mtproto::InputUser* release_user_id();
  void set_allocated_user_id(::mtproto::InputUser* user_id);

  // .mtproto.Bool is_admin = 3;
  bool has_is_admin() const;
  void clear_is_admin();
  static const int kIsAdminFieldNumber = 3;
  const ::mtproto::Bool& is_admin() const;
  ::mtproto::Bool* mutable_is_admin();
  ::mtproto::Bool* release_is_admin();
  void set_allocated_is_admin(::mtproto::Bool* is_admin);

  // int32 chat_id = 1;
  void clear_chat_id();
  static const int kChatIdFieldNumber = 1;
  ::google::protobuf::int32 chat_id() const;
  void set_chat_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:mtproto.TL_messages_editChatAdmin)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::mtproto::InputUser* user_id_;
  ::mtproto::Bool* is_admin_;
  ::google::protobuf::int32 chat_id_;
  mutable int _cached_size_;
  friend struct protobuf_schema_2etl_2esync_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TL_messages_migrateChat : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtproto.TL_messages_migrateChat) */ {
 public:
  TL_messages_migrateChat();
  virtual ~TL_messages_migrateChat();

  TL_messages_migrateChat(const TL_messages_migrateChat& from);

  inline TL_messages_migrateChat& operator=(const TL_messages_migrateChat& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TL_messages_migrateChat(TL_messages_migrateChat&& from) noexcept
    : TL_messages_migrateChat() {
    *this = ::std::move(from);
  }

  inline TL_messages_migrateChat& operator=(TL_messages_migrateChat&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TL_messages_migrateChat& default_instance();

  static inline const TL_messages_migrateChat* internal_default_instance() {
    return reinterpret_cast<const TL_messages_migrateChat*>(
               &_TL_messages_migrateChat_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    145;

  void Swap(TL_messages_migrateChat* other);
  friend void swap(TL_messages_migrateChat& a, TL_messages_migrateChat& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TL_messages_migrateChat* New() const PROTOBUF_FINAL { return New(NULL); }

  TL_messages_migrateChat* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TL_messages_migrateChat* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 chat_id = 1;
  void clear_chat_id();
  static const int kChatIdFieldNumber = 1;
  ::google::protobuf::int32 chat_id() const;
  void set_chat_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:mtproto.TL_messages_migrateChat)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 chat_id_;
  mutable int _cached_size_;
  friend struct protobuf_schema_2etl_2esync_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TL_messages_searchGlobal : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtproto.TL_messages_searchGlobal) */ {
 public:
  TL_messages_searchGlobal();
  virtual ~TL_messages_searchGlobal();

  TL_messages_searchGlobal(const TL_messages_searchGlobal& from);

  inline TL_messages_searchGlobal& operator=(const TL_messages_searchGlobal& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TL_messages_searchGlobal(TL_messages_searchGlobal&& from) noexcept
    : TL_messages_searchGlobal() {
    *this = ::std::move(from);
  }

  inline TL_messages_searchGlobal& operator=(TL_messages_searchGlobal&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TL_messages_searchGlobal& default_instance();

  static inline const TL_messages_searchGlobal* internal_default_instance() {
    return reinterpret_cast<const TL_messages_searchGlobal*>(
               &_TL_messages_searchGlobal_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    146;

  void Swap(TL_messages_searchGlobal* other);
  friend void swap(TL_messages_searchGlobal& a, TL_messages_searchGlobal& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TL_messages_searchGlobal* New() const PROTOBUF_FINAL { return New(NULL); }

  TL_messages_searchGlobal* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TL_messages_searchGlobal* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string q = 1;
  void clear_q();
  static const int kQFieldNumber = 1;
  const ::std::string& q() const;
  void set_q(const ::std::string& value);
  #if LANG_CXX11
  void set_q(::std::string&& value);
  #endif
  void set_q(const char* value);
  void set_q(const char* value, size_t size);
  ::std::string* mutable_q();
  ::std::string* release_q();
  void set_allocated_q(::std::string* q);

  // .mtproto.InputPeer offset_peer = 3;
  bool has_offset_peer() const;
  void clear_offset_peer();
  static const int kOffsetPeerFieldNumber = 3;
  const ::mtproto::InputPeer& offset_peer() const;
  ::mtproto::InputPeer* mutable_offset_peer();
  ::mtproto::InputPeer* release_offset_peer();
  void set_allocated_offset_peer(::mtproto::InputPeer* offset_peer);

  // int32 offset_date = 2;
  void clear_offset_date();
  static const int kOffsetDateFieldNumber = 2;
  ::google::protobuf::int32 offset_date() const;
  void set_offset_date(::google::protobuf::int32 value);

  // int32 offset_id = 4;
  void clear_offset_id();
  static const int kOffsetIdFieldNumber = 4;
  ::google::protobuf::int32 offset_id() const;
  void set_offset_id(::google::protobuf::int32 value);

  // int32 limit = 5;
  void clear_limit();
  static const int kLimitFieldNumber = 5;
  ::google::protobuf::int32 limit() const;
  void set_limit(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:mtproto.TL_messages_searchGlobal)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr q_;
  ::mtproto::InputPeer* offset_peer_;
  ::google::protobuf::int32 offset_date_;
  ::google::protobuf::int32 offset_id_;
  ::google::protobuf::int32 limit_;
  mutable int _cached_size_;
  friend struct protobuf_schema_2etl_2esync_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TL_messages_reorderStickerSets : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtproto.TL_messages_reorderStickerSets) */ {
 public:
  TL_messages_reorderStickerSets();
  virtual ~TL_messages_reorderStickerSets();

  TL_messages_reorderStickerSets(const TL_messages_reorderStickerSets& from);

  inline TL_messages_reorderStickerSets& operator=(const TL_messages_reorderStickerSets& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TL_messages_reorderStickerSets(TL_messages_reorderStickerSets&& from) noexcept
    : TL_messages_reorderStickerSets() {
    *this = ::std::move(from);
  }

  inline TL_messages_reorderStickerSets& operator=(TL_messages_reorderStickerSets&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TL_messages_reorderStickerSets& default_instance();

  static inline const TL_messages_reorderStickerSets* internal_default_instance() {
    return reinterpret_cast<const TL_messages_reorderStickerSets*>(
               &_TL_messages_reorderStickerSets_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    147;

  void Swap(TL_messages_reorderStickerSets* other);
  friend void swap(TL_messages_reorderStickerSets& a, TL_messages_reorderStickerSets& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TL_messages_reorderStickerSets* New() const PROTOBUF_FINAL { return New(NULL); }

  TL_messages_reorderStickerSets* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TL_messages_reorderStickerSets* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int64 order = 3;
  int order_size() const;
  void clear_order();
  static const int kOrderFieldNumber = 3;
  ::google::protobuf::int64 order(int index) const;
  void set_order(int index, ::google::protobuf::int64 value);
  void add_order(::google::protobuf::int64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      order() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_order();

  // bool masks = 2;
  void clear_masks();
  static const int kMasksFieldNumber = 2;
  bool masks() const;
  void set_masks(bool value);

  // @@protoc_insertion_point(class_scope:mtproto.TL_messages_reorderStickerSets)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > order_;
  bool masks_;
  mutable int _cached_size_;
  friend struct protobuf_schema_2etl_2esync_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TL_messages_getDocumentByHash : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtproto.TL_messages_getDocumentByHash) */ {
 public:
  TL_messages_getDocumentByHash();
  virtual ~TL_messages_getDocumentByHash();

  TL_messages_getDocumentByHash(const TL_messages_getDocumentByHash& from);

  inline TL_messages_getDocumentByHash& operator=(const TL_messages_getDocumentByHash& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TL_messages_getDocumentByHash(TL_messages_getDocumentByHash&& from) noexcept
    : TL_messages_getDocumentByHash() {
    *this = ::std::move(from);
  }

  inline TL_messages_getDocumentByHash& operator=(TL_messages_getDocumentByHash&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TL_messages_getDocumentByHash& default_instance();

  static inline const TL_messages_getDocumentByHash* internal_default_instance() {
    return reinterpret_cast<const TL_messages_getDocumentByHash*>(
               &_TL_messages_getDocumentByHash_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    148;

  void Swap(TL_messages_getDocumentByHash* other);
  friend void swap(TL_messages_getDocumentByHash& a, TL_messages_getDocumentByHash& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TL_messages_getDocumentByHash* New() const PROTOBUF_FINAL { return New(NULL); }

  TL_messages_getDocumentByHash* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TL_messages_getDocumentByHash* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes sha256 = 1;
  void clear_sha256();
  static const int kSha256FieldNumber = 1;
  const ::std::string& sha256() const;
  void set_sha256(const ::std::string& value);
  #if LANG_CXX11
  void set_sha256(::std::string&& value);
  #endif
  void set_sha256(const char* value);
  void set_sha256(const void* value, size_t size);
  ::std::string* mutable_sha256();
  ::std::string* release_sha256();
  void set_allocated_sha256(::std::string* sha256);

  // string mime_type = 3;
  void clear_mime_type();
  static const int kMimeTypeFieldNumber = 3;
  const ::std::string& mime_type() const;
  void set_mime_type(const ::std::string& value);
  #if LANG_CXX11
  void set_mime_type(::std::string&& value);
  #endif
  void set_mime_type(const char* value);
  void set_mime_type(const char* value, size_t size);
  ::std::string* mutable_mime_type();
  ::std::string* release_mime_type();
  void set_allocated_mime_type(::std::string* mime_type);

  // int32 size = 2;
  void clear_size();
  static const int kSizeFieldNumber = 2;
  ::google::protobuf::int32 size() const;
  void set_size(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:mtproto.TL_messages_getDocumentByHash)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr sha256_;
  ::google::protobuf::internal::ArenaStringPtr mime_type_;
  ::google::protobuf::int32 size_;
  mutable int _cached_size_;
  friend struct protobuf_schema_2etl_2esync_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TL_messages_searchGifs : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtproto.TL_messages_searchGifs) */ {
 public:
  TL_messages_searchGifs();
  virtual ~TL_messages_searchGifs();

  TL_messages_searchGifs(const TL_messages_searchGifs& from);

  inline TL_messages_searchGifs& operator=(const TL_messages_searchGifs& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TL_messages_searchGifs(TL_messages_searchGifs&& from) noexcept
    : TL_messages_searchGifs() {
    *this = ::std::move(from);
  }

  inline TL_messages_searchGifs& operator=(TL_messages_searchGifs&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TL_messages_searchGifs& default_instance();

  static inline const TL_messages_searchGifs* internal_default_instance() {
    return reinterpret_cast<const TL_messages_searchGifs*>(
               &_TL_messages_searchGifs_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    149;

  void Swap(TL_messages_searchGifs* other);
  friend void swap(TL_messages_searchGifs& a, TL_messages_searchGifs& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TL_messages_searchGifs* New() const PROTOBUF_FINAL { return New(NULL); }

  TL_messages_searchGifs* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TL_messages_searchGifs* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string q = 1;
  void clear_q();
  static const int kQFieldNumber = 1;
  const ::std::string& q() const;
  void set_q(const ::std::string& value);
  #if LANG_CXX11
  void set_q(::std::string&& value);
  #endif
  void set_q(const char* value);
  void set_q(const char* value, size_t size);
  ::std::string* mutable_q();
  ::std::string* release_q();
  void set_allocated_q(::std::string* q);

  // int32 offset = 2;
  void clear_offset();
  static const int kOffsetFieldNumber = 2;
  ::google::protobuf::int32 offset() const;
  void set_offset(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:mtproto.TL_messages_searchGifs)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr q_;
  ::google::protobuf::int32 offset_;
  mutable int _cached_size_;
  friend struct protobuf_schema_2etl_2esync_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TL_messages_getSavedGifs : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtproto.TL_messages_getSavedGifs) */ {
 public:
  TL_messages_getSavedGifs();
  virtual ~TL_messages_getSavedGifs();

  TL_messages_getSavedGifs(const TL_messages_getSavedGifs& from);

  inline TL_messages_getSavedGifs& operator=(const TL_messages_getSavedGifs& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TL_messages_getSavedGifs(TL_messages_getSavedGifs&& from) noexcept
    : TL_messages_getSavedGifs() {
    *this = ::std::move(from);
  }

  inline TL_messages_getSavedGifs& operator=(TL_messages_getSavedGifs&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TL_messages_getSavedGifs& default_instance();

  static inline const TL_messages_getSavedGifs* internal_default_instance() {
    return reinterpret_cast<const TL_messages_getSavedGifs*>(
               &_TL_messages_getSavedGifs_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    150;

  void Swap(TL_messages_getSavedGifs* other);
  friend void swap(TL_messages_getSavedGifs& a, TL_messages_getSavedGifs& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TL_messages_getSavedGifs* New() const PROTOBUF_FINAL { return New(NULL); }

  TL_messages_getSavedGifs* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TL_messages_getSavedGifs* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 hash = 1;
  void clear_hash();
  static const int kHashFieldNumber = 1;
  ::google::protobuf::int32 hash() const;
  void set_hash(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:mtproto.TL_messages_getSavedGifs)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 hash_;
  mutable int _cached_size_;
  friend struct protobuf_schema_2etl_2esync_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TL_messages_saveGif : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtproto.TL_messages_saveGif) */ {
 public:
  TL_messages_saveGif();
  virtual ~TL_messages_saveGif();

  TL_messages_saveGif(const TL_messages_saveGif& from);

  inline TL_messages_saveGif& operator=(const TL_messages_saveGif& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TL_messages_saveGif(TL_messages_saveGif&& from) noexcept
    : TL_messages_saveGif() {
    *this = ::std::move(from);
  }

  inline TL_messages_saveGif& operator=(TL_messages_saveGif&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TL_messages_saveGif& default_instance();

  static inline const TL_messages_saveGif* internal_default_instance() {
    return reinterpret_cast<const TL_messages_saveGif*>(
               &_TL_messages_saveGif_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    151;

  void Swap(TL_messages_saveGif* other);
  friend void swap(TL_messages_saveGif& a, TL_messages_saveGif& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TL_messages_saveGif* New() const PROTOBUF_FINAL { return New(NULL); }

  TL_messages_saveGif* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TL_messages_saveGif* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .mtproto.InputDocument id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  const ::mtproto::InputDocument& id() const;
  ::mtproto::InputDocument* mutable_id();
  ::mtproto::InputDocument* release_id();
  void set_allocated_id(::mtproto::InputDocument* id);

  // .mtproto.Bool unsave = 2;
  bool has_unsave() const;
  void clear_unsave();
  static const int kUnsaveFieldNumber = 2;
  const ::mtproto::Bool& unsave() const;
  ::mtproto::Bool* mutable_unsave();
  ::mtproto::Bool* release_unsave();
  void set_allocated_unsave(::mtproto::Bool* unsave);

  // @@protoc_insertion_point(class_scope:mtproto.TL_messages_saveGif)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::mtproto::InputDocument* id_;
  ::mtproto::Bool* unsave_;
  mutable int _cached_size_;
  friend struct protobuf_schema_2etl_2esync_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TL_messages_getInlineBotResults : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtproto.TL_messages_getInlineBotResults) */ {
 public:
  TL_messages_getInlineBotResults();
  virtual ~TL_messages_getInlineBotResults();

  TL_messages_getInlineBotResults(const TL_messages_getInlineBotResults& from);

  inline TL_messages_getInlineBotResults& operator=(const TL_messages_getInlineBotResults& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TL_messages_getInlineBotResults(TL_messages_getInlineBotResults&& from) noexcept
    : TL_messages_getInlineBotResults() {
    *this = ::std::move(from);
  }

  inline TL_messages_getInlineBotResults& operator=(TL_messages_getInlineBotResults&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TL_messages_getInlineBotResults& default_instance();

  static inline const TL_messages_getInlineBotResults* internal_default_instance() {
    return reinterpret_cast<const TL_messages_getInlineBotResults*>(
               &_TL_messages_getInlineBotResults_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    152;

  void Swap(TL_messages_getInlineBotResults* other);
  friend void swap(TL_messages_getInlineBotResults& a, TL_messages_getInlineBotResults& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TL_messages_getInlineBotResults* New() const PROTOBUF_FINAL { return New(NULL); }

  TL_messages_getInlineBotResults* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TL_messages_getInlineBotResults* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string query = 5;
  void clear_query();
  static const int kQueryFieldNumber = 5;
  const ::std::string& query() const;
  void set_query(const ::std::string& value);
  #if LANG_CXX11
  void set_query(::std::string&& value);
  #endif
  void set_query(const char* value);
  void set_query(const char* value, size_t size);
  ::std::string* mutable_query();
  ::std::string* release_query();
  void set_allocated_query(::std::string* query);

  // string offset = 6;
  void clear_offset();
  static const int kOffsetFieldNumber = 6;
  const ::std::string& offset() const;
  void set_offset(const ::std::string& value);
  #if LANG_CXX11
  void set_offset(::std::string&& value);
  #endif
  void set_offset(const char* value);
  void set_offset(const char* value, size_t size);
  ::std::string* mutable_offset();
  ::std::string* release_offset();
  void set_allocated_offset(::std::string* offset);

  // .mtproto.InputUser bot = 2;
  bool has_bot() const;
  void clear_bot();
  static const int kBotFieldNumber = 2;
  const ::mtproto::InputUser& bot() const;
  ::mtproto::InputUser* mutable_bot();
  ::mtproto::InputUser* release_bot();
  void set_allocated_bot(::mtproto::InputUser* bot);

  // .mtproto.InputPeer peer = 3;
  bool has_peer() const;
  void clear_peer();
  static const int kPeerFieldNumber = 3;
  const ::mtproto::InputPeer& peer() const;
  ::mtproto::InputPeer* mutable_peer();
  ::mtproto::InputPeer* release_peer();
  void set_allocated_peer(::mtproto::InputPeer* peer);

  // .mtproto.InputGeoPoint geo_point = 4;
  bool has_geo_point() const;
  void clear_geo_point();
  static const int kGeoPointFieldNumber = 4;
  const ::mtproto::InputGeoPoint& geo_point() const;
  ::mtproto::InputGeoPoint* mutable_geo_point();
  ::mtproto::InputGeoPoint* release_geo_point();
  void set_allocated_geo_point(::mtproto::InputGeoPoint* geo_point);

  // @@protoc_insertion_point(class_scope:mtproto.TL_messages_getInlineBotResults)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr query_;
  ::google::protobuf::internal::ArenaStringPtr offset_;
  ::mtproto::InputUser* bot_;
  ::mtproto::InputPeer* peer_;
  ::mtproto::InputGeoPoint* geo_point_;
  mutable int _cached_size_;
  friend struct protobuf_schema_2etl_2esync_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TL_messages_setInlineBotResults : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtproto.TL_messages_setInlineBotResults) */ {
 public:
  TL_messages_setInlineBotResults();
  virtual ~TL_messages_setInlineBotResults();

  TL_messages_setInlineBotResults(const TL_messages_setInlineBotResults& from);

  inline TL_messages_setInlineBotResults& operator=(const TL_messages_setInlineBotResults& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TL_messages_setInlineBotResults(TL_messages_setInlineBotResults&& from) noexcept
    : TL_messages_setInlineBotResults() {
    *this = ::std::move(from);
  }

  inline TL_messages_setInlineBotResults& operator=(TL_messages_setInlineBotResults&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TL_messages_setInlineBotResults& default_instance();

  static inline const TL_messages_setInlineBotResults* internal_default_instance() {
    return reinterpret_cast<const TL_messages_setInlineBotResults*>(
               &_TL_messages_setInlineBotResults_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    153;

  void Swap(TL_messages_setInlineBotResults* other);
  friend void swap(TL_messages_setInlineBotResults& a, TL_messages_setInlineBotResults& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TL_messages_setInlineBotResults* New() const PROTOBUF_FINAL { return New(NULL); }

  TL_messages_setInlineBotResults* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TL_messages_setInlineBotResults* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .mtproto.InputBotInlineResult results = 5;
  int results_size() const;
  void clear_results();
  static const int kResultsFieldNumber = 5;
  const ::mtproto::InputBotInlineResult& results(int index) const;
  ::mtproto::InputBotInlineResult* mutable_results(int index);
  ::mtproto::InputBotInlineResult* add_results();
  ::google::protobuf::RepeatedPtrField< ::mtproto::InputBotInlineResult >*
      mutable_results();
  const ::google::protobuf::RepeatedPtrField< ::mtproto::InputBotInlineResult >&
      results() const;

  // string next_offset = 7;
  void clear_next_offset();
  static const int kNextOffsetFieldNumber = 7;
  const ::std::string& next_offset() const;
  void set_next_offset(const ::std::string& value);
  #if LANG_CXX11
  void set_next_offset(::std::string&& value);
  #endif
  void set_next_offset(const char* value);
  void set_next_offset(const char* value, size_t size);
  ::std::string* mutable_next_offset();
  ::std::string* release_next_offset();
  void set_allocated_next_offset(::std::string* next_offset);

  // .mtproto.InlineBotSwitchPM switch_pm = 8;
  bool has_switch_pm() const;
  void clear_switch_pm();
  static const int kSwitchPmFieldNumber = 8;
  const ::mtproto::InlineBotSwitchPM& switch_pm() const;
  ::mtproto::InlineBotSwitchPM* mutable_switch_pm();
  ::mtproto::InlineBotSwitchPM* release_switch_pm();
  void set_allocated_switch_pm(::mtproto::InlineBotSwitchPM* switch_pm);

  // bool gallery = 2;
  void clear_gallery();
  static const int kGalleryFieldNumber = 2;
  bool gallery() const;
  void set_gallery(bool value);

  // bool private = 3;
  void clear_private_();
  static const int kPrivateFieldNumber = 3;
  bool private_() const;
  void set_private_(bool value);

  // int32 cache_time = 6;
  void clear_cache_time();
  static const int kCacheTimeFieldNumber = 6;
  ::google::protobuf::int32 cache_time() const;
  void set_cache_time(::google::protobuf::int32 value);

  // int64 query_id = 4;
  void clear_query_id();
  static const int kQueryIdFieldNumber = 4;
  ::google::protobuf::int64 query_id() const;
  void set_query_id(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:mtproto.TL_messages_setInlineBotResults)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::mtproto::InputBotInlineResult > results_;
  ::google::protobuf::internal::ArenaStringPtr next_offset_;
  ::mtproto::InlineBotSwitchPM* switch_pm_;
  bool gallery_;
  bool private__;
  ::google::protobuf::int32 cache_time_;
  ::google::protobuf::int64 query_id_;
  mutable int _cached_size_;
  friend struct protobuf_schema_2etl_2esync_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TL_messages_sendInlineBotResult : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtproto.TL_messages_sendInlineBotResult) */ {
 public:
  TL_messages_sendInlineBotResult();
  virtual ~TL_messages_sendInlineBotResult();

  TL_messages_sendInlineBotResult(const TL_messages_sendInlineBotResult& from);

  inline TL_messages_sendInlineBotResult& operator=(const TL_messages_sendInlineBotResult& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TL_messages_sendInlineBotResult(TL_messages_sendInlineBotResult&& from) noexcept
    : TL_messages_sendInlineBotResult() {
    *this = ::std::move(from);
  }

  inline TL_messages_sendInlineBotResult& operator=(TL_messages_sendInlineBotResult&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TL_messages_sendInlineBotResult& default_instance();

  static inline const TL_messages_sendInlineBotResult* internal_default_instance() {
    return reinterpret_cast<const TL_messages_sendInlineBotResult*>(
               &_TL_messages_sendInlineBotResult_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    154;

  void Swap(TL_messages_sendInlineBotResult* other);
  friend void swap(TL_messages_sendInlineBotResult& a, TL_messages_sendInlineBotResult& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TL_messages_sendInlineBotResult* New() const PROTOBUF_FINAL { return New(NULL); }

  TL_messages_sendInlineBotResult* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TL_messages_sendInlineBotResult* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string id = 9;
  void clear_id();
  static const int kIdFieldNumber = 9;
  const ::std::string& id() const;
  void set_id(const ::std::string& value);
  #if LANG_CXX11
  void set_id(::std::string&& value);
  #endif
  void set_id(const char* value);
  void set_id(const char* value, size_t size);
  ::std::string* mutable_id();
  ::std::string* release_id();
  void set_allocated_id(::std::string* id);

  // .mtproto.InputPeer peer = 5;
  bool has_peer() const;
  void clear_peer();
  static const int kPeerFieldNumber = 5;
  const ::mtproto::InputPeer& peer() const;
  ::mtproto::InputPeer* mutable_peer();
  ::mtproto::InputPeer* release_peer();
  void set_allocated_peer(::mtproto::InputPeer* peer);

  // bool silent = 2;
  void clear_silent();
  static const int kSilentFieldNumber = 2;
  bool silent() const;
  void set_silent(bool value);

  // bool background = 3;
  void clear_background();
  static const int kBackgroundFieldNumber = 3;
  bool background() const;
  void set_background(bool value);

  // bool clear_draft = 4;
  void clear_clear_draft();
  static const int kClearDraftFieldNumber = 4;
  bool clear_draft() const;
  void set_clear_draft(bool value);

  // int32 reply_to_msg_id = 6;
  void clear_reply_to_msg_id();
  static const int kReplyToMsgIdFieldNumber = 6;
  ::google::protobuf::int32 reply_to_msg_id() const;
  void set_reply_to_msg_id(::google::protobuf::int32 value);

  // int64 random_id = 7;
  void clear_random_id();
  static const int kRandomIdFieldNumber = 7;
  ::google::protobuf::int64 random_id() const;
  void set_random_id(::google::protobuf::int64 value);

  // int64 query_id = 8;
  void clear_query_id();
  static const int kQueryIdFieldNumber = 8;
  ::google::protobuf::int64 query_id() const;
  void set_query_id(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:mtproto.TL_messages_sendInlineBotResult)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr id_;
  ::mtproto::InputPeer* peer_;
  bool silent_;
  bool background_;
  bool clear_draft_;
  ::google::protobuf::int32 reply_to_msg_id_;
  ::google::protobuf::int64 random_id_;
  ::google::protobuf::int64 query_id_;
  mutable int _cached_size_;
  friend struct protobuf_schema_2etl_2esync_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TL_messages_getMessageEditData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtproto.TL_messages_getMessageEditData) */ {
 public:
  TL_messages_getMessageEditData();
  virtual ~TL_messages_getMessageEditData();

  TL_messages_getMessageEditData(const TL_messages_getMessageEditData& from);

  inline TL_messages_getMessageEditData& operator=(const TL_messages_getMessageEditData& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TL_messages_getMessageEditData(TL_messages_getMessageEditData&& from) noexcept
    : TL_messages_getMessageEditData() {
    *this = ::std::move(from);
  }

  inline TL_messages_getMessageEditData& operator=(TL_messages_getMessageEditData&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TL_messages_getMessageEditData& default_instance();

  static inline const TL_messages_getMessageEditData* internal_default_instance() {
    return reinterpret_cast<const TL_messages_getMessageEditData*>(
               &_TL_messages_getMessageEditData_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    155;

  void Swap(TL_messages_getMessageEditData* other);
  friend void swap(TL_messages_getMessageEditData& a, TL_messages_getMessageEditData& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TL_messages_getMessageEditData* New() const PROTOBUF_FINAL { return New(NULL); }

  TL_messages_getMessageEditData* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TL_messages_getMessageEditData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .mtproto.InputPeer peer = 1;
  bool has_peer() const;
  void clear_peer();
  static const int kPeerFieldNumber = 1;
  const ::mtproto::InputPeer& peer() const;
  ::mtproto::InputPeer* mutable_peer();
  ::mtproto::InputPeer* release_peer();
  void set_allocated_peer(::mtproto::InputPeer* peer);

  // int32 id = 2;
  void clear_id();
  static const int kIdFieldNumber = 2;
  ::google::protobuf::int32 id() const;
  void set_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:mtproto.TL_messages_getMessageEditData)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::mtproto::InputPeer* peer_;
  ::google::protobuf::int32 id_;
  mutable int _cached_size_;
  friend struct protobuf_schema_2etl_2esync_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TL_messages_editMessage : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtproto.TL_messages_editMessage) */ {
 public:
  TL_messages_editMessage();
  virtual ~TL_messages_editMessage();

  TL_messages_editMessage(const TL_messages_editMessage& from);

  inline TL_messages_editMessage& operator=(const TL_messages_editMessage& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TL_messages_editMessage(TL_messages_editMessage&& from) noexcept
    : TL_messages_editMessage() {
    *this = ::std::move(from);
  }

  inline TL_messages_editMessage& operator=(TL_messages_editMessage&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TL_messages_editMessage& default_instance();

  static inline const TL_messages_editMessage* internal_default_instance() {
    return reinterpret_cast<const TL_messages_editMessage*>(
               &_TL_messages_editMessage_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    156;

  void Swap(TL_messages_editMessage* other);
  friend void swap(TL_messages_editMessage& a, TL_messages_editMessage& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TL_messages_editMessage* New() const PROTOBUF_FINAL { return New(NULL); }

  TL_messages_editMessage* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TL_messages_editMessage* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .mtproto.MessageEntity entities = 9;
  int entities_size() const;
  void clear_entities();
  static const int kEntitiesFieldNumber = 9;
  const ::mtproto::MessageEntity& entities(int index) const;
  ::mtproto::MessageEntity* mutable_entities(int index);
  ::mtproto::MessageEntity* add_entities();
  ::google::protobuf::RepeatedPtrField< ::mtproto::MessageEntity >*
      mutable_entities();
  const ::google::protobuf::RepeatedPtrField< ::mtproto::MessageEntity >&
      entities() const;

  // string message = 6;
  void clear_message();
  static const int kMessageFieldNumber = 6;
  const ::std::string& message() const;
  void set_message(const ::std::string& value);
  #if LANG_CXX11
  void set_message(::std::string&& value);
  #endif
  void set_message(const char* value);
  void set_message(const char* value, size_t size);
  ::std::string* mutable_message();
  ::std::string* release_message();
  void set_allocated_message(::std::string* message);

  // .mtproto.InputPeer peer = 4;
  bool has_peer() const;
  void clear_peer();
  static const int kPeerFieldNumber = 4;
  const ::mtproto::InputPeer& peer() const;
  ::mtproto::InputPeer* mutable_peer();
  ::mtproto::InputPeer* release_peer();
  void set_allocated_peer(::mtproto::InputPeer* peer);

  // .mtproto.InputMedia media = 7;
  bool has_media() const;
  void clear_media();
  static const int kMediaFieldNumber = 7;
  const ::mtproto::InputMedia& media() const;
  ::mtproto::InputMedia* mutable_media();
  ::mtproto::InputMedia* release_media();
  void set_allocated_media(::mtproto::InputMedia* media);

  // .mtproto.ReplyMarkup reply_markup = 8;
  bool has_reply_markup() const;
  void clear_reply_markup();
  static const int kReplyMarkupFieldNumber = 8;
  const ::mtproto::ReplyMarkup& reply_markup() const;
  ::mtproto::ReplyMarkup* mutable_reply_markup();
  ::mtproto::ReplyMarkup* release_reply_markup();
  void set_allocated_reply_markup(::mtproto::ReplyMarkup* reply_markup);

  // .mtproto.InputGeoPoint geo_point = 10;
  bool has_geo_point() const;
  void clear_geo_point();
  static const int kGeoPointFieldNumber = 10;
  const ::mtproto::InputGeoPoint& geo_point() const;
  ::mtproto::InputGeoPoint* mutable_geo_point();
  ::mtproto::InputGeoPoint* release_geo_point();
  void set_allocated_geo_point(::mtproto::InputGeoPoint* geo_point);

  // bool no_webpage = 2;
  void clear_no_webpage();
  static const int kNoWebpageFieldNumber = 2;
  bool no_webpage() const;
  void set_no_webpage(bool value);

  // bool stop_geo_live = 3;
  void clear_stop_geo_live();
  static const int kStopGeoLiveFieldNumber = 3;
  bool stop_geo_live() const;
  void set_stop_geo_live(bool value);

  // int32 id = 5;
  void clear_id();
  static const int kIdFieldNumber = 5;
  ::google::protobuf::int32 id() const;
  void set_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:mtproto.TL_messages_editMessage)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::mtproto::MessageEntity > entities_;
  ::google::protobuf::internal::ArenaStringPtr message_;
  ::mtproto::InputPeer* peer_;
  ::mtproto::InputMedia* media_;
  ::mtproto::ReplyMarkup* reply_markup_;
  ::mtproto::InputGeoPoint* geo_point_;
  bool no_webpage_;
  bool stop_geo_live_;
  ::google::protobuf::int32 id_;
  mutable int _cached_size_;
  friend struct protobuf_schema_2etl_2esync_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TL_messages_editInlineBotMessage : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtproto.TL_messages_editInlineBotMessage) */ {
 public:
  TL_messages_editInlineBotMessage();
  virtual ~TL_messages_editInlineBotMessage();

  TL_messages_editInlineBotMessage(const TL_messages_editInlineBotMessage& from);

  inline TL_messages_editInlineBotMessage& operator=(const TL_messages_editInlineBotMessage& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TL_messages_editInlineBotMessage(TL_messages_editInlineBotMessage&& from) noexcept
    : TL_messages_editInlineBotMessage() {
    *this = ::std::move(from);
  }

  inline TL_messages_editInlineBotMessage& operator=(TL_messages_editInlineBotMessage&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TL_messages_editInlineBotMessage& default_instance();

  static inline const TL_messages_editInlineBotMessage* internal_default_instance() {
    return reinterpret_cast<const TL_messages_editInlineBotMessage*>(
               &_TL_messages_editInlineBotMessage_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    157;

  void Swap(TL_messages_editInlineBotMessage* other);
  friend void swap(TL_messages_editInlineBotMessage& a, TL_messages_editInlineBotMessage& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TL_messages_editInlineBotMessage* New() const PROTOBUF_FINAL { return New(NULL); }

  TL_messages_editInlineBotMessage* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TL_messages_editInlineBotMessage* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .mtproto.MessageEntity entities = 8;
  int entities_size() const;
  void clear_entities();
  static const int kEntitiesFieldNumber = 8;
  const ::mtproto::MessageEntity& entities(int index) const;
  ::mtproto::MessageEntity* mutable_entities(int index);
  ::mtproto::MessageEntity* add_entities();
  ::google::protobuf::RepeatedPtrField< ::mtproto::MessageEntity >*
      mutable_entities();
  const ::google::protobuf::RepeatedPtrField< ::mtproto::MessageEntity >&
      entities() const;

  // string message = 5;
  void clear_message();
  static const int kMessageFieldNumber = 5;
  const ::std::string& message() const;
  void set_message(const ::std::string& value);
  #if LANG_CXX11
  void set_message(::std::string&& value);
  #endif
  void set_message(const char* value);
  void set_message(const char* value, size_t size);
  ::std::string* mutable_message();
  ::std::string* release_message();
  void set_allocated_message(::std::string* message);

  // .mtproto.InputBotInlineMessageID id = 4;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 4;
  const ::mtproto::InputBotInlineMessageID& id() const;
  ::mtproto::InputBotInlineMessageID* mutable_id();
  ::mtproto::InputBotInlineMessageID* release_id();
  void set_allocated_id(::mtproto::InputBotInlineMessageID* id);

  // .mtproto.InputMedia media = 6;
  bool has_media() const;
  void clear_media();
  static const int kMediaFieldNumber = 6;
  const ::mtproto::InputMedia& media() const;
  ::mtproto::InputMedia* mutable_media();
  ::mtproto::InputMedia* release_media();
  void set_allocated_media(::mtproto::InputMedia* media);

  // .mtproto.ReplyMarkup reply_markup = 7;
  bool has_reply_markup() const;
  void clear_reply_markup();
  static const int kReplyMarkupFieldNumber = 7;
  const ::mtproto::ReplyMarkup& reply_markup() const;
  ::mtproto::ReplyMarkup* mutable_reply_markup();
  ::mtproto::ReplyMarkup* release_reply_markup();
  void set_allocated_reply_markup(::mtproto::ReplyMarkup* reply_markup);

  // .mtproto.InputGeoPoint geo_point = 9;
  bool has_geo_point() const;
  void clear_geo_point();
  static const int kGeoPointFieldNumber = 9;
  const ::mtproto::InputGeoPoint& geo_point() const;
  ::mtproto::InputGeoPoint* mutable_geo_point();
  ::mtproto::InputGeoPoint* release_geo_point();
  void set_allocated_geo_point(::mtproto::InputGeoPoint* geo_point);

  // bool no_webpage = 2;
  void clear_no_webpage();
  static const int kNoWebpageFieldNumber = 2;
  bool no_webpage() const;
  void set_no_webpage(bool value);

  // bool stop_geo_live = 3;
  void clear_stop_geo_live();
  static const int kStopGeoLiveFieldNumber = 3;
  bool stop_geo_live() const;
  void set_stop_geo_live(bool value);

  // @@protoc_insertion_point(class_scope:mtproto.TL_messages_editInlineBotMessage)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::mtproto::MessageEntity > entities_;
  ::google::protobuf::internal::ArenaStringPtr message_;
  ::mtproto::InputBotInlineMessageID* id_;
  ::mtproto::InputMedia* media_;
  ::mtproto::ReplyMarkup* reply_markup_;
  ::mtproto::InputGeoPoint* geo_point_;
  bool no_webpage_;
  bool stop_geo_live_;
  mutable int _cached_size_;
  friend struct protobuf_schema_2etl_2esync_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TL_messages_getBotCallbackAnswer : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtproto.TL_messages_getBotCallbackAnswer) */ {
 public:
  TL_messages_getBotCallbackAnswer();
  virtual ~TL_messages_getBotCallbackAnswer();

  TL_messages_getBotCallbackAnswer(const TL_messages_getBotCallbackAnswer& from);

  inline TL_messages_getBotCallbackAnswer& operator=(const TL_messages_getBotCallbackAnswer& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TL_messages_getBotCallbackAnswer(TL_messages_getBotCallbackAnswer&& from) noexcept
    : TL_messages_getBotCallbackAnswer() {
    *this = ::std::move(from);
  }

  inline TL_messages_getBotCallbackAnswer& operator=(TL_messages_getBotCallbackAnswer&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TL_messages_getBotCallbackAnswer& default_instance();

  static inline const TL_messages_getBotCallbackAnswer* internal_default_instance() {
    return reinterpret_cast<const TL_messages_getBotCallbackAnswer*>(
               &_TL_messages_getBotCallbackAnswer_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    158;

  void Swap(TL_messages_getBotCallbackAnswer* other);
  friend void swap(TL_messages_getBotCallbackAnswer& a, TL_messages_getBotCallbackAnswer& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TL_messages_getBotCallbackAnswer* New() const PROTOBUF_FINAL { return New(NULL); }

  TL_messages_getBotCallbackAnswer* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TL_messages_getBotCallbackAnswer* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes data = 5;
  void clear_data();
  static const int kDataFieldNumber = 5;
  const ::std::string& data() const;
  void set_data(const ::std::string& value);
  #if LANG_CXX11
  void set_data(::std::string&& value);
  #endif
  void set_data(const char* value);
  void set_data(const void* value, size_t size);
  ::std::string* mutable_data();
  ::std::string* release_data();
  void set_allocated_data(::std::string* data);

  // .mtproto.InputPeer peer = 3;
  bool has_peer() const;
  void clear_peer();
  static const int kPeerFieldNumber = 3;
  const ::mtproto::InputPeer& peer() const;
  ::mtproto::InputPeer* mutable_peer();
  ::mtproto::InputPeer* release_peer();
  void set_allocated_peer(::mtproto::InputPeer* peer);

  // bool game = 2;
  void clear_game();
  static const int kGameFieldNumber = 2;
  bool game() const;
  void set_game(bool value);

  // int32 msg_id = 4;
  void clear_msg_id();
  static const int kMsgIdFieldNumber = 4;
  ::google::protobuf::int32 msg_id() const;
  void set_msg_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:mtproto.TL_messages_getBotCallbackAnswer)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr data_;
  ::mtproto::InputPeer* peer_;
  bool game_;
  ::google::protobuf::int32 msg_id_;
  mutable int _cached_size_;
  friend struct protobuf_schema_2etl_2esync_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TL_messages_setBotCallbackAnswer : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtproto.TL_messages_setBotCallbackAnswer) */ {
 public:
  TL_messages_setBotCallbackAnswer();
  virtual ~TL_messages_setBotCallbackAnswer();

  TL_messages_setBotCallbackAnswer(const TL_messages_setBotCallbackAnswer& from);

  inline TL_messages_setBotCallbackAnswer& operator=(const TL_messages_setBotCallbackAnswer& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TL_messages_setBotCallbackAnswer(TL_messages_setBotCallbackAnswer&& from) noexcept
    : TL_messages_setBotCallbackAnswer() {
    *this = ::std::move(from);
  }

  inline TL_messages_setBotCallbackAnswer& operator=(TL_messages_setBotCallbackAnswer&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TL_messages_setBotCallbackAnswer& default_instance();

  static inline const TL_messages_setBotCallbackAnswer* internal_default_instance() {
    return reinterpret_cast<const TL_messages_setBotCallbackAnswer*>(
               &_TL_messages_setBotCallbackAnswer_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    159;

  void Swap(TL_messages_setBotCallbackAnswer* other);
  friend void swap(TL_messages_setBotCallbackAnswer& a, TL_messages_setBotCallbackAnswer& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TL_messages_setBotCallbackAnswer* New() const PROTOBUF_FINAL { return New(NULL); }

  TL_messages_setBotCallbackAnswer* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TL_messages_setBotCallbackAnswer* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string message = 4;
  void clear_message();
  static const int kMessageFieldNumber = 4;
  const ::std::string& message() const;
  void set_message(const ::std::string& value);
  #if LANG_CXX11
  void set_message(::std::string&& value);
  #endif
  void set_message(const char* value);
  void set_message(const char* value, size_t size);
  ::std::string* mutable_message();
  ::std::string* release_message();
  void set_allocated_message(::std::string* message);

  // string url = 5;
  void clear_url();
  static const int kUrlFieldNumber = 5;
  const ::std::string& url() const;
  void set_url(const ::std::string& value);
  #if LANG_CXX11
  void set_url(::std::string&& value);
  #endif
  void set_url(const char* value);
  void set_url(const char* value, size_t size);
  ::std::string* mutable_url();
  ::std::string* release_url();
  void set_allocated_url(::std::string* url);

  // int64 query_id = 3;
  void clear_query_id();
  static const int kQueryIdFieldNumber = 3;
  ::google::protobuf::int64 query_id() const;
  void set_query_id(::google::protobuf::int64 value);

  // bool alert = 2;
  void clear_alert();
  static const int kAlertFieldNumber = 2;
  bool alert() const;
  void set_alert(bool value);

  // int32 cache_time = 6;
  void clear_cache_time();
  static const int kCacheTimeFieldNumber = 6;
  ::google::protobuf::int32 cache_time() const;
  void set_cache_time(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:mtproto.TL_messages_setBotCallbackAnswer)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr message_;
  ::google::protobuf::internal::ArenaStringPtr url_;
  ::google::protobuf::int64 query_id_;
  bool alert_;
  ::google::protobuf::int32 cache_time_;
  mutable int _cached_size_;
  friend struct protobuf_schema_2etl_2esync_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TL_messages_getPeerDialogs : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtproto.TL_messages_getPeerDialogs) */ {
 public:
  TL_messages_getPeerDialogs();
  virtual ~TL_messages_getPeerDialogs();

  TL_messages_getPeerDialogs(const TL_messages_getPeerDialogs& from);

  inline TL_messages_getPeerDialogs& operator=(const TL_messages_getPeerDialogs& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TL_messages_getPeerDialogs(TL_messages_getPeerDialogs&& from) noexcept
    : TL_messages_getPeerDialogs() {
    *this = ::std::move(from);
  }

  inline TL_messages_getPeerDialogs& operator=(TL_messages_getPeerDialogs&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TL_messages_getPeerDialogs& default_instance();

  static inline const TL_messages_getPeerDialogs* internal_default_instance() {
    return reinterpret_cast<const TL_messages_getPeerDialogs*>(
               &_TL_messages_getPeerDialogs_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    160;

  void Swap(TL_messages_getPeerDialogs* other);
  friend void swap(TL_messages_getPeerDialogs& a, TL_messages_getPeerDialogs& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TL_messages_getPeerDialogs* New() const PROTOBUF_FINAL { return New(NULL); }

  TL_messages_getPeerDialogs* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TL_messages_getPeerDialogs* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .mtproto.InputDialogPeer peers = 1;
  int peers_size() const;
  void clear_peers();
  static const int kPeersFieldNumber = 1;
  const ::mtproto::InputDialogPeer& peers(int index) const;
  ::mtproto::InputDialogPeer* mutable_peers(int index);
  ::mtproto::InputDialogPeer* add_peers();
  ::google::protobuf::RepeatedPtrField< ::mtproto::InputDialogPeer >*
      mutable_peers();
  const ::google::protobuf::RepeatedPtrField< ::mtproto::InputDialogPeer >&
      peers() const;

  // @@protoc_insertion_point(class_scope:mtproto.TL_messages_getPeerDialogs)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::mtproto::InputDialogPeer > peers_;
  mutable int _cached_size_;
  friend struct protobuf_schema_2etl_2esync_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TL_messages_saveDraft : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtproto.TL_messages_saveDraft) */ {
 public:
  TL_messages_saveDraft();
  virtual ~TL_messages_saveDraft();

  TL_messages_saveDraft(const TL_messages_saveDraft& from);

  inline TL_messages_saveDraft& operator=(const TL_messages_saveDraft& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TL_messages_saveDraft(TL_messages_saveDraft&& from) noexcept
    : TL_messages_saveDraft() {
    *this = ::std::move(from);
  }

  inline TL_messages_saveDraft& operator=(TL_messages_saveDraft&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TL_messages_saveDraft& default_instance();

  static inline const TL_messages_saveDraft* internal_default_instance() {
    return reinterpret_cast<const TL_messages_saveDraft*>(
               &_TL_messages_saveDraft_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    161;

  void Swap(TL_messages_saveDraft* other);
  friend void swap(TL_messages_saveDraft& a, TL_messages_saveDraft& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TL_messages_saveDraft* New() const PROTOBUF_FINAL { return New(NULL); }

  TL_messages_saveDraft* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TL_messages_saveDraft* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .mtproto.MessageEntity entities = 6;
  int entities_size() const;
  void clear_entities();
  static const int kEntitiesFieldNumber = 6;
  const ::mtproto::MessageEntity& entities(int index) const;
  ::mtproto::MessageEntity* mutable_entities(int index);
  ::mtproto::MessageEntity* add_entities();
  ::google::protobuf::RepeatedPtrField< ::mtproto::MessageEntity >*
      mutable_entities();
  const ::google::protobuf::RepeatedPtrField< ::mtproto::MessageEntity >&
      entities() const;

  // string message = 5;
  void clear_message();
  static const int kMessageFieldNumber = 5;
  const ::std::string& message() const;
  void set_message(const ::std::string& value);
  #if LANG_CXX11
  void set_message(::std::string&& value);
  #endif
  void set_message(const char* value);
  void set_message(const char* value, size_t size);
  ::std::string* mutable_message();
  ::std::string* release_message();
  void set_allocated_message(::std::string* message);

  // .mtproto.InputPeer peer = 4;
  bool has_peer() const;
  void clear_peer();
  static const int kPeerFieldNumber = 4;
  const ::mtproto::InputPeer& peer() const;
  ::mtproto::InputPeer* mutable_peer();
  ::mtproto::InputPeer* release_peer();
  void set_allocated_peer(::mtproto::InputPeer* peer);

  // bool no_webpage = 2;
  void clear_no_webpage();
  static const int kNoWebpageFieldNumber = 2;
  bool no_webpage() const;
  void set_no_webpage(bool value);

  // int32 reply_to_msg_id = 3;
  void clear_reply_to_msg_id();
  static const int kReplyToMsgIdFieldNumber = 3;
  ::google::protobuf::int32 reply_to_msg_id() const;
  void set_reply_to_msg_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:mtproto.TL_messages_saveDraft)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::mtproto::MessageEntity > entities_;
  ::google::protobuf::internal::ArenaStringPtr message_;
  ::mtproto::InputPeer* peer_;
  bool no_webpage_;
  ::google::protobuf::int32 reply_to_msg_id_;
  mutable int _cached_size_;
  friend struct protobuf_schema_2etl_2esync_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TL_messages_getAllDrafts : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtproto.TL_messages_getAllDrafts) */ {
 public:
  TL_messages_getAllDrafts();
  virtual ~TL_messages_getAllDrafts();

  TL_messages_getAllDrafts(const TL_messages_getAllDrafts& from);

  inline TL_messages_getAllDrafts& operator=(const TL_messages_getAllDrafts& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TL_messages_getAllDrafts(TL_messages_getAllDrafts&& from) noexcept
    : TL_messages_getAllDrafts() {
    *this = ::std::move(from);
  }

  inline TL_messages_getAllDrafts& operator=(TL_messages_getAllDrafts&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TL_messages_getAllDrafts& default_instance();

  static inline const TL_messages_getAllDrafts* internal_default_instance() {
    return reinterpret_cast<const TL_messages_getAllDrafts*>(
               &_TL_messages_getAllDrafts_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    162;

  void Swap(TL_messages_getAllDrafts* other);
  friend void swap(TL_messages_getAllDrafts& a, TL_messages_getAllDrafts& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TL_messages_getAllDrafts* New() const PROTOBUF_FINAL { return New(NULL); }

  TL_messages_getAllDrafts* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TL_messages_getAllDrafts* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:mtproto.TL_messages_getAllDrafts)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable int _cached_size_;
  friend struct protobuf_schema_2etl_2esync_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TL_messages_getFeaturedStickers : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtproto.TL_messages_getFeaturedStickers) */ {
 public:
  TL_messages_getFeaturedStickers();
  virtual ~TL_messages_getFeaturedStickers();

  TL_messages_getFeaturedStickers(const TL_messages_getFeaturedStickers& from);

  inline TL_messages_getFeaturedStickers& operator=(const TL_messages_getFeaturedStickers& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TL_messages_getFeaturedStickers(TL_messages_getFeaturedStickers&& from) noexcept
    : TL_messages_getFeaturedStickers() {
    *this = ::std::move(from);
  }

  inline TL_messages_getFeaturedStickers& operator=(TL_messages_getFeaturedStickers&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TL_messages_getFeaturedStickers& default_instance();

  static inline const TL_messages_getFeaturedStickers* internal_default_instance() {
    return reinterpret_cast<const TL_messages_getFeaturedStickers*>(
               &_TL_messages_getFeaturedStickers_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    163;

  void Swap(TL_messages_getFeaturedStickers* other);
  friend void swap(TL_messages_getFeaturedStickers& a, TL_messages_getFeaturedStickers& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TL_messages_getFeaturedStickers* New() const PROTOBUF_FINAL { return New(NULL); }

  TL_messages_getFeaturedStickers* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TL_messages_getFeaturedStickers* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 hash = 1;
  void clear_hash();
  static const int kHashFieldNumber = 1;
  ::google::protobuf::int32 hash() const;
  void set_hash(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:mtproto.TL_messages_getFeaturedStickers)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 hash_;
  mutable int _cached_size_;
  friend struct protobuf_schema_2etl_2esync_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TL_messages_readFeaturedStickers : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtproto.TL_messages_readFeaturedStickers) */ {
 public:
  TL_messages_readFeaturedStickers();
  virtual ~TL_messages_readFeaturedStickers();

  TL_messages_readFeaturedStickers(const TL_messages_readFeaturedStickers& from);

  inline TL_messages_readFeaturedStickers& operator=(const TL_messages_readFeaturedStickers& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TL_messages_readFeaturedStickers(TL_messages_readFeaturedStickers&& from) noexcept
    : TL_messages_readFeaturedStickers() {
    *this = ::std::move(from);
  }

  inline TL_messages_readFeaturedStickers& operator=(TL_messages_readFeaturedStickers&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TL_messages_readFeaturedStickers& default_instance();

  static inline const TL_messages_readFeaturedStickers* internal_default_instance() {
    return reinterpret_cast<const TL_messages_readFeaturedStickers*>(
               &_TL_messages_readFeaturedStickers_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    164;

  void Swap(TL_messages_readFeaturedStickers* other);
  friend void swap(TL_messages_readFeaturedStickers& a, TL_messages_readFeaturedStickers& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TL_messages_readFeaturedStickers* New() const PROTOBUF_FINAL { return New(NULL); }

  TL_messages_readFeaturedStickers* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TL_messages_readFeaturedStickers* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int64 id = 1;
  int id_size() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::int64 id(int index) const;
  void set_id(int index, ::google::protobuf::int64 value);
  void add_id(::google::protobuf::int64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      id() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_id();

  // @@protoc_insertion_point(class_scope:mtproto.TL_messages_readFeaturedStickers)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > id_;
  mutable int _cached_size_;
  friend struct protobuf_schema_2etl_2esync_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TL_messages_getRecentStickers : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtproto.TL_messages_getRecentStickers) */ {
 public:
  TL_messages_getRecentStickers();
  virtual ~TL_messages_getRecentStickers();

  TL_messages_getRecentStickers(const TL_messages_getRecentStickers& from);

  inline TL_messages_getRecentStickers& operator=(const TL_messages_getRecentStickers& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TL_messages_getRecentStickers(TL_messages_getRecentStickers&& from) noexcept
    : TL_messages_getRecentStickers() {
    *this = ::std::move(from);
  }

  inline TL_messages_getRecentStickers& operator=(TL_messages_getRecentStickers&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TL_messages_getRecentStickers& default_instance();

  static inline const TL_messages_getRecentStickers* internal_default_instance() {
    return reinterpret_cast<const TL_messages_getRecentStickers*>(
               &_TL_messages_getRecentStickers_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    165;

  void Swap(TL_messages_getRecentStickers* other);
  friend void swap(TL_messages_getRecentStickers& a, TL_messages_getRecentStickers& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TL_messages_getRecentStickers* New() const PROTOBUF_FINAL { return New(NULL); }

  TL_messages_getRecentStickers* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TL_messages_getRecentStickers* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bool attached = 2;
  void clear_attached();
  static const int kAttachedFieldNumber = 2;
  bool attached() const;
  void set_attached(bool value);

  // int32 hash = 3;
  void clear_hash();
  static const int kHashFieldNumber = 3;
  ::google::protobuf::int32 hash() const;
  void set_hash(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:mtproto.TL_messages_getRecentStickers)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool attached_;
  ::google::protobuf::int32 hash_;
  mutable int _cached_size_;
  friend struct protobuf_schema_2etl_2esync_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TL_messages_saveRecentSticker : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtproto.TL_messages_saveRecentSticker) */ {
 public:
  TL_messages_saveRecentSticker();
  virtual ~TL_messages_saveRecentSticker();

  TL_messages_saveRecentSticker(const TL_messages_saveRecentSticker& from);

  inline TL_messages_saveRecentSticker& operator=(const TL_messages_saveRecentSticker& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TL_messages_saveRecentSticker(TL_messages_saveRecentSticker&& from) noexcept
    : TL_messages_saveRecentSticker() {
    *this = ::std::move(from);
  }

  inline TL_messages_saveRecentSticker& operator=(TL_messages_saveRecentSticker&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TL_messages_saveRecentSticker& default_instance();

  static inline const TL_messages_saveRecentSticker* internal_default_instance() {
    return reinterpret_cast<const TL_messages_saveRecentSticker*>(
               &_TL_messages_saveRecentSticker_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    166;

  void Swap(TL_messages_saveRecentSticker* other);
  friend void swap(TL_messages_saveRecentSticker& a, TL_messages_saveRecentSticker& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TL_messages_saveRecentSticker* New() const PROTOBUF_FINAL { return New(NULL); }

  TL_messages_saveRecentSticker* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TL_messages_saveRecentSticker* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .mtproto.InputDocument id = 3;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 3;
  const ::mtproto::InputDocument& id() const;
  ::mtproto::InputDocument* mutable_id();
  ::mtproto::InputDocument* release_id();
  void set_allocated_id(::mtproto::InputDocument* id);

  // .mtproto.Bool unsave = 4;
  bool has_unsave() const;
  void clear_unsave();
  static const int kUnsaveFieldNumber = 4;
  const ::mtproto::Bool& unsave() const;
  ::mtproto::Bool* mutable_unsave();
  ::mtproto::Bool* release_unsave();
  void set_allocated_unsave(::mtproto::Bool* unsave);

  // bool attached = 2;
  void clear_attached();
  static const int kAttachedFieldNumber = 2;
  bool attached() const;
  void set_attached(bool value);

  // @@protoc_insertion_point(class_scope:mtproto.TL_messages_saveRecentSticker)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::mtproto::InputDocument* id_;
  ::mtproto::Bool* unsave_;
  bool attached_;
  mutable int _cached_size_;
  friend struct protobuf_schema_2etl_2esync_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TL_messages_clearRecentStickers : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtproto.TL_messages_clearRecentStickers) */ {
 public:
  TL_messages_clearRecentStickers();
  virtual ~TL_messages_clearRecentStickers();

  TL_messages_clearRecentStickers(const TL_messages_clearRecentStickers& from);

  inline TL_messages_clearRecentStickers& operator=(const TL_messages_clearRecentStickers& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TL_messages_clearRecentStickers(TL_messages_clearRecentStickers&& from) noexcept
    : TL_messages_clearRecentStickers() {
    *this = ::std::move(from);
  }

  inline TL_messages_clearRecentStickers& operator=(TL_messages_clearRecentStickers&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TL_messages_clearRecentStickers& default_instance();

  static inline const TL_messages_clearRecentStickers* internal_default_instance() {
    return reinterpret_cast<const TL_messages_clearRecentStickers*>(
               &_TL_messages_clearRecentStickers_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    167;

  void Swap(TL_messages_clearRecentStickers* other);
  friend void swap(TL_messages_clearRecentStickers& a, TL_messages_clearRecentStickers& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TL_messages_clearRecentStickers* New() const PROTOBUF_FINAL { return New(NULL); }

  TL_messages_clearRecentStickers* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TL_messages_clearRecentStickers* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bool attached = 2;
  void clear_attached();
  static const int kAttachedFieldNumber = 2;
  bool attached() const;
  void set_attached(bool value);

  // @@protoc_insertion_point(class_scope:mtproto.TL_messages_clearRecentStickers)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool attached_;
  mutable int _cached_size_;
  friend struct protobuf_schema_2etl_2esync_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TL_messages_getArchivedStickers : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtproto.TL_messages_getArchivedStickers) */ {
 public:
  TL_messages_getArchivedStickers();
  virtual ~TL_messages_getArchivedStickers();

  TL_messages_getArchivedStickers(const TL_messages_getArchivedStickers& from);

  inline TL_messages_getArchivedStickers& operator=(const TL_messages_getArchivedStickers& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TL_messages_getArchivedStickers(TL_messages_getArchivedStickers&& from) noexcept
    : TL_messages_getArchivedStickers() {
    *this = ::std::move(from);
  }

  inline TL_messages_getArchivedStickers& operator=(TL_messages_getArchivedStickers&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TL_messages_getArchivedStickers& default_instance();

  static inline const TL_messages_getArchivedStickers* internal_default_instance() {
    return reinterpret_cast<const TL_messages_getArchivedStickers*>(
               &_TL_messages_getArchivedStickers_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    168;

  void Swap(TL_messages_getArchivedStickers* other);
  friend void swap(TL_messages_getArchivedStickers& a, TL_messages_getArchivedStickers& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TL_messages_getArchivedStickers* New() const PROTOBUF_FINAL { return New(NULL); }

  TL_messages_getArchivedStickers* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TL_messages_getArchivedStickers* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int64 offset_id = 3;
  void clear_offset_id();
  static const int kOffsetIdFieldNumber = 3;
  ::google::protobuf::int64 offset_id() const;
  void set_offset_id(::google::protobuf::int64 value);

  // bool masks = 2;
  void clear_masks();
  static const int kMasksFieldNumber = 2;
  bool masks() const;
  void set_masks(bool value);

  // int32 limit = 4;
  void clear_limit();
  static const int kLimitFieldNumber = 4;
  ::google::protobuf::int32 limit() const;
  void set_limit(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:mtproto.TL_messages_getArchivedStickers)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int64 offset_id_;
  bool masks_;
  ::google::protobuf::int32 limit_;
  mutable int _cached_size_;
  friend struct protobuf_schema_2etl_2esync_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TL_messages_getMaskStickers : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtproto.TL_messages_getMaskStickers) */ {
 public:
  TL_messages_getMaskStickers();
  virtual ~TL_messages_getMaskStickers();

  TL_messages_getMaskStickers(const TL_messages_getMaskStickers& from);

  inline TL_messages_getMaskStickers& operator=(const TL_messages_getMaskStickers& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TL_messages_getMaskStickers(TL_messages_getMaskStickers&& from) noexcept
    : TL_messages_getMaskStickers() {
    *this = ::std::move(from);
  }

  inline TL_messages_getMaskStickers& operator=(TL_messages_getMaskStickers&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TL_messages_getMaskStickers& default_instance();

  static inline const TL_messages_getMaskStickers* internal_default_instance() {
    return reinterpret_cast<const TL_messages_getMaskStickers*>(
               &_TL_messages_getMaskStickers_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    169;

  void Swap(TL_messages_getMaskStickers* other);
  friend void swap(TL_messages_getMaskStickers& a, TL_messages_getMaskStickers& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TL_messages_getMaskStickers* New() const PROTOBUF_FINAL { return New(NULL); }

  TL_messages_getMaskStickers* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TL_messages_getMaskStickers* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 hash = 1;
  void clear_hash();
  static const int kHashFieldNumber = 1;
  ::google::protobuf::int32 hash() const;
  void set_hash(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:mtproto.TL_messages_getMaskStickers)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 hash_;
  mutable int _cached_size_;
  friend struct protobuf_schema_2etl_2esync_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TL_messages_getAttachedStickers : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtproto.TL_messages_getAttachedStickers) */ {
 public:
  TL_messages_getAttachedStickers();
  virtual ~TL_messages_getAttachedStickers();

  TL_messages_getAttachedStickers(const TL_messages_getAttachedStickers& from);

  inline TL_messages_getAttachedStickers& operator=(const TL_messages_getAttachedStickers& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TL_messages_getAttachedStickers(TL_messages_getAttachedStickers&& from) noexcept
    : TL_messages_getAttachedStickers() {
    *this = ::std::move(from);
  }

  inline TL_messages_getAttachedStickers& operator=(TL_messages_getAttachedStickers&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TL_messages_getAttachedStickers& default_instance();

  static inline const TL_messages_getAttachedStickers* internal_default_instance() {
    return reinterpret_cast<const TL_messages_getAttachedStickers*>(
               &_TL_messages_getAttachedStickers_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    170;

  void Swap(TL_messages_getAttachedStickers* other);
  friend void swap(TL_messages_getAttachedStickers& a, TL_messages_getAttachedStickers& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TL_messages_getAttachedStickers* New() const PROTOBUF_FINAL { return New(NULL); }

  TL_messages_getAttachedStickers* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TL_messages_getAttachedStickers* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .mtproto.InputStickeredMedia media = 1;
  bool has_media() const;
  void clear_media();
  static const int kMediaFieldNumber = 1;
  const ::mtproto::InputStickeredMedia& media() const;
  ::mtproto::InputStickeredMedia* mutable_media();
  ::mtproto::InputStickeredMedia* release_media();
  void set_allocated_media(::mtproto::InputStickeredMedia* media);

  // @@protoc_insertion_point(class_scope:mtproto.TL_messages_getAttachedStickers)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::mtproto::InputStickeredMedia* media_;
  mutable int _cached_size_;
  friend struct protobuf_schema_2etl_2esync_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TL_messages_setGameScore : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtproto.TL_messages_setGameScore) */ {
 public:
  TL_messages_setGameScore();
  virtual ~TL_messages_setGameScore();

  TL_messages_setGameScore(const TL_messages_setGameScore& from);

  inline TL_messages_setGameScore& operator=(const TL_messages_setGameScore& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TL_messages_setGameScore(TL_messages_setGameScore&& from) noexcept
    : TL_messages_setGameScore() {
    *this = ::std::move(from);
  }

  inline TL_messages_setGameScore& operator=(TL_messages_setGameScore&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TL_messages_setGameScore& default_instance();

  static inline const TL_messages_setGameScore* internal_default_instance() {
    return reinterpret_cast<const TL_messages_setGameScore*>(
               &_TL_messages_setGameScore_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    171;

  void Swap(TL_messages_setGameScore* other);
  friend void swap(TL_messages_setGameScore& a, TL_messages_setGameScore& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TL_messages_setGameScore* New() const PROTOBUF_FINAL { return New(NULL); }

  TL_messages_setGameScore* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TL_messages_setGameScore* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .mtproto.InputPeer peer = 4;
  bool has_peer() const;
  void clear_peer();
  static const int kPeerFieldNumber = 4;
  const ::mtproto::InputPeer& peer() const;
  ::mtproto::InputPeer* mutable_peer();
  ::mtproto::InputPeer* release_peer();
  void set_allocated_peer(::mtproto::InputPeer* peer);

  // .mtproto.InputUser user_id = 6;
  bool has_user_id() const;
  void clear_user_id();
  static const int kUserIdFieldNumber = 6;
  const ::mtproto::InputUser& user_id() const;
  ::mtproto::InputUser* mutable_user_id();
  ::mtproto::InputUser* release_user_id();
  void set_allocated_user_id(::mtproto::InputUser* user_id);

  // bool edit_message = 2;
  void clear_edit_message();
  static const int kEditMessageFieldNumber = 2;
  bool edit_message() const;
  void set_edit_message(bool value);

  // bool force = 3;
  void clear_force();
  static const int kForceFieldNumber = 3;
  bool force() const;
  void set_force(bool value);

  // int32 id = 5;
  void clear_id();
  static const int kIdFieldNumber = 5;
  ::google::protobuf::int32 id() const;
  void set_id(::google::protobuf::int32 value);

  // int32 score = 7;
  void clear_score();
  static const int kScoreFieldNumber = 7;
  ::google::protobuf::int32 score() const;
  void set_score(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:mtproto.TL_messages_setGameScore)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::mtproto::InputPeer* peer_;
  ::mtproto::InputUser* user_id_;
  bool edit_message_;
  bool force_;
  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 score_;
  mutable int _cached_size_;
  friend struct protobuf_schema_2etl_2esync_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TL_messages_setInlineGameScore : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtproto.TL_messages_setInlineGameScore) */ {
 public:
  TL_messages_setInlineGameScore();
  virtual ~TL_messages_setInlineGameScore();

  TL_messages_setInlineGameScore(const TL_messages_setInlineGameScore& from);

  inline TL_messages_setInlineGameScore& operator=(const TL_messages_setInlineGameScore& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TL_messages_setInlineGameScore(TL_messages_setInlineGameScore&& from) noexcept
    : TL_messages_setInlineGameScore() {
    *this = ::std::move(from);
  }

  inline TL_messages_setInlineGameScore& operator=(TL_messages_setInlineGameScore&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TL_messages_setInlineGameScore& default_instance();

  static inline const TL_messages_setInlineGameScore* internal_default_instance() {
    return reinterpret_cast<const TL_messages_setInlineGameScore*>(
               &_TL_messages_setInlineGameScore_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    172;

  void Swap(TL_messages_setInlineGameScore* other);
  friend void swap(TL_messages_setInlineGameScore& a, TL_messages_setInlineGameScore& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TL_messages_setInlineGameScore* New() const PROTOBUF_FINAL { return New(NULL); }

  TL_messages_setInlineGameScore* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TL_messages_setInlineGameScore* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .mtproto.InputBotInlineMessageID id = 4;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 4;
  const ::mtproto::InputBotInlineMessageID& id() const;
  ::mtproto::InputBotInlineMessageID* mutable_id();
  ::mtproto::InputBotInlineMessageID* release_id();
  void set_allocated_id(::mtproto::InputBotInlineMessageID* id);

  // .mtproto.InputUser user_id = 5;
  bool has_user_id() const;
  void clear_user_id();
  static const int kUserIdFieldNumber = 5;
  const ::mtproto::InputUser& user_id() const;
  ::mtproto::InputUser* mutable_user_id();
  ::mtproto::InputUser* release_user_id();
  void set_allocated_user_id(::mtproto::InputUser* user_id);

  // bool edit_message = 2;
  void clear_edit_message();
  static const int kEditMessageFieldNumber = 2;
  bool edit_message() const;
  void set_edit_message(bool value);

  // bool force = 3;
  void clear_force();
  static const int kForceFieldNumber = 3;
  bool force() const;
  void set_force(bool value);

  // int32 score = 6;
  void clear_score();
  static const int kScoreFieldNumber = 6;
  ::google::protobuf::int32 score() const;
  void set_score(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:mtproto.TL_messages_setInlineGameScore)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::mtproto::InputBotInlineMessageID* id_;
  ::mtproto::InputUser* user_id_;
  bool edit_message_;
  bool force_;
  ::google::protobuf::int32 score_;
  mutable int _cached_size_;
  friend struct protobuf_schema_2etl_2esync_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TL_messages_getGameHighScores : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtproto.TL_messages_getGameHighScores) */ {
 public:
  TL_messages_getGameHighScores();
  virtual ~TL_messages_getGameHighScores();

  TL_messages_getGameHighScores(const TL_messages_getGameHighScores& from);

  inline TL_messages_getGameHighScores& operator=(const TL_messages_getGameHighScores& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TL_messages_getGameHighScores(TL_messages_getGameHighScores&& from) noexcept
    : TL_messages_getGameHighScores() {
    *this = ::std::move(from);
  }

  inline TL_messages_getGameHighScores& operator=(TL_messages_getGameHighScores&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TL_messages_getGameHighScores& default_instance();

  static inline const TL_messages_getGameHighScores* internal_default_instance() {
    return reinterpret_cast<const TL_messages_getGameHighScores*>(
               &_TL_messages_getGameHighScores_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    173;

  void Swap(TL_messages_getGameHighScores* other);
  friend void swap(TL_messages_getGameHighScores& a, TL_messages_getGameHighScores& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TL_messages_getGameHighScores* New() const PROTOBUF_FINAL { return New(NULL); }

  TL_messages_getGameHighScores* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TL_messages_getGameHighScores* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .mtproto.InputPeer peer = 1;
  bool has_peer() const;
  void clear_peer();
  static const int kPeerFieldNumber = 1;
  const ::mtproto::InputPeer& peer() const;
  ::mtproto::InputPeer* mutable_peer();
  ::mtproto::InputPeer* release_peer();
  void set_allocated_peer(::mtproto::InputPeer* peer);

  // .mtproto.InputUser user_id = 3;
  bool has_user_id() const;
  void clear_user_id();
  static const int kUserIdFieldNumber = 3;
  const ::mtproto::InputUser& user_id() const;
  ::mtproto::InputUser* mutable_user_id();
  ::mtproto::InputUser* release_user_id();
  void set_allocated_user_id(::mtproto::InputUser* user_id);

  // int32 id = 2;
  void clear_id();
  static const int kIdFieldNumber = 2;
  ::google::protobuf::int32 id() const;
  void set_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:mtproto.TL_messages_getGameHighScores)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::mtproto::InputPeer* peer_;
  ::mtproto::InputUser* user_id_;
  ::google::protobuf::int32 id_;
  mutable int _cached_size_;
  friend struct protobuf_schema_2etl_2esync_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TL_messages_getInlineGameHighScores : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtproto.TL_messages_getInlineGameHighScores) */ {
 public:
  TL_messages_getInlineGameHighScores();
  virtual ~TL_messages_getInlineGameHighScores();

  TL_messages_getInlineGameHighScores(const TL_messages_getInlineGameHighScores& from);

  inline TL_messages_getInlineGameHighScores& operator=(const TL_messages_getInlineGameHighScores& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TL_messages_getInlineGameHighScores(TL_messages_getInlineGameHighScores&& from) noexcept
    : TL_messages_getInlineGameHighScores() {
    *this = ::std::move(from);
  }

  inline TL_messages_getInlineGameHighScores& operator=(TL_messages_getInlineGameHighScores&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TL_messages_getInlineGameHighScores& default_instance();

  static inline const TL_messages_getInlineGameHighScores* internal_default_instance() {
    return reinterpret_cast<const TL_messages_getInlineGameHighScores*>(
               &_TL_messages_getInlineGameHighScores_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    174;

  void Swap(TL_messages_getInlineGameHighScores* other);
  friend void swap(TL_messages_getInlineGameHighScores& a, TL_messages_getInlineGameHighScores& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TL_messages_getInlineGameHighScores* New() const PROTOBUF_FINAL { return New(NULL); }

  TL_messages_getInlineGameHighScores* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TL_messages_getInlineGameHighScores* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .mtproto.InputBotInlineMessageID id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  const ::mtproto::InputBotInlineMessageID& id() const;
  ::mtproto::InputBotInlineMessageID* mutable_id();
  ::mtproto::InputBotInlineMessageID* release_id();
  void set_allocated_id(::mtproto::InputBotInlineMessageID* id);

  // .mtproto.InputUser user_id = 2;
  bool has_user_id() const;
  void clear_user_id();
  static const int kUserIdFieldNumber = 2;
  const ::mtproto::InputUser& user_id() const;
  ::mtproto::InputUser* mutable_user_id();
  ::mtproto::InputUser* release_user_id();
  void set_allocated_user_id(::mtproto::InputUser* user_id);

  // @@protoc_insertion_point(class_scope:mtproto.TL_messages_getInlineGameHighScores)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::mtproto::InputBotInlineMessageID* id_;
  ::mtproto::InputUser* user_id_;
  mutable int _cached_size_;
  friend struct protobuf_schema_2etl_2esync_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TL_messages_getCommonChats : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtproto.TL_messages_getCommonChats) */ {
 public:
  TL_messages_getCommonChats();
  virtual ~TL_messages_getCommonChats();

  TL_messages_getCommonChats(const TL_messages_getCommonChats& from);

  inline TL_messages_getCommonChats& operator=(const TL_messages_getCommonChats& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TL_messages_getCommonChats(TL_messages_getCommonChats&& from) noexcept
    : TL_messages_getCommonChats() {
    *this = ::std::move(from);
  }

  inline TL_messages_getCommonChats& operator=(TL_messages_getCommonChats&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TL_messages_getCommonChats& default_instance();

  static inline const TL_messages_getCommonChats* internal_default_instance() {
    return reinterpret_cast<const TL_messages_getCommonChats*>(
               &_TL_messages_getCommonChats_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    175;

  void Swap(TL_messages_getCommonChats* other);
  friend void swap(TL_messages_getCommonChats& a, TL_messages_getCommonChats& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TL_messages_getCommonChats* New() const PROTOBUF_FINAL { return New(NULL); }

  TL_messages_getCommonChats* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TL_messages_getCommonChats* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .mtproto.InputUser user_id = 1;
  bool has_user_id() const;
  void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  const ::mtproto::InputUser& user_id() const;
  ::mtproto::InputUser* mutable_user_id();
  ::mtproto::InputUser* release_user_id();
  void set_allocated_user_id(::mtproto::InputUser* user_id);

  // int32 max_id = 2;
  void clear_max_id();
  static const int kMaxIdFieldNumber = 2;
  ::google::protobuf::int32 max_id() const;
  void set_max_id(::google::protobuf::int32 value);

  // int32 limit = 3;
  void clear_limit();
  static const int kLimitFieldNumber = 3;
  ::google::protobuf::int32 limit() const;
  void set_limit(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:mtproto.TL_messages_getCommonChats)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::mtproto::InputUser* user_id_;
  ::google::protobuf::int32 max_id_;
  ::google::protobuf::int32 limit_;
  mutable int _cached_size_;
  friend struct protobuf_schema_2etl_2esync_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TL_messages_getAllChats : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtproto.TL_messages_getAllChats) */ {
 public:
  TL_messages_getAllChats();
  virtual ~TL_messages_getAllChats();

  TL_messages_getAllChats(const TL_messages_getAllChats& from);

  inline TL_messages_getAllChats& operator=(const TL_messages_getAllChats& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TL_messages_getAllChats(TL_messages_getAllChats&& from) noexcept
    : TL_messages_getAllChats() {
    *this = ::std::move(from);
  }

  inline TL_messages_getAllChats& operator=(TL_messages_getAllChats&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TL_messages_getAllChats& default_instance();

  static inline const TL_messages_getAllChats* internal_default_instance() {
    return reinterpret_cast<const TL_messages_getAllChats*>(
               &_TL_messages_getAllChats_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    176;

  void Swap(TL_messages_getAllChats* other);
  friend void swap(TL_messages_getAllChats& a, TL_messages_getAllChats& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TL_messages_getAllChats* New() const PROTOBUF_FINAL { return New(NULL); }

  TL_messages_getAllChats* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TL_messages_getAllChats* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 except_ids = 1;
  int except_ids_size() const;
  void clear_except_ids();
  static const int kExceptIdsFieldNumber = 1;
  ::google::protobuf::int32 except_ids(int index) const;
  void set_except_ids(int index, ::google::protobuf::int32 value);
  void add_except_ids(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      except_ids() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_except_ids();

  // @@protoc_insertion_point(class_scope:mtproto.TL_messages_getAllChats)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > except_ids_;
  mutable int _cached_size_;
  friend struct protobuf_schema_2etl_2esync_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TL_messages_getWebPage : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtproto.TL_messages_getWebPage) */ {
 public:
  TL_messages_getWebPage();
  virtual ~TL_messages_getWebPage();

  TL_messages_getWebPage(const TL_messages_getWebPage& from);

  inline TL_messages_getWebPage& operator=(const TL_messages_getWebPage& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TL_messages_getWebPage(TL_messages_getWebPage&& from) noexcept
    : TL_messages_getWebPage() {
    *this = ::std::move(from);
  }

  inline TL_messages_getWebPage& operator=(TL_messages_getWebPage&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TL_messages_getWebPage& default_instance();

  static inline const TL_messages_getWebPage* internal_default_instance() {
    return reinterpret_cast<const TL_messages_getWebPage*>(
               &_TL_messages_getWebPage_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    177;

  void Swap(TL_messages_getWebPage* other);
  friend void swap(TL_messages_getWebPage& a, TL_messages_getWebPage& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TL_messages_getWebPage* New() const PROTOBUF_FINAL { return New(NULL); }

  TL_messages_getWebPage* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TL_messages_getWebPage* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string url = 1;
  void clear_url();
  static const int kUrlFieldNumber = 1;
  const ::std::string& url() const;
  void set_url(const ::std::string& value);
  #if LANG_CXX11
  void set_url(::std::string&& value);
  #endif
  void set_url(const char* value);
  void set_url(const char* value, size_t size);
  ::std::string* mutable_url();
  ::std::string* release_url();
  void set_allocated_url(::std::string* url);

  // int32 hash = 2;
  void clear_hash();
  static const int kHashFieldNumber = 2;
  ::google::protobuf::int32 hash() const;
  void set_hash(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:mtproto.TL_messages_getWebPage)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr url_;
  ::google::protobuf::int32 hash_;
  mutable int _cached_size_;
  friend struct protobuf_schema_2etl_2esync_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TL_messages_toggleDialogPin : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtproto.TL_messages_toggleDialogPin) */ {
 public:
  TL_messages_toggleDialogPin();
  virtual ~TL_messages_toggleDialogPin();

  TL_messages_toggleDialogPin(const TL_messages_toggleDialogPin& from);

  inline TL_messages_toggleDialogPin& operator=(const TL_messages_toggleDialogPin& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TL_messages_toggleDialogPin(TL_messages_toggleDialogPin&& from) noexcept
    : TL_messages_toggleDialogPin() {
    *this = ::std::move(from);
  }

  inline TL_messages_toggleDialogPin& operator=(TL_messages_toggleDialogPin&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TL_messages_toggleDialogPin& default_instance();

  static inline const TL_messages_toggleDialogPin* internal_default_instance() {
    return reinterpret_cast<const TL_messages_toggleDialogPin*>(
               &_TL_messages_toggleDialogPin_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    178;

  void Swap(TL_messages_toggleDialogPin* other);
  friend void swap(TL_messages_toggleDialogPin& a, TL_messages_toggleDialogPin& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TL_messages_toggleDialogPin* New() const PROTOBUF_FINAL { return New(NULL); }

  TL_messages_toggleDialogPin* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TL_messages_toggleDialogPin* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .mtproto.InputDialogPeer peer = 3;
  bool has_peer() const;
  void clear_peer();
  static const int kPeerFieldNumber = 3;
  const ::mtproto::InputDialogPeer& peer() const;
  ::mtproto::InputDialogPeer* mutable_peer();
  ::mtproto::InputDialogPeer* release_peer();
  void set_allocated_peer(::mtproto::InputDialogPeer* peer);

  // bool pinned = 2;
  void clear_pinned();
  static const int kPinnedFieldNumber = 2;
  bool pinned() const;
  void set_pinned(bool value);

  // @@protoc_insertion_point(class_scope:mtproto.TL_messages_toggleDialogPin)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::mtproto::InputDialogPeer* peer_;
  bool pinned_;
  mutable int _cached_size_;
  friend struct protobuf_schema_2etl_2esync_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TL_messages_reorderPinnedDialogs : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtproto.TL_messages_reorderPinnedDialogs) */ {
 public:
  TL_messages_reorderPinnedDialogs();
  virtual ~TL_messages_reorderPinnedDialogs();

  TL_messages_reorderPinnedDialogs(const TL_messages_reorderPinnedDialogs& from);

  inline TL_messages_reorderPinnedDialogs& operator=(const TL_messages_reorderPinnedDialogs& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TL_messages_reorderPinnedDialogs(TL_messages_reorderPinnedDialogs&& from) noexcept
    : TL_messages_reorderPinnedDialogs() {
    *this = ::std::move(from);
  }

  inline TL_messages_reorderPinnedDialogs& operator=(TL_messages_reorderPinnedDialogs&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TL_messages_reorderPinnedDialogs& default_instance();

  static inline const TL_messages_reorderPinnedDialogs* internal_default_instance() {
    return reinterpret_cast<const TL_messages_reorderPinnedDialogs*>(
               &_TL_messages_reorderPinnedDialogs_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    179;

  void Swap(TL_messages_reorderPinnedDialogs* other);
  friend void swap(TL_messages_reorderPinnedDialogs& a, TL_messages_reorderPinnedDialogs& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TL_messages_reorderPinnedDialogs* New() const PROTOBUF_FINAL { return New(NULL); }

  TL_messages_reorderPinnedDialogs* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TL_messages_reorderPinnedDialogs* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .mtproto.InputDialogPeer order = 3;
  int order_size() const;
  void clear_order();
  static const int kOrderFieldNumber = 3;
  const ::mtproto::InputDialogPeer& order(int index) const;
  ::mtproto::InputDialogPeer* mutable_order(int index);
  ::mtproto::InputDialogPeer* add_order();
  ::google::protobuf::RepeatedPtrField< ::mtproto::InputDialogPeer >*
      mutable_order();
  const ::google::protobuf::RepeatedPtrField< ::mtproto::InputDialogPeer >&
      order() const;

  // bool force = 2;
  void clear_force();
  static const int kForceFieldNumber = 2;
  bool force() const;
  void set_force(bool value);

  // @@protoc_insertion_point(class_scope:mtproto.TL_messages_reorderPinnedDialogs)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::mtproto::InputDialogPeer > order_;
  bool force_;
  mutable int _cached_size_;
  friend struct protobuf_schema_2etl_2esync_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TL_messages_getPinnedDialogs : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtproto.TL_messages_getPinnedDialogs) */ {
 public:
  TL_messages_getPinnedDialogs();
  virtual ~TL_messages_getPinnedDialogs();

  TL_messages_getPinnedDialogs(const TL_messages_getPinnedDialogs& from);

  inline TL_messages_getPinnedDialogs& operator=(const TL_messages_getPinnedDialogs& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TL_messages_getPinnedDialogs(TL_messages_getPinnedDialogs&& from) noexcept
    : TL_messages_getPinnedDialogs() {
    *this = ::std::move(from);
  }

  inline TL_messages_getPinnedDialogs& operator=(TL_messages_getPinnedDialogs&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TL_messages_getPinnedDialogs& default_instance();

  static inline const TL_messages_getPinnedDialogs* internal_default_instance() {
    return reinterpret_cast<const TL_messages_getPinnedDialogs*>(
               &_TL_messages_getPinnedDialogs_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    180;

  void Swap(TL_messages_getPinnedDialogs* other);
  friend void swap(TL_messages_getPinnedDialogs& a, TL_messages_getPinnedDialogs& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TL_messages_getPinnedDialogs* New() const PROTOBUF_FINAL { return New(NULL); }

  TL_messages_getPinnedDialogs* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TL_messages_getPinnedDialogs* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:mtproto.TL_messages_getPinnedDialogs)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable int _cached_size_;
  friend struct protobuf_schema_2etl_2esync_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TL_messages_setBotShippingResults : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtproto.TL_messages_setBotShippingResults) */ {
 public:
  TL_messages_setBotShippingResults();
  virtual ~TL_messages_setBotShippingResults();

  TL_messages_setBotShippingResults(const TL_messages_setBotShippingResults& from);

  inline TL_messages_setBotShippingResults& operator=(const TL_messages_setBotShippingResults& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TL_messages_setBotShippingResults(TL_messages_setBotShippingResults&& from) noexcept
    : TL_messages_setBotShippingResults() {
    *this = ::std::move(from);
  }

  inline TL_messages_setBotShippingResults& operator=(TL_messages_setBotShippingResults&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TL_messages_setBotShippingResults& default_instance();

  static inline const TL_messages_setBotShippingResults* internal_default_instance() {
    return reinterpret_cast<const TL_messages_setBotShippingResults*>(
               &_TL_messages_setBotShippingResults_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    181;

  void Swap(TL_messages_setBotShippingResults* other);
  friend void swap(TL_messages_setBotShippingResults& a, TL_messages_setBotShippingResults& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TL_messages_setBotShippingResults* New() const PROTOBUF_FINAL { return New(NULL); }

  TL_messages_setBotShippingResults* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TL_messages_setBotShippingResults* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .mtproto.ShippingOption shipping_options = 4;
  int shipping_options_size() const;
  void clear_shipping_options();
  static const int kShippingOptionsFieldNumber = 4;
  const ::mtproto::ShippingOption& shipping_options(int index) const;
  ::mtproto::ShippingOption* mutable_shipping_options(int index);
  ::mtproto::ShippingOption* add_shipping_options();
  ::google::protobuf::RepeatedPtrField< ::mtproto::ShippingOption >*
      mutable_shipping_options();
  const ::google::protobuf::RepeatedPtrField< ::mtproto::ShippingOption >&
      shipping_options() const;

  // string error = 3;
  void clear_error();
  static const int kErrorFieldNumber = 3;
  const ::std::string& error() const;
  void set_error(const ::std::string& value);
  #if LANG_CXX11
  void set_error(::std::string&& value);
  #endif
  void set_error(const char* value);
  void set_error(const char* value, size_t size);
  ::std::string* mutable_error();
  ::std::string* release_error();
  void set_allocated_error(::std::string* error);

  // int64 query_id = 2;
  void clear_query_id();
  static const int kQueryIdFieldNumber = 2;
  ::google::protobuf::int64 query_id() const;
  void set_query_id(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:mtproto.TL_messages_setBotShippingResults)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::mtproto::ShippingOption > shipping_options_;
  ::google::protobuf::internal::ArenaStringPtr error_;
  ::google::protobuf::int64 query_id_;
  mutable int _cached_size_;
  friend struct protobuf_schema_2etl_2esync_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TL_messages_setBotPrecheckoutResults : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtproto.TL_messages_setBotPrecheckoutResults) */ {
 public:
  TL_messages_setBotPrecheckoutResults();
  virtual ~TL_messages_setBotPrecheckoutResults();

  TL_messages_setBotPrecheckoutResults(const TL_messages_setBotPrecheckoutResults& from);

  inline TL_messages_setBotPrecheckoutResults& operator=(const TL_messages_setBotPrecheckoutResults& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TL_messages_setBotPrecheckoutResults(TL_messages_setBotPrecheckoutResults&& from) noexcept
    : TL_messages_setBotPrecheckoutResults() {
    *this = ::std::move(from);
  }

  inline TL_messages_setBotPrecheckoutResults& operator=(TL_messages_setBotPrecheckoutResults&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TL_messages_setBotPrecheckoutResults& default_instance();

  static inline const TL_messages_setBotPrecheckoutResults* internal_default_instance() {
    return reinterpret_cast<const TL_messages_setBotPrecheckoutResults*>(
               &_TL_messages_setBotPrecheckoutResults_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    182;

  void Swap(TL_messages_setBotPrecheckoutResults* other);
  friend void swap(TL_messages_setBotPrecheckoutResults& a, TL_messages_setBotPrecheckoutResults& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TL_messages_setBotPrecheckoutResults* New() const PROTOBUF_FINAL { return New(NULL); }

  TL_messages_setBotPrecheckoutResults* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TL_messages_setBotPrecheckoutResults* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string error = 4;
  void clear_error();
  static const int kErrorFieldNumber = 4;
  const ::std::string& error() const;
  void set_error(const ::std::string& value);
  #if LANG_CXX11
  void set_error(::std::string&& value);
  #endif
  void set_error(const char* value);
  void set_error(const char* value, size_t size);
  ::std::string* mutable_error();
  ::std::string* release_error();
  void set_allocated_error(::std::string* error);

  // int64 query_id = 3;
  void clear_query_id();
  static const int kQueryIdFieldNumber = 3;
  ::google::protobuf::int64 query_id() const;
  void set_query_id(::google::protobuf::int64 value);

  // bool success = 2;
  void clear_success();
  static const int kSuccessFieldNumber = 2;
  bool success() const;
  void set_success(bool value);

  // @@protoc_insertion_point(class_scope:mtproto.TL_messages_setBotPrecheckoutResults)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr error_;
  ::google::protobuf::int64 query_id_;
  bool success_;
  mutable int _cached_size_;
  friend struct protobuf_schema_2etl_2esync_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TL_messages_uploadMedia : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtproto.TL_messages_uploadMedia) */ {
 public:
  TL_messages_uploadMedia();
  virtual ~TL_messages_uploadMedia();

  TL_messages_uploadMedia(const TL_messages_uploadMedia& from);

  inline TL_messages_uploadMedia& operator=(const TL_messages_uploadMedia& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TL_messages_uploadMedia(TL_messages_uploadMedia&& from) noexcept
    : TL_messages_uploadMedia() {
    *this = ::std::move(from);
  }

  inline TL_messages_uploadMedia& operator=(TL_messages_uploadMedia&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TL_messages_uploadMedia& default_instance();

  static inline const TL_messages_uploadMedia* internal_default_instance() {
    return reinterpret_cast<const TL_messages_uploadMedia*>(
               &_TL_messages_uploadMedia_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    183;

  void Swap(TL_messages_uploadMedia* other);
  friend void swap(TL_messages_uploadMedia& a, TL_messages_uploadMedia& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TL_messages_uploadMedia* New() const PROTOBUF_FINAL { return New(NULL); }

  TL_messages_uploadMedia* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TL_messages_uploadMedia* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .mtproto.InputPeer peer = 1;
  bool has_peer() const;
  void clear_peer();
  static const int kPeerFieldNumber = 1;
  const ::mtproto::InputPeer& peer() const;
  ::mtproto::InputPeer* mutable_peer();
  ::mtproto::InputPeer* release_peer();
  void set_allocated_peer(::mtproto::InputPeer* peer);

  // .mtproto.InputMedia media = 2;
  bool has_media() const;
  void clear_media();
  static const int kMediaFieldNumber = 2;
  const ::mtproto::InputMedia& media() const;
  ::mtproto::InputMedia* mutable_media();
  ::mtproto::InputMedia* release_media();
  void set_allocated_media(::mtproto::InputMedia* media);

  // @@protoc_insertion_point(class_scope:mtproto.TL_messages_uploadMedia)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::mtproto::InputPeer* peer_;
  ::mtproto::InputMedia* media_;
  mutable int _cached_size_;
  friend struct protobuf_schema_2etl_2esync_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TL_messages_sendScreenshotNotification : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtproto.TL_messages_sendScreenshotNotification) */ {
 public:
  TL_messages_sendScreenshotNotification();
  virtual ~TL_messages_sendScreenshotNotification();

  TL_messages_sendScreenshotNotification(const TL_messages_sendScreenshotNotification& from);

  inline TL_messages_sendScreenshotNotification& operator=(const TL_messages_sendScreenshotNotification& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TL_messages_sendScreenshotNotification(TL_messages_sendScreenshotNotification&& from) noexcept
    : TL_messages_sendScreenshotNotification() {
    *this = ::std::move(from);
  }

  inline TL_messages_sendScreenshotNotification& operator=(TL_messages_sendScreenshotNotification&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TL_messages_sendScreenshotNotification& default_instance();

  static inline const TL_messages_sendScreenshotNotification* internal_default_instance() {
    return reinterpret_cast<const TL_messages_sendScreenshotNotification*>(
               &_TL_messages_sendScreenshotNotification_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    184;

  void Swap(TL_messages_sendScreenshotNotification* other);
  friend void swap(TL_messages_sendScreenshotNotification& a, TL_messages_sendScreenshotNotification& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TL_messages_sendScreenshotNotification* New() const PROTOBUF_FINAL { return New(NULL); }

  TL_messages_sendScreenshotNotification* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TL_messages_sendScreenshotNotification* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .mtproto.InputPeer peer = 1;
  bool has_peer() const;
  void clear_peer();
  static const int kPeerFieldNumber = 1;
  const ::mtproto::InputPeer& peer() const;
  ::mtproto::InputPeer* mutable_peer();
  ::mtproto::InputPeer* release_peer();
  void set_allocated_peer(::mtproto::InputPeer* peer);

  // int64 random_id = 3;
  void clear_random_id();
  static const int kRandomIdFieldNumber = 3;
  ::google::protobuf::int64 random_id() const;
  void set_random_id(::google::protobuf::int64 value);

  // int32 reply_to_msg_id = 2;
  void clear_reply_to_msg_id();
  static const int kReplyToMsgIdFieldNumber = 2;
  ::google::protobuf::int32 reply_to_msg_id() const;
  void set_reply_to_msg_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:mtproto.TL_messages_sendScreenshotNotification)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::mtproto::InputPeer* peer_;
  ::google::protobuf::int64 random_id_;
  ::google::protobuf::int32 reply_to_msg_id_;
  mutable int _cached_size_;
  friend struct protobuf_schema_2etl_2esync_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TL_messages_getFavedStickers : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtproto.TL_messages_getFavedStickers) */ {
 public:
  TL_messages_getFavedStickers();
  virtual ~TL_messages_getFavedStickers();

  TL_messages_getFavedStickers(const TL_messages_getFavedStickers& from);

  inline TL_messages_getFavedStickers& operator=(const TL_messages_getFavedStickers& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TL_messages_getFavedStickers(TL_messages_getFavedStickers&& from) noexcept
    : TL_messages_getFavedStickers() {
    *this = ::std::move(from);
  }

  inline TL_messages_getFavedStickers& operator=(TL_messages_getFavedStickers&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TL_messages_getFavedStickers& default_instance();

  static inline const TL_messages_getFavedStickers* internal_default_instance() {
    return reinterpret_cast<const TL_messages_getFavedStickers*>(
               &_TL_messages_getFavedStickers_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    185;

  void Swap(TL_messages_getFavedStickers* other);
  friend void swap(TL_messages_getFavedStickers& a, TL_messages_getFavedStickers& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TL_messages_getFavedStickers* New() const PROTOBUF_FINAL { return New(NULL); }

  TL_messages_getFavedStickers* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TL_messages_getFavedStickers* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 hash = 1;
  void clear_hash();
  static const int kHashFieldNumber = 1;
  ::google::protobuf::int32 hash() const;
  void set_hash(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:mtproto.TL_messages_getFavedStickers)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 hash_;
  mutable int _cached_size_;
  friend struct protobuf_schema_2etl_2esync_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TL_messages_faveSticker : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtproto.TL_messages_faveSticker) */ {
 public:
  TL_messages_faveSticker();
  virtual ~TL_messages_faveSticker();

  TL_messages_faveSticker(const TL_messages_faveSticker& from);

  inline TL_messages_faveSticker& operator=(const TL_messages_faveSticker& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TL_messages_faveSticker(TL_messages_faveSticker&& from) noexcept
    : TL_messages_faveSticker() {
    *this = ::std::move(from);
  }

  inline TL_messages_faveSticker& operator=(TL_messages_faveSticker&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TL_messages_faveSticker& default_instance();

  static inline const TL_messages_faveSticker* internal_default_instance() {
    return reinterpret_cast<const TL_messages_faveSticker*>(
               &_TL_messages_faveSticker_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    186;

  void Swap(TL_messages_faveSticker* other);
  friend void swap(TL_messages_faveSticker& a, TL_messages_faveSticker& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TL_messages_faveSticker* New() const PROTOBUF_FINAL { return New(NULL); }

  TL_messages_faveSticker* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TL_messages_faveSticker* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .mtproto.InputDocument id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  const ::mtproto::InputDocument& id() const;
  ::mtproto::InputDocument* mutable_id();
  ::mtproto::InputDocument* release_id();
  void set_allocated_id(::mtproto::InputDocument* id);

  // .mtproto.Bool unfave = 2;
  bool has_unfave() const;
  void clear_unfave();
  static const int kUnfaveFieldNumber = 2;
  const ::mtproto::Bool& unfave() const;
  ::mtproto::Bool* mutable_unfave();
  ::mtproto::Bool* release_unfave();
  void set_allocated_unfave(::mtproto::Bool* unfave);

  // @@protoc_insertion_point(class_scope:mtproto.TL_messages_faveSticker)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::mtproto::InputDocument* id_;
  ::mtproto::Bool* unfave_;
  mutable int _cached_size_;
  friend struct protobuf_schema_2etl_2esync_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TL_messages_getUnreadMentions : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtproto.TL_messages_getUnreadMentions) */ {
 public:
  TL_messages_getUnreadMentions();
  virtual ~TL_messages_getUnreadMentions();

  TL_messages_getUnreadMentions(const TL_messages_getUnreadMentions& from);

  inline TL_messages_getUnreadMentions& operator=(const TL_messages_getUnreadMentions& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TL_messages_getUnreadMentions(TL_messages_getUnreadMentions&& from) noexcept
    : TL_messages_getUnreadMentions() {
    *this = ::std::move(from);
  }

  inline TL_messages_getUnreadMentions& operator=(TL_messages_getUnreadMentions&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TL_messages_getUnreadMentions& default_instance();

  static inline const TL_messages_getUnreadMentions* internal_default_instance() {
    return reinterpret_cast<const TL_messages_getUnreadMentions*>(
               &_TL_messages_getUnreadMentions_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    187;

  void Swap(TL_messages_getUnreadMentions* other);
  friend void swap(TL_messages_getUnreadMentions& a, TL_messages_getUnreadMentions& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TL_messages_getUnreadMentions* New() const PROTOBUF_FINAL { return New(NULL); }

  TL_messages_getUnreadMentions* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TL_messages_getUnreadMentions* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .mtproto.InputPeer peer = 1;
  bool has_peer() const;
  void clear_peer();
  static const int kPeerFieldNumber = 1;
  const ::mtproto::InputPeer& peer() const;
  ::mtproto::InputPeer* mutable_peer();
  ::mtproto::InputPeer* release_peer();
  void set_allocated_peer(::mtproto::InputPeer* peer);

  // int32 offset_id = 2;
  void clear_offset_id();
  static const int kOffsetIdFieldNumber = 2;
  ::google::protobuf::int32 offset_id() const;
  void set_offset_id(::google::protobuf::int32 value);

  // int32 add_offset = 3;
  void clear_add_offset();
  static const int kAddOffsetFieldNumber = 3;
  ::google::protobuf::int32 add_offset() const;
  void set_add_offset(::google::protobuf::int32 value);

  // int32 limit = 4;
  void clear_limit();
  static const int kLimitFieldNumber = 4;
  ::google::protobuf::int32 limit() const;
  void set_limit(::google::protobuf::int32 value);

  // int32 max_id = 5;
  void clear_max_id();
  static const int kMaxIdFieldNumber = 5;
  ::google::protobuf::int32 max_id() const;
  void set_max_id(::google::protobuf::int32 value);

  // int32 min_id = 6;
  void clear_min_id();
  static const int kMinIdFieldNumber = 6;
  ::google::protobuf::int32 min_id() const;
  void set_min_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:mtproto.TL_messages_getUnreadMentions)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::mtproto::InputPeer* peer_;
  ::google::protobuf::int32 offset_id_;
  ::google::protobuf::int32 add_offset_;
  ::google::protobuf::int32 limit_;
  ::google::protobuf::int32 max_id_;
  ::google::protobuf::int32 min_id_;
  mutable int _cached_size_;
  friend struct protobuf_schema_2etl_2esync_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TL_messages_readMentions : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtproto.TL_messages_readMentions) */ {
 public:
  TL_messages_readMentions();
  virtual ~TL_messages_readMentions();

  TL_messages_readMentions(const TL_messages_readMentions& from);

  inline TL_messages_readMentions& operator=(const TL_messages_readMentions& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TL_messages_readMentions(TL_messages_readMentions&& from) noexcept
    : TL_messages_readMentions() {
    *this = ::std::move(from);
  }

  inline TL_messages_readMentions& operator=(TL_messages_readMentions&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TL_messages_readMentions& default_instance();

  static inline const TL_messages_readMentions* internal_default_instance() {
    return reinterpret_cast<const TL_messages_readMentions*>(
               &_TL_messages_readMentions_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    188;

  void Swap(TL_messages_readMentions* other);
  friend void swap(TL_messages_readMentions& a, TL_messages_readMentions& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TL_messages_readMentions* New() const PROTOBUF_FINAL { return New(NULL); }

  TL_messages_readMentions* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TL_messages_readMentions* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .mtproto.InputPeer peer = 1;
  bool has_peer() const;
  void clear_peer();
  static const int kPeerFieldNumber = 1;
  const ::mtproto::InputPeer& peer() const;
  ::mtproto::InputPeer* mutable_peer();
  ::mtproto::InputPeer* release_peer();
  void set_allocated_peer(::mtproto::InputPeer* peer);

  // @@protoc_insertion_point(class_scope:mtproto.TL_messages_readMentions)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::mtproto::InputPeer* peer_;
  mutable int _cached_size_;
  friend struct protobuf_schema_2etl_2esync_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TL_messages_getRecentLocations : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtproto.TL_messages_getRecentLocations) */ {
 public:
  TL_messages_getRecentLocations();
  virtual ~TL_messages_getRecentLocations();

  TL_messages_getRecentLocations(const TL_messages_getRecentLocations& from);

  inline TL_messages_getRecentLocations& operator=(const TL_messages_getRecentLocations& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TL_messages_getRecentLocations(TL_messages_getRecentLocations&& from) noexcept
    : TL_messages_getRecentLocations() {
    *this = ::std::move(from);
  }

  inline TL_messages_getRecentLocations& operator=(TL_messages_getRecentLocations&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TL_messages_getRecentLocations& default_instance();

  static inline const TL_messages_getRecentLocations* internal_default_instance() {
    return reinterpret_cast<const TL_messages_getRecentLocations*>(
               &_TL_messages_getRecentLocations_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    189;

  void Swap(TL_messages_getRecentLocations* other);
  friend void swap(TL_messages_getRecentLocations& a, TL_messages_getRecentLocations& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TL_messages_getRecentLocations* New() const PROTOBUF_FINAL { return New(NULL); }

  TL_messages_getRecentLocations* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TL_messages_getRecentLocations* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .mtproto.InputPeer peer = 1;
  bool has_peer() const;
  void clear_peer();
  static const int kPeerFieldNumber = 1;
  const ::mtproto::InputPeer& peer() const;
  ::mtproto::InputPeer* mutable_peer();
  ::mtproto::InputPeer* release_peer();
  void set_allocated_peer(::mtproto::InputPeer* peer);

  // int32 limit = 2;
  void clear_limit();
  static const int kLimitFieldNumber = 2;
  ::google::protobuf::int32 limit() const;
  void set_limit(::google::protobuf::int32 value);

  // int32 hash = 3;
  void clear_hash();
  static const int kHashFieldNumber = 3;
  ::google::protobuf::int32 hash() const;
  void set_hash(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:mtproto.TL_messages_getRecentLocations)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::mtproto::InputPeer* peer_;
  ::google::protobuf::int32 limit_;
  ::google::protobuf::int32 hash_;
  mutable int _cached_size_;
  friend struct protobuf_schema_2etl_2esync_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TL_messages_sendMultiMedia : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtproto.TL_messages_sendMultiMedia) */ {
 public:
  TL_messages_sendMultiMedia();
  virtual ~TL_messages_sendMultiMedia();

  TL_messages_sendMultiMedia(const TL_messages_sendMultiMedia& from);

  inline TL_messages_sendMultiMedia& operator=(const TL_messages_sendMultiMedia& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TL_messages_sendMultiMedia(TL_messages_sendMultiMedia&& from) noexcept
    : TL_messages_sendMultiMedia() {
    *this = ::std::move(from);
  }

  inline TL_messages_sendMultiMedia& operator=(TL_messages_sendMultiMedia&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TL_messages_sendMultiMedia& default_instance();

  static inline const TL_messages_sendMultiMedia* internal_default_instance() {
    return reinterpret_cast<const TL_messages_sendMultiMedia*>(
               &_TL_messages_sendMultiMedia_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    190;

  void Swap(TL_messages_sendMultiMedia* other);
  friend void swap(TL_messages_sendMultiMedia& a, TL_messages_sendMultiMedia& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TL_messages_sendMultiMedia* New() const PROTOBUF_FINAL { return New(NULL); }

  TL_messages_sendMultiMedia* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TL_messages_sendMultiMedia* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .mtproto.InputSingleMedia multi_media = 7;
  int multi_media_size() const;
  void clear_multi_media();
  static const int kMultiMediaFieldNumber = 7;
  const ::mtproto::InputSingleMedia& multi_media(int index) const;
  ::mtproto::InputSingleMedia* mutable_multi_media(int index);
  ::mtproto::InputSingleMedia* add_multi_media();
  ::google::protobuf::RepeatedPtrField< ::mtproto::InputSingleMedia >*
      mutable_multi_media();
  const ::google::protobuf::RepeatedPtrField< ::mtproto::InputSingleMedia >&
      multi_media() const;

  // .mtproto.InputPeer peer = 5;
  bool has_peer() const;
  void clear_peer();
  static const int kPeerFieldNumber = 5;
  const ::mtproto::InputPeer& peer() const;
  ::mtproto::InputPeer* mutable_peer();
  ::mtproto::InputPeer* release_peer();
  void set_allocated_peer(::mtproto::InputPeer* peer);

  // bool silent = 2;
  void clear_silent();
  static const int kSilentFieldNumber = 2;
  bool silent() const;
  void set_silent(bool value);

  // bool background = 3;
  void clear_background();
  static const int kBackgroundFieldNumber = 3;
  bool background() const;
  void set_background(bool value);

  // bool clear_draft = 4;
  void clear_clear_draft();
  static const int kClearDraftFieldNumber = 4;
  bool clear_draft() const;
  void set_clear_draft(bool value);

  // int32 reply_to_msg_id = 6;
  void clear_reply_to_msg_id();
  static const int kReplyToMsgIdFieldNumber = 6;
  ::google::protobuf::int32 reply_to_msg_id() const;
  void set_reply_to_msg_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:mtproto.TL_messages_sendMultiMedia)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::mtproto::InputSingleMedia > multi_media_;
  ::mtproto::InputPeer* peer_;
  bool silent_;
  bool background_;
  bool clear_draft_;
  ::google::protobuf::int32 reply_to_msg_id_;
  mutable int _cached_size_;
  friend struct protobuf_schema_2etl_2esync_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TL_messages_uploadEncryptedFile : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtproto.TL_messages_uploadEncryptedFile) */ {
 public:
  TL_messages_uploadEncryptedFile();
  virtual ~TL_messages_uploadEncryptedFile();

  TL_messages_uploadEncryptedFile(const TL_messages_uploadEncryptedFile& from);

  inline TL_messages_uploadEncryptedFile& operator=(const TL_messages_uploadEncryptedFile& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TL_messages_uploadEncryptedFile(TL_messages_uploadEncryptedFile&& from) noexcept
    : TL_messages_uploadEncryptedFile() {
    *this = ::std::move(from);
  }

  inline TL_messages_uploadEncryptedFile& operator=(TL_messages_uploadEncryptedFile&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TL_messages_uploadEncryptedFile& default_instance();

  static inline const TL_messages_uploadEncryptedFile* internal_default_instance() {
    return reinterpret_cast<const TL_messages_uploadEncryptedFile*>(
               &_TL_messages_uploadEncryptedFile_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    191;

  void Swap(TL_messages_uploadEncryptedFile* other);
  friend void swap(TL_messages_uploadEncryptedFile& a, TL_messages_uploadEncryptedFile& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TL_messages_uploadEncryptedFile* New() const PROTOBUF_FINAL { return New(NULL); }

  TL_messages_uploadEncryptedFile* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TL_messages_uploadEncryptedFile* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .mtproto.InputEncryptedChat peer = 1;
  bool has_peer() const;
  void clear_peer();
  static const int kPeerFieldNumber = 1;
  const ::mtproto::InputEncryptedChat& peer() const;
  ::mtproto::InputEncryptedChat* mutable_peer();
  ::mtproto::InputEncryptedChat* release_peer();
  void set_allocated_peer(::mtproto::InputEncryptedChat* peer);

  // .mtproto.InputEncryptedFile file = 2;
  bool has_file() const;
  void clear_file();
  static const int kFileFieldNumber = 2;
  const ::mtproto::InputEncryptedFile& file() const;
  ::mtproto::InputEncryptedFile* mutable_file();
  ::mtproto::InputEncryptedFile* release_file();
  void set_allocated_file(::mtproto::InputEncryptedFile* file);

  // @@protoc_insertion_point(class_scope:mtproto.TL_messages_uploadEncryptedFile)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::mtproto::InputEncryptedChat* peer_;
  ::mtproto::InputEncryptedFile* file_;
  mutable int _cached_size_;
  friend struct protobuf_schema_2etl_2esync_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TL_messages_searchStickerSets : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtproto.TL_messages_searchStickerSets) */ {
 public:
  TL_messages_searchStickerSets();
  virtual ~TL_messages_searchStickerSets();

  TL_messages_searchStickerSets(const TL_messages_searchStickerSets& from);

  inline TL_messages_searchStickerSets& operator=(const TL_messages_searchStickerSets& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TL_messages_searchStickerSets(TL_messages_searchStickerSets&& from) noexcept
    : TL_messages_searchStickerSets() {
    *this = ::std::move(from);
  }

  inline TL_messages_searchStickerSets& operator=(TL_messages_searchStickerSets&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TL_messages_searchStickerSets& default_instance();

  static inline const TL_messages_searchStickerSets* internal_default_instance() {
    return reinterpret_cast<const TL_messages_searchStickerSets*>(
               &_TL_messages_searchStickerSets_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    192;

  void Swap(TL_messages_searchStickerSets* other);
  friend void swap(TL_messages_searchStickerSets& a, TL_messages_searchStickerSets& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TL_messages_searchStickerSets* New() const PROTOBUF_FINAL { return New(NULL); }

  TL_messages_searchStickerSets* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TL_messages_searchStickerSets* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string q = 3;
  void clear_q();
  static const int kQFieldNumber = 3;
  const ::std::string& q() const;
  void set_q(const ::std::string& value);
  #if LANG_CXX11
  void set_q(::std::string&& value);
  #endif
  void set_q(const char* value);
  void set_q(const char* value, size_t size);
  ::std::string* mutable_q();
  ::std::string* release_q();
  void set_allocated_q(::std::string* q);

  // bool exclude_featured = 2;
  void clear_exclude_featured();
  static const int kExcludeFeaturedFieldNumber = 2;
  bool exclude_featured() const;
  void set_exclude_featured(bool value);

  // int32 hash = 4;
  void clear_hash();
  static const int kHashFieldNumber = 4;
  ::google::protobuf::int32 hash() const;
  void set_hash(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:mtproto.TL_messages_searchStickerSets)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr q_;
  bool exclude_featured_;
  ::google::protobuf::int32 hash_;
  mutable int _cached_size_;
  friend struct protobuf_schema_2etl_2esync_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TL_messages_getSplitRanges : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtproto.TL_messages_getSplitRanges) */ {
 public:
  TL_messages_getSplitRanges();
  virtual ~TL_messages_getSplitRanges();

  TL_messages_getSplitRanges(const TL_messages_getSplitRanges& from);

  inline TL_messages_getSplitRanges& operator=(const TL_messages_getSplitRanges& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TL_messages_getSplitRanges(TL_messages_getSplitRanges&& from) noexcept
    : TL_messages_getSplitRanges() {
    *this = ::std::move(from);
  }

  inline TL_messages_getSplitRanges& operator=(TL_messages_getSplitRanges&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TL_messages_getSplitRanges& default_instance();

  static inline const TL_messages_getSplitRanges* internal_default_instance() {
    return reinterpret_cast<const TL_messages_getSplitRanges*>(
               &_TL_messages_getSplitRanges_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    193;

  void Swap(TL_messages_getSplitRanges* other);
  friend void swap(TL_messages_getSplitRanges& a, TL_messages_getSplitRanges& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TL_messages_getSplitRanges* New() const PROTOBUF_FINAL { return New(NULL); }

  TL_messages_getSplitRanges* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TL_messages_getSplitRanges* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:mtproto.TL_messages_getSplitRanges)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable int _cached_size_;
  friend struct protobuf_schema_2etl_2esync_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TL_messages_markDialogUnread : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtproto.TL_messages_markDialogUnread) */ {
 public:
  TL_messages_markDialogUnread();
  virtual ~TL_messages_markDialogUnread();

  TL_messages_markDialogUnread(const TL_messages_markDialogUnread& from);

  inline TL_messages_markDialogUnread& operator=(const TL_messages_markDialogUnread& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TL_messages_markDialogUnread(TL_messages_markDialogUnread&& from) noexcept
    : TL_messages_markDialogUnread() {
    *this = ::std::move(from);
  }

  inline TL_messages_markDialogUnread& operator=(TL_messages_markDialogUnread&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TL_messages_markDialogUnread& default_instance();

  static inline const TL_messages_markDialogUnread* internal_default_instance() {
    return reinterpret_cast<const TL_messages_markDialogUnread*>(
               &_TL_messages_markDialogUnread_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    194;

  void Swap(TL_messages_markDialogUnread* other);
  friend void swap(TL_messages_markDialogUnread& a, TL_messages_markDialogUnread& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TL_messages_markDialogUnread* New() const PROTOBUF_FINAL { return New(NULL); }

  TL_messages_markDialogUnread* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TL_messages_markDialogUnread* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .mtproto.InputDialogPeer peer = 3;
  bool has_peer() const;
  void clear_peer();
  static const int kPeerFieldNumber = 3;
  const ::mtproto::InputDialogPeer& peer() const;
  ::mtproto::InputDialogPeer* mutable_peer();
  ::mtproto::InputDialogPeer* release_peer();
  void set_allocated_peer(::mtproto::InputDialogPeer* peer);

  // bool unread = 2;
  void clear_unread();
  static const int kUnreadFieldNumber = 2;
  bool unread() const;
  void set_unread(bool value);

  // @@protoc_insertion_point(class_scope:mtproto.TL_messages_markDialogUnread)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::mtproto::InputDialogPeer* peer_;
  bool unread_;
  mutable int _cached_size_;
  friend struct protobuf_schema_2etl_2esync_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TL_messages_getDialogUnreadMarks : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtproto.TL_messages_getDialogUnreadMarks) */ {
 public:
  TL_messages_getDialogUnreadMarks();
  virtual ~TL_messages_getDialogUnreadMarks();

  TL_messages_getDialogUnreadMarks(const TL_messages_getDialogUnreadMarks& from);

  inline TL_messages_getDialogUnreadMarks& operator=(const TL_messages_getDialogUnreadMarks& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TL_messages_getDialogUnreadMarks(TL_messages_getDialogUnreadMarks&& from) noexcept
    : TL_messages_getDialogUnreadMarks() {
    *this = ::std::move(from);
  }

  inline TL_messages_getDialogUnreadMarks& operator=(TL_messages_getDialogUnreadMarks&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TL_messages_getDialogUnreadMarks& default_instance();

  static inline const TL_messages_getDialogUnreadMarks* internal_default_instance() {
    return reinterpret_cast<const TL_messages_getDialogUnreadMarks*>(
               &_TL_messages_getDialogUnreadMarks_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    195;

  void Swap(TL_messages_getDialogUnreadMarks* other);
  friend void swap(TL_messages_getDialogUnreadMarks& a, TL_messages_getDialogUnreadMarks& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TL_messages_getDialogUnreadMarks* New() const PROTOBUF_FINAL { return New(NULL); }

  TL_messages_getDialogUnreadMarks* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TL_messages_getDialogUnreadMarks* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:mtproto.TL_messages_getDialogUnreadMarks)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable int _cached_size_;
  friend struct protobuf_schema_2etl_2esync_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TL_messages_clearAllDrafts : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtproto.TL_messages_clearAllDrafts) */ {
 public:
  TL_messages_clearAllDrafts();
  virtual ~TL_messages_clearAllDrafts();

  TL_messages_clearAllDrafts(const TL_messages_clearAllDrafts& from);

  inline TL_messages_clearAllDrafts& operator=(const TL_messages_clearAllDrafts& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TL_messages_clearAllDrafts(TL_messages_clearAllDrafts&& from) noexcept
    : TL_messages_clearAllDrafts() {
    *this = ::std::move(from);
  }

  inline TL_messages_clearAllDrafts& operator=(TL_messages_clearAllDrafts&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TL_messages_clearAllDrafts& default_instance();

  static inline const TL_messages_clearAllDrafts* internal_default_instance() {
    return reinterpret_cast<const TL_messages_clearAllDrafts*>(
               &_TL_messages_clearAllDrafts_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    196;

  void Swap(TL_messages_clearAllDrafts* other);
  friend void swap(TL_messages_clearAllDrafts& a, TL_messages_clearAllDrafts& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TL_messages_clearAllDrafts* New() const PROTOBUF_FINAL { return New(NULL); }

  TL_messages_clearAllDrafts* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TL_messages_clearAllDrafts* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:mtproto.TL_messages_clearAllDrafts)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable int _cached_size_;
  friend struct protobuf_schema_2etl_2esync_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TL_updates_getState : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtproto.TL_updates_getState) */ {
 public:
  TL_updates_getState();
  virtual ~TL_updates_getState();

  TL_updates_getState(const TL_updates_getState& from);

  inline TL_updates_getState& operator=(const TL_updates_getState& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TL_updates_getState(TL_updates_getState&& from) noexcept
    : TL_updates_getState() {
    *this = ::std::move(from);
  }

  inline TL_updates_getState& operator=(TL_updates_getState&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TL_updates_getState& default_instance();

  static inline const TL_updates_getState* internal_default_instance() {
    return reinterpret_cast<const TL_updates_getState*>(
               &_TL_updates_getState_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    197;

  void Swap(TL_updates_getState* other);
  friend void swap(TL_updates_getState& a, TL_updates_getState& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TL_updates_getState* New() const PROTOBUF_FINAL { return New(NULL); }

  TL_updates_getState* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TL_updates_getState* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:mtproto.TL_updates_getState)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable int _cached_size_;
  friend struct protobuf_schema_2etl_2esync_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TL_updates_getDifference : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtproto.TL_updates_getDifference) */ {
 public:
  TL_updates_getDifference();
  virtual ~TL_updates_getDifference();

  TL_updates_getDifference(const TL_updates_getDifference& from);

  inline TL_updates_getDifference& operator=(const TL_updates_getDifference& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TL_updates_getDifference(TL_updates_getDifference&& from) noexcept
    : TL_updates_getDifference() {
    *this = ::std::move(from);
  }

  inline TL_updates_getDifference& operator=(TL_updates_getDifference&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TL_updates_getDifference& default_instance();

  static inline const TL_updates_getDifference* internal_default_instance() {
    return reinterpret_cast<const TL_updates_getDifference*>(
               &_TL_updates_getDifference_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    198;

  void Swap(TL_updates_getDifference* other);
  friend void swap(TL_updates_getDifference& a, TL_updates_getDifference& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TL_updates_getDifference* New() const PROTOBUF_FINAL { return New(NULL); }

  TL_updates_getDifference* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TL_updates_getDifference* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 pts = 2;
  void clear_pts();
  static const int kPtsFieldNumber = 2;
  ::google::protobuf::int32 pts() const;
  void set_pts(::google::protobuf::int32 value);

  // int32 pts_total_limit = 3;
  void clear_pts_total_limit();
  static const int kPtsTotalLimitFieldNumber = 3;
  ::google::protobuf::int32 pts_total_limit() const;
  void set_pts_total_limit(::google::protobuf::int32 value);

  // int32 date = 4;
  void clear_date();
  static const int kDateFieldNumber = 4;
  ::google::protobuf::int32 date() const;
  void set_date(::google::protobuf::int32 value);

  // int32 qts = 5;
  void clear_qts();
  static const int kQtsFieldNumber = 5;
  ::google::protobuf::int32 qts() const;
  void set_qts(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:mtproto.TL_updates_getDifference)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 pts_;
  ::google::protobuf::int32 pts_total_limit_;
  ::google::protobuf::int32 date_;
  ::google::protobuf::int32 qts_;
  mutable int _cached_size_;
  friend struct protobuf_schema_2etl_2esync_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TL_updates_getChannelDifference : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtproto.TL_updates_getChannelDifference) */ {
 public:
  TL_updates_getChannelDifference();
  virtual ~TL_updates_getChannelDifference();

  TL_updates_getChannelDifference(const TL_updates_getChannelDifference& from);

  inline TL_updates_getChannelDifference& operator=(const TL_updates_getChannelDifference& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TL_updates_getChannelDifference(TL_updates_getChannelDifference&& from) noexcept
    : TL_updates_getChannelDifference() {
    *this = ::std::move(from);
  }

  inline TL_updates_getChannelDifference& operator=(TL_updates_getChannelDifference&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TL_updates_getChannelDifference& default_instance();

  static inline const TL_updates_getChannelDifference* internal_default_instance() {
    return reinterpret_cast<const TL_updates_getChannelDifference*>(
               &_TL_updates_getChannelDifference_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    199;

  void Swap(TL_updates_getChannelDifference* other);
  friend void swap(TL_updates_getChannelDifference& a, TL_updates_getChannelDifference& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TL_updates_getChannelDifference* New() const PROTOBUF_FINAL { return New(NULL); }

  TL_updates_getChannelDifference* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TL_updates_getChannelDifference* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .mtproto.InputChannel channel = 3;
  bool has_channel() const;
  void clear_channel();
  static const int kChannelFieldNumber = 3;
  const ::mtproto::InputChannel& channel() const;
  ::mtproto::InputChannel* mutable_channel();
  ::mtproto::InputChannel* release_channel();
  void set_allocated_channel(::mtproto::InputChannel* channel);

  // .mtproto.ChannelMessagesFilter filter = 4;
  bool has_filter() const;
  void clear_filter();
  static const int kFilterFieldNumber = 4;
  const ::mtproto::ChannelMessagesFilter& filter() const;
  ::mtproto::ChannelMessagesFilter* mutable_filter();
  ::mtproto::ChannelMessagesFilter* release_filter();
  void set_allocated_filter(::mtproto::ChannelMessagesFilter* filter);

  // bool force = 2;
  void clear_force();
  static const int kForceFieldNumber = 2;
  bool force() const;
  void set_force(bool value);

  // int32 pts = 5;
  void clear_pts();
  static const int kPtsFieldNumber = 5;
  ::google::protobuf::int32 pts() const;
  void set_pts(::google::protobuf::int32 value);

  // int32 limit = 6;
  void clear_limit();
  static const int kLimitFieldNumber = 6;
  ::google::protobuf::int32 limit() const;
  void set_limit(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:mtproto.TL_updates_getChannelDifference)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::mtproto::InputChannel* channel_;
  ::mtproto::ChannelMessagesFilter* filter_;
  bool force_;
  ::google::protobuf::int32 pts_;
  ::google::protobuf::int32 limit_;
  mutable int _cached_size_;
  friend struct protobuf_schema_2etl_2esync_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TL_photos_updateProfilePhoto : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtproto.TL_photos_updateProfilePhoto) */ {
 public:
  TL_photos_updateProfilePhoto();
  virtual ~TL_photos_updateProfilePhoto();

  TL_photos_updateProfilePhoto(const TL_photos_updateProfilePhoto& from);

  inline TL_photos_updateProfilePhoto& operator=(const TL_photos_updateProfilePhoto& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TL_photos_updateProfilePhoto(TL_photos_updateProfilePhoto&& from) noexcept
    : TL_photos_updateProfilePhoto() {
    *this = ::std::move(from);
  }

  inline TL_photos_updateProfilePhoto& operator=(TL_photos_updateProfilePhoto&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TL_photos_updateProfilePhoto& default_instance();

  static inline const TL_photos_updateProfilePhoto* internal_default_instance() {
    return reinterpret_cast<const TL_photos_updateProfilePhoto*>(
               &_TL_photos_updateProfilePhoto_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    200;

  void Swap(TL_photos_updateProfilePhoto* other);
  friend void swap(TL_photos_updateProfilePhoto& a, TL_photos_updateProfilePhoto& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TL_photos_updateProfilePhoto* New() const PROTOBUF_FINAL { return New(NULL); }

  TL_photos_updateProfilePhoto* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TL_photos_updateProfilePhoto* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .mtproto.InputPhoto id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  const ::mtproto::InputPhoto& id() const;
  ::mtproto::InputPhoto* mutable_id();
  ::mtproto::InputPhoto* release_id();
  void set_allocated_id(::mtproto::InputPhoto* id);

  // @@protoc_insertion_point(class_scope:mtproto.TL_photos_updateProfilePhoto)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::mtproto::InputPhoto* id_;
  mutable int _cached_size_;
  friend struct protobuf_schema_2etl_2esync_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TL_photos_uploadProfilePhoto : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtproto.TL_photos_uploadProfilePhoto) */ {
 public:
  TL_photos_uploadProfilePhoto();
  virtual ~TL_photos_uploadProfilePhoto();

  TL_photos_uploadProfilePhoto(const TL_photos_uploadProfilePhoto& from);

  inline TL_photos_uploadProfilePhoto& operator=(const TL_photos_uploadProfilePhoto& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TL_photos_uploadProfilePhoto(TL_photos_uploadProfilePhoto&& from) noexcept
    : TL_photos_uploadProfilePhoto() {
    *this = ::std::move(from);
  }

  inline TL_photos_uploadProfilePhoto& operator=(TL_photos_uploadProfilePhoto&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TL_photos_uploadProfilePhoto& default_instance();

  static inline const TL_photos_uploadProfilePhoto* internal_default_instance() {
    return reinterpret_cast<const TL_photos_uploadProfilePhoto*>(
               &_TL_photos_uploadProfilePhoto_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    201;

  void Swap(TL_photos_uploadProfilePhoto* other);
  friend void swap(TL_photos_uploadProfilePhoto& a, TL_photos_uploadProfilePhoto& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TL_photos_uploadProfilePhoto* New() const PROTOBUF_FINAL { return New(NULL); }

  TL_photos_uploadProfilePhoto* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TL_photos_uploadProfilePhoto* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .mtproto.InputFile file = 1;
  bool has_file() const;
  void clear_file();
  static const int kFileFieldNumber = 1;
  const ::mtproto::InputFile& file() const;
  ::mtproto::InputFile* mutable_file();
  ::mtproto::InputFile* release_file();
  void set_allocated_file(::mtproto::InputFile* file);

  // @@protoc_insertion_point(class_scope:mtproto.TL_photos_uploadProfilePhoto)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::mtproto::InputFile* file_;
  mutable int _cached_size_;
  friend struct protobuf_schema_2etl_2esync_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TL_photos_deletePhotos : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtproto.TL_photos_deletePhotos) */ {
 public:
  TL_photos_deletePhotos();
  virtual ~TL_photos_deletePhotos();

  TL_photos_deletePhotos(const TL_photos_deletePhotos& from);

  inline TL_photos_deletePhotos& operator=(const TL_photos_deletePhotos& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TL_photos_deletePhotos(TL_photos_deletePhotos&& from) noexcept
    : TL_photos_deletePhotos() {
    *this = ::std::move(from);
  }

  inline TL_photos_deletePhotos& operator=(TL_photos_deletePhotos&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TL_photos_deletePhotos& default_instance();

  static inline const TL_photos_deletePhotos* internal_default_instance() {
    return reinterpret_cast<const TL_photos_deletePhotos*>(
               &_TL_photos_deletePhotos_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    202;

  void Swap(TL_photos_deletePhotos* other);
  friend void swap(TL_photos_deletePhotos& a, TL_photos_deletePhotos& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TL_photos_deletePhotos* New() const PROTOBUF_FINAL { return New(NULL); }

  TL_photos_deletePhotos* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TL_photos_deletePhotos* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .mtproto.InputPhoto id = 1;
  int id_size() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  const ::mtproto::InputPhoto& id(int index) const;
  ::mtproto::InputPhoto* mutable_id(int index);
  ::mtproto::InputPhoto* add_id();
  ::google::protobuf::RepeatedPtrField< ::mtproto::InputPhoto >*
      mutable_id();
  const ::google::protobuf::RepeatedPtrField< ::mtproto::InputPhoto >&
      id() const;

  // @@protoc_insertion_point(class_scope:mtproto.TL_photos_deletePhotos)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::mtproto::InputPhoto > id_;
  mutable int _cached_size_;
  friend struct protobuf_schema_2etl_2esync_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TL_photos_getUserPhotos : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtproto.TL_photos_getUserPhotos) */ {
 public:
  TL_photos_getUserPhotos();
  virtual ~TL_photos_getUserPhotos();

  TL_photos_getUserPhotos(const TL_photos_getUserPhotos& from);

  inline TL_photos_getUserPhotos& operator=(const TL_photos_getUserPhotos& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TL_photos_getUserPhotos(TL_photos_getUserPhotos&& from) noexcept
    : TL_photos_getUserPhotos() {
    *this = ::std::move(from);
  }

  inline TL_photos_getUserPhotos& operator=(TL_photos_getUserPhotos&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TL_photos_getUserPhotos& default_instance();

  static inline const TL_photos_getUserPhotos* internal_default_instance() {
    return reinterpret_cast<const TL_photos_getUserPhotos*>(
               &_TL_photos_getUserPhotos_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    203;

  void Swap(TL_photos_getUserPhotos* other);
  friend void swap(TL_photos_getUserPhotos& a, TL_photos_getUserPhotos& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TL_photos_getUserPhotos* New() const PROTOBUF_FINAL { return New(NULL); }

  TL_photos_getUserPhotos* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TL_photos_getUserPhotos* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .mtproto.InputUser user_id = 1;
  bool has_user_id() const;
  void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  const ::mtproto::InputUser& user_id() const;
  ::mtproto::InputUser* mutable_user_id();
  ::mtproto::InputUser* release_user_id();
  void set_allocated_user_id(::mtproto::InputUser* user_id);

  // int64 max_id = 3;
  void clear_max_id();
  static const int kMaxIdFieldNumber = 3;
  ::google::protobuf::int64 max_id() const;
  void set_max_id(::google::protobuf::int64 value);

  // int32 offset = 2;
  void clear_offset();
  static const int kOffsetFieldNumber = 2;
  ::google::protobuf::int32 offset() const;
  void set_offset(::google::protobuf::int32 value);

  // int32 limit = 4;
  void clear_limit();
  static const int kLimitFieldNumber = 4;
  ::google::protobuf::int32 limit() const;
  void set_limit(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:mtproto.TL_photos_getUserPhotos)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::mtproto::InputUser* user_id_;
  ::google::protobuf::int64 max_id_;
  ::google::protobuf::int32 offset_;
  ::google::protobuf::int32 limit_;
  mutable int _cached_size_;
  friend struct protobuf_schema_2etl_2esync_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TL_upload_saveFilePart : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtproto.TL_upload_saveFilePart) */ {
 public:
  TL_upload_saveFilePart();
  virtual ~TL_upload_saveFilePart();

  TL_upload_saveFilePart(const TL_upload_saveFilePart& from);

  inline TL_upload_saveFilePart& operator=(const TL_upload_saveFilePart& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TL_upload_saveFilePart(TL_upload_saveFilePart&& from) noexcept
    : TL_upload_saveFilePart() {
    *this = ::std::move(from);
  }

  inline TL_upload_saveFilePart& operator=(TL_upload_saveFilePart&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TL_upload_saveFilePart& default_instance();

  static inline const TL_upload_saveFilePart* internal_default_instance() {
    return reinterpret_cast<const TL_upload_saveFilePart*>(
               &_TL_upload_saveFilePart_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    204;

  void Swap(TL_upload_saveFilePart* other);
  friend void swap(TL_upload_saveFilePart& a, TL_upload_saveFilePart& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TL_upload_saveFilePart* New() const PROTOBUF_FINAL { return New(NULL); }

  TL_upload_saveFilePart* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TL_upload_saveFilePart* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes bytes = 3;
  void clear_bytes();
  static const int kBytesFieldNumber = 3;
  const ::std::string& bytes() const;
  void set_bytes(const ::std::string& value);
  #if LANG_CXX11
  void set_bytes(::std::string&& value);
  #endif
  void set_bytes(const char* value);
  void set_bytes(const void* value, size_t size);
  ::std::string* mutable_bytes();
  ::std::string* release_bytes();
  void set_allocated_bytes(::std::string* bytes);

  // int64 file_id = 1;
  void clear_file_id();
  static const int kFileIdFieldNumber = 1;
  ::google::protobuf::int64 file_id() const;
  void set_file_id(::google::protobuf::int64 value);

  // int32 file_part = 2;
  void clear_file_part();
  static const int kFilePartFieldNumber = 2;
  ::google::protobuf::int32 file_part() const;
  void set_file_part(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:mtproto.TL_upload_saveFilePart)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr bytes_;
  ::google::protobuf::int64 file_id_;
  ::google::protobuf::int32 file_part_;
  mutable int _cached_size_;
  friend struct protobuf_schema_2etl_2esync_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TL_upload_getFile : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtproto.TL_upload_getFile) */ {
 public:
  TL_upload_getFile();
  virtual ~TL_upload_getFile();

  TL_upload_getFile(const TL_upload_getFile& from);

  inline TL_upload_getFile& operator=(const TL_upload_getFile& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TL_upload_getFile(TL_upload_getFile&& from) noexcept
    : TL_upload_getFile() {
    *this = ::std::move(from);
  }

  inline TL_upload_getFile& operator=(TL_upload_getFile&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TL_upload_getFile& default_instance();

  static inline const TL_upload_getFile* internal_default_instance() {
    return reinterpret_cast<const TL_upload_getFile*>(
               &_TL_upload_getFile_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    205;

  void Swap(TL_upload_getFile* other);
  friend void swap(TL_upload_getFile& a, TL_upload_getFile& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TL_upload_getFile* New() const PROTOBUF_FINAL { return New(NULL); }

  TL_upload_getFile* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TL_upload_getFile* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .mtproto.InputFileLocation location = 1;
  bool has_location() const;
  void clear_location();
  static const int kLocationFieldNumber = 1;
  const ::mtproto::InputFileLocation& location() const;
  ::mtproto::InputFileLocation* mutable_location();
  ::mtproto::InputFileLocation* release_location();
  void set_allocated_location(::mtproto::InputFileLocation* location);

  // int32 offset = 2;
  void clear_offset();
  static const int kOffsetFieldNumber = 2;
  ::google::protobuf::int32 offset() const;
  void set_offset(::google::protobuf::int32 value);

  // int32 limit = 3;
  void clear_limit();
  static const int kLimitFieldNumber = 3;
  ::google::protobuf::int32 limit() const;
  void set_limit(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:mtproto.TL_upload_getFile)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::mtproto::InputFileLocation* location_;
  ::google::protobuf::int32 offset_;
  ::google::protobuf::int32 limit_;
  mutable int _cached_size_;
  friend struct protobuf_schema_2etl_2esync_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TL_upload_saveBigFilePart : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtproto.TL_upload_saveBigFilePart) */ {
 public:
  TL_upload_saveBigFilePart();
  virtual ~TL_upload_saveBigFilePart();

  TL_upload_saveBigFilePart(const TL_upload_saveBigFilePart& from);

  inline TL_upload_saveBigFilePart& operator=(const TL_upload_saveBigFilePart& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TL_upload_saveBigFilePart(TL_upload_saveBigFilePart&& from) noexcept
    : TL_upload_saveBigFilePart() {
    *this = ::std::move(from);
  }

  inline TL_upload_saveBigFilePart& operator=(TL_upload_saveBigFilePart&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TL_upload_saveBigFilePart& default_instance();

  static inline const TL_upload_saveBigFilePart* internal_default_instance() {
    return reinterpret_cast<const TL_upload_saveBigFilePart*>(
               &_TL_upload_saveBigFilePart_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    206;

  void Swap(TL_upload_saveBigFilePart* other);
  friend void swap(TL_upload_saveBigFilePart& a, TL_upload_saveBigFilePart& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TL_upload_saveBigFilePart* New() const PROTOBUF_FINAL { return New(NULL); }

  TL_upload_saveBigFilePart* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TL_upload_saveBigFilePart* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes bytes = 4;
  void clear_bytes();
  static const int kBytesFieldNumber = 4;
  const ::std::string& bytes() const;
  void set_bytes(const ::std::string& value);
  #if LANG_CXX11
  void set_bytes(::std::string&& value);
  #endif
  void set_bytes(const char* value);
  void set_bytes(const void* value, size_t size);
  ::std::string* mutable_bytes();
  ::std::string* release_bytes();
  void set_allocated_bytes(::std::string* bytes);

  // int64 file_id = 1;
  void clear_file_id();
  static const int kFileIdFieldNumber = 1;
  ::google::protobuf::int64 file_id() const;
  void set_file_id(::google::protobuf::int64 value);

  // int32 file_part = 2;
  void clear_file_part();
  static const int kFilePartFieldNumber = 2;
  ::google::protobuf::int32 file_part() const;
  void set_file_part(::google::protobuf::int32 value);

  // int32 file_total_parts = 3;
  void clear_file_total_parts();
  static const int kFileTotalPartsFieldNumber = 3;
  ::google::protobuf::int32 file_total_parts() const;
  void set_file_total_parts(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:mtproto.TL_upload_saveBigFilePart)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr bytes_;
  ::google::protobuf::int64 file_id_;
  ::google::protobuf::int32 file_part_;
  ::google::protobuf::int32 file_total_parts_;
  mutable int _cached_size_;
  friend struct protobuf_schema_2etl_2esync_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TL_upload_getWebFile : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtproto.TL_upload_getWebFile) */ {
 public:
  TL_upload_getWebFile();
  virtual ~TL_upload_getWebFile();

  TL_upload_getWebFile(const TL_upload_getWebFile& from);

  inline TL_upload_getWebFile& operator=(const TL_upload_getWebFile& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TL_upload_getWebFile(TL_upload_getWebFile&& from) noexcept
    : TL_upload_getWebFile() {
    *this = ::std::move(from);
  }

  inline TL_upload_getWebFile& operator=(TL_upload_getWebFile&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TL_upload_getWebFile& default_instance();

  static inline const TL_upload_getWebFile* internal_default_instance() {
    return reinterpret_cast<const TL_upload_getWebFile*>(
               &_TL_upload_getWebFile_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    207;

  void Swap(TL_upload_getWebFile* other);
  friend void swap(TL_upload_getWebFile& a, TL_upload_getWebFile& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TL_upload_getWebFile* New() const PROTOBUF_FINAL { return New(NULL); }

  TL_upload_getWebFile* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TL_upload_getWebFile* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .mtproto.InputWebFileLocation location = 1;
  bool has_location() const;
  void clear_location();
  static const int kLocationFieldNumber = 1;
  const ::mtproto::InputWebFileLocation& location() const;
  ::mtproto::InputWebFileLocation* mutable_location();
  ::mtproto::InputWebFileLocation* release_location();
  void set_allocated_location(::mtproto::InputWebFileLocation* location);

  // int32 offset = 2;
  void clear_offset();
  static const int kOffsetFieldNumber = 2;
  ::google::protobuf::int32 offset() const;
  void set_offset(::google::protobuf::int32 value);

  // int32 limit = 3;
  void clear_limit();
  static const int kLimitFieldNumber = 3;
  ::google::protobuf::int32 limit() const;
  void set_limit(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:mtproto.TL_upload_getWebFile)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::mtproto::InputWebFileLocation* location_;
  ::google::protobuf::int32 offset_;
  ::google::protobuf::int32 limit_;
  mutable int _cached_size_;
  friend struct protobuf_schema_2etl_2esync_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TL_upload_getCdnFile : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtproto.TL_upload_getCdnFile) */ {
 public:
  TL_upload_getCdnFile();
  virtual ~TL_upload_getCdnFile();

  TL_upload_getCdnFile(const TL_upload_getCdnFile& from);

  inline TL_upload_getCdnFile& operator=(const TL_upload_getCdnFile& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TL_upload_getCdnFile(TL_upload_getCdnFile&& from) noexcept
    : TL_upload_getCdnFile() {
    *this = ::std::move(from);
  }

  inline TL_upload_getCdnFile& operator=(TL_upload_getCdnFile&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TL_upload_getCdnFile& default_instance();

  static inline const TL_upload_getCdnFile* internal_default_instance() {
    return reinterpret_cast<const TL_upload_getCdnFile*>(
               &_TL_upload_getCdnFile_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    208;

  void Swap(TL_upload_getCdnFile* other);
  friend void swap(TL_upload_getCdnFile& a, TL_upload_getCdnFile& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TL_upload_getCdnFile* New() const PROTOBUF_FINAL { return New(NULL); }

  TL_upload_getCdnFile* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TL_upload_getCdnFile* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes file_token = 1;
  void clear_file_token();
  static const int kFileTokenFieldNumber = 1;
  const ::std::string& file_token() const;
  void set_file_token(const ::std::string& value);
  #if LANG_CXX11
  void set_file_token(::std::string&& value);
  #endif
  void set_file_token(const char* value);
  void set_file_token(const void* value, size_t size);
  ::std::string* mutable_file_token();
  ::std::string* release_file_token();
  void set_allocated_file_token(::std::string* file_token);

  // int32 offset = 2;
  void clear_offset();
  static const int kOffsetFieldNumber = 2;
  ::google::protobuf::int32 offset() const;
  void set_offset(::google::protobuf::int32 value);

  // int32 limit = 3;
  void clear_limit();
  static const int kLimitFieldNumber = 3;
  ::google::protobuf::int32 limit() const;
  void set_limit(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:mtproto.TL_upload_getCdnFile)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr file_token_;
  ::google::protobuf::int32 offset_;
  ::google::protobuf::int32 limit_;
  mutable int _cached_size_;
  friend struct protobuf_schema_2etl_2esync_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TL_upload_reuploadCdnFile : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtproto.TL_upload_reuploadCdnFile) */ {
 public:
  TL_upload_reuploadCdnFile();
  virtual ~TL_upload_reuploadCdnFile();

  TL_upload_reuploadCdnFile(const TL_upload_reuploadCdnFile& from);

  inline TL_upload_reuploadCdnFile& operator=(const TL_upload_reuploadCdnFile& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TL_upload_reuploadCdnFile(TL_upload_reuploadCdnFile&& from) noexcept
    : TL_upload_reuploadCdnFile() {
    *this = ::std::move(from);
  }

  inline TL_upload_reuploadCdnFile& operator=(TL_upload_reuploadCdnFile&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TL_upload_reuploadCdnFile& default_instance();

  static inline const TL_upload_reuploadCdnFile* internal_default_instance() {
    return reinterpret_cast<const TL_upload_reuploadCdnFile*>(
               &_TL_upload_reuploadCdnFile_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    209;

  void Swap(TL_upload_reuploadCdnFile* other);
  friend void swap(TL_upload_reuploadCdnFile& a, TL_upload_reuploadCdnFile& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TL_upload_reuploadCdnFile* New() const PROTOBUF_FINAL { return New(NULL); }

  TL_upload_reuploadCdnFile* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TL_upload_reuploadCdnFile* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes file_token = 1;
  void clear_file_token();
  static const int kFileTokenFieldNumber = 1;
  const ::std::string& file_token() const;
  void set_file_token(const ::std::string& value);
  #if LANG_CXX11
  void set_file_token(::std::string&& value);
  #endif
  void set_file_token(const char* value);
  void set_file_token(const void* value, size_t size);
  ::std::string* mutable_file_token();
  ::std::string* release_file_token();
  void set_allocated_file_token(::std::string* file_token);

  // bytes request_token = 2;
  void clear_request_token();
  static const int kRequestTokenFieldNumber = 2;
  const ::std::string& request_token() const;
  void set_request_token(const ::std::string& value);
  #if LANG_CXX11
  void set_request_token(::std::string&& value);
  #endif
  void set_request_token(const char* value);
  void set_request_token(const void* value, size_t size);
  ::std::string* mutable_request_token();
  ::std::string* release_request_token();
  void set_allocated_request_token(::std::string* request_token);

  // @@protoc_insertion_point(class_scope:mtproto.TL_upload_reuploadCdnFile)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr file_token_;
  ::google::protobuf::internal::ArenaStringPtr request_token_;
  mutable int _cached_size_;
  friend struct protobuf_schema_2etl_2esync_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TL_upload_getCdnFileHashes : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtproto.TL_upload_getCdnFileHashes) */ {
 public:
  TL_upload_getCdnFileHashes();
  virtual ~TL_upload_getCdnFileHashes();

  TL_upload_getCdnFileHashes(const TL_upload_getCdnFileHashes& from);

  inline TL_upload_getCdnFileHashes& operator=(const TL_upload_getCdnFileHashes& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TL_upload_getCdnFileHashes(TL_upload_getCdnFileHashes&& from) noexcept
    : TL_upload_getCdnFileHashes() {
    *this = ::std::move(from);
  }

  inline TL_upload_getCdnFileHashes& operator=(TL_upload_getCdnFileHashes&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TL_upload_getCdnFileHashes& default_instance();

  static inline const TL_upload_getCdnFileHashes* internal_default_instance() {
    return reinterpret_cast<const TL_upload_getCdnFileHashes*>(
               &_TL_upload_getCdnFileHashes_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    210;

  void Swap(TL_upload_getCdnFileHashes* other);
  friend void swap(TL_upload_getCdnFileHashes& a, TL_upload_getCdnFileHashes& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TL_upload_getCdnFileHashes* New() const PROTOBUF_FINAL { return New(NULL); }

  TL_upload_getCdnFileHashes* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TL_upload_getCdnFileHashes* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes file_token = 1;
  void clear_file_token();
  static const int kFileTokenFieldNumber = 1;
  const ::std::string& file_token() const;
  void set_file_token(const ::std::string& value);
  #if LANG_CXX11
  void set_file_token(::std::string&& value);
  #endif
  void set_file_token(const char* value);
  void set_file_token(const void* value, size_t size);
  ::std::string* mutable_file_token();
  ::std::string* release_file_token();
  void set_allocated_file_token(::std::string* file_token);

  // int32 offset = 2;
  void clear_offset();
  static const int kOffsetFieldNumber = 2;
  ::google::protobuf::int32 offset() const;
  void set_offset(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:mtproto.TL_upload_getCdnFileHashes)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr file_token_;
  ::google::protobuf::int32 offset_;
  mutable int _cached_size_;
  friend struct protobuf_schema_2etl_2esync_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TL_upload_getFileHashes : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtproto.TL_upload_getFileHashes) */ {
 public:
  TL_upload_getFileHashes();
  virtual ~TL_upload_getFileHashes();

  TL_upload_getFileHashes(const TL_upload_getFileHashes& from);

  inline TL_upload_getFileHashes& operator=(const TL_upload_getFileHashes& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TL_upload_getFileHashes(TL_upload_getFileHashes&& from) noexcept
    : TL_upload_getFileHashes() {
    *this = ::std::move(from);
  }

  inline TL_upload_getFileHashes& operator=(TL_upload_getFileHashes&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TL_upload_getFileHashes& default_instance();

  static inline const TL_upload_getFileHashes* internal_default_instance() {
    return reinterpret_cast<const TL_upload_getFileHashes*>(
               &_TL_upload_getFileHashes_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    211;

  void Swap(TL_upload_getFileHashes* other);
  friend void swap(TL_upload_getFileHashes& a, TL_upload_getFileHashes& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TL_upload_getFileHashes* New() const PROTOBUF_FINAL { return New(NULL); }

  TL_upload_getFileHashes* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TL_upload_getFileHashes* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .mtproto.InputFileLocation location = 1;
  bool has_location() const;
  void clear_location();
  static const int kLocationFieldNumber = 1;
  const ::mtproto::InputFileLocation& location() const;
  ::mtproto::InputFileLocation* mutable_location();
  ::mtproto::InputFileLocation* release_location();
  void set_allocated_location(::mtproto::InputFileLocation* location);

  // int32 offset = 2;
  void clear_offset();
  static const int kOffsetFieldNumber = 2;
  ::google::protobuf::int32 offset() const;
  void set_offset(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:mtproto.TL_upload_getFileHashes)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::mtproto::InputFileLocation* location_;
  ::google::protobuf::int32 offset_;
  mutable int _cached_size_;
  friend struct protobuf_schema_2etl_2esync_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TL_help_getConfig : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtproto.TL_help_getConfig) */ {
 public:
  TL_help_getConfig();
  virtual ~TL_help_getConfig();

  TL_help_getConfig(const TL_help_getConfig& from);

  inline TL_help_getConfig& operator=(const TL_help_getConfig& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TL_help_getConfig(TL_help_getConfig&& from) noexcept
    : TL_help_getConfig() {
    *this = ::std::move(from);
  }

  inline TL_help_getConfig& operator=(TL_help_getConfig&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TL_help_getConfig& default_instance();

  static inline const TL_help_getConfig* internal_default_instance() {
    return reinterpret_cast<const TL_help_getConfig*>(
               &_TL_help_getConfig_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    212;

  void Swap(TL_help_getConfig* other);
  friend void swap(TL_help_getConfig& a, TL_help_getConfig& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TL_help_getConfig* New() const PROTOBUF_FINAL { return New(NULL); }

  TL_help_getConfig* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TL_help_getConfig* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:mtproto.TL_help_getConfig)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable int _cached_size_;
  friend struct protobuf_schema_2etl_2esync_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TL_help_getNearestDc : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtproto.TL_help_getNearestDc) */ {
 public:
  TL_help_getNearestDc();
  virtual ~TL_help_getNearestDc();

  TL_help_getNearestDc(const TL_help_getNearestDc& from);

  inline TL_help_getNearestDc& operator=(const TL_help_getNearestDc& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TL_help_getNearestDc(TL_help_getNearestDc&& from) noexcept
    : TL_help_getNearestDc() {
    *this = ::std::move(from);
  }

  inline TL_help_getNearestDc& operator=(TL_help_getNearestDc&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TL_help_getNearestDc& default_instance();

  static inline const TL_help_getNearestDc* internal_default_instance() {
    return reinterpret_cast<const TL_help_getNearestDc*>(
               &_TL_help_getNearestDc_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    213;

  void Swap(TL_help_getNearestDc* other);
  friend void swap(TL_help_getNearestDc& a, TL_help_getNearestDc& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TL_help_getNearestDc* New() const PROTOBUF_FINAL { return New(NULL); }

  TL_help_getNearestDc* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TL_help_getNearestDc* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:mtproto.TL_help_getNearestDc)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable int _cached_size_;
  friend struct protobuf_schema_2etl_2esync_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TL_help_getAppUpdate : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtproto.TL_help_getAppUpdate) */ {
 public:
  TL_help_getAppUpdate();
  virtual ~TL_help_getAppUpdate();

  TL_help_getAppUpdate(const TL_help_getAppUpdate& from);

  inline TL_help_getAppUpdate& operator=(const TL_help_getAppUpdate& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TL_help_getAppUpdate(TL_help_getAppUpdate&& from) noexcept
    : TL_help_getAppUpdate() {
    *this = ::std::move(from);
  }

  inline TL_help_getAppUpdate& operator=(TL_help_getAppUpdate&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TL_help_getAppUpdate& default_instance();

  static inline const TL_help_getAppUpdate* internal_default_instance() {
    return reinterpret_cast<const TL_help_getAppUpdate*>(
               &_TL_help_getAppUpdate_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    214;

  void Swap(TL_help_getAppUpdate* other);
  friend void swap(TL_help_getAppUpdate& a, TL_help_getAppUpdate& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TL_help_getAppUpdate* New() const PROTOBUF_FINAL { return New(NULL); }

  TL_help_getAppUpdate* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TL_help_getAppUpdate* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string source = 1;
  void clear_source();
  static const int kSourceFieldNumber = 1;
  const ::std::string& source() const;
  void set_source(const ::std::string& value);
  #if LANG_CXX11
  void set_source(::std::string&& value);
  #endif
  void set_source(const char* value);
  void set_source(const char* value, size_t size);
  ::std::string* mutable_source();
  ::std::string* release_source();
  void set_allocated_source(::std::string* source);

  // @@protoc_insertion_point(class_scope:mtproto.TL_help_getAppUpdate)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr source_;
  mutable int _cached_size_;
  friend struct protobuf_schema_2etl_2esync_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TL_help_saveAppLog : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtproto.TL_help_saveAppLog) */ {
 public:
  TL_help_saveAppLog();
  virtual ~TL_help_saveAppLog();

  TL_help_saveAppLog(const TL_help_saveAppLog& from);

  inline TL_help_saveAppLog& operator=(const TL_help_saveAppLog& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TL_help_saveAppLog(TL_help_saveAppLog&& from) noexcept
    : TL_help_saveAppLog() {
    *this = ::std::move(from);
  }

  inline TL_help_saveAppLog& operator=(TL_help_saveAppLog&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TL_help_saveAppLog& default_instance();

  static inline const TL_help_saveAppLog* internal_default_instance() {
    return reinterpret_cast<const TL_help_saveAppLog*>(
               &_TL_help_saveAppLog_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    215;

  void Swap(TL_help_saveAppLog* other);
  friend void swap(TL_help_saveAppLog& a, TL_help_saveAppLog& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TL_help_saveAppLog* New() const PROTOBUF_FINAL { return New(NULL); }

  TL_help_saveAppLog* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TL_help_saveAppLog* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .mtproto.InputAppEvent events = 1;
  int events_size() const;
  void clear_events();
  static const int kEventsFieldNumber = 1;
  const ::mtproto::InputAppEvent& events(int index) const;
  ::mtproto::InputAppEvent* mutable_events(int index);
  ::mtproto::InputAppEvent* add_events();
  ::google::protobuf::RepeatedPtrField< ::mtproto::InputAppEvent >*
      mutable_events();
  const ::google::protobuf::RepeatedPtrField< ::mtproto::InputAppEvent >&
      events() const;

  // @@protoc_insertion_point(class_scope:mtproto.TL_help_saveAppLog)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::mtproto::InputAppEvent > events_;
  mutable int _cached_size_;
  friend struct protobuf_schema_2etl_2esync_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TL_help_getInviteText : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtproto.TL_help_getInviteText) */ {
 public:
  TL_help_getInviteText();
  virtual ~TL_help_getInviteText();

  TL_help_getInviteText(const TL_help_getInviteText& from);

  inline TL_help_getInviteText& operator=(const TL_help_getInviteText& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TL_help_getInviteText(TL_help_getInviteText&& from) noexcept
    : TL_help_getInviteText() {
    *this = ::std::move(from);
  }

  inline TL_help_getInviteText& operator=(TL_help_getInviteText&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TL_help_getInviteText& default_instance();

  static inline const TL_help_getInviteText* internal_default_instance() {
    return reinterpret_cast<const TL_help_getInviteText*>(
               &_TL_help_getInviteText_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    216;

  void Swap(TL_help_getInviteText* other);
  friend void swap(TL_help_getInviteText& a, TL_help_getInviteText& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TL_help_getInviteText* New() const PROTOBUF_FINAL { return New(NULL); }

  TL_help_getInviteText* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TL_help_getInviteText* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:mtproto.TL_help_getInviteText)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable int _cached_size_;
  friend struct protobuf_schema_2etl_2esync_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TL_help_getSupport : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtproto.TL_help_getSupport) */ {
 public:
  TL_help_getSupport();
  virtual ~TL_help_getSupport();

  TL_help_getSupport(const TL_help_getSupport& from);

  inline TL_help_getSupport& operator=(const TL_help_getSupport& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TL_help_getSupport(TL_help_getSupport&& from) noexcept
    : TL_help_getSupport() {
    *this = ::std::move(from);
  }

  inline TL_help_getSupport& operator=(TL_help_getSupport&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TL_help_getSupport& default_instance();

  static inline const TL_help_getSupport* internal_default_instance() {
    return reinterpret_cast<const TL_help_getSupport*>(
               &_TL_help_getSupport_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    217;

  void Swap(TL_help_getSupport* other);
  friend void swap(TL_help_getSupport& a, TL_help_getSupport& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TL_help_getSupport* New() const PROTOBUF_FINAL { return New(NULL); }

  TL_help_getSupport* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TL_help_getSupport* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:mtproto.TL_help_getSupport)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable int _cached_size_;
  friend struct protobuf_schema_2etl_2esync_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TL_help_getAppChangelog : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtproto.TL_help_getAppChangelog) */ {
 public:
  TL_help_getAppChangelog();
  virtual ~TL_help_getAppChangelog();

  TL_help_getAppChangelog(const TL_help_getAppChangelog& from);

  inline TL_help_getAppChangelog& operator=(const TL_help_getAppChangelog& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TL_help_getAppChangelog(TL_help_getAppChangelog&& from) noexcept
    : TL_help_getAppChangelog() {
    *this = ::std::move(from);
  }

  inline TL_help_getAppChangelog& operator=(TL_help_getAppChangelog&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TL_help_getAppChangelog& default_instance();

  static inline const TL_help_getAppChangelog* internal_default_instance() {
    return reinterpret_cast<const TL_help_getAppChangelog*>(
               &_TL_help_getAppChangelog_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    218;

  void Swap(TL_help_getAppChangelog* other);
  friend void swap(TL_help_getAppChangelog& a, TL_help_getAppChangelog& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TL_help_getAppChangelog* New() const PROTOBUF_FINAL { return New(NULL); }

  TL_help_getAppChangelog* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TL_help_getAppChangelog* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string prev_app_version = 1;
  void clear_prev_app_version();
  static const int kPrevAppVersionFieldNumber = 1;
  const ::std::string& prev_app_version() const;
  void set_prev_app_version(const ::std::string& value);
  #if LANG_CXX11
  void set_prev_app_version(::std::string&& value);
  #endif
  void set_prev_app_version(const char* value);
  void set_prev_app_version(const char* value, size_t size);
  ::std::string* mutable_prev_app_version();
  ::std::string* release_prev_app_version();
  void set_allocated_prev_app_version(::std::string* prev_app_version);

  // @@protoc_insertion_point(class_scope:mtproto.TL_help_getAppChangelog)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr prev_app_version_;
  mutable int _cached_size_;
  friend struct protobuf_schema_2etl_2esync_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TL_help_setBotUpdatesStatus : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtproto.TL_help_setBotUpdatesStatus) */ {
 public:
  TL_help_setBotUpdatesStatus();
  virtual ~TL_help_setBotUpdatesStatus();

  TL_help_setBotUpdatesStatus(const TL_help_setBotUpdatesStatus& from);

  inline TL_help_setBotUpdatesStatus& operator=(const TL_help_setBotUpdatesStatus& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TL_help_setBotUpdatesStatus(TL_help_setBotUpdatesStatus&& from) noexcept
    : TL_help_setBotUpdatesStatus() {
    *this = ::std::move(from);
  }

  inline TL_help_setBotUpdatesStatus& operator=(TL_help_setBotUpdatesStatus&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TL_help_setBotUpdatesStatus& default_instance();

  static inline const TL_help_setBotUpdatesStatus* internal_default_instance() {
    return reinterpret_cast<const TL_help_setBotUpdatesStatus*>(
               &_TL_help_setBotUpdatesStatus_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    219;

  void Swap(TL_help_setBotUpdatesStatus* other);
  friend void swap(TL_help_setBotUpdatesStatus& a, TL_help_setBotUpdatesStatus& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TL_help_setBotUpdatesStatus* New() const PROTOBUF_FINAL { return New(NULL); }

  TL_help_setBotUpdatesStatus* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TL_help_setBotUpdatesStatus* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string message = 2;
  void clear_message();
  static const int kMessageFieldNumber = 2;
  const ::std::string& message() const;
  void set_message(const ::std::string& value);
  #if LANG_CXX11
  void set_message(::std::string&& value);
  #endif
  void set_message(const char* value);
  void set_message(const char* value, size_t size);
  ::std::string* mutable_message();
  ::std::string* release_message();
  void set_allocated_message(::std::string* message);

  // int32 pending_updates_count = 1;
  void clear_pending_updates_count();
  static const int kPendingUpdatesCountFieldNumber = 1;
  ::google::protobuf::int32 pending_updates_count() const;
  void set_pending_updates_count(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:mtproto.TL_help_setBotUpdatesStatus)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr message_;
  ::google::protobuf::int32 pending_updates_count_;
  mutable int _cached_size_;
  friend struct protobuf_schema_2etl_2esync_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TL_help_getCdnConfig : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtproto.TL_help_getCdnConfig) */ {
 public:
  TL_help_getCdnConfig();
  virtual ~TL_help_getCdnConfig();

  TL_help_getCdnConfig(const TL_help_getCdnConfig& from);

  inline TL_help_getCdnConfig& operator=(const TL_help_getCdnConfig& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TL_help_getCdnConfig(TL_help_getCdnConfig&& from) noexcept
    : TL_help_getCdnConfig() {
    *this = ::std::move(from);
  }

  inline TL_help_getCdnConfig& operator=(TL_help_getCdnConfig&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TL_help_getCdnConfig& default_instance();

  static inline const TL_help_getCdnConfig* internal_default_instance() {
    return reinterpret_cast<const TL_help_getCdnConfig*>(
               &_TL_help_getCdnConfig_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    220;

  void Swap(TL_help_getCdnConfig* other);
  friend void swap(TL_help_getCdnConfig& a, TL_help_getCdnConfig& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TL_help_getCdnConfig* New() const PROTOBUF_FINAL { return New(NULL); }

  TL_help_getCdnConfig* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TL_help_getCdnConfig* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:mtproto.TL_help_getCdnConfig)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable int _cached_size_;
  friend struct protobuf_schema_2etl_2esync_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TL_help_getRecentMeUrls : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtproto.TL_help_getRecentMeUrls) */ {
 public:
  TL_help_getRecentMeUrls();
  virtual ~TL_help_getRecentMeUrls();

  TL_help_getRecentMeUrls(const TL_help_getRecentMeUrls& from);

  inline TL_help_getRecentMeUrls& operator=(const TL_help_getRecentMeUrls& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TL_help_getRecentMeUrls(TL_help_getRecentMeUrls&& from) noexcept
    : TL_help_getRecentMeUrls() {
    *this = ::std::move(from);
  }

  inline TL_help_getRecentMeUrls& operator=(TL_help_getRecentMeUrls&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TL_help_getRecentMeUrls& default_instance();

  static inline const TL_help_getRecentMeUrls* internal_default_instance() {
    return reinterpret_cast<const TL_help_getRecentMeUrls*>(
               &_TL_help_getRecentMeUrls_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    221;

  void Swap(TL_help_getRecentMeUrls* other);
  friend void swap(TL_help_getRecentMeUrls& a, TL_help_getRecentMeUrls& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TL_help_getRecentMeUrls* New() const PROTOBUF_FINAL { return New(NULL); }

  TL_help_getRecentMeUrls* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TL_help_getRecentMeUrls* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string referer = 1;
  void clear_referer();
  static const int kRefererFieldNumber = 1;
  const ::std::string& referer() const;
  void set_referer(const ::std::string& value);
  #if LANG_CXX11
  void set_referer(::std::string&& value);
  #endif
  void set_referer(const char* value);
  void set_referer(const char* value, size_t size);
  ::std::string* mutable_referer();
  ::std::string* release_referer();
  void set_allocated_referer(::std::string* referer);

  // @@protoc_insertion_point(class_scope:mtproto.TL_help_getRecentMeUrls)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr referer_;
  mutable int _cached_size_;
  friend struct protobuf_schema_2etl_2esync_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TL_help_getProxyData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtproto.TL_help_getProxyData) */ {
 public:
  TL_help_getProxyData();
  virtual ~TL_help_getProxyData();

  TL_help_getProxyData(const TL_help_getProxyData& from);

  inline TL_help_getProxyData& operator=(const TL_help_getProxyData& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TL_help_getProxyData(TL_help_getProxyData&& from) noexcept
    : TL_help_getProxyData() {
    *this = ::std::move(from);
  }

  inline TL_help_getProxyData& operator=(TL_help_getProxyData&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TL_help_getProxyData& default_instance();

  static inline const TL_help_getProxyData* internal_default_instance() {
    return reinterpret_cast<const TL_help_getProxyData*>(
               &_TL_help_getProxyData_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    222;

  void Swap(TL_help_getProxyData* other);
  friend void swap(TL_help_getProxyData& a, TL_help_getProxyData& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TL_help_getProxyData* New() const PROTOBUF_FINAL { return New(NULL); }

  TL_help_getProxyData* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TL_help_getProxyData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:mtproto.TL_help_getProxyData)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable int _cached_size_;
  friend struct protobuf_schema_2etl_2esync_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TL_help_getTermsOfServiceUpdate : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtproto.TL_help_getTermsOfServiceUpdate) */ {
 public:
  TL_help_getTermsOfServiceUpdate();
  virtual ~TL_help_getTermsOfServiceUpdate();

  TL_help_getTermsOfServiceUpdate(const TL_help_getTermsOfServiceUpdate& from);

  inline TL_help_getTermsOfServiceUpdate& operator=(const TL_help_getTermsOfServiceUpdate& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TL_help_getTermsOfServiceUpdate(TL_help_getTermsOfServiceUpdate&& from) noexcept
    : TL_help_getTermsOfServiceUpdate() {
    *this = ::std::move(from);
  }

  inline TL_help_getTermsOfServiceUpdate& operator=(TL_help_getTermsOfServiceUpdate&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TL_help_getTermsOfServiceUpdate& default_instance();

  static inline const TL_help_getTermsOfServiceUpdate* internal_default_instance() {
    return reinterpret_cast<const TL_help_getTermsOfServiceUpdate*>(
               &_TL_help_getTermsOfServiceUpdate_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    223;

  void Swap(TL_help_getTermsOfServiceUpdate* other);
  friend void swap(TL_help_getTermsOfServiceUpdate& a, TL_help_getTermsOfServiceUpdate& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TL_help_getTermsOfServiceUpdate* New() const PROTOBUF_FINAL { return New(NULL); }

  TL_help_getTermsOfServiceUpdate* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TL_help_getTermsOfServiceUpdate* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:mtproto.TL_help_getTermsOfServiceUpdate)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable int _cached_size_;
  friend struct protobuf_schema_2etl_2esync_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TL_help_acceptTermsOfService : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtproto.TL_help_acceptTermsOfService) */ {
 public:
  TL_help_acceptTermsOfService();
  virtual ~TL_help_acceptTermsOfService();

  TL_help_acceptTermsOfService(const TL_help_acceptTermsOfService& from);

  inline TL_help_acceptTermsOfService& operator=(const TL_help_acceptTermsOfService& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TL_help_acceptTermsOfService(TL_help_acceptTermsOfService&& from) noexcept
    : TL_help_acceptTermsOfService() {
    *this = ::std::move(from);
  }

  inline TL_help_acceptTermsOfService& operator=(TL_help_acceptTermsOfService&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TL_help_acceptTermsOfService& default_instance();

  static inline const TL_help_acceptTermsOfService* internal_default_instance() {
    return reinterpret_cast<const TL_help_acceptTermsOfService*>(
               &_TL_help_acceptTermsOfService_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    224;

  void Swap(TL_help_acceptTermsOfService* other);
  friend void swap(TL_help_acceptTermsOfService& a, TL_help_acceptTermsOfService& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TL_help_acceptTermsOfService* New() const PROTOBUF_FINAL { return New(NULL); }

  TL_help_acceptTermsOfService* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TL_help_acceptTermsOfService* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .mtproto.DataJSON id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  const ::mtproto::DataJSON& id() const;
  ::mtproto::DataJSON* mutable_id();
  ::mtproto::DataJSON* release_id();
  void set_allocated_id(::mtproto::DataJSON* id);

  // @@protoc_insertion_point(class_scope:mtproto.TL_help_acceptTermsOfService)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::mtproto::DataJSON* id_;
  mutable int _cached_size_;
  friend struct protobuf_schema_2etl_2esync_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TL_help_getDeepLinkInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtproto.TL_help_getDeepLinkInfo) */ {
 public:
  TL_help_getDeepLinkInfo();
  virtual ~TL_help_getDeepLinkInfo();

  TL_help_getDeepLinkInfo(const TL_help_getDeepLinkInfo& from);

  inline TL_help_getDeepLinkInfo& operator=(const TL_help_getDeepLinkInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TL_help_getDeepLinkInfo(TL_help_getDeepLinkInfo&& from) noexcept
    : TL_help_getDeepLinkInfo() {
    *this = ::std::move(from);
  }

  inline TL_help_getDeepLinkInfo& operator=(TL_help_getDeepLinkInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TL_help_getDeepLinkInfo& default_instance();

  static inline const TL_help_getDeepLinkInfo* internal_default_instance() {
    return reinterpret_cast<const TL_help_getDeepLinkInfo*>(
               &_TL_help_getDeepLinkInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    225;

  void Swap(TL_help_getDeepLinkInfo* other);
  friend void swap(TL_help_getDeepLinkInfo& a, TL_help_getDeepLinkInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TL_help_getDeepLinkInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  TL_help_getDeepLinkInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TL_help_getDeepLinkInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string path = 1;
  void clear_path();
  static const int kPathFieldNumber = 1;
  const ::std::string& path() const;
  void set_path(const ::std::string& value);
  #if LANG_CXX11
  void set_path(::std::string&& value);
  #endif
  void set_path(const char* value);
  void set_path(const char* value, size_t size);
  ::std::string* mutable_path();
  ::std::string* release_path();
  void set_allocated_path(::std::string* path);

  // @@protoc_insertion_point(class_scope:mtproto.TL_help_getDeepLinkInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr path_;
  mutable int _cached_size_;
  friend struct protobuf_schema_2etl_2esync_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TL_help_getPassportConfig : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtproto.TL_help_getPassportConfig) */ {
 public:
  TL_help_getPassportConfig();
  virtual ~TL_help_getPassportConfig();

  TL_help_getPassportConfig(const TL_help_getPassportConfig& from);

  inline TL_help_getPassportConfig& operator=(const TL_help_getPassportConfig& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TL_help_getPassportConfig(TL_help_getPassportConfig&& from) noexcept
    : TL_help_getPassportConfig() {
    *this = ::std::move(from);
  }

  inline TL_help_getPassportConfig& operator=(TL_help_getPassportConfig&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TL_help_getPassportConfig& default_instance();

  static inline const TL_help_getPassportConfig* internal_default_instance() {
    return reinterpret_cast<const TL_help_getPassportConfig*>(
               &_TL_help_getPassportConfig_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    226;

  void Swap(TL_help_getPassportConfig* other);
  friend void swap(TL_help_getPassportConfig& a, TL_help_getPassportConfig& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TL_help_getPassportConfig* New() const PROTOBUF_FINAL { return New(NULL); }

  TL_help_getPassportConfig* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TL_help_getPassportConfig* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 hash = 1;
  void clear_hash();
  static const int kHashFieldNumber = 1;
  ::google::protobuf::int32 hash() const;
  void set_hash(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:mtproto.TL_help_getPassportConfig)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 hash_;
  mutable int _cached_size_;
  friend struct protobuf_schema_2etl_2esync_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TL_channels_readHistory : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtproto.TL_channels_readHistory) */ {
 public:
  TL_channels_readHistory();
  virtual ~TL_channels_readHistory();

  TL_channels_readHistory(const TL_channels_readHistory& from);

  inline TL_channels_readHistory& operator=(const TL_channels_readHistory& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TL_channels_readHistory(TL_channels_readHistory&& from) noexcept
    : TL_channels_readHistory() {
    *this = ::std::move(from);
  }

  inline TL_channels_readHistory& operator=(TL_channels_readHistory&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TL_channels_readHistory& default_instance();

  static inline const TL_channels_readHistory* internal_default_instance() {
    return reinterpret_cast<const TL_channels_readHistory*>(
               &_TL_channels_readHistory_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    227;

  void Swap(TL_channels_readHistory* other);
  friend void swap(TL_channels_readHistory& a, TL_channels_readHistory& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TL_channels_readHistory* New() const PROTOBUF_FINAL { return New(NULL); }

  TL_channels_readHistory* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TL_channels_readHistory* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .mtproto.InputChannel channel = 1;
  bool has_channel() const;
  void clear_channel();
  static const int kChannelFieldNumber = 1;
  const ::mtproto::InputChannel& channel() const;
  ::mtproto::InputChannel* mutable_channel();
  ::mtproto::InputChannel* release_channel();
  void set_allocated_channel(::mtproto::InputChannel* channel);

  // int32 max_id = 2;
  void clear_max_id();
  static const int kMaxIdFieldNumber = 2;
  ::google::protobuf::int32 max_id() const;
  void set_max_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:mtproto.TL_channels_readHistory)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::mtproto::InputChannel* channel_;
  ::google::protobuf::int32 max_id_;
  mutable int _cached_size_;
  friend struct protobuf_schema_2etl_2esync_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TL_channels_deleteMessages : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtproto.TL_channels_deleteMessages) */ {
 public:
  TL_channels_deleteMessages();
  virtual ~TL_channels_deleteMessages();

  TL_channels_deleteMessages(const TL_channels_deleteMessages& from);

  inline TL_channels_deleteMessages& operator=(const TL_channels_deleteMessages& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TL_channels_deleteMessages(TL_channels_deleteMessages&& from) noexcept
    : TL_channels_deleteMessages() {
    *this = ::std::move(from);
  }

  inline TL_channels_deleteMessages& operator=(TL_channels_deleteMessages&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TL_channels_deleteMessages& default_instance();

  static inline const TL_channels_deleteMessages* internal_default_instance() {
    return reinterpret_cast<const TL_channels_deleteMessages*>(
               &_TL_channels_deleteMessages_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    228;

  void Swap(TL_channels_deleteMessages* other);
  friend void swap(TL_channels_deleteMessages& a, TL_channels_deleteMessages& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TL_channels_deleteMessages* New() const PROTOBUF_FINAL { return New(NULL); }

  TL_channels_deleteMessages* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TL_channels_deleteMessages* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 id = 2;
  int id_size() const;
  void clear_id();
  static const int kIdFieldNumber = 2;
  ::google::protobuf::int32 id(int index) const;
  void set_id(int index, ::google::protobuf::int32 value);
  void add_id(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      id() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_id();

  // .mtproto.InputChannel channel = 1;
  bool has_channel() const;
  void clear_channel();
  static const int kChannelFieldNumber = 1;
  const ::mtproto::InputChannel& channel() const;
  ::mtproto::InputChannel* mutable_channel();
  ::mtproto::InputChannel* release_channel();
  void set_allocated_channel(::mtproto::InputChannel* channel);

  // @@protoc_insertion_point(class_scope:mtproto.TL_channels_deleteMessages)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > id_;
  ::mtproto::InputChannel* channel_;
  mutable int _cached_size_;
  friend struct protobuf_schema_2etl_2esync_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TL_channels_deleteUserHistory : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtproto.TL_channels_deleteUserHistory) */ {
 public:
  TL_channels_deleteUserHistory();
  virtual ~TL_channels_deleteUserHistory();

  TL_channels_deleteUserHistory(const TL_channels_deleteUserHistory& from);

  inline TL_channels_deleteUserHistory& operator=(const TL_channels_deleteUserHistory& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TL_channels_deleteUserHistory(TL_channels_deleteUserHistory&& from) noexcept
    : TL_channels_deleteUserHistory() {
    *this = ::std::move(from);
  }

  inline TL_channels_deleteUserHistory& operator=(TL_channels_deleteUserHistory&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TL_channels_deleteUserHistory& default_instance();

  static inline const TL_channels_deleteUserHistory* internal_default_instance() {
    return reinterpret_cast<const TL_channels_deleteUserHistory*>(
               &_TL_channels_deleteUserHistory_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    229;

  void Swap(TL_channels_deleteUserHistory* other);
  friend void swap(TL_channels_deleteUserHistory& a, TL_channels_deleteUserHistory& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TL_channels_deleteUserHistory* New() const PROTOBUF_FINAL { return New(NULL); }

  TL_channels_deleteUserHistory* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TL_channels_deleteUserHistory* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .mtproto.InputChannel channel = 1;
  bool has_channel() const;
  void clear_channel();
  static const int kChannelFieldNumber = 1;
  const ::mtproto::InputChannel& channel() const;
  ::mtproto::InputChannel* mutable_channel();
  ::mtproto::InputChannel* release_channel();
  void set_allocated_channel(::mtproto::InputChannel* channel);

  // .mtproto.InputUser user_id = 2;
  bool has_user_id() const;
  void clear_user_id();
  static const int kUserIdFieldNumber = 2;
  const ::mtproto::InputUser& user_id() const;
  ::mtproto::InputUser* mutable_user_id();
  ::mtproto::InputUser* release_user_id();
  void set_allocated_user_id(::mtproto::InputUser* user_id);

  // @@protoc_insertion_point(class_scope:mtproto.TL_channels_deleteUserHistory)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::mtproto::InputChannel* channel_;
  ::mtproto::InputUser* user_id_;
  mutable int _cached_size_;
  friend struct protobuf_schema_2etl_2esync_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TL_channels_reportSpam : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtproto.TL_channels_reportSpam) */ {
 public:
  TL_channels_reportSpam();
  virtual ~TL_channels_reportSpam();

  TL_channels_reportSpam(const TL_channels_reportSpam& from);

  inline TL_channels_reportSpam& operator=(const TL_channels_reportSpam& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TL_channels_reportSpam(TL_channels_reportSpam&& from) noexcept
    : TL_channels_reportSpam() {
    *this = ::std::move(from);
  }

  inline TL_channels_reportSpam& operator=(TL_channels_reportSpam&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TL_channels_reportSpam& default_instance();

  static inline const TL_channels_reportSpam* internal_default_instance() {
    return reinterpret_cast<const TL_channels_reportSpam*>(
               &_TL_channels_reportSpam_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    230;

  void Swap(TL_channels_reportSpam* other);
  friend void swap(TL_channels_reportSpam& a, TL_channels_reportSpam& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TL_channels_reportSpam* New() const PROTOBUF_FINAL { return New(NULL); }

  TL_channels_reportSpam* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TL_channels_reportSpam* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 id = 3;
  int id_size() const;
  void clear_id();
  static const int kIdFieldNumber = 3;
  ::google::protobuf::int32 id(int index) const;
  void set_id(int index, ::google::protobuf::int32 value);
  void add_id(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      id() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_id();

  // .mtproto.InputChannel channel = 1;
  bool has_channel() const;
  void clear_channel();
  static const int kChannelFieldNumber = 1;
  const ::mtproto::InputChannel& channel() const;
  ::mtproto::InputChannel* mutable_channel();
  ::mtproto::InputChannel* release_channel();
  void set_allocated_channel(::mtproto::InputChannel* channel);

  // .mtproto.InputUser user_id = 2;
  bool has_user_id() const;
  void clear_user_id();
  static const int kUserIdFieldNumber = 2;
  const ::mtproto::InputUser& user_id() const;
  ::mtproto::InputUser* mutable_user_id();
  ::mtproto::InputUser* release_user_id();
  void set_allocated_user_id(::mtproto::InputUser* user_id);

  // @@protoc_insertion_point(class_scope:mtproto.TL_channels_reportSpam)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > id_;
  ::mtproto::InputChannel* channel_;
  ::mtproto::InputUser* user_id_;
  mutable int _cached_size_;
  friend struct protobuf_schema_2etl_2esync_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TL_channels_getMessages : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtproto.TL_channels_getMessages) */ {
 public:
  TL_channels_getMessages();
  virtual ~TL_channels_getMessages();

  TL_channels_getMessages(const TL_channels_getMessages& from);

  inline TL_channels_getMessages& operator=(const TL_channels_getMessages& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TL_channels_getMessages(TL_channels_getMessages&& from) noexcept
    : TL_channels_getMessages() {
    *this = ::std::move(from);
  }

  inline TL_channels_getMessages& operator=(TL_channels_getMessages&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TL_channels_getMessages& default_instance();

  static inline const TL_channels_getMessages* internal_default_instance() {
    return reinterpret_cast<const TL_channels_getMessages*>(
               &_TL_channels_getMessages_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    231;

  void Swap(TL_channels_getMessages* other);
  friend void swap(TL_channels_getMessages& a, TL_channels_getMessages& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TL_channels_getMessages* New() const PROTOBUF_FINAL { return New(NULL); }

  TL_channels_getMessages* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TL_channels_getMessages* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .mtproto.InputMessage id = 2;
  int id_size() const;
  void clear_id();
  static const int kIdFieldNumber = 2;
  const ::mtproto::InputMessage& id(int index) const;
  ::mtproto::InputMessage* mutable_id(int index);
  ::mtproto::InputMessage* add_id();
  ::google::protobuf::RepeatedPtrField< ::mtproto::InputMessage >*
      mutable_id();
  const ::google::protobuf::RepeatedPtrField< ::mtproto::InputMessage >&
      id() const;

  // .mtproto.InputChannel channel = 1;
  bool has_channel() const;
  void clear_channel();
  static const int kChannelFieldNumber = 1;
  const ::mtproto::InputChannel& channel() const;
  ::mtproto::InputChannel* mutable_channel();
  ::mtproto::InputChannel* release_channel();
  void set_allocated_channel(::mtproto::InputChannel* channel);

  // @@protoc_insertion_point(class_scope:mtproto.TL_channels_getMessages)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::mtproto::InputMessage > id_;
  ::mtproto::InputChannel* channel_;
  mutable int _cached_size_;
  friend struct protobuf_schema_2etl_2esync_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TL_channels_getParticipants : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtproto.TL_channels_getParticipants) */ {
 public:
  TL_channels_getParticipants();
  virtual ~TL_channels_getParticipants();

  TL_channels_getParticipants(const TL_channels_getParticipants& from);

  inline TL_channels_getParticipants& operator=(const TL_channels_getParticipants& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TL_channels_getParticipants(TL_channels_getParticipants&& from) noexcept
    : TL_channels_getParticipants() {
    *this = ::std::move(from);
  }

  inline TL_channels_getParticipants& operator=(TL_channels_getParticipants&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TL_channels_getParticipants& default_instance();

  static inline const TL_channels_getParticipants* internal_default_instance() {
    return reinterpret_cast<const TL_channels_getParticipants*>(
               &_TL_channels_getParticipants_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    232;

  void Swap(TL_channels_getParticipants* other);
  friend void swap(TL_channels_getParticipants& a, TL_channels_getParticipants& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TL_channels_getParticipants* New() const PROTOBUF_FINAL { return New(NULL); }

  TL_channels_getParticipants* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TL_channels_getParticipants* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .mtproto.InputChannel channel = 1;
  bool has_channel() const;
  void clear_channel();
  static const int kChannelFieldNumber = 1;
  const ::mtproto::InputChannel& channel() const;
  ::mtproto::InputChannel* mutable_channel();
  ::mtproto::InputChannel* release_channel();
  void set_allocated_channel(::mtproto::InputChannel* channel);

  // .mtproto.ChannelParticipantsFilter filter = 2;
  bool has_filter() const;
  void clear_filter();
  static const int kFilterFieldNumber = 2;
  const ::mtproto::ChannelParticipantsFilter& filter() const;
  ::mtproto::ChannelParticipantsFilter* mutable_filter();
  ::mtproto::ChannelParticipantsFilter* release_filter();
  void set_allocated_filter(::mtproto::ChannelParticipantsFilter* filter);

  // int32 offset = 3;
  void clear_offset();
  static const int kOffsetFieldNumber = 3;
  ::google::protobuf::int32 offset() const;
  void set_offset(::google::protobuf::int32 value);

  // int32 limit = 4;
  void clear_limit();
  static const int kLimitFieldNumber = 4;
  ::google::protobuf::int32 limit() const;
  void set_limit(::google::protobuf::int32 value);

  // int32 hash = 5;
  void clear_hash();
  static const int kHashFieldNumber = 5;
  ::google::protobuf::int32 hash() const;
  void set_hash(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:mtproto.TL_channels_getParticipants)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::mtproto::InputChannel* channel_;
  ::mtproto::ChannelParticipantsFilter* filter_;
  ::google::protobuf::int32 offset_;
  ::google::protobuf::int32 limit_;
  ::google::protobuf::int32 hash_;
  mutable int _cached_size_;
  friend struct protobuf_schema_2etl_2esync_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TL_channels_getParticipant : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtproto.TL_channels_getParticipant) */ {
 public:
  TL_channels_getParticipant();
  virtual ~TL_channels_getParticipant();

  TL_channels_getParticipant(const TL_channels_getParticipant& from);

  inline TL_channels_getParticipant& operator=(const TL_channels_getParticipant& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TL_channels_getParticipant(TL_channels_getParticipant&& from) noexcept
    : TL_channels_getParticipant() {
    *this = ::std::move(from);
  }

  inline TL_channels_getParticipant& operator=(TL_channels_getParticipant&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TL_channels_getParticipant& default_instance();

  static inline const TL_channels_getParticipant* internal_default_instance() {
    return reinterpret_cast<const TL_channels_getParticipant*>(
               &_TL_channels_getParticipant_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    233;

  void Swap(TL_channels_getParticipant* other);
  friend void swap(TL_channels_getParticipant& a, TL_channels_getParticipant& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TL_channels_getParticipant* New() const PROTOBUF_FINAL { return New(NULL); }

  TL_channels_getParticipant* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TL_channels_getParticipant* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .mtproto.InputChannel channel = 1;
  bool has_channel() const;
  void clear_channel();
  static const int kChannelFieldNumber = 1;
  const ::mtproto::InputChannel& channel() const;
  ::mtproto::InputChannel* mutable_channel();
  ::mtproto::InputChannel* release_channel();
  void set_allocated_channel(::mtproto::InputChannel* channel);

  // .mtproto.InputUser user_id = 2;
  bool has_user_id() const;
  void clear_user_id();
  static const int kUserIdFieldNumber = 2;
  const ::mtproto::InputUser& user_id() const;
  ::mtproto::InputUser* mutable_user_id();
  ::mtproto::InputUser* release_user_id();
  void set_allocated_user_id(::mtproto::InputUser* user_id);

  // @@protoc_insertion_point(class_scope:mtproto.TL_channels_getParticipant)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::mtproto::InputChannel* channel_;
  ::mtproto::InputUser* user_id_;
  mutable int _cached_size_;
  friend struct protobuf_schema_2etl_2esync_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TL_channels_getChannels : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtproto.TL_channels_getChannels) */ {
 public:
  TL_channels_getChannels();
  virtual ~TL_channels_getChannels();

  TL_channels_getChannels(const TL_channels_getChannels& from);

  inline TL_channels_getChannels& operator=(const TL_channels_getChannels& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TL_channels_getChannels(TL_channels_getChannels&& from) noexcept
    : TL_channels_getChannels() {
    *this = ::std::move(from);
  }

  inline TL_channels_getChannels& operator=(TL_channels_getChannels&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TL_channels_getChannels& default_instance();

  static inline const TL_channels_getChannels* internal_default_instance() {
    return reinterpret_cast<const TL_channels_getChannels*>(
               &_TL_channels_getChannels_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    234;

  void Swap(TL_channels_getChannels* other);
  friend void swap(TL_channels_getChannels& a, TL_channels_getChannels& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TL_channels_getChannels* New() const PROTOBUF_FINAL { return New(NULL); }

  TL_channels_getChannels* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TL_channels_getChannels* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .mtproto.InputChannel id = 1;
  int id_size() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  const ::mtproto::InputChannel& id(int index) const;
  ::mtproto::InputChannel* mutable_id(int index);
  ::mtproto::InputChannel* add_id();
  ::google::protobuf::RepeatedPtrField< ::mtproto::InputChannel >*
      mutable_id();
  const ::google::protobuf::RepeatedPtrField< ::mtproto::InputChannel >&
      id() const;

  // @@protoc_insertion_point(class_scope:mtproto.TL_channels_getChannels)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::mtproto::InputChannel > id_;
  mutable int _cached_size_;
  friend struct protobuf_schema_2etl_2esync_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TL_channels_getFullChannel : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtproto.TL_channels_getFullChannel) */ {
 public:
  TL_channels_getFullChannel();
  virtual ~TL_channels_getFullChannel();

  TL_channels_getFullChannel(const TL_channels_getFullChannel& from);

  inline TL_channels_getFullChannel& operator=(const TL_channels_getFullChannel& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TL_channels_getFullChannel(TL_channels_getFullChannel&& from) noexcept
    : TL_channels_getFullChannel() {
    *this = ::std::move(from);
  }

  inline TL_channels_getFullChannel& operator=(TL_channels_getFullChannel&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TL_channels_getFullChannel& default_instance();

  static inline const TL_channels_getFullChannel* internal_default_instance() {
    return reinterpret_cast<const TL_channels_getFullChannel*>(
               &_TL_channels_getFullChannel_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    235;

  void Swap(TL_channels_getFullChannel* other);
  friend void swap(TL_channels_getFullChannel& a, TL_channels_getFullChannel& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TL_channels_getFullChannel* New() const PROTOBUF_FINAL { return New(NULL); }

  TL_channels_getFullChannel* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TL_channels_getFullChannel* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .mtproto.InputChannel channel = 1;
  bool has_channel() const;
  void clear_channel();
  static const int kChannelFieldNumber = 1;
  const ::mtproto::InputChannel& channel() const;
  ::mtproto::InputChannel* mutable_channel();
  ::mtproto::InputChannel* release_channel();
  void set_allocated_channel(::mtproto::InputChannel* channel);

  // @@protoc_insertion_point(class_scope:mtproto.TL_channels_getFullChannel)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::mtproto::InputChannel* channel_;
  mutable int _cached_size_;
  friend struct protobuf_schema_2etl_2esync_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TL_channels_createChannel : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtproto.TL_channels_createChannel) */ {
 public:
  TL_channels_createChannel();
  virtual ~TL_channels_createChannel();

  TL_channels_createChannel(const TL_channels_createChannel& from);

  inline TL_channels_createChannel& operator=(const TL_channels_createChannel& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TL_channels_createChannel(TL_channels_createChannel&& from) noexcept
    : TL_channels_createChannel() {
    *this = ::std::move(from);
  }

  inline TL_channels_createChannel& operator=(TL_channels_createChannel&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TL_channels_createChannel& default_instance();

  static inline const TL_channels_createChannel* internal_default_instance() {
    return reinterpret_cast<const TL_channels_createChannel*>(
               &_TL_channels_createChannel_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    236;

  void Swap(TL_channels_createChannel* other);
  friend void swap(TL_channels_createChannel& a, TL_channels_createChannel& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TL_channels_createChannel* New() const PROTOBUF_FINAL { return New(NULL); }

  TL_channels_createChannel* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TL_channels_createChannel* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string title = 4;
  void clear_title();
  static const int kTitleFieldNumber = 4;
  const ::std::string& title() const;
  void set_title(const ::std::string& value);
  #if LANG_CXX11
  void set_title(::std::string&& value);
  #endif
  void set_title(const char* value);
  void set_title(const char* value, size_t size);
  ::std::string* mutable_title();
  ::std::string* release_title();
  void set_allocated_title(::std::string* title);

  // string about = 5;
  void clear_about();
  static const int kAboutFieldNumber = 5;
  const ::std::string& about() const;
  void set_about(const ::std::string& value);
  #if LANG_CXX11
  void set_about(::std::string&& value);
  #endif
  void set_about(const char* value);
  void set_about(const char* value, size_t size);
  ::std::string* mutable_about();
  ::std::string* release_about();
  void set_allocated_about(::std::string* about);

  // bool broadcast = 2;
  void clear_broadcast();
  static const int kBroadcastFieldNumber = 2;
  bool broadcast() const;
  void set_broadcast(bool value);

  // bool megagroup = 3;
  void clear_megagroup();
  static const int kMegagroupFieldNumber = 3;
  bool megagroup() const;
  void set_megagroup(bool value);

  // @@protoc_insertion_point(class_scope:mtproto.TL_channels_createChannel)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr title_;
  ::google::protobuf::internal::ArenaStringPtr about_;
  bool broadcast_;
  bool megagroup_;
  mutable int _cached_size_;
  friend struct protobuf_schema_2etl_2esync_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TL_channels_editAbout : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtproto.TL_channels_editAbout) */ {
 public:
  TL_channels_editAbout();
  virtual ~TL_channels_editAbout();

  TL_channels_editAbout(const TL_channels_editAbout& from);

  inline TL_channels_editAbout& operator=(const TL_channels_editAbout& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TL_channels_editAbout(TL_channels_editAbout&& from) noexcept
    : TL_channels_editAbout() {
    *this = ::std::move(from);
  }

  inline TL_channels_editAbout& operator=(TL_channels_editAbout&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TL_channels_editAbout& default_instance();

  static inline const TL_channels_editAbout* internal_default_instance() {
    return reinterpret_cast<const TL_channels_editAbout*>(
               &_TL_channels_editAbout_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    237;

  void Swap(TL_channels_editAbout* other);
  friend void swap(TL_channels_editAbout& a, TL_channels_editAbout& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TL_channels_editAbout* New() const PROTOBUF_FINAL { return New(NULL); }

  TL_channels_editAbout* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TL_channels_editAbout* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string about = 2;
  void clear_about();
  static const int kAboutFieldNumber = 2;
  const ::std::string& about() const;
  void set_about(const ::std::string& value);
  #if LANG_CXX11
  void set_about(::std::string&& value);
  #endif
  void set_about(const char* value);
  void set_about(const char* value, size_t size);
  ::std::string* mutable_about();
  ::std::string* release_about();
  void set_allocated_about(::std::string* about);

  // .mtproto.InputChannel channel = 1;
  bool has_channel() const;
  void clear_channel();
  static const int kChannelFieldNumber = 1;
  const ::mtproto::InputChannel& channel() const;
  ::mtproto::InputChannel* mutable_channel();
  ::mtproto::InputChannel* release_channel();
  void set_allocated_channel(::mtproto::InputChannel* channel);

  // @@protoc_insertion_point(class_scope:mtproto.TL_channels_editAbout)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr about_;
  ::mtproto::InputChannel* channel_;
  mutable int _cached_size_;
  friend struct protobuf_schema_2etl_2esync_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TL_channels_editAdmin : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtproto.TL_channels_editAdmin) */ {
 public:
  TL_channels_editAdmin();
  virtual ~TL_channels_editAdmin();

  TL_channels_editAdmin(const TL_channels_editAdmin& from);

  inline TL_channels_editAdmin& operator=(const TL_channels_editAdmin& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TL_channels_editAdmin(TL_channels_editAdmin&& from) noexcept
    : TL_channels_editAdmin() {
    *this = ::std::move(from);
  }

  inline TL_channels_editAdmin& operator=(TL_channels_editAdmin&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TL_channels_editAdmin& default_instance();

  static inline const TL_channels_editAdmin* internal_default_instance() {
    return reinterpret_cast<const TL_channels_editAdmin*>(
               &_TL_channels_editAdmin_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    238;

  void Swap(TL_channels_editAdmin* other);
  friend void swap(TL_channels_editAdmin& a, TL_channels_editAdmin& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TL_channels_editAdmin* New() const PROTOBUF_FINAL { return New(NULL); }

  TL_channels_editAdmin* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TL_channels_editAdmin* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .mtproto.InputChannel channel = 1;
  bool has_channel() const;
  void clear_channel();
  static const int kChannelFieldNumber = 1;
  const ::mtproto::InputChannel& channel() const;
  ::mtproto::InputChannel* mutable_channel();
  ::mtproto::InputChannel* release_channel();
  void set_allocated_channel(::mtproto::InputChannel* channel);

  // .mtproto.InputUser user_id = 2;
  bool has_user_id() const;
  void clear_user_id();
  static const int kUserIdFieldNumber = 2;
  const ::mtproto::InputUser& user_id() const;
  ::mtproto::InputUser* mutable_user_id();
  ::mtproto::InputUser* release_user_id();
  void set_allocated_user_id(::mtproto::InputUser* user_id);

  // .mtproto.ChannelAdminRights admin_rights = 3;
  bool has_admin_rights() const;
  void clear_admin_rights();
  static const int kAdminRightsFieldNumber = 3;
  const ::mtproto::ChannelAdminRights& admin_rights() const;
  ::mtproto::ChannelAdminRights* mutable_admin_rights();
  ::mtproto::ChannelAdminRights* release_admin_rights();
  void set_allocated_admin_rights(::mtproto::ChannelAdminRights* admin_rights);

  // @@protoc_insertion_point(class_scope:mtproto.TL_channels_editAdmin)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::mtproto::InputChannel* channel_;
  ::mtproto::InputUser* user_id_;
  ::mtproto::ChannelAdminRights* admin_rights_;
  mutable int _cached_size_;
  friend struct protobuf_schema_2etl_2esync_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TL_channels_editTitle : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtproto.TL_channels_editTitle) */ {
 public:
  TL_channels_editTitle();
  virtual ~TL_channels_editTitle();

  TL_channels_editTitle(const TL_channels_editTitle& from);

  inline TL_channels_editTitle& operator=(const TL_channels_editTitle& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TL_channels_editTitle(TL_channels_editTitle&& from) noexcept
    : TL_channels_editTitle() {
    *this = ::std::move(from);
  }

  inline TL_channels_editTitle& operator=(TL_channels_editTitle&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TL_channels_editTitle& default_instance();

  static inline const TL_channels_editTitle* internal_default_instance() {
    return reinterpret_cast<const TL_channels_editTitle*>(
               &_TL_channels_editTitle_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    239;

  void Swap(TL_channels_editTitle* other);
  friend void swap(TL_channels_editTitle& a, TL_channels_editTitle& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TL_channels_editTitle* New() const PROTOBUF_FINAL { return New(NULL); }

  TL_channels_editTitle* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TL_channels_editTitle* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string title = 2;
  void clear_title();
  static const int kTitleFieldNumber = 2;
  const ::std::string& title() const;
  void set_title(const ::std::string& value);
  #if LANG_CXX11
  void set_title(::std::string&& value);
  #endif
  void set_title(const char* value);
  void set_title(const char* value, size_t size);
  ::std::string* mutable_title();
  ::std::string* release_title();
  void set_allocated_title(::std::string* title);

  // .mtproto.InputChannel channel = 1;
  bool has_channel() const;
  void clear_channel();
  static const int kChannelFieldNumber = 1;
  const ::mtproto::InputChannel& channel() const;
  ::mtproto::InputChannel* mutable_channel();
  ::mtproto::InputChannel* release_channel();
  void set_allocated_channel(::mtproto::InputChannel* channel);

  // @@protoc_insertion_point(class_scope:mtproto.TL_channels_editTitle)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr title_;
  ::mtproto::InputChannel* channel_;
  mutable int _cached_size_;
  friend struct protobuf_schema_2etl_2esync_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TL_channels_editPhoto : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtproto.TL_channels_editPhoto) */ {
 public:
  TL_channels_editPhoto();
  virtual ~TL_channels_editPhoto();

  TL_channels_editPhoto(const TL_channels_editPhoto& from);

  inline TL_channels_editPhoto& operator=(const TL_channels_editPhoto& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TL_channels_editPhoto(TL_channels_editPhoto&& from) noexcept
    : TL_channels_editPhoto() {
    *this = ::std::move(from);
  }

  inline TL_channels_editPhoto& operator=(TL_channels_editPhoto&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TL_channels_editPhoto& default_instance();

  static inline const TL_channels_editPhoto* internal_default_instance() {
    return reinterpret_cast<const TL_channels_editPhoto*>(
               &_TL_channels_editPhoto_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    240;

  void Swap(TL_channels_editPhoto* other);
  friend void swap(TL_channels_editPhoto& a, TL_channels_editPhoto& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TL_channels_editPhoto* New() const PROTOBUF_FINAL { return New(NULL); }

  TL_channels_editPhoto* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TL_channels_editPhoto* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .mtproto.InputChannel channel = 1;
  bool has_channel() const;
  void clear_channel();
  static const int kChannelFieldNumber = 1;
  const ::mtproto::InputChannel& channel() const;
  ::mtproto::InputChannel* mutable_channel();
  ::mtproto::InputChannel* release_channel();
  void set_allocated_channel(::mtproto::InputChannel* channel);

  // .mtproto.InputChatPhoto photo = 2;
  bool has_photo() const;
  void clear_photo();
  static const int kPhotoFieldNumber = 2;
  const ::mtproto::InputChatPhoto& photo() const;
  ::mtproto::InputChatPhoto* mutable_photo();
  ::mtproto::InputChatPhoto* release_photo();
  void set_allocated_photo(::mtproto::InputChatPhoto* photo);

  // @@protoc_insertion_point(class_scope:mtproto.TL_channels_editPhoto)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::mtproto::InputChannel* channel_;
  ::mtproto::InputChatPhoto* photo_;
  mutable int _cached_size_;
  friend struct protobuf_schema_2etl_2esync_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TL_channels_checkUsername : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtproto.TL_channels_checkUsername) */ {
 public:
  TL_channels_checkUsername();
  virtual ~TL_channels_checkUsername();

  TL_channels_checkUsername(const TL_channels_checkUsername& from);

  inline TL_channels_checkUsername& operator=(const TL_channels_checkUsername& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TL_channels_checkUsername(TL_channels_checkUsername&& from) noexcept
    : TL_channels_checkUsername() {
    *this = ::std::move(from);
  }

  inline TL_channels_checkUsername& operator=(TL_channels_checkUsername&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TL_channels_checkUsername& default_instance();

  static inline const TL_channels_checkUsername* internal_default_instance() {
    return reinterpret_cast<const TL_channels_checkUsername*>(
               &_TL_channels_checkUsername_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    241;

  void Swap(TL_channels_checkUsername* other);
  friend void swap(TL_channels_checkUsername& a, TL_channels_checkUsername& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TL_channels_checkUsername* New() const PROTOBUF_FINAL { return New(NULL); }

  TL_channels_checkUsername* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TL_channels_checkUsername* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string username = 2;
  void clear_username();
  static const int kUsernameFieldNumber = 2;
  const ::std::string& username() const;
  void set_username(const ::std::string& value);
  #if LANG_CXX11
  void set_username(::std::string&& value);
  #endif
  void set_username(const char* value);
  void set_username(const char* value, size_t size);
  ::std::string* mutable_username();
  ::std::string* release_username();
  void set_allocated_username(::std::string* username);

  // .mtproto.InputChannel channel = 1;
  bool has_channel() const;
  void clear_channel();
  static const int kChannelFieldNumber = 1;
  const ::mtproto::InputChannel& channel() const;
  ::mtproto::InputChannel* mutable_channel();
  ::mtproto::InputChannel* release_channel();
  void set_allocated_channel(::mtproto::InputChannel* channel);

  // @@protoc_insertion_point(class_scope:mtproto.TL_channels_checkUsername)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr username_;
  ::mtproto::InputChannel* channel_;
  mutable int _cached_size_;
  friend struct protobuf_schema_2etl_2esync_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TL_channels_updateUsername : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtproto.TL_channels_updateUsername) */ {
 public:
  TL_channels_updateUsername();
  virtual ~TL_channels_updateUsername();

  TL_channels_updateUsername(const TL_channels_updateUsername& from);

  inline TL_channels_updateUsername& operator=(const TL_channels_updateUsername& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TL_channels_updateUsername(TL_channels_updateUsername&& from) noexcept
    : TL_channels_updateUsername() {
    *this = ::std::move(from);
  }

  inline TL_channels_updateUsername& operator=(TL_channels_updateUsername&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TL_channels_updateUsername& default_instance();

  static inline const TL_channels_updateUsername* internal_default_instance() {
    return reinterpret_cast<const TL_channels_updateUsername*>(
               &_TL_channels_updateUsername_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    242;

  void Swap(TL_channels_updateUsername* other);
  friend void swap(TL_channels_updateUsername& a, TL_channels_updateUsername& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TL_channels_updateUsername* New() const PROTOBUF_FINAL { return New(NULL); }

  TL_channels_updateUsername* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TL_channels_updateUsername* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string username = 2;
  void clear_username();
  static const int kUsernameFieldNumber = 2;
  const ::std::string& username() const;
  void set_username(const ::std::string& value);
  #if LANG_CXX11
  void set_username(::std::string&& value);
  #endif
  void set_username(const char* value);
  void set_username(const char* value, size_t size);
  ::std::string* mutable_username();
  ::std::string* release_username();
  void set_allocated_username(::std::string* username);

  // .mtproto.InputChannel channel = 1;
  bool has_channel() const;
  void clear_channel();
  static const int kChannelFieldNumber = 1;
  const ::mtproto::InputChannel& channel() const;
  ::mtproto::InputChannel* mutable_channel();
  ::mtproto::InputChannel* release_channel();
  void set_allocated_channel(::mtproto::InputChannel* channel);

  // @@protoc_insertion_point(class_scope:mtproto.TL_channels_updateUsername)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr username_;
  ::mtproto::InputChannel* channel_;
  mutable int _cached_size_;
  friend struct protobuf_schema_2etl_2esync_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TL_channels_joinChannel : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtproto.TL_channels_joinChannel) */ {
 public:
  TL_channels_joinChannel();
  virtual ~TL_channels_joinChannel();

  TL_channels_joinChannel(const TL_channels_joinChannel& from);

  inline TL_channels_joinChannel& operator=(const TL_channels_joinChannel& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TL_channels_joinChannel(TL_channels_joinChannel&& from) noexcept
    : TL_channels_joinChannel() {
    *this = ::std::move(from);
  }

  inline TL_channels_joinChannel& operator=(TL_channels_joinChannel&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TL_channels_joinChannel& default_instance();

  static inline const TL_channels_joinChannel* internal_default_instance() {
    return reinterpret_cast<const TL_channels_joinChannel*>(
               &_TL_channels_joinChannel_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    243;

  void Swap(TL_channels_joinChannel* other);
  friend void swap(TL_channels_joinChannel& a, TL_channels_joinChannel& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TL_channels_joinChannel* New() const PROTOBUF_FINAL { return New(NULL); }

  TL_channels_joinChannel* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TL_channels_joinChannel* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .mtproto.InputChannel channel = 1;
  bool has_channel() const;
  void clear_channel();
  static const int kChannelFieldNumber = 1;
  const ::mtproto::InputChannel& channel() const;
  ::mtproto::InputChannel* mutable_channel();
  ::mtproto::InputChannel* release_channel();
  void set_allocated_channel(::mtproto::InputChannel* channel);

  // @@protoc_insertion_point(class_scope:mtproto.TL_channels_joinChannel)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::mtproto::InputChannel* channel_;
  mutable int _cached_size_;
  friend struct protobuf_schema_2etl_2esync_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TL_channels_leaveChannel : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtproto.TL_channels_leaveChannel) */ {
 public:
  TL_channels_leaveChannel();
  virtual ~TL_channels_leaveChannel();

  TL_channels_leaveChannel(const TL_channels_leaveChannel& from);

  inline TL_channels_leaveChannel& operator=(const TL_channels_leaveChannel& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TL_channels_leaveChannel(TL_channels_leaveChannel&& from) noexcept
    : TL_channels_leaveChannel() {
    *this = ::std::move(from);
  }

  inline TL_channels_leaveChannel& operator=(TL_channels_leaveChannel&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TL_channels_leaveChannel& default_instance();

  static inline const TL_channels_leaveChannel* internal_default_instance() {
    return reinterpret_cast<const TL_channels_leaveChannel*>(
               &_TL_channels_leaveChannel_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    244;

  void Swap(TL_channels_leaveChannel* other);
  friend void swap(TL_channels_leaveChannel& a, TL_channels_leaveChannel& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TL_channels_leaveChannel* New() const PROTOBUF_FINAL { return New(NULL); }

  TL_channels_leaveChannel* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TL_channels_leaveChannel* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .mtproto.InputChannel channel = 1;
  bool has_channel() const;
  void clear_channel();
  static const int kChannelFieldNumber = 1;
  const ::mtproto::InputChannel& channel() const;
  ::mtproto::InputChannel* mutable_channel();
  ::mtproto::InputChannel* release_channel();
  void set_allocated_channel(::mtproto::InputChannel* channel);

  // @@protoc_insertion_point(class_scope:mtproto.TL_channels_leaveChannel)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::mtproto::InputChannel* channel_;
  mutable int _cached_size_;
  friend struct protobuf_schema_2etl_2esync_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TL_channels_inviteToChannel : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtproto.TL_channels_inviteToChannel) */ {
 public:
  TL_channels_inviteToChannel();
  virtual ~TL_channels_inviteToChannel();

  TL_channels_inviteToChannel(const TL_channels_inviteToChannel& from);

  inline TL_channels_inviteToChannel& operator=(const TL_channels_inviteToChannel& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TL_channels_inviteToChannel(TL_channels_inviteToChannel&& from) noexcept
    : TL_channels_inviteToChannel() {
    *this = ::std::move(from);
  }

  inline TL_channels_inviteToChannel& operator=(TL_channels_inviteToChannel&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TL_channels_inviteToChannel& default_instance();

  static inline const TL_channels_inviteToChannel* internal_default_instance() {
    return reinterpret_cast<const TL_channels_inviteToChannel*>(
               &_TL_channels_inviteToChannel_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    245;

  void Swap(TL_channels_inviteToChannel* other);
  friend void swap(TL_channels_inviteToChannel& a, TL_channels_inviteToChannel& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TL_channels_inviteToChannel* New() const PROTOBUF_FINAL { return New(NULL); }

  TL_channels_inviteToChannel* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TL_channels_inviteToChannel* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .mtproto.InputUser users = 2;
  int users_size() const;
  void clear_users();
  static const int kUsersFieldNumber = 2;
  const ::mtproto::InputUser& users(int index) const;
  ::mtproto::InputUser* mutable_users(int index);
  ::mtproto::InputUser* add_users();
  ::google::protobuf::RepeatedPtrField< ::mtproto::InputUser >*
      mutable_users();
  const ::google::protobuf::RepeatedPtrField< ::mtproto::InputUser >&
      users() const;

  // .mtproto.InputChannel channel = 1;
  bool has_channel() const;
  void clear_channel();
  static const int kChannelFieldNumber = 1;
  const ::mtproto::InputChannel& channel() const;
  ::mtproto::InputChannel* mutable_channel();
  ::mtproto::InputChannel* release_channel();
  void set_allocated_channel(::mtproto::InputChannel* channel);

  // @@protoc_insertion_point(class_scope:mtproto.TL_channels_inviteToChannel)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::mtproto::InputUser > users_;
  ::mtproto::InputChannel* channel_;
  mutable int _cached_size_;
  friend struct protobuf_schema_2etl_2esync_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TL_channels_exportInvite : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtproto.TL_channels_exportInvite) */ {
 public:
  TL_channels_exportInvite();
  virtual ~TL_channels_exportInvite();

  TL_channels_exportInvite(const TL_channels_exportInvite& from);

  inline TL_channels_exportInvite& operator=(const TL_channels_exportInvite& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TL_channels_exportInvite(TL_channels_exportInvite&& from) noexcept
    : TL_channels_exportInvite() {
    *this = ::std::move(from);
  }

  inline TL_channels_exportInvite& operator=(TL_channels_exportInvite&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TL_channels_exportInvite& default_instance();

  static inline const TL_channels_exportInvite* internal_default_instance() {
    return reinterpret_cast<const TL_channels_exportInvite*>(
               &_TL_channels_exportInvite_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    246;

  void Swap(TL_channels_exportInvite* other);
  friend void swap(TL_channels_exportInvite& a, TL_channels_exportInvite& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TL_channels_exportInvite* New() const PROTOBUF_FINAL { return New(NULL); }

  TL_channels_exportInvite* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TL_channels_exportInvite* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .mtproto.InputChannel channel = 1;
  bool has_channel() const;
  void clear_channel();
  static const int kChannelFieldNumber = 1;
  const ::mtproto::InputChannel& channel() const;
  ::mtproto::InputChannel* mutable_channel();
  ::mtproto::InputChannel* release_channel();
  void set_allocated_channel(::mtproto::InputChannel* channel);

  // @@protoc_insertion_point(class_scope:mtproto.TL_channels_exportInvite)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::mtproto::InputChannel* channel_;
  mutable int _cached_size_;
  friend struct protobuf_schema_2etl_2esync_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TL_channels_deleteChannel : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtproto.TL_channels_deleteChannel) */ {
 public:
  TL_channels_deleteChannel();
  virtual ~TL_channels_deleteChannel();

  TL_channels_deleteChannel(const TL_channels_deleteChannel& from);

  inline TL_channels_deleteChannel& operator=(const TL_channels_deleteChannel& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TL_channels_deleteChannel(TL_channels_deleteChannel&& from) noexcept
    : TL_channels_deleteChannel() {
    *this = ::std::move(from);
  }

  inline TL_channels_deleteChannel& operator=(TL_channels_deleteChannel&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TL_channels_deleteChannel& default_instance();

  static inline const TL_channels_deleteChannel* internal_default_instance() {
    return reinterpret_cast<const TL_channels_deleteChannel*>(
               &_TL_channels_deleteChannel_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    247;

  void Swap(TL_channels_deleteChannel* other);
  friend void swap(TL_channels_deleteChannel& a, TL_channels_deleteChannel& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TL_channels_deleteChannel* New() const PROTOBUF_FINAL { return New(NULL); }

  TL_channels_deleteChannel* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TL_channels_deleteChannel* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .mtproto.InputChannel channel = 1;
  bool has_channel() const;
  void clear_channel();
  static const int kChannelFieldNumber = 1;
  const ::mtproto::InputChannel& channel() const;
  ::mtproto::InputChannel* mutable_channel();
  ::mtproto::InputChannel* release_channel();
  void set_allocated_channel(::mtproto::InputChannel* channel);

  // @@protoc_insertion_point(class_scope:mtproto.TL_channels_deleteChannel)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::mtproto::InputChannel* channel_;
  mutable int _cached_size_;
  friend struct protobuf_schema_2etl_2esync_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TL_channels_toggleInvites : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtproto.TL_channels_toggleInvites) */ {
 public:
  TL_channels_toggleInvites();
  virtual ~TL_channels_toggleInvites();

  TL_channels_toggleInvites(const TL_channels_toggleInvites& from);

  inline TL_channels_toggleInvites& operator=(const TL_channels_toggleInvites& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TL_channels_toggleInvites(TL_channels_toggleInvites&& from) noexcept
    : TL_channels_toggleInvites() {
    *this = ::std::move(from);
  }

  inline TL_channels_toggleInvites& operator=(TL_channels_toggleInvites&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TL_channels_toggleInvites& default_instance();

  static inline const TL_channels_toggleInvites* internal_default_instance() {
    return reinterpret_cast<const TL_channels_toggleInvites*>(
               &_TL_channels_toggleInvites_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    248;

  void Swap(TL_channels_toggleInvites* other);
  friend void swap(TL_channels_toggleInvites& a, TL_channels_toggleInvites& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TL_channels_toggleInvites* New() const PROTOBUF_FINAL { return New(NULL); }

  TL_channels_toggleInvites* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TL_channels_toggleInvites* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .mtproto.InputChannel channel = 1;
  bool has_channel() const;
  void clear_channel();
  static const int kChannelFieldNumber = 1;
  const ::mtproto::InputChannel& channel() const;
  ::mtproto::InputChannel* mutable_channel();
  ::mtproto::InputChannel* release_channel();
  void set_allocated_channel(::mtproto::InputChannel* channel);

  // .mtproto.Bool enabled = 2;
  bool has_enabled() const;
  void clear_enabled();
  static const int kEnabledFieldNumber = 2;
  const ::mtproto::Bool& enabled() const;
  ::mtproto::Bool* mutable_enabled();
  ::mtproto::Bool* release_enabled();
  void set_allocated_enabled(::mtproto::Bool* enabled);

  // @@protoc_insertion_point(class_scope:mtproto.TL_channels_toggleInvites)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::mtproto::InputChannel* channel_;
  ::mtproto::Bool* enabled_;
  mutable int _cached_size_;
  friend struct protobuf_schema_2etl_2esync_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TL_channels_exportMessageLink : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtproto.TL_channels_exportMessageLink) */ {
 public:
  TL_channels_exportMessageLink();
  virtual ~TL_channels_exportMessageLink();

  TL_channels_exportMessageLink(const TL_channels_exportMessageLink& from);

  inline TL_channels_exportMessageLink& operator=(const TL_channels_exportMessageLink& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TL_channels_exportMessageLink(TL_channels_exportMessageLink&& from) noexcept
    : TL_channels_exportMessageLink() {
    *this = ::std::move(from);
  }

  inline TL_channels_exportMessageLink& operator=(TL_channels_exportMessageLink&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TL_channels_exportMessageLink& default_instance();

  static inline const TL_channels_exportMessageLink* internal_default_instance() {
    return reinterpret_cast<const TL_channels_exportMessageLink*>(
               &_TL_channels_exportMessageLink_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    249;

  void Swap(TL_channels_exportMessageLink* other);
  friend void swap(TL_channels_exportMessageLink& a, TL_channels_exportMessageLink& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TL_channels_exportMessageLink* New() const PROTOBUF_FINAL { return New(NULL); }

  TL_channels_exportMessageLink* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TL_channels_exportMessageLink* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .mtproto.InputChannel channel = 1;
  bool has_channel() const;
  void clear_channel();
  static const int kChannelFieldNumber = 1;
  const ::mtproto::InputChannel& channel() const;
  ::mtproto::InputChannel* mutable_channel();
  ::mtproto::InputChannel* release_channel();
  void set_allocated_channel(::mtproto::InputChannel* channel);

  // .mtproto.Bool grouped = 3;
  bool has_grouped() const;
  void clear_grouped();
  static const int kGroupedFieldNumber = 3;
  const ::mtproto::Bool& grouped() const;
  ::mtproto::Bool* mutable_grouped();
  ::mtproto::Bool* release_grouped();
  void set_allocated_grouped(::mtproto::Bool* grouped);

  // int32 id = 2;
  void clear_id();
  static const int kIdFieldNumber = 2;
  ::google::protobuf::int32 id() const;
  void set_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:mtproto.TL_channels_exportMessageLink)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::mtproto::InputChannel* channel_;
  ::mtproto::Bool* grouped_;
  ::google::protobuf::int32 id_;
  mutable int _cached_size_;
  friend struct protobuf_schema_2etl_2esync_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TL_channels_toggleSignatures : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtproto.TL_channels_toggleSignatures) */ {
 public:
  TL_channels_toggleSignatures();
  virtual ~TL_channels_toggleSignatures();

  TL_channels_toggleSignatures(const TL_channels_toggleSignatures& from);

  inline TL_channels_toggleSignatures& operator=(const TL_channels_toggleSignatures& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TL_channels_toggleSignatures(TL_channels_toggleSignatures&& from) noexcept
    : TL_channels_toggleSignatures() {
    *this = ::std::move(from);
  }

  inline TL_channels_toggleSignatures& operator=(TL_channels_toggleSignatures&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TL_channels_toggleSignatures& default_instance();

  static inline const TL_channels_toggleSignatures* internal_default_instance() {
    return reinterpret_cast<const TL_channels_toggleSignatures*>(
               &_TL_channels_toggleSignatures_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    250;

  void Swap(TL_channels_toggleSignatures* other);
  friend void swap(TL_channels_toggleSignatures& a, TL_channels_toggleSignatures& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TL_channels_toggleSignatures* New() const PROTOBUF_FINAL { return New(NULL); }

  TL_channels_toggleSignatures* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TL_channels_toggleSignatures* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .mtproto.InputChannel channel = 1;
  bool has_channel() const;
  void clear_channel();
  static const int kChannelFieldNumber = 1;
  const ::mtproto::InputChannel& channel() const;
  ::mtproto::InputChannel* mutable_channel();
  ::mtproto::InputChannel* release_channel();
  void set_allocated_channel(::mtproto::InputChannel* channel);

  // .mtproto.Bool enabled = 2;
  bool has_enabled() const;
  void clear_enabled();
  static const int kEnabledFieldNumber = 2;
  const ::mtproto::Bool& enabled() const;
  ::mtproto::Bool* mutable_enabled();
  ::mtproto::Bool* release_enabled();
  void set_allocated_enabled(::mtproto::Bool* enabled);

  // @@protoc_insertion_point(class_scope:mtproto.TL_channels_toggleSignatures)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::mtproto::InputChannel* channel_;
  ::mtproto::Bool* enabled_;
  mutable int _cached_size_;
  friend struct protobuf_schema_2etl_2esync_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TL_channels_updatePinnedMessage : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtproto.TL_channels_updatePinnedMessage) */ {
 public:
  TL_channels_updatePinnedMessage();
  virtual ~TL_channels_updatePinnedMessage();

  TL_channels_updatePinnedMessage(const TL_channels_updatePinnedMessage& from);

  inline TL_channels_updatePinnedMessage& operator=(const TL_channels_updatePinnedMessage& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TL_channels_updatePinnedMessage(TL_channels_updatePinnedMessage&& from) noexcept
    : TL_channels_updatePinnedMessage() {
    *this = ::std::move(from);
  }

  inline TL_channels_updatePinnedMessage& operator=(TL_channels_updatePinnedMessage&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TL_channels_updatePinnedMessage& default_instance();

  static inline const TL_channels_updatePinnedMessage* internal_default_instance() {
    return reinterpret_cast<const TL_channels_updatePinnedMessage*>(
               &_TL_channels_updatePinnedMessage_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    251;

  void Swap(TL_channels_updatePinnedMessage* other);
  friend void swap(TL_channels_updatePinnedMessage& a, TL_channels_updatePinnedMessage& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TL_channels_updatePinnedMessage* New() const PROTOBUF_FINAL { return New(NULL); }

  TL_channels_updatePinnedMessage* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TL_channels_updatePinnedMessage* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .mtproto.InputChannel channel = 3;
  bool has_channel() const;
  void clear_channel();
  static const int kChannelFieldNumber = 3;
  const ::mtproto::InputChannel& channel() const;
  ::mtproto::InputChannel* mutable_channel();
  ::mtproto::InputChannel* release_channel();
  void set_allocated_channel(::mtproto::InputChannel* channel);

  // bool silent = 2;
  void clear_silent();
  static const int kSilentFieldNumber = 2;
  bool silent() const;
  void set_silent(bool value);

  // int32 id = 4;
  void clear_id();
  static const int kIdFieldNumber = 4;
  ::google::protobuf::int32 id() const;
  void set_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:mtproto.TL_channels_updatePinnedMessage)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::mtproto::InputChannel* channel_;
  bool silent_;
  ::google::protobuf::int32 id_;
  mutable int _cached_size_;
  friend struct protobuf_schema_2etl_2esync_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TL_channels_getAdminedPublicChannels : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtproto.TL_channels_getAdminedPublicChannels) */ {
 public:
  TL_channels_getAdminedPublicChannels();
  virtual ~TL_channels_getAdminedPublicChannels();

  TL_channels_getAdminedPublicChannels(const TL_channels_getAdminedPublicChannels& from);

  inline TL_channels_getAdminedPublicChannels& operator=(const TL_channels_getAdminedPublicChannels& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TL_channels_getAdminedPublicChannels(TL_channels_getAdminedPublicChannels&& from) noexcept
    : TL_channels_getAdminedPublicChannels() {
    *this = ::std::move(from);
  }

  inline TL_channels_getAdminedPublicChannels& operator=(TL_channels_getAdminedPublicChannels&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TL_channels_getAdminedPublicChannels& default_instance();

  static inline const TL_channels_getAdminedPublicChannels* internal_default_instance() {
    return reinterpret_cast<const TL_channels_getAdminedPublicChannels*>(
               &_TL_channels_getAdminedPublicChannels_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    252;

  void Swap(TL_channels_getAdminedPublicChannels* other);
  friend void swap(TL_channels_getAdminedPublicChannels& a, TL_channels_getAdminedPublicChannels& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TL_channels_getAdminedPublicChannels* New() const PROTOBUF_FINAL { return New(NULL); }

  TL_channels_getAdminedPublicChannels* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TL_channels_getAdminedPublicChannels* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:mtproto.TL_channels_getAdminedPublicChannels)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable int _cached_size_;
  friend struct protobuf_schema_2etl_2esync_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TL_channels_editBanned : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtproto.TL_channels_editBanned) */ {
 public:
  TL_channels_editBanned();
  virtual ~TL_channels_editBanned();

  TL_channels_editBanned(const TL_channels_editBanned& from);

  inline TL_channels_editBanned& operator=(const TL_channels_editBanned& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TL_channels_editBanned(TL_channels_editBanned&& from) noexcept
    : TL_channels_editBanned() {
    *this = ::std::move(from);
  }

  inline TL_channels_editBanned& operator=(TL_channels_editBanned&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TL_channels_editBanned& default_instance();

  static inline const TL_channels_editBanned* internal_default_instance() {
    return reinterpret_cast<const TL_channels_editBanned*>(
               &_TL_channels_editBanned_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    253;

  void Swap(TL_channels_editBanned* other);
  friend void swap(TL_channels_editBanned& a, TL_channels_editBanned& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TL_channels_editBanned* New() const PROTOBUF_FINAL { return New(NULL); }

  TL_channels_editBanned* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TL_channels_editBanned* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .mtproto.InputChannel channel = 1;
  bool has_channel() const;
  void clear_channel();
  static const int kChannelFieldNumber = 1;
  const ::mtproto::InputChannel& channel() const;
  ::mtproto::InputChannel* mutable_channel();
  ::mtproto::InputChannel* release_channel();
  void set_allocated_channel(::mtproto::InputChannel* channel);

  // .mtproto.InputUser user_id = 2;
  bool has_user_id() const;
  void clear_user_id();
  static const int kUserIdFieldNumber = 2;
  const ::mtproto::InputUser& user_id() const;
  ::mtproto::InputUser* mutable_user_id();
  ::mtproto::InputUser* release_user_id();
  void set_allocated_user_id(::mtproto::InputUser* user_id);

  // .mtproto.ChannelBannedRights banned_rights = 3;
  bool has_banned_rights() const;
  void clear_banned_rights();
  static const int kBannedRightsFieldNumber = 3;
  const ::mtproto::ChannelBannedRights& banned_rights() const;
  ::mtproto::ChannelBannedRights* mutable_banned_rights();
  ::mtproto::ChannelBannedRights* release_banned_rights();
  void set_allocated_banned_rights(::mtproto::ChannelBannedRights* banned_rights);

  // @@protoc_insertion_point(class_scope:mtproto.TL_channels_editBanned)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::mtproto::InputChannel* channel_;
  ::mtproto::InputUser* user_id_;
  ::mtproto::ChannelBannedRights* banned_rights_;
  mutable int _cached_size_;
  friend struct protobuf_schema_2etl_2esync_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TL_channels_getAdminLog : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtproto.TL_channels_getAdminLog) */ {
 public:
  TL_channels_getAdminLog();
  virtual ~TL_channels_getAdminLog();

  TL_channels_getAdminLog(const TL_channels_getAdminLog& from);

  inline TL_channels_getAdminLog& operator=(const TL_channels_getAdminLog& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TL_channels_getAdminLog(TL_channels_getAdminLog&& from) noexcept
    : TL_channels_getAdminLog() {
    *this = ::std::move(from);
  }

  inline TL_channels_getAdminLog& operator=(TL_channels_getAdminLog&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TL_channels_getAdminLog& default_instance();

  static inline const TL_channels_getAdminLog* internal_default_instance() {
    return reinterpret_cast<const TL_channels_getAdminLog*>(
               &_TL_channels_getAdminLog_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    254;

  void Swap(TL_channels_getAdminLog* other);
  friend void swap(TL_channels_getAdminLog& a, TL_channels_getAdminLog& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TL_channels_getAdminLog* New() const PROTOBUF_FINAL { return New(NULL); }

  TL_channels_getAdminLog* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TL_channels_getAdminLog* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .mtproto.InputUser admins = 5;
  int admins_size() const;
  void clear_admins();
  static const int kAdminsFieldNumber = 5;
  const ::mtproto::InputUser& admins(int index) const;
  ::mtproto::InputUser* mutable_admins(int index);
  ::mtproto::InputUser* add_admins();
  ::google::protobuf::RepeatedPtrField< ::mtproto::InputUser >*
      mutable_admins();
  const ::google::protobuf::RepeatedPtrField< ::mtproto::InputUser >&
      admins() const;

  // string q = 3;
  void clear_q();
  static const int kQFieldNumber = 3;
  const ::std::string& q() const;
  void set_q(const ::std::string& value);
  #if LANG_CXX11
  void set_q(::std::string&& value);
  #endif
  void set_q(const char* value);
  void set_q(const char* value, size_t size);
  ::std::string* mutable_q();
  ::std::string* release_q();
  void set_allocated_q(::std::string* q);

  // .mtproto.InputChannel channel = 2;
  bool has_channel() const;
  void clear_channel();
  static const int kChannelFieldNumber = 2;
  const ::mtproto::InputChannel& channel() const;
  ::mtproto::InputChannel* mutable_channel();
  ::mtproto::InputChannel* release_channel();
  void set_allocated_channel(::mtproto::InputChannel* channel);

  // .mtproto.ChannelAdminLogEventsFilter events_filter = 4;
  bool has_events_filter() const;
  void clear_events_filter();
  static const int kEventsFilterFieldNumber = 4;
  const ::mtproto::ChannelAdminLogEventsFilter& events_filter() const;
  ::mtproto::ChannelAdminLogEventsFilter* mutable_events_filter();
  ::mtproto::ChannelAdminLogEventsFilter* release_events_filter();
  void set_allocated_events_filter(::mtproto::ChannelAdminLogEventsFilter* events_filter);

  // int64 max_id = 6;
  void clear_max_id();
  static const int kMaxIdFieldNumber = 6;
  ::google::protobuf::int64 max_id() const;
  void set_max_id(::google::protobuf::int64 value);

  // int64 min_id = 7;
  void clear_min_id();
  static const int kMinIdFieldNumber = 7;
  ::google::protobuf::int64 min_id() const;
  void set_min_id(::google::protobuf::int64 value);

  // int32 limit = 8;
  void clear_limit();
  static const int kLimitFieldNumber = 8;
  ::google::protobuf::int32 limit() const;
  void set_limit(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:mtproto.TL_channels_getAdminLog)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::mtproto::InputUser > admins_;
  ::google::protobuf::internal::ArenaStringPtr q_;
  ::mtproto::InputChannel* channel_;
  ::mtproto::ChannelAdminLogEventsFilter* events_filter_;
  ::google::protobuf::int64 max_id_;
  ::google::protobuf::int64 min_id_;
  ::google::protobuf::int32 limit_;
  mutable int _cached_size_;
  friend struct protobuf_schema_2etl_2esync_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TL_channels_setStickers : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtproto.TL_channels_setStickers) */ {
 public:
  TL_channels_setStickers();
  virtual ~TL_channels_setStickers();

  TL_channels_setStickers(const TL_channels_setStickers& from);

  inline TL_channels_setStickers& operator=(const TL_channels_setStickers& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TL_channels_setStickers(TL_channels_setStickers&& from) noexcept
    : TL_channels_setStickers() {
    *this = ::std::move(from);
  }

  inline TL_channels_setStickers& operator=(TL_channels_setStickers&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TL_channels_setStickers& default_instance();

  static inline const TL_channels_setStickers* internal_default_instance() {
    return reinterpret_cast<const TL_channels_setStickers*>(
               &_TL_channels_setStickers_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    255;

  void Swap(TL_channels_setStickers* other);
  friend void swap(TL_channels_setStickers& a, TL_channels_setStickers& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TL_channels_setStickers* New() const PROTOBUF_FINAL { return New(NULL); }

  TL_channels_setStickers* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TL_channels_setStickers* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .mtproto.InputChannel channel = 1;
  bool has_channel() const;
  void clear_channel();
  static const int kChannelFieldNumber = 1;
  const ::mtproto::InputChannel& channel() const;
  ::mtproto::InputChannel* mutable_channel();
  ::mtproto::InputChannel* release_channel();
  void set_allocated_channel(::mtproto::InputChannel* channel);

  // .mtproto.InputStickerSet stickerset = 2;
  bool has_stickerset() const;
  void clear_stickerset();
  static const int kStickersetFieldNumber = 2;
  const ::mtproto::InputStickerSet& stickerset() const;
  ::mtproto::InputStickerSet* mutable_stickerset();
  ::mtproto::InputStickerSet* release_stickerset();
  void set_allocated_stickerset(::mtproto::InputStickerSet* stickerset);

  // @@protoc_insertion_point(class_scope:mtproto.TL_channels_setStickers)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::mtproto::InputChannel* channel_;
  ::mtproto::InputStickerSet* stickerset_;
  mutable int _cached_size_;
  friend struct protobuf_schema_2etl_2esync_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TL_channels_readMessageContents : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtproto.TL_channels_readMessageContents) */ {
 public:
  TL_channels_readMessageContents();
  virtual ~TL_channels_readMessageContents();

  TL_channels_readMessageContents(const TL_channels_readMessageContents& from);

  inline TL_channels_readMessageContents& operator=(const TL_channels_readMessageContents& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TL_channels_readMessageContents(TL_channels_readMessageContents&& from) noexcept
    : TL_channels_readMessageContents() {
    *this = ::std::move(from);
  }

  inline TL_channels_readMessageContents& operator=(TL_channels_readMessageContents&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TL_channels_readMessageContents& default_instance();

  static inline const TL_channels_readMessageContents* internal_default_instance() {
    return reinterpret_cast<const TL_channels_readMessageContents*>(
               &_TL_channels_readMessageContents_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    256;

  void Swap(TL_channels_readMessageContents* other);
  friend void swap(TL_channels_readMessageContents& a, TL_channels_readMessageContents& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TL_channels_readMessageContents* New() const PROTOBUF_FINAL { return New(NULL); }

  TL_channels_readMessageContents* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TL_channels_readMessageContents* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 id = 2;
  int id_size() const;
  void clear_id();
  static const int kIdFieldNumber = 2;
  ::google::protobuf::int32 id(int index) const;
  void set_id(int index, ::google::protobuf::int32 value);
  void add_id(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      id() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_id();

  // .mtproto.InputChannel channel = 1;
  bool has_channel() const;
  void clear_channel();
  static const int kChannelFieldNumber = 1;
  const ::mtproto::InputChannel& channel() const;
  ::mtproto::InputChannel* mutable_channel();
  ::mtproto::InputChannel* release_channel();
  void set_allocated_channel(::mtproto::InputChannel* channel);

  // @@protoc_insertion_point(class_scope:mtproto.TL_channels_readMessageContents)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > id_;
  ::mtproto::InputChannel* channel_;
  mutable int _cached_size_;
  friend struct protobuf_schema_2etl_2esync_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TL_channels_deleteHistory : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtproto.TL_channels_deleteHistory) */ {
 public:
  TL_channels_deleteHistory();
  virtual ~TL_channels_deleteHistory();

  TL_channels_deleteHistory(const TL_channels_deleteHistory& from);

  inline TL_channels_deleteHistory& operator=(const TL_channels_deleteHistory& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TL_channels_deleteHistory(TL_channels_deleteHistory&& from) noexcept
    : TL_channels_deleteHistory() {
    *this = ::std::move(from);
  }

  inline TL_channels_deleteHistory& operator=(TL_channels_deleteHistory&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TL_channels_deleteHistory& default_instance();

  static inline const TL_channels_deleteHistory* internal_default_instance() {
    return reinterpret_cast<const TL_channels_deleteHistory*>(
               &_TL_channels_deleteHistory_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    257;

  void Swap(TL_channels_deleteHistory* other);
  friend void swap(TL_channels_deleteHistory& a, TL_channels_deleteHistory& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TL_channels_deleteHistory* New() const PROTOBUF_FINAL { return New(NULL); }

  TL_channels_deleteHistory* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TL_channels_deleteHistory* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .mtproto.InputChannel channel = 1;
  bool has_channel() const;
  void clear_channel();
  static const int kChannelFieldNumber = 1;
  const ::mtproto::InputChannel& channel() const;
  ::mtproto::InputChannel* mutable_channel();
  ::mtproto::InputChannel* release_channel();
  void set_allocated_channel(::mtproto::InputChannel* channel);

  // int32 max_id = 2;
  void clear_max_id();
  static const int kMaxIdFieldNumber = 2;
  ::google::protobuf::int32 max_id() const;
  void set_max_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:mtproto.TL_channels_deleteHistory)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::mtproto::InputChannel* channel_;
  ::google::protobuf::int32 max_id_;
  mutable int _cached_size_;
  friend struct protobuf_schema_2etl_2esync_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TL_channels_togglePreHistoryHidden : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtproto.TL_channels_togglePreHistoryHidden) */ {
 public:
  TL_channels_togglePreHistoryHidden();
  virtual ~TL_channels_togglePreHistoryHidden();

  TL_channels_togglePreHistoryHidden(const TL_channels_togglePreHistoryHidden& from);

  inline TL_channels_togglePreHistoryHidden& operator=(const TL_channels_togglePreHistoryHidden& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TL_channels_togglePreHistoryHidden(TL_channels_togglePreHistoryHidden&& from) noexcept
    : TL_channels_togglePreHistoryHidden() {
    *this = ::std::move(from);
  }

  inline TL_channels_togglePreHistoryHidden& operator=(TL_channels_togglePreHistoryHidden&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TL_channels_togglePreHistoryHidden& default_instance();

  static inline const TL_channels_togglePreHistoryHidden* internal_default_instance() {
    return reinterpret_cast<const TL_channels_togglePreHistoryHidden*>(
               &_TL_channels_togglePreHistoryHidden_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    258;

  void Swap(TL_channels_togglePreHistoryHidden* other);
  friend void swap(TL_channels_togglePreHistoryHidden& a, TL_channels_togglePreHistoryHidden& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TL_channels_togglePreHistoryHidden* New() const PROTOBUF_FINAL { return New(NULL); }

  TL_channels_togglePreHistoryHidden* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TL_channels_togglePreHistoryHidden* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .mtproto.InputChannel channel = 1;
  bool has_channel() const;
  void clear_channel();
  static const int kChannelFieldNumber = 1;
  const ::mtproto::InputChannel& channel() const;
  ::mtproto::InputChannel* mutable_channel();
  ::mtproto::InputChannel* release_channel();
  void set_allocated_channel(::mtproto::InputChannel* channel);

  // .mtproto.Bool enabled = 2;
  bool has_enabled() const;
  void clear_enabled();
  static const int kEnabledFieldNumber = 2;
  const ::mtproto::Bool& enabled() const;
  ::mtproto::Bool* mutable_enabled();
  ::mtproto::Bool* release_enabled();
  void set_allocated_enabled(::mtproto::Bool* enabled);

  // @@protoc_insertion_point(class_scope:mtproto.TL_channels_togglePreHistoryHidden)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::mtproto::InputChannel* channel_;
  ::mtproto::Bool* enabled_;
  mutable int _cached_size_;
  friend struct protobuf_schema_2etl_2esync_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TL_channels_getLeftChannels : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtproto.TL_channels_getLeftChannels) */ {
 public:
  TL_channels_getLeftChannels();
  virtual ~TL_channels_getLeftChannels();

  TL_channels_getLeftChannels(const TL_channels_getLeftChannels& from);

  inline TL_channels_getLeftChannels& operator=(const TL_channels_getLeftChannels& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TL_channels_getLeftChannels(TL_channels_getLeftChannels&& from) noexcept
    : TL_channels_getLeftChannels() {
    *this = ::std::move(from);
  }

  inline TL_channels_getLeftChannels& operator=(TL_channels_getLeftChannels&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TL_channels_getLeftChannels& default_instance();

  static inline const TL_channels_getLeftChannels* internal_default_instance() {
    return reinterpret_cast<const TL_channels_getLeftChannels*>(
               &_TL_channels_getLeftChannels_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    259;

  void Swap(TL_channels_getLeftChannels* other);
  friend void swap(TL_channels_getLeftChannels& a, TL_channels_getLeftChannels& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TL_channels_getLeftChannels* New() const PROTOBUF_FINAL { return New(NULL); }

  TL_channels_getLeftChannels* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TL_channels_getLeftChannels* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 offset = 1;
  void clear_offset();
  static const int kOffsetFieldNumber = 1;
  ::google::protobuf::int32 offset() const;
  void set_offset(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:mtproto.TL_channels_getLeftChannels)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 offset_;
  mutable int _cached_size_;
  friend struct protobuf_schema_2etl_2esync_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TL_bots_sendCustomRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtproto.TL_bots_sendCustomRequest) */ {
 public:
  TL_bots_sendCustomRequest();
  virtual ~TL_bots_sendCustomRequest();

  TL_bots_sendCustomRequest(const TL_bots_sendCustomRequest& from);

  inline TL_bots_sendCustomRequest& operator=(const TL_bots_sendCustomRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TL_bots_sendCustomRequest(TL_bots_sendCustomRequest&& from) noexcept
    : TL_bots_sendCustomRequest() {
    *this = ::std::move(from);
  }

  inline TL_bots_sendCustomRequest& operator=(TL_bots_sendCustomRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TL_bots_sendCustomRequest& default_instance();

  static inline const TL_bots_sendCustomRequest* internal_default_instance() {
    return reinterpret_cast<const TL_bots_sendCustomRequest*>(
               &_TL_bots_sendCustomRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    260;

  void Swap(TL_bots_sendCustomRequest* other);
  friend void swap(TL_bots_sendCustomRequest& a, TL_bots_sendCustomRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TL_bots_sendCustomRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  TL_bots_sendCustomRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TL_bots_sendCustomRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string custom_method = 1;
  void clear_custom_method();
  static const int kCustomMethodFieldNumber = 1;
  const ::std::string& custom_method() const;
  void set_custom_method(const ::std::string& value);
  #if LANG_CXX11
  void set_custom_method(::std::string&& value);
  #endif
  void set_custom_method(const char* value);
  void set_custom_method(const char* value, size_t size);
  ::std::string* mutable_custom_method();
  ::std::string* release_custom_method();
  void set_allocated_custom_method(::std::string* custom_method);

  // .mtproto.DataJSON params = 2;
  bool has_params() const;
  void clear_params();
  static const int kParamsFieldNumber = 2;
  const ::mtproto::DataJSON& params() const;
  ::mtproto::DataJSON* mutable_params();
  ::mtproto::DataJSON* release_params();
  void set_allocated_params(::mtproto::DataJSON* params);

  // @@protoc_insertion_point(class_scope:mtproto.TL_bots_sendCustomRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr custom_method_;
  ::mtproto::DataJSON* params_;
  mutable int _cached_size_;
  friend struct protobuf_schema_2etl_2esync_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TL_bots_answerWebhookJSONQuery : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtproto.TL_bots_answerWebhookJSONQuery) */ {
 public:
  TL_bots_answerWebhookJSONQuery();
  virtual ~TL_bots_answerWebhookJSONQuery();

  TL_bots_answerWebhookJSONQuery(const TL_bots_answerWebhookJSONQuery& from);

  inline TL_bots_answerWebhookJSONQuery& operator=(const TL_bots_answerWebhookJSONQuery& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TL_bots_answerWebhookJSONQuery(TL_bots_answerWebhookJSONQuery&& from) noexcept
    : TL_bots_answerWebhookJSONQuery() {
    *this = ::std::move(from);
  }

  inline TL_bots_answerWebhookJSONQuery& operator=(TL_bots_answerWebhookJSONQuery&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TL_bots_answerWebhookJSONQuery& default_instance();

  static inline const TL_bots_answerWebhookJSONQuery* internal_default_instance() {
    return reinterpret_cast<const TL_bots_answerWebhookJSONQuery*>(
               &_TL_bots_answerWebhookJSONQuery_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    261;

  void Swap(TL_bots_answerWebhookJSONQuery* other);
  friend void swap(TL_bots_answerWebhookJSONQuery& a, TL_bots_answerWebhookJSONQuery& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TL_bots_answerWebhookJSONQuery* New() const PROTOBUF_FINAL { return New(NULL); }

  TL_bots_answerWebhookJSONQuery* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TL_bots_answerWebhookJSONQuery* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .mtproto.DataJSON data = 2;
  bool has_data() const;
  void clear_data();
  static const int kDataFieldNumber = 2;
  const ::mtproto::DataJSON& data() const;
  ::mtproto::DataJSON* mutable_data();
  ::mtproto::DataJSON* release_data();
  void set_allocated_data(::mtproto::DataJSON* data);

  // int64 query_id = 1;
  void clear_query_id();
  static const int kQueryIdFieldNumber = 1;
  ::google::protobuf::int64 query_id() const;
  void set_query_id(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:mtproto.TL_bots_answerWebhookJSONQuery)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::mtproto::DataJSON* data_;
  ::google::protobuf::int64 query_id_;
  mutable int _cached_size_;
  friend struct protobuf_schema_2etl_2esync_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TL_payments_getPaymentForm : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtproto.TL_payments_getPaymentForm) */ {
 public:
  TL_payments_getPaymentForm();
  virtual ~TL_payments_getPaymentForm();

  TL_payments_getPaymentForm(const TL_payments_getPaymentForm& from);

  inline TL_payments_getPaymentForm& operator=(const TL_payments_getPaymentForm& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TL_payments_getPaymentForm(TL_payments_getPaymentForm&& from) noexcept
    : TL_payments_getPaymentForm() {
    *this = ::std::move(from);
  }

  inline TL_payments_getPaymentForm& operator=(TL_payments_getPaymentForm&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TL_payments_getPaymentForm& default_instance();

  static inline const TL_payments_getPaymentForm* internal_default_instance() {
    return reinterpret_cast<const TL_payments_getPaymentForm*>(
               &_TL_payments_getPaymentForm_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    262;

  void Swap(TL_payments_getPaymentForm* other);
  friend void swap(TL_payments_getPaymentForm& a, TL_payments_getPaymentForm& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TL_payments_getPaymentForm* New() const PROTOBUF_FINAL { return New(NULL); }

  TL_payments_getPaymentForm* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TL_payments_getPaymentForm* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 msg_id = 1;
  void clear_msg_id();
  static const int kMsgIdFieldNumber = 1;
  ::google::protobuf::int32 msg_id() const;
  void set_msg_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:mtproto.TL_payments_getPaymentForm)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 msg_id_;
  mutable int _cached_size_;
  friend struct protobuf_schema_2etl_2esync_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TL_payments_getPaymentReceipt : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtproto.TL_payments_getPaymentReceipt) */ {
 public:
  TL_payments_getPaymentReceipt();
  virtual ~TL_payments_getPaymentReceipt();

  TL_payments_getPaymentReceipt(const TL_payments_getPaymentReceipt& from);

  inline TL_payments_getPaymentReceipt& operator=(const TL_payments_getPaymentReceipt& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TL_payments_getPaymentReceipt(TL_payments_getPaymentReceipt&& from) noexcept
    : TL_payments_getPaymentReceipt() {
    *this = ::std::move(from);
  }

  inline TL_payments_getPaymentReceipt& operator=(TL_payments_getPaymentReceipt&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TL_payments_getPaymentReceipt& default_instance();

  static inline const TL_payments_getPaymentReceipt* internal_default_instance() {
    return reinterpret_cast<const TL_payments_getPaymentReceipt*>(
               &_TL_payments_getPaymentReceipt_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    263;

  void Swap(TL_payments_getPaymentReceipt* other);
  friend void swap(TL_payments_getPaymentReceipt& a, TL_payments_getPaymentReceipt& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TL_payments_getPaymentReceipt* New() const PROTOBUF_FINAL { return New(NULL); }

  TL_payments_getPaymentReceipt* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TL_payments_getPaymentReceipt* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 msg_id = 1;
  void clear_msg_id();
  static const int kMsgIdFieldNumber = 1;
  ::google::protobuf::int32 msg_id() const;
  void set_msg_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:mtproto.TL_payments_getPaymentReceipt)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 msg_id_;
  mutable int _cached_size_;
  friend struct protobuf_schema_2etl_2esync_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TL_payments_validateRequestedInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtproto.TL_payments_validateRequestedInfo) */ {
 public:
  TL_payments_validateRequestedInfo();
  virtual ~TL_payments_validateRequestedInfo();

  TL_payments_validateRequestedInfo(const TL_payments_validateRequestedInfo& from);

  inline TL_payments_validateRequestedInfo& operator=(const TL_payments_validateRequestedInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TL_payments_validateRequestedInfo(TL_payments_validateRequestedInfo&& from) noexcept
    : TL_payments_validateRequestedInfo() {
    *this = ::std::move(from);
  }

  inline TL_payments_validateRequestedInfo& operator=(TL_payments_validateRequestedInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TL_payments_validateRequestedInfo& default_instance();

  static inline const TL_payments_validateRequestedInfo* internal_default_instance() {
    return reinterpret_cast<const TL_payments_validateRequestedInfo*>(
               &_TL_payments_validateRequestedInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    264;

  void Swap(TL_payments_validateRequestedInfo* other);
  friend void swap(TL_payments_validateRequestedInfo& a, TL_payments_validateRequestedInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TL_payments_validateRequestedInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  TL_payments_validateRequestedInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TL_payments_validateRequestedInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .mtproto.PaymentRequestedInfo info = 4;
  bool has_info() const;
  void clear_info();
  static const int kInfoFieldNumber = 4;
  const ::mtproto::PaymentRequestedInfo& info() const;
  ::mtproto::PaymentRequestedInfo* mutable_info();
  ::mtproto::PaymentRequestedInfo* release_info();
  void set_allocated_info(::mtproto::PaymentRequestedInfo* info);

  // bool save = 2;
  void clear_save();
  static const int kSaveFieldNumber = 2;
  bool save() const;
  void set_save(bool value);

  // int32 msg_id = 3;
  void clear_msg_id();
  static const int kMsgIdFieldNumber = 3;
  ::google::protobuf::int32 msg_id() const;
  void set_msg_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:mtproto.TL_payments_validateRequestedInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::mtproto::PaymentRequestedInfo* info_;
  bool save_;
  ::google::protobuf::int32 msg_id_;
  mutable int _cached_size_;
  friend struct protobuf_schema_2etl_2esync_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TL_payments_sendPaymentForm : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtproto.TL_payments_sendPaymentForm) */ {
 public:
  TL_payments_sendPaymentForm();
  virtual ~TL_payments_sendPaymentForm();

  TL_payments_sendPaymentForm(const TL_payments_sendPaymentForm& from);

  inline TL_payments_sendPaymentForm& operator=(const TL_payments_sendPaymentForm& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TL_payments_sendPaymentForm(TL_payments_sendPaymentForm&& from) noexcept
    : TL_payments_sendPaymentForm() {
    *this = ::std::move(from);
  }

  inline TL_payments_sendPaymentForm& operator=(TL_payments_sendPaymentForm&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TL_payments_sendPaymentForm& default_instance();

  static inline const TL_payments_sendPaymentForm* internal_default_instance() {
    return reinterpret_cast<const TL_payments_sendPaymentForm*>(
               &_TL_payments_sendPaymentForm_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    265;

  void Swap(TL_payments_sendPaymentForm* other);
  friend void swap(TL_payments_sendPaymentForm& a, TL_payments_sendPaymentForm& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TL_payments_sendPaymentForm* New() const PROTOBUF_FINAL { return New(NULL); }

  TL_payments_sendPaymentForm* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TL_payments_sendPaymentForm* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string requested_info_id = 3;
  void clear_requested_info_id();
  static const int kRequestedInfoIdFieldNumber = 3;
  const ::std::string& requested_info_id() const;
  void set_requested_info_id(const ::std::string& value);
  #if LANG_CXX11
  void set_requested_info_id(::std::string&& value);
  #endif
  void set_requested_info_id(const char* value);
  void set_requested_info_id(const char* value, size_t size);
  ::std::string* mutable_requested_info_id();
  ::std::string* release_requested_info_id();
  void set_allocated_requested_info_id(::std::string* requested_info_id);

  // string shipping_option_id = 4;
  void clear_shipping_option_id();
  static const int kShippingOptionIdFieldNumber = 4;
  const ::std::string& shipping_option_id() const;
  void set_shipping_option_id(const ::std::string& value);
  #if LANG_CXX11
  void set_shipping_option_id(::std::string&& value);
  #endif
  void set_shipping_option_id(const char* value);
  void set_shipping_option_id(const char* value, size_t size);
  ::std::string* mutable_shipping_option_id();
  ::std::string* release_shipping_option_id();
  void set_allocated_shipping_option_id(::std::string* shipping_option_id);

  // .mtproto.InputPaymentCredentials credentials = 5;
  bool has_credentials() const;
  void clear_credentials();
  static const int kCredentialsFieldNumber = 5;
  const ::mtproto::InputPaymentCredentials& credentials() const;
  ::mtproto::InputPaymentCredentials* mutable_credentials();
  ::mtproto::InputPaymentCredentials* release_credentials();
  void set_allocated_credentials(::mtproto::InputPaymentCredentials* credentials);

  // int32 msg_id = 2;
  void clear_msg_id();
  static const int kMsgIdFieldNumber = 2;
  ::google::protobuf::int32 msg_id() const;
  void set_msg_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:mtproto.TL_payments_sendPaymentForm)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr requested_info_id_;
  ::google::protobuf::internal::ArenaStringPtr shipping_option_id_;
  ::mtproto::InputPaymentCredentials* credentials_;
  ::google::protobuf::int32 msg_id_;
  mutable int _cached_size_;
  friend struct protobuf_schema_2etl_2esync_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TL_payments_getSavedInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtproto.TL_payments_getSavedInfo) */ {
 public:
  TL_payments_getSavedInfo();
  virtual ~TL_payments_getSavedInfo();

  TL_payments_getSavedInfo(const TL_payments_getSavedInfo& from);

  inline TL_payments_getSavedInfo& operator=(const TL_payments_getSavedInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TL_payments_getSavedInfo(TL_payments_getSavedInfo&& from) noexcept
    : TL_payments_getSavedInfo() {
    *this = ::std::move(from);
  }

  inline TL_payments_getSavedInfo& operator=(TL_payments_getSavedInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TL_payments_getSavedInfo& default_instance();

  static inline const TL_payments_getSavedInfo* internal_default_instance() {
    return reinterpret_cast<const TL_payments_getSavedInfo*>(
               &_TL_payments_getSavedInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    266;

  void Swap(TL_payments_getSavedInfo* other);
  friend void swap(TL_payments_getSavedInfo& a, TL_payments_getSavedInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TL_payments_getSavedInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  TL_payments_getSavedInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TL_payments_getSavedInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:mtproto.TL_payments_getSavedInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable int _cached_size_;
  friend struct protobuf_schema_2etl_2esync_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TL_payments_clearSavedInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtproto.TL_payments_clearSavedInfo) */ {
 public:
  TL_payments_clearSavedInfo();
  virtual ~TL_payments_clearSavedInfo();

  TL_payments_clearSavedInfo(const TL_payments_clearSavedInfo& from);

  inline TL_payments_clearSavedInfo& operator=(const TL_payments_clearSavedInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TL_payments_clearSavedInfo(TL_payments_clearSavedInfo&& from) noexcept
    : TL_payments_clearSavedInfo() {
    *this = ::std::move(from);
  }

  inline TL_payments_clearSavedInfo& operator=(TL_payments_clearSavedInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TL_payments_clearSavedInfo& default_instance();

  static inline const TL_payments_clearSavedInfo* internal_default_instance() {
    return reinterpret_cast<const TL_payments_clearSavedInfo*>(
               &_TL_payments_clearSavedInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    267;

  void Swap(TL_payments_clearSavedInfo* other);
  friend void swap(TL_payments_clearSavedInfo& a, TL_payments_clearSavedInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TL_payments_clearSavedInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  TL_payments_clearSavedInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TL_payments_clearSavedInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bool credentials = 2;
  void clear_credentials();
  static const int kCredentialsFieldNumber = 2;
  bool credentials() const;
  void set_credentials(bool value);

  // bool info = 3;
  void clear_info();
  static const int kInfoFieldNumber = 3;
  bool info() const;
  void set_info(bool value);

  // @@protoc_insertion_point(class_scope:mtproto.TL_payments_clearSavedInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool credentials_;
  bool info_;
  mutable int _cached_size_;
  friend struct protobuf_schema_2etl_2esync_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TL_stickers_createStickerSet : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtproto.TL_stickers_createStickerSet) */ {
 public:
  TL_stickers_createStickerSet();
  virtual ~TL_stickers_createStickerSet();

  TL_stickers_createStickerSet(const TL_stickers_createStickerSet& from);

  inline TL_stickers_createStickerSet& operator=(const TL_stickers_createStickerSet& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TL_stickers_createStickerSet(TL_stickers_createStickerSet&& from) noexcept
    : TL_stickers_createStickerSet() {
    *this = ::std::move(from);
  }

  inline TL_stickers_createStickerSet& operator=(TL_stickers_createStickerSet&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TL_stickers_createStickerSet& default_instance();

  static inline const TL_stickers_createStickerSet* internal_default_instance() {
    return reinterpret_cast<const TL_stickers_createStickerSet*>(
               &_TL_stickers_createStickerSet_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    268;

  void Swap(TL_stickers_createStickerSet* other);
  friend void swap(TL_stickers_createStickerSet& a, TL_stickers_createStickerSet& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TL_stickers_createStickerSet* New() const PROTOBUF_FINAL { return New(NULL); }

  TL_stickers_createStickerSet* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TL_stickers_createStickerSet* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .mtproto.InputStickerSetItem stickers = 6;
  int stickers_size() const;
  void clear_stickers();
  static const int kStickersFieldNumber = 6;
  const ::mtproto::InputStickerSetItem& stickers(int index) const;
  ::mtproto::InputStickerSetItem* mutable_stickers(int index);
  ::mtproto::InputStickerSetItem* add_stickers();
  ::google::protobuf::RepeatedPtrField< ::mtproto::InputStickerSetItem >*
      mutable_stickers();
  const ::google::protobuf::RepeatedPtrField< ::mtproto::InputStickerSetItem >&
      stickers() const;

  // string title = 4;
  void clear_title();
  static const int kTitleFieldNumber = 4;
  const ::std::string& title() const;
  void set_title(const ::std::string& value);
  #if LANG_CXX11
  void set_title(::std::string&& value);
  #endif
  void set_title(const char* value);
  void set_title(const char* value, size_t size);
  ::std::string* mutable_title();
  ::std::string* release_title();
  void set_allocated_title(::std::string* title);

  // string short_name = 5;
  void clear_short_name();
  static const int kShortNameFieldNumber = 5;
  const ::std::string& short_name() const;
  void set_short_name(const ::std::string& value);
  #if LANG_CXX11
  void set_short_name(::std::string&& value);
  #endif
  void set_short_name(const char* value);
  void set_short_name(const char* value, size_t size);
  ::std::string* mutable_short_name();
  ::std::string* release_short_name();
  void set_allocated_short_name(::std::string* short_name);

  // .mtproto.InputUser user_id = 3;
  bool has_user_id() const;
  void clear_user_id();
  static const int kUserIdFieldNumber = 3;
  const ::mtproto::InputUser& user_id() const;
  ::mtproto::InputUser* mutable_user_id();
  ::mtproto::InputUser* release_user_id();
  void set_allocated_user_id(::mtproto::InputUser* user_id);

  // bool masks = 2;
  void clear_masks();
  static const int kMasksFieldNumber = 2;
  bool masks() const;
  void set_masks(bool value);

  // @@protoc_insertion_point(class_scope:mtproto.TL_stickers_createStickerSet)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::mtproto::InputStickerSetItem > stickers_;
  ::google::protobuf::internal::ArenaStringPtr title_;
  ::google::protobuf::internal::ArenaStringPtr short_name_;
  ::mtproto::InputUser* user_id_;
  bool masks_;
  mutable int _cached_size_;
  friend struct protobuf_schema_2etl_2esync_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TL_stickers_removeStickerFromSet : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtproto.TL_stickers_removeStickerFromSet) */ {
 public:
  TL_stickers_removeStickerFromSet();
  virtual ~TL_stickers_removeStickerFromSet();

  TL_stickers_removeStickerFromSet(const TL_stickers_removeStickerFromSet& from);

  inline TL_stickers_removeStickerFromSet& operator=(const TL_stickers_removeStickerFromSet& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TL_stickers_removeStickerFromSet(TL_stickers_removeStickerFromSet&& from) noexcept
    : TL_stickers_removeStickerFromSet() {
    *this = ::std::move(from);
  }

  inline TL_stickers_removeStickerFromSet& operator=(TL_stickers_removeStickerFromSet&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TL_stickers_removeStickerFromSet& default_instance();

  static inline const TL_stickers_removeStickerFromSet* internal_default_instance() {
    return reinterpret_cast<const TL_stickers_removeStickerFromSet*>(
               &_TL_stickers_removeStickerFromSet_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    269;

  void Swap(TL_stickers_removeStickerFromSet* other);
  friend void swap(TL_stickers_removeStickerFromSet& a, TL_stickers_removeStickerFromSet& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TL_stickers_removeStickerFromSet* New() const PROTOBUF_FINAL { return New(NULL); }

  TL_stickers_removeStickerFromSet* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TL_stickers_removeStickerFromSet* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .mtproto.InputDocument sticker = 1;
  bool has_sticker() const;
  void clear_sticker();
  static const int kStickerFieldNumber = 1;
  const ::mtproto::InputDocument& sticker() const;
  ::mtproto::InputDocument* mutable_sticker();
  ::mtproto::InputDocument* release_sticker();
  void set_allocated_sticker(::mtproto::InputDocument* sticker);

  // @@protoc_insertion_point(class_scope:mtproto.TL_stickers_removeStickerFromSet)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::mtproto::InputDocument* sticker_;
  mutable int _cached_size_;
  friend struct protobuf_schema_2etl_2esync_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TL_stickers_changeStickerPosition : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtproto.TL_stickers_changeStickerPosition) */ {
 public:
  TL_stickers_changeStickerPosition();
  virtual ~TL_stickers_changeStickerPosition();

  TL_stickers_changeStickerPosition(const TL_stickers_changeStickerPosition& from);

  inline TL_stickers_changeStickerPosition& operator=(const TL_stickers_changeStickerPosition& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TL_stickers_changeStickerPosition(TL_stickers_changeStickerPosition&& from) noexcept
    : TL_stickers_changeStickerPosition() {
    *this = ::std::move(from);
  }

  inline TL_stickers_changeStickerPosition& operator=(TL_stickers_changeStickerPosition&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TL_stickers_changeStickerPosition& default_instance();

  static inline const TL_stickers_changeStickerPosition* internal_default_instance() {
    return reinterpret_cast<const TL_stickers_changeStickerPosition*>(
               &_TL_stickers_changeStickerPosition_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    270;

  void Swap(TL_stickers_changeStickerPosition* other);
  friend void swap(TL_stickers_changeStickerPosition& a, TL_stickers_changeStickerPosition& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TL_stickers_changeStickerPosition* New() const PROTOBUF_FINAL { return New(NULL); }

  TL_stickers_changeStickerPosition* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TL_stickers_changeStickerPosition* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .mtproto.InputDocument sticker = 1;
  bool has_sticker() const;
  void clear_sticker();
  static const int kStickerFieldNumber = 1;
  const ::mtproto::InputDocument& sticker() const;
  ::mtproto::InputDocument* mutable_sticker();
  ::mtproto::InputDocument* release_sticker();
  void set_allocated_sticker(::mtproto::InputDocument* sticker);

  // int32 position = 2;
  void clear_position();
  static const int kPositionFieldNumber = 2;
  ::google::protobuf::int32 position() const;
  void set_position(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:mtproto.TL_stickers_changeStickerPosition)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::mtproto::InputDocument* sticker_;
  ::google::protobuf::int32 position_;
  mutable int _cached_size_;
  friend struct protobuf_schema_2etl_2esync_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TL_stickers_addStickerToSet : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtproto.TL_stickers_addStickerToSet) */ {
 public:
  TL_stickers_addStickerToSet();
  virtual ~TL_stickers_addStickerToSet();

  TL_stickers_addStickerToSet(const TL_stickers_addStickerToSet& from);

  inline TL_stickers_addStickerToSet& operator=(const TL_stickers_addStickerToSet& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TL_stickers_addStickerToSet(TL_stickers_addStickerToSet&& from) noexcept
    : TL_stickers_addStickerToSet() {
    *this = ::std::move(from);
  }

  inline TL_stickers_addStickerToSet& operator=(TL_stickers_addStickerToSet&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TL_stickers_addStickerToSet& default_instance();

  static inline const TL_stickers_addStickerToSet* internal_default_instance() {
    return reinterpret_cast<const TL_stickers_addStickerToSet*>(
               &_TL_stickers_addStickerToSet_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    271;

  void Swap(TL_stickers_addStickerToSet* other);
  friend void swap(TL_stickers_addStickerToSet& a, TL_stickers_addStickerToSet& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TL_stickers_addStickerToSet* New() const PROTOBUF_FINAL { return New(NULL); }

  TL_stickers_addStickerToSet* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TL_stickers_addStickerToSet* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .mtproto.InputStickerSet stickerset = 1;
  bool has_stickerset() const;
  void clear_stickerset();
  static const int kStickersetFieldNumber = 1;
  const ::mtproto::InputStickerSet& stickerset() const;
  ::mtproto::InputStickerSet* mutable_stickerset();
  ::mtproto::InputStickerSet* release_stickerset();
  void set_allocated_stickerset(::mtproto::InputStickerSet* stickerset);

  // .mtproto.InputStickerSetItem sticker = 2;
  bool has_sticker() const;
  void clear_sticker();
  static const int kStickerFieldNumber = 2;
  const ::mtproto::InputStickerSetItem& sticker() const;
  ::mtproto::InputStickerSetItem* mutable_sticker();
  ::mtproto::InputStickerSetItem* release_sticker();
  void set_allocated_sticker(::mtproto::InputStickerSetItem* sticker);

  // @@protoc_insertion_point(class_scope:mtproto.TL_stickers_addStickerToSet)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::mtproto::InputStickerSet* stickerset_;
  ::mtproto::InputStickerSetItem* sticker_;
  mutable int _cached_size_;
  friend struct protobuf_schema_2etl_2esync_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TL_phone_getCallConfig : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtproto.TL_phone_getCallConfig) */ {
 public:
  TL_phone_getCallConfig();
  virtual ~TL_phone_getCallConfig();

  TL_phone_getCallConfig(const TL_phone_getCallConfig& from);

  inline TL_phone_getCallConfig& operator=(const TL_phone_getCallConfig& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TL_phone_getCallConfig(TL_phone_getCallConfig&& from) noexcept
    : TL_phone_getCallConfig() {
    *this = ::std::move(from);
  }

  inline TL_phone_getCallConfig& operator=(TL_phone_getCallConfig&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TL_phone_getCallConfig& default_instance();

  static inline const TL_phone_getCallConfig* internal_default_instance() {
    return reinterpret_cast<const TL_phone_getCallConfig*>(
               &_TL_phone_getCallConfig_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    272;

  void Swap(TL_phone_getCallConfig* other);
  friend void swap(TL_phone_getCallConfig& a, TL_phone_getCallConfig& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TL_phone_getCallConfig* New() const PROTOBUF_FINAL { return New(NULL); }

  TL_phone_getCallConfig* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TL_phone_getCallConfig* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:mtproto.TL_phone_getCallConfig)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable int _cached_size_;
  friend struct protobuf_schema_2etl_2esync_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TL_phone_requestCall : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtproto.TL_phone_requestCall) */ {
 public:
  TL_phone_requestCall();
  virtual ~TL_phone_requestCall();

  TL_phone_requestCall(const TL_phone_requestCall& from);

  inline TL_phone_requestCall& operator=(const TL_phone_requestCall& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TL_phone_requestCall(TL_phone_requestCall&& from) noexcept
    : TL_phone_requestCall() {
    *this = ::std::move(from);
  }

  inline TL_phone_requestCall& operator=(TL_phone_requestCall&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TL_phone_requestCall& default_instance();

  static inline const TL_phone_requestCall* internal_default_instance() {
    return reinterpret_cast<const TL_phone_requestCall*>(
               &_TL_phone_requestCall_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    273;

  void Swap(TL_phone_requestCall* other);
  friend void swap(TL_phone_requestCall& a, TL_phone_requestCall& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TL_phone_requestCall* New() const PROTOBUF_FINAL { return New(NULL); }

  TL_phone_requestCall* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TL_phone_requestCall* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes g_a_hash = 3;
  void clear_g_a_hash();
  static const int kGAHashFieldNumber = 3;
  const ::std::string& g_a_hash() const;
  void set_g_a_hash(const ::std::string& value);
  #if LANG_CXX11
  void set_g_a_hash(::std::string&& value);
  #endif
  void set_g_a_hash(const char* value);
  void set_g_a_hash(const void* value, size_t size);
  ::std::string* mutable_g_a_hash();
  ::std::string* release_g_a_hash();
  void set_allocated_g_a_hash(::std::string* g_a_hash);

  // .mtproto.InputUser user_id = 1;
  bool has_user_id() const;
  void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  const ::mtproto::InputUser& user_id() const;
  ::mtproto::InputUser* mutable_user_id();
  ::mtproto::InputUser* release_user_id();
  void set_allocated_user_id(::mtproto::InputUser* user_id);

  // .mtproto.PhoneCallProtocol protocol = 4;
  bool has_protocol() const;
  void clear_protocol();
  static const int kProtocolFieldNumber = 4;
  const ::mtproto::PhoneCallProtocol& protocol() const;
  ::mtproto::PhoneCallProtocol* mutable_protocol();
  ::mtproto::PhoneCallProtocol* release_protocol();
  void set_allocated_protocol(::mtproto::PhoneCallProtocol* protocol);

  // int32 random_id = 2;
  void clear_random_id();
  static const int kRandomIdFieldNumber = 2;
  ::google::protobuf::int32 random_id() const;
  void set_random_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:mtproto.TL_phone_requestCall)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr g_a_hash_;
  ::mtproto::InputUser* user_id_;
  ::mtproto::PhoneCallProtocol* protocol_;
  ::google::protobuf::int32 random_id_;
  mutable int _cached_size_;
  friend struct protobuf_schema_2etl_2esync_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TL_phone_acceptCall : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtproto.TL_phone_acceptCall) */ {
 public:
  TL_phone_acceptCall();
  virtual ~TL_phone_acceptCall();

  TL_phone_acceptCall(const TL_phone_acceptCall& from);

  inline TL_phone_acceptCall& operator=(const TL_phone_acceptCall& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TL_phone_acceptCall(TL_phone_acceptCall&& from) noexcept
    : TL_phone_acceptCall() {
    *this = ::std::move(from);
  }

  inline TL_phone_acceptCall& operator=(TL_phone_acceptCall&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TL_phone_acceptCall& default_instance();

  static inline const TL_phone_acceptCall* internal_default_instance() {
    return reinterpret_cast<const TL_phone_acceptCall*>(
               &_TL_phone_acceptCall_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    274;

  void Swap(TL_phone_acceptCall* other);
  friend void swap(TL_phone_acceptCall& a, TL_phone_acceptCall& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TL_phone_acceptCall* New() const PROTOBUF_FINAL { return New(NULL); }

  TL_phone_acceptCall* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TL_phone_acceptCall* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes g_b = 2;
  void clear_g_b();
  static const int kGBFieldNumber = 2;
  const ::std::string& g_b() const;
  void set_g_b(const ::std::string& value);
  #if LANG_CXX11
  void set_g_b(::std::string&& value);
  #endif
  void set_g_b(const char* value);
  void set_g_b(const void* value, size_t size);
  ::std::string* mutable_g_b();
  ::std::string* release_g_b();
  void set_allocated_g_b(::std::string* g_b);

  // .mtproto.InputPhoneCall peer = 1;
  bool has_peer() const;
  void clear_peer();
  static const int kPeerFieldNumber = 1;
  const ::mtproto::InputPhoneCall& peer() const;
  ::mtproto::InputPhoneCall* mutable_peer();
  ::mtproto::InputPhoneCall* release_peer();
  void set_allocated_peer(::mtproto::InputPhoneCall* peer);

  // .mtproto.PhoneCallProtocol protocol = 3;
  bool has_protocol() const;
  void clear_protocol();
  static const int kProtocolFieldNumber = 3;
  const ::mtproto::PhoneCallProtocol& protocol() const;
  ::mtproto::PhoneCallProtocol* mutable_protocol();
  ::mtproto::PhoneCallProtocol* release_protocol();
  void set_allocated_protocol(::mtproto::PhoneCallProtocol* protocol);

  // @@protoc_insertion_point(class_scope:mtproto.TL_phone_acceptCall)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr g_b_;
  ::mtproto::InputPhoneCall* peer_;
  ::mtproto::PhoneCallProtocol* protocol_;
  mutable int _cached_size_;
  friend struct protobuf_schema_2etl_2esync_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TL_phone_confirmCall : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtproto.TL_phone_confirmCall) */ {
 public:
  TL_phone_confirmCall();
  virtual ~TL_phone_confirmCall();

  TL_phone_confirmCall(const TL_phone_confirmCall& from);

  inline TL_phone_confirmCall& operator=(const TL_phone_confirmCall& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TL_phone_confirmCall(TL_phone_confirmCall&& from) noexcept
    : TL_phone_confirmCall() {
    *this = ::std::move(from);
  }

  inline TL_phone_confirmCall& operator=(TL_phone_confirmCall&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TL_phone_confirmCall& default_instance();

  static inline const TL_phone_confirmCall* internal_default_instance() {
    return reinterpret_cast<const TL_phone_confirmCall*>(
               &_TL_phone_confirmCall_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    275;

  void Swap(TL_phone_confirmCall* other);
  friend void swap(TL_phone_confirmCall& a, TL_phone_confirmCall& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TL_phone_confirmCall* New() const PROTOBUF_FINAL { return New(NULL); }

  TL_phone_confirmCall* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TL_phone_confirmCall* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes g_a = 2;
  void clear_g_a();
  static const int kGAFieldNumber = 2;
  const ::std::string& g_a() const;
  void set_g_a(const ::std::string& value);
  #if LANG_CXX11
  void set_g_a(::std::string&& value);
  #endif
  void set_g_a(const char* value);
  void set_g_a(const void* value, size_t size);
  ::std::string* mutable_g_a();
  ::std::string* release_g_a();
  void set_allocated_g_a(::std::string* g_a);

  // .mtproto.InputPhoneCall peer = 1;
  bool has_peer() const;
  void clear_peer();
  static const int kPeerFieldNumber = 1;
  const ::mtproto::InputPhoneCall& peer() const;
  ::mtproto::InputPhoneCall* mutable_peer();
  ::mtproto::InputPhoneCall* release_peer();
  void set_allocated_peer(::mtproto::InputPhoneCall* peer);

  // .mtproto.PhoneCallProtocol protocol = 4;
  bool has_protocol() const;
  void clear_protocol();
  static const int kProtocolFieldNumber = 4;
  const ::mtproto::PhoneCallProtocol& protocol() const;
  ::mtproto::PhoneCallProtocol* mutable_protocol();
  ::mtproto::PhoneCallProtocol* release_protocol();
  void set_allocated_protocol(::mtproto::PhoneCallProtocol* protocol);

  // int64 key_fingerprint = 3;
  void clear_key_fingerprint();
  static const int kKeyFingerprintFieldNumber = 3;
  ::google::protobuf::int64 key_fingerprint() const;
  void set_key_fingerprint(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:mtproto.TL_phone_confirmCall)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr g_a_;
  ::mtproto::InputPhoneCall* peer_;
  ::mtproto::PhoneCallProtocol* protocol_;
  ::google::protobuf::int64 key_fingerprint_;
  mutable int _cached_size_;
  friend struct protobuf_schema_2etl_2esync_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TL_phone_receivedCall : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtproto.TL_phone_receivedCall) */ {
 public:
  TL_phone_receivedCall();
  virtual ~TL_phone_receivedCall();

  TL_phone_receivedCall(const TL_phone_receivedCall& from);

  inline TL_phone_receivedCall& operator=(const TL_phone_receivedCall& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TL_phone_receivedCall(TL_phone_receivedCall&& from) noexcept
    : TL_phone_receivedCall() {
    *this = ::std::move(from);
  }

  inline TL_phone_receivedCall& operator=(TL_phone_receivedCall&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TL_phone_receivedCall& default_instance();

  static inline const TL_phone_receivedCall* internal_default_instance() {
    return reinterpret_cast<const TL_phone_receivedCall*>(
               &_TL_phone_receivedCall_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    276;

  void Swap(TL_phone_receivedCall* other);
  friend void swap(TL_phone_receivedCall& a, TL_phone_receivedCall& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TL_phone_receivedCall* New() const PROTOBUF_FINAL { return New(NULL); }

  TL_phone_receivedCall* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TL_phone_receivedCall* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .mtproto.InputPhoneCall peer = 1;
  bool has_peer() const;
  void clear_peer();
  static const int kPeerFieldNumber = 1;
  const ::mtproto::InputPhoneCall& peer() const;
  ::mtproto::InputPhoneCall* mutable_peer();
  ::mtproto::InputPhoneCall* release_peer();
  void set_allocated_peer(::mtproto::InputPhoneCall* peer);

  // @@protoc_insertion_point(class_scope:mtproto.TL_phone_receivedCall)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::mtproto::InputPhoneCall* peer_;
  mutable int _cached_size_;
  friend struct protobuf_schema_2etl_2esync_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TL_phone_discardCall : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtproto.TL_phone_discardCall) */ {
 public:
  TL_phone_discardCall();
  virtual ~TL_phone_discardCall();

  TL_phone_discardCall(const TL_phone_discardCall& from);

  inline TL_phone_discardCall& operator=(const TL_phone_discardCall& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TL_phone_discardCall(TL_phone_discardCall&& from) noexcept
    : TL_phone_discardCall() {
    *this = ::std::move(from);
  }

  inline TL_phone_discardCall& operator=(TL_phone_discardCall&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TL_phone_discardCall& default_instance();

  static inline const TL_phone_discardCall* internal_default_instance() {
    return reinterpret_cast<const TL_phone_discardCall*>(
               &_TL_phone_discardCall_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    277;

  void Swap(TL_phone_discardCall* other);
  friend void swap(TL_phone_discardCall& a, TL_phone_discardCall& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TL_phone_discardCall* New() const PROTOBUF_FINAL { return New(NULL); }

  TL_phone_discardCall* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TL_phone_discardCall* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .mtproto.InputPhoneCall peer = 1;
  bool has_peer() const;
  void clear_peer();
  static const int kPeerFieldNumber = 1;
  const ::mtproto::InputPhoneCall& peer() const;
  ::mtproto::InputPhoneCall* mutable_peer();
  ::mtproto::InputPhoneCall* release_peer();
  void set_allocated_peer(::mtproto::InputPhoneCall* peer);

  // .mtproto.PhoneCallDiscardReason reason = 3;
  bool has_reason() const;
  void clear_reason();
  static const int kReasonFieldNumber = 3;
  const ::mtproto::PhoneCallDiscardReason& reason() const;
  ::mtproto::PhoneCallDiscardReason* mutable_reason();
  ::mtproto::PhoneCallDiscardReason* release_reason();
  void set_allocated_reason(::mtproto::PhoneCallDiscardReason* reason);

  // int64 connection_id = 4;
  void clear_connection_id();
  static const int kConnectionIdFieldNumber = 4;
  ::google::protobuf::int64 connection_id() const;
  void set_connection_id(::google::protobuf::int64 value);

  // int32 duration = 2;
  void clear_duration();
  static const int kDurationFieldNumber = 2;
  ::google::protobuf::int32 duration() const;
  void set_duration(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:mtproto.TL_phone_discardCall)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::mtproto::InputPhoneCall* peer_;
  ::mtproto::PhoneCallDiscardReason* reason_;
  ::google::protobuf::int64 connection_id_;
  ::google::protobuf::int32 duration_;
  mutable int _cached_size_;
  friend struct protobuf_schema_2etl_2esync_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TL_phone_setCallRating : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtproto.TL_phone_setCallRating) */ {
 public:
  TL_phone_setCallRating();
  virtual ~TL_phone_setCallRating();

  TL_phone_setCallRating(const TL_phone_setCallRating& from);

  inline TL_phone_setCallRating& operator=(const TL_phone_setCallRating& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TL_phone_setCallRating(TL_phone_setCallRating&& from) noexcept
    : TL_phone_setCallRating() {
    *this = ::std::move(from);
  }

  inline TL_phone_setCallRating& operator=(TL_phone_setCallRating&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TL_phone_setCallRating& default_instance();

  static inline const TL_phone_setCallRating* internal_default_instance() {
    return reinterpret_cast<const TL_phone_setCallRating*>(
               &_TL_phone_setCallRating_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    278;

  void Swap(TL_phone_setCallRating* other);
  friend void swap(TL_phone_setCallRating& a, TL_phone_setCallRating& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TL_phone_setCallRating* New() const PROTOBUF_FINAL { return New(NULL); }

  TL_phone_setCallRating* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TL_phone_setCallRating* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string comment = 3;
  void clear_comment();
  static const int kCommentFieldNumber = 3;
  const ::std::string& comment() const;
  void set_comment(const ::std::string& value);
  #if LANG_CXX11
  void set_comment(::std::string&& value);
  #endif
  void set_comment(const char* value);
  void set_comment(const char* value, size_t size);
  ::std::string* mutable_comment();
  ::std::string* release_comment();
  void set_allocated_comment(::std::string* comment);

  // .mtproto.InputPhoneCall peer = 1;
  bool has_peer() const;
  void clear_peer();
  static const int kPeerFieldNumber = 1;
  const ::mtproto::InputPhoneCall& peer() const;
  ::mtproto::InputPhoneCall* mutable_peer();
  ::mtproto::InputPhoneCall* release_peer();
  void set_allocated_peer(::mtproto::InputPhoneCall* peer);

  // int32 rating = 2;
  void clear_rating();
  static const int kRatingFieldNumber = 2;
  ::google::protobuf::int32 rating() const;
  void set_rating(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:mtproto.TL_phone_setCallRating)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr comment_;
  ::mtproto::InputPhoneCall* peer_;
  ::google::protobuf::int32 rating_;
  mutable int _cached_size_;
  friend struct protobuf_schema_2etl_2esync_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TL_phone_saveCallDebug : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtproto.TL_phone_saveCallDebug) */ {
 public:
  TL_phone_saveCallDebug();
  virtual ~TL_phone_saveCallDebug();

  TL_phone_saveCallDebug(const TL_phone_saveCallDebug& from);

  inline TL_phone_saveCallDebug& operator=(const TL_phone_saveCallDebug& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TL_phone_saveCallDebug(TL_phone_saveCallDebug&& from) noexcept
    : TL_phone_saveCallDebug() {
    *this = ::std::move(from);
  }

  inline TL_phone_saveCallDebug& operator=(TL_phone_saveCallDebug&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TL_phone_saveCallDebug& default_instance();

  static inline const TL_phone_saveCallDebug* internal_default_instance() {
    return reinterpret_cast<const TL_phone_saveCallDebug*>(
               &_TL_phone_saveCallDebug_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    279;

  void Swap(TL_phone_saveCallDebug* other);
  friend void swap(TL_phone_saveCallDebug& a, TL_phone_saveCallDebug& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TL_phone_saveCallDebug* New() const PROTOBUF_FINAL { return New(NULL); }

  TL_phone_saveCallDebug* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TL_phone_saveCallDebug* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .mtproto.InputPhoneCall peer = 1;
  bool has_peer() const;
  void clear_peer();
  static const int kPeerFieldNumber = 1;
  const ::mtproto::InputPhoneCall& peer() const;
  ::mtproto::InputPhoneCall* mutable_peer();
  ::mtproto::InputPhoneCall* release_peer();
  void set_allocated_peer(::mtproto::InputPhoneCall* peer);

  // .mtproto.DataJSON debug = 2;
  bool has_debug() const;
  void clear_debug();
  static const int kDebugFieldNumber = 2;
  const ::mtproto::DataJSON& debug() const;
  ::mtproto::DataJSON* mutable_debug();
  ::mtproto::DataJSON* release_debug();
  void set_allocated_debug(::mtproto::DataJSON* debug);

  // @@protoc_insertion_point(class_scope:mtproto.TL_phone_saveCallDebug)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::mtproto::InputPhoneCall* peer_;
  ::mtproto::DataJSON* debug_;
  mutable int _cached_size_;
  friend struct protobuf_schema_2etl_2esync_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TL_langpack_getLangPack : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtproto.TL_langpack_getLangPack) */ {
 public:
  TL_langpack_getLangPack();
  virtual ~TL_langpack_getLangPack();

  TL_langpack_getLangPack(const TL_langpack_getLangPack& from);

  inline TL_langpack_getLangPack& operator=(const TL_langpack_getLangPack& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TL_langpack_getLangPack(TL_langpack_getLangPack&& from) noexcept
    : TL_langpack_getLangPack() {
    *this = ::std::move(from);
  }

  inline TL_langpack_getLangPack& operator=(TL_langpack_getLangPack&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TL_langpack_getLangPack& default_instance();

  static inline const TL_langpack_getLangPack* internal_default_instance() {
    return reinterpret_cast<const TL_langpack_getLangPack*>(
               &_TL_langpack_getLangPack_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    280;

  void Swap(TL_langpack_getLangPack* other);
  friend void swap(TL_langpack_getLangPack& a, TL_langpack_getLangPack& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TL_langpack_getLangPack* New() const PROTOBUF_FINAL { return New(NULL); }

  TL_langpack_getLangPack* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TL_langpack_getLangPack* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string lang_pack = 1;
  void clear_lang_pack();
  static const int kLangPackFieldNumber = 1;
  const ::std::string& lang_pack() const;
  void set_lang_pack(const ::std::string& value);
  #if LANG_CXX11
  void set_lang_pack(::std::string&& value);
  #endif
  void set_lang_pack(const char* value);
  void set_lang_pack(const char* value, size_t size);
  ::std::string* mutable_lang_pack();
  ::std::string* release_lang_pack();
  void set_allocated_lang_pack(::std::string* lang_pack);

  // string lang_code = 2;
  void clear_lang_code();
  static const int kLangCodeFieldNumber = 2;
  const ::std::string& lang_code() const;
  void set_lang_code(const ::std::string& value);
  #if LANG_CXX11
  void set_lang_code(::std::string&& value);
  #endif
  void set_lang_code(const char* value);
  void set_lang_code(const char* value, size_t size);
  ::std::string* mutable_lang_code();
  ::std::string* release_lang_code();
  void set_allocated_lang_code(::std::string* lang_code);

  // @@protoc_insertion_point(class_scope:mtproto.TL_langpack_getLangPack)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr lang_pack_;
  ::google::protobuf::internal::ArenaStringPtr lang_code_;
  mutable int _cached_size_;
  friend struct protobuf_schema_2etl_2esync_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TL_langpack_getStrings : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtproto.TL_langpack_getStrings) */ {
 public:
  TL_langpack_getStrings();
  virtual ~TL_langpack_getStrings();

  TL_langpack_getStrings(const TL_langpack_getStrings& from);

  inline TL_langpack_getStrings& operator=(const TL_langpack_getStrings& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TL_langpack_getStrings(TL_langpack_getStrings&& from) noexcept
    : TL_langpack_getStrings() {
    *this = ::std::move(from);
  }

  inline TL_langpack_getStrings& operator=(TL_langpack_getStrings&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TL_langpack_getStrings& default_instance();

  static inline const TL_langpack_getStrings* internal_default_instance() {
    return reinterpret_cast<const TL_langpack_getStrings*>(
               &_TL_langpack_getStrings_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    281;

  void Swap(TL_langpack_getStrings* other);
  friend void swap(TL_langpack_getStrings& a, TL_langpack_getStrings& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TL_langpack_getStrings* New() const PROTOBUF_FINAL { return New(NULL); }

  TL_langpack_getStrings* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TL_langpack_getStrings* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated string keys = 3;
  int keys_size() const;
  void clear_keys();
  static const int kKeysFieldNumber = 3;
  const ::std::string& keys(int index) const;
  ::std::string* mutable_keys(int index);
  void set_keys(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_keys(int index, ::std::string&& value);
  #endif
  void set_keys(int index, const char* value);
  void set_keys(int index, const char* value, size_t size);
  ::std::string* add_keys();
  void add_keys(const ::std::string& value);
  #if LANG_CXX11
  void add_keys(::std::string&& value);
  #endif
  void add_keys(const char* value);
  void add_keys(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& keys() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_keys();

  // string lang_pack = 1;
  void clear_lang_pack();
  static const int kLangPackFieldNumber = 1;
  const ::std::string& lang_pack() const;
  void set_lang_pack(const ::std::string& value);
  #if LANG_CXX11
  void set_lang_pack(::std::string&& value);
  #endif
  void set_lang_pack(const char* value);
  void set_lang_pack(const char* value, size_t size);
  ::std::string* mutable_lang_pack();
  ::std::string* release_lang_pack();
  void set_allocated_lang_pack(::std::string* lang_pack);

  // string lang_code = 2;
  void clear_lang_code();
  static const int kLangCodeFieldNumber = 2;
  const ::std::string& lang_code() const;
  void set_lang_code(const ::std::string& value);
  #if LANG_CXX11
  void set_lang_code(::std::string&& value);
  #endif
  void set_lang_code(const char* value);
  void set_lang_code(const char* value, size_t size);
  ::std::string* mutable_lang_code();
  ::std::string* release_lang_code();
  void set_allocated_lang_code(::std::string* lang_code);

  // @@protoc_insertion_point(class_scope:mtproto.TL_langpack_getStrings)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::std::string> keys_;
  ::google::protobuf::internal::ArenaStringPtr lang_pack_;
  ::google::protobuf::internal::ArenaStringPtr lang_code_;
  mutable int _cached_size_;
  friend struct protobuf_schema_2etl_2esync_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TL_langpack_getDifference : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtproto.TL_langpack_getDifference) */ {
 public:
  TL_langpack_getDifference();
  virtual ~TL_langpack_getDifference();

  TL_langpack_getDifference(const TL_langpack_getDifference& from);

  inline TL_langpack_getDifference& operator=(const TL_langpack_getDifference& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TL_langpack_getDifference(TL_langpack_getDifference&& from) noexcept
    : TL_langpack_getDifference() {
    *this = ::std::move(from);
  }

  inline TL_langpack_getDifference& operator=(TL_langpack_getDifference&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TL_langpack_getDifference& default_instance();

  static inline const TL_langpack_getDifference* internal_default_instance() {
    return reinterpret_cast<const TL_langpack_getDifference*>(
               &_TL_langpack_getDifference_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    282;

  void Swap(TL_langpack_getDifference* other);
  friend void swap(TL_langpack_getDifference& a, TL_langpack_getDifference& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TL_langpack_getDifference* New() const PROTOBUF_FINAL { return New(NULL); }

  TL_langpack_getDifference* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TL_langpack_getDifference* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 from_version = 1;
  void clear_from_version();
  static const int kFromVersionFieldNumber = 1;
  ::google::protobuf::int32 from_version() const;
  void set_from_version(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:mtproto.TL_langpack_getDifference)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 from_version_;
  mutable int _cached_size_;
  friend struct protobuf_schema_2etl_2esync_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TL_langpack_getLanguages : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtproto.TL_langpack_getLanguages) */ {
 public:
  TL_langpack_getLanguages();
  virtual ~TL_langpack_getLanguages();

  TL_langpack_getLanguages(const TL_langpack_getLanguages& from);

  inline TL_langpack_getLanguages& operator=(const TL_langpack_getLanguages& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TL_langpack_getLanguages(TL_langpack_getLanguages&& from) noexcept
    : TL_langpack_getLanguages() {
    *this = ::std::move(from);
  }

  inline TL_langpack_getLanguages& operator=(TL_langpack_getLanguages&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TL_langpack_getLanguages& default_instance();

  static inline const TL_langpack_getLanguages* internal_default_instance() {
    return reinterpret_cast<const TL_langpack_getLanguages*>(
               &_TL_langpack_getLanguages_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    283;

  void Swap(TL_langpack_getLanguages* other);
  friend void swap(TL_langpack_getLanguages& a, TL_langpack_getLanguages& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TL_langpack_getLanguages* New() const PROTOBUF_FINAL { return New(NULL); }

  TL_langpack_getLanguages* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TL_langpack_getLanguages* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string lang_pack = 1;
  void clear_lang_pack();
  static const int kLangPackFieldNumber = 1;
  const ::std::string& lang_pack() const;
  void set_lang_pack(const ::std::string& value);
  #if LANG_CXX11
  void set_lang_pack(::std::string&& value);
  #endif
  void set_lang_pack(const char* value);
  void set_lang_pack(const char* value, size_t size);
  ::std::string* mutable_lang_pack();
  ::std::string* release_lang_pack();
  void set_allocated_lang_pack(::std::string* lang_pack);

  // @@protoc_insertion_point(class_scope:mtproto.TL_langpack_getLanguages)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr lang_pack_;
  mutable int _cached_size_;
  friend struct protobuf_schema_2etl_2esync_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Vector_LangPackLanguage : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtproto.Vector_LangPackLanguage) */ {
 public:
  Vector_LangPackLanguage();
  virtual ~Vector_LangPackLanguage();

  Vector_LangPackLanguage(const Vector_LangPackLanguage& from);

  inline Vector_LangPackLanguage& operator=(const Vector_LangPackLanguage& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Vector_LangPackLanguage(Vector_LangPackLanguage&& from) noexcept
    : Vector_LangPackLanguage() {
    *this = ::std::move(from);
  }

  inline Vector_LangPackLanguage& operator=(Vector_LangPackLanguage&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Vector_LangPackLanguage& default_instance();

  static inline const Vector_LangPackLanguage* internal_default_instance() {
    return reinterpret_cast<const Vector_LangPackLanguage*>(
               &_Vector_LangPackLanguage_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    284;

  void Swap(Vector_LangPackLanguage* other);
  friend void swap(Vector_LangPackLanguage& a, Vector_LangPackLanguage& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Vector_LangPackLanguage* New() const PROTOBUF_FINAL { return New(NULL); }

  Vector_LangPackLanguage* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Vector_LangPackLanguage* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .mtproto.LangPackLanguage datas = 1;
  int datas_size() const;
  void clear_datas();
  static const int kDatasFieldNumber = 1;
  const ::mtproto::LangPackLanguage& datas(int index) const;
  ::mtproto::LangPackLanguage* mutable_datas(int index);
  ::mtproto::LangPackLanguage* add_datas();
  ::google::protobuf::RepeatedPtrField< ::mtproto::LangPackLanguage >*
      mutable_datas();
  const ::google::protobuf::RepeatedPtrField< ::mtproto::LangPackLanguage >&
      datas() const;

  // @@protoc_insertion_point(class_scope:mtproto.Vector_LangPackLanguage)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::mtproto::LangPackLanguage > datas_;
  mutable int _cached_size_;
  friend struct protobuf_schema_2etl_2esync_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Vector_WallPaper : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtproto.Vector_WallPaper) */ {
 public:
  Vector_WallPaper();
  virtual ~Vector_WallPaper();

  Vector_WallPaper(const Vector_WallPaper& from);

  inline Vector_WallPaper& operator=(const Vector_WallPaper& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Vector_WallPaper(Vector_WallPaper&& from) noexcept
    : Vector_WallPaper() {
    *this = ::std::move(from);
  }

  inline Vector_WallPaper& operator=(Vector_WallPaper&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Vector_WallPaper& default_instance();

  static inline const Vector_WallPaper* internal_default_instance() {
    return reinterpret_cast<const Vector_WallPaper*>(
               &_Vector_WallPaper_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    285;

  void Swap(Vector_WallPaper* other);
  friend void swap(Vector_WallPaper& a, Vector_WallPaper& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Vector_WallPaper* New() const PROTOBUF_FINAL { return New(NULL); }

  Vector_WallPaper* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Vector_WallPaper* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .mtproto.WallPaper datas = 1;
  int datas_size() const;
  void clear_datas();
  static const int kDatasFieldNumber = 1;
  const ::mtproto::WallPaper& datas(int index) const;
  ::mtproto::WallPaper* mutable_datas(int index);
  ::mtproto::WallPaper* add_datas();
  ::google::protobuf::RepeatedPtrField< ::mtproto::WallPaper >*
      mutable_datas();
  const ::google::protobuf::RepeatedPtrField< ::mtproto::WallPaper >&
      datas() const;

  // @@protoc_insertion_point(class_scope:mtproto.Vector_WallPaper)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::mtproto::WallPaper > datas_;
  mutable int _cached_size_;
  friend struct protobuf_schema_2etl_2esync_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Vector_SecureValue : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtproto.Vector_SecureValue) */ {
 public:
  Vector_SecureValue();
  virtual ~Vector_SecureValue();

  Vector_SecureValue(const Vector_SecureValue& from);

  inline Vector_SecureValue& operator=(const Vector_SecureValue& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Vector_SecureValue(Vector_SecureValue&& from) noexcept
    : Vector_SecureValue() {
    *this = ::std::move(from);
  }

  inline Vector_SecureValue& operator=(Vector_SecureValue&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Vector_SecureValue& default_instance();

  static inline const Vector_SecureValue* internal_default_instance() {
    return reinterpret_cast<const Vector_SecureValue*>(
               &_Vector_SecureValue_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    286;

  void Swap(Vector_SecureValue* other);
  friend void swap(Vector_SecureValue& a, Vector_SecureValue& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Vector_SecureValue* New() const PROTOBUF_FINAL { return New(NULL); }

  Vector_SecureValue* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Vector_SecureValue* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .mtproto.SecureValue datas = 1;
  int datas_size() const;
  void clear_datas();
  static const int kDatasFieldNumber = 1;
  const ::mtproto::SecureValue& datas(int index) const;
  ::mtproto::SecureValue* mutable_datas(int index);
  ::mtproto::SecureValue* add_datas();
  ::google::protobuf::RepeatedPtrField< ::mtproto::SecureValue >*
      mutable_datas();
  const ::google::protobuf::RepeatedPtrField< ::mtproto::SecureValue >&
      datas() const;

  // @@protoc_insertion_point(class_scope:mtproto.Vector_SecureValue)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::mtproto::SecureValue > datas_;
  mutable int _cached_size_;
  friend struct protobuf_schema_2etl_2esync_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Vector_User : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtproto.Vector_User) */ {
 public:
  Vector_User();
  virtual ~Vector_User();

  Vector_User(const Vector_User& from);

  inline Vector_User& operator=(const Vector_User& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Vector_User(Vector_User&& from) noexcept
    : Vector_User() {
    *this = ::std::move(from);
  }

  inline Vector_User& operator=(Vector_User&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Vector_User& default_instance();

  static inline const Vector_User* internal_default_instance() {
    return reinterpret_cast<const Vector_User*>(
               &_Vector_User_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    287;

  void Swap(Vector_User* other);
  friend void swap(Vector_User& a, Vector_User& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Vector_User* New() const PROTOBUF_FINAL { return New(NULL); }

  Vector_User* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Vector_User* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .mtproto.User datas = 1;
  int datas_size() const;
  void clear_datas();
  static const int kDatasFieldNumber = 1;
  const ::mtproto::User& datas(int index) const;
  ::mtproto::User* mutable_datas(int index);
  ::mtproto::User* add_datas();
  ::google::protobuf::RepeatedPtrField< ::mtproto::User >*
      mutable_datas();
  const ::google::protobuf::RepeatedPtrField< ::mtproto::User >&
      datas() const;

  // @@protoc_insertion_point(class_scope:mtproto.Vector_User)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::mtproto::User > datas_;
  mutable int _cached_size_;
  friend struct protobuf_schema_2etl_2esync_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Vector_ContactStatus : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtproto.Vector_ContactStatus) */ {
 public:
  Vector_ContactStatus();
  virtual ~Vector_ContactStatus();

  Vector_ContactStatus(const Vector_ContactStatus& from);

  inline Vector_ContactStatus& operator=(const Vector_ContactStatus& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Vector_ContactStatus(Vector_ContactStatus&& from) noexcept
    : Vector_ContactStatus() {
    *this = ::std::move(from);
  }

  inline Vector_ContactStatus& operator=(Vector_ContactStatus&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Vector_ContactStatus& default_instance();

  static inline const Vector_ContactStatus* internal_default_instance() {
    return reinterpret_cast<const Vector_ContactStatus*>(
               &_Vector_ContactStatus_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    288;

  void Swap(Vector_ContactStatus* other);
  friend void swap(Vector_ContactStatus& a, Vector_ContactStatus& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Vector_ContactStatus* New() const PROTOBUF_FINAL { return New(NULL); }

  Vector_ContactStatus* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Vector_ContactStatus* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .mtproto.ContactStatus datas = 1;
  int datas_size() const;
  void clear_datas();
  static const int kDatasFieldNumber = 1;
  const ::mtproto::ContactStatus& datas(int index) const;
  ::mtproto::ContactStatus* mutable_datas(int index);
  ::mtproto::ContactStatus* add_datas();
  ::google::protobuf::RepeatedPtrField< ::mtproto::ContactStatus >*
      mutable_datas();
  const ::google::protobuf::RepeatedPtrField< ::mtproto::ContactStatus >&
      datas() const;

  // @@protoc_insertion_point(class_scope:mtproto.Vector_ContactStatus)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::mtproto::ContactStatus > datas_;
  mutable int _cached_size_;
  friend struct protobuf_schema_2etl_2esync_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Vector_int : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtproto.Vector_int) */ {
 public:
  Vector_int();
  virtual ~Vector_int();

  Vector_int(const Vector_int& from);

  inline Vector_int& operator=(const Vector_int& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Vector_int(Vector_int&& from) noexcept
    : Vector_int() {
    *this = ::std::move(from);
  }

  inline Vector_int& operator=(Vector_int&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Vector_int& default_instance();

  static inline const Vector_int* internal_default_instance() {
    return reinterpret_cast<const Vector_int*>(
               &_Vector_int_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    289;

  void Swap(Vector_int* other);
  friend void swap(Vector_int& a, Vector_int& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Vector_int* New() const PROTOBUF_FINAL { return New(NULL); }

  Vector_int* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Vector_int* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 datas = 1;
  int datas_size() const;
  void clear_datas();
  static const int kDatasFieldNumber = 1;
  ::google::protobuf::int32 datas(int index) const;
  void set_datas(int index, ::google::protobuf::int32 value);
  void add_datas(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      datas() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_datas();

  // @@protoc_insertion_point(class_scope:mtproto.Vector_int)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > datas_;
  mutable int _cached_size_;
  friend struct protobuf_schema_2etl_2esync_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Vector_SavedContact : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtproto.Vector_SavedContact) */ {
 public:
  Vector_SavedContact();
  virtual ~Vector_SavedContact();

  Vector_SavedContact(const Vector_SavedContact& from);

  inline Vector_SavedContact& operator=(const Vector_SavedContact& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Vector_SavedContact(Vector_SavedContact&& from) noexcept
    : Vector_SavedContact() {
    *this = ::std::move(from);
  }

  inline Vector_SavedContact& operator=(Vector_SavedContact&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Vector_SavedContact& default_instance();

  static inline const Vector_SavedContact* internal_default_instance() {
    return reinterpret_cast<const Vector_SavedContact*>(
               &_Vector_SavedContact_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    290;

  void Swap(Vector_SavedContact* other);
  friend void swap(Vector_SavedContact& a, Vector_SavedContact& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Vector_SavedContact* New() const PROTOBUF_FINAL { return New(NULL); }

  Vector_SavedContact* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Vector_SavedContact* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .mtproto.SavedContact datas = 1;
  int datas_size() const;
  void clear_datas();
  static const int kDatasFieldNumber = 1;
  const ::mtproto::SavedContact& datas(int index) const;
  ::mtproto::SavedContact* mutable_datas(int index);
  ::mtproto::SavedContact* add_datas();
  ::google::protobuf::RepeatedPtrField< ::mtproto::SavedContact >*
      mutable_datas();
  const ::google::protobuf::RepeatedPtrField< ::mtproto::SavedContact >&
      datas() const;

  // @@protoc_insertion_point(class_scope:mtproto.Vector_SavedContact)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::mtproto::SavedContact > datas_;
  mutable int _cached_size_;
  friend struct protobuf_schema_2etl_2esync_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Vector_ReceivedNotifyMessage : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtproto.Vector_ReceivedNotifyMessage) */ {
 public:
  Vector_ReceivedNotifyMessage();
  virtual ~Vector_ReceivedNotifyMessage();

  Vector_ReceivedNotifyMessage(const Vector_ReceivedNotifyMessage& from);

  inline Vector_ReceivedNotifyMessage& operator=(const Vector_ReceivedNotifyMessage& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Vector_ReceivedNotifyMessage(Vector_ReceivedNotifyMessage&& from) noexcept
    : Vector_ReceivedNotifyMessage() {
    *this = ::std::move(from);
  }

  inline Vector_ReceivedNotifyMessage& operator=(Vector_ReceivedNotifyMessage&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Vector_ReceivedNotifyMessage& default_instance();

  static inline const Vector_ReceivedNotifyMessage* internal_default_instance() {
    return reinterpret_cast<const Vector_ReceivedNotifyMessage*>(
               &_Vector_ReceivedNotifyMessage_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    291;

  void Swap(Vector_ReceivedNotifyMessage* other);
  friend void swap(Vector_ReceivedNotifyMessage& a, Vector_ReceivedNotifyMessage& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Vector_ReceivedNotifyMessage* New() const PROTOBUF_FINAL { return New(NULL); }

  Vector_ReceivedNotifyMessage* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Vector_ReceivedNotifyMessage* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .mtproto.ReceivedNotifyMessage datas = 1;
  int datas_size() const;
  void clear_datas();
  static const int kDatasFieldNumber = 1;
  const ::mtproto::ReceivedNotifyMessage& datas(int index) const;
  ::mtproto::ReceivedNotifyMessage* mutable_datas(int index);
  ::mtproto::ReceivedNotifyMessage* add_datas();
  ::google::protobuf::RepeatedPtrField< ::mtproto::ReceivedNotifyMessage >*
      mutable_datas();
  const ::google::protobuf::RepeatedPtrField< ::mtproto::ReceivedNotifyMessage >&
      datas() const;

  // @@protoc_insertion_point(class_scope:mtproto.Vector_ReceivedNotifyMessage)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::mtproto::ReceivedNotifyMessage > datas_;
  mutable int _cached_size_;
  friend struct protobuf_schema_2etl_2esync_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Vector_long : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtproto.Vector_long) */ {
 public:
  Vector_long();
  virtual ~Vector_long();

  Vector_long(const Vector_long& from);

  inline Vector_long& operator=(const Vector_long& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Vector_long(Vector_long&& from) noexcept
    : Vector_long() {
    *this = ::std::move(from);
  }

  inline Vector_long& operator=(Vector_long&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Vector_long& default_instance();

  static inline const Vector_long* internal_default_instance() {
    return reinterpret_cast<const Vector_long*>(
               &_Vector_long_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    292;

  void Swap(Vector_long* other);
  friend void swap(Vector_long& a, Vector_long& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Vector_long* New() const PROTOBUF_FINAL { return New(NULL); }

  Vector_long* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Vector_long* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int64 datas = 1;
  int datas_size() const;
  void clear_datas();
  static const int kDatasFieldNumber = 1;
  ::google::protobuf::int64 datas(int index) const;
  void set_datas(int index, ::google::protobuf::int64 value);
  void add_datas(::google::protobuf::int64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      datas() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_datas();

  // @@protoc_insertion_point(class_scope:mtproto.Vector_long)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > datas_;
  mutable int _cached_size_;
  friend struct protobuf_schema_2etl_2esync_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Vector_StickerSetCovered : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtproto.Vector_StickerSetCovered) */ {
 public:
  Vector_StickerSetCovered();
  virtual ~Vector_StickerSetCovered();

  Vector_StickerSetCovered(const Vector_StickerSetCovered& from);

  inline Vector_StickerSetCovered& operator=(const Vector_StickerSetCovered& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Vector_StickerSetCovered(Vector_StickerSetCovered&& from) noexcept
    : Vector_StickerSetCovered() {
    *this = ::std::move(from);
  }

  inline Vector_StickerSetCovered& operator=(Vector_StickerSetCovered&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Vector_StickerSetCovered& default_instance();

  static inline const Vector_StickerSetCovered* internal_default_instance() {
    return reinterpret_cast<const Vector_StickerSetCovered*>(
               &_Vector_StickerSetCovered_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    293;

  void Swap(Vector_StickerSetCovered* other);
  friend void swap(Vector_StickerSetCovered& a, Vector_StickerSetCovered& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Vector_StickerSetCovered* New() const PROTOBUF_FINAL { return New(NULL); }

  Vector_StickerSetCovered* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Vector_StickerSetCovered* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .mtproto.StickerSetCovered datas = 1;
  int datas_size() const;
  void clear_datas();
  static const int kDatasFieldNumber = 1;
  const ::mtproto::StickerSetCovered& datas(int index) const;
  ::mtproto::StickerSetCovered* mutable_datas(int index);
  ::mtproto::StickerSetCovered* add_datas();
  ::google::protobuf::RepeatedPtrField< ::mtproto::StickerSetCovered >*
      mutable_datas();
  const ::google::protobuf::RepeatedPtrField< ::mtproto::StickerSetCovered >&
      datas() const;

  // @@protoc_insertion_point(class_scope:mtproto.Vector_StickerSetCovered)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::mtproto::StickerSetCovered > datas_;
  mutable int _cached_size_;
  friend struct protobuf_schema_2etl_2esync_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Vector_MessageRange : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtproto.Vector_MessageRange) */ {
 public:
  Vector_MessageRange();
  virtual ~Vector_MessageRange();

  Vector_MessageRange(const Vector_MessageRange& from);

  inline Vector_MessageRange& operator=(const Vector_MessageRange& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Vector_MessageRange(Vector_MessageRange&& from) noexcept
    : Vector_MessageRange() {
    *this = ::std::move(from);
  }

  inline Vector_MessageRange& operator=(Vector_MessageRange&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Vector_MessageRange& default_instance();

  static inline const Vector_MessageRange* internal_default_instance() {
    return reinterpret_cast<const Vector_MessageRange*>(
               &_Vector_MessageRange_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    294;

  void Swap(Vector_MessageRange* other);
  friend void swap(Vector_MessageRange& a, Vector_MessageRange& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Vector_MessageRange* New() const PROTOBUF_FINAL { return New(NULL); }

  Vector_MessageRange* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Vector_MessageRange* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .mtproto.MessageRange datas = 1;
  int datas_size() const;
  void clear_datas();
  static const int kDatasFieldNumber = 1;
  const ::mtproto::MessageRange& datas(int index) const;
  ::mtproto::MessageRange* mutable_datas(int index);
  ::mtproto::MessageRange* add_datas();
  ::google::protobuf::RepeatedPtrField< ::mtproto::MessageRange >*
      mutable_datas();
  const ::google::protobuf::RepeatedPtrField< ::mtproto::MessageRange >&
      datas() const;

  // @@protoc_insertion_point(class_scope:mtproto.Vector_MessageRange)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::mtproto::MessageRange > datas_;
  mutable int _cached_size_;
  friend struct protobuf_schema_2etl_2esync_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Vector_DialogPeer : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtproto.Vector_DialogPeer) */ {
 public:
  Vector_DialogPeer();
  virtual ~Vector_DialogPeer();

  Vector_DialogPeer(const Vector_DialogPeer& from);

  inline Vector_DialogPeer& operator=(const Vector_DialogPeer& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Vector_DialogPeer(Vector_DialogPeer&& from) noexcept
    : Vector_DialogPeer() {
    *this = ::std::move(from);
  }

  inline Vector_DialogPeer& operator=(Vector_DialogPeer&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Vector_DialogPeer& default_instance();

  static inline const Vector_DialogPeer* internal_default_instance() {
    return reinterpret_cast<const Vector_DialogPeer*>(
               &_Vector_DialogPeer_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    295;

  void Swap(Vector_DialogPeer* other);
  friend void swap(Vector_DialogPeer& a, Vector_DialogPeer& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Vector_DialogPeer* New() const PROTOBUF_FINAL { return New(NULL); }

  Vector_DialogPeer* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Vector_DialogPeer* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .mtproto.DialogPeer datas = 1;
  int datas_size() const;
  void clear_datas();
  static const int kDatasFieldNumber = 1;
  const ::mtproto::DialogPeer& datas(int index) const;
  ::mtproto::DialogPeer* mutable_datas(int index);
  ::mtproto::DialogPeer* add_datas();
  ::google::protobuf::RepeatedPtrField< ::mtproto::DialogPeer >*
      mutable_datas();
  const ::google::protobuf::RepeatedPtrField< ::mtproto::DialogPeer >&
      datas() const;

  // @@protoc_insertion_point(class_scope:mtproto.Vector_DialogPeer)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::mtproto::DialogPeer > datas_;
  mutable int _cached_size_;
  friend struct protobuf_schema_2etl_2esync_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Vector_FileHash : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtproto.Vector_FileHash) */ {
 public:
  Vector_FileHash();
  virtual ~Vector_FileHash();

  Vector_FileHash(const Vector_FileHash& from);

  inline Vector_FileHash& operator=(const Vector_FileHash& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Vector_FileHash(Vector_FileHash&& from) noexcept
    : Vector_FileHash() {
    *this = ::std::move(from);
  }

  inline Vector_FileHash& operator=(Vector_FileHash&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Vector_FileHash& default_instance();

  static inline const Vector_FileHash* internal_default_instance() {
    return reinterpret_cast<const Vector_FileHash*>(
               &_Vector_FileHash_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    296;

  void Swap(Vector_FileHash* other);
  friend void swap(Vector_FileHash& a, Vector_FileHash& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Vector_FileHash* New() const PROTOBUF_FINAL { return New(NULL); }

  Vector_FileHash* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Vector_FileHash* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .mtproto.FileHash datas = 1;
  int datas_size() const;
  void clear_datas();
  static const int kDatasFieldNumber = 1;
  const ::mtproto::FileHash& datas(int index) const;
  ::mtproto::FileHash* mutable_datas(int index);
  ::mtproto::FileHash* add_datas();
  ::google::protobuf::RepeatedPtrField< ::mtproto::FileHash >*
      mutable_datas();
  const ::google::protobuf::RepeatedPtrField< ::mtproto::FileHash >&
      datas() const;

  // @@protoc_insertion_point(class_scope:mtproto.Vector_FileHash)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::mtproto::FileHash > datas_;
  mutable int _cached_size_;
  friend struct protobuf_schema_2etl_2esync_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Vector_LangPackString : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mtproto.Vector_LangPackString) */ {
 public:
  Vector_LangPackString();
  virtual ~Vector_LangPackString();

  Vector_LangPackString(const Vector_LangPackString& from);

  inline Vector_LangPackString& operator=(const Vector_LangPackString& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Vector_LangPackString(Vector_LangPackString&& from) noexcept
    : Vector_LangPackString() {
    *this = ::std::move(from);
  }

  inline Vector_LangPackString& operator=(Vector_LangPackString&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Vector_LangPackString& default_instance();

  static inline const Vector_LangPackString* internal_default_instance() {
    return reinterpret_cast<const Vector_LangPackString*>(
               &_Vector_LangPackString_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    297;

  void Swap(Vector_LangPackString* other);
  friend void swap(Vector_LangPackString& a, Vector_LangPackString& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Vector_LangPackString* New() const PROTOBUF_FINAL { return New(NULL); }

  Vector_LangPackString* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Vector_LangPackString* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .mtproto.LangPackString datas = 1;
  int datas_size() const;
  void clear_datas();
  static const int kDatasFieldNumber = 1;
  const ::mtproto::LangPackString& datas(int index) const;
  ::mtproto::LangPackString* mutable_datas(int index);
  ::mtproto::LangPackString* add_datas();
  ::google::protobuf::RepeatedPtrField< ::mtproto::LangPackString >*
      mutable_datas();
  const ::google::protobuf::RepeatedPtrField< ::mtproto::LangPackString >&
      datas() const;

  // @@protoc_insertion_point(class_scope:mtproto.Vector_LangPackString)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::mtproto::LangPackString > datas_;
  mutable int _cached_size_;
  friend struct protobuf_schema_2etl_2esync_5fservice_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// TL_langpack_getLanguagesLayer70

// -------------------------------------------------------------------

// TL_help_getScheme

// int32 version = 1;
inline void TL_help_getScheme::clear_version() {
  version_ = 0;
}
inline ::google::protobuf::int32 TL_help_getScheme::version() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_help_getScheme.version)
  return version_;
}
inline void TL_help_getScheme::set_version(::google::protobuf::int32 value) {
  
  version_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_help_getScheme.version)
}

// -------------------------------------------------------------------

// TL_messages_readHistoryLayer2

// .mtproto.InputPeer peer = 1;
inline bool TL_messages_readHistoryLayer2::has_peer() const {
  return this != internal_default_instance() && peer_ != NULL;
}
inline void TL_messages_readHistoryLayer2::clear_peer() {
  if (GetArenaNoVirtual() == NULL && peer_ != NULL) delete peer_;
  peer_ = NULL;
}
inline const ::mtproto::InputPeer& TL_messages_readHistoryLayer2::peer() const {
  const ::mtproto::InputPeer* p = peer_;
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_readHistoryLayer2.peer)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::InputPeer*>(
      &::mtproto::_InputPeer_default_instance_);
}
inline ::mtproto::InputPeer* TL_messages_readHistoryLayer2::mutable_peer() {
  
  if (peer_ == NULL) {
    peer_ = new ::mtproto::InputPeer;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_messages_readHistoryLayer2.peer)
  return peer_;
}
inline ::mtproto::InputPeer* TL_messages_readHistoryLayer2::release_peer() {
  // @@protoc_insertion_point(field_release:mtproto.TL_messages_readHistoryLayer2.peer)
  
  ::mtproto::InputPeer* temp = peer_;
  peer_ = NULL;
  return temp;
}
inline void TL_messages_readHistoryLayer2::set_allocated_peer(::mtproto::InputPeer* peer) {
  delete peer_;
  peer_ = peer;
  if (peer) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_messages_readHistoryLayer2.peer)
}

// int32 max_id = 2;
inline void TL_messages_readHistoryLayer2::clear_max_id() {
  max_id_ = 0;
}
inline ::google::protobuf::int32 TL_messages_readHistoryLayer2::max_id() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_readHistoryLayer2.max_id)
  return max_id_;
}
inline void TL_messages_readHistoryLayer2::set_max_id(::google::protobuf::int32 value) {
  
  max_id_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_readHistoryLayer2.max_id)
}

// int32 offset = 3;
inline void TL_messages_readHistoryLayer2::clear_offset() {
  offset_ = 0;
}
inline ::google::protobuf::int32 TL_messages_readHistoryLayer2::offset() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_readHistoryLayer2.offset)
  return offset_;
}
inline void TL_messages_readHistoryLayer2::set_offset(::google::protobuf::int32 value) {
  
  offset_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_readHistoryLayer2.offset)
}

// -------------------------------------------------------------------

// TL_help_getInviteTextLayer46

// string lang_code = 1;
inline void TL_help_getInviteTextLayer46::clear_lang_code() {
  lang_code_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& TL_help_getInviteTextLayer46::lang_code() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_help_getInviteTextLayer46.lang_code)
  return lang_code_.GetNoArena();
}
inline void TL_help_getInviteTextLayer46::set_lang_code(const ::std::string& value) {
  
  lang_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtproto.TL_help_getInviteTextLayer46.lang_code)
}
#if LANG_CXX11
inline void TL_help_getInviteTextLayer46::set_lang_code(::std::string&& value) {
  
  lang_code_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mtproto.TL_help_getInviteTextLayer46.lang_code)
}
#endif
inline void TL_help_getInviteTextLayer46::set_lang_code(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  lang_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtproto.TL_help_getInviteTextLayer46.lang_code)
}
inline void TL_help_getInviteTextLayer46::set_lang_code(const char* value, size_t size) {
  
  lang_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtproto.TL_help_getInviteTextLayer46.lang_code)
}
inline ::std::string* TL_help_getInviteTextLayer46::mutable_lang_code() {
  
  // @@protoc_insertion_point(field_mutable:mtproto.TL_help_getInviteTextLayer46.lang_code)
  return lang_code_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TL_help_getInviteTextLayer46::release_lang_code() {
  // @@protoc_insertion_point(field_release:mtproto.TL_help_getInviteTextLayer46.lang_code)
  
  return lang_code_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TL_help_getInviteTextLayer46::set_allocated_lang_code(::std::string* lang_code) {
  if (lang_code != NULL) {
    
  } else {
    
  }
  lang_code_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), lang_code);
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_help_getInviteTextLayer46.lang_code)
}

// -------------------------------------------------------------------

// TL_help_getAppUpdateLayer46

// string device_model = 1;
inline void TL_help_getAppUpdateLayer46::clear_device_model() {
  device_model_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& TL_help_getAppUpdateLayer46::device_model() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_help_getAppUpdateLayer46.device_model)
  return device_model_.GetNoArena();
}
inline void TL_help_getAppUpdateLayer46::set_device_model(const ::std::string& value) {
  
  device_model_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtproto.TL_help_getAppUpdateLayer46.device_model)
}
#if LANG_CXX11
inline void TL_help_getAppUpdateLayer46::set_device_model(::std::string&& value) {
  
  device_model_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mtproto.TL_help_getAppUpdateLayer46.device_model)
}
#endif
inline void TL_help_getAppUpdateLayer46::set_device_model(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  device_model_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtproto.TL_help_getAppUpdateLayer46.device_model)
}
inline void TL_help_getAppUpdateLayer46::set_device_model(const char* value, size_t size) {
  
  device_model_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtproto.TL_help_getAppUpdateLayer46.device_model)
}
inline ::std::string* TL_help_getAppUpdateLayer46::mutable_device_model() {
  
  // @@protoc_insertion_point(field_mutable:mtproto.TL_help_getAppUpdateLayer46.device_model)
  return device_model_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TL_help_getAppUpdateLayer46::release_device_model() {
  // @@protoc_insertion_point(field_release:mtproto.TL_help_getAppUpdateLayer46.device_model)
  
  return device_model_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TL_help_getAppUpdateLayer46::set_allocated_device_model(::std::string* device_model) {
  if (device_model != NULL) {
    
  } else {
    
  }
  device_model_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), device_model);
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_help_getAppUpdateLayer46.device_model)
}

// string system_version = 2;
inline void TL_help_getAppUpdateLayer46::clear_system_version() {
  system_version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& TL_help_getAppUpdateLayer46::system_version() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_help_getAppUpdateLayer46.system_version)
  return system_version_.GetNoArena();
}
inline void TL_help_getAppUpdateLayer46::set_system_version(const ::std::string& value) {
  
  system_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtproto.TL_help_getAppUpdateLayer46.system_version)
}
#if LANG_CXX11
inline void TL_help_getAppUpdateLayer46::set_system_version(::std::string&& value) {
  
  system_version_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mtproto.TL_help_getAppUpdateLayer46.system_version)
}
#endif
inline void TL_help_getAppUpdateLayer46::set_system_version(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  system_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtproto.TL_help_getAppUpdateLayer46.system_version)
}
inline void TL_help_getAppUpdateLayer46::set_system_version(const char* value, size_t size) {
  
  system_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtproto.TL_help_getAppUpdateLayer46.system_version)
}
inline ::std::string* TL_help_getAppUpdateLayer46::mutable_system_version() {
  
  // @@protoc_insertion_point(field_mutable:mtproto.TL_help_getAppUpdateLayer46.system_version)
  return system_version_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TL_help_getAppUpdateLayer46::release_system_version() {
  // @@protoc_insertion_point(field_release:mtproto.TL_help_getAppUpdateLayer46.system_version)
  
  return system_version_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TL_help_getAppUpdateLayer46::set_allocated_system_version(::std::string* system_version) {
  if (system_version != NULL) {
    
  } else {
    
  }
  system_version_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), system_version);
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_help_getAppUpdateLayer46.system_version)
}

// string app_version = 3;
inline void TL_help_getAppUpdateLayer46::clear_app_version() {
  app_version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& TL_help_getAppUpdateLayer46::app_version() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_help_getAppUpdateLayer46.app_version)
  return app_version_.GetNoArena();
}
inline void TL_help_getAppUpdateLayer46::set_app_version(const ::std::string& value) {
  
  app_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtproto.TL_help_getAppUpdateLayer46.app_version)
}
#if LANG_CXX11
inline void TL_help_getAppUpdateLayer46::set_app_version(::std::string&& value) {
  
  app_version_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mtproto.TL_help_getAppUpdateLayer46.app_version)
}
#endif
inline void TL_help_getAppUpdateLayer46::set_app_version(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  app_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtproto.TL_help_getAppUpdateLayer46.app_version)
}
inline void TL_help_getAppUpdateLayer46::set_app_version(const char* value, size_t size) {
  
  app_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtproto.TL_help_getAppUpdateLayer46.app_version)
}
inline ::std::string* TL_help_getAppUpdateLayer46::mutable_app_version() {
  
  // @@protoc_insertion_point(field_mutable:mtproto.TL_help_getAppUpdateLayer46.app_version)
  return app_version_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TL_help_getAppUpdateLayer46::release_app_version() {
  // @@protoc_insertion_point(field_release:mtproto.TL_help_getAppUpdateLayer46.app_version)
  
  return app_version_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TL_help_getAppUpdateLayer46::set_allocated_app_version(::std::string* app_version) {
  if (app_version != NULL) {
    
  } else {
    
  }
  app_version_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), app_version);
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_help_getAppUpdateLayer46.app_version)
}

// string lang_code = 4;
inline void TL_help_getAppUpdateLayer46::clear_lang_code() {
  lang_code_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& TL_help_getAppUpdateLayer46::lang_code() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_help_getAppUpdateLayer46.lang_code)
  return lang_code_.GetNoArena();
}
inline void TL_help_getAppUpdateLayer46::set_lang_code(const ::std::string& value) {
  
  lang_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtproto.TL_help_getAppUpdateLayer46.lang_code)
}
#if LANG_CXX11
inline void TL_help_getAppUpdateLayer46::set_lang_code(::std::string&& value) {
  
  lang_code_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mtproto.TL_help_getAppUpdateLayer46.lang_code)
}
#endif
inline void TL_help_getAppUpdateLayer46::set_lang_code(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  lang_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtproto.TL_help_getAppUpdateLayer46.lang_code)
}
inline void TL_help_getAppUpdateLayer46::set_lang_code(const char* value, size_t size) {
  
  lang_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtproto.TL_help_getAppUpdateLayer46.lang_code)
}
inline ::std::string* TL_help_getAppUpdateLayer46::mutable_lang_code() {
  
  // @@protoc_insertion_point(field_mutable:mtproto.TL_help_getAppUpdateLayer46.lang_code)
  return lang_code_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TL_help_getAppUpdateLayer46::release_lang_code() {
  // @@protoc_insertion_point(field_release:mtproto.TL_help_getAppUpdateLayer46.lang_code)
  
  return lang_code_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TL_help_getAppUpdateLayer46::set_allocated_lang_code(::std::string* lang_code) {
  if (lang_code != NULL) {
    
  } else {
    
  }
  lang_code_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), lang_code);
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_help_getAppUpdateLayer46.lang_code)
}

// -------------------------------------------------------------------

// TL_updates_getChannelDifferenceLayer46

// .mtproto.InputChannel channel = 1;
inline bool TL_updates_getChannelDifferenceLayer46::has_channel() const {
  return this != internal_default_instance() && channel_ != NULL;
}
inline void TL_updates_getChannelDifferenceLayer46::clear_channel() {
  if (GetArenaNoVirtual() == NULL && channel_ != NULL) delete channel_;
  channel_ = NULL;
}
inline const ::mtproto::InputChannel& TL_updates_getChannelDifferenceLayer46::channel() const {
  const ::mtproto::InputChannel* p = channel_;
  // @@protoc_insertion_point(field_get:mtproto.TL_updates_getChannelDifferenceLayer46.channel)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::InputChannel*>(
      &::mtproto::_InputChannel_default_instance_);
}
inline ::mtproto::InputChannel* TL_updates_getChannelDifferenceLayer46::mutable_channel() {
  
  if (channel_ == NULL) {
    channel_ = new ::mtproto::InputChannel;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_updates_getChannelDifferenceLayer46.channel)
  return channel_;
}
inline ::mtproto::InputChannel* TL_updates_getChannelDifferenceLayer46::release_channel() {
  // @@protoc_insertion_point(field_release:mtproto.TL_updates_getChannelDifferenceLayer46.channel)
  
  ::mtproto::InputChannel* temp = channel_;
  channel_ = NULL;
  return temp;
}
inline void TL_updates_getChannelDifferenceLayer46::set_allocated_channel(::mtproto::InputChannel* channel) {
  delete channel_;
  channel_ = channel;
  if (channel) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_updates_getChannelDifferenceLayer46.channel)
}

// .mtproto.ChannelMessagesFilter filter = 2;
inline bool TL_updates_getChannelDifferenceLayer46::has_filter() const {
  return this != internal_default_instance() && filter_ != NULL;
}
inline void TL_updates_getChannelDifferenceLayer46::clear_filter() {
  if (GetArenaNoVirtual() == NULL && filter_ != NULL) delete filter_;
  filter_ = NULL;
}
inline const ::mtproto::ChannelMessagesFilter& TL_updates_getChannelDifferenceLayer46::filter() const {
  const ::mtproto::ChannelMessagesFilter* p = filter_;
  // @@protoc_insertion_point(field_get:mtproto.TL_updates_getChannelDifferenceLayer46.filter)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::ChannelMessagesFilter*>(
      &::mtproto::_ChannelMessagesFilter_default_instance_);
}
inline ::mtproto::ChannelMessagesFilter* TL_updates_getChannelDifferenceLayer46::mutable_filter() {
  
  if (filter_ == NULL) {
    filter_ = new ::mtproto::ChannelMessagesFilter;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_updates_getChannelDifferenceLayer46.filter)
  return filter_;
}
inline ::mtproto::ChannelMessagesFilter* TL_updates_getChannelDifferenceLayer46::release_filter() {
  // @@protoc_insertion_point(field_release:mtproto.TL_updates_getChannelDifferenceLayer46.filter)
  
  ::mtproto::ChannelMessagesFilter* temp = filter_;
  filter_ = NULL;
  return temp;
}
inline void TL_updates_getChannelDifferenceLayer46::set_allocated_filter(::mtproto::ChannelMessagesFilter* filter) {
  delete filter_;
  filter_ = filter;
  if (filter) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_updates_getChannelDifferenceLayer46.filter)
}

// int32 pts = 3;
inline void TL_updates_getChannelDifferenceLayer46::clear_pts() {
  pts_ = 0;
}
inline ::google::protobuf::int32 TL_updates_getChannelDifferenceLayer46::pts() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_updates_getChannelDifferenceLayer46.pts)
  return pts_;
}
inline void TL_updates_getChannelDifferenceLayer46::set_pts(::google::protobuf::int32 value) {
  
  pts_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_updates_getChannelDifferenceLayer46.pts)
}

// int32 limit = 4;
inline void TL_updates_getChannelDifferenceLayer46::clear_limit() {
  limit_ = 0;
}
inline ::google::protobuf::int32 TL_updates_getChannelDifferenceLayer46::limit() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_updates_getChannelDifferenceLayer46.limit)
  return limit_;
}
inline void TL_updates_getChannelDifferenceLayer46::set_limit(::google::protobuf::int32 value) {
  
  limit_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_updates_getChannelDifferenceLayer46.limit)
}

// -------------------------------------------------------------------

// TL_auth_sendCodeLayer51

// bool allow_flashcall = 2;
inline void TL_auth_sendCodeLayer51::clear_allow_flashcall() {
  allow_flashcall_ = false;
}
inline bool TL_auth_sendCodeLayer51::allow_flashcall() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_auth_sendCodeLayer51.allow_flashcall)
  return allow_flashcall_;
}
inline void TL_auth_sendCodeLayer51::set_allow_flashcall(bool value) {
  
  allow_flashcall_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_auth_sendCodeLayer51.allow_flashcall)
}

// string phone_number = 3;
inline void TL_auth_sendCodeLayer51::clear_phone_number() {
  phone_number_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& TL_auth_sendCodeLayer51::phone_number() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_auth_sendCodeLayer51.phone_number)
  return phone_number_.GetNoArena();
}
inline void TL_auth_sendCodeLayer51::set_phone_number(const ::std::string& value) {
  
  phone_number_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtproto.TL_auth_sendCodeLayer51.phone_number)
}
#if LANG_CXX11
inline void TL_auth_sendCodeLayer51::set_phone_number(::std::string&& value) {
  
  phone_number_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mtproto.TL_auth_sendCodeLayer51.phone_number)
}
#endif
inline void TL_auth_sendCodeLayer51::set_phone_number(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  phone_number_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtproto.TL_auth_sendCodeLayer51.phone_number)
}
inline void TL_auth_sendCodeLayer51::set_phone_number(const char* value, size_t size) {
  
  phone_number_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtproto.TL_auth_sendCodeLayer51.phone_number)
}
inline ::std::string* TL_auth_sendCodeLayer51::mutable_phone_number() {
  
  // @@protoc_insertion_point(field_mutable:mtproto.TL_auth_sendCodeLayer51.phone_number)
  return phone_number_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TL_auth_sendCodeLayer51::release_phone_number() {
  // @@protoc_insertion_point(field_release:mtproto.TL_auth_sendCodeLayer51.phone_number)
  
  return phone_number_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TL_auth_sendCodeLayer51::set_allocated_phone_number(::std::string* phone_number) {
  if (phone_number != NULL) {
    
  } else {
    
  }
  phone_number_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), phone_number);
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_auth_sendCodeLayer51.phone_number)
}

// .mtproto.Bool current_number = 4;
inline bool TL_auth_sendCodeLayer51::has_current_number() const {
  return this != internal_default_instance() && current_number_ != NULL;
}
inline void TL_auth_sendCodeLayer51::clear_current_number() {
  if (GetArenaNoVirtual() == NULL && current_number_ != NULL) delete current_number_;
  current_number_ = NULL;
}
inline const ::mtproto::Bool& TL_auth_sendCodeLayer51::current_number() const {
  const ::mtproto::Bool* p = current_number_;
  // @@protoc_insertion_point(field_get:mtproto.TL_auth_sendCodeLayer51.current_number)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::Bool*>(
      &::mtproto::_Bool_default_instance_);
}
inline ::mtproto::Bool* TL_auth_sendCodeLayer51::mutable_current_number() {
  
  if (current_number_ == NULL) {
    current_number_ = new ::mtproto::Bool;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_auth_sendCodeLayer51.current_number)
  return current_number_;
}
inline ::mtproto::Bool* TL_auth_sendCodeLayer51::release_current_number() {
  // @@protoc_insertion_point(field_release:mtproto.TL_auth_sendCodeLayer51.current_number)
  
  ::mtproto::Bool* temp = current_number_;
  current_number_ = NULL;
  return temp;
}
inline void TL_auth_sendCodeLayer51::set_allocated_current_number(::mtproto::Bool* current_number) {
  delete current_number_;
  current_number_ = current_number;
  if (current_number) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_auth_sendCodeLayer51.current_number)
}

// int32 api_id = 5;
inline void TL_auth_sendCodeLayer51::clear_api_id() {
  api_id_ = 0;
}
inline ::google::protobuf::int32 TL_auth_sendCodeLayer51::api_id() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_auth_sendCodeLayer51.api_id)
  return api_id_;
}
inline void TL_auth_sendCodeLayer51::set_api_id(::google::protobuf::int32 value) {
  
  api_id_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_auth_sendCodeLayer51.api_id)
}

// string api_hash = 6;
inline void TL_auth_sendCodeLayer51::clear_api_hash() {
  api_hash_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& TL_auth_sendCodeLayer51::api_hash() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_auth_sendCodeLayer51.api_hash)
  return api_hash_.GetNoArena();
}
inline void TL_auth_sendCodeLayer51::set_api_hash(const ::std::string& value) {
  
  api_hash_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtproto.TL_auth_sendCodeLayer51.api_hash)
}
#if LANG_CXX11
inline void TL_auth_sendCodeLayer51::set_api_hash(::std::string&& value) {
  
  api_hash_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mtproto.TL_auth_sendCodeLayer51.api_hash)
}
#endif
inline void TL_auth_sendCodeLayer51::set_api_hash(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  api_hash_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtproto.TL_auth_sendCodeLayer51.api_hash)
}
inline void TL_auth_sendCodeLayer51::set_api_hash(const char* value, size_t size) {
  
  api_hash_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtproto.TL_auth_sendCodeLayer51.api_hash)
}
inline ::std::string* TL_auth_sendCodeLayer51::mutable_api_hash() {
  
  // @@protoc_insertion_point(field_mutable:mtproto.TL_auth_sendCodeLayer51.api_hash)
  return api_hash_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TL_auth_sendCodeLayer51::release_api_hash() {
  // @@protoc_insertion_point(field_release:mtproto.TL_auth_sendCodeLayer51.api_hash)
  
  return api_hash_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TL_auth_sendCodeLayer51::set_allocated_api_hash(::std::string* api_hash) {
  if (api_hash != NULL) {
    
  } else {
    
  }
  api_hash_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), api_hash);
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_auth_sendCodeLayer51.api_hash)
}

// string lang_code = 7;
inline void TL_auth_sendCodeLayer51::clear_lang_code() {
  lang_code_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& TL_auth_sendCodeLayer51::lang_code() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_auth_sendCodeLayer51.lang_code)
  return lang_code_.GetNoArena();
}
inline void TL_auth_sendCodeLayer51::set_lang_code(const ::std::string& value) {
  
  lang_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtproto.TL_auth_sendCodeLayer51.lang_code)
}
#if LANG_CXX11
inline void TL_auth_sendCodeLayer51::set_lang_code(::std::string&& value) {
  
  lang_code_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mtproto.TL_auth_sendCodeLayer51.lang_code)
}
#endif
inline void TL_auth_sendCodeLayer51::set_lang_code(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  lang_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtproto.TL_auth_sendCodeLayer51.lang_code)
}
inline void TL_auth_sendCodeLayer51::set_lang_code(const char* value, size_t size) {
  
  lang_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtproto.TL_auth_sendCodeLayer51.lang_code)
}
inline ::std::string* TL_auth_sendCodeLayer51::mutable_lang_code() {
  
  // @@protoc_insertion_point(field_mutable:mtproto.TL_auth_sendCodeLayer51.lang_code)
  return lang_code_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TL_auth_sendCodeLayer51::release_lang_code() {
  // @@protoc_insertion_point(field_release:mtproto.TL_auth_sendCodeLayer51.lang_code)
  
  return lang_code_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TL_auth_sendCodeLayer51::set_allocated_lang_code(::std::string* lang_code) {
  if (lang_code != NULL) {
    
  } else {
    
  }
  lang_code_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), lang_code);
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_auth_sendCodeLayer51.lang_code)
}

// -------------------------------------------------------------------

// TL_messages_getHistoryLayer51

// .mtproto.InputPeer peer = 1;
inline bool TL_messages_getHistoryLayer51::has_peer() const {
  return this != internal_default_instance() && peer_ != NULL;
}
inline void TL_messages_getHistoryLayer51::clear_peer() {
  if (GetArenaNoVirtual() == NULL && peer_ != NULL) delete peer_;
  peer_ = NULL;
}
inline const ::mtproto::InputPeer& TL_messages_getHistoryLayer51::peer() const {
  const ::mtproto::InputPeer* p = peer_;
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_getHistoryLayer51.peer)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::InputPeer*>(
      &::mtproto::_InputPeer_default_instance_);
}
inline ::mtproto::InputPeer* TL_messages_getHistoryLayer51::mutable_peer() {
  
  if (peer_ == NULL) {
    peer_ = new ::mtproto::InputPeer;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_messages_getHistoryLayer51.peer)
  return peer_;
}
inline ::mtproto::InputPeer* TL_messages_getHistoryLayer51::release_peer() {
  // @@protoc_insertion_point(field_release:mtproto.TL_messages_getHistoryLayer51.peer)
  
  ::mtproto::InputPeer* temp = peer_;
  peer_ = NULL;
  return temp;
}
inline void TL_messages_getHistoryLayer51::set_allocated_peer(::mtproto::InputPeer* peer) {
  delete peer_;
  peer_ = peer;
  if (peer) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_messages_getHistoryLayer51.peer)
}

// int32 offset_id = 2;
inline void TL_messages_getHistoryLayer51::clear_offset_id() {
  offset_id_ = 0;
}
inline ::google::protobuf::int32 TL_messages_getHistoryLayer51::offset_id() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_getHistoryLayer51.offset_id)
  return offset_id_;
}
inline void TL_messages_getHistoryLayer51::set_offset_id(::google::protobuf::int32 value) {
  
  offset_id_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_getHistoryLayer51.offset_id)
}

// int32 offset_date = 3;
inline void TL_messages_getHistoryLayer51::clear_offset_date() {
  offset_date_ = 0;
}
inline ::google::protobuf::int32 TL_messages_getHistoryLayer51::offset_date() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_getHistoryLayer51.offset_date)
  return offset_date_;
}
inline void TL_messages_getHistoryLayer51::set_offset_date(::google::protobuf::int32 value) {
  
  offset_date_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_getHistoryLayer51.offset_date)
}

// int32 add_offset = 4;
inline void TL_messages_getHistoryLayer51::clear_add_offset() {
  add_offset_ = 0;
}
inline ::google::protobuf::int32 TL_messages_getHistoryLayer51::add_offset() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_getHistoryLayer51.add_offset)
  return add_offset_;
}
inline void TL_messages_getHistoryLayer51::set_add_offset(::google::protobuf::int32 value) {
  
  add_offset_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_getHistoryLayer51.add_offset)
}

// int32 limit = 5;
inline void TL_messages_getHistoryLayer51::clear_limit() {
  limit_ = 0;
}
inline ::google::protobuf::int32 TL_messages_getHistoryLayer51::limit() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_getHistoryLayer51.limit)
  return limit_;
}
inline void TL_messages_getHistoryLayer51::set_limit(::google::protobuf::int32 value) {
  
  limit_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_getHistoryLayer51.limit)
}

// int32 max_id = 6;
inline void TL_messages_getHistoryLayer51::clear_max_id() {
  max_id_ = 0;
}
inline ::google::protobuf::int32 TL_messages_getHistoryLayer51::max_id() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_getHistoryLayer51.max_id)
  return max_id_;
}
inline void TL_messages_getHistoryLayer51::set_max_id(::google::protobuf::int32 value) {
  
  max_id_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_getHistoryLayer51.max_id)
}

// int32 min_id = 7;
inline void TL_messages_getHistoryLayer51::clear_min_id() {
  min_id_ = 0;
}
inline ::google::protobuf::int32 TL_messages_getHistoryLayer51::min_id() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_getHistoryLayer51.min_id)
  return min_id_;
}
inline void TL_messages_getHistoryLayer51::set_min_id(::google::protobuf::int32 value) {
  
  min_id_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_getHistoryLayer51.min_id)
}

// -------------------------------------------------------------------

// TL_initConnectionLayer68

// int32 api_id = 1;
inline void TL_initConnectionLayer68::clear_api_id() {
  api_id_ = 0;
}
inline ::google::protobuf::int32 TL_initConnectionLayer68::api_id() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_initConnectionLayer68.api_id)
  return api_id_;
}
inline void TL_initConnectionLayer68::set_api_id(::google::protobuf::int32 value) {
  
  api_id_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_initConnectionLayer68.api_id)
}

// string device_model = 2;
inline void TL_initConnectionLayer68::clear_device_model() {
  device_model_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& TL_initConnectionLayer68::device_model() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_initConnectionLayer68.device_model)
  return device_model_.GetNoArena();
}
inline void TL_initConnectionLayer68::set_device_model(const ::std::string& value) {
  
  device_model_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtproto.TL_initConnectionLayer68.device_model)
}
#if LANG_CXX11
inline void TL_initConnectionLayer68::set_device_model(::std::string&& value) {
  
  device_model_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mtproto.TL_initConnectionLayer68.device_model)
}
#endif
inline void TL_initConnectionLayer68::set_device_model(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  device_model_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtproto.TL_initConnectionLayer68.device_model)
}
inline void TL_initConnectionLayer68::set_device_model(const char* value, size_t size) {
  
  device_model_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtproto.TL_initConnectionLayer68.device_model)
}
inline ::std::string* TL_initConnectionLayer68::mutable_device_model() {
  
  // @@protoc_insertion_point(field_mutable:mtproto.TL_initConnectionLayer68.device_model)
  return device_model_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TL_initConnectionLayer68::release_device_model() {
  // @@protoc_insertion_point(field_release:mtproto.TL_initConnectionLayer68.device_model)
  
  return device_model_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TL_initConnectionLayer68::set_allocated_device_model(::std::string* device_model) {
  if (device_model != NULL) {
    
  } else {
    
  }
  device_model_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), device_model);
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_initConnectionLayer68.device_model)
}

// string system_version = 3;
inline void TL_initConnectionLayer68::clear_system_version() {
  system_version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& TL_initConnectionLayer68::system_version() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_initConnectionLayer68.system_version)
  return system_version_.GetNoArena();
}
inline void TL_initConnectionLayer68::set_system_version(const ::std::string& value) {
  
  system_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtproto.TL_initConnectionLayer68.system_version)
}
#if LANG_CXX11
inline void TL_initConnectionLayer68::set_system_version(::std::string&& value) {
  
  system_version_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mtproto.TL_initConnectionLayer68.system_version)
}
#endif
inline void TL_initConnectionLayer68::set_system_version(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  system_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtproto.TL_initConnectionLayer68.system_version)
}
inline void TL_initConnectionLayer68::set_system_version(const char* value, size_t size) {
  
  system_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtproto.TL_initConnectionLayer68.system_version)
}
inline ::std::string* TL_initConnectionLayer68::mutable_system_version() {
  
  // @@protoc_insertion_point(field_mutable:mtproto.TL_initConnectionLayer68.system_version)
  return system_version_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TL_initConnectionLayer68::release_system_version() {
  // @@protoc_insertion_point(field_release:mtproto.TL_initConnectionLayer68.system_version)
  
  return system_version_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TL_initConnectionLayer68::set_allocated_system_version(::std::string* system_version) {
  if (system_version != NULL) {
    
  } else {
    
  }
  system_version_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), system_version);
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_initConnectionLayer68.system_version)
}

// string app_version = 4;
inline void TL_initConnectionLayer68::clear_app_version() {
  app_version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& TL_initConnectionLayer68::app_version() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_initConnectionLayer68.app_version)
  return app_version_.GetNoArena();
}
inline void TL_initConnectionLayer68::set_app_version(const ::std::string& value) {
  
  app_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtproto.TL_initConnectionLayer68.app_version)
}
#if LANG_CXX11
inline void TL_initConnectionLayer68::set_app_version(::std::string&& value) {
  
  app_version_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mtproto.TL_initConnectionLayer68.app_version)
}
#endif
inline void TL_initConnectionLayer68::set_app_version(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  app_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtproto.TL_initConnectionLayer68.app_version)
}
inline void TL_initConnectionLayer68::set_app_version(const char* value, size_t size) {
  
  app_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtproto.TL_initConnectionLayer68.app_version)
}
inline ::std::string* TL_initConnectionLayer68::mutable_app_version() {
  
  // @@protoc_insertion_point(field_mutable:mtproto.TL_initConnectionLayer68.app_version)
  return app_version_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TL_initConnectionLayer68::release_app_version() {
  // @@protoc_insertion_point(field_release:mtproto.TL_initConnectionLayer68.app_version)
  
  return app_version_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TL_initConnectionLayer68::set_allocated_app_version(::std::string* app_version) {
  if (app_version != NULL) {
    
  } else {
    
  }
  app_version_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), app_version);
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_initConnectionLayer68.app_version)
}

// string system_lang_code = 5;
inline void TL_initConnectionLayer68::clear_system_lang_code() {
  system_lang_code_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& TL_initConnectionLayer68::system_lang_code() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_initConnectionLayer68.system_lang_code)
  return system_lang_code_.GetNoArena();
}
inline void TL_initConnectionLayer68::set_system_lang_code(const ::std::string& value) {
  
  system_lang_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtproto.TL_initConnectionLayer68.system_lang_code)
}
#if LANG_CXX11
inline void TL_initConnectionLayer68::set_system_lang_code(::std::string&& value) {
  
  system_lang_code_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mtproto.TL_initConnectionLayer68.system_lang_code)
}
#endif
inline void TL_initConnectionLayer68::set_system_lang_code(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  system_lang_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtproto.TL_initConnectionLayer68.system_lang_code)
}
inline void TL_initConnectionLayer68::set_system_lang_code(const char* value, size_t size) {
  
  system_lang_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtproto.TL_initConnectionLayer68.system_lang_code)
}
inline ::std::string* TL_initConnectionLayer68::mutable_system_lang_code() {
  
  // @@protoc_insertion_point(field_mutable:mtproto.TL_initConnectionLayer68.system_lang_code)
  return system_lang_code_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TL_initConnectionLayer68::release_system_lang_code() {
  // @@protoc_insertion_point(field_release:mtproto.TL_initConnectionLayer68.system_lang_code)
  
  return system_lang_code_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TL_initConnectionLayer68::set_allocated_system_lang_code(::std::string* system_lang_code) {
  if (system_lang_code != NULL) {
    
  } else {
    
  }
  system_lang_code_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), system_lang_code);
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_initConnectionLayer68.system_lang_code)
}

// string lang_pack = 6;
inline void TL_initConnectionLayer68::clear_lang_pack() {
  lang_pack_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& TL_initConnectionLayer68::lang_pack() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_initConnectionLayer68.lang_pack)
  return lang_pack_.GetNoArena();
}
inline void TL_initConnectionLayer68::set_lang_pack(const ::std::string& value) {
  
  lang_pack_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtproto.TL_initConnectionLayer68.lang_pack)
}
#if LANG_CXX11
inline void TL_initConnectionLayer68::set_lang_pack(::std::string&& value) {
  
  lang_pack_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mtproto.TL_initConnectionLayer68.lang_pack)
}
#endif
inline void TL_initConnectionLayer68::set_lang_pack(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  lang_pack_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtproto.TL_initConnectionLayer68.lang_pack)
}
inline void TL_initConnectionLayer68::set_lang_pack(const char* value, size_t size) {
  
  lang_pack_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtproto.TL_initConnectionLayer68.lang_pack)
}
inline ::std::string* TL_initConnectionLayer68::mutable_lang_pack() {
  
  // @@protoc_insertion_point(field_mutable:mtproto.TL_initConnectionLayer68.lang_pack)
  return lang_pack_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TL_initConnectionLayer68::release_lang_pack() {
  // @@protoc_insertion_point(field_release:mtproto.TL_initConnectionLayer68.lang_pack)
  
  return lang_pack_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TL_initConnectionLayer68::set_allocated_lang_pack(::std::string* lang_pack) {
  if (lang_pack != NULL) {
    
  } else {
    
  }
  lang_pack_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), lang_pack);
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_initConnectionLayer68.lang_pack)
}

// string lang_code = 7;
inline void TL_initConnectionLayer68::clear_lang_code() {
  lang_code_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& TL_initConnectionLayer68::lang_code() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_initConnectionLayer68.lang_code)
  return lang_code_.GetNoArena();
}
inline void TL_initConnectionLayer68::set_lang_code(const ::std::string& value) {
  
  lang_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtproto.TL_initConnectionLayer68.lang_code)
}
#if LANG_CXX11
inline void TL_initConnectionLayer68::set_lang_code(::std::string&& value) {
  
  lang_code_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mtproto.TL_initConnectionLayer68.lang_code)
}
#endif
inline void TL_initConnectionLayer68::set_lang_code(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  lang_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtproto.TL_initConnectionLayer68.lang_code)
}
inline void TL_initConnectionLayer68::set_lang_code(const char* value, size_t size) {
  
  lang_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtproto.TL_initConnectionLayer68.lang_code)
}
inline ::std::string* TL_initConnectionLayer68::mutable_lang_code() {
  
  // @@protoc_insertion_point(field_mutable:mtproto.TL_initConnectionLayer68.lang_code)
  return lang_code_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TL_initConnectionLayer68::release_lang_code() {
  // @@protoc_insertion_point(field_release:mtproto.TL_initConnectionLayer68.lang_code)
  
  return lang_code_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TL_initConnectionLayer68::set_allocated_lang_code(::std::string* lang_code) {
  if (lang_code != NULL) {
    
  } else {
    
  }
  lang_code_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), lang_code);
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_initConnectionLayer68.lang_code)
}

// bytes query = 8;
inline void TL_initConnectionLayer68::clear_query() {
  query_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& TL_initConnectionLayer68::query() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_initConnectionLayer68.query)
  return query_.GetNoArena();
}
inline void TL_initConnectionLayer68::set_query(const ::std::string& value) {
  
  query_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtproto.TL_initConnectionLayer68.query)
}
#if LANG_CXX11
inline void TL_initConnectionLayer68::set_query(::std::string&& value) {
  
  query_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mtproto.TL_initConnectionLayer68.query)
}
#endif
inline void TL_initConnectionLayer68::set_query(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  query_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtproto.TL_initConnectionLayer68.query)
}
inline void TL_initConnectionLayer68::set_query(const void* value, size_t size) {
  
  query_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtproto.TL_initConnectionLayer68.query)
}
inline ::std::string* TL_initConnectionLayer68::mutable_query() {
  
  // @@protoc_insertion_point(field_mutable:mtproto.TL_initConnectionLayer68.query)
  return query_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TL_initConnectionLayer68::release_query() {
  // @@protoc_insertion_point(field_release:mtproto.TL_initConnectionLayer68.query)
  
  return query_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TL_initConnectionLayer68::set_allocated_query(::std::string* query) {
  if (query != NULL) {
    
  } else {
    
  }
  query_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), query);
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_initConnectionLayer68.query)
}

// -------------------------------------------------------------------

// TL_messages_searchLayer68

// .mtproto.InputPeer peer = 2;
inline bool TL_messages_searchLayer68::has_peer() const {
  return this != internal_default_instance() && peer_ != NULL;
}
inline void TL_messages_searchLayer68::clear_peer() {
  if (GetArenaNoVirtual() == NULL && peer_ != NULL) delete peer_;
  peer_ = NULL;
}
inline const ::mtproto::InputPeer& TL_messages_searchLayer68::peer() const {
  const ::mtproto::InputPeer* p = peer_;
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_searchLayer68.peer)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::InputPeer*>(
      &::mtproto::_InputPeer_default_instance_);
}
inline ::mtproto::InputPeer* TL_messages_searchLayer68::mutable_peer() {
  
  if (peer_ == NULL) {
    peer_ = new ::mtproto::InputPeer;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_messages_searchLayer68.peer)
  return peer_;
}
inline ::mtproto::InputPeer* TL_messages_searchLayer68::release_peer() {
  // @@protoc_insertion_point(field_release:mtproto.TL_messages_searchLayer68.peer)
  
  ::mtproto::InputPeer* temp = peer_;
  peer_ = NULL;
  return temp;
}
inline void TL_messages_searchLayer68::set_allocated_peer(::mtproto::InputPeer* peer) {
  delete peer_;
  peer_ = peer;
  if (peer) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_messages_searchLayer68.peer)
}

// string q = 3;
inline void TL_messages_searchLayer68::clear_q() {
  q_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& TL_messages_searchLayer68::q() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_searchLayer68.q)
  return q_.GetNoArena();
}
inline void TL_messages_searchLayer68::set_q(const ::std::string& value) {
  
  q_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_searchLayer68.q)
}
#if LANG_CXX11
inline void TL_messages_searchLayer68::set_q(::std::string&& value) {
  
  q_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mtproto.TL_messages_searchLayer68.q)
}
#endif
inline void TL_messages_searchLayer68::set_q(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  q_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtproto.TL_messages_searchLayer68.q)
}
inline void TL_messages_searchLayer68::set_q(const char* value, size_t size) {
  
  q_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtproto.TL_messages_searchLayer68.q)
}
inline ::std::string* TL_messages_searchLayer68::mutable_q() {
  
  // @@protoc_insertion_point(field_mutable:mtproto.TL_messages_searchLayer68.q)
  return q_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TL_messages_searchLayer68::release_q() {
  // @@protoc_insertion_point(field_release:mtproto.TL_messages_searchLayer68.q)
  
  return q_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TL_messages_searchLayer68::set_allocated_q(::std::string* q) {
  if (q != NULL) {
    
  } else {
    
  }
  q_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), q);
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_messages_searchLayer68.q)
}

// .mtproto.InputUser from_id = 4;
inline bool TL_messages_searchLayer68::has_from_id() const {
  return this != internal_default_instance() && from_id_ != NULL;
}
inline void TL_messages_searchLayer68::clear_from_id() {
  if (GetArenaNoVirtual() == NULL && from_id_ != NULL) delete from_id_;
  from_id_ = NULL;
}
inline const ::mtproto::InputUser& TL_messages_searchLayer68::from_id() const {
  const ::mtproto::InputUser* p = from_id_;
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_searchLayer68.from_id)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::InputUser*>(
      &::mtproto::_InputUser_default_instance_);
}
inline ::mtproto::InputUser* TL_messages_searchLayer68::mutable_from_id() {
  
  if (from_id_ == NULL) {
    from_id_ = new ::mtproto::InputUser;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_messages_searchLayer68.from_id)
  return from_id_;
}
inline ::mtproto::InputUser* TL_messages_searchLayer68::release_from_id() {
  // @@protoc_insertion_point(field_release:mtproto.TL_messages_searchLayer68.from_id)
  
  ::mtproto::InputUser* temp = from_id_;
  from_id_ = NULL;
  return temp;
}
inline void TL_messages_searchLayer68::set_allocated_from_id(::mtproto::InputUser* from_id) {
  delete from_id_;
  from_id_ = from_id;
  if (from_id) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_messages_searchLayer68.from_id)
}

// .mtproto.MessagesFilter filter = 5;
inline bool TL_messages_searchLayer68::has_filter() const {
  return this != internal_default_instance() && filter_ != NULL;
}
inline void TL_messages_searchLayer68::clear_filter() {
  if (GetArenaNoVirtual() == NULL && filter_ != NULL) delete filter_;
  filter_ = NULL;
}
inline const ::mtproto::MessagesFilter& TL_messages_searchLayer68::filter() const {
  const ::mtproto::MessagesFilter* p = filter_;
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_searchLayer68.filter)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::MessagesFilter*>(
      &::mtproto::_MessagesFilter_default_instance_);
}
inline ::mtproto::MessagesFilter* TL_messages_searchLayer68::mutable_filter() {
  
  if (filter_ == NULL) {
    filter_ = new ::mtproto::MessagesFilter;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_messages_searchLayer68.filter)
  return filter_;
}
inline ::mtproto::MessagesFilter* TL_messages_searchLayer68::release_filter() {
  // @@protoc_insertion_point(field_release:mtproto.TL_messages_searchLayer68.filter)
  
  ::mtproto::MessagesFilter* temp = filter_;
  filter_ = NULL;
  return temp;
}
inline void TL_messages_searchLayer68::set_allocated_filter(::mtproto::MessagesFilter* filter) {
  delete filter_;
  filter_ = filter;
  if (filter) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_messages_searchLayer68.filter)
}

// int32 min_date = 6;
inline void TL_messages_searchLayer68::clear_min_date() {
  min_date_ = 0;
}
inline ::google::protobuf::int32 TL_messages_searchLayer68::min_date() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_searchLayer68.min_date)
  return min_date_;
}
inline void TL_messages_searchLayer68::set_min_date(::google::protobuf::int32 value) {
  
  min_date_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_searchLayer68.min_date)
}

// int32 max_date = 7;
inline void TL_messages_searchLayer68::clear_max_date() {
  max_date_ = 0;
}
inline ::google::protobuf::int32 TL_messages_searchLayer68::max_date() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_searchLayer68.max_date)
  return max_date_;
}
inline void TL_messages_searchLayer68::set_max_date(::google::protobuf::int32 value) {
  
  max_date_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_searchLayer68.max_date)
}

// int32 offset = 8;
inline void TL_messages_searchLayer68::clear_offset() {
  offset_ = 0;
}
inline ::google::protobuf::int32 TL_messages_searchLayer68::offset() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_searchLayer68.offset)
  return offset_;
}
inline void TL_messages_searchLayer68::set_offset(::google::protobuf::int32 value) {
  
  offset_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_searchLayer68.offset)
}

// int32 max_id = 9;
inline void TL_messages_searchLayer68::clear_max_id() {
  max_id_ = 0;
}
inline ::google::protobuf::int32 TL_messages_searchLayer68::max_id() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_searchLayer68.max_id)
  return max_id_;
}
inline void TL_messages_searchLayer68::set_max_id(::google::protobuf::int32 value) {
  
  max_id_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_searchLayer68.max_id)
}

// int32 limit = 10;
inline void TL_messages_searchLayer68::clear_limit() {
  limit_ = 0;
}
inline ::google::protobuf::int32 TL_messages_searchLayer68::limit() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_searchLayer68.limit)
  return limit_;
}
inline void TL_messages_searchLayer68::set_limit(::google::protobuf::int32 value) {
  
  limit_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_searchLayer68.limit)
}

// -------------------------------------------------------------------

// TL_account_registerDeviceLayer71

// int32 token_type = 1;
inline void TL_account_registerDeviceLayer71::clear_token_type() {
  token_type_ = 0;
}
inline ::google::protobuf::int32 TL_account_registerDeviceLayer71::token_type() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_account_registerDeviceLayer71.token_type)
  return token_type_;
}
inline void TL_account_registerDeviceLayer71::set_token_type(::google::protobuf::int32 value) {
  
  token_type_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_account_registerDeviceLayer71.token_type)
}

// string token = 2;
inline void TL_account_registerDeviceLayer71::clear_token() {
  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& TL_account_registerDeviceLayer71::token() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_account_registerDeviceLayer71.token)
  return token_.GetNoArena();
}
inline void TL_account_registerDeviceLayer71::set_token(const ::std::string& value) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtproto.TL_account_registerDeviceLayer71.token)
}
#if LANG_CXX11
inline void TL_account_registerDeviceLayer71::set_token(::std::string&& value) {
  
  token_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mtproto.TL_account_registerDeviceLayer71.token)
}
#endif
inline void TL_account_registerDeviceLayer71::set_token(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtproto.TL_account_registerDeviceLayer71.token)
}
inline void TL_account_registerDeviceLayer71::set_token(const char* value, size_t size) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtproto.TL_account_registerDeviceLayer71.token)
}
inline ::std::string* TL_account_registerDeviceLayer71::mutable_token() {
  
  // @@protoc_insertion_point(field_mutable:mtproto.TL_account_registerDeviceLayer71.token)
  return token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TL_account_registerDeviceLayer71::release_token() {
  // @@protoc_insertion_point(field_release:mtproto.TL_account_registerDeviceLayer71.token)
  
  return token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TL_account_registerDeviceLayer71::set_allocated_token(::std::string* token) {
  if (token != NULL) {
    
  } else {
    
  }
  token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), token);
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_account_registerDeviceLayer71.token)
}

// -------------------------------------------------------------------

// TL_account_unregisterDeviceLayer71

// int32 token_type = 1;
inline void TL_account_unregisterDeviceLayer71::clear_token_type() {
  token_type_ = 0;
}
inline ::google::protobuf::int32 TL_account_unregisterDeviceLayer71::token_type() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_account_unregisterDeviceLayer71.token_type)
  return token_type_;
}
inline void TL_account_unregisterDeviceLayer71::set_token_type(::google::protobuf::int32 value) {
  
  token_type_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_account_unregisterDeviceLayer71.token_type)
}

// string token = 2;
inline void TL_account_unregisterDeviceLayer71::clear_token() {
  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& TL_account_unregisterDeviceLayer71::token() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_account_unregisterDeviceLayer71.token)
  return token_.GetNoArena();
}
inline void TL_account_unregisterDeviceLayer71::set_token(const ::std::string& value) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtproto.TL_account_unregisterDeviceLayer71.token)
}
#if LANG_CXX11
inline void TL_account_unregisterDeviceLayer71::set_token(::std::string&& value) {
  
  token_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mtproto.TL_account_unregisterDeviceLayer71.token)
}
#endif
inline void TL_account_unregisterDeviceLayer71::set_token(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtproto.TL_account_unregisterDeviceLayer71.token)
}
inline void TL_account_unregisterDeviceLayer71::set_token(const char* value, size_t size) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtproto.TL_account_unregisterDeviceLayer71.token)
}
inline ::std::string* TL_account_unregisterDeviceLayer71::mutable_token() {
  
  // @@protoc_insertion_point(field_mutable:mtproto.TL_account_unregisterDeviceLayer71.token)
  return token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TL_account_unregisterDeviceLayer71::release_token() {
  // @@protoc_insertion_point(field_release:mtproto.TL_account_unregisterDeviceLayer71.token)
  
  return token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TL_account_unregisterDeviceLayer71::set_allocated_token(::std::string* token) {
  if (token != NULL) {
    
  } else {
    
  }
  token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), token);
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_account_unregisterDeviceLayer71.token)
}

// -------------------------------------------------------------------

// TL_langpack_getLangPackLayer71

// string lang_code = 1;
inline void TL_langpack_getLangPackLayer71::clear_lang_code() {
  lang_code_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& TL_langpack_getLangPackLayer71::lang_code() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_langpack_getLangPackLayer71.lang_code)
  return lang_code_.GetNoArena();
}
inline void TL_langpack_getLangPackLayer71::set_lang_code(const ::std::string& value) {
  
  lang_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtproto.TL_langpack_getLangPackLayer71.lang_code)
}
#if LANG_CXX11
inline void TL_langpack_getLangPackLayer71::set_lang_code(::std::string&& value) {
  
  lang_code_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mtproto.TL_langpack_getLangPackLayer71.lang_code)
}
#endif
inline void TL_langpack_getLangPackLayer71::set_lang_code(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  lang_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtproto.TL_langpack_getLangPackLayer71.lang_code)
}
inline void TL_langpack_getLangPackLayer71::set_lang_code(const char* value, size_t size) {
  
  lang_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtproto.TL_langpack_getLangPackLayer71.lang_code)
}
inline ::std::string* TL_langpack_getLangPackLayer71::mutable_lang_code() {
  
  // @@protoc_insertion_point(field_mutable:mtproto.TL_langpack_getLangPackLayer71.lang_code)
  return lang_code_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TL_langpack_getLangPackLayer71::release_lang_code() {
  // @@protoc_insertion_point(field_release:mtproto.TL_langpack_getLangPackLayer71.lang_code)
  
  return lang_code_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TL_langpack_getLangPackLayer71::set_allocated_lang_code(::std::string* lang_code) {
  if (lang_code != NULL) {
    
  } else {
    
  }
  lang_code_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), lang_code);
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_langpack_getLangPackLayer71.lang_code)
}

// -------------------------------------------------------------------

// TL_invokeAfterMsg

// int64 msg_id = 1;
inline void TL_invokeAfterMsg::clear_msg_id() {
  msg_id_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 TL_invokeAfterMsg::msg_id() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_invokeAfterMsg.msg_id)
  return msg_id_;
}
inline void TL_invokeAfterMsg::set_msg_id(::google::protobuf::int64 value) {
  
  msg_id_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_invokeAfterMsg.msg_id)
}

// bytes query = 2;
inline void TL_invokeAfterMsg::clear_query() {
  query_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& TL_invokeAfterMsg::query() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_invokeAfterMsg.query)
  return query_.GetNoArena();
}
inline void TL_invokeAfterMsg::set_query(const ::std::string& value) {
  
  query_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtproto.TL_invokeAfterMsg.query)
}
#if LANG_CXX11
inline void TL_invokeAfterMsg::set_query(::std::string&& value) {
  
  query_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mtproto.TL_invokeAfterMsg.query)
}
#endif
inline void TL_invokeAfterMsg::set_query(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  query_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtproto.TL_invokeAfterMsg.query)
}
inline void TL_invokeAfterMsg::set_query(const void* value, size_t size) {
  
  query_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtproto.TL_invokeAfterMsg.query)
}
inline ::std::string* TL_invokeAfterMsg::mutable_query() {
  
  // @@protoc_insertion_point(field_mutable:mtproto.TL_invokeAfterMsg.query)
  return query_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TL_invokeAfterMsg::release_query() {
  // @@protoc_insertion_point(field_release:mtproto.TL_invokeAfterMsg.query)
  
  return query_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TL_invokeAfterMsg::set_allocated_query(::std::string* query) {
  if (query != NULL) {
    
  } else {
    
  }
  query_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), query);
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_invokeAfterMsg.query)
}

// -------------------------------------------------------------------

// TL_invokeAfterMsgs

// repeated int64 msg_ids = 1;
inline int TL_invokeAfterMsgs::msg_ids_size() const {
  return msg_ids_.size();
}
inline void TL_invokeAfterMsgs::clear_msg_ids() {
  msg_ids_.Clear();
}
inline ::google::protobuf::int64 TL_invokeAfterMsgs::msg_ids(int index) const {
  // @@protoc_insertion_point(field_get:mtproto.TL_invokeAfterMsgs.msg_ids)
  return msg_ids_.Get(index);
}
inline void TL_invokeAfterMsgs::set_msg_ids(int index, ::google::protobuf::int64 value) {
  msg_ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:mtproto.TL_invokeAfterMsgs.msg_ids)
}
inline void TL_invokeAfterMsgs::add_msg_ids(::google::protobuf::int64 value) {
  msg_ids_.Add(value);
  // @@protoc_insertion_point(field_add:mtproto.TL_invokeAfterMsgs.msg_ids)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
TL_invokeAfterMsgs::msg_ids() const {
  // @@protoc_insertion_point(field_list:mtproto.TL_invokeAfterMsgs.msg_ids)
  return msg_ids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
TL_invokeAfterMsgs::mutable_msg_ids() {
  // @@protoc_insertion_point(field_mutable_list:mtproto.TL_invokeAfterMsgs.msg_ids)
  return &msg_ids_;
}

// bytes query = 2;
inline void TL_invokeAfterMsgs::clear_query() {
  query_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& TL_invokeAfterMsgs::query() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_invokeAfterMsgs.query)
  return query_.GetNoArena();
}
inline void TL_invokeAfterMsgs::set_query(const ::std::string& value) {
  
  query_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtproto.TL_invokeAfterMsgs.query)
}
#if LANG_CXX11
inline void TL_invokeAfterMsgs::set_query(::std::string&& value) {
  
  query_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mtproto.TL_invokeAfterMsgs.query)
}
#endif
inline void TL_invokeAfterMsgs::set_query(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  query_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtproto.TL_invokeAfterMsgs.query)
}
inline void TL_invokeAfterMsgs::set_query(const void* value, size_t size) {
  
  query_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtproto.TL_invokeAfterMsgs.query)
}
inline ::std::string* TL_invokeAfterMsgs::mutable_query() {
  
  // @@protoc_insertion_point(field_mutable:mtproto.TL_invokeAfterMsgs.query)
  return query_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TL_invokeAfterMsgs::release_query() {
  // @@protoc_insertion_point(field_release:mtproto.TL_invokeAfterMsgs.query)
  
  return query_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TL_invokeAfterMsgs::set_allocated_query(::std::string* query) {
  if (query != NULL) {
    
  } else {
    
  }
  query_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), query);
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_invokeAfterMsgs.query)
}

// -------------------------------------------------------------------

// TL_initConnection

// int32 api_id = 2;
inline void TL_initConnection::clear_api_id() {
  api_id_ = 0;
}
inline ::google::protobuf::int32 TL_initConnection::api_id() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_initConnection.api_id)
  return api_id_;
}
inline void TL_initConnection::set_api_id(::google::protobuf::int32 value) {
  
  api_id_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_initConnection.api_id)
}

// string device_model = 3;
inline void TL_initConnection::clear_device_model() {
  device_model_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& TL_initConnection::device_model() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_initConnection.device_model)
  return device_model_.GetNoArena();
}
inline void TL_initConnection::set_device_model(const ::std::string& value) {
  
  device_model_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtproto.TL_initConnection.device_model)
}
#if LANG_CXX11
inline void TL_initConnection::set_device_model(::std::string&& value) {
  
  device_model_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mtproto.TL_initConnection.device_model)
}
#endif
inline void TL_initConnection::set_device_model(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  device_model_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtproto.TL_initConnection.device_model)
}
inline void TL_initConnection::set_device_model(const char* value, size_t size) {
  
  device_model_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtproto.TL_initConnection.device_model)
}
inline ::std::string* TL_initConnection::mutable_device_model() {
  
  // @@protoc_insertion_point(field_mutable:mtproto.TL_initConnection.device_model)
  return device_model_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TL_initConnection::release_device_model() {
  // @@protoc_insertion_point(field_release:mtproto.TL_initConnection.device_model)
  
  return device_model_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TL_initConnection::set_allocated_device_model(::std::string* device_model) {
  if (device_model != NULL) {
    
  } else {
    
  }
  device_model_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), device_model);
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_initConnection.device_model)
}

// string system_version = 4;
inline void TL_initConnection::clear_system_version() {
  system_version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& TL_initConnection::system_version() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_initConnection.system_version)
  return system_version_.GetNoArena();
}
inline void TL_initConnection::set_system_version(const ::std::string& value) {
  
  system_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtproto.TL_initConnection.system_version)
}
#if LANG_CXX11
inline void TL_initConnection::set_system_version(::std::string&& value) {
  
  system_version_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mtproto.TL_initConnection.system_version)
}
#endif
inline void TL_initConnection::set_system_version(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  system_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtproto.TL_initConnection.system_version)
}
inline void TL_initConnection::set_system_version(const char* value, size_t size) {
  
  system_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtproto.TL_initConnection.system_version)
}
inline ::std::string* TL_initConnection::mutable_system_version() {
  
  // @@protoc_insertion_point(field_mutable:mtproto.TL_initConnection.system_version)
  return system_version_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TL_initConnection::release_system_version() {
  // @@protoc_insertion_point(field_release:mtproto.TL_initConnection.system_version)
  
  return system_version_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TL_initConnection::set_allocated_system_version(::std::string* system_version) {
  if (system_version != NULL) {
    
  } else {
    
  }
  system_version_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), system_version);
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_initConnection.system_version)
}

// string app_version = 5;
inline void TL_initConnection::clear_app_version() {
  app_version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& TL_initConnection::app_version() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_initConnection.app_version)
  return app_version_.GetNoArena();
}
inline void TL_initConnection::set_app_version(const ::std::string& value) {
  
  app_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtproto.TL_initConnection.app_version)
}
#if LANG_CXX11
inline void TL_initConnection::set_app_version(::std::string&& value) {
  
  app_version_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mtproto.TL_initConnection.app_version)
}
#endif
inline void TL_initConnection::set_app_version(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  app_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtproto.TL_initConnection.app_version)
}
inline void TL_initConnection::set_app_version(const char* value, size_t size) {
  
  app_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtproto.TL_initConnection.app_version)
}
inline ::std::string* TL_initConnection::mutable_app_version() {
  
  // @@protoc_insertion_point(field_mutable:mtproto.TL_initConnection.app_version)
  return app_version_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TL_initConnection::release_app_version() {
  // @@protoc_insertion_point(field_release:mtproto.TL_initConnection.app_version)
  
  return app_version_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TL_initConnection::set_allocated_app_version(::std::string* app_version) {
  if (app_version != NULL) {
    
  } else {
    
  }
  app_version_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), app_version);
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_initConnection.app_version)
}

// string system_lang_code = 6;
inline void TL_initConnection::clear_system_lang_code() {
  system_lang_code_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& TL_initConnection::system_lang_code() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_initConnection.system_lang_code)
  return system_lang_code_.GetNoArena();
}
inline void TL_initConnection::set_system_lang_code(const ::std::string& value) {
  
  system_lang_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtproto.TL_initConnection.system_lang_code)
}
#if LANG_CXX11
inline void TL_initConnection::set_system_lang_code(::std::string&& value) {
  
  system_lang_code_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mtproto.TL_initConnection.system_lang_code)
}
#endif
inline void TL_initConnection::set_system_lang_code(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  system_lang_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtproto.TL_initConnection.system_lang_code)
}
inline void TL_initConnection::set_system_lang_code(const char* value, size_t size) {
  
  system_lang_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtproto.TL_initConnection.system_lang_code)
}
inline ::std::string* TL_initConnection::mutable_system_lang_code() {
  
  // @@protoc_insertion_point(field_mutable:mtproto.TL_initConnection.system_lang_code)
  return system_lang_code_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TL_initConnection::release_system_lang_code() {
  // @@protoc_insertion_point(field_release:mtproto.TL_initConnection.system_lang_code)
  
  return system_lang_code_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TL_initConnection::set_allocated_system_lang_code(::std::string* system_lang_code) {
  if (system_lang_code != NULL) {
    
  } else {
    
  }
  system_lang_code_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), system_lang_code);
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_initConnection.system_lang_code)
}

// string lang_pack = 7;
inline void TL_initConnection::clear_lang_pack() {
  lang_pack_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& TL_initConnection::lang_pack() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_initConnection.lang_pack)
  return lang_pack_.GetNoArena();
}
inline void TL_initConnection::set_lang_pack(const ::std::string& value) {
  
  lang_pack_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtproto.TL_initConnection.lang_pack)
}
#if LANG_CXX11
inline void TL_initConnection::set_lang_pack(::std::string&& value) {
  
  lang_pack_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mtproto.TL_initConnection.lang_pack)
}
#endif
inline void TL_initConnection::set_lang_pack(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  lang_pack_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtproto.TL_initConnection.lang_pack)
}
inline void TL_initConnection::set_lang_pack(const char* value, size_t size) {
  
  lang_pack_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtproto.TL_initConnection.lang_pack)
}
inline ::std::string* TL_initConnection::mutable_lang_pack() {
  
  // @@protoc_insertion_point(field_mutable:mtproto.TL_initConnection.lang_pack)
  return lang_pack_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TL_initConnection::release_lang_pack() {
  // @@protoc_insertion_point(field_release:mtproto.TL_initConnection.lang_pack)
  
  return lang_pack_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TL_initConnection::set_allocated_lang_pack(::std::string* lang_pack) {
  if (lang_pack != NULL) {
    
  } else {
    
  }
  lang_pack_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), lang_pack);
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_initConnection.lang_pack)
}

// string lang_code = 8;
inline void TL_initConnection::clear_lang_code() {
  lang_code_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& TL_initConnection::lang_code() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_initConnection.lang_code)
  return lang_code_.GetNoArena();
}
inline void TL_initConnection::set_lang_code(const ::std::string& value) {
  
  lang_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtproto.TL_initConnection.lang_code)
}
#if LANG_CXX11
inline void TL_initConnection::set_lang_code(::std::string&& value) {
  
  lang_code_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mtproto.TL_initConnection.lang_code)
}
#endif
inline void TL_initConnection::set_lang_code(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  lang_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtproto.TL_initConnection.lang_code)
}
inline void TL_initConnection::set_lang_code(const char* value, size_t size) {
  
  lang_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtproto.TL_initConnection.lang_code)
}
inline ::std::string* TL_initConnection::mutable_lang_code() {
  
  // @@protoc_insertion_point(field_mutable:mtproto.TL_initConnection.lang_code)
  return lang_code_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TL_initConnection::release_lang_code() {
  // @@protoc_insertion_point(field_release:mtproto.TL_initConnection.lang_code)
  
  return lang_code_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TL_initConnection::set_allocated_lang_code(::std::string* lang_code) {
  if (lang_code != NULL) {
    
  } else {
    
  }
  lang_code_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), lang_code);
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_initConnection.lang_code)
}

// .mtproto.InputClientProxy proxy = 9;
inline bool TL_initConnection::has_proxy() const {
  return this != internal_default_instance() && proxy_ != NULL;
}
inline void TL_initConnection::clear_proxy() {
  if (GetArenaNoVirtual() == NULL && proxy_ != NULL) delete proxy_;
  proxy_ = NULL;
}
inline const ::mtproto::InputClientProxy& TL_initConnection::proxy() const {
  const ::mtproto::InputClientProxy* p = proxy_;
  // @@protoc_insertion_point(field_get:mtproto.TL_initConnection.proxy)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::InputClientProxy*>(
      &::mtproto::_InputClientProxy_default_instance_);
}
inline ::mtproto::InputClientProxy* TL_initConnection::mutable_proxy() {
  
  if (proxy_ == NULL) {
    proxy_ = new ::mtproto::InputClientProxy;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_initConnection.proxy)
  return proxy_;
}
inline ::mtproto::InputClientProxy* TL_initConnection::release_proxy() {
  // @@protoc_insertion_point(field_release:mtproto.TL_initConnection.proxy)
  
  ::mtproto::InputClientProxy* temp = proxy_;
  proxy_ = NULL;
  return temp;
}
inline void TL_initConnection::set_allocated_proxy(::mtproto::InputClientProxy* proxy) {
  delete proxy_;
  proxy_ = proxy;
  if (proxy) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_initConnection.proxy)
}

// bytes query = 10;
inline void TL_initConnection::clear_query() {
  query_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& TL_initConnection::query() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_initConnection.query)
  return query_.GetNoArena();
}
inline void TL_initConnection::set_query(const ::std::string& value) {
  
  query_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtproto.TL_initConnection.query)
}
#if LANG_CXX11
inline void TL_initConnection::set_query(::std::string&& value) {
  
  query_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mtproto.TL_initConnection.query)
}
#endif
inline void TL_initConnection::set_query(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  query_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtproto.TL_initConnection.query)
}
inline void TL_initConnection::set_query(const void* value, size_t size) {
  
  query_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtproto.TL_initConnection.query)
}
inline ::std::string* TL_initConnection::mutable_query() {
  
  // @@protoc_insertion_point(field_mutable:mtproto.TL_initConnection.query)
  return query_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TL_initConnection::release_query() {
  // @@protoc_insertion_point(field_release:mtproto.TL_initConnection.query)
  
  return query_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TL_initConnection::set_allocated_query(::std::string* query) {
  if (query != NULL) {
    
  } else {
    
  }
  query_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), query);
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_initConnection.query)
}

// -------------------------------------------------------------------

// TL_invokeWithLayer

// int32 layer = 1;
inline void TL_invokeWithLayer::clear_layer() {
  layer_ = 0;
}
inline ::google::protobuf::int32 TL_invokeWithLayer::layer() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_invokeWithLayer.layer)
  return layer_;
}
inline void TL_invokeWithLayer::set_layer(::google::protobuf::int32 value) {
  
  layer_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_invokeWithLayer.layer)
}

// bytes query = 2;
inline void TL_invokeWithLayer::clear_query() {
  query_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& TL_invokeWithLayer::query() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_invokeWithLayer.query)
  return query_.GetNoArena();
}
inline void TL_invokeWithLayer::set_query(const ::std::string& value) {
  
  query_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtproto.TL_invokeWithLayer.query)
}
#if LANG_CXX11
inline void TL_invokeWithLayer::set_query(::std::string&& value) {
  
  query_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mtproto.TL_invokeWithLayer.query)
}
#endif
inline void TL_invokeWithLayer::set_query(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  query_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtproto.TL_invokeWithLayer.query)
}
inline void TL_invokeWithLayer::set_query(const void* value, size_t size) {
  
  query_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtproto.TL_invokeWithLayer.query)
}
inline ::std::string* TL_invokeWithLayer::mutable_query() {
  
  // @@protoc_insertion_point(field_mutable:mtproto.TL_invokeWithLayer.query)
  return query_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TL_invokeWithLayer::release_query() {
  // @@protoc_insertion_point(field_release:mtproto.TL_invokeWithLayer.query)
  
  return query_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TL_invokeWithLayer::set_allocated_query(::std::string* query) {
  if (query != NULL) {
    
  } else {
    
  }
  query_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), query);
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_invokeWithLayer.query)
}

// -------------------------------------------------------------------

// TL_invokeWithoutUpdates

// bytes query = 1;
inline void TL_invokeWithoutUpdates::clear_query() {
  query_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& TL_invokeWithoutUpdates::query() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_invokeWithoutUpdates.query)
  return query_.GetNoArena();
}
inline void TL_invokeWithoutUpdates::set_query(const ::std::string& value) {
  
  query_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtproto.TL_invokeWithoutUpdates.query)
}
#if LANG_CXX11
inline void TL_invokeWithoutUpdates::set_query(::std::string&& value) {
  
  query_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mtproto.TL_invokeWithoutUpdates.query)
}
#endif
inline void TL_invokeWithoutUpdates::set_query(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  query_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtproto.TL_invokeWithoutUpdates.query)
}
inline void TL_invokeWithoutUpdates::set_query(const void* value, size_t size) {
  
  query_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtproto.TL_invokeWithoutUpdates.query)
}
inline ::std::string* TL_invokeWithoutUpdates::mutable_query() {
  
  // @@protoc_insertion_point(field_mutable:mtproto.TL_invokeWithoutUpdates.query)
  return query_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TL_invokeWithoutUpdates::release_query() {
  // @@protoc_insertion_point(field_release:mtproto.TL_invokeWithoutUpdates.query)
  
  return query_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TL_invokeWithoutUpdates::set_allocated_query(::std::string* query) {
  if (query != NULL) {
    
  } else {
    
  }
  query_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), query);
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_invokeWithoutUpdates.query)
}

// -------------------------------------------------------------------

// TL_invokeWithMessagesRange

// .mtproto.MessageRange range = 1;
inline bool TL_invokeWithMessagesRange::has_range() const {
  return this != internal_default_instance() && range_ != NULL;
}
inline void TL_invokeWithMessagesRange::clear_range() {
  if (GetArenaNoVirtual() == NULL && range_ != NULL) delete range_;
  range_ = NULL;
}
inline const ::mtproto::MessageRange& TL_invokeWithMessagesRange::range() const {
  const ::mtproto::MessageRange* p = range_;
  // @@protoc_insertion_point(field_get:mtproto.TL_invokeWithMessagesRange.range)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::MessageRange*>(
      &::mtproto::_MessageRange_default_instance_);
}
inline ::mtproto::MessageRange* TL_invokeWithMessagesRange::mutable_range() {
  
  if (range_ == NULL) {
    range_ = new ::mtproto::MessageRange;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_invokeWithMessagesRange.range)
  return range_;
}
inline ::mtproto::MessageRange* TL_invokeWithMessagesRange::release_range() {
  // @@protoc_insertion_point(field_release:mtproto.TL_invokeWithMessagesRange.range)
  
  ::mtproto::MessageRange* temp = range_;
  range_ = NULL;
  return temp;
}
inline void TL_invokeWithMessagesRange::set_allocated_range(::mtproto::MessageRange* range) {
  delete range_;
  range_ = range;
  if (range) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_invokeWithMessagesRange.range)
}

// bytes query = 2;
inline void TL_invokeWithMessagesRange::clear_query() {
  query_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& TL_invokeWithMessagesRange::query() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_invokeWithMessagesRange.query)
  return query_.GetNoArena();
}
inline void TL_invokeWithMessagesRange::set_query(const ::std::string& value) {
  
  query_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtproto.TL_invokeWithMessagesRange.query)
}
#if LANG_CXX11
inline void TL_invokeWithMessagesRange::set_query(::std::string&& value) {
  
  query_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mtproto.TL_invokeWithMessagesRange.query)
}
#endif
inline void TL_invokeWithMessagesRange::set_query(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  query_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtproto.TL_invokeWithMessagesRange.query)
}
inline void TL_invokeWithMessagesRange::set_query(const void* value, size_t size) {
  
  query_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtproto.TL_invokeWithMessagesRange.query)
}
inline ::std::string* TL_invokeWithMessagesRange::mutable_query() {
  
  // @@protoc_insertion_point(field_mutable:mtproto.TL_invokeWithMessagesRange.query)
  return query_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TL_invokeWithMessagesRange::release_query() {
  // @@protoc_insertion_point(field_release:mtproto.TL_invokeWithMessagesRange.query)
  
  return query_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TL_invokeWithMessagesRange::set_allocated_query(::std::string* query) {
  if (query != NULL) {
    
  } else {
    
  }
  query_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), query);
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_invokeWithMessagesRange.query)
}

// -------------------------------------------------------------------

// TL_invokeWithTakeout

// int64 takeout_id = 1;
inline void TL_invokeWithTakeout::clear_takeout_id() {
  takeout_id_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 TL_invokeWithTakeout::takeout_id() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_invokeWithTakeout.takeout_id)
  return takeout_id_;
}
inline void TL_invokeWithTakeout::set_takeout_id(::google::protobuf::int64 value) {
  
  takeout_id_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_invokeWithTakeout.takeout_id)
}

// bytes query = 2;
inline void TL_invokeWithTakeout::clear_query() {
  query_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& TL_invokeWithTakeout::query() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_invokeWithTakeout.query)
  return query_.GetNoArena();
}
inline void TL_invokeWithTakeout::set_query(const ::std::string& value) {
  
  query_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtproto.TL_invokeWithTakeout.query)
}
#if LANG_CXX11
inline void TL_invokeWithTakeout::set_query(::std::string&& value) {
  
  query_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mtproto.TL_invokeWithTakeout.query)
}
#endif
inline void TL_invokeWithTakeout::set_query(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  query_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtproto.TL_invokeWithTakeout.query)
}
inline void TL_invokeWithTakeout::set_query(const void* value, size_t size) {
  
  query_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtproto.TL_invokeWithTakeout.query)
}
inline ::std::string* TL_invokeWithTakeout::mutable_query() {
  
  // @@protoc_insertion_point(field_mutable:mtproto.TL_invokeWithTakeout.query)
  return query_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TL_invokeWithTakeout::release_query() {
  // @@protoc_insertion_point(field_release:mtproto.TL_invokeWithTakeout.query)
  
  return query_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TL_invokeWithTakeout::set_allocated_query(::std::string* query) {
  if (query != NULL) {
    
  } else {
    
  }
  query_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), query);
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_invokeWithTakeout.query)
}

// -------------------------------------------------------------------

// TL_auth_sendCode

// bool allow_flashcall = 2;
inline void TL_auth_sendCode::clear_allow_flashcall() {
  allow_flashcall_ = false;
}
inline bool TL_auth_sendCode::allow_flashcall() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_auth_sendCode.allow_flashcall)
  return allow_flashcall_;
}
inline void TL_auth_sendCode::set_allow_flashcall(bool value) {
  
  allow_flashcall_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_auth_sendCode.allow_flashcall)
}

// string phone_number = 3;
inline void TL_auth_sendCode::clear_phone_number() {
  phone_number_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& TL_auth_sendCode::phone_number() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_auth_sendCode.phone_number)
  return phone_number_.GetNoArena();
}
inline void TL_auth_sendCode::set_phone_number(const ::std::string& value) {
  
  phone_number_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtproto.TL_auth_sendCode.phone_number)
}
#if LANG_CXX11
inline void TL_auth_sendCode::set_phone_number(::std::string&& value) {
  
  phone_number_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mtproto.TL_auth_sendCode.phone_number)
}
#endif
inline void TL_auth_sendCode::set_phone_number(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  phone_number_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtproto.TL_auth_sendCode.phone_number)
}
inline void TL_auth_sendCode::set_phone_number(const char* value, size_t size) {
  
  phone_number_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtproto.TL_auth_sendCode.phone_number)
}
inline ::std::string* TL_auth_sendCode::mutable_phone_number() {
  
  // @@protoc_insertion_point(field_mutable:mtproto.TL_auth_sendCode.phone_number)
  return phone_number_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TL_auth_sendCode::release_phone_number() {
  // @@protoc_insertion_point(field_release:mtproto.TL_auth_sendCode.phone_number)
  
  return phone_number_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TL_auth_sendCode::set_allocated_phone_number(::std::string* phone_number) {
  if (phone_number != NULL) {
    
  } else {
    
  }
  phone_number_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), phone_number);
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_auth_sendCode.phone_number)
}

// .mtproto.Bool current_number = 4;
inline bool TL_auth_sendCode::has_current_number() const {
  return this != internal_default_instance() && current_number_ != NULL;
}
inline void TL_auth_sendCode::clear_current_number() {
  if (GetArenaNoVirtual() == NULL && current_number_ != NULL) delete current_number_;
  current_number_ = NULL;
}
inline const ::mtproto::Bool& TL_auth_sendCode::current_number() const {
  const ::mtproto::Bool* p = current_number_;
  // @@protoc_insertion_point(field_get:mtproto.TL_auth_sendCode.current_number)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::Bool*>(
      &::mtproto::_Bool_default_instance_);
}
inline ::mtproto::Bool* TL_auth_sendCode::mutable_current_number() {
  
  if (current_number_ == NULL) {
    current_number_ = new ::mtproto::Bool;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_auth_sendCode.current_number)
  return current_number_;
}
inline ::mtproto::Bool* TL_auth_sendCode::release_current_number() {
  // @@protoc_insertion_point(field_release:mtproto.TL_auth_sendCode.current_number)
  
  ::mtproto::Bool* temp = current_number_;
  current_number_ = NULL;
  return temp;
}
inline void TL_auth_sendCode::set_allocated_current_number(::mtproto::Bool* current_number) {
  delete current_number_;
  current_number_ = current_number;
  if (current_number) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_auth_sendCode.current_number)
}

// int32 api_id = 5;
inline void TL_auth_sendCode::clear_api_id() {
  api_id_ = 0;
}
inline ::google::protobuf::int32 TL_auth_sendCode::api_id() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_auth_sendCode.api_id)
  return api_id_;
}
inline void TL_auth_sendCode::set_api_id(::google::protobuf::int32 value) {
  
  api_id_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_auth_sendCode.api_id)
}

// string api_hash = 6;
inline void TL_auth_sendCode::clear_api_hash() {
  api_hash_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& TL_auth_sendCode::api_hash() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_auth_sendCode.api_hash)
  return api_hash_.GetNoArena();
}
inline void TL_auth_sendCode::set_api_hash(const ::std::string& value) {
  
  api_hash_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtproto.TL_auth_sendCode.api_hash)
}
#if LANG_CXX11
inline void TL_auth_sendCode::set_api_hash(::std::string&& value) {
  
  api_hash_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mtproto.TL_auth_sendCode.api_hash)
}
#endif
inline void TL_auth_sendCode::set_api_hash(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  api_hash_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtproto.TL_auth_sendCode.api_hash)
}
inline void TL_auth_sendCode::set_api_hash(const char* value, size_t size) {
  
  api_hash_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtproto.TL_auth_sendCode.api_hash)
}
inline ::std::string* TL_auth_sendCode::mutable_api_hash() {
  
  // @@protoc_insertion_point(field_mutable:mtproto.TL_auth_sendCode.api_hash)
  return api_hash_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TL_auth_sendCode::release_api_hash() {
  // @@protoc_insertion_point(field_release:mtproto.TL_auth_sendCode.api_hash)
  
  return api_hash_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TL_auth_sendCode::set_allocated_api_hash(::std::string* api_hash) {
  if (api_hash != NULL) {
    
  } else {
    
  }
  api_hash_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), api_hash);
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_auth_sendCode.api_hash)
}

// -------------------------------------------------------------------

// TL_auth_signUp

// string phone_number = 1;
inline void TL_auth_signUp::clear_phone_number() {
  phone_number_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& TL_auth_signUp::phone_number() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_auth_signUp.phone_number)
  return phone_number_.GetNoArena();
}
inline void TL_auth_signUp::set_phone_number(const ::std::string& value) {
  
  phone_number_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtproto.TL_auth_signUp.phone_number)
}
#if LANG_CXX11
inline void TL_auth_signUp::set_phone_number(::std::string&& value) {
  
  phone_number_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mtproto.TL_auth_signUp.phone_number)
}
#endif
inline void TL_auth_signUp::set_phone_number(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  phone_number_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtproto.TL_auth_signUp.phone_number)
}
inline void TL_auth_signUp::set_phone_number(const char* value, size_t size) {
  
  phone_number_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtproto.TL_auth_signUp.phone_number)
}
inline ::std::string* TL_auth_signUp::mutable_phone_number() {
  
  // @@protoc_insertion_point(field_mutable:mtproto.TL_auth_signUp.phone_number)
  return phone_number_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TL_auth_signUp::release_phone_number() {
  // @@protoc_insertion_point(field_release:mtproto.TL_auth_signUp.phone_number)
  
  return phone_number_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TL_auth_signUp::set_allocated_phone_number(::std::string* phone_number) {
  if (phone_number != NULL) {
    
  } else {
    
  }
  phone_number_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), phone_number);
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_auth_signUp.phone_number)
}

// string phone_code_hash = 2;
inline void TL_auth_signUp::clear_phone_code_hash() {
  phone_code_hash_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& TL_auth_signUp::phone_code_hash() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_auth_signUp.phone_code_hash)
  return phone_code_hash_.GetNoArena();
}
inline void TL_auth_signUp::set_phone_code_hash(const ::std::string& value) {
  
  phone_code_hash_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtproto.TL_auth_signUp.phone_code_hash)
}
#if LANG_CXX11
inline void TL_auth_signUp::set_phone_code_hash(::std::string&& value) {
  
  phone_code_hash_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mtproto.TL_auth_signUp.phone_code_hash)
}
#endif
inline void TL_auth_signUp::set_phone_code_hash(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  phone_code_hash_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtproto.TL_auth_signUp.phone_code_hash)
}
inline void TL_auth_signUp::set_phone_code_hash(const char* value, size_t size) {
  
  phone_code_hash_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtproto.TL_auth_signUp.phone_code_hash)
}
inline ::std::string* TL_auth_signUp::mutable_phone_code_hash() {
  
  // @@protoc_insertion_point(field_mutable:mtproto.TL_auth_signUp.phone_code_hash)
  return phone_code_hash_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TL_auth_signUp::release_phone_code_hash() {
  // @@protoc_insertion_point(field_release:mtproto.TL_auth_signUp.phone_code_hash)
  
  return phone_code_hash_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TL_auth_signUp::set_allocated_phone_code_hash(::std::string* phone_code_hash) {
  if (phone_code_hash != NULL) {
    
  } else {
    
  }
  phone_code_hash_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), phone_code_hash);
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_auth_signUp.phone_code_hash)
}

// string phone_code = 3;
inline void TL_auth_signUp::clear_phone_code() {
  phone_code_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& TL_auth_signUp::phone_code() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_auth_signUp.phone_code)
  return phone_code_.GetNoArena();
}
inline void TL_auth_signUp::set_phone_code(const ::std::string& value) {
  
  phone_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtproto.TL_auth_signUp.phone_code)
}
#if LANG_CXX11
inline void TL_auth_signUp::set_phone_code(::std::string&& value) {
  
  phone_code_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mtproto.TL_auth_signUp.phone_code)
}
#endif
inline void TL_auth_signUp::set_phone_code(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  phone_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtproto.TL_auth_signUp.phone_code)
}
inline void TL_auth_signUp::set_phone_code(const char* value, size_t size) {
  
  phone_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtproto.TL_auth_signUp.phone_code)
}
inline ::std::string* TL_auth_signUp::mutable_phone_code() {
  
  // @@protoc_insertion_point(field_mutable:mtproto.TL_auth_signUp.phone_code)
  return phone_code_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TL_auth_signUp::release_phone_code() {
  // @@protoc_insertion_point(field_release:mtproto.TL_auth_signUp.phone_code)
  
  return phone_code_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TL_auth_signUp::set_allocated_phone_code(::std::string* phone_code) {
  if (phone_code != NULL) {
    
  } else {
    
  }
  phone_code_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), phone_code);
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_auth_signUp.phone_code)
}

// string first_name = 4;
inline void TL_auth_signUp::clear_first_name() {
  first_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& TL_auth_signUp::first_name() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_auth_signUp.first_name)
  return first_name_.GetNoArena();
}
inline void TL_auth_signUp::set_first_name(const ::std::string& value) {
  
  first_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtproto.TL_auth_signUp.first_name)
}
#if LANG_CXX11
inline void TL_auth_signUp::set_first_name(::std::string&& value) {
  
  first_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mtproto.TL_auth_signUp.first_name)
}
#endif
inline void TL_auth_signUp::set_first_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  first_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtproto.TL_auth_signUp.first_name)
}
inline void TL_auth_signUp::set_first_name(const char* value, size_t size) {
  
  first_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtproto.TL_auth_signUp.first_name)
}
inline ::std::string* TL_auth_signUp::mutable_first_name() {
  
  // @@protoc_insertion_point(field_mutable:mtproto.TL_auth_signUp.first_name)
  return first_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TL_auth_signUp::release_first_name() {
  // @@protoc_insertion_point(field_release:mtproto.TL_auth_signUp.first_name)
  
  return first_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TL_auth_signUp::set_allocated_first_name(::std::string* first_name) {
  if (first_name != NULL) {
    
  } else {
    
  }
  first_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), first_name);
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_auth_signUp.first_name)
}

// string last_name = 5;
inline void TL_auth_signUp::clear_last_name() {
  last_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& TL_auth_signUp::last_name() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_auth_signUp.last_name)
  return last_name_.GetNoArena();
}
inline void TL_auth_signUp::set_last_name(const ::std::string& value) {
  
  last_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtproto.TL_auth_signUp.last_name)
}
#if LANG_CXX11
inline void TL_auth_signUp::set_last_name(::std::string&& value) {
  
  last_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mtproto.TL_auth_signUp.last_name)
}
#endif
inline void TL_auth_signUp::set_last_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  last_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtproto.TL_auth_signUp.last_name)
}
inline void TL_auth_signUp::set_last_name(const char* value, size_t size) {
  
  last_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtproto.TL_auth_signUp.last_name)
}
inline ::std::string* TL_auth_signUp::mutable_last_name() {
  
  // @@protoc_insertion_point(field_mutable:mtproto.TL_auth_signUp.last_name)
  return last_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TL_auth_signUp::release_last_name() {
  // @@protoc_insertion_point(field_release:mtproto.TL_auth_signUp.last_name)
  
  return last_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TL_auth_signUp::set_allocated_last_name(::std::string* last_name) {
  if (last_name != NULL) {
    
  } else {
    
  }
  last_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), last_name);
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_auth_signUp.last_name)
}

// -------------------------------------------------------------------

// TL_auth_signIn

// string phone_number = 1;
inline void TL_auth_signIn::clear_phone_number() {
  phone_number_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& TL_auth_signIn::phone_number() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_auth_signIn.phone_number)
  return phone_number_.GetNoArena();
}
inline void TL_auth_signIn::set_phone_number(const ::std::string& value) {
  
  phone_number_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtproto.TL_auth_signIn.phone_number)
}
#if LANG_CXX11
inline void TL_auth_signIn::set_phone_number(::std::string&& value) {
  
  phone_number_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mtproto.TL_auth_signIn.phone_number)
}
#endif
inline void TL_auth_signIn::set_phone_number(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  phone_number_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtproto.TL_auth_signIn.phone_number)
}
inline void TL_auth_signIn::set_phone_number(const char* value, size_t size) {
  
  phone_number_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtproto.TL_auth_signIn.phone_number)
}
inline ::std::string* TL_auth_signIn::mutable_phone_number() {
  
  // @@protoc_insertion_point(field_mutable:mtproto.TL_auth_signIn.phone_number)
  return phone_number_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TL_auth_signIn::release_phone_number() {
  // @@protoc_insertion_point(field_release:mtproto.TL_auth_signIn.phone_number)
  
  return phone_number_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TL_auth_signIn::set_allocated_phone_number(::std::string* phone_number) {
  if (phone_number != NULL) {
    
  } else {
    
  }
  phone_number_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), phone_number);
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_auth_signIn.phone_number)
}

// string phone_code_hash = 2;
inline void TL_auth_signIn::clear_phone_code_hash() {
  phone_code_hash_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& TL_auth_signIn::phone_code_hash() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_auth_signIn.phone_code_hash)
  return phone_code_hash_.GetNoArena();
}
inline void TL_auth_signIn::set_phone_code_hash(const ::std::string& value) {
  
  phone_code_hash_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtproto.TL_auth_signIn.phone_code_hash)
}
#if LANG_CXX11
inline void TL_auth_signIn::set_phone_code_hash(::std::string&& value) {
  
  phone_code_hash_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mtproto.TL_auth_signIn.phone_code_hash)
}
#endif
inline void TL_auth_signIn::set_phone_code_hash(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  phone_code_hash_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtproto.TL_auth_signIn.phone_code_hash)
}
inline void TL_auth_signIn::set_phone_code_hash(const char* value, size_t size) {
  
  phone_code_hash_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtproto.TL_auth_signIn.phone_code_hash)
}
inline ::std::string* TL_auth_signIn::mutable_phone_code_hash() {
  
  // @@protoc_insertion_point(field_mutable:mtproto.TL_auth_signIn.phone_code_hash)
  return phone_code_hash_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TL_auth_signIn::release_phone_code_hash() {
  // @@protoc_insertion_point(field_release:mtproto.TL_auth_signIn.phone_code_hash)
  
  return phone_code_hash_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TL_auth_signIn::set_allocated_phone_code_hash(::std::string* phone_code_hash) {
  if (phone_code_hash != NULL) {
    
  } else {
    
  }
  phone_code_hash_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), phone_code_hash);
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_auth_signIn.phone_code_hash)
}

// string phone_code = 3;
inline void TL_auth_signIn::clear_phone_code() {
  phone_code_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& TL_auth_signIn::phone_code() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_auth_signIn.phone_code)
  return phone_code_.GetNoArena();
}
inline void TL_auth_signIn::set_phone_code(const ::std::string& value) {
  
  phone_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtproto.TL_auth_signIn.phone_code)
}
#if LANG_CXX11
inline void TL_auth_signIn::set_phone_code(::std::string&& value) {
  
  phone_code_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mtproto.TL_auth_signIn.phone_code)
}
#endif
inline void TL_auth_signIn::set_phone_code(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  phone_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtproto.TL_auth_signIn.phone_code)
}
inline void TL_auth_signIn::set_phone_code(const char* value, size_t size) {
  
  phone_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtproto.TL_auth_signIn.phone_code)
}
inline ::std::string* TL_auth_signIn::mutable_phone_code() {
  
  // @@protoc_insertion_point(field_mutable:mtproto.TL_auth_signIn.phone_code)
  return phone_code_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TL_auth_signIn::release_phone_code() {
  // @@protoc_insertion_point(field_release:mtproto.TL_auth_signIn.phone_code)
  
  return phone_code_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TL_auth_signIn::set_allocated_phone_code(::std::string* phone_code) {
  if (phone_code != NULL) {
    
  } else {
    
  }
  phone_code_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), phone_code);
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_auth_signIn.phone_code)
}

// -------------------------------------------------------------------

// TL_auth_logOut

// -------------------------------------------------------------------

// TL_auth_resetAuthorizations

// -------------------------------------------------------------------

// TL_auth_exportAuthorization

// int32 dc_id = 1;
inline void TL_auth_exportAuthorization::clear_dc_id() {
  dc_id_ = 0;
}
inline ::google::protobuf::int32 TL_auth_exportAuthorization::dc_id() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_auth_exportAuthorization.dc_id)
  return dc_id_;
}
inline void TL_auth_exportAuthorization::set_dc_id(::google::protobuf::int32 value) {
  
  dc_id_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_auth_exportAuthorization.dc_id)
}

// -------------------------------------------------------------------

// TL_auth_importAuthorization

// int32 id = 1;
inline void TL_auth_importAuthorization::clear_id() {
  id_ = 0;
}
inline ::google::protobuf::int32 TL_auth_importAuthorization::id() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_auth_importAuthorization.id)
  return id_;
}
inline void TL_auth_importAuthorization::set_id(::google::protobuf::int32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_auth_importAuthorization.id)
}

// bytes bytes = 2;
inline void TL_auth_importAuthorization::clear_bytes() {
  bytes_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& TL_auth_importAuthorization::bytes() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_auth_importAuthorization.bytes)
  return bytes_.GetNoArena();
}
inline void TL_auth_importAuthorization::set_bytes(const ::std::string& value) {
  
  bytes_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtproto.TL_auth_importAuthorization.bytes)
}
#if LANG_CXX11
inline void TL_auth_importAuthorization::set_bytes(::std::string&& value) {
  
  bytes_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mtproto.TL_auth_importAuthorization.bytes)
}
#endif
inline void TL_auth_importAuthorization::set_bytes(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  bytes_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtproto.TL_auth_importAuthorization.bytes)
}
inline void TL_auth_importAuthorization::set_bytes(const void* value, size_t size) {
  
  bytes_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtproto.TL_auth_importAuthorization.bytes)
}
inline ::std::string* TL_auth_importAuthorization::mutable_bytes() {
  
  // @@protoc_insertion_point(field_mutable:mtproto.TL_auth_importAuthorization.bytes)
  return bytes_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TL_auth_importAuthorization::release_bytes() {
  // @@protoc_insertion_point(field_release:mtproto.TL_auth_importAuthorization.bytes)
  
  return bytes_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TL_auth_importAuthorization::set_allocated_bytes(::std::string* bytes) {
  if (bytes != NULL) {
    
  } else {
    
  }
  bytes_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), bytes);
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_auth_importAuthorization.bytes)
}

// -------------------------------------------------------------------

// TL_auth_bindTempAuthKey

// int64 perm_auth_key_id = 1;
inline void TL_auth_bindTempAuthKey::clear_perm_auth_key_id() {
  perm_auth_key_id_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 TL_auth_bindTempAuthKey::perm_auth_key_id() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_auth_bindTempAuthKey.perm_auth_key_id)
  return perm_auth_key_id_;
}
inline void TL_auth_bindTempAuthKey::set_perm_auth_key_id(::google::protobuf::int64 value) {
  
  perm_auth_key_id_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_auth_bindTempAuthKey.perm_auth_key_id)
}

// int64 nonce = 2;
inline void TL_auth_bindTempAuthKey::clear_nonce() {
  nonce_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 TL_auth_bindTempAuthKey::nonce() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_auth_bindTempAuthKey.nonce)
  return nonce_;
}
inline void TL_auth_bindTempAuthKey::set_nonce(::google::protobuf::int64 value) {
  
  nonce_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_auth_bindTempAuthKey.nonce)
}

// int32 expires_at = 3;
inline void TL_auth_bindTempAuthKey::clear_expires_at() {
  expires_at_ = 0;
}
inline ::google::protobuf::int32 TL_auth_bindTempAuthKey::expires_at() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_auth_bindTempAuthKey.expires_at)
  return expires_at_;
}
inline void TL_auth_bindTempAuthKey::set_expires_at(::google::protobuf::int32 value) {
  
  expires_at_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_auth_bindTempAuthKey.expires_at)
}

// bytes encrypted_message = 4;
inline void TL_auth_bindTempAuthKey::clear_encrypted_message() {
  encrypted_message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& TL_auth_bindTempAuthKey::encrypted_message() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_auth_bindTempAuthKey.encrypted_message)
  return encrypted_message_.GetNoArena();
}
inline void TL_auth_bindTempAuthKey::set_encrypted_message(const ::std::string& value) {
  
  encrypted_message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtproto.TL_auth_bindTempAuthKey.encrypted_message)
}
#if LANG_CXX11
inline void TL_auth_bindTempAuthKey::set_encrypted_message(::std::string&& value) {
  
  encrypted_message_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mtproto.TL_auth_bindTempAuthKey.encrypted_message)
}
#endif
inline void TL_auth_bindTempAuthKey::set_encrypted_message(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  encrypted_message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtproto.TL_auth_bindTempAuthKey.encrypted_message)
}
inline void TL_auth_bindTempAuthKey::set_encrypted_message(const void* value, size_t size) {
  
  encrypted_message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtproto.TL_auth_bindTempAuthKey.encrypted_message)
}
inline ::std::string* TL_auth_bindTempAuthKey::mutable_encrypted_message() {
  
  // @@protoc_insertion_point(field_mutable:mtproto.TL_auth_bindTempAuthKey.encrypted_message)
  return encrypted_message_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TL_auth_bindTempAuthKey::release_encrypted_message() {
  // @@protoc_insertion_point(field_release:mtproto.TL_auth_bindTempAuthKey.encrypted_message)
  
  return encrypted_message_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TL_auth_bindTempAuthKey::set_allocated_encrypted_message(::std::string* encrypted_message) {
  if (encrypted_message != NULL) {
    
  } else {
    
  }
  encrypted_message_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), encrypted_message);
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_auth_bindTempAuthKey.encrypted_message)
}

// -------------------------------------------------------------------

// TL_auth_importBotAuthorization

// int32 flags = 1;
inline void TL_auth_importBotAuthorization::clear_flags() {
  flags_ = 0;
}
inline ::google::protobuf::int32 TL_auth_importBotAuthorization::flags() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_auth_importBotAuthorization.flags)
  return flags_;
}
inline void TL_auth_importBotAuthorization::set_flags(::google::protobuf::int32 value) {
  
  flags_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_auth_importBotAuthorization.flags)
}

// int32 api_id = 2;
inline void TL_auth_importBotAuthorization::clear_api_id() {
  api_id_ = 0;
}
inline ::google::protobuf::int32 TL_auth_importBotAuthorization::api_id() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_auth_importBotAuthorization.api_id)
  return api_id_;
}
inline void TL_auth_importBotAuthorization::set_api_id(::google::protobuf::int32 value) {
  
  api_id_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_auth_importBotAuthorization.api_id)
}

// string api_hash = 3;
inline void TL_auth_importBotAuthorization::clear_api_hash() {
  api_hash_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& TL_auth_importBotAuthorization::api_hash() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_auth_importBotAuthorization.api_hash)
  return api_hash_.GetNoArena();
}
inline void TL_auth_importBotAuthorization::set_api_hash(const ::std::string& value) {
  
  api_hash_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtproto.TL_auth_importBotAuthorization.api_hash)
}
#if LANG_CXX11
inline void TL_auth_importBotAuthorization::set_api_hash(::std::string&& value) {
  
  api_hash_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mtproto.TL_auth_importBotAuthorization.api_hash)
}
#endif
inline void TL_auth_importBotAuthorization::set_api_hash(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  api_hash_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtproto.TL_auth_importBotAuthorization.api_hash)
}
inline void TL_auth_importBotAuthorization::set_api_hash(const char* value, size_t size) {
  
  api_hash_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtproto.TL_auth_importBotAuthorization.api_hash)
}
inline ::std::string* TL_auth_importBotAuthorization::mutable_api_hash() {
  
  // @@protoc_insertion_point(field_mutable:mtproto.TL_auth_importBotAuthorization.api_hash)
  return api_hash_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TL_auth_importBotAuthorization::release_api_hash() {
  // @@protoc_insertion_point(field_release:mtproto.TL_auth_importBotAuthorization.api_hash)
  
  return api_hash_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TL_auth_importBotAuthorization::set_allocated_api_hash(::std::string* api_hash) {
  if (api_hash != NULL) {
    
  } else {
    
  }
  api_hash_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), api_hash);
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_auth_importBotAuthorization.api_hash)
}

// string bot_auth_token = 4;
inline void TL_auth_importBotAuthorization::clear_bot_auth_token() {
  bot_auth_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& TL_auth_importBotAuthorization::bot_auth_token() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_auth_importBotAuthorization.bot_auth_token)
  return bot_auth_token_.GetNoArena();
}
inline void TL_auth_importBotAuthorization::set_bot_auth_token(const ::std::string& value) {
  
  bot_auth_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtproto.TL_auth_importBotAuthorization.bot_auth_token)
}
#if LANG_CXX11
inline void TL_auth_importBotAuthorization::set_bot_auth_token(::std::string&& value) {
  
  bot_auth_token_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mtproto.TL_auth_importBotAuthorization.bot_auth_token)
}
#endif
inline void TL_auth_importBotAuthorization::set_bot_auth_token(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  bot_auth_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtproto.TL_auth_importBotAuthorization.bot_auth_token)
}
inline void TL_auth_importBotAuthorization::set_bot_auth_token(const char* value, size_t size) {
  
  bot_auth_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtproto.TL_auth_importBotAuthorization.bot_auth_token)
}
inline ::std::string* TL_auth_importBotAuthorization::mutable_bot_auth_token() {
  
  // @@protoc_insertion_point(field_mutable:mtproto.TL_auth_importBotAuthorization.bot_auth_token)
  return bot_auth_token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TL_auth_importBotAuthorization::release_bot_auth_token() {
  // @@protoc_insertion_point(field_release:mtproto.TL_auth_importBotAuthorization.bot_auth_token)
  
  return bot_auth_token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TL_auth_importBotAuthorization::set_allocated_bot_auth_token(::std::string* bot_auth_token) {
  if (bot_auth_token != NULL) {
    
  } else {
    
  }
  bot_auth_token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), bot_auth_token);
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_auth_importBotAuthorization.bot_auth_token)
}

// -------------------------------------------------------------------

// TL_auth_checkPassword

// .mtproto.InputCheckPasswordSRP password = 1;
inline bool TL_auth_checkPassword::has_password() const {
  return this != internal_default_instance() && password_ != NULL;
}
inline void TL_auth_checkPassword::clear_password() {
  if (GetArenaNoVirtual() == NULL && password_ != NULL) delete password_;
  password_ = NULL;
}
inline const ::mtproto::InputCheckPasswordSRP& TL_auth_checkPassword::password() const {
  const ::mtproto::InputCheckPasswordSRP* p = password_;
  // @@protoc_insertion_point(field_get:mtproto.TL_auth_checkPassword.password)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::InputCheckPasswordSRP*>(
      &::mtproto::_InputCheckPasswordSRP_default_instance_);
}
inline ::mtproto::InputCheckPasswordSRP* TL_auth_checkPassword::mutable_password() {
  
  if (password_ == NULL) {
    password_ = new ::mtproto::InputCheckPasswordSRP;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_auth_checkPassword.password)
  return password_;
}
inline ::mtproto::InputCheckPasswordSRP* TL_auth_checkPassword::release_password() {
  // @@protoc_insertion_point(field_release:mtproto.TL_auth_checkPassword.password)
  
  ::mtproto::InputCheckPasswordSRP* temp = password_;
  password_ = NULL;
  return temp;
}
inline void TL_auth_checkPassword::set_allocated_password(::mtproto::InputCheckPasswordSRP* password) {
  delete password_;
  password_ = password;
  if (password) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_auth_checkPassword.password)
}

// -------------------------------------------------------------------

// TL_auth_requestPasswordRecovery

// -------------------------------------------------------------------

// TL_auth_recoverPassword

// string code = 1;
inline void TL_auth_recoverPassword::clear_code() {
  code_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& TL_auth_recoverPassword::code() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_auth_recoverPassword.code)
  return code_.GetNoArena();
}
inline void TL_auth_recoverPassword::set_code(const ::std::string& value) {
  
  code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtproto.TL_auth_recoverPassword.code)
}
#if LANG_CXX11
inline void TL_auth_recoverPassword::set_code(::std::string&& value) {
  
  code_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mtproto.TL_auth_recoverPassword.code)
}
#endif
inline void TL_auth_recoverPassword::set_code(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtproto.TL_auth_recoverPassword.code)
}
inline void TL_auth_recoverPassword::set_code(const char* value, size_t size) {
  
  code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtproto.TL_auth_recoverPassword.code)
}
inline ::std::string* TL_auth_recoverPassword::mutable_code() {
  
  // @@protoc_insertion_point(field_mutable:mtproto.TL_auth_recoverPassword.code)
  return code_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TL_auth_recoverPassword::release_code() {
  // @@protoc_insertion_point(field_release:mtproto.TL_auth_recoverPassword.code)
  
  return code_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TL_auth_recoverPassword::set_allocated_code(::std::string* code) {
  if (code != NULL) {
    
  } else {
    
  }
  code_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), code);
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_auth_recoverPassword.code)
}

// -------------------------------------------------------------------

// TL_auth_resendCode

// string phone_number = 1;
inline void TL_auth_resendCode::clear_phone_number() {
  phone_number_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& TL_auth_resendCode::phone_number() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_auth_resendCode.phone_number)
  return phone_number_.GetNoArena();
}
inline void TL_auth_resendCode::set_phone_number(const ::std::string& value) {
  
  phone_number_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtproto.TL_auth_resendCode.phone_number)
}
#if LANG_CXX11
inline void TL_auth_resendCode::set_phone_number(::std::string&& value) {
  
  phone_number_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mtproto.TL_auth_resendCode.phone_number)
}
#endif
inline void TL_auth_resendCode::set_phone_number(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  phone_number_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtproto.TL_auth_resendCode.phone_number)
}
inline void TL_auth_resendCode::set_phone_number(const char* value, size_t size) {
  
  phone_number_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtproto.TL_auth_resendCode.phone_number)
}
inline ::std::string* TL_auth_resendCode::mutable_phone_number() {
  
  // @@protoc_insertion_point(field_mutable:mtproto.TL_auth_resendCode.phone_number)
  return phone_number_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TL_auth_resendCode::release_phone_number() {
  // @@protoc_insertion_point(field_release:mtproto.TL_auth_resendCode.phone_number)
  
  return phone_number_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TL_auth_resendCode::set_allocated_phone_number(::std::string* phone_number) {
  if (phone_number != NULL) {
    
  } else {
    
  }
  phone_number_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), phone_number);
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_auth_resendCode.phone_number)
}

// string phone_code_hash = 2;
inline void TL_auth_resendCode::clear_phone_code_hash() {
  phone_code_hash_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& TL_auth_resendCode::phone_code_hash() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_auth_resendCode.phone_code_hash)
  return phone_code_hash_.GetNoArena();
}
inline void TL_auth_resendCode::set_phone_code_hash(const ::std::string& value) {
  
  phone_code_hash_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtproto.TL_auth_resendCode.phone_code_hash)
}
#if LANG_CXX11
inline void TL_auth_resendCode::set_phone_code_hash(::std::string&& value) {
  
  phone_code_hash_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mtproto.TL_auth_resendCode.phone_code_hash)
}
#endif
inline void TL_auth_resendCode::set_phone_code_hash(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  phone_code_hash_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtproto.TL_auth_resendCode.phone_code_hash)
}
inline void TL_auth_resendCode::set_phone_code_hash(const char* value, size_t size) {
  
  phone_code_hash_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtproto.TL_auth_resendCode.phone_code_hash)
}
inline ::std::string* TL_auth_resendCode::mutable_phone_code_hash() {
  
  // @@protoc_insertion_point(field_mutable:mtproto.TL_auth_resendCode.phone_code_hash)
  return phone_code_hash_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TL_auth_resendCode::release_phone_code_hash() {
  // @@protoc_insertion_point(field_release:mtproto.TL_auth_resendCode.phone_code_hash)
  
  return phone_code_hash_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TL_auth_resendCode::set_allocated_phone_code_hash(::std::string* phone_code_hash) {
  if (phone_code_hash != NULL) {
    
  } else {
    
  }
  phone_code_hash_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), phone_code_hash);
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_auth_resendCode.phone_code_hash)
}

// -------------------------------------------------------------------

// TL_auth_cancelCode

// string phone_number = 1;
inline void TL_auth_cancelCode::clear_phone_number() {
  phone_number_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& TL_auth_cancelCode::phone_number() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_auth_cancelCode.phone_number)
  return phone_number_.GetNoArena();
}
inline void TL_auth_cancelCode::set_phone_number(const ::std::string& value) {
  
  phone_number_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtproto.TL_auth_cancelCode.phone_number)
}
#if LANG_CXX11
inline void TL_auth_cancelCode::set_phone_number(::std::string&& value) {
  
  phone_number_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mtproto.TL_auth_cancelCode.phone_number)
}
#endif
inline void TL_auth_cancelCode::set_phone_number(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  phone_number_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtproto.TL_auth_cancelCode.phone_number)
}
inline void TL_auth_cancelCode::set_phone_number(const char* value, size_t size) {
  
  phone_number_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtproto.TL_auth_cancelCode.phone_number)
}
inline ::std::string* TL_auth_cancelCode::mutable_phone_number() {
  
  // @@protoc_insertion_point(field_mutable:mtproto.TL_auth_cancelCode.phone_number)
  return phone_number_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TL_auth_cancelCode::release_phone_number() {
  // @@protoc_insertion_point(field_release:mtproto.TL_auth_cancelCode.phone_number)
  
  return phone_number_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TL_auth_cancelCode::set_allocated_phone_number(::std::string* phone_number) {
  if (phone_number != NULL) {
    
  } else {
    
  }
  phone_number_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), phone_number);
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_auth_cancelCode.phone_number)
}

// string phone_code_hash = 2;
inline void TL_auth_cancelCode::clear_phone_code_hash() {
  phone_code_hash_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& TL_auth_cancelCode::phone_code_hash() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_auth_cancelCode.phone_code_hash)
  return phone_code_hash_.GetNoArena();
}
inline void TL_auth_cancelCode::set_phone_code_hash(const ::std::string& value) {
  
  phone_code_hash_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtproto.TL_auth_cancelCode.phone_code_hash)
}
#if LANG_CXX11
inline void TL_auth_cancelCode::set_phone_code_hash(::std::string&& value) {
  
  phone_code_hash_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mtproto.TL_auth_cancelCode.phone_code_hash)
}
#endif
inline void TL_auth_cancelCode::set_phone_code_hash(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  phone_code_hash_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtproto.TL_auth_cancelCode.phone_code_hash)
}
inline void TL_auth_cancelCode::set_phone_code_hash(const char* value, size_t size) {
  
  phone_code_hash_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtproto.TL_auth_cancelCode.phone_code_hash)
}
inline ::std::string* TL_auth_cancelCode::mutable_phone_code_hash() {
  
  // @@protoc_insertion_point(field_mutable:mtproto.TL_auth_cancelCode.phone_code_hash)
  return phone_code_hash_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TL_auth_cancelCode::release_phone_code_hash() {
  // @@protoc_insertion_point(field_release:mtproto.TL_auth_cancelCode.phone_code_hash)
  
  return phone_code_hash_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TL_auth_cancelCode::set_allocated_phone_code_hash(::std::string* phone_code_hash) {
  if (phone_code_hash != NULL) {
    
  } else {
    
  }
  phone_code_hash_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), phone_code_hash);
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_auth_cancelCode.phone_code_hash)
}

// -------------------------------------------------------------------

// TL_auth_dropTempAuthKeys

// repeated int64 except_auth_keys = 1;
inline int TL_auth_dropTempAuthKeys::except_auth_keys_size() const {
  return except_auth_keys_.size();
}
inline void TL_auth_dropTempAuthKeys::clear_except_auth_keys() {
  except_auth_keys_.Clear();
}
inline ::google::protobuf::int64 TL_auth_dropTempAuthKeys::except_auth_keys(int index) const {
  // @@protoc_insertion_point(field_get:mtproto.TL_auth_dropTempAuthKeys.except_auth_keys)
  return except_auth_keys_.Get(index);
}
inline void TL_auth_dropTempAuthKeys::set_except_auth_keys(int index, ::google::protobuf::int64 value) {
  except_auth_keys_.Set(index, value);
  // @@protoc_insertion_point(field_set:mtproto.TL_auth_dropTempAuthKeys.except_auth_keys)
}
inline void TL_auth_dropTempAuthKeys::add_except_auth_keys(::google::protobuf::int64 value) {
  except_auth_keys_.Add(value);
  // @@protoc_insertion_point(field_add:mtproto.TL_auth_dropTempAuthKeys.except_auth_keys)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
TL_auth_dropTempAuthKeys::except_auth_keys() const {
  // @@protoc_insertion_point(field_list:mtproto.TL_auth_dropTempAuthKeys.except_auth_keys)
  return except_auth_keys_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
TL_auth_dropTempAuthKeys::mutable_except_auth_keys() {
  // @@protoc_insertion_point(field_mutable_list:mtproto.TL_auth_dropTempAuthKeys.except_auth_keys)
  return &except_auth_keys_;
}

// -------------------------------------------------------------------

// TL_account_registerDevice

// int32 token_type = 1;
inline void TL_account_registerDevice::clear_token_type() {
  token_type_ = 0;
}
inline ::google::protobuf::int32 TL_account_registerDevice::token_type() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_account_registerDevice.token_type)
  return token_type_;
}
inline void TL_account_registerDevice::set_token_type(::google::protobuf::int32 value) {
  
  token_type_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_account_registerDevice.token_type)
}

// string token = 2;
inline void TL_account_registerDevice::clear_token() {
  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& TL_account_registerDevice::token() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_account_registerDevice.token)
  return token_.GetNoArena();
}
inline void TL_account_registerDevice::set_token(const ::std::string& value) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtproto.TL_account_registerDevice.token)
}
#if LANG_CXX11
inline void TL_account_registerDevice::set_token(::std::string&& value) {
  
  token_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mtproto.TL_account_registerDevice.token)
}
#endif
inline void TL_account_registerDevice::set_token(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtproto.TL_account_registerDevice.token)
}
inline void TL_account_registerDevice::set_token(const char* value, size_t size) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtproto.TL_account_registerDevice.token)
}
inline ::std::string* TL_account_registerDevice::mutable_token() {
  
  // @@protoc_insertion_point(field_mutable:mtproto.TL_account_registerDevice.token)
  return token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TL_account_registerDevice::release_token() {
  // @@protoc_insertion_point(field_release:mtproto.TL_account_registerDevice.token)
  
  return token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TL_account_registerDevice::set_allocated_token(::std::string* token) {
  if (token != NULL) {
    
  } else {
    
  }
  token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), token);
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_account_registerDevice.token)
}

// .mtproto.Bool app_sandbox = 3;
inline bool TL_account_registerDevice::has_app_sandbox() const {
  return this != internal_default_instance() && app_sandbox_ != NULL;
}
inline void TL_account_registerDevice::clear_app_sandbox() {
  if (GetArenaNoVirtual() == NULL && app_sandbox_ != NULL) delete app_sandbox_;
  app_sandbox_ = NULL;
}
inline const ::mtproto::Bool& TL_account_registerDevice::app_sandbox() const {
  const ::mtproto::Bool* p = app_sandbox_;
  // @@protoc_insertion_point(field_get:mtproto.TL_account_registerDevice.app_sandbox)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::Bool*>(
      &::mtproto::_Bool_default_instance_);
}
inline ::mtproto::Bool* TL_account_registerDevice::mutable_app_sandbox() {
  
  if (app_sandbox_ == NULL) {
    app_sandbox_ = new ::mtproto::Bool;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_account_registerDevice.app_sandbox)
  return app_sandbox_;
}
inline ::mtproto::Bool* TL_account_registerDevice::release_app_sandbox() {
  // @@protoc_insertion_point(field_release:mtproto.TL_account_registerDevice.app_sandbox)
  
  ::mtproto::Bool* temp = app_sandbox_;
  app_sandbox_ = NULL;
  return temp;
}
inline void TL_account_registerDevice::set_allocated_app_sandbox(::mtproto::Bool* app_sandbox) {
  delete app_sandbox_;
  app_sandbox_ = app_sandbox;
  if (app_sandbox) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_account_registerDevice.app_sandbox)
}

// bytes secret = 4;
inline void TL_account_registerDevice::clear_secret() {
  secret_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& TL_account_registerDevice::secret() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_account_registerDevice.secret)
  return secret_.GetNoArena();
}
inline void TL_account_registerDevice::set_secret(const ::std::string& value) {
  
  secret_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtproto.TL_account_registerDevice.secret)
}
#if LANG_CXX11
inline void TL_account_registerDevice::set_secret(::std::string&& value) {
  
  secret_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mtproto.TL_account_registerDevice.secret)
}
#endif
inline void TL_account_registerDevice::set_secret(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  secret_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtproto.TL_account_registerDevice.secret)
}
inline void TL_account_registerDevice::set_secret(const void* value, size_t size) {
  
  secret_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtproto.TL_account_registerDevice.secret)
}
inline ::std::string* TL_account_registerDevice::mutable_secret() {
  
  // @@protoc_insertion_point(field_mutable:mtproto.TL_account_registerDevice.secret)
  return secret_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TL_account_registerDevice::release_secret() {
  // @@protoc_insertion_point(field_release:mtproto.TL_account_registerDevice.secret)
  
  return secret_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TL_account_registerDevice::set_allocated_secret(::std::string* secret) {
  if (secret != NULL) {
    
  } else {
    
  }
  secret_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), secret);
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_account_registerDevice.secret)
}

// repeated int32 other_uids = 5;
inline int TL_account_registerDevice::other_uids_size() const {
  return other_uids_.size();
}
inline void TL_account_registerDevice::clear_other_uids() {
  other_uids_.Clear();
}
inline ::google::protobuf::int32 TL_account_registerDevice::other_uids(int index) const {
  // @@protoc_insertion_point(field_get:mtproto.TL_account_registerDevice.other_uids)
  return other_uids_.Get(index);
}
inline void TL_account_registerDevice::set_other_uids(int index, ::google::protobuf::int32 value) {
  other_uids_.Set(index, value);
  // @@protoc_insertion_point(field_set:mtproto.TL_account_registerDevice.other_uids)
}
inline void TL_account_registerDevice::add_other_uids(::google::protobuf::int32 value) {
  other_uids_.Add(value);
  // @@protoc_insertion_point(field_add:mtproto.TL_account_registerDevice.other_uids)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
TL_account_registerDevice::other_uids() const {
  // @@protoc_insertion_point(field_list:mtproto.TL_account_registerDevice.other_uids)
  return other_uids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
TL_account_registerDevice::mutable_other_uids() {
  // @@protoc_insertion_point(field_mutable_list:mtproto.TL_account_registerDevice.other_uids)
  return &other_uids_;
}

// -------------------------------------------------------------------

// TL_account_unregisterDevice

// int32 token_type = 1;
inline void TL_account_unregisterDevice::clear_token_type() {
  token_type_ = 0;
}
inline ::google::protobuf::int32 TL_account_unregisterDevice::token_type() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_account_unregisterDevice.token_type)
  return token_type_;
}
inline void TL_account_unregisterDevice::set_token_type(::google::protobuf::int32 value) {
  
  token_type_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_account_unregisterDevice.token_type)
}

// string token = 2;
inline void TL_account_unregisterDevice::clear_token() {
  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& TL_account_unregisterDevice::token() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_account_unregisterDevice.token)
  return token_.GetNoArena();
}
inline void TL_account_unregisterDevice::set_token(const ::std::string& value) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtproto.TL_account_unregisterDevice.token)
}
#if LANG_CXX11
inline void TL_account_unregisterDevice::set_token(::std::string&& value) {
  
  token_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mtproto.TL_account_unregisterDevice.token)
}
#endif
inline void TL_account_unregisterDevice::set_token(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtproto.TL_account_unregisterDevice.token)
}
inline void TL_account_unregisterDevice::set_token(const char* value, size_t size) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtproto.TL_account_unregisterDevice.token)
}
inline ::std::string* TL_account_unregisterDevice::mutable_token() {
  
  // @@protoc_insertion_point(field_mutable:mtproto.TL_account_unregisterDevice.token)
  return token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TL_account_unregisterDevice::release_token() {
  // @@protoc_insertion_point(field_release:mtproto.TL_account_unregisterDevice.token)
  
  return token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TL_account_unregisterDevice::set_allocated_token(::std::string* token) {
  if (token != NULL) {
    
  } else {
    
  }
  token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), token);
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_account_unregisterDevice.token)
}

// repeated int32 other_uids = 3;
inline int TL_account_unregisterDevice::other_uids_size() const {
  return other_uids_.size();
}
inline void TL_account_unregisterDevice::clear_other_uids() {
  other_uids_.Clear();
}
inline ::google::protobuf::int32 TL_account_unregisterDevice::other_uids(int index) const {
  // @@protoc_insertion_point(field_get:mtproto.TL_account_unregisterDevice.other_uids)
  return other_uids_.Get(index);
}
inline void TL_account_unregisterDevice::set_other_uids(int index, ::google::protobuf::int32 value) {
  other_uids_.Set(index, value);
  // @@protoc_insertion_point(field_set:mtproto.TL_account_unregisterDevice.other_uids)
}
inline void TL_account_unregisterDevice::add_other_uids(::google::protobuf::int32 value) {
  other_uids_.Add(value);
  // @@protoc_insertion_point(field_add:mtproto.TL_account_unregisterDevice.other_uids)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
TL_account_unregisterDevice::other_uids() const {
  // @@protoc_insertion_point(field_list:mtproto.TL_account_unregisterDevice.other_uids)
  return other_uids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
TL_account_unregisterDevice::mutable_other_uids() {
  // @@protoc_insertion_point(field_mutable_list:mtproto.TL_account_unregisterDevice.other_uids)
  return &other_uids_;
}

// -------------------------------------------------------------------

// TL_account_updateNotifySettings

// .mtproto.InputNotifyPeer peer = 1;
inline bool TL_account_updateNotifySettings::has_peer() const {
  return this != internal_default_instance() && peer_ != NULL;
}
inline void TL_account_updateNotifySettings::clear_peer() {
  if (GetArenaNoVirtual() == NULL && peer_ != NULL) delete peer_;
  peer_ = NULL;
}
inline const ::mtproto::InputNotifyPeer& TL_account_updateNotifySettings::peer() const {
  const ::mtproto::InputNotifyPeer* p = peer_;
  // @@protoc_insertion_point(field_get:mtproto.TL_account_updateNotifySettings.peer)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::InputNotifyPeer*>(
      &::mtproto::_InputNotifyPeer_default_instance_);
}
inline ::mtproto::InputNotifyPeer* TL_account_updateNotifySettings::mutable_peer() {
  
  if (peer_ == NULL) {
    peer_ = new ::mtproto::InputNotifyPeer;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_account_updateNotifySettings.peer)
  return peer_;
}
inline ::mtproto::InputNotifyPeer* TL_account_updateNotifySettings::release_peer() {
  // @@protoc_insertion_point(field_release:mtproto.TL_account_updateNotifySettings.peer)
  
  ::mtproto::InputNotifyPeer* temp = peer_;
  peer_ = NULL;
  return temp;
}
inline void TL_account_updateNotifySettings::set_allocated_peer(::mtproto::InputNotifyPeer* peer) {
  delete peer_;
  peer_ = peer;
  if (peer) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_account_updateNotifySettings.peer)
}

// .mtproto.InputPeerNotifySettings settings = 2;
inline bool TL_account_updateNotifySettings::has_settings() const {
  return this != internal_default_instance() && settings_ != NULL;
}
inline void TL_account_updateNotifySettings::clear_settings() {
  if (GetArenaNoVirtual() == NULL && settings_ != NULL) delete settings_;
  settings_ = NULL;
}
inline const ::mtproto::InputPeerNotifySettings& TL_account_updateNotifySettings::settings() const {
  const ::mtproto::InputPeerNotifySettings* p = settings_;
  // @@protoc_insertion_point(field_get:mtproto.TL_account_updateNotifySettings.settings)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::InputPeerNotifySettings*>(
      &::mtproto::_InputPeerNotifySettings_default_instance_);
}
inline ::mtproto::InputPeerNotifySettings* TL_account_updateNotifySettings::mutable_settings() {
  
  if (settings_ == NULL) {
    settings_ = new ::mtproto::InputPeerNotifySettings;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_account_updateNotifySettings.settings)
  return settings_;
}
inline ::mtproto::InputPeerNotifySettings* TL_account_updateNotifySettings::release_settings() {
  // @@protoc_insertion_point(field_release:mtproto.TL_account_updateNotifySettings.settings)
  
  ::mtproto::InputPeerNotifySettings* temp = settings_;
  settings_ = NULL;
  return temp;
}
inline void TL_account_updateNotifySettings::set_allocated_settings(::mtproto::InputPeerNotifySettings* settings) {
  delete settings_;
  settings_ = settings;
  if (settings) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_account_updateNotifySettings.settings)
}

// -------------------------------------------------------------------

// TL_account_getNotifySettings

// .mtproto.InputNotifyPeer peer = 1;
inline bool TL_account_getNotifySettings::has_peer() const {
  return this != internal_default_instance() && peer_ != NULL;
}
inline void TL_account_getNotifySettings::clear_peer() {
  if (GetArenaNoVirtual() == NULL && peer_ != NULL) delete peer_;
  peer_ = NULL;
}
inline const ::mtproto::InputNotifyPeer& TL_account_getNotifySettings::peer() const {
  const ::mtproto::InputNotifyPeer* p = peer_;
  // @@protoc_insertion_point(field_get:mtproto.TL_account_getNotifySettings.peer)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::InputNotifyPeer*>(
      &::mtproto::_InputNotifyPeer_default_instance_);
}
inline ::mtproto::InputNotifyPeer* TL_account_getNotifySettings::mutable_peer() {
  
  if (peer_ == NULL) {
    peer_ = new ::mtproto::InputNotifyPeer;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_account_getNotifySettings.peer)
  return peer_;
}
inline ::mtproto::InputNotifyPeer* TL_account_getNotifySettings::release_peer() {
  // @@protoc_insertion_point(field_release:mtproto.TL_account_getNotifySettings.peer)
  
  ::mtproto::InputNotifyPeer* temp = peer_;
  peer_ = NULL;
  return temp;
}
inline void TL_account_getNotifySettings::set_allocated_peer(::mtproto::InputNotifyPeer* peer) {
  delete peer_;
  peer_ = peer;
  if (peer) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_account_getNotifySettings.peer)
}

// -------------------------------------------------------------------

// TL_account_resetNotifySettings

// -------------------------------------------------------------------

// TL_account_updateProfile

// string first_name = 2;
inline void TL_account_updateProfile::clear_first_name() {
  first_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& TL_account_updateProfile::first_name() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_account_updateProfile.first_name)
  return first_name_.GetNoArena();
}
inline void TL_account_updateProfile::set_first_name(const ::std::string& value) {
  
  first_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtproto.TL_account_updateProfile.first_name)
}
#if LANG_CXX11
inline void TL_account_updateProfile::set_first_name(::std::string&& value) {
  
  first_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mtproto.TL_account_updateProfile.first_name)
}
#endif
inline void TL_account_updateProfile::set_first_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  first_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtproto.TL_account_updateProfile.first_name)
}
inline void TL_account_updateProfile::set_first_name(const char* value, size_t size) {
  
  first_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtproto.TL_account_updateProfile.first_name)
}
inline ::std::string* TL_account_updateProfile::mutable_first_name() {
  
  // @@protoc_insertion_point(field_mutable:mtproto.TL_account_updateProfile.first_name)
  return first_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TL_account_updateProfile::release_first_name() {
  // @@protoc_insertion_point(field_release:mtproto.TL_account_updateProfile.first_name)
  
  return first_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TL_account_updateProfile::set_allocated_first_name(::std::string* first_name) {
  if (first_name != NULL) {
    
  } else {
    
  }
  first_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), first_name);
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_account_updateProfile.first_name)
}

// string last_name = 3;
inline void TL_account_updateProfile::clear_last_name() {
  last_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& TL_account_updateProfile::last_name() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_account_updateProfile.last_name)
  return last_name_.GetNoArena();
}
inline void TL_account_updateProfile::set_last_name(const ::std::string& value) {
  
  last_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtproto.TL_account_updateProfile.last_name)
}
#if LANG_CXX11
inline void TL_account_updateProfile::set_last_name(::std::string&& value) {
  
  last_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mtproto.TL_account_updateProfile.last_name)
}
#endif
inline void TL_account_updateProfile::set_last_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  last_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtproto.TL_account_updateProfile.last_name)
}
inline void TL_account_updateProfile::set_last_name(const char* value, size_t size) {
  
  last_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtproto.TL_account_updateProfile.last_name)
}
inline ::std::string* TL_account_updateProfile::mutable_last_name() {
  
  // @@protoc_insertion_point(field_mutable:mtproto.TL_account_updateProfile.last_name)
  return last_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TL_account_updateProfile::release_last_name() {
  // @@protoc_insertion_point(field_release:mtproto.TL_account_updateProfile.last_name)
  
  return last_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TL_account_updateProfile::set_allocated_last_name(::std::string* last_name) {
  if (last_name != NULL) {
    
  } else {
    
  }
  last_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), last_name);
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_account_updateProfile.last_name)
}

// string about = 4;
inline void TL_account_updateProfile::clear_about() {
  about_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& TL_account_updateProfile::about() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_account_updateProfile.about)
  return about_.GetNoArena();
}
inline void TL_account_updateProfile::set_about(const ::std::string& value) {
  
  about_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtproto.TL_account_updateProfile.about)
}
#if LANG_CXX11
inline void TL_account_updateProfile::set_about(::std::string&& value) {
  
  about_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mtproto.TL_account_updateProfile.about)
}
#endif
inline void TL_account_updateProfile::set_about(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  about_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtproto.TL_account_updateProfile.about)
}
inline void TL_account_updateProfile::set_about(const char* value, size_t size) {
  
  about_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtproto.TL_account_updateProfile.about)
}
inline ::std::string* TL_account_updateProfile::mutable_about() {
  
  // @@protoc_insertion_point(field_mutable:mtproto.TL_account_updateProfile.about)
  return about_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TL_account_updateProfile::release_about() {
  // @@protoc_insertion_point(field_release:mtproto.TL_account_updateProfile.about)
  
  return about_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TL_account_updateProfile::set_allocated_about(::std::string* about) {
  if (about != NULL) {
    
  } else {
    
  }
  about_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), about);
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_account_updateProfile.about)
}

// -------------------------------------------------------------------

// TL_account_updateStatus

// .mtproto.Bool offline = 1;
inline bool TL_account_updateStatus::has_offline() const {
  return this != internal_default_instance() && offline_ != NULL;
}
inline void TL_account_updateStatus::clear_offline() {
  if (GetArenaNoVirtual() == NULL && offline_ != NULL) delete offline_;
  offline_ = NULL;
}
inline const ::mtproto::Bool& TL_account_updateStatus::offline() const {
  const ::mtproto::Bool* p = offline_;
  // @@protoc_insertion_point(field_get:mtproto.TL_account_updateStatus.offline)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::Bool*>(
      &::mtproto::_Bool_default_instance_);
}
inline ::mtproto::Bool* TL_account_updateStatus::mutable_offline() {
  
  if (offline_ == NULL) {
    offline_ = new ::mtproto::Bool;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_account_updateStatus.offline)
  return offline_;
}
inline ::mtproto::Bool* TL_account_updateStatus::release_offline() {
  // @@protoc_insertion_point(field_release:mtproto.TL_account_updateStatus.offline)
  
  ::mtproto::Bool* temp = offline_;
  offline_ = NULL;
  return temp;
}
inline void TL_account_updateStatus::set_allocated_offline(::mtproto::Bool* offline) {
  delete offline_;
  offline_ = offline;
  if (offline) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_account_updateStatus.offline)
}

// -------------------------------------------------------------------

// TL_account_getWallPapers

// -------------------------------------------------------------------

// TL_account_reportPeer

// .mtproto.InputPeer peer = 1;
inline bool TL_account_reportPeer::has_peer() const {
  return this != internal_default_instance() && peer_ != NULL;
}
inline void TL_account_reportPeer::clear_peer() {
  if (GetArenaNoVirtual() == NULL && peer_ != NULL) delete peer_;
  peer_ = NULL;
}
inline const ::mtproto::InputPeer& TL_account_reportPeer::peer() const {
  const ::mtproto::InputPeer* p = peer_;
  // @@protoc_insertion_point(field_get:mtproto.TL_account_reportPeer.peer)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::InputPeer*>(
      &::mtproto::_InputPeer_default_instance_);
}
inline ::mtproto::InputPeer* TL_account_reportPeer::mutable_peer() {
  
  if (peer_ == NULL) {
    peer_ = new ::mtproto::InputPeer;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_account_reportPeer.peer)
  return peer_;
}
inline ::mtproto::InputPeer* TL_account_reportPeer::release_peer() {
  // @@protoc_insertion_point(field_release:mtproto.TL_account_reportPeer.peer)
  
  ::mtproto::InputPeer* temp = peer_;
  peer_ = NULL;
  return temp;
}
inline void TL_account_reportPeer::set_allocated_peer(::mtproto::InputPeer* peer) {
  delete peer_;
  peer_ = peer;
  if (peer) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_account_reportPeer.peer)
}

// .mtproto.ReportReason reason = 2;
inline bool TL_account_reportPeer::has_reason() const {
  return this != internal_default_instance() && reason_ != NULL;
}
inline void TL_account_reportPeer::clear_reason() {
  if (GetArenaNoVirtual() == NULL && reason_ != NULL) delete reason_;
  reason_ = NULL;
}
inline const ::mtproto::ReportReason& TL_account_reportPeer::reason() const {
  const ::mtproto::ReportReason* p = reason_;
  // @@protoc_insertion_point(field_get:mtproto.TL_account_reportPeer.reason)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::ReportReason*>(
      &::mtproto::_ReportReason_default_instance_);
}
inline ::mtproto::ReportReason* TL_account_reportPeer::mutable_reason() {
  
  if (reason_ == NULL) {
    reason_ = new ::mtproto::ReportReason;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_account_reportPeer.reason)
  return reason_;
}
inline ::mtproto::ReportReason* TL_account_reportPeer::release_reason() {
  // @@protoc_insertion_point(field_release:mtproto.TL_account_reportPeer.reason)
  
  ::mtproto::ReportReason* temp = reason_;
  reason_ = NULL;
  return temp;
}
inline void TL_account_reportPeer::set_allocated_reason(::mtproto::ReportReason* reason) {
  delete reason_;
  reason_ = reason;
  if (reason) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_account_reportPeer.reason)
}

// -------------------------------------------------------------------

// TL_account_checkUsername

// string username = 1;
inline void TL_account_checkUsername::clear_username() {
  username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& TL_account_checkUsername::username() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_account_checkUsername.username)
  return username_.GetNoArena();
}
inline void TL_account_checkUsername::set_username(const ::std::string& value) {
  
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtproto.TL_account_checkUsername.username)
}
#if LANG_CXX11
inline void TL_account_checkUsername::set_username(::std::string&& value) {
  
  username_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mtproto.TL_account_checkUsername.username)
}
#endif
inline void TL_account_checkUsername::set_username(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtproto.TL_account_checkUsername.username)
}
inline void TL_account_checkUsername::set_username(const char* value, size_t size) {
  
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtproto.TL_account_checkUsername.username)
}
inline ::std::string* TL_account_checkUsername::mutable_username() {
  
  // @@protoc_insertion_point(field_mutable:mtproto.TL_account_checkUsername.username)
  return username_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TL_account_checkUsername::release_username() {
  // @@protoc_insertion_point(field_release:mtproto.TL_account_checkUsername.username)
  
  return username_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TL_account_checkUsername::set_allocated_username(::std::string* username) {
  if (username != NULL) {
    
  } else {
    
  }
  username_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), username);
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_account_checkUsername.username)
}

// -------------------------------------------------------------------

// TL_account_updateUsername

// string username = 1;
inline void TL_account_updateUsername::clear_username() {
  username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& TL_account_updateUsername::username() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_account_updateUsername.username)
  return username_.GetNoArena();
}
inline void TL_account_updateUsername::set_username(const ::std::string& value) {
  
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtproto.TL_account_updateUsername.username)
}
#if LANG_CXX11
inline void TL_account_updateUsername::set_username(::std::string&& value) {
  
  username_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mtproto.TL_account_updateUsername.username)
}
#endif
inline void TL_account_updateUsername::set_username(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtproto.TL_account_updateUsername.username)
}
inline void TL_account_updateUsername::set_username(const char* value, size_t size) {
  
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtproto.TL_account_updateUsername.username)
}
inline ::std::string* TL_account_updateUsername::mutable_username() {
  
  // @@protoc_insertion_point(field_mutable:mtproto.TL_account_updateUsername.username)
  return username_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TL_account_updateUsername::release_username() {
  // @@protoc_insertion_point(field_release:mtproto.TL_account_updateUsername.username)
  
  return username_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TL_account_updateUsername::set_allocated_username(::std::string* username) {
  if (username != NULL) {
    
  } else {
    
  }
  username_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), username);
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_account_updateUsername.username)
}

// -------------------------------------------------------------------

// TL_account_getPrivacy

// .mtproto.InputPrivacyKey key = 1;
inline bool TL_account_getPrivacy::has_key() const {
  return this != internal_default_instance() && key_ != NULL;
}
inline void TL_account_getPrivacy::clear_key() {
  if (GetArenaNoVirtual() == NULL && key_ != NULL) delete key_;
  key_ = NULL;
}
inline const ::mtproto::InputPrivacyKey& TL_account_getPrivacy::key() const {
  const ::mtproto::InputPrivacyKey* p = key_;
  // @@protoc_insertion_point(field_get:mtproto.TL_account_getPrivacy.key)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::InputPrivacyKey*>(
      &::mtproto::_InputPrivacyKey_default_instance_);
}
inline ::mtproto::InputPrivacyKey* TL_account_getPrivacy::mutable_key() {
  
  if (key_ == NULL) {
    key_ = new ::mtproto::InputPrivacyKey;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_account_getPrivacy.key)
  return key_;
}
inline ::mtproto::InputPrivacyKey* TL_account_getPrivacy::release_key() {
  // @@protoc_insertion_point(field_release:mtproto.TL_account_getPrivacy.key)
  
  ::mtproto::InputPrivacyKey* temp = key_;
  key_ = NULL;
  return temp;
}
inline void TL_account_getPrivacy::set_allocated_key(::mtproto::InputPrivacyKey* key) {
  delete key_;
  key_ = key;
  if (key) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_account_getPrivacy.key)
}

// -------------------------------------------------------------------

// TL_account_setPrivacy

// .mtproto.InputPrivacyKey key = 1;
inline bool TL_account_setPrivacy::has_key() const {
  return this != internal_default_instance() && key_ != NULL;
}
inline void TL_account_setPrivacy::clear_key() {
  if (GetArenaNoVirtual() == NULL && key_ != NULL) delete key_;
  key_ = NULL;
}
inline const ::mtproto::InputPrivacyKey& TL_account_setPrivacy::key() const {
  const ::mtproto::InputPrivacyKey* p = key_;
  // @@protoc_insertion_point(field_get:mtproto.TL_account_setPrivacy.key)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::InputPrivacyKey*>(
      &::mtproto::_InputPrivacyKey_default_instance_);
}
inline ::mtproto::InputPrivacyKey* TL_account_setPrivacy::mutable_key() {
  
  if (key_ == NULL) {
    key_ = new ::mtproto::InputPrivacyKey;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_account_setPrivacy.key)
  return key_;
}
inline ::mtproto::InputPrivacyKey* TL_account_setPrivacy::release_key() {
  // @@protoc_insertion_point(field_release:mtproto.TL_account_setPrivacy.key)
  
  ::mtproto::InputPrivacyKey* temp = key_;
  key_ = NULL;
  return temp;
}
inline void TL_account_setPrivacy::set_allocated_key(::mtproto::InputPrivacyKey* key) {
  delete key_;
  key_ = key;
  if (key) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_account_setPrivacy.key)
}

// repeated .mtproto.InputPrivacyRule rules = 2;
inline int TL_account_setPrivacy::rules_size() const {
  return rules_.size();
}
inline void TL_account_setPrivacy::clear_rules() {
  rules_.Clear();
}
inline const ::mtproto::InputPrivacyRule& TL_account_setPrivacy::rules(int index) const {
  // @@protoc_insertion_point(field_get:mtproto.TL_account_setPrivacy.rules)
  return rules_.Get(index);
}
inline ::mtproto::InputPrivacyRule* TL_account_setPrivacy::mutable_rules(int index) {
  // @@protoc_insertion_point(field_mutable:mtproto.TL_account_setPrivacy.rules)
  return rules_.Mutable(index);
}
inline ::mtproto::InputPrivacyRule* TL_account_setPrivacy::add_rules() {
  // @@protoc_insertion_point(field_add:mtproto.TL_account_setPrivacy.rules)
  return rules_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::mtproto::InputPrivacyRule >*
TL_account_setPrivacy::mutable_rules() {
  // @@protoc_insertion_point(field_mutable_list:mtproto.TL_account_setPrivacy.rules)
  return &rules_;
}
inline const ::google::protobuf::RepeatedPtrField< ::mtproto::InputPrivacyRule >&
TL_account_setPrivacy::rules() const {
  // @@protoc_insertion_point(field_list:mtproto.TL_account_setPrivacy.rules)
  return rules_;
}

// -------------------------------------------------------------------

// TL_account_deleteAccount

// string reason = 1;
inline void TL_account_deleteAccount::clear_reason() {
  reason_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& TL_account_deleteAccount::reason() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_account_deleteAccount.reason)
  return reason_.GetNoArena();
}
inline void TL_account_deleteAccount::set_reason(const ::std::string& value) {
  
  reason_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtproto.TL_account_deleteAccount.reason)
}
#if LANG_CXX11
inline void TL_account_deleteAccount::set_reason(::std::string&& value) {
  
  reason_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mtproto.TL_account_deleteAccount.reason)
}
#endif
inline void TL_account_deleteAccount::set_reason(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  reason_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtproto.TL_account_deleteAccount.reason)
}
inline void TL_account_deleteAccount::set_reason(const char* value, size_t size) {
  
  reason_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtproto.TL_account_deleteAccount.reason)
}
inline ::std::string* TL_account_deleteAccount::mutable_reason() {
  
  // @@protoc_insertion_point(field_mutable:mtproto.TL_account_deleteAccount.reason)
  return reason_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TL_account_deleteAccount::release_reason() {
  // @@protoc_insertion_point(field_release:mtproto.TL_account_deleteAccount.reason)
  
  return reason_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TL_account_deleteAccount::set_allocated_reason(::std::string* reason) {
  if (reason != NULL) {
    
  } else {
    
  }
  reason_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), reason);
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_account_deleteAccount.reason)
}

// -------------------------------------------------------------------

// TL_account_getAccountTTL

// -------------------------------------------------------------------

// TL_account_setAccountTTL

// .mtproto.AccountDaysTTL ttl = 1;
inline bool TL_account_setAccountTTL::has_ttl() const {
  return this != internal_default_instance() && ttl_ != NULL;
}
inline void TL_account_setAccountTTL::clear_ttl() {
  if (GetArenaNoVirtual() == NULL && ttl_ != NULL) delete ttl_;
  ttl_ = NULL;
}
inline const ::mtproto::AccountDaysTTL& TL_account_setAccountTTL::ttl() const {
  const ::mtproto::AccountDaysTTL* p = ttl_;
  // @@protoc_insertion_point(field_get:mtproto.TL_account_setAccountTTL.ttl)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::AccountDaysTTL*>(
      &::mtproto::_AccountDaysTTL_default_instance_);
}
inline ::mtproto::AccountDaysTTL* TL_account_setAccountTTL::mutable_ttl() {
  
  if (ttl_ == NULL) {
    ttl_ = new ::mtproto::AccountDaysTTL;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_account_setAccountTTL.ttl)
  return ttl_;
}
inline ::mtproto::AccountDaysTTL* TL_account_setAccountTTL::release_ttl() {
  // @@protoc_insertion_point(field_release:mtproto.TL_account_setAccountTTL.ttl)
  
  ::mtproto::AccountDaysTTL* temp = ttl_;
  ttl_ = NULL;
  return temp;
}
inline void TL_account_setAccountTTL::set_allocated_ttl(::mtproto::AccountDaysTTL* ttl) {
  delete ttl_;
  ttl_ = ttl;
  if (ttl) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_account_setAccountTTL.ttl)
}

// -------------------------------------------------------------------

// TL_account_sendChangePhoneCode

// bool allow_flashcall = 2;
inline void TL_account_sendChangePhoneCode::clear_allow_flashcall() {
  allow_flashcall_ = false;
}
inline bool TL_account_sendChangePhoneCode::allow_flashcall() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_account_sendChangePhoneCode.allow_flashcall)
  return allow_flashcall_;
}
inline void TL_account_sendChangePhoneCode::set_allow_flashcall(bool value) {
  
  allow_flashcall_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_account_sendChangePhoneCode.allow_flashcall)
}

// string phone_number = 3;
inline void TL_account_sendChangePhoneCode::clear_phone_number() {
  phone_number_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& TL_account_sendChangePhoneCode::phone_number() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_account_sendChangePhoneCode.phone_number)
  return phone_number_.GetNoArena();
}
inline void TL_account_sendChangePhoneCode::set_phone_number(const ::std::string& value) {
  
  phone_number_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtproto.TL_account_sendChangePhoneCode.phone_number)
}
#if LANG_CXX11
inline void TL_account_sendChangePhoneCode::set_phone_number(::std::string&& value) {
  
  phone_number_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mtproto.TL_account_sendChangePhoneCode.phone_number)
}
#endif
inline void TL_account_sendChangePhoneCode::set_phone_number(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  phone_number_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtproto.TL_account_sendChangePhoneCode.phone_number)
}
inline void TL_account_sendChangePhoneCode::set_phone_number(const char* value, size_t size) {
  
  phone_number_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtproto.TL_account_sendChangePhoneCode.phone_number)
}
inline ::std::string* TL_account_sendChangePhoneCode::mutable_phone_number() {
  
  // @@protoc_insertion_point(field_mutable:mtproto.TL_account_sendChangePhoneCode.phone_number)
  return phone_number_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TL_account_sendChangePhoneCode::release_phone_number() {
  // @@protoc_insertion_point(field_release:mtproto.TL_account_sendChangePhoneCode.phone_number)
  
  return phone_number_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TL_account_sendChangePhoneCode::set_allocated_phone_number(::std::string* phone_number) {
  if (phone_number != NULL) {
    
  } else {
    
  }
  phone_number_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), phone_number);
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_account_sendChangePhoneCode.phone_number)
}

// .mtproto.Bool current_number = 4;
inline bool TL_account_sendChangePhoneCode::has_current_number() const {
  return this != internal_default_instance() && current_number_ != NULL;
}
inline void TL_account_sendChangePhoneCode::clear_current_number() {
  if (GetArenaNoVirtual() == NULL && current_number_ != NULL) delete current_number_;
  current_number_ = NULL;
}
inline const ::mtproto::Bool& TL_account_sendChangePhoneCode::current_number() const {
  const ::mtproto::Bool* p = current_number_;
  // @@protoc_insertion_point(field_get:mtproto.TL_account_sendChangePhoneCode.current_number)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::Bool*>(
      &::mtproto::_Bool_default_instance_);
}
inline ::mtproto::Bool* TL_account_sendChangePhoneCode::mutable_current_number() {
  
  if (current_number_ == NULL) {
    current_number_ = new ::mtproto::Bool;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_account_sendChangePhoneCode.current_number)
  return current_number_;
}
inline ::mtproto::Bool* TL_account_sendChangePhoneCode::release_current_number() {
  // @@protoc_insertion_point(field_release:mtproto.TL_account_sendChangePhoneCode.current_number)
  
  ::mtproto::Bool* temp = current_number_;
  current_number_ = NULL;
  return temp;
}
inline void TL_account_sendChangePhoneCode::set_allocated_current_number(::mtproto::Bool* current_number) {
  delete current_number_;
  current_number_ = current_number;
  if (current_number) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_account_sendChangePhoneCode.current_number)
}

// -------------------------------------------------------------------

// TL_account_changePhone

// string phone_number = 1;
inline void TL_account_changePhone::clear_phone_number() {
  phone_number_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& TL_account_changePhone::phone_number() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_account_changePhone.phone_number)
  return phone_number_.GetNoArena();
}
inline void TL_account_changePhone::set_phone_number(const ::std::string& value) {
  
  phone_number_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtproto.TL_account_changePhone.phone_number)
}
#if LANG_CXX11
inline void TL_account_changePhone::set_phone_number(::std::string&& value) {
  
  phone_number_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mtproto.TL_account_changePhone.phone_number)
}
#endif
inline void TL_account_changePhone::set_phone_number(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  phone_number_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtproto.TL_account_changePhone.phone_number)
}
inline void TL_account_changePhone::set_phone_number(const char* value, size_t size) {
  
  phone_number_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtproto.TL_account_changePhone.phone_number)
}
inline ::std::string* TL_account_changePhone::mutable_phone_number() {
  
  // @@protoc_insertion_point(field_mutable:mtproto.TL_account_changePhone.phone_number)
  return phone_number_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TL_account_changePhone::release_phone_number() {
  // @@protoc_insertion_point(field_release:mtproto.TL_account_changePhone.phone_number)
  
  return phone_number_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TL_account_changePhone::set_allocated_phone_number(::std::string* phone_number) {
  if (phone_number != NULL) {
    
  } else {
    
  }
  phone_number_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), phone_number);
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_account_changePhone.phone_number)
}

// string phone_code_hash = 2;
inline void TL_account_changePhone::clear_phone_code_hash() {
  phone_code_hash_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& TL_account_changePhone::phone_code_hash() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_account_changePhone.phone_code_hash)
  return phone_code_hash_.GetNoArena();
}
inline void TL_account_changePhone::set_phone_code_hash(const ::std::string& value) {
  
  phone_code_hash_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtproto.TL_account_changePhone.phone_code_hash)
}
#if LANG_CXX11
inline void TL_account_changePhone::set_phone_code_hash(::std::string&& value) {
  
  phone_code_hash_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mtproto.TL_account_changePhone.phone_code_hash)
}
#endif
inline void TL_account_changePhone::set_phone_code_hash(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  phone_code_hash_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtproto.TL_account_changePhone.phone_code_hash)
}
inline void TL_account_changePhone::set_phone_code_hash(const char* value, size_t size) {
  
  phone_code_hash_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtproto.TL_account_changePhone.phone_code_hash)
}
inline ::std::string* TL_account_changePhone::mutable_phone_code_hash() {
  
  // @@protoc_insertion_point(field_mutable:mtproto.TL_account_changePhone.phone_code_hash)
  return phone_code_hash_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TL_account_changePhone::release_phone_code_hash() {
  // @@protoc_insertion_point(field_release:mtproto.TL_account_changePhone.phone_code_hash)
  
  return phone_code_hash_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TL_account_changePhone::set_allocated_phone_code_hash(::std::string* phone_code_hash) {
  if (phone_code_hash != NULL) {
    
  } else {
    
  }
  phone_code_hash_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), phone_code_hash);
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_account_changePhone.phone_code_hash)
}

// string phone_code = 3;
inline void TL_account_changePhone::clear_phone_code() {
  phone_code_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& TL_account_changePhone::phone_code() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_account_changePhone.phone_code)
  return phone_code_.GetNoArena();
}
inline void TL_account_changePhone::set_phone_code(const ::std::string& value) {
  
  phone_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtproto.TL_account_changePhone.phone_code)
}
#if LANG_CXX11
inline void TL_account_changePhone::set_phone_code(::std::string&& value) {
  
  phone_code_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mtproto.TL_account_changePhone.phone_code)
}
#endif
inline void TL_account_changePhone::set_phone_code(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  phone_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtproto.TL_account_changePhone.phone_code)
}
inline void TL_account_changePhone::set_phone_code(const char* value, size_t size) {
  
  phone_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtproto.TL_account_changePhone.phone_code)
}
inline ::std::string* TL_account_changePhone::mutable_phone_code() {
  
  // @@protoc_insertion_point(field_mutable:mtproto.TL_account_changePhone.phone_code)
  return phone_code_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TL_account_changePhone::release_phone_code() {
  // @@protoc_insertion_point(field_release:mtproto.TL_account_changePhone.phone_code)
  
  return phone_code_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TL_account_changePhone::set_allocated_phone_code(::std::string* phone_code) {
  if (phone_code != NULL) {
    
  } else {
    
  }
  phone_code_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), phone_code);
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_account_changePhone.phone_code)
}

// -------------------------------------------------------------------

// TL_account_updateDeviceLocked

// int32 period = 1;
inline void TL_account_updateDeviceLocked::clear_period() {
  period_ = 0;
}
inline ::google::protobuf::int32 TL_account_updateDeviceLocked::period() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_account_updateDeviceLocked.period)
  return period_;
}
inline void TL_account_updateDeviceLocked::set_period(::google::protobuf::int32 value) {
  
  period_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_account_updateDeviceLocked.period)
}

// -------------------------------------------------------------------

// TL_account_getAuthorizations

// -------------------------------------------------------------------

// TL_account_resetAuthorization

// int64 hash = 1;
inline void TL_account_resetAuthorization::clear_hash() {
  hash_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 TL_account_resetAuthorization::hash() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_account_resetAuthorization.hash)
  return hash_;
}
inline void TL_account_resetAuthorization::set_hash(::google::protobuf::int64 value) {
  
  hash_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_account_resetAuthorization.hash)
}

// -------------------------------------------------------------------

// TL_account_getPassword

// -------------------------------------------------------------------

// TL_account_getPasswordSettings

// .mtproto.InputCheckPasswordSRP password = 1;
inline bool TL_account_getPasswordSettings::has_password() const {
  return this != internal_default_instance() && password_ != NULL;
}
inline void TL_account_getPasswordSettings::clear_password() {
  if (GetArenaNoVirtual() == NULL && password_ != NULL) delete password_;
  password_ = NULL;
}
inline const ::mtproto::InputCheckPasswordSRP& TL_account_getPasswordSettings::password() const {
  const ::mtproto::InputCheckPasswordSRP* p = password_;
  // @@protoc_insertion_point(field_get:mtproto.TL_account_getPasswordSettings.password)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::InputCheckPasswordSRP*>(
      &::mtproto::_InputCheckPasswordSRP_default_instance_);
}
inline ::mtproto::InputCheckPasswordSRP* TL_account_getPasswordSettings::mutable_password() {
  
  if (password_ == NULL) {
    password_ = new ::mtproto::InputCheckPasswordSRP;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_account_getPasswordSettings.password)
  return password_;
}
inline ::mtproto::InputCheckPasswordSRP* TL_account_getPasswordSettings::release_password() {
  // @@protoc_insertion_point(field_release:mtproto.TL_account_getPasswordSettings.password)
  
  ::mtproto::InputCheckPasswordSRP* temp = password_;
  password_ = NULL;
  return temp;
}
inline void TL_account_getPasswordSettings::set_allocated_password(::mtproto::InputCheckPasswordSRP* password) {
  delete password_;
  password_ = password;
  if (password) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_account_getPasswordSettings.password)
}

// -------------------------------------------------------------------

// TL_account_updatePasswordSettings

// .mtproto.InputCheckPasswordSRP password = 1;
inline bool TL_account_updatePasswordSettings::has_password() const {
  return this != internal_default_instance() && password_ != NULL;
}
inline void TL_account_updatePasswordSettings::clear_password() {
  if (GetArenaNoVirtual() == NULL && password_ != NULL) delete password_;
  password_ = NULL;
}
inline const ::mtproto::InputCheckPasswordSRP& TL_account_updatePasswordSettings::password() const {
  const ::mtproto::InputCheckPasswordSRP* p = password_;
  // @@protoc_insertion_point(field_get:mtproto.TL_account_updatePasswordSettings.password)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::InputCheckPasswordSRP*>(
      &::mtproto::_InputCheckPasswordSRP_default_instance_);
}
inline ::mtproto::InputCheckPasswordSRP* TL_account_updatePasswordSettings::mutable_password() {
  
  if (password_ == NULL) {
    password_ = new ::mtproto::InputCheckPasswordSRP;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_account_updatePasswordSettings.password)
  return password_;
}
inline ::mtproto::InputCheckPasswordSRP* TL_account_updatePasswordSettings::release_password() {
  // @@protoc_insertion_point(field_release:mtproto.TL_account_updatePasswordSettings.password)
  
  ::mtproto::InputCheckPasswordSRP* temp = password_;
  password_ = NULL;
  return temp;
}
inline void TL_account_updatePasswordSettings::set_allocated_password(::mtproto::InputCheckPasswordSRP* password) {
  delete password_;
  password_ = password;
  if (password) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_account_updatePasswordSettings.password)
}

// .mtproto.account_PasswordInputSettings new_settings = 2;
inline bool TL_account_updatePasswordSettings::has_new_settings() const {
  return this != internal_default_instance() && new_settings_ != NULL;
}
inline void TL_account_updatePasswordSettings::clear_new_settings() {
  if (GetArenaNoVirtual() == NULL && new_settings_ != NULL) delete new_settings_;
  new_settings_ = NULL;
}
inline const ::mtproto::account_PasswordInputSettings& TL_account_updatePasswordSettings::new_settings() const {
  const ::mtproto::account_PasswordInputSettings* p = new_settings_;
  // @@protoc_insertion_point(field_get:mtproto.TL_account_updatePasswordSettings.new_settings)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::account_PasswordInputSettings*>(
      &::mtproto::_account_PasswordInputSettings_default_instance_);
}
inline ::mtproto::account_PasswordInputSettings* TL_account_updatePasswordSettings::mutable_new_settings() {
  
  if (new_settings_ == NULL) {
    new_settings_ = new ::mtproto::account_PasswordInputSettings;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_account_updatePasswordSettings.new_settings)
  return new_settings_;
}
inline ::mtproto::account_PasswordInputSettings* TL_account_updatePasswordSettings::release_new_settings() {
  // @@protoc_insertion_point(field_release:mtproto.TL_account_updatePasswordSettings.new_settings)
  
  ::mtproto::account_PasswordInputSettings* temp = new_settings_;
  new_settings_ = NULL;
  return temp;
}
inline void TL_account_updatePasswordSettings::set_allocated_new_settings(::mtproto::account_PasswordInputSettings* new_settings) {
  delete new_settings_;
  new_settings_ = new_settings;
  if (new_settings) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_account_updatePasswordSettings.new_settings)
}

// -------------------------------------------------------------------

// TL_account_sendConfirmPhoneCode

// bool allow_flashcall = 2;
inline void TL_account_sendConfirmPhoneCode::clear_allow_flashcall() {
  allow_flashcall_ = false;
}
inline bool TL_account_sendConfirmPhoneCode::allow_flashcall() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_account_sendConfirmPhoneCode.allow_flashcall)
  return allow_flashcall_;
}
inline void TL_account_sendConfirmPhoneCode::set_allow_flashcall(bool value) {
  
  allow_flashcall_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_account_sendConfirmPhoneCode.allow_flashcall)
}

// string hash = 3;
inline void TL_account_sendConfirmPhoneCode::clear_hash() {
  hash_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& TL_account_sendConfirmPhoneCode::hash() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_account_sendConfirmPhoneCode.hash)
  return hash_.GetNoArena();
}
inline void TL_account_sendConfirmPhoneCode::set_hash(const ::std::string& value) {
  
  hash_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtproto.TL_account_sendConfirmPhoneCode.hash)
}
#if LANG_CXX11
inline void TL_account_sendConfirmPhoneCode::set_hash(::std::string&& value) {
  
  hash_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mtproto.TL_account_sendConfirmPhoneCode.hash)
}
#endif
inline void TL_account_sendConfirmPhoneCode::set_hash(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  hash_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtproto.TL_account_sendConfirmPhoneCode.hash)
}
inline void TL_account_sendConfirmPhoneCode::set_hash(const char* value, size_t size) {
  
  hash_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtproto.TL_account_sendConfirmPhoneCode.hash)
}
inline ::std::string* TL_account_sendConfirmPhoneCode::mutable_hash() {
  
  // @@protoc_insertion_point(field_mutable:mtproto.TL_account_sendConfirmPhoneCode.hash)
  return hash_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TL_account_sendConfirmPhoneCode::release_hash() {
  // @@protoc_insertion_point(field_release:mtproto.TL_account_sendConfirmPhoneCode.hash)
  
  return hash_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TL_account_sendConfirmPhoneCode::set_allocated_hash(::std::string* hash) {
  if (hash != NULL) {
    
  } else {
    
  }
  hash_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), hash);
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_account_sendConfirmPhoneCode.hash)
}

// .mtproto.Bool current_number = 4;
inline bool TL_account_sendConfirmPhoneCode::has_current_number() const {
  return this != internal_default_instance() && current_number_ != NULL;
}
inline void TL_account_sendConfirmPhoneCode::clear_current_number() {
  if (GetArenaNoVirtual() == NULL && current_number_ != NULL) delete current_number_;
  current_number_ = NULL;
}
inline const ::mtproto::Bool& TL_account_sendConfirmPhoneCode::current_number() const {
  const ::mtproto::Bool* p = current_number_;
  // @@protoc_insertion_point(field_get:mtproto.TL_account_sendConfirmPhoneCode.current_number)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::Bool*>(
      &::mtproto::_Bool_default_instance_);
}
inline ::mtproto::Bool* TL_account_sendConfirmPhoneCode::mutable_current_number() {
  
  if (current_number_ == NULL) {
    current_number_ = new ::mtproto::Bool;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_account_sendConfirmPhoneCode.current_number)
  return current_number_;
}
inline ::mtproto::Bool* TL_account_sendConfirmPhoneCode::release_current_number() {
  // @@protoc_insertion_point(field_release:mtproto.TL_account_sendConfirmPhoneCode.current_number)
  
  ::mtproto::Bool* temp = current_number_;
  current_number_ = NULL;
  return temp;
}
inline void TL_account_sendConfirmPhoneCode::set_allocated_current_number(::mtproto::Bool* current_number) {
  delete current_number_;
  current_number_ = current_number;
  if (current_number) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_account_sendConfirmPhoneCode.current_number)
}

// -------------------------------------------------------------------

// TL_account_confirmPhone

// string phone_code_hash = 1;
inline void TL_account_confirmPhone::clear_phone_code_hash() {
  phone_code_hash_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& TL_account_confirmPhone::phone_code_hash() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_account_confirmPhone.phone_code_hash)
  return phone_code_hash_.GetNoArena();
}
inline void TL_account_confirmPhone::set_phone_code_hash(const ::std::string& value) {
  
  phone_code_hash_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtproto.TL_account_confirmPhone.phone_code_hash)
}
#if LANG_CXX11
inline void TL_account_confirmPhone::set_phone_code_hash(::std::string&& value) {
  
  phone_code_hash_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mtproto.TL_account_confirmPhone.phone_code_hash)
}
#endif
inline void TL_account_confirmPhone::set_phone_code_hash(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  phone_code_hash_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtproto.TL_account_confirmPhone.phone_code_hash)
}
inline void TL_account_confirmPhone::set_phone_code_hash(const char* value, size_t size) {
  
  phone_code_hash_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtproto.TL_account_confirmPhone.phone_code_hash)
}
inline ::std::string* TL_account_confirmPhone::mutable_phone_code_hash() {
  
  // @@protoc_insertion_point(field_mutable:mtproto.TL_account_confirmPhone.phone_code_hash)
  return phone_code_hash_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TL_account_confirmPhone::release_phone_code_hash() {
  // @@protoc_insertion_point(field_release:mtproto.TL_account_confirmPhone.phone_code_hash)
  
  return phone_code_hash_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TL_account_confirmPhone::set_allocated_phone_code_hash(::std::string* phone_code_hash) {
  if (phone_code_hash != NULL) {
    
  } else {
    
  }
  phone_code_hash_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), phone_code_hash);
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_account_confirmPhone.phone_code_hash)
}

// string phone_code = 2;
inline void TL_account_confirmPhone::clear_phone_code() {
  phone_code_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& TL_account_confirmPhone::phone_code() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_account_confirmPhone.phone_code)
  return phone_code_.GetNoArena();
}
inline void TL_account_confirmPhone::set_phone_code(const ::std::string& value) {
  
  phone_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtproto.TL_account_confirmPhone.phone_code)
}
#if LANG_CXX11
inline void TL_account_confirmPhone::set_phone_code(::std::string&& value) {
  
  phone_code_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mtproto.TL_account_confirmPhone.phone_code)
}
#endif
inline void TL_account_confirmPhone::set_phone_code(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  phone_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtproto.TL_account_confirmPhone.phone_code)
}
inline void TL_account_confirmPhone::set_phone_code(const char* value, size_t size) {
  
  phone_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtproto.TL_account_confirmPhone.phone_code)
}
inline ::std::string* TL_account_confirmPhone::mutable_phone_code() {
  
  // @@protoc_insertion_point(field_mutable:mtproto.TL_account_confirmPhone.phone_code)
  return phone_code_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TL_account_confirmPhone::release_phone_code() {
  // @@protoc_insertion_point(field_release:mtproto.TL_account_confirmPhone.phone_code)
  
  return phone_code_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TL_account_confirmPhone::set_allocated_phone_code(::std::string* phone_code) {
  if (phone_code != NULL) {
    
  } else {
    
  }
  phone_code_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), phone_code);
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_account_confirmPhone.phone_code)
}

// -------------------------------------------------------------------

// TL_account_getTmpPassword

// .mtproto.InputCheckPasswordSRP password = 1;
inline bool TL_account_getTmpPassword::has_password() const {
  return this != internal_default_instance() && password_ != NULL;
}
inline void TL_account_getTmpPassword::clear_password() {
  if (GetArenaNoVirtual() == NULL && password_ != NULL) delete password_;
  password_ = NULL;
}
inline const ::mtproto::InputCheckPasswordSRP& TL_account_getTmpPassword::password() const {
  const ::mtproto::InputCheckPasswordSRP* p = password_;
  // @@protoc_insertion_point(field_get:mtproto.TL_account_getTmpPassword.password)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::InputCheckPasswordSRP*>(
      &::mtproto::_InputCheckPasswordSRP_default_instance_);
}
inline ::mtproto::InputCheckPasswordSRP* TL_account_getTmpPassword::mutable_password() {
  
  if (password_ == NULL) {
    password_ = new ::mtproto::InputCheckPasswordSRP;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_account_getTmpPassword.password)
  return password_;
}
inline ::mtproto::InputCheckPasswordSRP* TL_account_getTmpPassword::release_password() {
  // @@protoc_insertion_point(field_release:mtproto.TL_account_getTmpPassword.password)
  
  ::mtproto::InputCheckPasswordSRP* temp = password_;
  password_ = NULL;
  return temp;
}
inline void TL_account_getTmpPassword::set_allocated_password(::mtproto::InputCheckPasswordSRP* password) {
  delete password_;
  password_ = password;
  if (password) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_account_getTmpPassword.password)
}

// int32 period = 2;
inline void TL_account_getTmpPassword::clear_period() {
  period_ = 0;
}
inline ::google::protobuf::int32 TL_account_getTmpPassword::period() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_account_getTmpPassword.period)
  return period_;
}
inline void TL_account_getTmpPassword::set_period(::google::protobuf::int32 value) {
  
  period_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_account_getTmpPassword.period)
}

// -------------------------------------------------------------------

// TL_account_getWebAuthorizations

// -------------------------------------------------------------------

// TL_account_resetWebAuthorization

// int64 hash = 1;
inline void TL_account_resetWebAuthorization::clear_hash() {
  hash_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 TL_account_resetWebAuthorization::hash() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_account_resetWebAuthorization.hash)
  return hash_;
}
inline void TL_account_resetWebAuthorization::set_hash(::google::protobuf::int64 value) {
  
  hash_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_account_resetWebAuthorization.hash)
}

// -------------------------------------------------------------------

// TL_account_resetWebAuthorizations

// -------------------------------------------------------------------

// TL_account_getAllSecureValues

// -------------------------------------------------------------------

// TL_account_getSecureValue

// repeated .mtproto.SecureValueType types = 1;
inline int TL_account_getSecureValue::types_size() const {
  return types_.size();
}
inline void TL_account_getSecureValue::clear_types() {
  types_.Clear();
}
inline const ::mtproto::SecureValueType& TL_account_getSecureValue::types(int index) const {
  // @@protoc_insertion_point(field_get:mtproto.TL_account_getSecureValue.types)
  return types_.Get(index);
}
inline ::mtproto::SecureValueType* TL_account_getSecureValue::mutable_types(int index) {
  // @@protoc_insertion_point(field_mutable:mtproto.TL_account_getSecureValue.types)
  return types_.Mutable(index);
}
inline ::mtproto::SecureValueType* TL_account_getSecureValue::add_types() {
  // @@protoc_insertion_point(field_add:mtproto.TL_account_getSecureValue.types)
  return types_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::mtproto::SecureValueType >*
TL_account_getSecureValue::mutable_types() {
  // @@protoc_insertion_point(field_mutable_list:mtproto.TL_account_getSecureValue.types)
  return &types_;
}
inline const ::google::protobuf::RepeatedPtrField< ::mtproto::SecureValueType >&
TL_account_getSecureValue::types() const {
  // @@protoc_insertion_point(field_list:mtproto.TL_account_getSecureValue.types)
  return types_;
}

// -------------------------------------------------------------------

// TL_account_saveSecureValue

// .mtproto.InputSecureValue value = 1;
inline bool TL_account_saveSecureValue::has_value() const {
  return this != internal_default_instance() && value_ != NULL;
}
inline void TL_account_saveSecureValue::clear_value() {
  if (GetArenaNoVirtual() == NULL && value_ != NULL) delete value_;
  value_ = NULL;
}
inline const ::mtproto::InputSecureValue& TL_account_saveSecureValue::value() const {
  const ::mtproto::InputSecureValue* p = value_;
  // @@protoc_insertion_point(field_get:mtproto.TL_account_saveSecureValue.value)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::InputSecureValue*>(
      &::mtproto::_InputSecureValue_default_instance_);
}
inline ::mtproto::InputSecureValue* TL_account_saveSecureValue::mutable_value() {
  
  if (value_ == NULL) {
    value_ = new ::mtproto::InputSecureValue;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_account_saveSecureValue.value)
  return value_;
}
inline ::mtproto::InputSecureValue* TL_account_saveSecureValue::release_value() {
  // @@protoc_insertion_point(field_release:mtproto.TL_account_saveSecureValue.value)
  
  ::mtproto::InputSecureValue* temp = value_;
  value_ = NULL;
  return temp;
}
inline void TL_account_saveSecureValue::set_allocated_value(::mtproto::InputSecureValue* value) {
  delete value_;
  value_ = value;
  if (value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_account_saveSecureValue.value)
}

// int64 secure_secret_id = 2;
inline void TL_account_saveSecureValue::clear_secure_secret_id() {
  secure_secret_id_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 TL_account_saveSecureValue::secure_secret_id() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_account_saveSecureValue.secure_secret_id)
  return secure_secret_id_;
}
inline void TL_account_saveSecureValue::set_secure_secret_id(::google::protobuf::int64 value) {
  
  secure_secret_id_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_account_saveSecureValue.secure_secret_id)
}

// -------------------------------------------------------------------

// TL_account_deleteSecureValue

// repeated .mtproto.SecureValueType types = 1;
inline int TL_account_deleteSecureValue::types_size() const {
  return types_.size();
}
inline void TL_account_deleteSecureValue::clear_types() {
  types_.Clear();
}
inline const ::mtproto::SecureValueType& TL_account_deleteSecureValue::types(int index) const {
  // @@protoc_insertion_point(field_get:mtproto.TL_account_deleteSecureValue.types)
  return types_.Get(index);
}
inline ::mtproto::SecureValueType* TL_account_deleteSecureValue::mutable_types(int index) {
  // @@protoc_insertion_point(field_mutable:mtproto.TL_account_deleteSecureValue.types)
  return types_.Mutable(index);
}
inline ::mtproto::SecureValueType* TL_account_deleteSecureValue::add_types() {
  // @@protoc_insertion_point(field_add:mtproto.TL_account_deleteSecureValue.types)
  return types_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::mtproto::SecureValueType >*
TL_account_deleteSecureValue::mutable_types() {
  // @@protoc_insertion_point(field_mutable_list:mtproto.TL_account_deleteSecureValue.types)
  return &types_;
}
inline const ::google::protobuf::RepeatedPtrField< ::mtproto::SecureValueType >&
TL_account_deleteSecureValue::types() const {
  // @@protoc_insertion_point(field_list:mtproto.TL_account_deleteSecureValue.types)
  return types_;
}

// -------------------------------------------------------------------

// TL_account_getAuthorizationForm

// int32 bot_id = 1;
inline void TL_account_getAuthorizationForm::clear_bot_id() {
  bot_id_ = 0;
}
inline ::google::protobuf::int32 TL_account_getAuthorizationForm::bot_id() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_account_getAuthorizationForm.bot_id)
  return bot_id_;
}
inline void TL_account_getAuthorizationForm::set_bot_id(::google::protobuf::int32 value) {
  
  bot_id_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_account_getAuthorizationForm.bot_id)
}

// string scope = 2;
inline void TL_account_getAuthorizationForm::clear_scope() {
  scope_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& TL_account_getAuthorizationForm::scope() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_account_getAuthorizationForm.scope)
  return scope_.GetNoArena();
}
inline void TL_account_getAuthorizationForm::set_scope(const ::std::string& value) {
  
  scope_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtproto.TL_account_getAuthorizationForm.scope)
}
#if LANG_CXX11
inline void TL_account_getAuthorizationForm::set_scope(::std::string&& value) {
  
  scope_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mtproto.TL_account_getAuthorizationForm.scope)
}
#endif
inline void TL_account_getAuthorizationForm::set_scope(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  scope_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtproto.TL_account_getAuthorizationForm.scope)
}
inline void TL_account_getAuthorizationForm::set_scope(const char* value, size_t size) {
  
  scope_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtproto.TL_account_getAuthorizationForm.scope)
}
inline ::std::string* TL_account_getAuthorizationForm::mutable_scope() {
  
  // @@protoc_insertion_point(field_mutable:mtproto.TL_account_getAuthorizationForm.scope)
  return scope_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TL_account_getAuthorizationForm::release_scope() {
  // @@protoc_insertion_point(field_release:mtproto.TL_account_getAuthorizationForm.scope)
  
  return scope_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TL_account_getAuthorizationForm::set_allocated_scope(::std::string* scope) {
  if (scope != NULL) {
    
  } else {
    
  }
  scope_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), scope);
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_account_getAuthorizationForm.scope)
}

// string public_key = 3;
inline void TL_account_getAuthorizationForm::clear_public_key() {
  public_key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& TL_account_getAuthorizationForm::public_key() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_account_getAuthorizationForm.public_key)
  return public_key_.GetNoArena();
}
inline void TL_account_getAuthorizationForm::set_public_key(const ::std::string& value) {
  
  public_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtproto.TL_account_getAuthorizationForm.public_key)
}
#if LANG_CXX11
inline void TL_account_getAuthorizationForm::set_public_key(::std::string&& value) {
  
  public_key_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mtproto.TL_account_getAuthorizationForm.public_key)
}
#endif
inline void TL_account_getAuthorizationForm::set_public_key(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  public_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtproto.TL_account_getAuthorizationForm.public_key)
}
inline void TL_account_getAuthorizationForm::set_public_key(const char* value, size_t size) {
  
  public_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtproto.TL_account_getAuthorizationForm.public_key)
}
inline ::std::string* TL_account_getAuthorizationForm::mutable_public_key() {
  
  // @@protoc_insertion_point(field_mutable:mtproto.TL_account_getAuthorizationForm.public_key)
  return public_key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TL_account_getAuthorizationForm::release_public_key() {
  // @@protoc_insertion_point(field_release:mtproto.TL_account_getAuthorizationForm.public_key)
  
  return public_key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TL_account_getAuthorizationForm::set_allocated_public_key(::std::string* public_key) {
  if (public_key != NULL) {
    
  } else {
    
  }
  public_key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), public_key);
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_account_getAuthorizationForm.public_key)
}

// -------------------------------------------------------------------

// TL_account_acceptAuthorization

// int32 bot_id = 1;
inline void TL_account_acceptAuthorization::clear_bot_id() {
  bot_id_ = 0;
}
inline ::google::protobuf::int32 TL_account_acceptAuthorization::bot_id() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_account_acceptAuthorization.bot_id)
  return bot_id_;
}
inline void TL_account_acceptAuthorization::set_bot_id(::google::protobuf::int32 value) {
  
  bot_id_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_account_acceptAuthorization.bot_id)
}

// string scope = 2;
inline void TL_account_acceptAuthorization::clear_scope() {
  scope_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& TL_account_acceptAuthorization::scope() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_account_acceptAuthorization.scope)
  return scope_.GetNoArena();
}
inline void TL_account_acceptAuthorization::set_scope(const ::std::string& value) {
  
  scope_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtproto.TL_account_acceptAuthorization.scope)
}
#if LANG_CXX11
inline void TL_account_acceptAuthorization::set_scope(::std::string&& value) {
  
  scope_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mtproto.TL_account_acceptAuthorization.scope)
}
#endif
inline void TL_account_acceptAuthorization::set_scope(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  scope_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtproto.TL_account_acceptAuthorization.scope)
}
inline void TL_account_acceptAuthorization::set_scope(const char* value, size_t size) {
  
  scope_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtproto.TL_account_acceptAuthorization.scope)
}
inline ::std::string* TL_account_acceptAuthorization::mutable_scope() {
  
  // @@protoc_insertion_point(field_mutable:mtproto.TL_account_acceptAuthorization.scope)
  return scope_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TL_account_acceptAuthorization::release_scope() {
  // @@protoc_insertion_point(field_release:mtproto.TL_account_acceptAuthorization.scope)
  
  return scope_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TL_account_acceptAuthorization::set_allocated_scope(::std::string* scope) {
  if (scope != NULL) {
    
  } else {
    
  }
  scope_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), scope);
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_account_acceptAuthorization.scope)
}

// string public_key = 3;
inline void TL_account_acceptAuthorization::clear_public_key() {
  public_key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& TL_account_acceptAuthorization::public_key() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_account_acceptAuthorization.public_key)
  return public_key_.GetNoArena();
}
inline void TL_account_acceptAuthorization::set_public_key(const ::std::string& value) {
  
  public_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtproto.TL_account_acceptAuthorization.public_key)
}
#if LANG_CXX11
inline void TL_account_acceptAuthorization::set_public_key(::std::string&& value) {
  
  public_key_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mtproto.TL_account_acceptAuthorization.public_key)
}
#endif
inline void TL_account_acceptAuthorization::set_public_key(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  public_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtproto.TL_account_acceptAuthorization.public_key)
}
inline void TL_account_acceptAuthorization::set_public_key(const char* value, size_t size) {
  
  public_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtproto.TL_account_acceptAuthorization.public_key)
}
inline ::std::string* TL_account_acceptAuthorization::mutable_public_key() {
  
  // @@protoc_insertion_point(field_mutable:mtproto.TL_account_acceptAuthorization.public_key)
  return public_key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TL_account_acceptAuthorization::release_public_key() {
  // @@protoc_insertion_point(field_release:mtproto.TL_account_acceptAuthorization.public_key)
  
  return public_key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TL_account_acceptAuthorization::set_allocated_public_key(::std::string* public_key) {
  if (public_key != NULL) {
    
  } else {
    
  }
  public_key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), public_key);
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_account_acceptAuthorization.public_key)
}

// repeated .mtproto.SecureValueHash value_hashes = 4;
inline int TL_account_acceptAuthorization::value_hashes_size() const {
  return value_hashes_.size();
}
inline void TL_account_acceptAuthorization::clear_value_hashes() {
  value_hashes_.Clear();
}
inline const ::mtproto::SecureValueHash& TL_account_acceptAuthorization::value_hashes(int index) const {
  // @@protoc_insertion_point(field_get:mtproto.TL_account_acceptAuthorization.value_hashes)
  return value_hashes_.Get(index);
}
inline ::mtproto::SecureValueHash* TL_account_acceptAuthorization::mutable_value_hashes(int index) {
  // @@protoc_insertion_point(field_mutable:mtproto.TL_account_acceptAuthorization.value_hashes)
  return value_hashes_.Mutable(index);
}
inline ::mtproto::SecureValueHash* TL_account_acceptAuthorization::add_value_hashes() {
  // @@protoc_insertion_point(field_add:mtproto.TL_account_acceptAuthorization.value_hashes)
  return value_hashes_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::mtproto::SecureValueHash >*
TL_account_acceptAuthorization::mutable_value_hashes() {
  // @@protoc_insertion_point(field_mutable_list:mtproto.TL_account_acceptAuthorization.value_hashes)
  return &value_hashes_;
}
inline const ::google::protobuf::RepeatedPtrField< ::mtproto::SecureValueHash >&
TL_account_acceptAuthorization::value_hashes() const {
  // @@protoc_insertion_point(field_list:mtproto.TL_account_acceptAuthorization.value_hashes)
  return value_hashes_;
}

// .mtproto.SecureCredentialsEncrypted credentials = 5;
inline bool TL_account_acceptAuthorization::has_credentials() const {
  return this != internal_default_instance() && credentials_ != NULL;
}
inline void TL_account_acceptAuthorization::clear_credentials() {
  if (GetArenaNoVirtual() == NULL && credentials_ != NULL) delete credentials_;
  credentials_ = NULL;
}
inline const ::mtproto::SecureCredentialsEncrypted& TL_account_acceptAuthorization::credentials() const {
  const ::mtproto::SecureCredentialsEncrypted* p = credentials_;
  // @@protoc_insertion_point(field_get:mtproto.TL_account_acceptAuthorization.credentials)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::SecureCredentialsEncrypted*>(
      &::mtproto::_SecureCredentialsEncrypted_default_instance_);
}
inline ::mtproto::SecureCredentialsEncrypted* TL_account_acceptAuthorization::mutable_credentials() {
  
  if (credentials_ == NULL) {
    credentials_ = new ::mtproto::SecureCredentialsEncrypted;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_account_acceptAuthorization.credentials)
  return credentials_;
}
inline ::mtproto::SecureCredentialsEncrypted* TL_account_acceptAuthorization::release_credentials() {
  // @@protoc_insertion_point(field_release:mtproto.TL_account_acceptAuthorization.credentials)
  
  ::mtproto::SecureCredentialsEncrypted* temp = credentials_;
  credentials_ = NULL;
  return temp;
}
inline void TL_account_acceptAuthorization::set_allocated_credentials(::mtproto::SecureCredentialsEncrypted* credentials) {
  delete credentials_;
  credentials_ = credentials;
  if (credentials) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_account_acceptAuthorization.credentials)
}

// -------------------------------------------------------------------

// TL_account_sendVerifyPhoneCode

// bool allow_flashcall = 2;
inline void TL_account_sendVerifyPhoneCode::clear_allow_flashcall() {
  allow_flashcall_ = false;
}
inline bool TL_account_sendVerifyPhoneCode::allow_flashcall() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_account_sendVerifyPhoneCode.allow_flashcall)
  return allow_flashcall_;
}
inline void TL_account_sendVerifyPhoneCode::set_allow_flashcall(bool value) {
  
  allow_flashcall_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_account_sendVerifyPhoneCode.allow_flashcall)
}

// string phone_number = 3;
inline void TL_account_sendVerifyPhoneCode::clear_phone_number() {
  phone_number_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& TL_account_sendVerifyPhoneCode::phone_number() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_account_sendVerifyPhoneCode.phone_number)
  return phone_number_.GetNoArena();
}
inline void TL_account_sendVerifyPhoneCode::set_phone_number(const ::std::string& value) {
  
  phone_number_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtproto.TL_account_sendVerifyPhoneCode.phone_number)
}
#if LANG_CXX11
inline void TL_account_sendVerifyPhoneCode::set_phone_number(::std::string&& value) {
  
  phone_number_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mtproto.TL_account_sendVerifyPhoneCode.phone_number)
}
#endif
inline void TL_account_sendVerifyPhoneCode::set_phone_number(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  phone_number_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtproto.TL_account_sendVerifyPhoneCode.phone_number)
}
inline void TL_account_sendVerifyPhoneCode::set_phone_number(const char* value, size_t size) {
  
  phone_number_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtproto.TL_account_sendVerifyPhoneCode.phone_number)
}
inline ::std::string* TL_account_sendVerifyPhoneCode::mutable_phone_number() {
  
  // @@protoc_insertion_point(field_mutable:mtproto.TL_account_sendVerifyPhoneCode.phone_number)
  return phone_number_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TL_account_sendVerifyPhoneCode::release_phone_number() {
  // @@protoc_insertion_point(field_release:mtproto.TL_account_sendVerifyPhoneCode.phone_number)
  
  return phone_number_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TL_account_sendVerifyPhoneCode::set_allocated_phone_number(::std::string* phone_number) {
  if (phone_number != NULL) {
    
  } else {
    
  }
  phone_number_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), phone_number);
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_account_sendVerifyPhoneCode.phone_number)
}

// .mtproto.Bool current_number = 4;
inline bool TL_account_sendVerifyPhoneCode::has_current_number() const {
  return this != internal_default_instance() && current_number_ != NULL;
}
inline void TL_account_sendVerifyPhoneCode::clear_current_number() {
  if (GetArenaNoVirtual() == NULL && current_number_ != NULL) delete current_number_;
  current_number_ = NULL;
}
inline const ::mtproto::Bool& TL_account_sendVerifyPhoneCode::current_number() const {
  const ::mtproto::Bool* p = current_number_;
  // @@protoc_insertion_point(field_get:mtproto.TL_account_sendVerifyPhoneCode.current_number)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::Bool*>(
      &::mtproto::_Bool_default_instance_);
}
inline ::mtproto::Bool* TL_account_sendVerifyPhoneCode::mutable_current_number() {
  
  if (current_number_ == NULL) {
    current_number_ = new ::mtproto::Bool;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_account_sendVerifyPhoneCode.current_number)
  return current_number_;
}
inline ::mtproto::Bool* TL_account_sendVerifyPhoneCode::release_current_number() {
  // @@protoc_insertion_point(field_release:mtproto.TL_account_sendVerifyPhoneCode.current_number)
  
  ::mtproto::Bool* temp = current_number_;
  current_number_ = NULL;
  return temp;
}
inline void TL_account_sendVerifyPhoneCode::set_allocated_current_number(::mtproto::Bool* current_number) {
  delete current_number_;
  current_number_ = current_number;
  if (current_number) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_account_sendVerifyPhoneCode.current_number)
}

// -------------------------------------------------------------------

// TL_account_verifyPhone

// string phone_number = 1;
inline void TL_account_verifyPhone::clear_phone_number() {
  phone_number_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& TL_account_verifyPhone::phone_number() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_account_verifyPhone.phone_number)
  return phone_number_.GetNoArena();
}
inline void TL_account_verifyPhone::set_phone_number(const ::std::string& value) {
  
  phone_number_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtproto.TL_account_verifyPhone.phone_number)
}
#if LANG_CXX11
inline void TL_account_verifyPhone::set_phone_number(::std::string&& value) {
  
  phone_number_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mtproto.TL_account_verifyPhone.phone_number)
}
#endif
inline void TL_account_verifyPhone::set_phone_number(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  phone_number_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtproto.TL_account_verifyPhone.phone_number)
}
inline void TL_account_verifyPhone::set_phone_number(const char* value, size_t size) {
  
  phone_number_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtproto.TL_account_verifyPhone.phone_number)
}
inline ::std::string* TL_account_verifyPhone::mutable_phone_number() {
  
  // @@protoc_insertion_point(field_mutable:mtproto.TL_account_verifyPhone.phone_number)
  return phone_number_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TL_account_verifyPhone::release_phone_number() {
  // @@protoc_insertion_point(field_release:mtproto.TL_account_verifyPhone.phone_number)
  
  return phone_number_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TL_account_verifyPhone::set_allocated_phone_number(::std::string* phone_number) {
  if (phone_number != NULL) {
    
  } else {
    
  }
  phone_number_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), phone_number);
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_account_verifyPhone.phone_number)
}

// string phone_code_hash = 2;
inline void TL_account_verifyPhone::clear_phone_code_hash() {
  phone_code_hash_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& TL_account_verifyPhone::phone_code_hash() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_account_verifyPhone.phone_code_hash)
  return phone_code_hash_.GetNoArena();
}
inline void TL_account_verifyPhone::set_phone_code_hash(const ::std::string& value) {
  
  phone_code_hash_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtproto.TL_account_verifyPhone.phone_code_hash)
}
#if LANG_CXX11
inline void TL_account_verifyPhone::set_phone_code_hash(::std::string&& value) {
  
  phone_code_hash_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mtproto.TL_account_verifyPhone.phone_code_hash)
}
#endif
inline void TL_account_verifyPhone::set_phone_code_hash(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  phone_code_hash_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtproto.TL_account_verifyPhone.phone_code_hash)
}
inline void TL_account_verifyPhone::set_phone_code_hash(const char* value, size_t size) {
  
  phone_code_hash_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtproto.TL_account_verifyPhone.phone_code_hash)
}
inline ::std::string* TL_account_verifyPhone::mutable_phone_code_hash() {
  
  // @@protoc_insertion_point(field_mutable:mtproto.TL_account_verifyPhone.phone_code_hash)
  return phone_code_hash_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TL_account_verifyPhone::release_phone_code_hash() {
  // @@protoc_insertion_point(field_release:mtproto.TL_account_verifyPhone.phone_code_hash)
  
  return phone_code_hash_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TL_account_verifyPhone::set_allocated_phone_code_hash(::std::string* phone_code_hash) {
  if (phone_code_hash != NULL) {
    
  } else {
    
  }
  phone_code_hash_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), phone_code_hash);
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_account_verifyPhone.phone_code_hash)
}

// string phone_code = 3;
inline void TL_account_verifyPhone::clear_phone_code() {
  phone_code_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& TL_account_verifyPhone::phone_code() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_account_verifyPhone.phone_code)
  return phone_code_.GetNoArena();
}
inline void TL_account_verifyPhone::set_phone_code(const ::std::string& value) {
  
  phone_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtproto.TL_account_verifyPhone.phone_code)
}
#if LANG_CXX11
inline void TL_account_verifyPhone::set_phone_code(::std::string&& value) {
  
  phone_code_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mtproto.TL_account_verifyPhone.phone_code)
}
#endif
inline void TL_account_verifyPhone::set_phone_code(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  phone_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtproto.TL_account_verifyPhone.phone_code)
}
inline void TL_account_verifyPhone::set_phone_code(const char* value, size_t size) {
  
  phone_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtproto.TL_account_verifyPhone.phone_code)
}
inline ::std::string* TL_account_verifyPhone::mutable_phone_code() {
  
  // @@protoc_insertion_point(field_mutable:mtproto.TL_account_verifyPhone.phone_code)
  return phone_code_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TL_account_verifyPhone::release_phone_code() {
  // @@protoc_insertion_point(field_release:mtproto.TL_account_verifyPhone.phone_code)
  
  return phone_code_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TL_account_verifyPhone::set_allocated_phone_code(::std::string* phone_code) {
  if (phone_code != NULL) {
    
  } else {
    
  }
  phone_code_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), phone_code);
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_account_verifyPhone.phone_code)
}

// -------------------------------------------------------------------

// TL_account_sendVerifyEmailCode

// string email = 1;
inline void TL_account_sendVerifyEmailCode::clear_email() {
  email_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& TL_account_sendVerifyEmailCode::email() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_account_sendVerifyEmailCode.email)
  return email_.GetNoArena();
}
inline void TL_account_sendVerifyEmailCode::set_email(const ::std::string& value) {
  
  email_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtproto.TL_account_sendVerifyEmailCode.email)
}
#if LANG_CXX11
inline void TL_account_sendVerifyEmailCode::set_email(::std::string&& value) {
  
  email_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mtproto.TL_account_sendVerifyEmailCode.email)
}
#endif
inline void TL_account_sendVerifyEmailCode::set_email(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  email_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtproto.TL_account_sendVerifyEmailCode.email)
}
inline void TL_account_sendVerifyEmailCode::set_email(const char* value, size_t size) {
  
  email_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtproto.TL_account_sendVerifyEmailCode.email)
}
inline ::std::string* TL_account_sendVerifyEmailCode::mutable_email() {
  
  // @@protoc_insertion_point(field_mutable:mtproto.TL_account_sendVerifyEmailCode.email)
  return email_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TL_account_sendVerifyEmailCode::release_email() {
  // @@protoc_insertion_point(field_release:mtproto.TL_account_sendVerifyEmailCode.email)
  
  return email_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TL_account_sendVerifyEmailCode::set_allocated_email(::std::string* email) {
  if (email != NULL) {
    
  } else {
    
  }
  email_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), email);
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_account_sendVerifyEmailCode.email)
}

// -------------------------------------------------------------------

// TL_account_verifyEmail

// string email = 1;
inline void TL_account_verifyEmail::clear_email() {
  email_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& TL_account_verifyEmail::email() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_account_verifyEmail.email)
  return email_.GetNoArena();
}
inline void TL_account_verifyEmail::set_email(const ::std::string& value) {
  
  email_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtproto.TL_account_verifyEmail.email)
}
#if LANG_CXX11
inline void TL_account_verifyEmail::set_email(::std::string&& value) {
  
  email_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mtproto.TL_account_verifyEmail.email)
}
#endif
inline void TL_account_verifyEmail::set_email(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  email_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtproto.TL_account_verifyEmail.email)
}
inline void TL_account_verifyEmail::set_email(const char* value, size_t size) {
  
  email_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtproto.TL_account_verifyEmail.email)
}
inline ::std::string* TL_account_verifyEmail::mutable_email() {
  
  // @@protoc_insertion_point(field_mutable:mtproto.TL_account_verifyEmail.email)
  return email_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TL_account_verifyEmail::release_email() {
  // @@protoc_insertion_point(field_release:mtproto.TL_account_verifyEmail.email)
  
  return email_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TL_account_verifyEmail::set_allocated_email(::std::string* email) {
  if (email != NULL) {
    
  } else {
    
  }
  email_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), email);
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_account_verifyEmail.email)
}

// string code = 2;
inline void TL_account_verifyEmail::clear_code() {
  code_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& TL_account_verifyEmail::code() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_account_verifyEmail.code)
  return code_.GetNoArena();
}
inline void TL_account_verifyEmail::set_code(const ::std::string& value) {
  
  code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtproto.TL_account_verifyEmail.code)
}
#if LANG_CXX11
inline void TL_account_verifyEmail::set_code(::std::string&& value) {
  
  code_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mtproto.TL_account_verifyEmail.code)
}
#endif
inline void TL_account_verifyEmail::set_code(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtproto.TL_account_verifyEmail.code)
}
inline void TL_account_verifyEmail::set_code(const char* value, size_t size) {
  
  code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtproto.TL_account_verifyEmail.code)
}
inline ::std::string* TL_account_verifyEmail::mutable_code() {
  
  // @@protoc_insertion_point(field_mutable:mtproto.TL_account_verifyEmail.code)
  return code_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TL_account_verifyEmail::release_code() {
  // @@protoc_insertion_point(field_release:mtproto.TL_account_verifyEmail.code)
  
  return code_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TL_account_verifyEmail::set_allocated_code(::std::string* code) {
  if (code != NULL) {
    
  } else {
    
  }
  code_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), code);
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_account_verifyEmail.code)
}

// -------------------------------------------------------------------

// TL_account_initTakeoutSession

// bool contacts = 2;
inline void TL_account_initTakeoutSession::clear_contacts() {
  contacts_ = false;
}
inline bool TL_account_initTakeoutSession::contacts() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_account_initTakeoutSession.contacts)
  return contacts_;
}
inline void TL_account_initTakeoutSession::set_contacts(bool value) {
  
  contacts_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_account_initTakeoutSession.contacts)
}

// bool message_users = 3;
inline void TL_account_initTakeoutSession::clear_message_users() {
  message_users_ = false;
}
inline bool TL_account_initTakeoutSession::message_users() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_account_initTakeoutSession.message_users)
  return message_users_;
}
inline void TL_account_initTakeoutSession::set_message_users(bool value) {
  
  message_users_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_account_initTakeoutSession.message_users)
}

// bool message_chats = 4;
inline void TL_account_initTakeoutSession::clear_message_chats() {
  message_chats_ = false;
}
inline bool TL_account_initTakeoutSession::message_chats() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_account_initTakeoutSession.message_chats)
  return message_chats_;
}
inline void TL_account_initTakeoutSession::set_message_chats(bool value) {
  
  message_chats_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_account_initTakeoutSession.message_chats)
}

// bool message_megagroups = 5;
inline void TL_account_initTakeoutSession::clear_message_megagroups() {
  message_megagroups_ = false;
}
inline bool TL_account_initTakeoutSession::message_megagroups() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_account_initTakeoutSession.message_megagroups)
  return message_megagroups_;
}
inline void TL_account_initTakeoutSession::set_message_megagroups(bool value) {
  
  message_megagroups_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_account_initTakeoutSession.message_megagroups)
}

// bool message_channels = 6;
inline void TL_account_initTakeoutSession::clear_message_channels() {
  message_channels_ = false;
}
inline bool TL_account_initTakeoutSession::message_channels() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_account_initTakeoutSession.message_channels)
  return message_channels_;
}
inline void TL_account_initTakeoutSession::set_message_channels(bool value) {
  
  message_channels_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_account_initTakeoutSession.message_channels)
}

// bool files = 7;
inline void TL_account_initTakeoutSession::clear_files() {
  files_ = false;
}
inline bool TL_account_initTakeoutSession::files() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_account_initTakeoutSession.files)
  return files_;
}
inline void TL_account_initTakeoutSession::set_files(bool value) {
  
  files_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_account_initTakeoutSession.files)
}

// int32 file_max_size = 8;
inline void TL_account_initTakeoutSession::clear_file_max_size() {
  file_max_size_ = 0;
}
inline ::google::protobuf::int32 TL_account_initTakeoutSession::file_max_size() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_account_initTakeoutSession.file_max_size)
  return file_max_size_;
}
inline void TL_account_initTakeoutSession::set_file_max_size(::google::protobuf::int32 value) {
  
  file_max_size_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_account_initTakeoutSession.file_max_size)
}

// -------------------------------------------------------------------

// TL_account_finishTakeoutSession

// bool success = 2;
inline void TL_account_finishTakeoutSession::clear_success() {
  success_ = false;
}
inline bool TL_account_finishTakeoutSession::success() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_account_finishTakeoutSession.success)
  return success_;
}
inline void TL_account_finishTakeoutSession::set_success(bool value) {
  
  success_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_account_finishTakeoutSession.success)
}

// -------------------------------------------------------------------

// TL_users_getUsers

// repeated .mtproto.InputUser id = 1;
inline int TL_users_getUsers::id_size() const {
  return id_.size();
}
inline void TL_users_getUsers::clear_id() {
  id_.Clear();
}
inline const ::mtproto::InputUser& TL_users_getUsers::id(int index) const {
  // @@protoc_insertion_point(field_get:mtproto.TL_users_getUsers.id)
  return id_.Get(index);
}
inline ::mtproto::InputUser* TL_users_getUsers::mutable_id(int index) {
  // @@protoc_insertion_point(field_mutable:mtproto.TL_users_getUsers.id)
  return id_.Mutable(index);
}
inline ::mtproto::InputUser* TL_users_getUsers::add_id() {
  // @@protoc_insertion_point(field_add:mtproto.TL_users_getUsers.id)
  return id_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::mtproto::InputUser >*
TL_users_getUsers::mutable_id() {
  // @@protoc_insertion_point(field_mutable_list:mtproto.TL_users_getUsers.id)
  return &id_;
}
inline const ::google::protobuf::RepeatedPtrField< ::mtproto::InputUser >&
TL_users_getUsers::id() const {
  // @@protoc_insertion_point(field_list:mtproto.TL_users_getUsers.id)
  return id_;
}

// -------------------------------------------------------------------

// TL_users_getFullUser

// .mtproto.InputUser id = 1;
inline bool TL_users_getFullUser::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline void TL_users_getFullUser::clear_id() {
  if (GetArenaNoVirtual() == NULL && id_ != NULL) delete id_;
  id_ = NULL;
}
inline const ::mtproto::InputUser& TL_users_getFullUser::id() const {
  const ::mtproto::InputUser* p = id_;
  // @@protoc_insertion_point(field_get:mtproto.TL_users_getFullUser.id)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::InputUser*>(
      &::mtproto::_InputUser_default_instance_);
}
inline ::mtproto::InputUser* TL_users_getFullUser::mutable_id() {
  
  if (id_ == NULL) {
    id_ = new ::mtproto::InputUser;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_users_getFullUser.id)
  return id_;
}
inline ::mtproto::InputUser* TL_users_getFullUser::release_id() {
  // @@protoc_insertion_point(field_release:mtproto.TL_users_getFullUser.id)
  
  ::mtproto::InputUser* temp = id_;
  id_ = NULL;
  return temp;
}
inline void TL_users_getFullUser::set_allocated_id(::mtproto::InputUser* id) {
  delete id_;
  id_ = id;
  if (id) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_users_getFullUser.id)
}

// -------------------------------------------------------------------

// TL_users_setSecureValueErrors

// .mtproto.InputUser id = 1;
inline bool TL_users_setSecureValueErrors::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline void TL_users_setSecureValueErrors::clear_id() {
  if (GetArenaNoVirtual() == NULL && id_ != NULL) delete id_;
  id_ = NULL;
}
inline const ::mtproto::InputUser& TL_users_setSecureValueErrors::id() const {
  const ::mtproto::InputUser* p = id_;
  // @@protoc_insertion_point(field_get:mtproto.TL_users_setSecureValueErrors.id)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::InputUser*>(
      &::mtproto::_InputUser_default_instance_);
}
inline ::mtproto::InputUser* TL_users_setSecureValueErrors::mutable_id() {
  
  if (id_ == NULL) {
    id_ = new ::mtproto::InputUser;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_users_setSecureValueErrors.id)
  return id_;
}
inline ::mtproto::InputUser* TL_users_setSecureValueErrors::release_id() {
  // @@protoc_insertion_point(field_release:mtproto.TL_users_setSecureValueErrors.id)
  
  ::mtproto::InputUser* temp = id_;
  id_ = NULL;
  return temp;
}
inline void TL_users_setSecureValueErrors::set_allocated_id(::mtproto::InputUser* id) {
  delete id_;
  id_ = id;
  if (id) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_users_setSecureValueErrors.id)
}

// repeated .mtproto.SecureValueError errors = 2;
inline int TL_users_setSecureValueErrors::errors_size() const {
  return errors_.size();
}
inline void TL_users_setSecureValueErrors::clear_errors() {
  errors_.Clear();
}
inline const ::mtproto::SecureValueError& TL_users_setSecureValueErrors::errors(int index) const {
  // @@protoc_insertion_point(field_get:mtproto.TL_users_setSecureValueErrors.errors)
  return errors_.Get(index);
}
inline ::mtproto::SecureValueError* TL_users_setSecureValueErrors::mutable_errors(int index) {
  // @@protoc_insertion_point(field_mutable:mtproto.TL_users_setSecureValueErrors.errors)
  return errors_.Mutable(index);
}
inline ::mtproto::SecureValueError* TL_users_setSecureValueErrors::add_errors() {
  // @@protoc_insertion_point(field_add:mtproto.TL_users_setSecureValueErrors.errors)
  return errors_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::mtproto::SecureValueError >*
TL_users_setSecureValueErrors::mutable_errors() {
  // @@protoc_insertion_point(field_mutable_list:mtproto.TL_users_setSecureValueErrors.errors)
  return &errors_;
}
inline const ::google::protobuf::RepeatedPtrField< ::mtproto::SecureValueError >&
TL_users_setSecureValueErrors::errors() const {
  // @@protoc_insertion_point(field_list:mtproto.TL_users_setSecureValueErrors.errors)
  return errors_;
}

// -------------------------------------------------------------------

// TL_contacts_getStatuses

// -------------------------------------------------------------------

// TL_contacts_getContacts

// int32 hash = 1;
inline void TL_contacts_getContacts::clear_hash() {
  hash_ = 0;
}
inline ::google::protobuf::int32 TL_contacts_getContacts::hash() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_contacts_getContacts.hash)
  return hash_;
}
inline void TL_contacts_getContacts::set_hash(::google::protobuf::int32 value) {
  
  hash_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_contacts_getContacts.hash)
}

// -------------------------------------------------------------------

// TL_contacts_importContacts

// repeated .mtproto.InputContact contacts = 1;
inline int TL_contacts_importContacts::contacts_size() const {
  return contacts_.size();
}
inline void TL_contacts_importContacts::clear_contacts() {
  contacts_.Clear();
}
inline const ::mtproto::InputContact& TL_contacts_importContacts::contacts(int index) const {
  // @@protoc_insertion_point(field_get:mtproto.TL_contacts_importContacts.contacts)
  return contacts_.Get(index);
}
inline ::mtproto::InputContact* TL_contacts_importContacts::mutable_contacts(int index) {
  // @@protoc_insertion_point(field_mutable:mtproto.TL_contacts_importContacts.contacts)
  return contacts_.Mutable(index);
}
inline ::mtproto::InputContact* TL_contacts_importContacts::add_contacts() {
  // @@protoc_insertion_point(field_add:mtproto.TL_contacts_importContacts.contacts)
  return contacts_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::mtproto::InputContact >*
TL_contacts_importContacts::mutable_contacts() {
  // @@protoc_insertion_point(field_mutable_list:mtproto.TL_contacts_importContacts.contacts)
  return &contacts_;
}
inline const ::google::protobuf::RepeatedPtrField< ::mtproto::InputContact >&
TL_contacts_importContacts::contacts() const {
  // @@protoc_insertion_point(field_list:mtproto.TL_contacts_importContacts.contacts)
  return contacts_;
}

// -------------------------------------------------------------------

// TL_contacts_deleteContact

// .mtproto.InputUser id = 1;
inline bool TL_contacts_deleteContact::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline void TL_contacts_deleteContact::clear_id() {
  if (GetArenaNoVirtual() == NULL && id_ != NULL) delete id_;
  id_ = NULL;
}
inline const ::mtproto::InputUser& TL_contacts_deleteContact::id() const {
  const ::mtproto::InputUser* p = id_;
  // @@protoc_insertion_point(field_get:mtproto.TL_contacts_deleteContact.id)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::InputUser*>(
      &::mtproto::_InputUser_default_instance_);
}
inline ::mtproto::InputUser* TL_contacts_deleteContact::mutable_id() {
  
  if (id_ == NULL) {
    id_ = new ::mtproto::InputUser;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_contacts_deleteContact.id)
  return id_;
}
inline ::mtproto::InputUser* TL_contacts_deleteContact::release_id() {
  // @@protoc_insertion_point(field_release:mtproto.TL_contacts_deleteContact.id)
  
  ::mtproto::InputUser* temp = id_;
  id_ = NULL;
  return temp;
}
inline void TL_contacts_deleteContact::set_allocated_id(::mtproto::InputUser* id) {
  delete id_;
  id_ = id;
  if (id) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_contacts_deleteContact.id)
}

// -------------------------------------------------------------------

// TL_contacts_deleteContacts

// repeated .mtproto.InputUser id = 1;
inline int TL_contacts_deleteContacts::id_size() const {
  return id_.size();
}
inline void TL_contacts_deleteContacts::clear_id() {
  id_.Clear();
}
inline const ::mtproto::InputUser& TL_contacts_deleteContacts::id(int index) const {
  // @@protoc_insertion_point(field_get:mtproto.TL_contacts_deleteContacts.id)
  return id_.Get(index);
}
inline ::mtproto::InputUser* TL_contacts_deleteContacts::mutable_id(int index) {
  // @@protoc_insertion_point(field_mutable:mtproto.TL_contacts_deleteContacts.id)
  return id_.Mutable(index);
}
inline ::mtproto::InputUser* TL_contacts_deleteContacts::add_id() {
  // @@protoc_insertion_point(field_add:mtproto.TL_contacts_deleteContacts.id)
  return id_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::mtproto::InputUser >*
TL_contacts_deleteContacts::mutable_id() {
  // @@protoc_insertion_point(field_mutable_list:mtproto.TL_contacts_deleteContacts.id)
  return &id_;
}
inline const ::google::protobuf::RepeatedPtrField< ::mtproto::InputUser >&
TL_contacts_deleteContacts::id() const {
  // @@protoc_insertion_point(field_list:mtproto.TL_contacts_deleteContacts.id)
  return id_;
}

// -------------------------------------------------------------------

// TL_contacts_block

// .mtproto.InputUser id = 1;
inline bool TL_contacts_block::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline void TL_contacts_block::clear_id() {
  if (GetArenaNoVirtual() == NULL && id_ != NULL) delete id_;
  id_ = NULL;
}
inline const ::mtproto::InputUser& TL_contacts_block::id() const {
  const ::mtproto::InputUser* p = id_;
  // @@protoc_insertion_point(field_get:mtproto.TL_contacts_block.id)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::InputUser*>(
      &::mtproto::_InputUser_default_instance_);
}
inline ::mtproto::InputUser* TL_contacts_block::mutable_id() {
  
  if (id_ == NULL) {
    id_ = new ::mtproto::InputUser;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_contacts_block.id)
  return id_;
}
inline ::mtproto::InputUser* TL_contacts_block::release_id() {
  // @@protoc_insertion_point(field_release:mtproto.TL_contacts_block.id)
  
  ::mtproto::InputUser* temp = id_;
  id_ = NULL;
  return temp;
}
inline void TL_contacts_block::set_allocated_id(::mtproto::InputUser* id) {
  delete id_;
  id_ = id;
  if (id) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_contacts_block.id)
}

// -------------------------------------------------------------------

// TL_contacts_unblock

// .mtproto.InputUser id = 1;
inline bool TL_contacts_unblock::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline void TL_contacts_unblock::clear_id() {
  if (GetArenaNoVirtual() == NULL && id_ != NULL) delete id_;
  id_ = NULL;
}
inline const ::mtproto::InputUser& TL_contacts_unblock::id() const {
  const ::mtproto::InputUser* p = id_;
  // @@protoc_insertion_point(field_get:mtproto.TL_contacts_unblock.id)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::InputUser*>(
      &::mtproto::_InputUser_default_instance_);
}
inline ::mtproto::InputUser* TL_contacts_unblock::mutable_id() {
  
  if (id_ == NULL) {
    id_ = new ::mtproto::InputUser;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_contacts_unblock.id)
  return id_;
}
inline ::mtproto::InputUser* TL_contacts_unblock::release_id() {
  // @@protoc_insertion_point(field_release:mtproto.TL_contacts_unblock.id)
  
  ::mtproto::InputUser* temp = id_;
  id_ = NULL;
  return temp;
}
inline void TL_contacts_unblock::set_allocated_id(::mtproto::InputUser* id) {
  delete id_;
  id_ = id;
  if (id) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_contacts_unblock.id)
}

// -------------------------------------------------------------------

// TL_contacts_getBlocked

// int32 offset = 1;
inline void TL_contacts_getBlocked::clear_offset() {
  offset_ = 0;
}
inline ::google::protobuf::int32 TL_contacts_getBlocked::offset() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_contacts_getBlocked.offset)
  return offset_;
}
inline void TL_contacts_getBlocked::set_offset(::google::protobuf::int32 value) {
  
  offset_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_contacts_getBlocked.offset)
}

// int32 limit = 2;
inline void TL_contacts_getBlocked::clear_limit() {
  limit_ = 0;
}
inline ::google::protobuf::int32 TL_contacts_getBlocked::limit() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_contacts_getBlocked.limit)
  return limit_;
}
inline void TL_contacts_getBlocked::set_limit(::google::protobuf::int32 value) {
  
  limit_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_contacts_getBlocked.limit)
}

// -------------------------------------------------------------------

// TL_contacts_exportCard

// -------------------------------------------------------------------

// TL_contacts_importCard

// repeated int32 export_card = 1;
inline int TL_contacts_importCard::export_card_size() const {
  return export_card_.size();
}
inline void TL_contacts_importCard::clear_export_card() {
  export_card_.Clear();
}
inline ::google::protobuf::int32 TL_contacts_importCard::export_card(int index) const {
  // @@protoc_insertion_point(field_get:mtproto.TL_contacts_importCard.export_card)
  return export_card_.Get(index);
}
inline void TL_contacts_importCard::set_export_card(int index, ::google::protobuf::int32 value) {
  export_card_.Set(index, value);
  // @@protoc_insertion_point(field_set:mtproto.TL_contacts_importCard.export_card)
}
inline void TL_contacts_importCard::add_export_card(::google::protobuf::int32 value) {
  export_card_.Add(value);
  // @@protoc_insertion_point(field_add:mtproto.TL_contacts_importCard.export_card)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
TL_contacts_importCard::export_card() const {
  // @@protoc_insertion_point(field_list:mtproto.TL_contacts_importCard.export_card)
  return export_card_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
TL_contacts_importCard::mutable_export_card() {
  // @@protoc_insertion_point(field_mutable_list:mtproto.TL_contacts_importCard.export_card)
  return &export_card_;
}

// -------------------------------------------------------------------

// TL_contacts_search

// string q = 1;
inline void TL_contacts_search::clear_q() {
  q_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& TL_contacts_search::q() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_contacts_search.q)
  return q_.GetNoArena();
}
inline void TL_contacts_search::set_q(const ::std::string& value) {
  
  q_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtproto.TL_contacts_search.q)
}
#if LANG_CXX11
inline void TL_contacts_search::set_q(::std::string&& value) {
  
  q_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mtproto.TL_contacts_search.q)
}
#endif
inline void TL_contacts_search::set_q(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  q_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtproto.TL_contacts_search.q)
}
inline void TL_contacts_search::set_q(const char* value, size_t size) {
  
  q_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtproto.TL_contacts_search.q)
}
inline ::std::string* TL_contacts_search::mutable_q() {
  
  // @@protoc_insertion_point(field_mutable:mtproto.TL_contacts_search.q)
  return q_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TL_contacts_search::release_q() {
  // @@protoc_insertion_point(field_release:mtproto.TL_contacts_search.q)
  
  return q_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TL_contacts_search::set_allocated_q(::std::string* q) {
  if (q != NULL) {
    
  } else {
    
  }
  q_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), q);
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_contacts_search.q)
}

// int32 limit = 2;
inline void TL_contacts_search::clear_limit() {
  limit_ = 0;
}
inline ::google::protobuf::int32 TL_contacts_search::limit() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_contacts_search.limit)
  return limit_;
}
inline void TL_contacts_search::set_limit(::google::protobuf::int32 value) {
  
  limit_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_contacts_search.limit)
}

// -------------------------------------------------------------------

// TL_contacts_resolveUsername

// string username = 1;
inline void TL_contacts_resolveUsername::clear_username() {
  username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& TL_contacts_resolveUsername::username() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_contacts_resolveUsername.username)
  return username_.GetNoArena();
}
inline void TL_contacts_resolveUsername::set_username(const ::std::string& value) {
  
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtproto.TL_contacts_resolveUsername.username)
}
#if LANG_CXX11
inline void TL_contacts_resolveUsername::set_username(::std::string&& value) {
  
  username_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mtproto.TL_contacts_resolveUsername.username)
}
#endif
inline void TL_contacts_resolveUsername::set_username(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtproto.TL_contacts_resolveUsername.username)
}
inline void TL_contacts_resolveUsername::set_username(const char* value, size_t size) {
  
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtproto.TL_contacts_resolveUsername.username)
}
inline ::std::string* TL_contacts_resolveUsername::mutable_username() {
  
  // @@protoc_insertion_point(field_mutable:mtproto.TL_contacts_resolveUsername.username)
  return username_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TL_contacts_resolveUsername::release_username() {
  // @@protoc_insertion_point(field_release:mtproto.TL_contacts_resolveUsername.username)
  
  return username_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TL_contacts_resolveUsername::set_allocated_username(::std::string* username) {
  if (username != NULL) {
    
  } else {
    
  }
  username_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), username);
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_contacts_resolveUsername.username)
}

// -------------------------------------------------------------------

// TL_contacts_getTopPeers

// bool correspondents = 2;
inline void TL_contacts_getTopPeers::clear_correspondents() {
  correspondents_ = false;
}
inline bool TL_contacts_getTopPeers::correspondents() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_contacts_getTopPeers.correspondents)
  return correspondents_;
}
inline void TL_contacts_getTopPeers::set_correspondents(bool value) {
  
  correspondents_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_contacts_getTopPeers.correspondents)
}

// bool bots_pm = 3;
inline void TL_contacts_getTopPeers::clear_bots_pm() {
  bots_pm_ = false;
}
inline bool TL_contacts_getTopPeers::bots_pm() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_contacts_getTopPeers.bots_pm)
  return bots_pm_;
}
inline void TL_contacts_getTopPeers::set_bots_pm(bool value) {
  
  bots_pm_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_contacts_getTopPeers.bots_pm)
}

// bool bots_inline = 4;
inline void TL_contacts_getTopPeers::clear_bots_inline() {
  bots_inline_ = false;
}
inline bool TL_contacts_getTopPeers::bots_inline() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_contacts_getTopPeers.bots_inline)
  return bots_inline_;
}
inline void TL_contacts_getTopPeers::set_bots_inline(bool value) {
  
  bots_inline_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_contacts_getTopPeers.bots_inline)
}

// bool phone_calls = 5;
inline void TL_contacts_getTopPeers::clear_phone_calls() {
  phone_calls_ = false;
}
inline bool TL_contacts_getTopPeers::phone_calls() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_contacts_getTopPeers.phone_calls)
  return phone_calls_;
}
inline void TL_contacts_getTopPeers::set_phone_calls(bool value) {
  
  phone_calls_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_contacts_getTopPeers.phone_calls)
}

// bool groups = 6;
inline void TL_contacts_getTopPeers::clear_groups() {
  groups_ = false;
}
inline bool TL_contacts_getTopPeers::groups() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_contacts_getTopPeers.groups)
  return groups_;
}
inline void TL_contacts_getTopPeers::set_groups(bool value) {
  
  groups_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_contacts_getTopPeers.groups)
}

// bool channels = 7;
inline void TL_contacts_getTopPeers::clear_channels() {
  channels_ = false;
}
inline bool TL_contacts_getTopPeers::channels() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_contacts_getTopPeers.channels)
  return channels_;
}
inline void TL_contacts_getTopPeers::set_channels(bool value) {
  
  channels_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_contacts_getTopPeers.channels)
}

// int32 offset = 8;
inline void TL_contacts_getTopPeers::clear_offset() {
  offset_ = 0;
}
inline ::google::protobuf::int32 TL_contacts_getTopPeers::offset() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_contacts_getTopPeers.offset)
  return offset_;
}
inline void TL_contacts_getTopPeers::set_offset(::google::protobuf::int32 value) {
  
  offset_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_contacts_getTopPeers.offset)
}

// int32 limit = 9;
inline void TL_contacts_getTopPeers::clear_limit() {
  limit_ = 0;
}
inline ::google::protobuf::int32 TL_contacts_getTopPeers::limit() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_contacts_getTopPeers.limit)
  return limit_;
}
inline void TL_contacts_getTopPeers::set_limit(::google::protobuf::int32 value) {
  
  limit_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_contacts_getTopPeers.limit)
}

// int32 hash = 10;
inline void TL_contacts_getTopPeers::clear_hash() {
  hash_ = 0;
}
inline ::google::protobuf::int32 TL_contacts_getTopPeers::hash() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_contacts_getTopPeers.hash)
  return hash_;
}
inline void TL_contacts_getTopPeers::set_hash(::google::protobuf::int32 value) {
  
  hash_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_contacts_getTopPeers.hash)
}

// -------------------------------------------------------------------

// TL_contacts_resetTopPeerRating

// .mtproto.TopPeerCategory category = 1;
inline bool TL_contacts_resetTopPeerRating::has_category() const {
  return this != internal_default_instance() && category_ != NULL;
}
inline void TL_contacts_resetTopPeerRating::clear_category() {
  if (GetArenaNoVirtual() == NULL && category_ != NULL) delete category_;
  category_ = NULL;
}
inline const ::mtproto::TopPeerCategory& TL_contacts_resetTopPeerRating::category() const {
  const ::mtproto::TopPeerCategory* p = category_;
  // @@protoc_insertion_point(field_get:mtproto.TL_contacts_resetTopPeerRating.category)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::TopPeerCategory*>(
      &::mtproto::_TopPeerCategory_default_instance_);
}
inline ::mtproto::TopPeerCategory* TL_contacts_resetTopPeerRating::mutable_category() {
  
  if (category_ == NULL) {
    category_ = new ::mtproto::TopPeerCategory;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_contacts_resetTopPeerRating.category)
  return category_;
}
inline ::mtproto::TopPeerCategory* TL_contacts_resetTopPeerRating::release_category() {
  // @@protoc_insertion_point(field_release:mtproto.TL_contacts_resetTopPeerRating.category)
  
  ::mtproto::TopPeerCategory* temp = category_;
  category_ = NULL;
  return temp;
}
inline void TL_contacts_resetTopPeerRating::set_allocated_category(::mtproto::TopPeerCategory* category) {
  delete category_;
  category_ = category;
  if (category) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_contacts_resetTopPeerRating.category)
}

// .mtproto.InputPeer peer = 2;
inline bool TL_contacts_resetTopPeerRating::has_peer() const {
  return this != internal_default_instance() && peer_ != NULL;
}
inline void TL_contacts_resetTopPeerRating::clear_peer() {
  if (GetArenaNoVirtual() == NULL && peer_ != NULL) delete peer_;
  peer_ = NULL;
}
inline const ::mtproto::InputPeer& TL_contacts_resetTopPeerRating::peer() const {
  const ::mtproto::InputPeer* p = peer_;
  // @@protoc_insertion_point(field_get:mtproto.TL_contacts_resetTopPeerRating.peer)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::InputPeer*>(
      &::mtproto::_InputPeer_default_instance_);
}
inline ::mtproto::InputPeer* TL_contacts_resetTopPeerRating::mutable_peer() {
  
  if (peer_ == NULL) {
    peer_ = new ::mtproto::InputPeer;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_contacts_resetTopPeerRating.peer)
  return peer_;
}
inline ::mtproto::InputPeer* TL_contacts_resetTopPeerRating::release_peer() {
  // @@protoc_insertion_point(field_release:mtproto.TL_contacts_resetTopPeerRating.peer)
  
  ::mtproto::InputPeer* temp = peer_;
  peer_ = NULL;
  return temp;
}
inline void TL_contacts_resetTopPeerRating::set_allocated_peer(::mtproto::InputPeer* peer) {
  delete peer_;
  peer_ = peer;
  if (peer) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_contacts_resetTopPeerRating.peer)
}

// -------------------------------------------------------------------

// TL_contacts_resetSaved

// -------------------------------------------------------------------

// TL_contacts_getSaved

// -------------------------------------------------------------------

// TL_contacts_toggleTopPeers

// .mtproto.Bool enabled = 1;
inline bool TL_contacts_toggleTopPeers::has_enabled() const {
  return this != internal_default_instance() && enabled_ != NULL;
}
inline void TL_contacts_toggleTopPeers::clear_enabled() {
  if (GetArenaNoVirtual() == NULL && enabled_ != NULL) delete enabled_;
  enabled_ = NULL;
}
inline const ::mtproto::Bool& TL_contacts_toggleTopPeers::enabled() const {
  const ::mtproto::Bool* p = enabled_;
  // @@protoc_insertion_point(field_get:mtproto.TL_contacts_toggleTopPeers.enabled)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::Bool*>(
      &::mtproto::_Bool_default_instance_);
}
inline ::mtproto::Bool* TL_contacts_toggleTopPeers::mutable_enabled() {
  
  if (enabled_ == NULL) {
    enabled_ = new ::mtproto::Bool;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_contacts_toggleTopPeers.enabled)
  return enabled_;
}
inline ::mtproto::Bool* TL_contacts_toggleTopPeers::release_enabled() {
  // @@protoc_insertion_point(field_release:mtproto.TL_contacts_toggleTopPeers.enabled)
  
  ::mtproto::Bool* temp = enabled_;
  enabled_ = NULL;
  return temp;
}
inline void TL_contacts_toggleTopPeers::set_allocated_enabled(::mtproto::Bool* enabled) {
  delete enabled_;
  enabled_ = enabled;
  if (enabled) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_contacts_toggleTopPeers.enabled)
}

// -------------------------------------------------------------------

// TL_messages_getMessages

// repeated .mtproto.InputMessage id = 1;
inline int TL_messages_getMessages::id_size() const {
  return id_.size();
}
inline void TL_messages_getMessages::clear_id() {
  id_.Clear();
}
inline const ::mtproto::InputMessage& TL_messages_getMessages::id(int index) const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_getMessages.id)
  return id_.Get(index);
}
inline ::mtproto::InputMessage* TL_messages_getMessages::mutable_id(int index) {
  // @@protoc_insertion_point(field_mutable:mtproto.TL_messages_getMessages.id)
  return id_.Mutable(index);
}
inline ::mtproto::InputMessage* TL_messages_getMessages::add_id() {
  // @@protoc_insertion_point(field_add:mtproto.TL_messages_getMessages.id)
  return id_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::mtproto::InputMessage >*
TL_messages_getMessages::mutable_id() {
  // @@protoc_insertion_point(field_mutable_list:mtproto.TL_messages_getMessages.id)
  return &id_;
}
inline const ::google::protobuf::RepeatedPtrField< ::mtproto::InputMessage >&
TL_messages_getMessages::id() const {
  // @@protoc_insertion_point(field_list:mtproto.TL_messages_getMessages.id)
  return id_;
}

// -------------------------------------------------------------------

// TL_messages_getDialogs

// bool exclude_pinned = 2;
inline void TL_messages_getDialogs::clear_exclude_pinned() {
  exclude_pinned_ = false;
}
inline bool TL_messages_getDialogs::exclude_pinned() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_getDialogs.exclude_pinned)
  return exclude_pinned_;
}
inline void TL_messages_getDialogs::set_exclude_pinned(bool value) {
  
  exclude_pinned_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_getDialogs.exclude_pinned)
}

// int32 offset_date = 3;
inline void TL_messages_getDialogs::clear_offset_date() {
  offset_date_ = 0;
}
inline ::google::protobuf::int32 TL_messages_getDialogs::offset_date() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_getDialogs.offset_date)
  return offset_date_;
}
inline void TL_messages_getDialogs::set_offset_date(::google::protobuf::int32 value) {
  
  offset_date_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_getDialogs.offset_date)
}

// int32 offset_id = 4;
inline void TL_messages_getDialogs::clear_offset_id() {
  offset_id_ = 0;
}
inline ::google::protobuf::int32 TL_messages_getDialogs::offset_id() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_getDialogs.offset_id)
  return offset_id_;
}
inline void TL_messages_getDialogs::set_offset_id(::google::protobuf::int32 value) {
  
  offset_id_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_getDialogs.offset_id)
}

// .mtproto.InputPeer offset_peer = 5;
inline bool TL_messages_getDialogs::has_offset_peer() const {
  return this != internal_default_instance() && offset_peer_ != NULL;
}
inline void TL_messages_getDialogs::clear_offset_peer() {
  if (GetArenaNoVirtual() == NULL && offset_peer_ != NULL) delete offset_peer_;
  offset_peer_ = NULL;
}
inline const ::mtproto::InputPeer& TL_messages_getDialogs::offset_peer() const {
  const ::mtproto::InputPeer* p = offset_peer_;
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_getDialogs.offset_peer)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::InputPeer*>(
      &::mtproto::_InputPeer_default_instance_);
}
inline ::mtproto::InputPeer* TL_messages_getDialogs::mutable_offset_peer() {
  
  if (offset_peer_ == NULL) {
    offset_peer_ = new ::mtproto::InputPeer;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_messages_getDialogs.offset_peer)
  return offset_peer_;
}
inline ::mtproto::InputPeer* TL_messages_getDialogs::release_offset_peer() {
  // @@protoc_insertion_point(field_release:mtproto.TL_messages_getDialogs.offset_peer)
  
  ::mtproto::InputPeer* temp = offset_peer_;
  offset_peer_ = NULL;
  return temp;
}
inline void TL_messages_getDialogs::set_allocated_offset_peer(::mtproto::InputPeer* offset_peer) {
  delete offset_peer_;
  offset_peer_ = offset_peer;
  if (offset_peer) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_messages_getDialogs.offset_peer)
}

// int32 limit = 6;
inline void TL_messages_getDialogs::clear_limit() {
  limit_ = 0;
}
inline ::google::protobuf::int32 TL_messages_getDialogs::limit() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_getDialogs.limit)
  return limit_;
}
inline void TL_messages_getDialogs::set_limit(::google::protobuf::int32 value) {
  
  limit_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_getDialogs.limit)
}

// int32 hash = 7;
inline void TL_messages_getDialogs::clear_hash() {
  hash_ = 0;
}
inline ::google::protobuf::int32 TL_messages_getDialogs::hash() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_getDialogs.hash)
  return hash_;
}
inline void TL_messages_getDialogs::set_hash(::google::protobuf::int32 value) {
  
  hash_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_getDialogs.hash)
}

// -------------------------------------------------------------------

// TL_messages_getHistory

// .mtproto.InputPeer peer = 1;
inline bool TL_messages_getHistory::has_peer() const {
  return this != internal_default_instance() && peer_ != NULL;
}
inline void TL_messages_getHistory::clear_peer() {
  if (GetArenaNoVirtual() == NULL && peer_ != NULL) delete peer_;
  peer_ = NULL;
}
inline const ::mtproto::InputPeer& TL_messages_getHistory::peer() const {
  const ::mtproto::InputPeer* p = peer_;
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_getHistory.peer)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::InputPeer*>(
      &::mtproto::_InputPeer_default_instance_);
}
inline ::mtproto::InputPeer* TL_messages_getHistory::mutable_peer() {
  
  if (peer_ == NULL) {
    peer_ = new ::mtproto::InputPeer;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_messages_getHistory.peer)
  return peer_;
}
inline ::mtproto::InputPeer* TL_messages_getHistory::release_peer() {
  // @@protoc_insertion_point(field_release:mtproto.TL_messages_getHistory.peer)
  
  ::mtproto::InputPeer* temp = peer_;
  peer_ = NULL;
  return temp;
}
inline void TL_messages_getHistory::set_allocated_peer(::mtproto::InputPeer* peer) {
  delete peer_;
  peer_ = peer;
  if (peer) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_messages_getHistory.peer)
}

// int32 offset_id = 2;
inline void TL_messages_getHistory::clear_offset_id() {
  offset_id_ = 0;
}
inline ::google::protobuf::int32 TL_messages_getHistory::offset_id() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_getHistory.offset_id)
  return offset_id_;
}
inline void TL_messages_getHistory::set_offset_id(::google::protobuf::int32 value) {
  
  offset_id_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_getHistory.offset_id)
}

// int32 offset_date = 3;
inline void TL_messages_getHistory::clear_offset_date() {
  offset_date_ = 0;
}
inline ::google::protobuf::int32 TL_messages_getHistory::offset_date() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_getHistory.offset_date)
  return offset_date_;
}
inline void TL_messages_getHistory::set_offset_date(::google::protobuf::int32 value) {
  
  offset_date_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_getHistory.offset_date)
}

// int32 add_offset = 4;
inline void TL_messages_getHistory::clear_add_offset() {
  add_offset_ = 0;
}
inline ::google::protobuf::int32 TL_messages_getHistory::add_offset() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_getHistory.add_offset)
  return add_offset_;
}
inline void TL_messages_getHistory::set_add_offset(::google::protobuf::int32 value) {
  
  add_offset_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_getHistory.add_offset)
}

// int32 limit = 5;
inline void TL_messages_getHistory::clear_limit() {
  limit_ = 0;
}
inline ::google::protobuf::int32 TL_messages_getHistory::limit() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_getHistory.limit)
  return limit_;
}
inline void TL_messages_getHistory::set_limit(::google::protobuf::int32 value) {
  
  limit_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_getHistory.limit)
}

// int32 max_id = 6;
inline void TL_messages_getHistory::clear_max_id() {
  max_id_ = 0;
}
inline ::google::protobuf::int32 TL_messages_getHistory::max_id() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_getHistory.max_id)
  return max_id_;
}
inline void TL_messages_getHistory::set_max_id(::google::protobuf::int32 value) {
  
  max_id_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_getHistory.max_id)
}

// int32 min_id = 7;
inline void TL_messages_getHistory::clear_min_id() {
  min_id_ = 0;
}
inline ::google::protobuf::int32 TL_messages_getHistory::min_id() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_getHistory.min_id)
  return min_id_;
}
inline void TL_messages_getHistory::set_min_id(::google::protobuf::int32 value) {
  
  min_id_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_getHistory.min_id)
}

// int32 hash = 8;
inline void TL_messages_getHistory::clear_hash() {
  hash_ = 0;
}
inline ::google::protobuf::int32 TL_messages_getHistory::hash() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_getHistory.hash)
  return hash_;
}
inline void TL_messages_getHistory::set_hash(::google::protobuf::int32 value) {
  
  hash_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_getHistory.hash)
}

// -------------------------------------------------------------------

// TL_messages_search

// .mtproto.InputPeer peer = 2;
inline bool TL_messages_search::has_peer() const {
  return this != internal_default_instance() && peer_ != NULL;
}
inline void TL_messages_search::clear_peer() {
  if (GetArenaNoVirtual() == NULL && peer_ != NULL) delete peer_;
  peer_ = NULL;
}
inline const ::mtproto::InputPeer& TL_messages_search::peer() const {
  const ::mtproto::InputPeer* p = peer_;
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_search.peer)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::InputPeer*>(
      &::mtproto::_InputPeer_default_instance_);
}
inline ::mtproto::InputPeer* TL_messages_search::mutable_peer() {
  
  if (peer_ == NULL) {
    peer_ = new ::mtproto::InputPeer;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_messages_search.peer)
  return peer_;
}
inline ::mtproto::InputPeer* TL_messages_search::release_peer() {
  // @@protoc_insertion_point(field_release:mtproto.TL_messages_search.peer)
  
  ::mtproto::InputPeer* temp = peer_;
  peer_ = NULL;
  return temp;
}
inline void TL_messages_search::set_allocated_peer(::mtproto::InputPeer* peer) {
  delete peer_;
  peer_ = peer;
  if (peer) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_messages_search.peer)
}

// string q = 3;
inline void TL_messages_search::clear_q() {
  q_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& TL_messages_search::q() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_search.q)
  return q_.GetNoArena();
}
inline void TL_messages_search::set_q(const ::std::string& value) {
  
  q_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_search.q)
}
#if LANG_CXX11
inline void TL_messages_search::set_q(::std::string&& value) {
  
  q_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mtproto.TL_messages_search.q)
}
#endif
inline void TL_messages_search::set_q(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  q_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtproto.TL_messages_search.q)
}
inline void TL_messages_search::set_q(const char* value, size_t size) {
  
  q_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtproto.TL_messages_search.q)
}
inline ::std::string* TL_messages_search::mutable_q() {
  
  // @@protoc_insertion_point(field_mutable:mtproto.TL_messages_search.q)
  return q_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TL_messages_search::release_q() {
  // @@protoc_insertion_point(field_release:mtproto.TL_messages_search.q)
  
  return q_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TL_messages_search::set_allocated_q(::std::string* q) {
  if (q != NULL) {
    
  } else {
    
  }
  q_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), q);
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_messages_search.q)
}

// .mtproto.InputUser from_id = 4;
inline bool TL_messages_search::has_from_id() const {
  return this != internal_default_instance() && from_id_ != NULL;
}
inline void TL_messages_search::clear_from_id() {
  if (GetArenaNoVirtual() == NULL && from_id_ != NULL) delete from_id_;
  from_id_ = NULL;
}
inline const ::mtproto::InputUser& TL_messages_search::from_id() const {
  const ::mtproto::InputUser* p = from_id_;
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_search.from_id)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::InputUser*>(
      &::mtproto::_InputUser_default_instance_);
}
inline ::mtproto::InputUser* TL_messages_search::mutable_from_id() {
  
  if (from_id_ == NULL) {
    from_id_ = new ::mtproto::InputUser;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_messages_search.from_id)
  return from_id_;
}
inline ::mtproto::InputUser* TL_messages_search::release_from_id() {
  // @@protoc_insertion_point(field_release:mtproto.TL_messages_search.from_id)
  
  ::mtproto::InputUser* temp = from_id_;
  from_id_ = NULL;
  return temp;
}
inline void TL_messages_search::set_allocated_from_id(::mtproto::InputUser* from_id) {
  delete from_id_;
  from_id_ = from_id;
  if (from_id) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_messages_search.from_id)
}

// .mtproto.MessagesFilter filter = 5;
inline bool TL_messages_search::has_filter() const {
  return this != internal_default_instance() && filter_ != NULL;
}
inline void TL_messages_search::clear_filter() {
  if (GetArenaNoVirtual() == NULL && filter_ != NULL) delete filter_;
  filter_ = NULL;
}
inline const ::mtproto::MessagesFilter& TL_messages_search::filter() const {
  const ::mtproto::MessagesFilter* p = filter_;
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_search.filter)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::MessagesFilter*>(
      &::mtproto::_MessagesFilter_default_instance_);
}
inline ::mtproto::MessagesFilter* TL_messages_search::mutable_filter() {
  
  if (filter_ == NULL) {
    filter_ = new ::mtproto::MessagesFilter;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_messages_search.filter)
  return filter_;
}
inline ::mtproto::MessagesFilter* TL_messages_search::release_filter() {
  // @@protoc_insertion_point(field_release:mtproto.TL_messages_search.filter)
  
  ::mtproto::MessagesFilter* temp = filter_;
  filter_ = NULL;
  return temp;
}
inline void TL_messages_search::set_allocated_filter(::mtproto::MessagesFilter* filter) {
  delete filter_;
  filter_ = filter;
  if (filter) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_messages_search.filter)
}

// int32 min_date = 6;
inline void TL_messages_search::clear_min_date() {
  min_date_ = 0;
}
inline ::google::protobuf::int32 TL_messages_search::min_date() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_search.min_date)
  return min_date_;
}
inline void TL_messages_search::set_min_date(::google::protobuf::int32 value) {
  
  min_date_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_search.min_date)
}

// int32 max_date = 7;
inline void TL_messages_search::clear_max_date() {
  max_date_ = 0;
}
inline ::google::protobuf::int32 TL_messages_search::max_date() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_search.max_date)
  return max_date_;
}
inline void TL_messages_search::set_max_date(::google::protobuf::int32 value) {
  
  max_date_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_search.max_date)
}

// int32 offset_id = 8;
inline void TL_messages_search::clear_offset_id() {
  offset_id_ = 0;
}
inline ::google::protobuf::int32 TL_messages_search::offset_id() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_search.offset_id)
  return offset_id_;
}
inline void TL_messages_search::set_offset_id(::google::protobuf::int32 value) {
  
  offset_id_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_search.offset_id)
}

// int32 add_offset = 9;
inline void TL_messages_search::clear_add_offset() {
  add_offset_ = 0;
}
inline ::google::protobuf::int32 TL_messages_search::add_offset() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_search.add_offset)
  return add_offset_;
}
inline void TL_messages_search::set_add_offset(::google::protobuf::int32 value) {
  
  add_offset_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_search.add_offset)
}

// int32 limit = 10;
inline void TL_messages_search::clear_limit() {
  limit_ = 0;
}
inline ::google::protobuf::int32 TL_messages_search::limit() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_search.limit)
  return limit_;
}
inline void TL_messages_search::set_limit(::google::protobuf::int32 value) {
  
  limit_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_search.limit)
}

// int32 max_id = 11;
inline void TL_messages_search::clear_max_id() {
  max_id_ = 0;
}
inline ::google::protobuf::int32 TL_messages_search::max_id() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_search.max_id)
  return max_id_;
}
inline void TL_messages_search::set_max_id(::google::protobuf::int32 value) {
  
  max_id_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_search.max_id)
}

// int32 min_id = 12;
inline void TL_messages_search::clear_min_id() {
  min_id_ = 0;
}
inline ::google::protobuf::int32 TL_messages_search::min_id() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_search.min_id)
  return min_id_;
}
inline void TL_messages_search::set_min_id(::google::protobuf::int32 value) {
  
  min_id_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_search.min_id)
}

// int32 hash = 13;
inline void TL_messages_search::clear_hash() {
  hash_ = 0;
}
inline ::google::protobuf::int32 TL_messages_search::hash() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_search.hash)
  return hash_;
}
inline void TL_messages_search::set_hash(::google::protobuf::int32 value) {
  
  hash_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_search.hash)
}

// -------------------------------------------------------------------

// TL_messages_readHistory

// .mtproto.InputPeer peer = 1;
inline bool TL_messages_readHistory::has_peer() const {
  return this != internal_default_instance() && peer_ != NULL;
}
inline void TL_messages_readHistory::clear_peer() {
  if (GetArenaNoVirtual() == NULL && peer_ != NULL) delete peer_;
  peer_ = NULL;
}
inline const ::mtproto::InputPeer& TL_messages_readHistory::peer() const {
  const ::mtproto::InputPeer* p = peer_;
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_readHistory.peer)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::InputPeer*>(
      &::mtproto::_InputPeer_default_instance_);
}
inline ::mtproto::InputPeer* TL_messages_readHistory::mutable_peer() {
  
  if (peer_ == NULL) {
    peer_ = new ::mtproto::InputPeer;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_messages_readHistory.peer)
  return peer_;
}
inline ::mtproto::InputPeer* TL_messages_readHistory::release_peer() {
  // @@protoc_insertion_point(field_release:mtproto.TL_messages_readHistory.peer)
  
  ::mtproto::InputPeer* temp = peer_;
  peer_ = NULL;
  return temp;
}
inline void TL_messages_readHistory::set_allocated_peer(::mtproto::InputPeer* peer) {
  delete peer_;
  peer_ = peer;
  if (peer) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_messages_readHistory.peer)
}

// int32 max_id = 2;
inline void TL_messages_readHistory::clear_max_id() {
  max_id_ = 0;
}
inline ::google::protobuf::int32 TL_messages_readHistory::max_id() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_readHistory.max_id)
  return max_id_;
}
inline void TL_messages_readHistory::set_max_id(::google::protobuf::int32 value) {
  
  max_id_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_readHistory.max_id)
}

// -------------------------------------------------------------------

// TL_messages_deleteHistory

// bool just_clear = 2;
inline void TL_messages_deleteHistory::clear_just_clear() {
  just_clear_ = false;
}
inline bool TL_messages_deleteHistory::just_clear() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_deleteHistory.just_clear)
  return just_clear_;
}
inline void TL_messages_deleteHistory::set_just_clear(bool value) {
  
  just_clear_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_deleteHistory.just_clear)
}

// .mtproto.InputPeer peer = 3;
inline bool TL_messages_deleteHistory::has_peer() const {
  return this != internal_default_instance() && peer_ != NULL;
}
inline void TL_messages_deleteHistory::clear_peer() {
  if (GetArenaNoVirtual() == NULL && peer_ != NULL) delete peer_;
  peer_ = NULL;
}
inline const ::mtproto::InputPeer& TL_messages_deleteHistory::peer() const {
  const ::mtproto::InputPeer* p = peer_;
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_deleteHistory.peer)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::InputPeer*>(
      &::mtproto::_InputPeer_default_instance_);
}
inline ::mtproto::InputPeer* TL_messages_deleteHistory::mutable_peer() {
  
  if (peer_ == NULL) {
    peer_ = new ::mtproto::InputPeer;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_messages_deleteHistory.peer)
  return peer_;
}
inline ::mtproto::InputPeer* TL_messages_deleteHistory::release_peer() {
  // @@protoc_insertion_point(field_release:mtproto.TL_messages_deleteHistory.peer)
  
  ::mtproto::InputPeer* temp = peer_;
  peer_ = NULL;
  return temp;
}
inline void TL_messages_deleteHistory::set_allocated_peer(::mtproto::InputPeer* peer) {
  delete peer_;
  peer_ = peer;
  if (peer) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_messages_deleteHistory.peer)
}

// int32 max_id = 4;
inline void TL_messages_deleteHistory::clear_max_id() {
  max_id_ = 0;
}
inline ::google::protobuf::int32 TL_messages_deleteHistory::max_id() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_deleteHistory.max_id)
  return max_id_;
}
inline void TL_messages_deleteHistory::set_max_id(::google::protobuf::int32 value) {
  
  max_id_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_deleteHistory.max_id)
}

// -------------------------------------------------------------------

// TL_messages_deleteMessages

// bool revoke = 2;
inline void TL_messages_deleteMessages::clear_revoke() {
  revoke_ = false;
}
inline bool TL_messages_deleteMessages::revoke() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_deleteMessages.revoke)
  return revoke_;
}
inline void TL_messages_deleteMessages::set_revoke(bool value) {
  
  revoke_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_deleteMessages.revoke)
}

// repeated int32 id = 3;
inline int TL_messages_deleteMessages::id_size() const {
  return id_.size();
}
inline void TL_messages_deleteMessages::clear_id() {
  id_.Clear();
}
inline ::google::protobuf::int32 TL_messages_deleteMessages::id(int index) const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_deleteMessages.id)
  return id_.Get(index);
}
inline void TL_messages_deleteMessages::set_id(int index, ::google::protobuf::int32 value) {
  id_.Set(index, value);
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_deleteMessages.id)
}
inline void TL_messages_deleteMessages::add_id(::google::protobuf::int32 value) {
  id_.Add(value);
  // @@protoc_insertion_point(field_add:mtproto.TL_messages_deleteMessages.id)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
TL_messages_deleteMessages::id() const {
  // @@protoc_insertion_point(field_list:mtproto.TL_messages_deleteMessages.id)
  return id_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
TL_messages_deleteMessages::mutable_id() {
  // @@protoc_insertion_point(field_mutable_list:mtproto.TL_messages_deleteMessages.id)
  return &id_;
}

// -------------------------------------------------------------------

// TL_messages_receivedMessages

// int32 max_id = 1;
inline void TL_messages_receivedMessages::clear_max_id() {
  max_id_ = 0;
}
inline ::google::protobuf::int32 TL_messages_receivedMessages::max_id() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_receivedMessages.max_id)
  return max_id_;
}
inline void TL_messages_receivedMessages::set_max_id(::google::protobuf::int32 value) {
  
  max_id_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_receivedMessages.max_id)
}

// -------------------------------------------------------------------

// TL_messages_setTyping

// .mtproto.InputPeer peer = 1;
inline bool TL_messages_setTyping::has_peer() const {
  return this != internal_default_instance() && peer_ != NULL;
}
inline void TL_messages_setTyping::clear_peer() {
  if (GetArenaNoVirtual() == NULL && peer_ != NULL) delete peer_;
  peer_ = NULL;
}
inline const ::mtproto::InputPeer& TL_messages_setTyping::peer() const {
  const ::mtproto::InputPeer* p = peer_;
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_setTyping.peer)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::InputPeer*>(
      &::mtproto::_InputPeer_default_instance_);
}
inline ::mtproto::InputPeer* TL_messages_setTyping::mutable_peer() {
  
  if (peer_ == NULL) {
    peer_ = new ::mtproto::InputPeer;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_messages_setTyping.peer)
  return peer_;
}
inline ::mtproto::InputPeer* TL_messages_setTyping::release_peer() {
  // @@protoc_insertion_point(field_release:mtproto.TL_messages_setTyping.peer)
  
  ::mtproto::InputPeer* temp = peer_;
  peer_ = NULL;
  return temp;
}
inline void TL_messages_setTyping::set_allocated_peer(::mtproto::InputPeer* peer) {
  delete peer_;
  peer_ = peer;
  if (peer) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_messages_setTyping.peer)
}

// .mtproto.SendMessageAction action = 2;
inline bool TL_messages_setTyping::has_action() const {
  return this != internal_default_instance() && action_ != NULL;
}
inline void TL_messages_setTyping::clear_action() {
  if (GetArenaNoVirtual() == NULL && action_ != NULL) delete action_;
  action_ = NULL;
}
inline const ::mtproto::SendMessageAction& TL_messages_setTyping::action() const {
  const ::mtproto::SendMessageAction* p = action_;
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_setTyping.action)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::SendMessageAction*>(
      &::mtproto::_SendMessageAction_default_instance_);
}
inline ::mtproto::SendMessageAction* TL_messages_setTyping::mutable_action() {
  
  if (action_ == NULL) {
    action_ = new ::mtproto::SendMessageAction;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_messages_setTyping.action)
  return action_;
}
inline ::mtproto::SendMessageAction* TL_messages_setTyping::release_action() {
  // @@protoc_insertion_point(field_release:mtproto.TL_messages_setTyping.action)
  
  ::mtproto::SendMessageAction* temp = action_;
  action_ = NULL;
  return temp;
}
inline void TL_messages_setTyping::set_allocated_action(::mtproto::SendMessageAction* action) {
  delete action_;
  action_ = action;
  if (action) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_messages_setTyping.action)
}

// -------------------------------------------------------------------

// TL_messages_sendMessage

// bool no_webpage = 2;
inline void TL_messages_sendMessage::clear_no_webpage() {
  no_webpage_ = false;
}
inline bool TL_messages_sendMessage::no_webpage() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_sendMessage.no_webpage)
  return no_webpage_;
}
inline void TL_messages_sendMessage::set_no_webpage(bool value) {
  
  no_webpage_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_sendMessage.no_webpage)
}

// bool silent = 3;
inline void TL_messages_sendMessage::clear_silent() {
  silent_ = false;
}
inline bool TL_messages_sendMessage::silent() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_sendMessage.silent)
  return silent_;
}
inline void TL_messages_sendMessage::set_silent(bool value) {
  
  silent_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_sendMessage.silent)
}

// bool background = 4;
inline void TL_messages_sendMessage::clear_background() {
  background_ = false;
}
inline bool TL_messages_sendMessage::background() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_sendMessage.background)
  return background_;
}
inline void TL_messages_sendMessage::set_background(bool value) {
  
  background_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_sendMessage.background)
}

// bool clear_draft = 5;
inline void TL_messages_sendMessage::clear_clear_draft() {
  clear_draft_ = false;
}
inline bool TL_messages_sendMessage::clear_draft() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_sendMessage.clear_draft)
  return clear_draft_;
}
inline void TL_messages_sendMessage::set_clear_draft(bool value) {
  
  clear_draft_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_sendMessage.clear_draft)
}

// .mtproto.InputPeer peer = 6;
inline bool TL_messages_sendMessage::has_peer() const {
  return this != internal_default_instance() && peer_ != NULL;
}
inline void TL_messages_sendMessage::clear_peer() {
  if (GetArenaNoVirtual() == NULL && peer_ != NULL) delete peer_;
  peer_ = NULL;
}
inline const ::mtproto::InputPeer& TL_messages_sendMessage::peer() const {
  const ::mtproto::InputPeer* p = peer_;
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_sendMessage.peer)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::InputPeer*>(
      &::mtproto::_InputPeer_default_instance_);
}
inline ::mtproto::InputPeer* TL_messages_sendMessage::mutable_peer() {
  
  if (peer_ == NULL) {
    peer_ = new ::mtproto::InputPeer;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_messages_sendMessage.peer)
  return peer_;
}
inline ::mtproto::InputPeer* TL_messages_sendMessage::release_peer() {
  // @@protoc_insertion_point(field_release:mtproto.TL_messages_sendMessage.peer)
  
  ::mtproto::InputPeer* temp = peer_;
  peer_ = NULL;
  return temp;
}
inline void TL_messages_sendMessage::set_allocated_peer(::mtproto::InputPeer* peer) {
  delete peer_;
  peer_ = peer;
  if (peer) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_messages_sendMessage.peer)
}

// int32 reply_to_msg_id = 7;
inline void TL_messages_sendMessage::clear_reply_to_msg_id() {
  reply_to_msg_id_ = 0;
}
inline ::google::protobuf::int32 TL_messages_sendMessage::reply_to_msg_id() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_sendMessage.reply_to_msg_id)
  return reply_to_msg_id_;
}
inline void TL_messages_sendMessage::set_reply_to_msg_id(::google::protobuf::int32 value) {
  
  reply_to_msg_id_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_sendMessage.reply_to_msg_id)
}

// string message = 8;
inline void TL_messages_sendMessage::clear_message() {
  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& TL_messages_sendMessage::message() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_sendMessage.message)
  return message_.GetNoArena();
}
inline void TL_messages_sendMessage::set_message(const ::std::string& value) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_sendMessage.message)
}
#if LANG_CXX11
inline void TL_messages_sendMessage::set_message(::std::string&& value) {
  
  message_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mtproto.TL_messages_sendMessage.message)
}
#endif
inline void TL_messages_sendMessage::set_message(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtproto.TL_messages_sendMessage.message)
}
inline void TL_messages_sendMessage::set_message(const char* value, size_t size) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtproto.TL_messages_sendMessage.message)
}
inline ::std::string* TL_messages_sendMessage::mutable_message() {
  
  // @@protoc_insertion_point(field_mutable:mtproto.TL_messages_sendMessage.message)
  return message_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TL_messages_sendMessage::release_message() {
  // @@protoc_insertion_point(field_release:mtproto.TL_messages_sendMessage.message)
  
  return message_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TL_messages_sendMessage::set_allocated_message(::std::string* message) {
  if (message != NULL) {
    
  } else {
    
  }
  message_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), message);
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_messages_sendMessage.message)
}

// int64 random_id = 9;
inline void TL_messages_sendMessage::clear_random_id() {
  random_id_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 TL_messages_sendMessage::random_id() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_sendMessage.random_id)
  return random_id_;
}
inline void TL_messages_sendMessage::set_random_id(::google::protobuf::int64 value) {
  
  random_id_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_sendMessage.random_id)
}

// .mtproto.ReplyMarkup reply_markup = 10;
inline bool TL_messages_sendMessage::has_reply_markup() const {
  return this != internal_default_instance() && reply_markup_ != NULL;
}
inline void TL_messages_sendMessage::clear_reply_markup() {
  if (GetArenaNoVirtual() == NULL && reply_markup_ != NULL) delete reply_markup_;
  reply_markup_ = NULL;
}
inline const ::mtproto::ReplyMarkup& TL_messages_sendMessage::reply_markup() const {
  const ::mtproto::ReplyMarkup* p = reply_markup_;
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_sendMessage.reply_markup)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::ReplyMarkup*>(
      &::mtproto::_ReplyMarkup_default_instance_);
}
inline ::mtproto::ReplyMarkup* TL_messages_sendMessage::mutable_reply_markup() {
  
  if (reply_markup_ == NULL) {
    reply_markup_ = new ::mtproto::ReplyMarkup;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_messages_sendMessage.reply_markup)
  return reply_markup_;
}
inline ::mtproto::ReplyMarkup* TL_messages_sendMessage::release_reply_markup() {
  // @@protoc_insertion_point(field_release:mtproto.TL_messages_sendMessage.reply_markup)
  
  ::mtproto::ReplyMarkup* temp = reply_markup_;
  reply_markup_ = NULL;
  return temp;
}
inline void TL_messages_sendMessage::set_allocated_reply_markup(::mtproto::ReplyMarkup* reply_markup) {
  delete reply_markup_;
  reply_markup_ = reply_markup;
  if (reply_markup) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_messages_sendMessage.reply_markup)
}

// repeated .mtproto.MessageEntity entities = 11;
inline int TL_messages_sendMessage::entities_size() const {
  return entities_.size();
}
inline void TL_messages_sendMessage::clear_entities() {
  entities_.Clear();
}
inline const ::mtproto::MessageEntity& TL_messages_sendMessage::entities(int index) const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_sendMessage.entities)
  return entities_.Get(index);
}
inline ::mtproto::MessageEntity* TL_messages_sendMessage::mutable_entities(int index) {
  // @@protoc_insertion_point(field_mutable:mtproto.TL_messages_sendMessage.entities)
  return entities_.Mutable(index);
}
inline ::mtproto::MessageEntity* TL_messages_sendMessage::add_entities() {
  // @@protoc_insertion_point(field_add:mtproto.TL_messages_sendMessage.entities)
  return entities_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::mtproto::MessageEntity >*
TL_messages_sendMessage::mutable_entities() {
  // @@protoc_insertion_point(field_mutable_list:mtproto.TL_messages_sendMessage.entities)
  return &entities_;
}
inline const ::google::protobuf::RepeatedPtrField< ::mtproto::MessageEntity >&
TL_messages_sendMessage::entities() const {
  // @@protoc_insertion_point(field_list:mtproto.TL_messages_sendMessage.entities)
  return entities_;
}

// -------------------------------------------------------------------

// TL_messages_sendMedia

// bool silent = 2;
inline void TL_messages_sendMedia::clear_silent() {
  silent_ = false;
}
inline bool TL_messages_sendMedia::silent() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_sendMedia.silent)
  return silent_;
}
inline void TL_messages_sendMedia::set_silent(bool value) {
  
  silent_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_sendMedia.silent)
}

// bool background = 3;
inline void TL_messages_sendMedia::clear_background() {
  background_ = false;
}
inline bool TL_messages_sendMedia::background() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_sendMedia.background)
  return background_;
}
inline void TL_messages_sendMedia::set_background(bool value) {
  
  background_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_sendMedia.background)
}

// bool clear_draft = 4;
inline void TL_messages_sendMedia::clear_clear_draft() {
  clear_draft_ = false;
}
inline bool TL_messages_sendMedia::clear_draft() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_sendMedia.clear_draft)
  return clear_draft_;
}
inline void TL_messages_sendMedia::set_clear_draft(bool value) {
  
  clear_draft_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_sendMedia.clear_draft)
}

// .mtproto.InputPeer peer = 5;
inline bool TL_messages_sendMedia::has_peer() const {
  return this != internal_default_instance() && peer_ != NULL;
}
inline void TL_messages_sendMedia::clear_peer() {
  if (GetArenaNoVirtual() == NULL && peer_ != NULL) delete peer_;
  peer_ = NULL;
}
inline const ::mtproto::InputPeer& TL_messages_sendMedia::peer() const {
  const ::mtproto::InputPeer* p = peer_;
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_sendMedia.peer)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::InputPeer*>(
      &::mtproto::_InputPeer_default_instance_);
}
inline ::mtproto::InputPeer* TL_messages_sendMedia::mutable_peer() {
  
  if (peer_ == NULL) {
    peer_ = new ::mtproto::InputPeer;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_messages_sendMedia.peer)
  return peer_;
}
inline ::mtproto::InputPeer* TL_messages_sendMedia::release_peer() {
  // @@protoc_insertion_point(field_release:mtproto.TL_messages_sendMedia.peer)
  
  ::mtproto::InputPeer* temp = peer_;
  peer_ = NULL;
  return temp;
}
inline void TL_messages_sendMedia::set_allocated_peer(::mtproto::InputPeer* peer) {
  delete peer_;
  peer_ = peer;
  if (peer) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_messages_sendMedia.peer)
}

// int32 reply_to_msg_id = 6;
inline void TL_messages_sendMedia::clear_reply_to_msg_id() {
  reply_to_msg_id_ = 0;
}
inline ::google::protobuf::int32 TL_messages_sendMedia::reply_to_msg_id() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_sendMedia.reply_to_msg_id)
  return reply_to_msg_id_;
}
inline void TL_messages_sendMedia::set_reply_to_msg_id(::google::protobuf::int32 value) {
  
  reply_to_msg_id_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_sendMedia.reply_to_msg_id)
}

// .mtproto.InputMedia media = 7;
inline bool TL_messages_sendMedia::has_media() const {
  return this != internal_default_instance() && media_ != NULL;
}
inline void TL_messages_sendMedia::clear_media() {
  if (GetArenaNoVirtual() == NULL && media_ != NULL) delete media_;
  media_ = NULL;
}
inline const ::mtproto::InputMedia& TL_messages_sendMedia::media() const {
  const ::mtproto::InputMedia* p = media_;
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_sendMedia.media)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::InputMedia*>(
      &::mtproto::_InputMedia_default_instance_);
}
inline ::mtproto::InputMedia* TL_messages_sendMedia::mutable_media() {
  
  if (media_ == NULL) {
    media_ = new ::mtproto::InputMedia;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_messages_sendMedia.media)
  return media_;
}
inline ::mtproto::InputMedia* TL_messages_sendMedia::release_media() {
  // @@protoc_insertion_point(field_release:mtproto.TL_messages_sendMedia.media)
  
  ::mtproto::InputMedia* temp = media_;
  media_ = NULL;
  return temp;
}
inline void TL_messages_sendMedia::set_allocated_media(::mtproto::InputMedia* media) {
  delete media_;
  media_ = media;
  if (media) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_messages_sendMedia.media)
}

// string message = 8;
inline void TL_messages_sendMedia::clear_message() {
  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& TL_messages_sendMedia::message() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_sendMedia.message)
  return message_.GetNoArena();
}
inline void TL_messages_sendMedia::set_message(const ::std::string& value) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_sendMedia.message)
}
#if LANG_CXX11
inline void TL_messages_sendMedia::set_message(::std::string&& value) {
  
  message_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mtproto.TL_messages_sendMedia.message)
}
#endif
inline void TL_messages_sendMedia::set_message(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtproto.TL_messages_sendMedia.message)
}
inline void TL_messages_sendMedia::set_message(const char* value, size_t size) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtproto.TL_messages_sendMedia.message)
}
inline ::std::string* TL_messages_sendMedia::mutable_message() {
  
  // @@protoc_insertion_point(field_mutable:mtproto.TL_messages_sendMedia.message)
  return message_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TL_messages_sendMedia::release_message() {
  // @@protoc_insertion_point(field_release:mtproto.TL_messages_sendMedia.message)
  
  return message_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TL_messages_sendMedia::set_allocated_message(::std::string* message) {
  if (message != NULL) {
    
  } else {
    
  }
  message_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), message);
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_messages_sendMedia.message)
}

// int64 random_id = 9;
inline void TL_messages_sendMedia::clear_random_id() {
  random_id_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 TL_messages_sendMedia::random_id() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_sendMedia.random_id)
  return random_id_;
}
inline void TL_messages_sendMedia::set_random_id(::google::protobuf::int64 value) {
  
  random_id_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_sendMedia.random_id)
}

// .mtproto.ReplyMarkup reply_markup = 10;
inline bool TL_messages_sendMedia::has_reply_markup() const {
  return this != internal_default_instance() && reply_markup_ != NULL;
}
inline void TL_messages_sendMedia::clear_reply_markup() {
  if (GetArenaNoVirtual() == NULL && reply_markup_ != NULL) delete reply_markup_;
  reply_markup_ = NULL;
}
inline const ::mtproto::ReplyMarkup& TL_messages_sendMedia::reply_markup() const {
  const ::mtproto::ReplyMarkup* p = reply_markup_;
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_sendMedia.reply_markup)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::ReplyMarkup*>(
      &::mtproto::_ReplyMarkup_default_instance_);
}
inline ::mtproto::ReplyMarkup* TL_messages_sendMedia::mutable_reply_markup() {
  
  if (reply_markup_ == NULL) {
    reply_markup_ = new ::mtproto::ReplyMarkup;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_messages_sendMedia.reply_markup)
  return reply_markup_;
}
inline ::mtproto::ReplyMarkup* TL_messages_sendMedia::release_reply_markup() {
  // @@protoc_insertion_point(field_release:mtproto.TL_messages_sendMedia.reply_markup)
  
  ::mtproto::ReplyMarkup* temp = reply_markup_;
  reply_markup_ = NULL;
  return temp;
}
inline void TL_messages_sendMedia::set_allocated_reply_markup(::mtproto::ReplyMarkup* reply_markup) {
  delete reply_markup_;
  reply_markup_ = reply_markup;
  if (reply_markup) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_messages_sendMedia.reply_markup)
}

// repeated .mtproto.MessageEntity entities = 11;
inline int TL_messages_sendMedia::entities_size() const {
  return entities_.size();
}
inline void TL_messages_sendMedia::clear_entities() {
  entities_.Clear();
}
inline const ::mtproto::MessageEntity& TL_messages_sendMedia::entities(int index) const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_sendMedia.entities)
  return entities_.Get(index);
}
inline ::mtproto::MessageEntity* TL_messages_sendMedia::mutable_entities(int index) {
  // @@protoc_insertion_point(field_mutable:mtproto.TL_messages_sendMedia.entities)
  return entities_.Mutable(index);
}
inline ::mtproto::MessageEntity* TL_messages_sendMedia::add_entities() {
  // @@protoc_insertion_point(field_add:mtproto.TL_messages_sendMedia.entities)
  return entities_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::mtproto::MessageEntity >*
TL_messages_sendMedia::mutable_entities() {
  // @@protoc_insertion_point(field_mutable_list:mtproto.TL_messages_sendMedia.entities)
  return &entities_;
}
inline const ::google::protobuf::RepeatedPtrField< ::mtproto::MessageEntity >&
TL_messages_sendMedia::entities() const {
  // @@protoc_insertion_point(field_list:mtproto.TL_messages_sendMedia.entities)
  return entities_;
}

// -------------------------------------------------------------------

// TL_messages_forwardMessages

// bool silent = 2;
inline void TL_messages_forwardMessages::clear_silent() {
  silent_ = false;
}
inline bool TL_messages_forwardMessages::silent() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_forwardMessages.silent)
  return silent_;
}
inline void TL_messages_forwardMessages::set_silent(bool value) {
  
  silent_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_forwardMessages.silent)
}

// bool background = 3;
inline void TL_messages_forwardMessages::clear_background() {
  background_ = false;
}
inline bool TL_messages_forwardMessages::background() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_forwardMessages.background)
  return background_;
}
inline void TL_messages_forwardMessages::set_background(bool value) {
  
  background_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_forwardMessages.background)
}

// bool with_my_score = 4;
inline void TL_messages_forwardMessages::clear_with_my_score() {
  with_my_score_ = false;
}
inline bool TL_messages_forwardMessages::with_my_score() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_forwardMessages.with_my_score)
  return with_my_score_;
}
inline void TL_messages_forwardMessages::set_with_my_score(bool value) {
  
  with_my_score_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_forwardMessages.with_my_score)
}

// bool grouped = 5;
inline void TL_messages_forwardMessages::clear_grouped() {
  grouped_ = false;
}
inline bool TL_messages_forwardMessages::grouped() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_forwardMessages.grouped)
  return grouped_;
}
inline void TL_messages_forwardMessages::set_grouped(bool value) {
  
  grouped_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_forwardMessages.grouped)
}

// .mtproto.InputPeer from_peer = 6;
inline bool TL_messages_forwardMessages::has_from_peer() const {
  return this != internal_default_instance() && from_peer_ != NULL;
}
inline void TL_messages_forwardMessages::clear_from_peer() {
  if (GetArenaNoVirtual() == NULL && from_peer_ != NULL) delete from_peer_;
  from_peer_ = NULL;
}
inline const ::mtproto::InputPeer& TL_messages_forwardMessages::from_peer() const {
  const ::mtproto::InputPeer* p = from_peer_;
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_forwardMessages.from_peer)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::InputPeer*>(
      &::mtproto::_InputPeer_default_instance_);
}
inline ::mtproto::InputPeer* TL_messages_forwardMessages::mutable_from_peer() {
  
  if (from_peer_ == NULL) {
    from_peer_ = new ::mtproto::InputPeer;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_messages_forwardMessages.from_peer)
  return from_peer_;
}
inline ::mtproto::InputPeer* TL_messages_forwardMessages::release_from_peer() {
  // @@protoc_insertion_point(field_release:mtproto.TL_messages_forwardMessages.from_peer)
  
  ::mtproto::InputPeer* temp = from_peer_;
  from_peer_ = NULL;
  return temp;
}
inline void TL_messages_forwardMessages::set_allocated_from_peer(::mtproto::InputPeer* from_peer) {
  delete from_peer_;
  from_peer_ = from_peer;
  if (from_peer) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_messages_forwardMessages.from_peer)
}

// repeated int32 id = 7;
inline int TL_messages_forwardMessages::id_size() const {
  return id_.size();
}
inline void TL_messages_forwardMessages::clear_id() {
  id_.Clear();
}
inline ::google::protobuf::int32 TL_messages_forwardMessages::id(int index) const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_forwardMessages.id)
  return id_.Get(index);
}
inline void TL_messages_forwardMessages::set_id(int index, ::google::protobuf::int32 value) {
  id_.Set(index, value);
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_forwardMessages.id)
}
inline void TL_messages_forwardMessages::add_id(::google::protobuf::int32 value) {
  id_.Add(value);
  // @@protoc_insertion_point(field_add:mtproto.TL_messages_forwardMessages.id)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
TL_messages_forwardMessages::id() const {
  // @@protoc_insertion_point(field_list:mtproto.TL_messages_forwardMessages.id)
  return id_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
TL_messages_forwardMessages::mutable_id() {
  // @@protoc_insertion_point(field_mutable_list:mtproto.TL_messages_forwardMessages.id)
  return &id_;
}

// repeated int64 random_id = 8;
inline int TL_messages_forwardMessages::random_id_size() const {
  return random_id_.size();
}
inline void TL_messages_forwardMessages::clear_random_id() {
  random_id_.Clear();
}
inline ::google::protobuf::int64 TL_messages_forwardMessages::random_id(int index) const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_forwardMessages.random_id)
  return random_id_.Get(index);
}
inline void TL_messages_forwardMessages::set_random_id(int index, ::google::protobuf::int64 value) {
  random_id_.Set(index, value);
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_forwardMessages.random_id)
}
inline void TL_messages_forwardMessages::add_random_id(::google::protobuf::int64 value) {
  random_id_.Add(value);
  // @@protoc_insertion_point(field_add:mtproto.TL_messages_forwardMessages.random_id)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
TL_messages_forwardMessages::random_id() const {
  // @@protoc_insertion_point(field_list:mtproto.TL_messages_forwardMessages.random_id)
  return random_id_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
TL_messages_forwardMessages::mutable_random_id() {
  // @@protoc_insertion_point(field_mutable_list:mtproto.TL_messages_forwardMessages.random_id)
  return &random_id_;
}

// .mtproto.InputPeer to_peer = 9;
inline bool TL_messages_forwardMessages::has_to_peer() const {
  return this != internal_default_instance() && to_peer_ != NULL;
}
inline void TL_messages_forwardMessages::clear_to_peer() {
  if (GetArenaNoVirtual() == NULL && to_peer_ != NULL) delete to_peer_;
  to_peer_ = NULL;
}
inline const ::mtproto::InputPeer& TL_messages_forwardMessages::to_peer() const {
  const ::mtproto::InputPeer* p = to_peer_;
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_forwardMessages.to_peer)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::InputPeer*>(
      &::mtproto::_InputPeer_default_instance_);
}
inline ::mtproto::InputPeer* TL_messages_forwardMessages::mutable_to_peer() {
  
  if (to_peer_ == NULL) {
    to_peer_ = new ::mtproto::InputPeer;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_messages_forwardMessages.to_peer)
  return to_peer_;
}
inline ::mtproto::InputPeer* TL_messages_forwardMessages::release_to_peer() {
  // @@protoc_insertion_point(field_release:mtproto.TL_messages_forwardMessages.to_peer)
  
  ::mtproto::InputPeer* temp = to_peer_;
  to_peer_ = NULL;
  return temp;
}
inline void TL_messages_forwardMessages::set_allocated_to_peer(::mtproto::InputPeer* to_peer) {
  delete to_peer_;
  to_peer_ = to_peer;
  if (to_peer) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_messages_forwardMessages.to_peer)
}

// -------------------------------------------------------------------

// TL_messages_reportSpam

// .mtproto.InputPeer peer = 1;
inline bool TL_messages_reportSpam::has_peer() const {
  return this != internal_default_instance() && peer_ != NULL;
}
inline void TL_messages_reportSpam::clear_peer() {
  if (GetArenaNoVirtual() == NULL && peer_ != NULL) delete peer_;
  peer_ = NULL;
}
inline const ::mtproto::InputPeer& TL_messages_reportSpam::peer() const {
  const ::mtproto::InputPeer* p = peer_;
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_reportSpam.peer)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::InputPeer*>(
      &::mtproto::_InputPeer_default_instance_);
}
inline ::mtproto::InputPeer* TL_messages_reportSpam::mutable_peer() {
  
  if (peer_ == NULL) {
    peer_ = new ::mtproto::InputPeer;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_messages_reportSpam.peer)
  return peer_;
}
inline ::mtproto::InputPeer* TL_messages_reportSpam::release_peer() {
  // @@protoc_insertion_point(field_release:mtproto.TL_messages_reportSpam.peer)
  
  ::mtproto::InputPeer* temp = peer_;
  peer_ = NULL;
  return temp;
}
inline void TL_messages_reportSpam::set_allocated_peer(::mtproto::InputPeer* peer) {
  delete peer_;
  peer_ = peer;
  if (peer) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_messages_reportSpam.peer)
}

// -------------------------------------------------------------------

// TL_messages_hideReportSpam

// .mtproto.InputPeer peer = 1;
inline bool TL_messages_hideReportSpam::has_peer() const {
  return this != internal_default_instance() && peer_ != NULL;
}
inline void TL_messages_hideReportSpam::clear_peer() {
  if (GetArenaNoVirtual() == NULL && peer_ != NULL) delete peer_;
  peer_ = NULL;
}
inline const ::mtproto::InputPeer& TL_messages_hideReportSpam::peer() const {
  const ::mtproto::InputPeer* p = peer_;
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_hideReportSpam.peer)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::InputPeer*>(
      &::mtproto::_InputPeer_default_instance_);
}
inline ::mtproto::InputPeer* TL_messages_hideReportSpam::mutable_peer() {
  
  if (peer_ == NULL) {
    peer_ = new ::mtproto::InputPeer;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_messages_hideReportSpam.peer)
  return peer_;
}
inline ::mtproto::InputPeer* TL_messages_hideReportSpam::release_peer() {
  // @@protoc_insertion_point(field_release:mtproto.TL_messages_hideReportSpam.peer)
  
  ::mtproto::InputPeer* temp = peer_;
  peer_ = NULL;
  return temp;
}
inline void TL_messages_hideReportSpam::set_allocated_peer(::mtproto::InputPeer* peer) {
  delete peer_;
  peer_ = peer;
  if (peer) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_messages_hideReportSpam.peer)
}

// -------------------------------------------------------------------

// TL_messages_getPeerSettings

// .mtproto.InputPeer peer = 1;
inline bool TL_messages_getPeerSettings::has_peer() const {
  return this != internal_default_instance() && peer_ != NULL;
}
inline void TL_messages_getPeerSettings::clear_peer() {
  if (GetArenaNoVirtual() == NULL && peer_ != NULL) delete peer_;
  peer_ = NULL;
}
inline const ::mtproto::InputPeer& TL_messages_getPeerSettings::peer() const {
  const ::mtproto::InputPeer* p = peer_;
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_getPeerSettings.peer)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::InputPeer*>(
      &::mtproto::_InputPeer_default_instance_);
}
inline ::mtproto::InputPeer* TL_messages_getPeerSettings::mutable_peer() {
  
  if (peer_ == NULL) {
    peer_ = new ::mtproto::InputPeer;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_messages_getPeerSettings.peer)
  return peer_;
}
inline ::mtproto::InputPeer* TL_messages_getPeerSettings::release_peer() {
  // @@protoc_insertion_point(field_release:mtproto.TL_messages_getPeerSettings.peer)
  
  ::mtproto::InputPeer* temp = peer_;
  peer_ = NULL;
  return temp;
}
inline void TL_messages_getPeerSettings::set_allocated_peer(::mtproto::InputPeer* peer) {
  delete peer_;
  peer_ = peer;
  if (peer) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_messages_getPeerSettings.peer)
}

// -------------------------------------------------------------------

// TL_messages_report

// .mtproto.InputPeer peer = 1;
inline bool TL_messages_report::has_peer() const {
  return this != internal_default_instance() && peer_ != NULL;
}
inline void TL_messages_report::clear_peer() {
  if (GetArenaNoVirtual() == NULL && peer_ != NULL) delete peer_;
  peer_ = NULL;
}
inline const ::mtproto::InputPeer& TL_messages_report::peer() const {
  const ::mtproto::InputPeer* p = peer_;
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_report.peer)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::InputPeer*>(
      &::mtproto::_InputPeer_default_instance_);
}
inline ::mtproto::InputPeer* TL_messages_report::mutable_peer() {
  
  if (peer_ == NULL) {
    peer_ = new ::mtproto::InputPeer;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_messages_report.peer)
  return peer_;
}
inline ::mtproto::InputPeer* TL_messages_report::release_peer() {
  // @@protoc_insertion_point(field_release:mtproto.TL_messages_report.peer)
  
  ::mtproto::InputPeer* temp = peer_;
  peer_ = NULL;
  return temp;
}
inline void TL_messages_report::set_allocated_peer(::mtproto::InputPeer* peer) {
  delete peer_;
  peer_ = peer;
  if (peer) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_messages_report.peer)
}

// repeated int32 id = 2;
inline int TL_messages_report::id_size() const {
  return id_.size();
}
inline void TL_messages_report::clear_id() {
  id_.Clear();
}
inline ::google::protobuf::int32 TL_messages_report::id(int index) const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_report.id)
  return id_.Get(index);
}
inline void TL_messages_report::set_id(int index, ::google::protobuf::int32 value) {
  id_.Set(index, value);
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_report.id)
}
inline void TL_messages_report::add_id(::google::protobuf::int32 value) {
  id_.Add(value);
  // @@protoc_insertion_point(field_add:mtproto.TL_messages_report.id)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
TL_messages_report::id() const {
  // @@protoc_insertion_point(field_list:mtproto.TL_messages_report.id)
  return id_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
TL_messages_report::mutable_id() {
  // @@protoc_insertion_point(field_mutable_list:mtproto.TL_messages_report.id)
  return &id_;
}

// .mtproto.ReportReason reason = 3;
inline bool TL_messages_report::has_reason() const {
  return this != internal_default_instance() && reason_ != NULL;
}
inline void TL_messages_report::clear_reason() {
  if (GetArenaNoVirtual() == NULL && reason_ != NULL) delete reason_;
  reason_ = NULL;
}
inline const ::mtproto::ReportReason& TL_messages_report::reason() const {
  const ::mtproto::ReportReason* p = reason_;
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_report.reason)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::ReportReason*>(
      &::mtproto::_ReportReason_default_instance_);
}
inline ::mtproto::ReportReason* TL_messages_report::mutable_reason() {
  
  if (reason_ == NULL) {
    reason_ = new ::mtproto::ReportReason;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_messages_report.reason)
  return reason_;
}
inline ::mtproto::ReportReason* TL_messages_report::release_reason() {
  // @@protoc_insertion_point(field_release:mtproto.TL_messages_report.reason)
  
  ::mtproto::ReportReason* temp = reason_;
  reason_ = NULL;
  return temp;
}
inline void TL_messages_report::set_allocated_reason(::mtproto::ReportReason* reason) {
  delete reason_;
  reason_ = reason;
  if (reason) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_messages_report.reason)
}

// -------------------------------------------------------------------

// TL_messages_getChats

// repeated int32 id = 1;
inline int TL_messages_getChats::id_size() const {
  return id_.size();
}
inline void TL_messages_getChats::clear_id() {
  id_.Clear();
}
inline ::google::protobuf::int32 TL_messages_getChats::id(int index) const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_getChats.id)
  return id_.Get(index);
}
inline void TL_messages_getChats::set_id(int index, ::google::protobuf::int32 value) {
  id_.Set(index, value);
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_getChats.id)
}
inline void TL_messages_getChats::add_id(::google::protobuf::int32 value) {
  id_.Add(value);
  // @@protoc_insertion_point(field_add:mtproto.TL_messages_getChats.id)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
TL_messages_getChats::id() const {
  // @@protoc_insertion_point(field_list:mtproto.TL_messages_getChats.id)
  return id_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
TL_messages_getChats::mutable_id() {
  // @@protoc_insertion_point(field_mutable_list:mtproto.TL_messages_getChats.id)
  return &id_;
}

// -------------------------------------------------------------------

// TL_messages_getFullChat

// int32 chat_id = 1;
inline void TL_messages_getFullChat::clear_chat_id() {
  chat_id_ = 0;
}
inline ::google::protobuf::int32 TL_messages_getFullChat::chat_id() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_getFullChat.chat_id)
  return chat_id_;
}
inline void TL_messages_getFullChat::set_chat_id(::google::protobuf::int32 value) {
  
  chat_id_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_getFullChat.chat_id)
}

// -------------------------------------------------------------------

// TL_messages_editChatTitle

// int32 chat_id = 1;
inline void TL_messages_editChatTitle::clear_chat_id() {
  chat_id_ = 0;
}
inline ::google::protobuf::int32 TL_messages_editChatTitle::chat_id() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_editChatTitle.chat_id)
  return chat_id_;
}
inline void TL_messages_editChatTitle::set_chat_id(::google::protobuf::int32 value) {
  
  chat_id_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_editChatTitle.chat_id)
}

// string title = 2;
inline void TL_messages_editChatTitle::clear_title() {
  title_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& TL_messages_editChatTitle::title() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_editChatTitle.title)
  return title_.GetNoArena();
}
inline void TL_messages_editChatTitle::set_title(const ::std::string& value) {
  
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_editChatTitle.title)
}
#if LANG_CXX11
inline void TL_messages_editChatTitle::set_title(::std::string&& value) {
  
  title_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mtproto.TL_messages_editChatTitle.title)
}
#endif
inline void TL_messages_editChatTitle::set_title(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtproto.TL_messages_editChatTitle.title)
}
inline void TL_messages_editChatTitle::set_title(const char* value, size_t size) {
  
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtproto.TL_messages_editChatTitle.title)
}
inline ::std::string* TL_messages_editChatTitle::mutable_title() {
  
  // @@protoc_insertion_point(field_mutable:mtproto.TL_messages_editChatTitle.title)
  return title_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TL_messages_editChatTitle::release_title() {
  // @@protoc_insertion_point(field_release:mtproto.TL_messages_editChatTitle.title)
  
  return title_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TL_messages_editChatTitle::set_allocated_title(::std::string* title) {
  if (title != NULL) {
    
  } else {
    
  }
  title_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), title);
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_messages_editChatTitle.title)
}

// -------------------------------------------------------------------

// TL_messages_editChatPhoto

// int32 chat_id = 1;
inline void TL_messages_editChatPhoto::clear_chat_id() {
  chat_id_ = 0;
}
inline ::google::protobuf::int32 TL_messages_editChatPhoto::chat_id() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_editChatPhoto.chat_id)
  return chat_id_;
}
inline void TL_messages_editChatPhoto::set_chat_id(::google::protobuf::int32 value) {
  
  chat_id_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_editChatPhoto.chat_id)
}

// .mtproto.InputChatPhoto photo = 2;
inline bool TL_messages_editChatPhoto::has_photo() const {
  return this != internal_default_instance() && photo_ != NULL;
}
inline void TL_messages_editChatPhoto::clear_photo() {
  if (GetArenaNoVirtual() == NULL && photo_ != NULL) delete photo_;
  photo_ = NULL;
}
inline const ::mtproto::InputChatPhoto& TL_messages_editChatPhoto::photo() const {
  const ::mtproto::InputChatPhoto* p = photo_;
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_editChatPhoto.photo)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::InputChatPhoto*>(
      &::mtproto::_InputChatPhoto_default_instance_);
}
inline ::mtproto::InputChatPhoto* TL_messages_editChatPhoto::mutable_photo() {
  
  if (photo_ == NULL) {
    photo_ = new ::mtproto::InputChatPhoto;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_messages_editChatPhoto.photo)
  return photo_;
}
inline ::mtproto::InputChatPhoto* TL_messages_editChatPhoto::release_photo() {
  // @@protoc_insertion_point(field_release:mtproto.TL_messages_editChatPhoto.photo)
  
  ::mtproto::InputChatPhoto* temp = photo_;
  photo_ = NULL;
  return temp;
}
inline void TL_messages_editChatPhoto::set_allocated_photo(::mtproto::InputChatPhoto* photo) {
  delete photo_;
  photo_ = photo;
  if (photo) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_messages_editChatPhoto.photo)
}

// -------------------------------------------------------------------

// TL_messages_addChatUser

// int32 chat_id = 1;
inline void TL_messages_addChatUser::clear_chat_id() {
  chat_id_ = 0;
}
inline ::google::protobuf::int32 TL_messages_addChatUser::chat_id() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_addChatUser.chat_id)
  return chat_id_;
}
inline void TL_messages_addChatUser::set_chat_id(::google::protobuf::int32 value) {
  
  chat_id_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_addChatUser.chat_id)
}

// .mtproto.InputUser user_id = 2;
inline bool TL_messages_addChatUser::has_user_id() const {
  return this != internal_default_instance() && user_id_ != NULL;
}
inline void TL_messages_addChatUser::clear_user_id() {
  if (GetArenaNoVirtual() == NULL && user_id_ != NULL) delete user_id_;
  user_id_ = NULL;
}
inline const ::mtproto::InputUser& TL_messages_addChatUser::user_id() const {
  const ::mtproto::InputUser* p = user_id_;
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_addChatUser.user_id)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::InputUser*>(
      &::mtproto::_InputUser_default_instance_);
}
inline ::mtproto::InputUser* TL_messages_addChatUser::mutable_user_id() {
  
  if (user_id_ == NULL) {
    user_id_ = new ::mtproto::InputUser;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_messages_addChatUser.user_id)
  return user_id_;
}
inline ::mtproto::InputUser* TL_messages_addChatUser::release_user_id() {
  // @@protoc_insertion_point(field_release:mtproto.TL_messages_addChatUser.user_id)
  
  ::mtproto::InputUser* temp = user_id_;
  user_id_ = NULL;
  return temp;
}
inline void TL_messages_addChatUser::set_allocated_user_id(::mtproto::InputUser* user_id) {
  delete user_id_;
  user_id_ = user_id;
  if (user_id) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_messages_addChatUser.user_id)
}

// int32 fwd_limit = 3;
inline void TL_messages_addChatUser::clear_fwd_limit() {
  fwd_limit_ = 0;
}
inline ::google::protobuf::int32 TL_messages_addChatUser::fwd_limit() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_addChatUser.fwd_limit)
  return fwd_limit_;
}
inline void TL_messages_addChatUser::set_fwd_limit(::google::protobuf::int32 value) {
  
  fwd_limit_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_addChatUser.fwd_limit)
}

// -------------------------------------------------------------------

// TL_messages_deleteChatUser

// int32 chat_id = 1;
inline void TL_messages_deleteChatUser::clear_chat_id() {
  chat_id_ = 0;
}
inline ::google::protobuf::int32 TL_messages_deleteChatUser::chat_id() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_deleteChatUser.chat_id)
  return chat_id_;
}
inline void TL_messages_deleteChatUser::set_chat_id(::google::protobuf::int32 value) {
  
  chat_id_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_deleteChatUser.chat_id)
}

// .mtproto.InputUser user_id = 2;
inline bool TL_messages_deleteChatUser::has_user_id() const {
  return this != internal_default_instance() && user_id_ != NULL;
}
inline void TL_messages_deleteChatUser::clear_user_id() {
  if (GetArenaNoVirtual() == NULL && user_id_ != NULL) delete user_id_;
  user_id_ = NULL;
}
inline const ::mtproto::InputUser& TL_messages_deleteChatUser::user_id() const {
  const ::mtproto::InputUser* p = user_id_;
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_deleteChatUser.user_id)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::InputUser*>(
      &::mtproto::_InputUser_default_instance_);
}
inline ::mtproto::InputUser* TL_messages_deleteChatUser::mutable_user_id() {
  
  if (user_id_ == NULL) {
    user_id_ = new ::mtproto::InputUser;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_messages_deleteChatUser.user_id)
  return user_id_;
}
inline ::mtproto::InputUser* TL_messages_deleteChatUser::release_user_id() {
  // @@protoc_insertion_point(field_release:mtproto.TL_messages_deleteChatUser.user_id)
  
  ::mtproto::InputUser* temp = user_id_;
  user_id_ = NULL;
  return temp;
}
inline void TL_messages_deleteChatUser::set_allocated_user_id(::mtproto::InputUser* user_id) {
  delete user_id_;
  user_id_ = user_id;
  if (user_id) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_messages_deleteChatUser.user_id)
}

// -------------------------------------------------------------------

// TL_messages_createChat

// repeated .mtproto.InputUser users = 1;
inline int TL_messages_createChat::users_size() const {
  return users_.size();
}
inline void TL_messages_createChat::clear_users() {
  users_.Clear();
}
inline const ::mtproto::InputUser& TL_messages_createChat::users(int index) const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_createChat.users)
  return users_.Get(index);
}
inline ::mtproto::InputUser* TL_messages_createChat::mutable_users(int index) {
  // @@protoc_insertion_point(field_mutable:mtproto.TL_messages_createChat.users)
  return users_.Mutable(index);
}
inline ::mtproto::InputUser* TL_messages_createChat::add_users() {
  // @@protoc_insertion_point(field_add:mtproto.TL_messages_createChat.users)
  return users_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::mtproto::InputUser >*
TL_messages_createChat::mutable_users() {
  // @@protoc_insertion_point(field_mutable_list:mtproto.TL_messages_createChat.users)
  return &users_;
}
inline const ::google::protobuf::RepeatedPtrField< ::mtproto::InputUser >&
TL_messages_createChat::users() const {
  // @@protoc_insertion_point(field_list:mtproto.TL_messages_createChat.users)
  return users_;
}

// string title = 2;
inline void TL_messages_createChat::clear_title() {
  title_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& TL_messages_createChat::title() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_createChat.title)
  return title_.GetNoArena();
}
inline void TL_messages_createChat::set_title(const ::std::string& value) {
  
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_createChat.title)
}
#if LANG_CXX11
inline void TL_messages_createChat::set_title(::std::string&& value) {
  
  title_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mtproto.TL_messages_createChat.title)
}
#endif
inline void TL_messages_createChat::set_title(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtproto.TL_messages_createChat.title)
}
inline void TL_messages_createChat::set_title(const char* value, size_t size) {
  
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtproto.TL_messages_createChat.title)
}
inline ::std::string* TL_messages_createChat::mutable_title() {
  
  // @@protoc_insertion_point(field_mutable:mtproto.TL_messages_createChat.title)
  return title_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TL_messages_createChat::release_title() {
  // @@protoc_insertion_point(field_release:mtproto.TL_messages_createChat.title)
  
  return title_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TL_messages_createChat::set_allocated_title(::std::string* title) {
  if (title != NULL) {
    
  } else {
    
  }
  title_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), title);
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_messages_createChat.title)
}

// -------------------------------------------------------------------

// TL_messages_getDhConfig

// int32 version = 1;
inline void TL_messages_getDhConfig::clear_version() {
  version_ = 0;
}
inline ::google::protobuf::int32 TL_messages_getDhConfig::version() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_getDhConfig.version)
  return version_;
}
inline void TL_messages_getDhConfig::set_version(::google::protobuf::int32 value) {
  
  version_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_getDhConfig.version)
}

// int32 random_length = 2;
inline void TL_messages_getDhConfig::clear_random_length() {
  random_length_ = 0;
}
inline ::google::protobuf::int32 TL_messages_getDhConfig::random_length() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_getDhConfig.random_length)
  return random_length_;
}
inline void TL_messages_getDhConfig::set_random_length(::google::protobuf::int32 value) {
  
  random_length_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_getDhConfig.random_length)
}

// -------------------------------------------------------------------

// TL_messages_requestEncryption

// .mtproto.InputUser user_id = 1;
inline bool TL_messages_requestEncryption::has_user_id() const {
  return this != internal_default_instance() && user_id_ != NULL;
}
inline void TL_messages_requestEncryption::clear_user_id() {
  if (GetArenaNoVirtual() == NULL && user_id_ != NULL) delete user_id_;
  user_id_ = NULL;
}
inline const ::mtproto::InputUser& TL_messages_requestEncryption::user_id() const {
  const ::mtproto::InputUser* p = user_id_;
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_requestEncryption.user_id)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::InputUser*>(
      &::mtproto::_InputUser_default_instance_);
}
inline ::mtproto::InputUser* TL_messages_requestEncryption::mutable_user_id() {
  
  if (user_id_ == NULL) {
    user_id_ = new ::mtproto::InputUser;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_messages_requestEncryption.user_id)
  return user_id_;
}
inline ::mtproto::InputUser* TL_messages_requestEncryption::release_user_id() {
  // @@protoc_insertion_point(field_release:mtproto.TL_messages_requestEncryption.user_id)
  
  ::mtproto::InputUser* temp = user_id_;
  user_id_ = NULL;
  return temp;
}
inline void TL_messages_requestEncryption::set_allocated_user_id(::mtproto::InputUser* user_id) {
  delete user_id_;
  user_id_ = user_id;
  if (user_id) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_messages_requestEncryption.user_id)
}

// int32 random_id = 2;
inline void TL_messages_requestEncryption::clear_random_id() {
  random_id_ = 0;
}
inline ::google::protobuf::int32 TL_messages_requestEncryption::random_id() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_requestEncryption.random_id)
  return random_id_;
}
inline void TL_messages_requestEncryption::set_random_id(::google::protobuf::int32 value) {
  
  random_id_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_requestEncryption.random_id)
}

// bytes g_a = 3;
inline void TL_messages_requestEncryption::clear_g_a() {
  g_a_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& TL_messages_requestEncryption::g_a() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_requestEncryption.g_a)
  return g_a_.GetNoArena();
}
inline void TL_messages_requestEncryption::set_g_a(const ::std::string& value) {
  
  g_a_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_requestEncryption.g_a)
}
#if LANG_CXX11
inline void TL_messages_requestEncryption::set_g_a(::std::string&& value) {
  
  g_a_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mtproto.TL_messages_requestEncryption.g_a)
}
#endif
inline void TL_messages_requestEncryption::set_g_a(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  g_a_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtproto.TL_messages_requestEncryption.g_a)
}
inline void TL_messages_requestEncryption::set_g_a(const void* value, size_t size) {
  
  g_a_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtproto.TL_messages_requestEncryption.g_a)
}
inline ::std::string* TL_messages_requestEncryption::mutable_g_a() {
  
  // @@protoc_insertion_point(field_mutable:mtproto.TL_messages_requestEncryption.g_a)
  return g_a_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TL_messages_requestEncryption::release_g_a() {
  // @@protoc_insertion_point(field_release:mtproto.TL_messages_requestEncryption.g_a)
  
  return g_a_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TL_messages_requestEncryption::set_allocated_g_a(::std::string* g_a) {
  if (g_a != NULL) {
    
  } else {
    
  }
  g_a_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), g_a);
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_messages_requestEncryption.g_a)
}

// -------------------------------------------------------------------

// TL_messages_acceptEncryption

// .mtproto.InputEncryptedChat peer = 1;
inline bool TL_messages_acceptEncryption::has_peer() const {
  return this != internal_default_instance() && peer_ != NULL;
}
inline void TL_messages_acceptEncryption::clear_peer() {
  if (GetArenaNoVirtual() == NULL && peer_ != NULL) delete peer_;
  peer_ = NULL;
}
inline const ::mtproto::InputEncryptedChat& TL_messages_acceptEncryption::peer() const {
  const ::mtproto::InputEncryptedChat* p = peer_;
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_acceptEncryption.peer)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::InputEncryptedChat*>(
      &::mtproto::_InputEncryptedChat_default_instance_);
}
inline ::mtproto::InputEncryptedChat* TL_messages_acceptEncryption::mutable_peer() {
  
  if (peer_ == NULL) {
    peer_ = new ::mtproto::InputEncryptedChat;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_messages_acceptEncryption.peer)
  return peer_;
}
inline ::mtproto::InputEncryptedChat* TL_messages_acceptEncryption::release_peer() {
  // @@protoc_insertion_point(field_release:mtproto.TL_messages_acceptEncryption.peer)
  
  ::mtproto::InputEncryptedChat* temp = peer_;
  peer_ = NULL;
  return temp;
}
inline void TL_messages_acceptEncryption::set_allocated_peer(::mtproto::InputEncryptedChat* peer) {
  delete peer_;
  peer_ = peer;
  if (peer) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_messages_acceptEncryption.peer)
}

// bytes g_b = 2;
inline void TL_messages_acceptEncryption::clear_g_b() {
  g_b_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& TL_messages_acceptEncryption::g_b() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_acceptEncryption.g_b)
  return g_b_.GetNoArena();
}
inline void TL_messages_acceptEncryption::set_g_b(const ::std::string& value) {
  
  g_b_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_acceptEncryption.g_b)
}
#if LANG_CXX11
inline void TL_messages_acceptEncryption::set_g_b(::std::string&& value) {
  
  g_b_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mtproto.TL_messages_acceptEncryption.g_b)
}
#endif
inline void TL_messages_acceptEncryption::set_g_b(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  g_b_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtproto.TL_messages_acceptEncryption.g_b)
}
inline void TL_messages_acceptEncryption::set_g_b(const void* value, size_t size) {
  
  g_b_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtproto.TL_messages_acceptEncryption.g_b)
}
inline ::std::string* TL_messages_acceptEncryption::mutable_g_b() {
  
  // @@protoc_insertion_point(field_mutable:mtproto.TL_messages_acceptEncryption.g_b)
  return g_b_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TL_messages_acceptEncryption::release_g_b() {
  // @@protoc_insertion_point(field_release:mtproto.TL_messages_acceptEncryption.g_b)
  
  return g_b_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TL_messages_acceptEncryption::set_allocated_g_b(::std::string* g_b) {
  if (g_b != NULL) {
    
  } else {
    
  }
  g_b_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), g_b);
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_messages_acceptEncryption.g_b)
}

// int64 key_fingerprint = 3;
inline void TL_messages_acceptEncryption::clear_key_fingerprint() {
  key_fingerprint_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 TL_messages_acceptEncryption::key_fingerprint() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_acceptEncryption.key_fingerprint)
  return key_fingerprint_;
}
inline void TL_messages_acceptEncryption::set_key_fingerprint(::google::protobuf::int64 value) {
  
  key_fingerprint_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_acceptEncryption.key_fingerprint)
}

// -------------------------------------------------------------------

// TL_messages_discardEncryption

// int32 chat_id = 1;
inline void TL_messages_discardEncryption::clear_chat_id() {
  chat_id_ = 0;
}
inline ::google::protobuf::int32 TL_messages_discardEncryption::chat_id() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_discardEncryption.chat_id)
  return chat_id_;
}
inline void TL_messages_discardEncryption::set_chat_id(::google::protobuf::int32 value) {
  
  chat_id_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_discardEncryption.chat_id)
}

// -------------------------------------------------------------------

// TL_messages_setEncryptedTyping

// .mtproto.InputEncryptedChat peer = 1;
inline bool TL_messages_setEncryptedTyping::has_peer() const {
  return this != internal_default_instance() && peer_ != NULL;
}
inline void TL_messages_setEncryptedTyping::clear_peer() {
  if (GetArenaNoVirtual() == NULL && peer_ != NULL) delete peer_;
  peer_ = NULL;
}
inline const ::mtproto::InputEncryptedChat& TL_messages_setEncryptedTyping::peer() const {
  const ::mtproto::InputEncryptedChat* p = peer_;
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_setEncryptedTyping.peer)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::InputEncryptedChat*>(
      &::mtproto::_InputEncryptedChat_default_instance_);
}
inline ::mtproto::InputEncryptedChat* TL_messages_setEncryptedTyping::mutable_peer() {
  
  if (peer_ == NULL) {
    peer_ = new ::mtproto::InputEncryptedChat;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_messages_setEncryptedTyping.peer)
  return peer_;
}
inline ::mtproto::InputEncryptedChat* TL_messages_setEncryptedTyping::release_peer() {
  // @@protoc_insertion_point(field_release:mtproto.TL_messages_setEncryptedTyping.peer)
  
  ::mtproto::InputEncryptedChat* temp = peer_;
  peer_ = NULL;
  return temp;
}
inline void TL_messages_setEncryptedTyping::set_allocated_peer(::mtproto::InputEncryptedChat* peer) {
  delete peer_;
  peer_ = peer;
  if (peer) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_messages_setEncryptedTyping.peer)
}

// .mtproto.Bool typing = 2;
inline bool TL_messages_setEncryptedTyping::has_typing() const {
  return this != internal_default_instance() && typing_ != NULL;
}
inline void TL_messages_setEncryptedTyping::clear_typing() {
  if (GetArenaNoVirtual() == NULL && typing_ != NULL) delete typing_;
  typing_ = NULL;
}
inline const ::mtproto::Bool& TL_messages_setEncryptedTyping::typing() const {
  const ::mtproto::Bool* p = typing_;
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_setEncryptedTyping.typing)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::Bool*>(
      &::mtproto::_Bool_default_instance_);
}
inline ::mtproto::Bool* TL_messages_setEncryptedTyping::mutable_typing() {
  
  if (typing_ == NULL) {
    typing_ = new ::mtproto::Bool;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_messages_setEncryptedTyping.typing)
  return typing_;
}
inline ::mtproto::Bool* TL_messages_setEncryptedTyping::release_typing() {
  // @@protoc_insertion_point(field_release:mtproto.TL_messages_setEncryptedTyping.typing)
  
  ::mtproto::Bool* temp = typing_;
  typing_ = NULL;
  return temp;
}
inline void TL_messages_setEncryptedTyping::set_allocated_typing(::mtproto::Bool* typing) {
  delete typing_;
  typing_ = typing;
  if (typing) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_messages_setEncryptedTyping.typing)
}

// -------------------------------------------------------------------

// TL_messages_readEncryptedHistory

// .mtproto.InputEncryptedChat peer = 1;
inline bool TL_messages_readEncryptedHistory::has_peer() const {
  return this != internal_default_instance() && peer_ != NULL;
}
inline void TL_messages_readEncryptedHistory::clear_peer() {
  if (GetArenaNoVirtual() == NULL && peer_ != NULL) delete peer_;
  peer_ = NULL;
}
inline const ::mtproto::InputEncryptedChat& TL_messages_readEncryptedHistory::peer() const {
  const ::mtproto::InputEncryptedChat* p = peer_;
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_readEncryptedHistory.peer)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::InputEncryptedChat*>(
      &::mtproto::_InputEncryptedChat_default_instance_);
}
inline ::mtproto::InputEncryptedChat* TL_messages_readEncryptedHistory::mutable_peer() {
  
  if (peer_ == NULL) {
    peer_ = new ::mtproto::InputEncryptedChat;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_messages_readEncryptedHistory.peer)
  return peer_;
}
inline ::mtproto::InputEncryptedChat* TL_messages_readEncryptedHistory::release_peer() {
  // @@protoc_insertion_point(field_release:mtproto.TL_messages_readEncryptedHistory.peer)
  
  ::mtproto::InputEncryptedChat* temp = peer_;
  peer_ = NULL;
  return temp;
}
inline void TL_messages_readEncryptedHistory::set_allocated_peer(::mtproto::InputEncryptedChat* peer) {
  delete peer_;
  peer_ = peer;
  if (peer) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_messages_readEncryptedHistory.peer)
}

// int32 max_date = 2;
inline void TL_messages_readEncryptedHistory::clear_max_date() {
  max_date_ = 0;
}
inline ::google::protobuf::int32 TL_messages_readEncryptedHistory::max_date() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_readEncryptedHistory.max_date)
  return max_date_;
}
inline void TL_messages_readEncryptedHistory::set_max_date(::google::protobuf::int32 value) {
  
  max_date_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_readEncryptedHistory.max_date)
}

// -------------------------------------------------------------------

// TL_messages_sendEncrypted

// .mtproto.InputEncryptedChat peer = 1;
inline bool TL_messages_sendEncrypted::has_peer() const {
  return this != internal_default_instance() && peer_ != NULL;
}
inline void TL_messages_sendEncrypted::clear_peer() {
  if (GetArenaNoVirtual() == NULL && peer_ != NULL) delete peer_;
  peer_ = NULL;
}
inline const ::mtproto::InputEncryptedChat& TL_messages_sendEncrypted::peer() const {
  const ::mtproto::InputEncryptedChat* p = peer_;
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_sendEncrypted.peer)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::InputEncryptedChat*>(
      &::mtproto::_InputEncryptedChat_default_instance_);
}
inline ::mtproto::InputEncryptedChat* TL_messages_sendEncrypted::mutable_peer() {
  
  if (peer_ == NULL) {
    peer_ = new ::mtproto::InputEncryptedChat;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_messages_sendEncrypted.peer)
  return peer_;
}
inline ::mtproto::InputEncryptedChat* TL_messages_sendEncrypted::release_peer() {
  // @@protoc_insertion_point(field_release:mtproto.TL_messages_sendEncrypted.peer)
  
  ::mtproto::InputEncryptedChat* temp = peer_;
  peer_ = NULL;
  return temp;
}
inline void TL_messages_sendEncrypted::set_allocated_peer(::mtproto::InputEncryptedChat* peer) {
  delete peer_;
  peer_ = peer;
  if (peer) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_messages_sendEncrypted.peer)
}

// int64 random_id = 2;
inline void TL_messages_sendEncrypted::clear_random_id() {
  random_id_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 TL_messages_sendEncrypted::random_id() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_sendEncrypted.random_id)
  return random_id_;
}
inline void TL_messages_sendEncrypted::set_random_id(::google::protobuf::int64 value) {
  
  random_id_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_sendEncrypted.random_id)
}

// bytes data = 3;
inline void TL_messages_sendEncrypted::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& TL_messages_sendEncrypted::data() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_sendEncrypted.data)
  return data_.GetNoArena();
}
inline void TL_messages_sendEncrypted::set_data(const ::std::string& value) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_sendEncrypted.data)
}
#if LANG_CXX11
inline void TL_messages_sendEncrypted::set_data(::std::string&& value) {
  
  data_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mtproto.TL_messages_sendEncrypted.data)
}
#endif
inline void TL_messages_sendEncrypted::set_data(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtproto.TL_messages_sendEncrypted.data)
}
inline void TL_messages_sendEncrypted::set_data(const void* value, size_t size) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtproto.TL_messages_sendEncrypted.data)
}
inline ::std::string* TL_messages_sendEncrypted::mutable_data() {
  
  // @@protoc_insertion_point(field_mutable:mtproto.TL_messages_sendEncrypted.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TL_messages_sendEncrypted::release_data() {
  // @@protoc_insertion_point(field_release:mtproto.TL_messages_sendEncrypted.data)
  
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TL_messages_sendEncrypted::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    
  } else {
    
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_messages_sendEncrypted.data)
}

// -------------------------------------------------------------------

// TL_messages_sendEncryptedFile

// .mtproto.InputEncryptedChat peer = 1;
inline bool TL_messages_sendEncryptedFile::has_peer() const {
  return this != internal_default_instance() && peer_ != NULL;
}
inline void TL_messages_sendEncryptedFile::clear_peer() {
  if (GetArenaNoVirtual() == NULL && peer_ != NULL) delete peer_;
  peer_ = NULL;
}
inline const ::mtproto::InputEncryptedChat& TL_messages_sendEncryptedFile::peer() const {
  const ::mtproto::InputEncryptedChat* p = peer_;
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_sendEncryptedFile.peer)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::InputEncryptedChat*>(
      &::mtproto::_InputEncryptedChat_default_instance_);
}
inline ::mtproto::InputEncryptedChat* TL_messages_sendEncryptedFile::mutable_peer() {
  
  if (peer_ == NULL) {
    peer_ = new ::mtproto::InputEncryptedChat;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_messages_sendEncryptedFile.peer)
  return peer_;
}
inline ::mtproto::InputEncryptedChat* TL_messages_sendEncryptedFile::release_peer() {
  // @@protoc_insertion_point(field_release:mtproto.TL_messages_sendEncryptedFile.peer)
  
  ::mtproto::InputEncryptedChat* temp = peer_;
  peer_ = NULL;
  return temp;
}
inline void TL_messages_sendEncryptedFile::set_allocated_peer(::mtproto::InputEncryptedChat* peer) {
  delete peer_;
  peer_ = peer;
  if (peer) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_messages_sendEncryptedFile.peer)
}

// int64 random_id = 2;
inline void TL_messages_sendEncryptedFile::clear_random_id() {
  random_id_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 TL_messages_sendEncryptedFile::random_id() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_sendEncryptedFile.random_id)
  return random_id_;
}
inline void TL_messages_sendEncryptedFile::set_random_id(::google::protobuf::int64 value) {
  
  random_id_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_sendEncryptedFile.random_id)
}

// bytes data = 3;
inline void TL_messages_sendEncryptedFile::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& TL_messages_sendEncryptedFile::data() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_sendEncryptedFile.data)
  return data_.GetNoArena();
}
inline void TL_messages_sendEncryptedFile::set_data(const ::std::string& value) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_sendEncryptedFile.data)
}
#if LANG_CXX11
inline void TL_messages_sendEncryptedFile::set_data(::std::string&& value) {
  
  data_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mtproto.TL_messages_sendEncryptedFile.data)
}
#endif
inline void TL_messages_sendEncryptedFile::set_data(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtproto.TL_messages_sendEncryptedFile.data)
}
inline void TL_messages_sendEncryptedFile::set_data(const void* value, size_t size) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtproto.TL_messages_sendEncryptedFile.data)
}
inline ::std::string* TL_messages_sendEncryptedFile::mutable_data() {
  
  // @@protoc_insertion_point(field_mutable:mtproto.TL_messages_sendEncryptedFile.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TL_messages_sendEncryptedFile::release_data() {
  // @@protoc_insertion_point(field_release:mtproto.TL_messages_sendEncryptedFile.data)
  
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TL_messages_sendEncryptedFile::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    
  } else {
    
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_messages_sendEncryptedFile.data)
}

// .mtproto.InputEncryptedFile file = 4;
inline bool TL_messages_sendEncryptedFile::has_file() const {
  return this != internal_default_instance() && file_ != NULL;
}
inline void TL_messages_sendEncryptedFile::clear_file() {
  if (GetArenaNoVirtual() == NULL && file_ != NULL) delete file_;
  file_ = NULL;
}
inline const ::mtproto::InputEncryptedFile& TL_messages_sendEncryptedFile::file() const {
  const ::mtproto::InputEncryptedFile* p = file_;
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_sendEncryptedFile.file)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::InputEncryptedFile*>(
      &::mtproto::_InputEncryptedFile_default_instance_);
}
inline ::mtproto::InputEncryptedFile* TL_messages_sendEncryptedFile::mutable_file() {
  
  if (file_ == NULL) {
    file_ = new ::mtproto::InputEncryptedFile;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_messages_sendEncryptedFile.file)
  return file_;
}
inline ::mtproto::InputEncryptedFile* TL_messages_sendEncryptedFile::release_file() {
  // @@protoc_insertion_point(field_release:mtproto.TL_messages_sendEncryptedFile.file)
  
  ::mtproto::InputEncryptedFile* temp = file_;
  file_ = NULL;
  return temp;
}
inline void TL_messages_sendEncryptedFile::set_allocated_file(::mtproto::InputEncryptedFile* file) {
  delete file_;
  file_ = file;
  if (file) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_messages_sendEncryptedFile.file)
}

// -------------------------------------------------------------------

// TL_messages_sendEncryptedService

// .mtproto.InputEncryptedChat peer = 1;
inline bool TL_messages_sendEncryptedService::has_peer() const {
  return this != internal_default_instance() && peer_ != NULL;
}
inline void TL_messages_sendEncryptedService::clear_peer() {
  if (GetArenaNoVirtual() == NULL && peer_ != NULL) delete peer_;
  peer_ = NULL;
}
inline const ::mtproto::InputEncryptedChat& TL_messages_sendEncryptedService::peer() const {
  const ::mtproto::InputEncryptedChat* p = peer_;
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_sendEncryptedService.peer)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::InputEncryptedChat*>(
      &::mtproto::_InputEncryptedChat_default_instance_);
}
inline ::mtproto::InputEncryptedChat* TL_messages_sendEncryptedService::mutable_peer() {
  
  if (peer_ == NULL) {
    peer_ = new ::mtproto::InputEncryptedChat;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_messages_sendEncryptedService.peer)
  return peer_;
}
inline ::mtproto::InputEncryptedChat* TL_messages_sendEncryptedService::release_peer() {
  // @@protoc_insertion_point(field_release:mtproto.TL_messages_sendEncryptedService.peer)
  
  ::mtproto::InputEncryptedChat* temp = peer_;
  peer_ = NULL;
  return temp;
}
inline void TL_messages_sendEncryptedService::set_allocated_peer(::mtproto::InputEncryptedChat* peer) {
  delete peer_;
  peer_ = peer;
  if (peer) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_messages_sendEncryptedService.peer)
}

// int64 random_id = 2;
inline void TL_messages_sendEncryptedService::clear_random_id() {
  random_id_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 TL_messages_sendEncryptedService::random_id() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_sendEncryptedService.random_id)
  return random_id_;
}
inline void TL_messages_sendEncryptedService::set_random_id(::google::protobuf::int64 value) {
  
  random_id_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_sendEncryptedService.random_id)
}

// bytes data = 3;
inline void TL_messages_sendEncryptedService::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& TL_messages_sendEncryptedService::data() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_sendEncryptedService.data)
  return data_.GetNoArena();
}
inline void TL_messages_sendEncryptedService::set_data(const ::std::string& value) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_sendEncryptedService.data)
}
#if LANG_CXX11
inline void TL_messages_sendEncryptedService::set_data(::std::string&& value) {
  
  data_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mtproto.TL_messages_sendEncryptedService.data)
}
#endif
inline void TL_messages_sendEncryptedService::set_data(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtproto.TL_messages_sendEncryptedService.data)
}
inline void TL_messages_sendEncryptedService::set_data(const void* value, size_t size) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtproto.TL_messages_sendEncryptedService.data)
}
inline ::std::string* TL_messages_sendEncryptedService::mutable_data() {
  
  // @@protoc_insertion_point(field_mutable:mtproto.TL_messages_sendEncryptedService.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TL_messages_sendEncryptedService::release_data() {
  // @@protoc_insertion_point(field_release:mtproto.TL_messages_sendEncryptedService.data)
  
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TL_messages_sendEncryptedService::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    
  } else {
    
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_messages_sendEncryptedService.data)
}

// -------------------------------------------------------------------

// TL_messages_receivedQueue

// int32 max_qts = 1;
inline void TL_messages_receivedQueue::clear_max_qts() {
  max_qts_ = 0;
}
inline ::google::protobuf::int32 TL_messages_receivedQueue::max_qts() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_receivedQueue.max_qts)
  return max_qts_;
}
inline void TL_messages_receivedQueue::set_max_qts(::google::protobuf::int32 value) {
  
  max_qts_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_receivedQueue.max_qts)
}

// -------------------------------------------------------------------

// TL_messages_reportEncryptedSpam

// .mtproto.InputEncryptedChat peer = 1;
inline bool TL_messages_reportEncryptedSpam::has_peer() const {
  return this != internal_default_instance() && peer_ != NULL;
}
inline void TL_messages_reportEncryptedSpam::clear_peer() {
  if (GetArenaNoVirtual() == NULL && peer_ != NULL) delete peer_;
  peer_ = NULL;
}
inline const ::mtproto::InputEncryptedChat& TL_messages_reportEncryptedSpam::peer() const {
  const ::mtproto::InputEncryptedChat* p = peer_;
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_reportEncryptedSpam.peer)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::InputEncryptedChat*>(
      &::mtproto::_InputEncryptedChat_default_instance_);
}
inline ::mtproto::InputEncryptedChat* TL_messages_reportEncryptedSpam::mutable_peer() {
  
  if (peer_ == NULL) {
    peer_ = new ::mtproto::InputEncryptedChat;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_messages_reportEncryptedSpam.peer)
  return peer_;
}
inline ::mtproto::InputEncryptedChat* TL_messages_reportEncryptedSpam::release_peer() {
  // @@protoc_insertion_point(field_release:mtproto.TL_messages_reportEncryptedSpam.peer)
  
  ::mtproto::InputEncryptedChat* temp = peer_;
  peer_ = NULL;
  return temp;
}
inline void TL_messages_reportEncryptedSpam::set_allocated_peer(::mtproto::InputEncryptedChat* peer) {
  delete peer_;
  peer_ = peer;
  if (peer) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_messages_reportEncryptedSpam.peer)
}

// -------------------------------------------------------------------

// TL_messages_readMessageContents

// repeated int32 id = 1;
inline int TL_messages_readMessageContents::id_size() const {
  return id_.size();
}
inline void TL_messages_readMessageContents::clear_id() {
  id_.Clear();
}
inline ::google::protobuf::int32 TL_messages_readMessageContents::id(int index) const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_readMessageContents.id)
  return id_.Get(index);
}
inline void TL_messages_readMessageContents::set_id(int index, ::google::protobuf::int32 value) {
  id_.Set(index, value);
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_readMessageContents.id)
}
inline void TL_messages_readMessageContents::add_id(::google::protobuf::int32 value) {
  id_.Add(value);
  // @@protoc_insertion_point(field_add:mtproto.TL_messages_readMessageContents.id)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
TL_messages_readMessageContents::id() const {
  // @@protoc_insertion_point(field_list:mtproto.TL_messages_readMessageContents.id)
  return id_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
TL_messages_readMessageContents::mutable_id() {
  // @@protoc_insertion_point(field_mutable_list:mtproto.TL_messages_readMessageContents.id)
  return &id_;
}

// -------------------------------------------------------------------

// TL_messages_getStickers

// string emoticon = 1;
inline void TL_messages_getStickers::clear_emoticon() {
  emoticon_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& TL_messages_getStickers::emoticon() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_getStickers.emoticon)
  return emoticon_.GetNoArena();
}
inline void TL_messages_getStickers::set_emoticon(const ::std::string& value) {
  
  emoticon_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_getStickers.emoticon)
}
#if LANG_CXX11
inline void TL_messages_getStickers::set_emoticon(::std::string&& value) {
  
  emoticon_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mtproto.TL_messages_getStickers.emoticon)
}
#endif
inline void TL_messages_getStickers::set_emoticon(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  emoticon_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtproto.TL_messages_getStickers.emoticon)
}
inline void TL_messages_getStickers::set_emoticon(const char* value, size_t size) {
  
  emoticon_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtproto.TL_messages_getStickers.emoticon)
}
inline ::std::string* TL_messages_getStickers::mutable_emoticon() {
  
  // @@protoc_insertion_point(field_mutable:mtproto.TL_messages_getStickers.emoticon)
  return emoticon_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TL_messages_getStickers::release_emoticon() {
  // @@protoc_insertion_point(field_release:mtproto.TL_messages_getStickers.emoticon)
  
  return emoticon_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TL_messages_getStickers::set_allocated_emoticon(::std::string* emoticon) {
  if (emoticon != NULL) {
    
  } else {
    
  }
  emoticon_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), emoticon);
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_messages_getStickers.emoticon)
}

// int32 hash = 2;
inline void TL_messages_getStickers::clear_hash() {
  hash_ = 0;
}
inline ::google::protobuf::int32 TL_messages_getStickers::hash() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_getStickers.hash)
  return hash_;
}
inline void TL_messages_getStickers::set_hash(::google::protobuf::int32 value) {
  
  hash_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_getStickers.hash)
}

// -------------------------------------------------------------------

// TL_messages_getAllStickers

// int32 hash = 1;
inline void TL_messages_getAllStickers::clear_hash() {
  hash_ = 0;
}
inline ::google::protobuf::int32 TL_messages_getAllStickers::hash() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_getAllStickers.hash)
  return hash_;
}
inline void TL_messages_getAllStickers::set_hash(::google::protobuf::int32 value) {
  
  hash_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_getAllStickers.hash)
}

// -------------------------------------------------------------------

// TL_messages_getWebPagePreview

// string message = 2;
inline void TL_messages_getWebPagePreview::clear_message() {
  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& TL_messages_getWebPagePreview::message() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_getWebPagePreview.message)
  return message_.GetNoArena();
}
inline void TL_messages_getWebPagePreview::set_message(const ::std::string& value) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_getWebPagePreview.message)
}
#if LANG_CXX11
inline void TL_messages_getWebPagePreview::set_message(::std::string&& value) {
  
  message_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mtproto.TL_messages_getWebPagePreview.message)
}
#endif
inline void TL_messages_getWebPagePreview::set_message(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtproto.TL_messages_getWebPagePreview.message)
}
inline void TL_messages_getWebPagePreview::set_message(const char* value, size_t size) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtproto.TL_messages_getWebPagePreview.message)
}
inline ::std::string* TL_messages_getWebPagePreview::mutable_message() {
  
  // @@protoc_insertion_point(field_mutable:mtproto.TL_messages_getWebPagePreview.message)
  return message_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TL_messages_getWebPagePreview::release_message() {
  // @@protoc_insertion_point(field_release:mtproto.TL_messages_getWebPagePreview.message)
  
  return message_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TL_messages_getWebPagePreview::set_allocated_message(::std::string* message) {
  if (message != NULL) {
    
  } else {
    
  }
  message_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), message);
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_messages_getWebPagePreview.message)
}

// repeated .mtproto.MessageEntity entities = 3;
inline int TL_messages_getWebPagePreview::entities_size() const {
  return entities_.size();
}
inline void TL_messages_getWebPagePreview::clear_entities() {
  entities_.Clear();
}
inline const ::mtproto::MessageEntity& TL_messages_getWebPagePreview::entities(int index) const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_getWebPagePreview.entities)
  return entities_.Get(index);
}
inline ::mtproto::MessageEntity* TL_messages_getWebPagePreview::mutable_entities(int index) {
  // @@protoc_insertion_point(field_mutable:mtproto.TL_messages_getWebPagePreview.entities)
  return entities_.Mutable(index);
}
inline ::mtproto::MessageEntity* TL_messages_getWebPagePreview::add_entities() {
  // @@protoc_insertion_point(field_add:mtproto.TL_messages_getWebPagePreview.entities)
  return entities_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::mtproto::MessageEntity >*
TL_messages_getWebPagePreview::mutable_entities() {
  // @@protoc_insertion_point(field_mutable_list:mtproto.TL_messages_getWebPagePreview.entities)
  return &entities_;
}
inline const ::google::protobuf::RepeatedPtrField< ::mtproto::MessageEntity >&
TL_messages_getWebPagePreview::entities() const {
  // @@protoc_insertion_point(field_list:mtproto.TL_messages_getWebPagePreview.entities)
  return entities_;
}

// -------------------------------------------------------------------

// TL_messages_exportChatInvite

// int32 chat_id = 1;
inline void TL_messages_exportChatInvite::clear_chat_id() {
  chat_id_ = 0;
}
inline ::google::protobuf::int32 TL_messages_exportChatInvite::chat_id() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_exportChatInvite.chat_id)
  return chat_id_;
}
inline void TL_messages_exportChatInvite::set_chat_id(::google::protobuf::int32 value) {
  
  chat_id_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_exportChatInvite.chat_id)
}

// -------------------------------------------------------------------

// TL_messages_checkChatInvite

// string hash = 1;
inline void TL_messages_checkChatInvite::clear_hash() {
  hash_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& TL_messages_checkChatInvite::hash() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_checkChatInvite.hash)
  return hash_.GetNoArena();
}
inline void TL_messages_checkChatInvite::set_hash(const ::std::string& value) {
  
  hash_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_checkChatInvite.hash)
}
#if LANG_CXX11
inline void TL_messages_checkChatInvite::set_hash(::std::string&& value) {
  
  hash_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mtproto.TL_messages_checkChatInvite.hash)
}
#endif
inline void TL_messages_checkChatInvite::set_hash(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  hash_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtproto.TL_messages_checkChatInvite.hash)
}
inline void TL_messages_checkChatInvite::set_hash(const char* value, size_t size) {
  
  hash_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtproto.TL_messages_checkChatInvite.hash)
}
inline ::std::string* TL_messages_checkChatInvite::mutable_hash() {
  
  // @@protoc_insertion_point(field_mutable:mtproto.TL_messages_checkChatInvite.hash)
  return hash_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TL_messages_checkChatInvite::release_hash() {
  // @@protoc_insertion_point(field_release:mtproto.TL_messages_checkChatInvite.hash)
  
  return hash_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TL_messages_checkChatInvite::set_allocated_hash(::std::string* hash) {
  if (hash != NULL) {
    
  } else {
    
  }
  hash_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), hash);
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_messages_checkChatInvite.hash)
}

// -------------------------------------------------------------------

// TL_messages_importChatInvite

// string hash = 1;
inline void TL_messages_importChatInvite::clear_hash() {
  hash_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& TL_messages_importChatInvite::hash() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_importChatInvite.hash)
  return hash_.GetNoArena();
}
inline void TL_messages_importChatInvite::set_hash(const ::std::string& value) {
  
  hash_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_importChatInvite.hash)
}
#if LANG_CXX11
inline void TL_messages_importChatInvite::set_hash(::std::string&& value) {
  
  hash_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mtproto.TL_messages_importChatInvite.hash)
}
#endif
inline void TL_messages_importChatInvite::set_hash(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  hash_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtproto.TL_messages_importChatInvite.hash)
}
inline void TL_messages_importChatInvite::set_hash(const char* value, size_t size) {
  
  hash_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtproto.TL_messages_importChatInvite.hash)
}
inline ::std::string* TL_messages_importChatInvite::mutable_hash() {
  
  // @@protoc_insertion_point(field_mutable:mtproto.TL_messages_importChatInvite.hash)
  return hash_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TL_messages_importChatInvite::release_hash() {
  // @@protoc_insertion_point(field_release:mtproto.TL_messages_importChatInvite.hash)
  
  return hash_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TL_messages_importChatInvite::set_allocated_hash(::std::string* hash) {
  if (hash != NULL) {
    
  } else {
    
  }
  hash_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), hash);
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_messages_importChatInvite.hash)
}

// -------------------------------------------------------------------

// TL_messages_getStickerSet

// .mtproto.InputStickerSet stickerset = 1;
inline bool TL_messages_getStickerSet::has_stickerset() const {
  return this != internal_default_instance() && stickerset_ != NULL;
}
inline void TL_messages_getStickerSet::clear_stickerset() {
  if (GetArenaNoVirtual() == NULL && stickerset_ != NULL) delete stickerset_;
  stickerset_ = NULL;
}
inline const ::mtproto::InputStickerSet& TL_messages_getStickerSet::stickerset() const {
  const ::mtproto::InputStickerSet* p = stickerset_;
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_getStickerSet.stickerset)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::InputStickerSet*>(
      &::mtproto::_InputStickerSet_default_instance_);
}
inline ::mtproto::InputStickerSet* TL_messages_getStickerSet::mutable_stickerset() {
  
  if (stickerset_ == NULL) {
    stickerset_ = new ::mtproto::InputStickerSet;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_messages_getStickerSet.stickerset)
  return stickerset_;
}
inline ::mtproto::InputStickerSet* TL_messages_getStickerSet::release_stickerset() {
  // @@protoc_insertion_point(field_release:mtproto.TL_messages_getStickerSet.stickerset)
  
  ::mtproto::InputStickerSet* temp = stickerset_;
  stickerset_ = NULL;
  return temp;
}
inline void TL_messages_getStickerSet::set_allocated_stickerset(::mtproto::InputStickerSet* stickerset) {
  delete stickerset_;
  stickerset_ = stickerset;
  if (stickerset) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_messages_getStickerSet.stickerset)
}

// -------------------------------------------------------------------

// TL_messages_installStickerSet

// .mtproto.InputStickerSet stickerset = 1;
inline bool TL_messages_installStickerSet::has_stickerset() const {
  return this != internal_default_instance() && stickerset_ != NULL;
}
inline void TL_messages_installStickerSet::clear_stickerset() {
  if (GetArenaNoVirtual() == NULL && stickerset_ != NULL) delete stickerset_;
  stickerset_ = NULL;
}
inline const ::mtproto::InputStickerSet& TL_messages_installStickerSet::stickerset() const {
  const ::mtproto::InputStickerSet* p = stickerset_;
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_installStickerSet.stickerset)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::InputStickerSet*>(
      &::mtproto::_InputStickerSet_default_instance_);
}
inline ::mtproto::InputStickerSet* TL_messages_installStickerSet::mutable_stickerset() {
  
  if (stickerset_ == NULL) {
    stickerset_ = new ::mtproto::InputStickerSet;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_messages_installStickerSet.stickerset)
  return stickerset_;
}
inline ::mtproto::InputStickerSet* TL_messages_installStickerSet::release_stickerset() {
  // @@protoc_insertion_point(field_release:mtproto.TL_messages_installStickerSet.stickerset)
  
  ::mtproto::InputStickerSet* temp = stickerset_;
  stickerset_ = NULL;
  return temp;
}
inline void TL_messages_installStickerSet::set_allocated_stickerset(::mtproto::InputStickerSet* stickerset) {
  delete stickerset_;
  stickerset_ = stickerset;
  if (stickerset) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_messages_installStickerSet.stickerset)
}

// .mtproto.Bool archived = 2;
inline bool TL_messages_installStickerSet::has_archived() const {
  return this != internal_default_instance() && archived_ != NULL;
}
inline void TL_messages_installStickerSet::clear_archived() {
  if (GetArenaNoVirtual() == NULL && archived_ != NULL) delete archived_;
  archived_ = NULL;
}
inline const ::mtproto::Bool& TL_messages_installStickerSet::archived() const {
  const ::mtproto::Bool* p = archived_;
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_installStickerSet.archived)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::Bool*>(
      &::mtproto::_Bool_default_instance_);
}
inline ::mtproto::Bool* TL_messages_installStickerSet::mutable_archived() {
  
  if (archived_ == NULL) {
    archived_ = new ::mtproto::Bool;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_messages_installStickerSet.archived)
  return archived_;
}
inline ::mtproto::Bool* TL_messages_installStickerSet::release_archived() {
  // @@protoc_insertion_point(field_release:mtproto.TL_messages_installStickerSet.archived)
  
  ::mtproto::Bool* temp = archived_;
  archived_ = NULL;
  return temp;
}
inline void TL_messages_installStickerSet::set_allocated_archived(::mtproto::Bool* archived) {
  delete archived_;
  archived_ = archived;
  if (archived) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_messages_installStickerSet.archived)
}

// -------------------------------------------------------------------

// TL_messages_uninstallStickerSet

// .mtproto.InputStickerSet stickerset = 1;
inline bool TL_messages_uninstallStickerSet::has_stickerset() const {
  return this != internal_default_instance() && stickerset_ != NULL;
}
inline void TL_messages_uninstallStickerSet::clear_stickerset() {
  if (GetArenaNoVirtual() == NULL && stickerset_ != NULL) delete stickerset_;
  stickerset_ = NULL;
}
inline const ::mtproto::InputStickerSet& TL_messages_uninstallStickerSet::stickerset() const {
  const ::mtproto::InputStickerSet* p = stickerset_;
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_uninstallStickerSet.stickerset)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::InputStickerSet*>(
      &::mtproto::_InputStickerSet_default_instance_);
}
inline ::mtproto::InputStickerSet* TL_messages_uninstallStickerSet::mutable_stickerset() {
  
  if (stickerset_ == NULL) {
    stickerset_ = new ::mtproto::InputStickerSet;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_messages_uninstallStickerSet.stickerset)
  return stickerset_;
}
inline ::mtproto::InputStickerSet* TL_messages_uninstallStickerSet::release_stickerset() {
  // @@protoc_insertion_point(field_release:mtproto.TL_messages_uninstallStickerSet.stickerset)
  
  ::mtproto::InputStickerSet* temp = stickerset_;
  stickerset_ = NULL;
  return temp;
}
inline void TL_messages_uninstallStickerSet::set_allocated_stickerset(::mtproto::InputStickerSet* stickerset) {
  delete stickerset_;
  stickerset_ = stickerset;
  if (stickerset) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_messages_uninstallStickerSet.stickerset)
}

// -------------------------------------------------------------------

// TL_messages_startBot

// .mtproto.InputUser bot = 1;
inline bool TL_messages_startBot::has_bot() const {
  return this != internal_default_instance() && bot_ != NULL;
}
inline void TL_messages_startBot::clear_bot() {
  if (GetArenaNoVirtual() == NULL && bot_ != NULL) delete bot_;
  bot_ = NULL;
}
inline const ::mtproto::InputUser& TL_messages_startBot::bot() const {
  const ::mtproto::InputUser* p = bot_;
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_startBot.bot)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::InputUser*>(
      &::mtproto::_InputUser_default_instance_);
}
inline ::mtproto::InputUser* TL_messages_startBot::mutable_bot() {
  
  if (bot_ == NULL) {
    bot_ = new ::mtproto::InputUser;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_messages_startBot.bot)
  return bot_;
}
inline ::mtproto::InputUser* TL_messages_startBot::release_bot() {
  // @@protoc_insertion_point(field_release:mtproto.TL_messages_startBot.bot)
  
  ::mtproto::InputUser* temp = bot_;
  bot_ = NULL;
  return temp;
}
inline void TL_messages_startBot::set_allocated_bot(::mtproto::InputUser* bot) {
  delete bot_;
  bot_ = bot;
  if (bot) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_messages_startBot.bot)
}

// .mtproto.InputPeer peer = 2;
inline bool TL_messages_startBot::has_peer() const {
  return this != internal_default_instance() && peer_ != NULL;
}
inline void TL_messages_startBot::clear_peer() {
  if (GetArenaNoVirtual() == NULL && peer_ != NULL) delete peer_;
  peer_ = NULL;
}
inline const ::mtproto::InputPeer& TL_messages_startBot::peer() const {
  const ::mtproto::InputPeer* p = peer_;
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_startBot.peer)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::InputPeer*>(
      &::mtproto::_InputPeer_default_instance_);
}
inline ::mtproto::InputPeer* TL_messages_startBot::mutable_peer() {
  
  if (peer_ == NULL) {
    peer_ = new ::mtproto::InputPeer;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_messages_startBot.peer)
  return peer_;
}
inline ::mtproto::InputPeer* TL_messages_startBot::release_peer() {
  // @@protoc_insertion_point(field_release:mtproto.TL_messages_startBot.peer)
  
  ::mtproto::InputPeer* temp = peer_;
  peer_ = NULL;
  return temp;
}
inline void TL_messages_startBot::set_allocated_peer(::mtproto::InputPeer* peer) {
  delete peer_;
  peer_ = peer;
  if (peer) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_messages_startBot.peer)
}

// int64 random_id = 3;
inline void TL_messages_startBot::clear_random_id() {
  random_id_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 TL_messages_startBot::random_id() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_startBot.random_id)
  return random_id_;
}
inline void TL_messages_startBot::set_random_id(::google::protobuf::int64 value) {
  
  random_id_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_startBot.random_id)
}

// string start_param = 4;
inline void TL_messages_startBot::clear_start_param() {
  start_param_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& TL_messages_startBot::start_param() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_startBot.start_param)
  return start_param_.GetNoArena();
}
inline void TL_messages_startBot::set_start_param(const ::std::string& value) {
  
  start_param_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_startBot.start_param)
}
#if LANG_CXX11
inline void TL_messages_startBot::set_start_param(::std::string&& value) {
  
  start_param_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mtproto.TL_messages_startBot.start_param)
}
#endif
inline void TL_messages_startBot::set_start_param(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  start_param_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtproto.TL_messages_startBot.start_param)
}
inline void TL_messages_startBot::set_start_param(const char* value, size_t size) {
  
  start_param_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtproto.TL_messages_startBot.start_param)
}
inline ::std::string* TL_messages_startBot::mutable_start_param() {
  
  // @@protoc_insertion_point(field_mutable:mtproto.TL_messages_startBot.start_param)
  return start_param_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TL_messages_startBot::release_start_param() {
  // @@protoc_insertion_point(field_release:mtproto.TL_messages_startBot.start_param)
  
  return start_param_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TL_messages_startBot::set_allocated_start_param(::std::string* start_param) {
  if (start_param != NULL) {
    
  } else {
    
  }
  start_param_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), start_param);
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_messages_startBot.start_param)
}

// -------------------------------------------------------------------

// TL_messages_getMessagesViews

// .mtproto.InputPeer peer = 1;
inline bool TL_messages_getMessagesViews::has_peer() const {
  return this != internal_default_instance() && peer_ != NULL;
}
inline void TL_messages_getMessagesViews::clear_peer() {
  if (GetArenaNoVirtual() == NULL && peer_ != NULL) delete peer_;
  peer_ = NULL;
}
inline const ::mtproto::InputPeer& TL_messages_getMessagesViews::peer() const {
  const ::mtproto::InputPeer* p = peer_;
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_getMessagesViews.peer)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::InputPeer*>(
      &::mtproto::_InputPeer_default_instance_);
}
inline ::mtproto::InputPeer* TL_messages_getMessagesViews::mutable_peer() {
  
  if (peer_ == NULL) {
    peer_ = new ::mtproto::InputPeer;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_messages_getMessagesViews.peer)
  return peer_;
}
inline ::mtproto::InputPeer* TL_messages_getMessagesViews::release_peer() {
  // @@protoc_insertion_point(field_release:mtproto.TL_messages_getMessagesViews.peer)
  
  ::mtproto::InputPeer* temp = peer_;
  peer_ = NULL;
  return temp;
}
inline void TL_messages_getMessagesViews::set_allocated_peer(::mtproto::InputPeer* peer) {
  delete peer_;
  peer_ = peer;
  if (peer) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_messages_getMessagesViews.peer)
}

// repeated int32 id = 2;
inline int TL_messages_getMessagesViews::id_size() const {
  return id_.size();
}
inline void TL_messages_getMessagesViews::clear_id() {
  id_.Clear();
}
inline ::google::protobuf::int32 TL_messages_getMessagesViews::id(int index) const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_getMessagesViews.id)
  return id_.Get(index);
}
inline void TL_messages_getMessagesViews::set_id(int index, ::google::protobuf::int32 value) {
  id_.Set(index, value);
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_getMessagesViews.id)
}
inline void TL_messages_getMessagesViews::add_id(::google::protobuf::int32 value) {
  id_.Add(value);
  // @@protoc_insertion_point(field_add:mtproto.TL_messages_getMessagesViews.id)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
TL_messages_getMessagesViews::id() const {
  // @@protoc_insertion_point(field_list:mtproto.TL_messages_getMessagesViews.id)
  return id_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
TL_messages_getMessagesViews::mutable_id() {
  // @@protoc_insertion_point(field_mutable_list:mtproto.TL_messages_getMessagesViews.id)
  return &id_;
}

// .mtproto.Bool increment = 3;
inline bool TL_messages_getMessagesViews::has_increment() const {
  return this != internal_default_instance() && increment_ != NULL;
}
inline void TL_messages_getMessagesViews::clear_increment() {
  if (GetArenaNoVirtual() == NULL && increment_ != NULL) delete increment_;
  increment_ = NULL;
}
inline const ::mtproto::Bool& TL_messages_getMessagesViews::increment() const {
  const ::mtproto::Bool* p = increment_;
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_getMessagesViews.increment)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::Bool*>(
      &::mtproto::_Bool_default_instance_);
}
inline ::mtproto::Bool* TL_messages_getMessagesViews::mutable_increment() {
  
  if (increment_ == NULL) {
    increment_ = new ::mtproto::Bool;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_messages_getMessagesViews.increment)
  return increment_;
}
inline ::mtproto::Bool* TL_messages_getMessagesViews::release_increment() {
  // @@protoc_insertion_point(field_release:mtproto.TL_messages_getMessagesViews.increment)
  
  ::mtproto::Bool* temp = increment_;
  increment_ = NULL;
  return temp;
}
inline void TL_messages_getMessagesViews::set_allocated_increment(::mtproto::Bool* increment) {
  delete increment_;
  increment_ = increment;
  if (increment) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_messages_getMessagesViews.increment)
}

// -------------------------------------------------------------------

// TL_messages_toggleChatAdmins

// int32 chat_id = 1;
inline void TL_messages_toggleChatAdmins::clear_chat_id() {
  chat_id_ = 0;
}
inline ::google::protobuf::int32 TL_messages_toggleChatAdmins::chat_id() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_toggleChatAdmins.chat_id)
  return chat_id_;
}
inline void TL_messages_toggleChatAdmins::set_chat_id(::google::protobuf::int32 value) {
  
  chat_id_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_toggleChatAdmins.chat_id)
}

// .mtproto.Bool enabled = 2;
inline bool TL_messages_toggleChatAdmins::has_enabled() const {
  return this != internal_default_instance() && enabled_ != NULL;
}
inline void TL_messages_toggleChatAdmins::clear_enabled() {
  if (GetArenaNoVirtual() == NULL && enabled_ != NULL) delete enabled_;
  enabled_ = NULL;
}
inline const ::mtproto::Bool& TL_messages_toggleChatAdmins::enabled() const {
  const ::mtproto::Bool* p = enabled_;
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_toggleChatAdmins.enabled)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::Bool*>(
      &::mtproto::_Bool_default_instance_);
}
inline ::mtproto::Bool* TL_messages_toggleChatAdmins::mutable_enabled() {
  
  if (enabled_ == NULL) {
    enabled_ = new ::mtproto::Bool;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_messages_toggleChatAdmins.enabled)
  return enabled_;
}
inline ::mtproto::Bool* TL_messages_toggleChatAdmins::release_enabled() {
  // @@protoc_insertion_point(field_release:mtproto.TL_messages_toggleChatAdmins.enabled)
  
  ::mtproto::Bool* temp = enabled_;
  enabled_ = NULL;
  return temp;
}
inline void TL_messages_toggleChatAdmins::set_allocated_enabled(::mtproto::Bool* enabled) {
  delete enabled_;
  enabled_ = enabled;
  if (enabled) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_messages_toggleChatAdmins.enabled)
}

// -------------------------------------------------------------------

// TL_messages_editChatAdmin

// int32 chat_id = 1;
inline void TL_messages_editChatAdmin::clear_chat_id() {
  chat_id_ = 0;
}
inline ::google::protobuf::int32 TL_messages_editChatAdmin::chat_id() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_editChatAdmin.chat_id)
  return chat_id_;
}
inline void TL_messages_editChatAdmin::set_chat_id(::google::protobuf::int32 value) {
  
  chat_id_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_editChatAdmin.chat_id)
}

// .mtproto.InputUser user_id = 2;
inline bool TL_messages_editChatAdmin::has_user_id() const {
  return this != internal_default_instance() && user_id_ != NULL;
}
inline void TL_messages_editChatAdmin::clear_user_id() {
  if (GetArenaNoVirtual() == NULL && user_id_ != NULL) delete user_id_;
  user_id_ = NULL;
}
inline const ::mtproto::InputUser& TL_messages_editChatAdmin::user_id() const {
  const ::mtproto::InputUser* p = user_id_;
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_editChatAdmin.user_id)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::InputUser*>(
      &::mtproto::_InputUser_default_instance_);
}
inline ::mtproto::InputUser* TL_messages_editChatAdmin::mutable_user_id() {
  
  if (user_id_ == NULL) {
    user_id_ = new ::mtproto::InputUser;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_messages_editChatAdmin.user_id)
  return user_id_;
}
inline ::mtproto::InputUser* TL_messages_editChatAdmin::release_user_id() {
  // @@protoc_insertion_point(field_release:mtproto.TL_messages_editChatAdmin.user_id)
  
  ::mtproto::InputUser* temp = user_id_;
  user_id_ = NULL;
  return temp;
}
inline void TL_messages_editChatAdmin::set_allocated_user_id(::mtproto::InputUser* user_id) {
  delete user_id_;
  user_id_ = user_id;
  if (user_id) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_messages_editChatAdmin.user_id)
}

// .mtproto.Bool is_admin = 3;
inline bool TL_messages_editChatAdmin::has_is_admin() const {
  return this != internal_default_instance() && is_admin_ != NULL;
}
inline void TL_messages_editChatAdmin::clear_is_admin() {
  if (GetArenaNoVirtual() == NULL && is_admin_ != NULL) delete is_admin_;
  is_admin_ = NULL;
}
inline const ::mtproto::Bool& TL_messages_editChatAdmin::is_admin() const {
  const ::mtproto::Bool* p = is_admin_;
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_editChatAdmin.is_admin)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::Bool*>(
      &::mtproto::_Bool_default_instance_);
}
inline ::mtproto::Bool* TL_messages_editChatAdmin::mutable_is_admin() {
  
  if (is_admin_ == NULL) {
    is_admin_ = new ::mtproto::Bool;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_messages_editChatAdmin.is_admin)
  return is_admin_;
}
inline ::mtproto::Bool* TL_messages_editChatAdmin::release_is_admin() {
  // @@protoc_insertion_point(field_release:mtproto.TL_messages_editChatAdmin.is_admin)
  
  ::mtproto::Bool* temp = is_admin_;
  is_admin_ = NULL;
  return temp;
}
inline void TL_messages_editChatAdmin::set_allocated_is_admin(::mtproto::Bool* is_admin) {
  delete is_admin_;
  is_admin_ = is_admin;
  if (is_admin) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_messages_editChatAdmin.is_admin)
}

// -------------------------------------------------------------------

// TL_messages_migrateChat

// int32 chat_id = 1;
inline void TL_messages_migrateChat::clear_chat_id() {
  chat_id_ = 0;
}
inline ::google::protobuf::int32 TL_messages_migrateChat::chat_id() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_migrateChat.chat_id)
  return chat_id_;
}
inline void TL_messages_migrateChat::set_chat_id(::google::protobuf::int32 value) {
  
  chat_id_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_migrateChat.chat_id)
}

// -------------------------------------------------------------------

// TL_messages_searchGlobal

// string q = 1;
inline void TL_messages_searchGlobal::clear_q() {
  q_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& TL_messages_searchGlobal::q() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_searchGlobal.q)
  return q_.GetNoArena();
}
inline void TL_messages_searchGlobal::set_q(const ::std::string& value) {
  
  q_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_searchGlobal.q)
}
#if LANG_CXX11
inline void TL_messages_searchGlobal::set_q(::std::string&& value) {
  
  q_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mtproto.TL_messages_searchGlobal.q)
}
#endif
inline void TL_messages_searchGlobal::set_q(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  q_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtproto.TL_messages_searchGlobal.q)
}
inline void TL_messages_searchGlobal::set_q(const char* value, size_t size) {
  
  q_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtproto.TL_messages_searchGlobal.q)
}
inline ::std::string* TL_messages_searchGlobal::mutable_q() {
  
  // @@protoc_insertion_point(field_mutable:mtproto.TL_messages_searchGlobal.q)
  return q_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TL_messages_searchGlobal::release_q() {
  // @@protoc_insertion_point(field_release:mtproto.TL_messages_searchGlobal.q)
  
  return q_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TL_messages_searchGlobal::set_allocated_q(::std::string* q) {
  if (q != NULL) {
    
  } else {
    
  }
  q_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), q);
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_messages_searchGlobal.q)
}

// int32 offset_date = 2;
inline void TL_messages_searchGlobal::clear_offset_date() {
  offset_date_ = 0;
}
inline ::google::protobuf::int32 TL_messages_searchGlobal::offset_date() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_searchGlobal.offset_date)
  return offset_date_;
}
inline void TL_messages_searchGlobal::set_offset_date(::google::protobuf::int32 value) {
  
  offset_date_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_searchGlobal.offset_date)
}

// .mtproto.InputPeer offset_peer = 3;
inline bool TL_messages_searchGlobal::has_offset_peer() const {
  return this != internal_default_instance() && offset_peer_ != NULL;
}
inline void TL_messages_searchGlobal::clear_offset_peer() {
  if (GetArenaNoVirtual() == NULL && offset_peer_ != NULL) delete offset_peer_;
  offset_peer_ = NULL;
}
inline const ::mtproto::InputPeer& TL_messages_searchGlobal::offset_peer() const {
  const ::mtproto::InputPeer* p = offset_peer_;
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_searchGlobal.offset_peer)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::InputPeer*>(
      &::mtproto::_InputPeer_default_instance_);
}
inline ::mtproto::InputPeer* TL_messages_searchGlobal::mutable_offset_peer() {
  
  if (offset_peer_ == NULL) {
    offset_peer_ = new ::mtproto::InputPeer;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_messages_searchGlobal.offset_peer)
  return offset_peer_;
}
inline ::mtproto::InputPeer* TL_messages_searchGlobal::release_offset_peer() {
  // @@protoc_insertion_point(field_release:mtproto.TL_messages_searchGlobal.offset_peer)
  
  ::mtproto::InputPeer* temp = offset_peer_;
  offset_peer_ = NULL;
  return temp;
}
inline void TL_messages_searchGlobal::set_allocated_offset_peer(::mtproto::InputPeer* offset_peer) {
  delete offset_peer_;
  offset_peer_ = offset_peer;
  if (offset_peer) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_messages_searchGlobal.offset_peer)
}

// int32 offset_id = 4;
inline void TL_messages_searchGlobal::clear_offset_id() {
  offset_id_ = 0;
}
inline ::google::protobuf::int32 TL_messages_searchGlobal::offset_id() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_searchGlobal.offset_id)
  return offset_id_;
}
inline void TL_messages_searchGlobal::set_offset_id(::google::protobuf::int32 value) {
  
  offset_id_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_searchGlobal.offset_id)
}

// int32 limit = 5;
inline void TL_messages_searchGlobal::clear_limit() {
  limit_ = 0;
}
inline ::google::protobuf::int32 TL_messages_searchGlobal::limit() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_searchGlobal.limit)
  return limit_;
}
inline void TL_messages_searchGlobal::set_limit(::google::protobuf::int32 value) {
  
  limit_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_searchGlobal.limit)
}

// -------------------------------------------------------------------

// TL_messages_reorderStickerSets

// bool masks = 2;
inline void TL_messages_reorderStickerSets::clear_masks() {
  masks_ = false;
}
inline bool TL_messages_reorderStickerSets::masks() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_reorderStickerSets.masks)
  return masks_;
}
inline void TL_messages_reorderStickerSets::set_masks(bool value) {
  
  masks_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_reorderStickerSets.masks)
}

// repeated int64 order = 3;
inline int TL_messages_reorderStickerSets::order_size() const {
  return order_.size();
}
inline void TL_messages_reorderStickerSets::clear_order() {
  order_.Clear();
}
inline ::google::protobuf::int64 TL_messages_reorderStickerSets::order(int index) const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_reorderStickerSets.order)
  return order_.Get(index);
}
inline void TL_messages_reorderStickerSets::set_order(int index, ::google::protobuf::int64 value) {
  order_.Set(index, value);
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_reorderStickerSets.order)
}
inline void TL_messages_reorderStickerSets::add_order(::google::protobuf::int64 value) {
  order_.Add(value);
  // @@protoc_insertion_point(field_add:mtproto.TL_messages_reorderStickerSets.order)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
TL_messages_reorderStickerSets::order() const {
  // @@protoc_insertion_point(field_list:mtproto.TL_messages_reorderStickerSets.order)
  return order_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
TL_messages_reorderStickerSets::mutable_order() {
  // @@protoc_insertion_point(field_mutable_list:mtproto.TL_messages_reorderStickerSets.order)
  return &order_;
}

// -------------------------------------------------------------------

// TL_messages_getDocumentByHash

// bytes sha256 = 1;
inline void TL_messages_getDocumentByHash::clear_sha256() {
  sha256_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& TL_messages_getDocumentByHash::sha256() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_getDocumentByHash.sha256)
  return sha256_.GetNoArena();
}
inline void TL_messages_getDocumentByHash::set_sha256(const ::std::string& value) {
  
  sha256_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_getDocumentByHash.sha256)
}
#if LANG_CXX11
inline void TL_messages_getDocumentByHash::set_sha256(::std::string&& value) {
  
  sha256_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mtproto.TL_messages_getDocumentByHash.sha256)
}
#endif
inline void TL_messages_getDocumentByHash::set_sha256(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  sha256_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtproto.TL_messages_getDocumentByHash.sha256)
}
inline void TL_messages_getDocumentByHash::set_sha256(const void* value, size_t size) {
  
  sha256_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtproto.TL_messages_getDocumentByHash.sha256)
}
inline ::std::string* TL_messages_getDocumentByHash::mutable_sha256() {
  
  // @@protoc_insertion_point(field_mutable:mtproto.TL_messages_getDocumentByHash.sha256)
  return sha256_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TL_messages_getDocumentByHash::release_sha256() {
  // @@protoc_insertion_point(field_release:mtproto.TL_messages_getDocumentByHash.sha256)
  
  return sha256_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TL_messages_getDocumentByHash::set_allocated_sha256(::std::string* sha256) {
  if (sha256 != NULL) {
    
  } else {
    
  }
  sha256_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sha256);
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_messages_getDocumentByHash.sha256)
}

// int32 size = 2;
inline void TL_messages_getDocumentByHash::clear_size() {
  size_ = 0;
}
inline ::google::protobuf::int32 TL_messages_getDocumentByHash::size() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_getDocumentByHash.size)
  return size_;
}
inline void TL_messages_getDocumentByHash::set_size(::google::protobuf::int32 value) {
  
  size_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_getDocumentByHash.size)
}

// string mime_type = 3;
inline void TL_messages_getDocumentByHash::clear_mime_type() {
  mime_type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& TL_messages_getDocumentByHash::mime_type() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_getDocumentByHash.mime_type)
  return mime_type_.GetNoArena();
}
inline void TL_messages_getDocumentByHash::set_mime_type(const ::std::string& value) {
  
  mime_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_getDocumentByHash.mime_type)
}
#if LANG_CXX11
inline void TL_messages_getDocumentByHash::set_mime_type(::std::string&& value) {
  
  mime_type_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mtproto.TL_messages_getDocumentByHash.mime_type)
}
#endif
inline void TL_messages_getDocumentByHash::set_mime_type(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  mime_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtproto.TL_messages_getDocumentByHash.mime_type)
}
inline void TL_messages_getDocumentByHash::set_mime_type(const char* value, size_t size) {
  
  mime_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtproto.TL_messages_getDocumentByHash.mime_type)
}
inline ::std::string* TL_messages_getDocumentByHash::mutable_mime_type() {
  
  // @@protoc_insertion_point(field_mutable:mtproto.TL_messages_getDocumentByHash.mime_type)
  return mime_type_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TL_messages_getDocumentByHash::release_mime_type() {
  // @@protoc_insertion_point(field_release:mtproto.TL_messages_getDocumentByHash.mime_type)
  
  return mime_type_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TL_messages_getDocumentByHash::set_allocated_mime_type(::std::string* mime_type) {
  if (mime_type != NULL) {
    
  } else {
    
  }
  mime_type_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), mime_type);
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_messages_getDocumentByHash.mime_type)
}

// -------------------------------------------------------------------

// TL_messages_searchGifs

// string q = 1;
inline void TL_messages_searchGifs::clear_q() {
  q_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& TL_messages_searchGifs::q() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_searchGifs.q)
  return q_.GetNoArena();
}
inline void TL_messages_searchGifs::set_q(const ::std::string& value) {
  
  q_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_searchGifs.q)
}
#if LANG_CXX11
inline void TL_messages_searchGifs::set_q(::std::string&& value) {
  
  q_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mtproto.TL_messages_searchGifs.q)
}
#endif
inline void TL_messages_searchGifs::set_q(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  q_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtproto.TL_messages_searchGifs.q)
}
inline void TL_messages_searchGifs::set_q(const char* value, size_t size) {
  
  q_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtproto.TL_messages_searchGifs.q)
}
inline ::std::string* TL_messages_searchGifs::mutable_q() {
  
  // @@protoc_insertion_point(field_mutable:mtproto.TL_messages_searchGifs.q)
  return q_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TL_messages_searchGifs::release_q() {
  // @@protoc_insertion_point(field_release:mtproto.TL_messages_searchGifs.q)
  
  return q_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TL_messages_searchGifs::set_allocated_q(::std::string* q) {
  if (q != NULL) {
    
  } else {
    
  }
  q_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), q);
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_messages_searchGifs.q)
}

// int32 offset = 2;
inline void TL_messages_searchGifs::clear_offset() {
  offset_ = 0;
}
inline ::google::protobuf::int32 TL_messages_searchGifs::offset() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_searchGifs.offset)
  return offset_;
}
inline void TL_messages_searchGifs::set_offset(::google::protobuf::int32 value) {
  
  offset_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_searchGifs.offset)
}

// -------------------------------------------------------------------

// TL_messages_getSavedGifs

// int32 hash = 1;
inline void TL_messages_getSavedGifs::clear_hash() {
  hash_ = 0;
}
inline ::google::protobuf::int32 TL_messages_getSavedGifs::hash() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_getSavedGifs.hash)
  return hash_;
}
inline void TL_messages_getSavedGifs::set_hash(::google::protobuf::int32 value) {
  
  hash_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_getSavedGifs.hash)
}

// -------------------------------------------------------------------

// TL_messages_saveGif

// .mtproto.InputDocument id = 1;
inline bool TL_messages_saveGif::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline void TL_messages_saveGif::clear_id() {
  if (GetArenaNoVirtual() == NULL && id_ != NULL) delete id_;
  id_ = NULL;
}
inline const ::mtproto::InputDocument& TL_messages_saveGif::id() const {
  const ::mtproto::InputDocument* p = id_;
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_saveGif.id)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::InputDocument*>(
      &::mtproto::_InputDocument_default_instance_);
}
inline ::mtproto::InputDocument* TL_messages_saveGif::mutable_id() {
  
  if (id_ == NULL) {
    id_ = new ::mtproto::InputDocument;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_messages_saveGif.id)
  return id_;
}
inline ::mtproto::InputDocument* TL_messages_saveGif::release_id() {
  // @@protoc_insertion_point(field_release:mtproto.TL_messages_saveGif.id)
  
  ::mtproto::InputDocument* temp = id_;
  id_ = NULL;
  return temp;
}
inline void TL_messages_saveGif::set_allocated_id(::mtproto::InputDocument* id) {
  delete id_;
  id_ = id;
  if (id) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_messages_saveGif.id)
}

// .mtproto.Bool unsave = 2;
inline bool TL_messages_saveGif::has_unsave() const {
  return this != internal_default_instance() && unsave_ != NULL;
}
inline void TL_messages_saveGif::clear_unsave() {
  if (GetArenaNoVirtual() == NULL && unsave_ != NULL) delete unsave_;
  unsave_ = NULL;
}
inline const ::mtproto::Bool& TL_messages_saveGif::unsave() const {
  const ::mtproto::Bool* p = unsave_;
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_saveGif.unsave)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::Bool*>(
      &::mtproto::_Bool_default_instance_);
}
inline ::mtproto::Bool* TL_messages_saveGif::mutable_unsave() {
  
  if (unsave_ == NULL) {
    unsave_ = new ::mtproto::Bool;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_messages_saveGif.unsave)
  return unsave_;
}
inline ::mtproto::Bool* TL_messages_saveGif::release_unsave() {
  // @@protoc_insertion_point(field_release:mtproto.TL_messages_saveGif.unsave)
  
  ::mtproto::Bool* temp = unsave_;
  unsave_ = NULL;
  return temp;
}
inline void TL_messages_saveGif::set_allocated_unsave(::mtproto::Bool* unsave) {
  delete unsave_;
  unsave_ = unsave;
  if (unsave) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_messages_saveGif.unsave)
}

// -------------------------------------------------------------------

// TL_messages_getInlineBotResults

// .mtproto.InputUser bot = 2;
inline bool TL_messages_getInlineBotResults::has_bot() const {
  return this != internal_default_instance() && bot_ != NULL;
}
inline void TL_messages_getInlineBotResults::clear_bot() {
  if (GetArenaNoVirtual() == NULL && bot_ != NULL) delete bot_;
  bot_ = NULL;
}
inline const ::mtproto::InputUser& TL_messages_getInlineBotResults::bot() const {
  const ::mtproto::InputUser* p = bot_;
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_getInlineBotResults.bot)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::InputUser*>(
      &::mtproto::_InputUser_default_instance_);
}
inline ::mtproto::InputUser* TL_messages_getInlineBotResults::mutable_bot() {
  
  if (bot_ == NULL) {
    bot_ = new ::mtproto::InputUser;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_messages_getInlineBotResults.bot)
  return bot_;
}
inline ::mtproto::InputUser* TL_messages_getInlineBotResults::release_bot() {
  // @@protoc_insertion_point(field_release:mtproto.TL_messages_getInlineBotResults.bot)
  
  ::mtproto::InputUser* temp = bot_;
  bot_ = NULL;
  return temp;
}
inline void TL_messages_getInlineBotResults::set_allocated_bot(::mtproto::InputUser* bot) {
  delete bot_;
  bot_ = bot;
  if (bot) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_messages_getInlineBotResults.bot)
}

// .mtproto.InputPeer peer = 3;
inline bool TL_messages_getInlineBotResults::has_peer() const {
  return this != internal_default_instance() && peer_ != NULL;
}
inline void TL_messages_getInlineBotResults::clear_peer() {
  if (GetArenaNoVirtual() == NULL && peer_ != NULL) delete peer_;
  peer_ = NULL;
}
inline const ::mtproto::InputPeer& TL_messages_getInlineBotResults::peer() const {
  const ::mtproto::InputPeer* p = peer_;
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_getInlineBotResults.peer)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::InputPeer*>(
      &::mtproto::_InputPeer_default_instance_);
}
inline ::mtproto::InputPeer* TL_messages_getInlineBotResults::mutable_peer() {
  
  if (peer_ == NULL) {
    peer_ = new ::mtproto::InputPeer;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_messages_getInlineBotResults.peer)
  return peer_;
}
inline ::mtproto::InputPeer* TL_messages_getInlineBotResults::release_peer() {
  // @@protoc_insertion_point(field_release:mtproto.TL_messages_getInlineBotResults.peer)
  
  ::mtproto::InputPeer* temp = peer_;
  peer_ = NULL;
  return temp;
}
inline void TL_messages_getInlineBotResults::set_allocated_peer(::mtproto::InputPeer* peer) {
  delete peer_;
  peer_ = peer;
  if (peer) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_messages_getInlineBotResults.peer)
}

// .mtproto.InputGeoPoint geo_point = 4;
inline bool TL_messages_getInlineBotResults::has_geo_point() const {
  return this != internal_default_instance() && geo_point_ != NULL;
}
inline void TL_messages_getInlineBotResults::clear_geo_point() {
  if (GetArenaNoVirtual() == NULL && geo_point_ != NULL) delete geo_point_;
  geo_point_ = NULL;
}
inline const ::mtproto::InputGeoPoint& TL_messages_getInlineBotResults::geo_point() const {
  const ::mtproto::InputGeoPoint* p = geo_point_;
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_getInlineBotResults.geo_point)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::InputGeoPoint*>(
      &::mtproto::_InputGeoPoint_default_instance_);
}
inline ::mtproto::InputGeoPoint* TL_messages_getInlineBotResults::mutable_geo_point() {
  
  if (geo_point_ == NULL) {
    geo_point_ = new ::mtproto::InputGeoPoint;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_messages_getInlineBotResults.geo_point)
  return geo_point_;
}
inline ::mtproto::InputGeoPoint* TL_messages_getInlineBotResults::release_geo_point() {
  // @@protoc_insertion_point(field_release:mtproto.TL_messages_getInlineBotResults.geo_point)
  
  ::mtproto::InputGeoPoint* temp = geo_point_;
  geo_point_ = NULL;
  return temp;
}
inline void TL_messages_getInlineBotResults::set_allocated_geo_point(::mtproto::InputGeoPoint* geo_point) {
  delete geo_point_;
  geo_point_ = geo_point;
  if (geo_point) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_messages_getInlineBotResults.geo_point)
}

// string query = 5;
inline void TL_messages_getInlineBotResults::clear_query() {
  query_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& TL_messages_getInlineBotResults::query() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_getInlineBotResults.query)
  return query_.GetNoArena();
}
inline void TL_messages_getInlineBotResults::set_query(const ::std::string& value) {
  
  query_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_getInlineBotResults.query)
}
#if LANG_CXX11
inline void TL_messages_getInlineBotResults::set_query(::std::string&& value) {
  
  query_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mtproto.TL_messages_getInlineBotResults.query)
}
#endif
inline void TL_messages_getInlineBotResults::set_query(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  query_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtproto.TL_messages_getInlineBotResults.query)
}
inline void TL_messages_getInlineBotResults::set_query(const char* value, size_t size) {
  
  query_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtproto.TL_messages_getInlineBotResults.query)
}
inline ::std::string* TL_messages_getInlineBotResults::mutable_query() {
  
  // @@protoc_insertion_point(field_mutable:mtproto.TL_messages_getInlineBotResults.query)
  return query_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TL_messages_getInlineBotResults::release_query() {
  // @@protoc_insertion_point(field_release:mtproto.TL_messages_getInlineBotResults.query)
  
  return query_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TL_messages_getInlineBotResults::set_allocated_query(::std::string* query) {
  if (query != NULL) {
    
  } else {
    
  }
  query_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), query);
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_messages_getInlineBotResults.query)
}

// string offset = 6;
inline void TL_messages_getInlineBotResults::clear_offset() {
  offset_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& TL_messages_getInlineBotResults::offset() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_getInlineBotResults.offset)
  return offset_.GetNoArena();
}
inline void TL_messages_getInlineBotResults::set_offset(const ::std::string& value) {
  
  offset_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_getInlineBotResults.offset)
}
#if LANG_CXX11
inline void TL_messages_getInlineBotResults::set_offset(::std::string&& value) {
  
  offset_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mtproto.TL_messages_getInlineBotResults.offset)
}
#endif
inline void TL_messages_getInlineBotResults::set_offset(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  offset_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtproto.TL_messages_getInlineBotResults.offset)
}
inline void TL_messages_getInlineBotResults::set_offset(const char* value, size_t size) {
  
  offset_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtproto.TL_messages_getInlineBotResults.offset)
}
inline ::std::string* TL_messages_getInlineBotResults::mutable_offset() {
  
  // @@protoc_insertion_point(field_mutable:mtproto.TL_messages_getInlineBotResults.offset)
  return offset_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TL_messages_getInlineBotResults::release_offset() {
  // @@protoc_insertion_point(field_release:mtproto.TL_messages_getInlineBotResults.offset)
  
  return offset_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TL_messages_getInlineBotResults::set_allocated_offset(::std::string* offset) {
  if (offset != NULL) {
    
  } else {
    
  }
  offset_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), offset);
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_messages_getInlineBotResults.offset)
}

// -------------------------------------------------------------------

// TL_messages_setInlineBotResults

// bool gallery = 2;
inline void TL_messages_setInlineBotResults::clear_gallery() {
  gallery_ = false;
}
inline bool TL_messages_setInlineBotResults::gallery() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_setInlineBotResults.gallery)
  return gallery_;
}
inline void TL_messages_setInlineBotResults::set_gallery(bool value) {
  
  gallery_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_setInlineBotResults.gallery)
}

// bool private = 3;
inline void TL_messages_setInlineBotResults::clear_private_() {
  private__ = false;
}
inline bool TL_messages_setInlineBotResults::private_() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_setInlineBotResults.private)
  return private__;
}
inline void TL_messages_setInlineBotResults::set_private_(bool value) {
  
  private__ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_setInlineBotResults.private)
}

// int64 query_id = 4;
inline void TL_messages_setInlineBotResults::clear_query_id() {
  query_id_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 TL_messages_setInlineBotResults::query_id() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_setInlineBotResults.query_id)
  return query_id_;
}
inline void TL_messages_setInlineBotResults::set_query_id(::google::protobuf::int64 value) {
  
  query_id_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_setInlineBotResults.query_id)
}

// repeated .mtproto.InputBotInlineResult results = 5;
inline int TL_messages_setInlineBotResults::results_size() const {
  return results_.size();
}
inline void TL_messages_setInlineBotResults::clear_results() {
  results_.Clear();
}
inline const ::mtproto::InputBotInlineResult& TL_messages_setInlineBotResults::results(int index) const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_setInlineBotResults.results)
  return results_.Get(index);
}
inline ::mtproto::InputBotInlineResult* TL_messages_setInlineBotResults::mutable_results(int index) {
  // @@protoc_insertion_point(field_mutable:mtproto.TL_messages_setInlineBotResults.results)
  return results_.Mutable(index);
}
inline ::mtproto::InputBotInlineResult* TL_messages_setInlineBotResults::add_results() {
  // @@protoc_insertion_point(field_add:mtproto.TL_messages_setInlineBotResults.results)
  return results_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::mtproto::InputBotInlineResult >*
TL_messages_setInlineBotResults::mutable_results() {
  // @@protoc_insertion_point(field_mutable_list:mtproto.TL_messages_setInlineBotResults.results)
  return &results_;
}
inline const ::google::protobuf::RepeatedPtrField< ::mtproto::InputBotInlineResult >&
TL_messages_setInlineBotResults::results() const {
  // @@protoc_insertion_point(field_list:mtproto.TL_messages_setInlineBotResults.results)
  return results_;
}

// int32 cache_time = 6;
inline void TL_messages_setInlineBotResults::clear_cache_time() {
  cache_time_ = 0;
}
inline ::google::protobuf::int32 TL_messages_setInlineBotResults::cache_time() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_setInlineBotResults.cache_time)
  return cache_time_;
}
inline void TL_messages_setInlineBotResults::set_cache_time(::google::protobuf::int32 value) {
  
  cache_time_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_setInlineBotResults.cache_time)
}

// string next_offset = 7;
inline void TL_messages_setInlineBotResults::clear_next_offset() {
  next_offset_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& TL_messages_setInlineBotResults::next_offset() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_setInlineBotResults.next_offset)
  return next_offset_.GetNoArena();
}
inline void TL_messages_setInlineBotResults::set_next_offset(const ::std::string& value) {
  
  next_offset_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_setInlineBotResults.next_offset)
}
#if LANG_CXX11
inline void TL_messages_setInlineBotResults::set_next_offset(::std::string&& value) {
  
  next_offset_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mtproto.TL_messages_setInlineBotResults.next_offset)
}
#endif
inline void TL_messages_setInlineBotResults::set_next_offset(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  next_offset_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtproto.TL_messages_setInlineBotResults.next_offset)
}
inline void TL_messages_setInlineBotResults::set_next_offset(const char* value, size_t size) {
  
  next_offset_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtproto.TL_messages_setInlineBotResults.next_offset)
}
inline ::std::string* TL_messages_setInlineBotResults::mutable_next_offset() {
  
  // @@protoc_insertion_point(field_mutable:mtproto.TL_messages_setInlineBotResults.next_offset)
  return next_offset_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TL_messages_setInlineBotResults::release_next_offset() {
  // @@protoc_insertion_point(field_release:mtproto.TL_messages_setInlineBotResults.next_offset)
  
  return next_offset_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TL_messages_setInlineBotResults::set_allocated_next_offset(::std::string* next_offset) {
  if (next_offset != NULL) {
    
  } else {
    
  }
  next_offset_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), next_offset);
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_messages_setInlineBotResults.next_offset)
}

// .mtproto.InlineBotSwitchPM switch_pm = 8;
inline bool TL_messages_setInlineBotResults::has_switch_pm() const {
  return this != internal_default_instance() && switch_pm_ != NULL;
}
inline void TL_messages_setInlineBotResults::clear_switch_pm() {
  if (GetArenaNoVirtual() == NULL && switch_pm_ != NULL) delete switch_pm_;
  switch_pm_ = NULL;
}
inline const ::mtproto::InlineBotSwitchPM& TL_messages_setInlineBotResults::switch_pm() const {
  const ::mtproto::InlineBotSwitchPM* p = switch_pm_;
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_setInlineBotResults.switch_pm)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::InlineBotSwitchPM*>(
      &::mtproto::_InlineBotSwitchPM_default_instance_);
}
inline ::mtproto::InlineBotSwitchPM* TL_messages_setInlineBotResults::mutable_switch_pm() {
  
  if (switch_pm_ == NULL) {
    switch_pm_ = new ::mtproto::InlineBotSwitchPM;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_messages_setInlineBotResults.switch_pm)
  return switch_pm_;
}
inline ::mtproto::InlineBotSwitchPM* TL_messages_setInlineBotResults::release_switch_pm() {
  // @@protoc_insertion_point(field_release:mtproto.TL_messages_setInlineBotResults.switch_pm)
  
  ::mtproto::InlineBotSwitchPM* temp = switch_pm_;
  switch_pm_ = NULL;
  return temp;
}
inline void TL_messages_setInlineBotResults::set_allocated_switch_pm(::mtproto::InlineBotSwitchPM* switch_pm) {
  delete switch_pm_;
  switch_pm_ = switch_pm;
  if (switch_pm) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_messages_setInlineBotResults.switch_pm)
}

// -------------------------------------------------------------------

// TL_messages_sendInlineBotResult

// bool silent = 2;
inline void TL_messages_sendInlineBotResult::clear_silent() {
  silent_ = false;
}
inline bool TL_messages_sendInlineBotResult::silent() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_sendInlineBotResult.silent)
  return silent_;
}
inline void TL_messages_sendInlineBotResult::set_silent(bool value) {
  
  silent_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_sendInlineBotResult.silent)
}

// bool background = 3;
inline void TL_messages_sendInlineBotResult::clear_background() {
  background_ = false;
}
inline bool TL_messages_sendInlineBotResult::background() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_sendInlineBotResult.background)
  return background_;
}
inline void TL_messages_sendInlineBotResult::set_background(bool value) {
  
  background_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_sendInlineBotResult.background)
}

// bool clear_draft = 4;
inline void TL_messages_sendInlineBotResult::clear_clear_draft() {
  clear_draft_ = false;
}
inline bool TL_messages_sendInlineBotResult::clear_draft() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_sendInlineBotResult.clear_draft)
  return clear_draft_;
}
inline void TL_messages_sendInlineBotResult::set_clear_draft(bool value) {
  
  clear_draft_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_sendInlineBotResult.clear_draft)
}

// .mtproto.InputPeer peer = 5;
inline bool TL_messages_sendInlineBotResult::has_peer() const {
  return this != internal_default_instance() && peer_ != NULL;
}
inline void TL_messages_sendInlineBotResult::clear_peer() {
  if (GetArenaNoVirtual() == NULL && peer_ != NULL) delete peer_;
  peer_ = NULL;
}
inline const ::mtproto::InputPeer& TL_messages_sendInlineBotResult::peer() const {
  const ::mtproto::InputPeer* p = peer_;
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_sendInlineBotResult.peer)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::InputPeer*>(
      &::mtproto::_InputPeer_default_instance_);
}
inline ::mtproto::InputPeer* TL_messages_sendInlineBotResult::mutable_peer() {
  
  if (peer_ == NULL) {
    peer_ = new ::mtproto::InputPeer;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_messages_sendInlineBotResult.peer)
  return peer_;
}
inline ::mtproto::InputPeer* TL_messages_sendInlineBotResult::release_peer() {
  // @@protoc_insertion_point(field_release:mtproto.TL_messages_sendInlineBotResult.peer)
  
  ::mtproto::InputPeer* temp = peer_;
  peer_ = NULL;
  return temp;
}
inline void TL_messages_sendInlineBotResult::set_allocated_peer(::mtproto::InputPeer* peer) {
  delete peer_;
  peer_ = peer;
  if (peer) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_messages_sendInlineBotResult.peer)
}

// int32 reply_to_msg_id = 6;
inline void TL_messages_sendInlineBotResult::clear_reply_to_msg_id() {
  reply_to_msg_id_ = 0;
}
inline ::google::protobuf::int32 TL_messages_sendInlineBotResult::reply_to_msg_id() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_sendInlineBotResult.reply_to_msg_id)
  return reply_to_msg_id_;
}
inline void TL_messages_sendInlineBotResult::set_reply_to_msg_id(::google::protobuf::int32 value) {
  
  reply_to_msg_id_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_sendInlineBotResult.reply_to_msg_id)
}

// int64 random_id = 7;
inline void TL_messages_sendInlineBotResult::clear_random_id() {
  random_id_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 TL_messages_sendInlineBotResult::random_id() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_sendInlineBotResult.random_id)
  return random_id_;
}
inline void TL_messages_sendInlineBotResult::set_random_id(::google::protobuf::int64 value) {
  
  random_id_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_sendInlineBotResult.random_id)
}

// int64 query_id = 8;
inline void TL_messages_sendInlineBotResult::clear_query_id() {
  query_id_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 TL_messages_sendInlineBotResult::query_id() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_sendInlineBotResult.query_id)
  return query_id_;
}
inline void TL_messages_sendInlineBotResult::set_query_id(::google::protobuf::int64 value) {
  
  query_id_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_sendInlineBotResult.query_id)
}

// string id = 9;
inline void TL_messages_sendInlineBotResult::clear_id() {
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& TL_messages_sendInlineBotResult::id() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_sendInlineBotResult.id)
  return id_.GetNoArena();
}
inline void TL_messages_sendInlineBotResult::set_id(const ::std::string& value) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_sendInlineBotResult.id)
}
#if LANG_CXX11
inline void TL_messages_sendInlineBotResult::set_id(::std::string&& value) {
  
  id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mtproto.TL_messages_sendInlineBotResult.id)
}
#endif
inline void TL_messages_sendInlineBotResult::set_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtproto.TL_messages_sendInlineBotResult.id)
}
inline void TL_messages_sendInlineBotResult::set_id(const char* value, size_t size) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtproto.TL_messages_sendInlineBotResult.id)
}
inline ::std::string* TL_messages_sendInlineBotResult::mutable_id() {
  
  // @@protoc_insertion_point(field_mutable:mtproto.TL_messages_sendInlineBotResult.id)
  return id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TL_messages_sendInlineBotResult::release_id() {
  // @@protoc_insertion_point(field_release:mtproto.TL_messages_sendInlineBotResult.id)
  
  return id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TL_messages_sendInlineBotResult::set_allocated_id(::std::string* id) {
  if (id != NULL) {
    
  } else {
    
  }
  id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id);
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_messages_sendInlineBotResult.id)
}

// -------------------------------------------------------------------

// TL_messages_getMessageEditData

// .mtproto.InputPeer peer = 1;
inline bool TL_messages_getMessageEditData::has_peer() const {
  return this != internal_default_instance() && peer_ != NULL;
}
inline void TL_messages_getMessageEditData::clear_peer() {
  if (GetArenaNoVirtual() == NULL && peer_ != NULL) delete peer_;
  peer_ = NULL;
}
inline const ::mtproto::InputPeer& TL_messages_getMessageEditData::peer() const {
  const ::mtproto::InputPeer* p = peer_;
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_getMessageEditData.peer)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::InputPeer*>(
      &::mtproto::_InputPeer_default_instance_);
}
inline ::mtproto::InputPeer* TL_messages_getMessageEditData::mutable_peer() {
  
  if (peer_ == NULL) {
    peer_ = new ::mtproto::InputPeer;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_messages_getMessageEditData.peer)
  return peer_;
}
inline ::mtproto::InputPeer* TL_messages_getMessageEditData::release_peer() {
  // @@protoc_insertion_point(field_release:mtproto.TL_messages_getMessageEditData.peer)
  
  ::mtproto::InputPeer* temp = peer_;
  peer_ = NULL;
  return temp;
}
inline void TL_messages_getMessageEditData::set_allocated_peer(::mtproto::InputPeer* peer) {
  delete peer_;
  peer_ = peer;
  if (peer) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_messages_getMessageEditData.peer)
}

// int32 id = 2;
inline void TL_messages_getMessageEditData::clear_id() {
  id_ = 0;
}
inline ::google::protobuf::int32 TL_messages_getMessageEditData::id() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_getMessageEditData.id)
  return id_;
}
inline void TL_messages_getMessageEditData::set_id(::google::protobuf::int32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_getMessageEditData.id)
}

// -------------------------------------------------------------------

// TL_messages_editMessage

// bool no_webpage = 2;
inline void TL_messages_editMessage::clear_no_webpage() {
  no_webpage_ = false;
}
inline bool TL_messages_editMessage::no_webpage() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_editMessage.no_webpage)
  return no_webpage_;
}
inline void TL_messages_editMessage::set_no_webpage(bool value) {
  
  no_webpage_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_editMessage.no_webpage)
}

// bool stop_geo_live = 3;
inline void TL_messages_editMessage::clear_stop_geo_live() {
  stop_geo_live_ = false;
}
inline bool TL_messages_editMessage::stop_geo_live() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_editMessage.stop_geo_live)
  return stop_geo_live_;
}
inline void TL_messages_editMessage::set_stop_geo_live(bool value) {
  
  stop_geo_live_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_editMessage.stop_geo_live)
}

// .mtproto.InputPeer peer = 4;
inline bool TL_messages_editMessage::has_peer() const {
  return this != internal_default_instance() && peer_ != NULL;
}
inline void TL_messages_editMessage::clear_peer() {
  if (GetArenaNoVirtual() == NULL && peer_ != NULL) delete peer_;
  peer_ = NULL;
}
inline const ::mtproto::InputPeer& TL_messages_editMessage::peer() const {
  const ::mtproto::InputPeer* p = peer_;
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_editMessage.peer)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::InputPeer*>(
      &::mtproto::_InputPeer_default_instance_);
}
inline ::mtproto::InputPeer* TL_messages_editMessage::mutable_peer() {
  
  if (peer_ == NULL) {
    peer_ = new ::mtproto::InputPeer;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_messages_editMessage.peer)
  return peer_;
}
inline ::mtproto::InputPeer* TL_messages_editMessage::release_peer() {
  // @@protoc_insertion_point(field_release:mtproto.TL_messages_editMessage.peer)
  
  ::mtproto::InputPeer* temp = peer_;
  peer_ = NULL;
  return temp;
}
inline void TL_messages_editMessage::set_allocated_peer(::mtproto::InputPeer* peer) {
  delete peer_;
  peer_ = peer;
  if (peer) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_messages_editMessage.peer)
}

// int32 id = 5;
inline void TL_messages_editMessage::clear_id() {
  id_ = 0;
}
inline ::google::protobuf::int32 TL_messages_editMessage::id() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_editMessage.id)
  return id_;
}
inline void TL_messages_editMessage::set_id(::google::protobuf::int32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_editMessage.id)
}

// string message = 6;
inline void TL_messages_editMessage::clear_message() {
  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& TL_messages_editMessage::message() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_editMessage.message)
  return message_.GetNoArena();
}
inline void TL_messages_editMessage::set_message(const ::std::string& value) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_editMessage.message)
}
#if LANG_CXX11
inline void TL_messages_editMessage::set_message(::std::string&& value) {
  
  message_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mtproto.TL_messages_editMessage.message)
}
#endif
inline void TL_messages_editMessage::set_message(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtproto.TL_messages_editMessage.message)
}
inline void TL_messages_editMessage::set_message(const char* value, size_t size) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtproto.TL_messages_editMessage.message)
}
inline ::std::string* TL_messages_editMessage::mutable_message() {
  
  // @@protoc_insertion_point(field_mutable:mtproto.TL_messages_editMessage.message)
  return message_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TL_messages_editMessage::release_message() {
  // @@protoc_insertion_point(field_release:mtproto.TL_messages_editMessage.message)
  
  return message_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TL_messages_editMessage::set_allocated_message(::std::string* message) {
  if (message != NULL) {
    
  } else {
    
  }
  message_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), message);
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_messages_editMessage.message)
}

// .mtproto.InputMedia media = 7;
inline bool TL_messages_editMessage::has_media() const {
  return this != internal_default_instance() && media_ != NULL;
}
inline void TL_messages_editMessage::clear_media() {
  if (GetArenaNoVirtual() == NULL && media_ != NULL) delete media_;
  media_ = NULL;
}
inline const ::mtproto::InputMedia& TL_messages_editMessage::media() const {
  const ::mtproto::InputMedia* p = media_;
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_editMessage.media)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::InputMedia*>(
      &::mtproto::_InputMedia_default_instance_);
}
inline ::mtproto::InputMedia* TL_messages_editMessage::mutable_media() {
  
  if (media_ == NULL) {
    media_ = new ::mtproto::InputMedia;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_messages_editMessage.media)
  return media_;
}
inline ::mtproto::InputMedia* TL_messages_editMessage::release_media() {
  // @@protoc_insertion_point(field_release:mtproto.TL_messages_editMessage.media)
  
  ::mtproto::InputMedia* temp = media_;
  media_ = NULL;
  return temp;
}
inline void TL_messages_editMessage::set_allocated_media(::mtproto::InputMedia* media) {
  delete media_;
  media_ = media;
  if (media) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_messages_editMessage.media)
}

// .mtproto.ReplyMarkup reply_markup = 8;
inline bool TL_messages_editMessage::has_reply_markup() const {
  return this != internal_default_instance() && reply_markup_ != NULL;
}
inline void TL_messages_editMessage::clear_reply_markup() {
  if (GetArenaNoVirtual() == NULL && reply_markup_ != NULL) delete reply_markup_;
  reply_markup_ = NULL;
}
inline const ::mtproto::ReplyMarkup& TL_messages_editMessage::reply_markup() const {
  const ::mtproto::ReplyMarkup* p = reply_markup_;
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_editMessage.reply_markup)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::ReplyMarkup*>(
      &::mtproto::_ReplyMarkup_default_instance_);
}
inline ::mtproto::ReplyMarkup* TL_messages_editMessage::mutable_reply_markup() {
  
  if (reply_markup_ == NULL) {
    reply_markup_ = new ::mtproto::ReplyMarkup;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_messages_editMessage.reply_markup)
  return reply_markup_;
}
inline ::mtproto::ReplyMarkup* TL_messages_editMessage::release_reply_markup() {
  // @@protoc_insertion_point(field_release:mtproto.TL_messages_editMessage.reply_markup)
  
  ::mtproto::ReplyMarkup* temp = reply_markup_;
  reply_markup_ = NULL;
  return temp;
}
inline void TL_messages_editMessage::set_allocated_reply_markup(::mtproto::ReplyMarkup* reply_markup) {
  delete reply_markup_;
  reply_markup_ = reply_markup;
  if (reply_markup) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_messages_editMessage.reply_markup)
}

// repeated .mtproto.MessageEntity entities = 9;
inline int TL_messages_editMessage::entities_size() const {
  return entities_.size();
}
inline void TL_messages_editMessage::clear_entities() {
  entities_.Clear();
}
inline const ::mtproto::MessageEntity& TL_messages_editMessage::entities(int index) const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_editMessage.entities)
  return entities_.Get(index);
}
inline ::mtproto::MessageEntity* TL_messages_editMessage::mutable_entities(int index) {
  // @@protoc_insertion_point(field_mutable:mtproto.TL_messages_editMessage.entities)
  return entities_.Mutable(index);
}
inline ::mtproto::MessageEntity* TL_messages_editMessage::add_entities() {
  // @@protoc_insertion_point(field_add:mtproto.TL_messages_editMessage.entities)
  return entities_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::mtproto::MessageEntity >*
TL_messages_editMessage::mutable_entities() {
  // @@protoc_insertion_point(field_mutable_list:mtproto.TL_messages_editMessage.entities)
  return &entities_;
}
inline const ::google::protobuf::RepeatedPtrField< ::mtproto::MessageEntity >&
TL_messages_editMessage::entities() const {
  // @@protoc_insertion_point(field_list:mtproto.TL_messages_editMessage.entities)
  return entities_;
}

// .mtproto.InputGeoPoint geo_point = 10;
inline bool TL_messages_editMessage::has_geo_point() const {
  return this != internal_default_instance() && geo_point_ != NULL;
}
inline void TL_messages_editMessage::clear_geo_point() {
  if (GetArenaNoVirtual() == NULL && geo_point_ != NULL) delete geo_point_;
  geo_point_ = NULL;
}
inline const ::mtproto::InputGeoPoint& TL_messages_editMessage::geo_point() const {
  const ::mtproto::InputGeoPoint* p = geo_point_;
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_editMessage.geo_point)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::InputGeoPoint*>(
      &::mtproto::_InputGeoPoint_default_instance_);
}
inline ::mtproto::InputGeoPoint* TL_messages_editMessage::mutable_geo_point() {
  
  if (geo_point_ == NULL) {
    geo_point_ = new ::mtproto::InputGeoPoint;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_messages_editMessage.geo_point)
  return geo_point_;
}
inline ::mtproto::InputGeoPoint* TL_messages_editMessage::release_geo_point() {
  // @@protoc_insertion_point(field_release:mtproto.TL_messages_editMessage.geo_point)
  
  ::mtproto::InputGeoPoint* temp = geo_point_;
  geo_point_ = NULL;
  return temp;
}
inline void TL_messages_editMessage::set_allocated_geo_point(::mtproto::InputGeoPoint* geo_point) {
  delete geo_point_;
  geo_point_ = geo_point;
  if (geo_point) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_messages_editMessage.geo_point)
}

// -------------------------------------------------------------------

// TL_messages_editInlineBotMessage

// bool no_webpage = 2;
inline void TL_messages_editInlineBotMessage::clear_no_webpage() {
  no_webpage_ = false;
}
inline bool TL_messages_editInlineBotMessage::no_webpage() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_editInlineBotMessage.no_webpage)
  return no_webpage_;
}
inline void TL_messages_editInlineBotMessage::set_no_webpage(bool value) {
  
  no_webpage_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_editInlineBotMessage.no_webpage)
}

// bool stop_geo_live = 3;
inline void TL_messages_editInlineBotMessage::clear_stop_geo_live() {
  stop_geo_live_ = false;
}
inline bool TL_messages_editInlineBotMessage::stop_geo_live() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_editInlineBotMessage.stop_geo_live)
  return stop_geo_live_;
}
inline void TL_messages_editInlineBotMessage::set_stop_geo_live(bool value) {
  
  stop_geo_live_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_editInlineBotMessage.stop_geo_live)
}

// .mtproto.InputBotInlineMessageID id = 4;
inline bool TL_messages_editInlineBotMessage::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline void TL_messages_editInlineBotMessage::clear_id() {
  if (GetArenaNoVirtual() == NULL && id_ != NULL) delete id_;
  id_ = NULL;
}
inline const ::mtproto::InputBotInlineMessageID& TL_messages_editInlineBotMessage::id() const {
  const ::mtproto::InputBotInlineMessageID* p = id_;
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_editInlineBotMessage.id)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::InputBotInlineMessageID*>(
      &::mtproto::_InputBotInlineMessageID_default_instance_);
}
inline ::mtproto::InputBotInlineMessageID* TL_messages_editInlineBotMessage::mutable_id() {
  
  if (id_ == NULL) {
    id_ = new ::mtproto::InputBotInlineMessageID;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_messages_editInlineBotMessage.id)
  return id_;
}
inline ::mtproto::InputBotInlineMessageID* TL_messages_editInlineBotMessage::release_id() {
  // @@protoc_insertion_point(field_release:mtproto.TL_messages_editInlineBotMessage.id)
  
  ::mtproto::InputBotInlineMessageID* temp = id_;
  id_ = NULL;
  return temp;
}
inline void TL_messages_editInlineBotMessage::set_allocated_id(::mtproto::InputBotInlineMessageID* id) {
  delete id_;
  id_ = id;
  if (id) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_messages_editInlineBotMessage.id)
}

// string message = 5;
inline void TL_messages_editInlineBotMessage::clear_message() {
  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& TL_messages_editInlineBotMessage::message() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_editInlineBotMessage.message)
  return message_.GetNoArena();
}
inline void TL_messages_editInlineBotMessage::set_message(const ::std::string& value) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_editInlineBotMessage.message)
}
#if LANG_CXX11
inline void TL_messages_editInlineBotMessage::set_message(::std::string&& value) {
  
  message_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mtproto.TL_messages_editInlineBotMessage.message)
}
#endif
inline void TL_messages_editInlineBotMessage::set_message(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtproto.TL_messages_editInlineBotMessage.message)
}
inline void TL_messages_editInlineBotMessage::set_message(const char* value, size_t size) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtproto.TL_messages_editInlineBotMessage.message)
}
inline ::std::string* TL_messages_editInlineBotMessage::mutable_message() {
  
  // @@protoc_insertion_point(field_mutable:mtproto.TL_messages_editInlineBotMessage.message)
  return message_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TL_messages_editInlineBotMessage::release_message() {
  // @@protoc_insertion_point(field_release:mtproto.TL_messages_editInlineBotMessage.message)
  
  return message_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TL_messages_editInlineBotMessage::set_allocated_message(::std::string* message) {
  if (message != NULL) {
    
  } else {
    
  }
  message_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), message);
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_messages_editInlineBotMessage.message)
}

// .mtproto.InputMedia media = 6;
inline bool TL_messages_editInlineBotMessage::has_media() const {
  return this != internal_default_instance() && media_ != NULL;
}
inline void TL_messages_editInlineBotMessage::clear_media() {
  if (GetArenaNoVirtual() == NULL && media_ != NULL) delete media_;
  media_ = NULL;
}
inline const ::mtproto::InputMedia& TL_messages_editInlineBotMessage::media() const {
  const ::mtproto::InputMedia* p = media_;
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_editInlineBotMessage.media)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::InputMedia*>(
      &::mtproto::_InputMedia_default_instance_);
}
inline ::mtproto::InputMedia* TL_messages_editInlineBotMessage::mutable_media() {
  
  if (media_ == NULL) {
    media_ = new ::mtproto::InputMedia;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_messages_editInlineBotMessage.media)
  return media_;
}
inline ::mtproto::InputMedia* TL_messages_editInlineBotMessage::release_media() {
  // @@protoc_insertion_point(field_release:mtproto.TL_messages_editInlineBotMessage.media)
  
  ::mtproto::InputMedia* temp = media_;
  media_ = NULL;
  return temp;
}
inline void TL_messages_editInlineBotMessage::set_allocated_media(::mtproto::InputMedia* media) {
  delete media_;
  media_ = media;
  if (media) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_messages_editInlineBotMessage.media)
}

// .mtproto.ReplyMarkup reply_markup = 7;
inline bool TL_messages_editInlineBotMessage::has_reply_markup() const {
  return this != internal_default_instance() && reply_markup_ != NULL;
}
inline void TL_messages_editInlineBotMessage::clear_reply_markup() {
  if (GetArenaNoVirtual() == NULL && reply_markup_ != NULL) delete reply_markup_;
  reply_markup_ = NULL;
}
inline const ::mtproto::ReplyMarkup& TL_messages_editInlineBotMessage::reply_markup() const {
  const ::mtproto::ReplyMarkup* p = reply_markup_;
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_editInlineBotMessage.reply_markup)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::ReplyMarkup*>(
      &::mtproto::_ReplyMarkup_default_instance_);
}
inline ::mtproto::ReplyMarkup* TL_messages_editInlineBotMessage::mutable_reply_markup() {
  
  if (reply_markup_ == NULL) {
    reply_markup_ = new ::mtproto::ReplyMarkup;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_messages_editInlineBotMessage.reply_markup)
  return reply_markup_;
}
inline ::mtproto::ReplyMarkup* TL_messages_editInlineBotMessage::release_reply_markup() {
  // @@protoc_insertion_point(field_release:mtproto.TL_messages_editInlineBotMessage.reply_markup)
  
  ::mtproto::ReplyMarkup* temp = reply_markup_;
  reply_markup_ = NULL;
  return temp;
}
inline void TL_messages_editInlineBotMessage::set_allocated_reply_markup(::mtproto::ReplyMarkup* reply_markup) {
  delete reply_markup_;
  reply_markup_ = reply_markup;
  if (reply_markup) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_messages_editInlineBotMessage.reply_markup)
}

// repeated .mtproto.MessageEntity entities = 8;
inline int TL_messages_editInlineBotMessage::entities_size() const {
  return entities_.size();
}
inline void TL_messages_editInlineBotMessage::clear_entities() {
  entities_.Clear();
}
inline const ::mtproto::MessageEntity& TL_messages_editInlineBotMessage::entities(int index) const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_editInlineBotMessage.entities)
  return entities_.Get(index);
}
inline ::mtproto::MessageEntity* TL_messages_editInlineBotMessage::mutable_entities(int index) {
  // @@protoc_insertion_point(field_mutable:mtproto.TL_messages_editInlineBotMessage.entities)
  return entities_.Mutable(index);
}
inline ::mtproto::MessageEntity* TL_messages_editInlineBotMessage::add_entities() {
  // @@protoc_insertion_point(field_add:mtproto.TL_messages_editInlineBotMessage.entities)
  return entities_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::mtproto::MessageEntity >*
TL_messages_editInlineBotMessage::mutable_entities() {
  // @@protoc_insertion_point(field_mutable_list:mtproto.TL_messages_editInlineBotMessage.entities)
  return &entities_;
}
inline const ::google::protobuf::RepeatedPtrField< ::mtproto::MessageEntity >&
TL_messages_editInlineBotMessage::entities() const {
  // @@protoc_insertion_point(field_list:mtproto.TL_messages_editInlineBotMessage.entities)
  return entities_;
}

// .mtproto.InputGeoPoint geo_point = 9;
inline bool TL_messages_editInlineBotMessage::has_geo_point() const {
  return this != internal_default_instance() && geo_point_ != NULL;
}
inline void TL_messages_editInlineBotMessage::clear_geo_point() {
  if (GetArenaNoVirtual() == NULL && geo_point_ != NULL) delete geo_point_;
  geo_point_ = NULL;
}
inline const ::mtproto::InputGeoPoint& TL_messages_editInlineBotMessage::geo_point() const {
  const ::mtproto::InputGeoPoint* p = geo_point_;
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_editInlineBotMessage.geo_point)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::InputGeoPoint*>(
      &::mtproto::_InputGeoPoint_default_instance_);
}
inline ::mtproto::InputGeoPoint* TL_messages_editInlineBotMessage::mutable_geo_point() {
  
  if (geo_point_ == NULL) {
    geo_point_ = new ::mtproto::InputGeoPoint;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_messages_editInlineBotMessage.geo_point)
  return geo_point_;
}
inline ::mtproto::InputGeoPoint* TL_messages_editInlineBotMessage::release_geo_point() {
  // @@protoc_insertion_point(field_release:mtproto.TL_messages_editInlineBotMessage.geo_point)
  
  ::mtproto::InputGeoPoint* temp = geo_point_;
  geo_point_ = NULL;
  return temp;
}
inline void TL_messages_editInlineBotMessage::set_allocated_geo_point(::mtproto::InputGeoPoint* geo_point) {
  delete geo_point_;
  geo_point_ = geo_point;
  if (geo_point) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_messages_editInlineBotMessage.geo_point)
}

// -------------------------------------------------------------------

// TL_messages_getBotCallbackAnswer

// bool game = 2;
inline void TL_messages_getBotCallbackAnswer::clear_game() {
  game_ = false;
}
inline bool TL_messages_getBotCallbackAnswer::game() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_getBotCallbackAnswer.game)
  return game_;
}
inline void TL_messages_getBotCallbackAnswer::set_game(bool value) {
  
  game_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_getBotCallbackAnswer.game)
}

// .mtproto.InputPeer peer = 3;
inline bool TL_messages_getBotCallbackAnswer::has_peer() const {
  return this != internal_default_instance() && peer_ != NULL;
}
inline void TL_messages_getBotCallbackAnswer::clear_peer() {
  if (GetArenaNoVirtual() == NULL && peer_ != NULL) delete peer_;
  peer_ = NULL;
}
inline const ::mtproto::InputPeer& TL_messages_getBotCallbackAnswer::peer() const {
  const ::mtproto::InputPeer* p = peer_;
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_getBotCallbackAnswer.peer)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::InputPeer*>(
      &::mtproto::_InputPeer_default_instance_);
}
inline ::mtproto::InputPeer* TL_messages_getBotCallbackAnswer::mutable_peer() {
  
  if (peer_ == NULL) {
    peer_ = new ::mtproto::InputPeer;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_messages_getBotCallbackAnswer.peer)
  return peer_;
}
inline ::mtproto::InputPeer* TL_messages_getBotCallbackAnswer::release_peer() {
  // @@protoc_insertion_point(field_release:mtproto.TL_messages_getBotCallbackAnswer.peer)
  
  ::mtproto::InputPeer* temp = peer_;
  peer_ = NULL;
  return temp;
}
inline void TL_messages_getBotCallbackAnswer::set_allocated_peer(::mtproto::InputPeer* peer) {
  delete peer_;
  peer_ = peer;
  if (peer) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_messages_getBotCallbackAnswer.peer)
}

// int32 msg_id = 4;
inline void TL_messages_getBotCallbackAnswer::clear_msg_id() {
  msg_id_ = 0;
}
inline ::google::protobuf::int32 TL_messages_getBotCallbackAnswer::msg_id() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_getBotCallbackAnswer.msg_id)
  return msg_id_;
}
inline void TL_messages_getBotCallbackAnswer::set_msg_id(::google::protobuf::int32 value) {
  
  msg_id_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_getBotCallbackAnswer.msg_id)
}

// bytes data = 5;
inline void TL_messages_getBotCallbackAnswer::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& TL_messages_getBotCallbackAnswer::data() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_getBotCallbackAnswer.data)
  return data_.GetNoArena();
}
inline void TL_messages_getBotCallbackAnswer::set_data(const ::std::string& value) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_getBotCallbackAnswer.data)
}
#if LANG_CXX11
inline void TL_messages_getBotCallbackAnswer::set_data(::std::string&& value) {
  
  data_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mtproto.TL_messages_getBotCallbackAnswer.data)
}
#endif
inline void TL_messages_getBotCallbackAnswer::set_data(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtproto.TL_messages_getBotCallbackAnswer.data)
}
inline void TL_messages_getBotCallbackAnswer::set_data(const void* value, size_t size) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtproto.TL_messages_getBotCallbackAnswer.data)
}
inline ::std::string* TL_messages_getBotCallbackAnswer::mutable_data() {
  
  // @@protoc_insertion_point(field_mutable:mtproto.TL_messages_getBotCallbackAnswer.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TL_messages_getBotCallbackAnswer::release_data() {
  // @@protoc_insertion_point(field_release:mtproto.TL_messages_getBotCallbackAnswer.data)
  
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TL_messages_getBotCallbackAnswer::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    
  } else {
    
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_messages_getBotCallbackAnswer.data)
}

// -------------------------------------------------------------------

// TL_messages_setBotCallbackAnswer

// bool alert = 2;
inline void TL_messages_setBotCallbackAnswer::clear_alert() {
  alert_ = false;
}
inline bool TL_messages_setBotCallbackAnswer::alert() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_setBotCallbackAnswer.alert)
  return alert_;
}
inline void TL_messages_setBotCallbackAnswer::set_alert(bool value) {
  
  alert_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_setBotCallbackAnswer.alert)
}

// int64 query_id = 3;
inline void TL_messages_setBotCallbackAnswer::clear_query_id() {
  query_id_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 TL_messages_setBotCallbackAnswer::query_id() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_setBotCallbackAnswer.query_id)
  return query_id_;
}
inline void TL_messages_setBotCallbackAnswer::set_query_id(::google::protobuf::int64 value) {
  
  query_id_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_setBotCallbackAnswer.query_id)
}

// string message = 4;
inline void TL_messages_setBotCallbackAnswer::clear_message() {
  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& TL_messages_setBotCallbackAnswer::message() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_setBotCallbackAnswer.message)
  return message_.GetNoArena();
}
inline void TL_messages_setBotCallbackAnswer::set_message(const ::std::string& value) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_setBotCallbackAnswer.message)
}
#if LANG_CXX11
inline void TL_messages_setBotCallbackAnswer::set_message(::std::string&& value) {
  
  message_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mtproto.TL_messages_setBotCallbackAnswer.message)
}
#endif
inline void TL_messages_setBotCallbackAnswer::set_message(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtproto.TL_messages_setBotCallbackAnswer.message)
}
inline void TL_messages_setBotCallbackAnswer::set_message(const char* value, size_t size) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtproto.TL_messages_setBotCallbackAnswer.message)
}
inline ::std::string* TL_messages_setBotCallbackAnswer::mutable_message() {
  
  // @@protoc_insertion_point(field_mutable:mtproto.TL_messages_setBotCallbackAnswer.message)
  return message_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TL_messages_setBotCallbackAnswer::release_message() {
  // @@protoc_insertion_point(field_release:mtproto.TL_messages_setBotCallbackAnswer.message)
  
  return message_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TL_messages_setBotCallbackAnswer::set_allocated_message(::std::string* message) {
  if (message != NULL) {
    
  } else {
    
  }
  message_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), message);
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_messages_setBotCallbackAnswer.message)
}

// string url = 5;
inline void TL_messages_setBotCallbackAnswer::clear_url() {
  url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& TL_messages_setBotCallbackAnswer::url() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_setBotCallbackAnswer.url)
  return url_.GetNoArena();
}
inline void TL_messages_setBotCallbackAnswer::set_url(const ::std::string& value) {
  
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_setBotCallbackAnswer.url)
}
#if LANG_CXX11
inline void TL_messages_setBotCallbackAnswer::set_url(::std::string&& value) {
  
  url_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mtproto.TL_messages_setBotCallbackAnswer.url)
}
#endif
inline void TL_messages_setBotCallbackAnswer::set_url(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtproto.TL_messages_setBotCallbackAnswer.url)
}
inline void TL_messages_setBotCallbackAnswer::set_url(const char* value, size_t size) {
  
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtproto.TL_messages_setBotCallbackAnswer.url)
}
inline ::std::string* TL_messages_setBotCallbackAnswer::mutable_url() {
  
  // @@protoc_insertion_point(field_mutable:mtproto.TL_messages_setBotCallbackAnswer.url)
  return url_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TL_messages_setBotCallbackAnswer::release_url() {
  // @@protoc_insertion_point(field_release:mtproto.TL_messages_setBotCallbackAnswer.url)
  
  return url_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TL_messages_setBotCallbackAnswer::set_allocated_url(::std::string* url) {
  if (url != NULL) {
    
  } else {
    
  }
  url_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), url);
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_messages_setBotCallbackAnswer.url)
}

// int32 cache_time = 6;
inline void TL_messages_setBotCallbackAnswer::clear_cache_time() {
  cache_time_ = 0;
}
inline ::google::protobuf::int32 TL_messages_setBotCallbackAnswer::cache_time() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_setBotCallbackAnswer.cache_time)
  return cache_time_;
}
inline void TL_messages_setBotCallbackAnswer::set_cache_time(::google::protobuf::int32 value) {
  
  cache_time_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_setBotCallbackAnswer.cache_time)
}

// -------------------------------------------------------------------

// TL_messages_getPeerDialogs

// repeated .mtproto.InputDialogPeer peers = 1;
inline int TL_messages_getPeerDialogs::peers_size() const {
  return peers_.size();
}
inline void TL_messages_getPeerDialogs::clear_peers() {
  peers_.Clear();
}
inline const ::mtproto::InputDialogPeer& TL_messages_getPeerDialogs::peers(int index) const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_getPeerDialogs.peers)
  return peers_.Get(index);
}
inline ::mtproto::InputDialogPeer* TL_messages_getPeerDialogs::mutable_peers(int index) {
  // @@protoc_insertion_point(field_mutable:mtproto.TL_messages_getPeerDialogs.peers)
  return peers_.Mutable(index);
}
inline ::mtproto::InputDialogPeer* TL_messages_getPeerDialogs::add_peers() {
  // @@protoc_insertion_point(field_add:mtproto.TL_messages_getPeerDialogs.peers)
  return peers_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::mtproto::InputDialogPeer >*
TL_messages_getPeerDialogs::mutable_peers() {
  // @@protoc_insertion_point(field_mutable_list:mtproto.TL_messages_getPeerDialogs.peers)
  return &peers_;
}
inline const ::google::protobuf::RepeatedPtrField< ::mtproto::InputDialogPeer >&
TL_messages_getPeerDialogs::peers() const {
  // @@protoc_insertion_point(field_list:mtproto.TL_messages_getPeerDialogs.peers)
  return peers_;
}

// -------------------------------------------------------------------

// TL_messages_saveDraft

// bool no_webpage = 2;
inline void TL_messages_saveDraft::clear_no_webpage() {
  no_webpage_ = false;
}
inline bool TL_messages_saveDraft::no_webpage() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_saveDraft.no_webpage)
  return no_webpage_;
}
inline void TL_messages_saveDraft::set_no_webpage(bool value) {
  
  no_webpage_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_saveDraft.no_webpage)
}

// int32 reply_to_msg_id = 3;
inline void TL_messages_saveDraft::clear_reply_to_msg_id() {
  reply_to_msg_id_ = 0;
}
inline ::google::protobuf::int32 TL_messages_saveDraft::reply_to_msg_id() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_saveDraft.reply_to_msg_id)
  return reply_to_msg_id_;
}
inline void TL_messages_saveDraft::set_reply_to_msg_id(::google::protobuf::int32 value) {
  
  reply_to_msg_id_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_saveDraft.reply_to_msg_id)
}

// .mtproto.InputPeer peer = 4;
inline bool TL_messages_saveDraft::has_peer() const {
  return this != internal_default_instance() && peer_ != NULL;
}
inline void TL_messages_saveDraft::clear_peer() {
  if (GetArenaNoVirtual() == NULL && peer_ != NULL) delete peer_;
  peer_ = NULL;
}
inline const ::mtproto::InputPeer& TL_messages_saveDraft::peer() const {
  const ::mtproto::InputPeer* p = peer_;
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_saveDraft.peer)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::InputPeer*>(
      &::mtproto::_InputPeer_default_instance_);
}
inline ::mtproto::InputPeer* TL_messages_saveDraft::mutable_peer() {
  
  if (peer_ == NULL) {
    peer_ = new ::mtproto::InputPeer;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_messages_saveDraft.peer)
  return peer_;
}
inline ::mtproto::InputPeer* TL_messages_saveDraft::release_peer() {
  // @@protoc_insertion_point(field_release:mtproto.TL_messages_saveDraft.peer)
  
  ::mtproto::InputPeer* temp = peer_;
  peer_ = NULL;
  return temp;
}
inline void TL_messages_saveDraft::set_allocated_peer(::mtproto::InputPeer* peer) {
  delete peer_;
  peer_ = peer;
  if (peer) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_messages_saveDraft.peer)
}

// string message = 5;
inline void TL_messages_saveDraft::clear_message() {
  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& TL_messages_saveDraft::message() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_saveDraft.message)
  return message_.GetNoArena();
}
inline void TL_messages_saveDraft::set_message(const ::std::string& value) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_saveDraft.message)
}
#if LANG_CXX11
inline void TL_messages_saveDraft::set_message(::std::string&& value) {
  
  message_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mtproto.TL_messages_saveDraft.message)
}
#endif
inline void TL_messages_saveDraft::set_message(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtproto.TL_messages_saveDraft.message)
}
inline void TL_messages_saveDraft::set_message(const char* value, size_t size) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtproto.TL_messages_saveDraft.message)
}
inline ::std::string* TL_messages_saveDraft::mutable_message() {
  
  // @@protoc_insertion_point(field_mutable:mtproto.TL_messages_saveDraft.message)
  return message_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TL_messages_saveDraft::release_message() {
  // @@protoc_insertion_point(field_release:mtproto.TL_messages_saveDraft.message)
  
  return message_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TL_messages_saveDraft::set_allocated_message(::std::string* message) {
  if (message != NULL) {
    
  } else {
    
  }
  message_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), message);
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_messages_saveDraft.message)
}

// repeated .mtproto.MessageEntity entities = 6;
inline int TL_messages_saveDraft::entities_size() const {
  return entities_.size();
}
inline void TL_messages_saveDraft::clear_entities() {
  entities_.Clear();
}
inline const ::mtproto::MessageEntity& TL_messages_saveDraft::entities(int index) const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_saveDraft.entities)
  return entities_.Get(index);
}
inline ::mtproto::MessageEntity* TL_messages_saveDraft::mutable_entities(int index) {
  // @@protoc_insertion_point(field_mutable:mtproto.TL_messages_saveDraft.entities)
  return entities_.Mutable(index);
}
inline ::mtproto::MessageEntity* TL_messages_saveDraft::add_entities() {
  // @@protoc_insertion_point(field_add:mtproto.TL_messages_saveDraft.entities)
  return entities_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::mtproto::MessageEntity >*
TL_messages_saveDraft::mutable_entities() {
  // @@protoc_insertion_point(field_mutable_list:mtproto.TL_messages_saveDraft.entities)
  return &entities_;
}
inline const ::google::protobuf::RepeatedPtrField< ::mtproto::MessageEntity >&
TL_messages_saveDraft::entities() const {
  // @@protoc_insertion_point(field_list:mtproto.TL_messages_saveDraft.entities)
  return entities_;
}

// -------------------------------------------------------------------

// TL_messages_getAllDrafts

// -------------------------------------------------------------------

// TL_messages_getFeaturedStickers

// int32 hash = 1;
inline void TL_messages_getFeaturedStickers::clear_hash() {
  hash_ = 0;
}
inline ::google::protobuf::int32 TL_messages_getFeaturedStickers::hash() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_getFeaturedStickers.hash)
  return hash_;
}
inline void TL_messages_getFeaturedStickers::set_hash(::google::protobuf::int32 value) {
  
  hash_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_getFeaturedStickers.hash)
}

// -------------------------------------------------------------------

// TL_messages_readFeaturedStickers

// repeated int64 id = 1;
inline int TL_messages_readFeaturedStickers::id_size() const {
  return id_.size();
}
inline void TL_messages_readFeaturedStickers::clear_id() {
  id_.Clear();
}
inline ::google::protobuf::int64 TL_messages_readFeaturedStickers::id(int index) const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_readFeaturedStickers.id)
  return id_.Get(index);
}
inline void TL_messages_readFeaturedStickers::set_id(int index, ::google::protobuf::int64 value) {
  id_.Set(index, value);
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_readFeaturedStickers.id)
}
inline void TL_messages_readFeaturedStickers::add_id(::google::protobuf::int64 value) {
  id_.Add(value);
  // @@protoc_insertion_point(field_add:mtproto.TL_messages_readFeaturedStickers.id)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
TL_messages_readFeaturedStickers::id() const {
  // @@protoc_insertion_point(field_list:mtproto.TL_messages_readFeaturedStickers.id)
  return id_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
TL_messages_readFeaturedStickers::mutable_id() {
  // @@protoc_insertion_point(field_mutable_list:mtproto.TL_messages_readFeaturedStickers.id)
  return &id_;
}

// -------------------------------------------------------------------

// TL_messages_getRecentStickers

// bool attached = 2;
inline void TL_messages_getRecentStickers::clear_attached() {
  attached_ = false;
}
inline bool TL_messages_getRecentStickers::attached() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_getRecentStickers.attached)
  return attached_;
}
inline void TL_messages_getRecentStickers::set_attached(bool value) {
  
  attached_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_getRecentStickers.attached)
}

// int32 hash = 3;
inline void TL_messages_getRecentStickers::clear_hash() {
  hash_ = 0;
}
inline ::google::protobuf::int32 TL_messages_getRecentStickers::hash() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_getRecentStickers.hash)
  return hash_;
}
inline void TL_messages_getRecentStickers::set_hash(::google::protobuf::int32 value) {
  
  hash_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_getRecentStickers.hash)
}

// -------------------------------------------------------------------

// TL_messages_saveRecentSticker

// bool attached = 2;
inline void TL_messages_saveRecentSticker::clear_attached() {
  attached_ = false;
}
inline bool TL_messages_saveRecentSticker::attached() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_saveRecentSticker.attached)
  return attached_;
}
inline void TL_messages_saveRecentSticker::set_attached(bool value) {
  
  attached_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_saveRecentSticker.attached)
}

// .mtproto.InputDocument id = 3;
inline bool TL_messages_saveRecentSticker::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline void TL_messages_saveRecentSticker::clear_id() {
  if (GetArenaNoVirtual() == NULL && id_ != NULL) delete id_;
  id_ = NULL;
}
inline const ::mtproto::InputDocument& TL_messages_saveRecentSticker::id() const {
  const ::mtproto::InputDocument* p = id_;
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_saveRecentSticker.id)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::InputDocument*>(
      &::mtproto::_InputDocument_default_instance_);
}
inline ::mtproto::InputDocument* TL_messages_saveRecentSticker::mutable_id() {
  
  if (id_ == NULL) {
    id_ = new ::mtproto::InputDocument;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_messages_saveRecentSticker.id)
  return id_;
}
inline ::mtproto::InputDocument* TL_messages_saveRecentSticker::release_id() {
  // @@protoc_insertion_point(field_release:mtproto.TL_messages_saveRecentSticker.id)
  
  ::mtproto::InputDocument* temp = id_;
  id_ = NULL;
  return temp;
}
inline void TL_messages_saveRecentSticker::set_allocated_id(::mtproto::InputDocument* id) {
  delete id_;
  id_ = id;
  if (id) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_messages_saveRecentSticker.id)
}

// .mtproto.Bool unsave = 4;
inline bool TL_messages_saveRecentSticker::has_unsave() const {
  return this != internal_default_instance() && unsave_ != NULL;
}
inline void TL_messages_saveRecentSticker::clear_unsave() {
  if (GetArenaNoVirtual() == NULL && unsave_ != NULL) delete unsave_;
  unsave_ = NULL;
}
inline const ::mtproto::Bool& TL_messages_saveRecentSticker::unsave() const {
  const ::mtproto::Bool* p = unsave_;
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_saveRecentSticker.unsave)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::Bool*>(
      &::mtproto::_Bool_default_instance_);
}
inline ::mtproto::Bool* TL_messages_saveRecentSticker::mutable_unsave() {
  
  if (unsave_ == NULL) {
    unsave_ = new ::mtproto::Bool;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_messages_saveRecentSticker.unsave)
  return unsave_;
}
inline ::mtproto::Bool* TL_messages_saveRecentSticker::release_unsave() {
  // @@protoc_insertion_point(field_release:mtproto.TL_messages_saveRecentSticker.unsave)
  
  ::mtproto::Bool* temp = unsave_;
  unsave_ = NULL;
  return temp;
}
inline void TL_messages_saveRecentSticker::set_allocated_unsave(::mtproto::Bool* unsave) {
  delete unsave_;
  unsave_ = unsave;
  if (unsave) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_messages_saveRecentSticker.unsave)
}

// -------------------------------------------------------------------

// TL_messages_clearRecentStickers

// bool attached = 2;
inline void TL_messages_clearRecentStickers::clear_attached() {
  attached_ = false;
}
inline bool TL_messages_clearRecentStickers::attached() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_clearRecentStickers.attached)
  return attached_;
}
inline void TL_messages_clearRecentStickers::set_attached(bool value) {
  
  attached_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_clearRecentStickers.attached)
}

// -------------------------------------------------------------------

// TL_messages_getArchivedStickers

// bool masks = 2;
inline void TL_messages_getArchivedStickers::clear_masks() {
  masks_ = false;
}
inline bool TL_messages_getArchivedStickers::masks() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_getArchivedStickers.masks)
  return masks_;
}
inline void TL_messages_getArchivedStickers::set_masks(bool value) {
  
  masks_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_getArchivedStickers.masks)
}

// int64 offset_id = 3;
inline void TL_messages_getArchivedStickers::clear_offset_id() {
  offset_id_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 TL_messages_getArchivedStickers::offset_id() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_getArchivedStickers.offset_id)
  return offset_id_;
}
inline void TL_messages_getArchivedStickers::set_offset_id(::google::protobuf::int64 value) {
  
  offset_id_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_getArchivedStickers.offset_id)
}

// int32 limit = 4;
inline void TL_messages_getArchivedStickers::clear_limit() {
  limit_ = 0;
}
inline ::google::protobuf::int32 TL_messages_getArchivedStickers::limit() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_getArchivedStickers.limit)
  return limit_;
}
inline void TL_messages_getArchivedStickers::set_limit(::google::protobuf::int32 value) {
  
  limit_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_getArchivedStickers.limit)
}

// -------------------------------------------------------------------

// TL_messages_getMaskStickers

// int32 hash = 1;
inline void TL_messages_getMaskStickers::clear_hash() {
  hash_ = 0;
}
inline ::google::protobuf::int32 TL_messages_getMaskStickers::hash() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_getMaskStickers.hash)
  return hash_;
}
inline void TL_messages_getMaskStickers::set_hash(::google::protobuf::int32 value) {
  
  hash_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_getMaskStickers.hash)
}

// -------------------------------------------------------------------

// TL_messages_getAttachedStickers

// .mtproto.InputStickeredMedia media = 1;
inline bool TL_messages_getAttachedStickers::has_media() const {
  return this != internal_default_instance() && media_ != NULL;
}
inline void TL_messages_getAttachedStickers::clear_media() {
  if (GetArenaNoVirtual() == NULL && media_ != NULL) delete media_;
  media_ = NULL;
}
inline const ::mtproto::InputStickeredMedia& TL_messages_getAttachedStickers::media() const {
  const ::mtproto::InputStickeredMedia* p = media_;
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_getAttachedStickers.media)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::InputStickeredMedia*>(
      &::mtproto::_InputStickeredMedia_default_instance_);
}
inline ::mtproto::InputStickeredMedia* TL_messages_getAttachedStickers::mutable_media() {
  
  if (media_ == NULL) {
    media_ = new ::mtproto::InputStickeredMedia;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_messages_getAttachedStickers.media)
  return media_;
}
inline ::mtproto::InputStickeredMedia* TL_messages_getAttachedStickers::release_media() {
  // @@protoc_insertion_point(field_release:mtproto.TL_messages_getAttachedStickers.media)
  
  ::mtproto::InputStickeredMedia* temp = media_;
  media_ = NULL;
  return temp;
}
inline void TL_messages_getAttachedStickers::set_allocated_media(::mtproto::InputStickeredMedia* media) {
  delete media_;
  media_ = media;
  if (media) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_messages_getAttachedStickers.media)
}

// -------------------------------------------------------------------

// TL_messages_setGameScore

// bool edit_message = 2;
inline void TL_messages_setGameScore::clear_edit_message() {
  edit_message_ = false;
}
inline bool TL_messages_setGameScore::edit_message() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_setGameScore.edit_message)
  return edit_message_;
}
inline void TL_messages_setGameScore::set_edit_message(bool value) {
  
  edit_message_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_setGameScore.edit_message)
}

// bool force = 3;
inline void TL_messages_setGameScore::clear_force() {
  force_ = false;
}
inline bool TL_messages_setGameScore::force() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_setGameScore.force)
  return force_;
}
inline void TL_messages_setGameScore::set_force(bool value) {
  
  force_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_setGameScore.force)
}

// .mtproto.InputPeer peer = 4;
inline bool TL_messages_setGameScore::has_peer() const {
  return this != internal_default_instance() && peer_ != NULL;
}
inline void TL_messages_setGameScore::clear_peer() {
  if (GetArenaNoVirtual() == NULL && peer_ != NULL) delete peer_;
  peer_ = NULL;
}
inline const ::mtproto::InputPeer& TL_messages_setGameScore::peer() const {
  const ::mtproto::InputPeer* p = peer_;
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_setGameScore.peer)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::InputPeer*>(
      &::mtproto::_InputPeer_default_instance_);
}
inline ::mtproto::InputPeer* TL_messages_setGameScore::mutable_peer() {
  
  if (peer_ == NULL) {
    peer_ = new ::mtproto::InputPeer;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_messages_setGameScore.peer)
  return peer_;
}
inline ::mtproto::InputPeer* TL_messages_setGameScore::release_peer() {
  // @@protoc_insertion_point(field_release:mtproto.TL_messages_setGameScore.peer)
  
  ::mtproto::InputPeer* temp = peer_;
  peer_ = NULL;
  return temp;
}
inline void TL_messages_setGameScore::set_allocated_peer(::mtproto::InputPeer* peer) {
  delete peer_;
  peer_ = peer;
  if (peer) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_messages_setGameScore.peer)
}

// int32 id = 5;
inline void TL_messages_setGameScore::clear_id() {
  id_ = 0;
}
inline ::google::protobuf::int32 TL_messages_setGameScore::id() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_setGameScore.id)
  return id_;
}
inline void TL_messages_setGameScore::set_id(::google::protobuf::int32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_setGameScore.id)
}

// .mtproto.InputUser user_id = 6;
inline bool TL_messages_setGameScore::has_user_id() const {
  return this != internal_default_instance() && user_id_ != NULL;
}
inline void TL_messages_setGameScore::clear_user_id() {
  if (GetArenaNoVirtual() == NULL && user_id_ != NULL) delete user_id_;
  user_id_ = NULL;
}
inline const ::mtproto::InputUser& TL_messages_setGameScore::user_id() const {
  const ::mtproto::InputUser* p = user_id_;
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_setGameScore.user_id)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::InputUser*>(
      &::mtproto::_InputUser_default_instance_);
}
inline ::mtproto::InputUser* TL_messages_setGameScore::mutable_user_id() {
  
  if (user_id_ == NULL) {
    user_id_ = new ::mtproto::InputUser;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_messages_setGameScore.user_id)
  return user_id_;
}
inline ::mtproto::InputUser* TL_messages_setGameScore::release_user_id() {
  // @@protoc_insertion_point(field_release:mtproto.TL_messages_setGameScore.user_id)
  
  ::mtproto::InputUser* temp = user_id_;
  user_id_ = NULL;
  return temp;
}
inline void TL_messages_setGameScore::set_allocated_user_id(::mtproto::InputUser* user_id) {
  delete user_id_;
  user_id_ = user_id;
  if (user_id) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_messages_setGameScore.user_id)
}

// int32 score = 7;
inline void TL_messages_setGameScore::clear_score() {
  score_ = 0;
}
inline ::google::protobuf::int32 TL_messages_setGameScore::score() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_setGameScore.score)
  return score_;
}
inline void TL_messages_setGameScore::set_score(::google::protobuf::int32 value) {
  
  score_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_setGameScore.score)
}

// -------------------------------------------------------------------

// TL_messages_setInlineGameScore

// bool edit_message = 2;
inline void TL_messages_setInlineGameScore::clear_edit_message() {
  edit_message_ = false;
}
inline bool TL_messages_setInlineGameScore::edit_message() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_setInlineGameScore.edit_message)
  return edit_message_;
}
inline void TL_messages_setInlineGameScore::set_edit_message(bool value) {
  
  edit_message_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_setInlineGameScore.edit_message)
}

// bool force = 3;
inline void TL_messages_setInlineGameScore::clear_force() {
  force_ = false;
}
inline bool TL_messages_setInlineGameScore::force() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_setInlineGameScore.force)
  return force_;
}
inline void TL_messages_setInlineGameScore::set_force(bool value) {
  
  force_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_setInlineGameScore.force)
}

// .mtproto.InputBotInlineMessageID id = 4;
inline bool TL_messages_setInlineGameScore::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline void TL_messages_setInlineGameScore::clear_id() {
  if (GetArenaNoVirtual() == NULL && id_ != NULL) delete id_;
  id_ = NULL;
}
inline const ::mtproto::InputBotInlineMessageID& TL_messages_setInlineGameScore::id() const {
  const ::mtproto::InputBotInlineMessageID* p = id_;
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_setInlineGameScore.id)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::InputBotInlineMessageID*>(
      &::mtproto::_InputBotInlineMessageID_default_instance_);
}
inline ::mtproto::InputBotInlineMessageID* TL_messages_setInlineGameScore::mutable_id() {
  
  if (id_ == NULL) {
    id_ = new ::mtproto::InputBotInlineMessageID;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_messages_setInlineGameScore.id)
  return id_;
}
inline ::mtproto::InputBotInlineMessageID* TL_messages_setInlineGameScore::release_id() {
  // @@protoc_insertion_point(field_release:mtproto.TL_messages_setInlineGameScore.id)
  
  ::mtproto::InputBotInlineMessageID* temp = id_;
  id_ = NULL;
  return temp;
}
inline void TL_messages_setInlineGameScore::set_allocated_id(::mtproto::InputBotInlineMessageID* id) {
  delete id_;
  id_ = id;
  if (id) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_messages_setInlineGameScore.id)
}

// .mtproto.InputUser user_id = 5;
inline bool TL_messages_setInlineGameScore::has_user_id() const {
  return this != internal_default_instance() && user_id_ != NULL;
}
inline void TL_messages_setInlineGameScore::clear_user_id() {
  if (GetArenaNoVirtual() == NULL && user_id_ != NULL) delete user_id_;
  user_id_ = NULL;
}
inline const ::mtproto::InputUser& TL_messages_setInlineGameScore::user_id() const {
  const ::mtproto::InputUser* p = user_id_;
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_setInlineGameScore.user_id)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::InputUser*>(
      &::mtproto::_InputUser_default_instance_);
}
inline ::mtproto::InputUser* TL_messages_setInlineGameScore::mutable_user_id() {
  
  if (user_id_ == NULL) {
    user_id_ = new ::mtproto::InputUser;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_messages_setInlineGameScore.user_id)
  return user_id_;
}
inline ::mtproto::InputUser* TL_messages_setInlineGameScore::release_user_id() {
  // @@protoc_insertion_point(field_release:mtproto.TL_messages_setInlineGameScore.user_id)
  
  ::mtproto::InputUser* temp = user_id_;
  user_id_ = NULL;
  return temp;
}
inline void TL_messages_setInlineGameScore::set_allocated_user_id(::mtproto::InputUser* user_id) {
  delete user_id_;
  user_id_ = user_id;
  if (user_id) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_messages_setInlineGameScore.user_id)
}

// int32 score = 6;
inline void TL_messages_setInlineGameScore::clear_score() {
  score_ = 0;
}
inline ::google::protobuf::int32 TL_messages_setInlineGameScore::score() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_setInlineGameScore.score)
  return score_;
}
inline void TL_messages_setInlineGameScore::set_score(::google::protobuf::int32 value) {
  
  score_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_setInlineGameScore.score)
}

// -------------------------------------------------------------------

// TL_messages_getGameHighScores

// .mtproto.InputPeer peer = 1;
inline bool TL_messages_getGameHighScores::has_peer() const {
  return this != internal_default_instance() && peer_ != NULL;
}
inline void TL_messages_getGameHighScores::clear_peer() {
  if (GetArenaNoVirtual() == NULL && peer_ != NULL) delete peer_;
  peer_ = NULL;
}
inline const ::mtproto::InputPeer& TL_messages_getGameHighScores::peer() const {
  const ::mtproto::InputPeer* p = peer_;
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_getGameHighScores.peer)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::InputPeer*>(
      &::mtproto::_InputPeer_default_instance_);
}
inline ::mtproto::InputPeer* TL_messages_getGameHighScores::mutable_peer() {
  
  if (peer_ == NULL) {
    peer_ = new ::mtproto::InputPeer;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_messages_getGameHighScores.peer)
  return peer_;
}
inline ::mtproto::InputPeer* TL_messages_getGameHighScores::release_peer() {
  // @@protoc_insertion_point(field_release:mtproto.TL_messages_getGameHighScores.peer)
  
  ::mtproto::InputPeer* temp = peer_;
  peer_ = NULL;
  return temp;
}
inline void TL_messages_getGameHighScores::set_allocated_peer(::mtproto::InputPeer* peer) {
  delete peer_;
  peer_ = peer;
  if (peer) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_messages_getGameHighScores.peer)
}

// int32 id = 2;
inline void TL_messages_getGameHighScores::clear_id() {
  id_ = 0;
}
inline ::google::protobuf::int32 TL_messages_getGameHighScores::id() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_getGameHighScores.id)
  return id_;
}
inline void TL_messages_getGameHighScores::set_id(::google::protobuf::int32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_getGameHighScores.id)
}

// .mtproto.InputUser user_id = 3;
inline bool TL_messages_getGameHighScores::has_user_id() const {
  return this != internal_default_instance() && user_id_ != NULL;
}
inline void TL_messages_getGameHighScores::clear_user_id() {
  if (GetArenaNoVirtual() == NULL && user_id_ != NULL) delete user_id_;
  user_id_ = NULL;
}
inline const ::mtproto::InputUser& TL_messages_getGameHighScores::user_id() const {
  const ::mtproto::InputUser* p = user_id_;
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_getGameHighScores.user_id)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::InputUser*>(
      &::mtproto::_InputUser_default_instance_);
}
inline ::mtproto::InputUser* TL_messages_getGameHighScores::mutable_user_id() {
  
  if (user_id_ == NULL) {
    user_id_ = new ::mtproto::InputUser;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_messages_getGameHighScores.user_id)
  return user_id_;
}
inline ::mtproto::InputUser* TL_messages_getGameHighScores::release_user_id() {
  // @@protoc_insertion_point(field_release:mtproto.TL_messages_getGameHighScores.user_id)
  
  ::mtproto::InputUser* temp = user_id_;
  user_id_ = NULL;
  return temp;
}
inline void TL_messages_getGameHighScores::set_allocated_user_id(::mtproto::InputUser* user_id) {
  delete user_id_;
  user_id_ = user_id;
  if (user_id) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_messages_getGameHighScores.user_id)
}

// -------------------------------------------------------------------

// TL_messages_getInlineGameHighScores

// .mtproto.InputBotInlineMessageID id = 1;
inline bool TL_messages_getInlineGameHighScores::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline void TL_messages_getInlineGameHighScores::clear_id() {
  if (GetArenaNoVirtual() == NULL && id_ != NULL) delete id_;
  id_ = NULL;
}
inline const ::mtproto::InputBotInlineMessageID& TL_messages_getInlineGameHighScores::id() const {
  const ::mtproto::InputBotInlineMessageID* p = id_;
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_getInlineGameHighScores.id)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::InputBotInlineMessageID*>(
      &::mtproto::_InputBotInlineMessageID_default_instance_);
}
inline ::mtproto::InputBotInlineMessageID* TL_messages_getInlineGameHighScores::mutable_id() {
  
  if (id_ == NULL) {
    id_ = new ::mtproto::InputBotInlineMessageID;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_messages_getInlineGameHighScores.id)
  return id_;
}
inline ::mtproto::InputBotInlineMessageID* TL_messages_getInlineGameHighScores::release_id() {
  // @@protoc_insertion_point(field_release:mtproto.TL_messages_getInlineGameHighScores.id)
  
  ::mtproto::InputBotInlineMessageID* temp = id_;
  id_ = NULL;
  return temp;
}
inline void TL_messages_getInlineGameHighScores::set_allocated_id(::mtproto::InputBotInlineMessageID* id) {
  delete id_;
  id_ = id;
  if (id) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_messages_getInlineGameHighScores.id)
}

// .mtproto.InputUser user_id = 2;
inline bool TL_messages_getInlineGameHighScores::has_user_id() const {
  return this != internal_default_instance() && user_id_ != NULL;
}
inline void TL_messages_getInlineGameHighScores::clear_user_id() {
  if (GetArenaNoVirtual() == NULL && user_id_ != NULL) delete user_id_;
  user_id_ = NULL;
}
inline const ::mtproto::InputUser& TL_messages_getInlineGameHighScores::user_id() const {
  const ::mtproto::InputUser* p = user_id_;
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_getInlineGameHighScores.user_id)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::InputUser*>(
      &::mtproto::_InputUser_default_instance_);
}
inline ::mtproto::InputUser* TL_messages_getInlineGameHighScores::mutable_user_id() {
  
  if (user_id_ == NULL) {
    user_id_ = new ::mtproto::InputUser;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_messages_getInlineGameHighScores.user_id)
  return user_id_;
}
inline ::mtproto::InputUser* TL_messages_getInlineGameHighScores::release_user_id() {
  // @@protoc_insertion_point(field_release:mtproto.TL_messages_getInlineGameHighScores.user_id)
  
  ::mtproto::InputUser* temp = user_id_;
  user_id_ = NULL;
  return temp;
}
inline void TL_messages_getInlineGameHighScores::set_allocated_user_id(::mtproto::InputUser* user_id) {
  delete user_id_;
  user_id_ = user_id;
  if (user_id) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_messages_getInlineGameHighScores.user_id)
}

// -------------------------------------------------------------------

// TL_messages_getCommonChats

// .mtproto.InputUser user_id = 1;
inline bool TL_messages_getCommonChats::has_user_id() const {
  return this != internal_default_instance() && user_id_ != NULL;
}
inline void TL_messages_getCommonChats::clear_user_id() {
  if (GetArenaNoVirtual() == NULL && user_id_ != NULL) delete user_id_;
  user_id_ = NULL;
}
inline const ::mtproto::InputUser& TL_messages_getCommonChats::user_id() const {
  const ::mtproto::InputUser* p = user_id_;
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_getCommonChats.user_id)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::InputUser*>(
      &::mtproto::_InputUser_default_instance_);
}
inline ::mtproto::InputUser* TL_messages_getCommonChats::mutable_user_id() {
  
  if (user_id_ == NULL) {
    user_id_ = new ::mtproto::InputUser;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_messages_getCommonChats.user_id)
  return user_id_;
}
inline ::mtproto::InputUser* TL_messages_getCommonChats::release_user_id() {
  // @@protoc_insertion_point(field_release:mtproto.TL_messages_getCommonChats.user_id)
  
  ::mtproto::InputUser* temp = user_id_;
  user_id_ = NULL;
  return temp;
}
inline void TL_messages_getCommonChats::set_allocated_user_id(::mtproto::InputUser* user_id) {
  delete user_id_;
  user_id_ = user_id;
  if (user_id) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_messages_getCommonChats.user_id)
}

// int32 max_id = 2;
inline void TL_messages_getCommonChats::clear_max_id() {
  max_id_ = 0;
}
inline ::google::protobuf::int32 TL_messages_getCommonChats::max_id() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_getCommonChats.max_id)
  return max_id_;
}
inline void TL_messages_getCommonChats::set_max_id(::google::protobuf::int32 value) {
  
  max_id_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_getCommonChats.max_id)
}

// int32 limit = 3;
inline void TL_messages_getCommonChats::clear_limit() {
  limit_ = 0;
}
inline ::google::protobuf::int32 TL_messages_getCommonChats::limit() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_getCommonChats.limit)
  return limit_;
}
inline void TL_messages_getCommonChats::set_limit(::google::protobuf::int32 value) {
  
  limit_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_getCommonChats.limit)
}

// -------------------------------------------------------------------

// TL_messages_getAllChats

// repeated int32 except_ids = 1;
inline int TL_messages_getAllChats::except_ids_size() const {
  return except_ids_.size();
}
inline void TL_messages_getAllChats::clear_except_ids() {
  except_ids_.Clear();
}
inline ::google::protobuf::int32 TL_messages_getAllChats::except_ids(int index) const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_getAllChats.except_ids)
  return except_ids_.Get(index);
}
inline void TL_messages_getAllChats::set_except_ids(int index, ::google::protobuf::int32 value) {
  except_ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_getAllChats.except_ids)
}
inline void TL_messages_getAllChats::add_except_ids(::google::protobuf::int32 value) {
  except_ids_.Add(value);
  // @@protoc_insertion_point(field_add:mtproto.TL_messages_getAllChats.except_ids)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
TL_messages_getAllChats::except_ids() const {
  // @@protoc_insertion_point(field_list:mtproto.TL_messages_getAllChats.except_ids)
  return except_ids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
TL_messages_getAllChats::mutable_except_ids() {
  // @@protoc_insertion_point(field_mutable_list:mtproto.TL_messages_getAllChats.except_ids)
  return &except_ids_;
}

// -------------------------------------------------------------------

// TL_messages_getWebPage

// string url = 1;
inline void TL_messages_getWebPage::clear_url() {
  url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& TL_messages_getWebPage::url() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_getWebPage.url)
  return url_.GetNoArena();
}
inline void TL_messages_getWebPage::set_url(const ::std::string& value) {
  
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_getWebPage.url)
}
#if LANG_CXX11
inline void TL_messages_getWebPage::set_url(::std::string&& value) {
  
  url_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mtproto.TL_messages_getWebPage.url)
}
#endif
inline void TL_messages_getWebPage::set_url(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtproto.TL_messages_getWebPage.url)
}
inline void TL_messages_getWebPage::set_url(const char* value, size_t size) {
  
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtproto.TL_messages_getWebPage.url)
}
inline ::std::string* TL_messages_getWebPage::mutable_url() {
  
  // @@protoc_insertion_point(field_mutable:mtproto.TL_messages_getWebPage.url)
  return url_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TL_messages_getWebPage::release_url() {
  // @@protoc_insertion_point(field_release:mtproto.TL_messages_getWebPage.url)
  
  return url_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TL_messages_getWebPage::set_allocated_url(::std::string* url) {
  if (url != NULL) {
    
  } else {
    
  }
  url_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), url);
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_messages_getWebPage.url)
}

// int32 hash = 2;
inline void TL_messages_getWebPage::clear_hash() {
  hash_ = 0;
}
inline ::google::protobuf::int32 TL_messages_getWebPage::hash() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_getWebPage.hash)
  return hash_;
}
inline void TL_messages_getWebPage::set_hash(::google::protobuf::int32 value) {
  
  hash_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_getWebPage.hash)
}

// -------------------------------------------------------------------

// TL_messages_toggleDialogPin

// bool pinned = 2;
inline void TL_messages_toggleDialogPin::clear_pinned() {
  pinned_ = false;
}
inline bool TL_messages_toggleDialogPin::pinned() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_toggleDialogPin.pinned)
  return pinned_;
}
inline void TL_messages_toggleDialogPin::set_pinned(bool value) {
  
  pinned_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_toggleDialogPin.pinned)
}

// .mtproto.InputDialogPeer peer = 3;
inline bool TL_messages_toggleDialogPin::has_peer() const {
  return this != internal_default_instance() && peer_ != NULL;
}
inline void TL_messages_toggleDialogPin::clear_peer() {
  if (GetArenaNoVirtual() == NULL && peer_ != NULL) delete peer_;
  peer_ = NULL;
}
inline const ::mtproto::InputDialogPeer& TL_messages_toggleDialogPin::peer() const {
  const ::mtproto::InputDialogPeer* p = peer_;
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_toggleDialogPin.peer)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::InputDialogPeer*>(
      &::mtproto::_InputDialogPeer_default_instance_);
}
inline ::mtproto::InputDialogPeer* TL_messages_toggleDialogPin::mutable_peer() {
  
  if (peer_ == NULL) {
    peer_ = new ::mtproto::InputDialogPeer;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_messages_toggleDialogPin.peer)
  return peer_;
}
inline ::mtproto::InputDialogPeer* TL_messages_toggleDialogPin::release_peer() {
  // @@protoc_insertion_point(field_release:mtproto.TL_messages_toggleDialogPin.peer)
  
  ::mtproto::InputDialogPeer* temp = peer_;
  peer_ = NULL;
  return temp;
}
inline void TL_messages_toggleDialogPin::set_allocated_peer(::mtproto::InputDialogPeer* peer) {
  delete peer_;
  peer_ = peer;
  if (peer) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_messages_toggleDialogPin.peer)
}

// -------------------------------------------------------------------

// TL_messages_reorderPinnedDialogs

// bool force = 2;
inline void TL_messages_reorderPinnedDialogs::clear_force() {
  force_ = false;
}
inline bool TL_messages_reorderPinnedDialogs::force() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_reorderPinnedDialogs.force)
  return force_;
}
inline void TL_messages_reorderPinnedDialogs::set_force(bool value) {
  
  force_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_reorderPinnedDialogs.force)
}

// repeated .mtproto.InputDialogPeer order = 3;
inline int TL_messages_reorderPinnedDialogs::order_size() const {
  return order_.size();
}
inline void TL_messages_reorderPinnedDialogs::clear_order() {
  order_.Clear();
}
inline const ::mtproto::InputDialogPeer& TL_messages_reorderPinnedDialogs::order(int index) const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_reorderPinnedDialogs.order)
  return order_.Get(index);
}
inline ::mtproto::InputDialogPeer* TL_messages_reorderPinnedDialogs::mutable_order(int index) {
  // @@protoc_insertion_point(field_mutable:mtproto.TL_messages_reorderPinnedDialogs.order)
  return order_.Mutable(index);
}
inline ::mtproto::InputDialogPeer* TL_messages_reorderPinnedDialogs::add_order() {
  // @@protoc_insertion_point(field_add:mtproto.TL_messages_reorderPinnedDialogs.order)
  return order_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::mtproto::InputDialogPeer >*
TL_messages_reorderPinnedDialogs::mutable_order() {
  // @@protoc_insertion_point(field_mutable_list:mtproto.TL_messages_reorderPinnedDialogs.order)
  return &order_;
}
inline const ::google::protobuf::RepeatedPtrField< ::mtproto::InputDialogPeer >&
TL_messages_reorderPinnedDialogs::order() const {
  // @@protoc_insertion_point(field_list:mtproto.TL_messages_reorderPinnedDialogs.order)
  return order_;
}

// -------------------------------------------------------------------

// TL_messages_getPinnedDialogs

// -------------------------------------------------------------------

// TL_messages_setBotShippingResults

// int64 query_id = 2;
inline void TL_messages_setBotShippingResults::clear_query_id() {
  query_id_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 TL_messages_setBotShippingResults::query_id() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_setBotShippingResults.query_id)
  return query_id_;
}
inline void TL_messages_setBotShippingResults::set_query_id(::google::protobuf::int64 value) {
  
  query_id_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_setBotShippingResults.query_id)
}

// string error = 3;
inline void TL_messages_setBotShippingResults::clear_error() {
  error_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& TL_messages_setBotShippingResults::error() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_setBotShippingResults.error)
  return error_.GetNoArena();
}
inline void TL_messages_setBotShippingResults::set_error(const ::std::string& value) {
  
  error_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_setBotShippingResults.error)
}
#if LANG_CXX11
inline void TL_messages_setBotShippingResults::set_error(::std::string&& value) {
  
  error_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mtproto.TL_messages_setBotShippingResults.error)
}
#endif
inline void TL_messages_setBotShippingResults::set_error(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  error_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtproto.TL_messages_setBotShippingResults.error)
}
inline void TL_messages_setBotShippingResults::set_error(const char* value, size_t size) {
  
  error_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtproto.TL_messages_setBotShippingResults.error)
}
inline ::std::string* TL_messages_setBotShippingResults::mutable_error() {
  
  // @@protoc_insertion_point(field_mutable:mtproto.TL_messages_setBotShippingResults.error)
  return error_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TL_messages_setBotShippingResults::release_error() {
  // @@protoc_insertion_point(field_release:mtproto.TL_messages_setBotShippingResults.error)
  
  return error_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TL_messages_setBotShippingResults::set_allocated_error(::std::string* error) {
  if (error != NULL) {
    
  } else {
    
  }
  error_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), error);
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_messages_setBotShippingResults.error)
}

// repeated .mtproto.ShippingOption shipping_options = 4;
inline int TL_messages_setBotShippingResults::shipping_options_size() const {
  return shipping_options_.size();
}
inline void TL_messages_setBotShippingResults::clear_shipping_options() {
  shipping_options_.Clear();
}
inline const ::mtproto::ShippingOption& TL_messages_setBotShippingResults::shipping_options(int index) const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_setBotShippingResults.shipping_options)
  return shipping_options_.Get(index);
}
inline ::mtproto::ShippingOption* TL_messages_setBotShippingResults::mutable_shipping_options(int index) {
  // @@protoc_insertion_point(field_mutable:mtproto.TL_messages_setBotShippingResults.shipping_options)
  return shipping_options_.Mutable(index);
}
inline ::mtproto::ShippingOption* TL_messages_setBotShippingResults::add_shipping_options() {
  // @@protoc_insertion_point(field_add:mtproto.TL_messages_setBotShippingResults.shipping_options)
  return shipping_options_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::mtproto::ShippingOption >*
TL_messages_setBotShippingResults::mutable_shipping_options() {
  // @@protoc_insertion_point(field_mutable_list:mtproto.TL_messages_setBotShippingResults.shipping_options)
  return &shipping_options_;
}
inline const ::google::protobuf::RepeatedPtrField< ::mtproto::ShippingOption >&
TL_messages_setBotShippingResults::shipping_options() const {
  // @@protoc_insertion_point(field_list:mtproto.TL_messages_setBotShippingResults.shipping_options)
  return shipping_options_;
}

// -------------------------------------------------------------------

// TL_messages_setBotPrecheckoutResults

// bool success = 2;
inline void TL_messages_setBotPrecheckoutResults::clear_success() {
  success_ = false;
}
inline bool TL_messages_setBotPrecheckoutResults::success() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_setBotPrecheckoutResults.success)
  return success_;
}
inline void TL_messages_setBotPrecheckoutResults::set_success(bool value) {
  
  success_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_setBotPrecheckoutResults.success)
}

// int64 query_id = 3;
inline void TL_messages_setBotPrecheckoutResults::clear_query_id() {
  query_id_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 TL_messages_setBotPrecheckoutResults::query_id() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_setBotPrecheckoutResults.query_id)
  return query_id_;
}
inline void TL_messages_setBotPrecheckoutResults::set_query_id(::google::protobuf::int64 value) {
  
  query_id_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_setBotPrecheckoutResults.query_id)
}

// string error = 4;
inline void TL_messages_setBotPrecheckoutResults::clear_error() {
  error_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& TL_messages_setBotPrecheckoutResults::error() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_setBotPrecheckoutResults.error)
  return error_.GetNoArena();
}
inline void TL_messages_setBotPrecheckoutResults::set_error(const ::std::string& value) {
  
  error_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_setBotPrecheckoutResults.error)
}
#if LANG_CXX11
inline void TL_messages_setBotPrecheckoutResults::set_error(::std::string&& value) {
  
  error_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mtproto.TL_messages_setBotPrecheckoutResults.error)
}
#endif
inline void TL_messages_setBotPrecheckoutResults::set_error(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  error_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtproto.TL_messages_setBotPrecheckoutResults.error)
}
inline void TL_messages_setBotPrecheckoutResults::set_error(const char* value, size_t size) {
  
  error_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtproto.TL_messages_setBotPrecheckoutResults.error)
}
inline ::std::string* TL_messages_setBotPrecheckoutResults::mutable_error() {
  
  // @@protoc_insertion_point(field_mutable:mtproto.TL_messages_setBotPrecheckoutResults.error)
  return error_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TL_messages_setBotPrecheckoutResults::release_error() {
  // @@protoc_insertion_point(field_release:mtproto.TL_messages_setBotPrecheckoutResults.error)
  
  return error_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TL_messages_setBotPrecheckoutResults::set_allocated_error(::std::string* error) {
  if (error != NULL) {
    
  } else {
    
  }
  error_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), error);
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_messages_setBotPrecheckoutResults.error)
}

// -------------------------------------------------------------------

// TL_messages_uploadMedia

// .mtproto.InputPeer peer = 1;
inline bool TL_messages_uploadMedia::has_peer() const {
  return this != internal_default_instance() && peer_ != NULL;
}
inline void TL_messages_uploadMedia::clear_peer() {
  if (GetArenaNoVirtual() == NULL && peer_ != NULL) delete peer_;
  peer_ = NULL;
}
inline const ::mtproto::InputPeer& TL_messages_uploadMedia::peer() const {
  const ::mtproto::InputPeer* p = peer_;
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_uploadMedia.peer)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::InputPeer*>(
      &::mtproto::_InputPeer_default_instance_);
}
inline ::mtproto::InputPeer* TL_messages_uploadMedia::mutable_peer() {
  
  if (peer_ == NULL) {
    peer_ = new ::mtproto::InputPeer;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_messages_uploadMedia.peer)
  return peer_;
}
inline ::mtproto::InputPeer* TL_messages_uploadMedia::release_peer() {
  // @@protoc_insertion_point(field_release:mtproto.TL_messages_uploadMedia.peer)
  
  ::mtproto::InputPeer* temp = peer_;
  peer_ = NULL;
  return temp;
}
inline void TL_messages_uploadMedia::set_allocated_peer(::mtproto::InputPeer* peer) {
  delete peer_;
  peer_ = peer;
  if (peer) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_messages_uploadMedia.peer)
}

// .mtproto.InputMedia media = 2;
inline bool TL_messages_uploadMedia::has_media() const {
  return this != internal_default_instance() && media_ != NULL;
}
inline void TL_messages_uploadMedia::clear_media() {
  if (GetArenaNoVirtual() == NULL && media_ != NULL) delete media_;
  media_ = NULL;
}
inline const ::mtproto::InputMedia& TL_messages_uploadMedia::media() const {
  const ::mtproto::InputMedia* p = media_;
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_uploadMedia.media)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::InputMedia*>(
      &::mtproto::_InputMedia_default_instance_);
}
inline ::mtproto::InputMedia* TL_messages_uploadMedia::mutable_media() {
  
  if (media_ == NULL) {
    media_ = new ::mtproto::InputMedia;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_messages_uploadMedia.media)
  return media_;
}
inline ::mtproto::InputMedia* TL_messages_uploadMedia::release_media() {
  // @@protoc_insertion_point(field_release:mtproto.TL_messages_uploadMedia.media)
  
  ::mtproto::InputMedia* temp = media_;
  media_ = NULL;
  return temp;
}
inline void TL_messages_uploadMedia::set_allocated_media(::mtproto::InputMedia* media) {
  delete media_;
  media_ = media;
  if (media) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_messages_uploadMedia.media)
}

// -------------------------------------------------------------------

// TL_messages_sendScreenshotNotification

// .mtproto.InputPeer peer = 1;
inline bool TL_messages_sendScreenshotNotification::has_peer() const {
  return this != internal_default_instance() && peer_ != NULL;
}
inline void TL_messages_sendScreenshotNotification::clear_peer() {
  if (GetArenaNoVirtual() == NULL && peer_ != NULL) delete peer_;
  peer_ = NULL;
}
inline const ::mtproto::InputPeer& TL_messages_sendScreenshotNotification::peer() const {
  const ::mtproto::InputPeer* p = peer_;
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_sendScreenshotNotification.peer)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::InputPeer*>(
      &::mtproto::_InputPeer_default_instance_);
}
inline ::mtproto::InputPeer* TL_messages_sendScreenshotNotification::mutable_peer() {
  
  if (peer_ == NULL) {
    peer_ = new ::mtproto::InputPeer;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_messages_sendScreenshotNotification.peer)
  return peer_;
}
inline ::mtproto::InputPeer* TL_messages_sendScreenshotNotification::release_peer() {
  // @@protoc_insertion_point(field_release:mtproto.TL_messages_sendScreenshotNotification.peer)
  
  ::mtproto::InputPeer* temp = peer_;
  peer_ = NULL;
  return temp;
}
inline void TL_messages_sendScreenshotNotification::set_allocated_peer(::mtproto::InputPeer* peer) {
  delete peer_;
  peer_ = peer;
  if (peer) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_messages_sendScreenshotNotification.peer)
}

// int32 reply_to_msg_id = 2;
inline void TL_messages_sendScreenshotNotification::clear_reply_to_msg_id() {
  reply_to_msg_id_ = 0;
}
inline ::google::protobuf::int32 TL_messages_sendScreenshotNotification::reply_to_msg_id() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_sendScreenshotNotification.reply_to_msg_id)
  return reply_to_msg_id_;
}
inline void TL_messages_sendScreenshotNotification::set_reply_to_msg_id(::google::protobuf::int32 value) {
  
  reply_to_msg_id_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_sendScreenshotNotification.reply_to_msg_id)
}

// int64 random_id = 3;
inline void TL_messages_sendScreenshotNotification::clear_random_id() {
  random_id_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 TL_messages_sendScreenshotNotification::random_id() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_sendScreenshotNotification.random_id)
  return random_id_;
}
inline void TL_messages_sendScreenshotNotification::set_random_id(::google::protobuf::int64 value) {
  
  random_id_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_sendScreenshotNotification.random_id)
}

// -------------------------------------------------------------------

// TL_messages_getFavedStickers

// int32 hash = 1;
inline void TL_messages_getFavedStickers::clear_hash() {
  hash_ = 0;
}
inline ::google::protobuf::int32 TL_messages_getFavedStickers::hash() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_getFavedStickers.hash)
  return hash_;
}
inline void TL_messages_getFavedStickers::set_hash(::google::protobuf::int32 value) {
  
  hash_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_getFavedStickers.hash)
}

// -------------------------------------------------------------------

// TL_messages_faveSticker

// .mtproto.InputDocument id = 1;
inline bool TL_messages_faveSticker::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline void TL_messages_faveSticker::clear_id() {
  if (GetArenaNoVirtual() == NULL && id_ != NULL) delete id_;
  id_ = NULL;
}
inline const ::mtproto::InputDocument& TL_messages_faveSticker::id() const {
  const ::mtproto::InputDocument* p = id_;
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_faveSticker.id)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::InputDocument*>(
      &::mtproto::_InputDocument_default_instance_);
}
inline ::mtproto::InputDocument* TL_messages_faveSticker::mutable_id() {
  
  if (id_ == NULL) {
    id_ = new ::mtproto::InputDocument;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_messages_faveSticker.id)
  return id_;
}
inline ::mtproto::InputDocument* TL_messages_faveSticker::release_id() {
  // @@protoc_insertion_point(field_release:mtproto.TL_messages_faveSticker.id)
  
  ::mtproto::InputDocument* temp = id_;
  id_ = NULL;
  return temp;
}
inline void TL_messages_faveSticker::set_allocated_id(::mtproto::InputDocument* id) {
  delete id_;
  id_ = id;
  if (id) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_messages_faveSticker.id)
}

// .mtproto.Bool unfave = 2;
inline bool TL_messages_faveSticker::has_unfave() const {
  return this != internal_default_instance() && unfave_ != NULL;
}
inline void TL_messages_faveSticker::clear_unfave() {
  if (GetArenaNoVirtual() == NULL && unfave_ != NULL) delete unfave_;
  unfave_ = NULL;
}
inline const ::mtproto::Bool& TL_messages_faveSticker::unfave() const {
  const ::mtproto::Bool* p = unfave_;
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_faveSticker.unfave)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::Bool*>(
      &::mtproto::_Bool_default_instance_);
}
inline ::mtproto::Bool* TL_messages_faveSticker::mutable_unfave() {
  
  if (unfave_ == NULL) {
    unfave_ = new ::mtproto::Bool;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_messages_faveSticker.unfave)
  return unfave_;
}
inline ::mtproto::Bool* TL_messages_faveSticker::release_unfave() {
  // @@protoc_insertion_point(field_release:mtproto.TL_messages_faveSticker.unfave)
  
  ::mtproto::Bool* temp = unfave_;
  unfave_ = NULL;
  return temp;
}
inline void TL_messages_faveSticker::set_allocated_unfave(::mtproto::Bool* unfave) {
  delete unfave_;
  unfave_ = unfave;
  if (unfave) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_messages_faveSticker.unfave)
}

// -------------------------------------------------------------------

// TL_messages_getUnreadMentions

// .mtproto.InputPeer peer = 1;
inline bool TL_messages_getUnreadMentions::has_peer() const {
  return this != internal_default_instance() && peer_ != NULL;
}
inline void TL_messages_getUnreadMentions::clear_peer() {
  if (GetArenaNoVirtual() == NULL && peer_ != NULL) delete peer_;
  peer_ = NULL;
}
inline const ::mtproto::InputPeer& TL_messages_getUnreadMentions::peer() const {
  const ::mtproto::InputPeer* p = peer_;
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_getUnreadMentions.peer)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::InputPeer*>(
      &::mtproto::_InputPeer_default_instance_);
}
inline ::mtproto::InputPeer* TL_messages_getUnreadMentions::mutable_peer() {
  
  if (peer_ == NULL) {
    peer_ = new ::mtproto::InputPeer;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_messages_getUnreadMentions.peer)
  return peer_;
}
inline ::mtproto::InputPeer* TL_messages_getUnreadMentions::release_peer() {
  // @@protoc_insertion_point(field_release:mtproto.TL_messages_getUnreadMentions.peer)
  
  ::mtproto::InputPeer* temp = peer_;
  peer_ = NULL;
  return temp;
}
inline void TL_messages_getUnreadMentions::set_allocated_peer(::mtproto::InputPeer* peer) {
  delete peer_;
  peer_ = peer;
  if (peer) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_messages_getUnreadMentions.peer)
}

// int32 offset_id = 2;
inline void TL_messages_getUnreadMentions::clear_offset_id() {
  offset_id_ = 0;
}
inline ::google::protobuf::int32 TL_messages_getUnreadMentions::offset_id() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_getUnreadMentions.offset_id)
  return offset_id_;
}
inline void TL_messages_getUnreadMentions::set_offset_id(::google::protobuf::int32 value) {
  
  offset_id_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_getUnreadMentions.offset_id)
}

// int32 add_offset = 3;
inline void TL_messages_getUnreadMentions::clear_add_offset() {
  add_offset_ = 0;
}
inline ::google::protobuf::int32 TL_messages_getUnreadMentions::add_offset() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_getUnreadMentions.add_offset)
  return add_offset_;
}
inline void TL_messages_getUnreadMentions::set_add_offset(::google::protobuf::int32 value) {
  
  add_offset_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_getUnreadMentions.add_offset)
}

// int32 limit = 4;
inline void TL_messages_getUnreadMentions::clear_limit() {
  limit_ = 0;
}
inline ::google::protobuf::int32 TL_messages_getUnreadMentions::limit() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_getUnreadMentions.limit)
  return limit_;
}
inline void TL_messages_getUnreadMentions::set_limit(::google::protobuf::int32 value) {
  
  limit_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_getUnreadMentions.limit)
}

// int32 max_id = 5;
inline void TL_messages_getUnreadMentions::clear_max_id() {
  max_id_ = 0;
}
inline ::google::protobuf::int32 TL_messages_getUnreadMentions::max_id() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_getUnreadMentions.max_id)
  return max_id_;
}
inline void TL_messages_getUnreadMentions::set_max_id(::google::protobuf::int32 value) {
  
  max_id_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_getUnreadMentions.max_id)
}

// int32 min_id = 6;
inline void TL_messages_getUnreadMentions::clear_min_id() {
  min_id_ = 0;
}
inline ::google::protobuf::int32 TL_messages_getUnreadMentions::min_id() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_getUnreadMentions.min_id)
  return min_id_;
}
inline void TL_messages_getUnreadMentions::set_min_id(::google::protobuf::int32 value) {
  
  min_id_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_getUnreadMentions.min_id)
}

// -------------------------------------------------------------------

// TL_messages_readMentions

// .mtproto.InputPeer peer = 1;
inline bool TL_messages_readMentions::has_peer() const {
  return this != internal_default_instance() && peer_ != NULL;
}
inline void TL_messages_readMentions::clear_peer() {
  if (GetArenaNoVirtual() == NULL && peer_ != NULL) delete peer_;
  peer_ = NULL;
}
inline const ::mtproto::InputPeer& TL_messages_readMentions::peer() const {
  const ::mtproto::InputPeer* p = peer_;
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_readMentions.peer)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::InputPeer*>(
      &::mtproto::_InputPeer_default_instance_);
}
inline ::mtproto::InputPeer* TL_messages_readMentions::mutable_peer() {
  
  if (peer_ == NULL) {
    peer_ = new ::mtproto::InputPeer;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_messages_readMentions.peer)
  return peer_;
}
inline ::mtproto::InputPeer* TL_messages_readMentions::release_peer() {
  // @@protoc_insertion_point(field_release:mtproto.TL_messages_readMentions.peer)
  
  ::mtproto::InputPeer* temp = peer_;
  peer_ = NULL;
  return temp;
}
inline void TL_messages_readMentions::set_allocated_peer(::mtproto::InputPeer* peer) {
  delete peer_;
  peer_ = peer;
  if (peer) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_messages_readMentions.peer)
}

// -------------------------------------------------------------------

// TL_messages_getRecentLocations

// .mtproto.InputPeer peer = 1;
inline bool TL_messages_getRecentLocations::has_peer() const {
  return this != internal_default_instance() && peer_ != NULL;
}
inline void TL_messages_getRecentLocations::clear_peer() {
  if (GetArenaNoVirtual() == NULL && peer_ != NULL) delete peer_;
  peer_ = NULL;
}
inline const ::mtproto::InputPeer& TL_messages_getRecentLocations::peer() const {
  const ::mtproto::InputPeer* p = peer_;
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_getRecentLocations.peer)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::InputPeer*>(
      &::mtproto::_InputPeer_default_instance_);
}
inline ::mtproto::InputPeer* TL_messages_getRecentLocations::mutable_peer() {
  
  if (peer_ == NULL) {
    peer_ = new ::mtproto::InputPeer;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_messages_getRecentLocations.peer)
  return peer_;
}
inline ::mtproto::InputPeer* TL_messages_getRecentLocations::release_peer() {
  // @@protoc_insertion_point(field_release:mtproto.TL_messages_getRecentLocations.peer)
  
  ::mtproto::InputPeer* temp = peer_;
  peer_ = NULL;
  return temp;
}
inline void TL_messages_getRecentLocations::set_allocated_peer(::mtproto::InputPeer* peer) {
  delete peer_;
  peer_ = peer;
  if (peer) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_messages_getRecentLocations.peer)
}

// int32 limit = 2;
inline void TL_messages_getRecentLocations::clear_limit() {
  limit_ = 0;
}
inline ::google::protobuf::int32 TL_messages_getRecentLocations::limit() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_getRecentLocations.limit)
  return limit_;
}
inline void TL_messages_getRecentLocations::set_limit(::google::protobuf::int32 value) {
  
  limit_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_getRecentLocations.limit)
}

// int32 hash = 3;
inline void TL_messages_getRecentLocations::clear_hash() {
  hash_ = 0;
}
inline ::google::protobuf::int32 TL_messages_getRecentLocations::hash() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_getRecentLocations.hash)
  return hash_;
}
inline void TL_messages_getRecentLocations::set_hash(::google::protobuf::int32 value) {
  
  hash_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_getRecentLocations.hash)
}

// -------------------------------------------------------------------

// TL_messages_sendMultiMedia

// bool silent = 2;
inline void TL_messages_sendMultiMedia::clear_silent() {
  silent_ = false;
}
inline bool TL_messages_sendMultiMedia::silent() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_sendMultiMedia.silent)
  return silent_;
}
inline void TL_messages_sendMultiMedia::set_silent(bool value) {
  
  silent_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_sendMultiMedia.silent)
}

// bool background = 3;
inline void TL_messages_sendMultiMedia::clear_background() {
  background_ = false;
}
inline bool TL_messages_sendMultiMedia::background() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_sendMultiMedia.background)
  return background_;
}
inline void TL_messages_sendMultiMedia::set_background(bool value) {
  
  background_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_sendMultiMedia.background)
}

// bool clear_draft = 4;
inline void TL_messages_sendMultiMedia::clear_clear_draft() {
  clear_draft_ = false;
}
inline bool TL_messages_sendMultiMedia::clear_draft() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_sendMultiMedia.clear_draft)
  return clear_draft_;
}
inline void TL_messages_sendMultiMedia::set_clear_draft(bool value) {
  
  clear_draft_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_sendMultiMedia.clear_draft)
}

// .mtproto.InputPeer peer = 5;
inline bool TL_messages_sendMultiMedia::has_peer() const {
  return this != internal_default_instance() && peer_ != NULL;
}
inline void TL_messages_sendMultiMedia::clear_peer() {
  if (GetArenaNoVirtual() == NULL && peer_ != NULL) delete peer_;
  peer_ = NULL;
}
inline const ::mtproto::InputPeer& TL_messages_sendMultiMedia::peer() const {
  const ::mtproto::InputPeer* p = peer_;
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_sendMultiMedia.peer)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::InputPeer*>(
      &::mtproto::_InputPeer_default_instance_);
}
inline ::mtproto::InputPeer* TL_messages_sendMultiMedia::mutable_peer() {
  
  if (peer_ == NULL) {
    peer_ = new ::mtproto::InputPeer;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_messages_sendMultiMedia.peer)
  return peer_;
}
inline ::mtproto::InputPeer* TL_messages_sendMultiMedia::release_peer() {
  // @@protoc_insertion_point(field_release:mtproto.TL_messages_sendMultiMedia.peer)
  
  ::mtproto::InputPeer* temp = peer_;
  peer_ = NULL;
  return temp;
}
inline void TL_messages_sendMultiMedia::set_allocated_peer(::mtproto::InputPeer* peer) {
  delete peer_;
  peer_ = peer;
  if (peer) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_messages_sendMultiMedia.peer)
}

// int32 reply_to_msg_id = 6;
inline void TL_messages_sendMultiMedia::clear_reply_to_msg_id() {
  reply_to_msg_id_ = 0;
}
inline ::google::protobuf::int32 TL_messages_sendMultiMedia::reply_to_msg_id() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_sendMultiMedia.reply_to_msg_id)
  return reply_to_msg_id_;
}
inline void TL_messages_sendMultiMedia::set_reply_to_msg_id(::google::protobuf::int32 value) {
  
  reply_to_msg_id_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_sendMultiMedia.reply_to_msg_id)
}

// repeated .mtproto.InputSingleMedia multi_media = 7;
inline int TL_messages_sendMultiMedia::multi_media_size() const {
  return multi_media_.size();
}
inline void TL_messages_sendMultiMedia::clear_multi_media() {
  multi_media_.Clear();
}
inline const ::mtproto::InputSingleMedia& TL_messages_sendMultiMedia::multi_media(int index) const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_sendMultiMedia.multi_media)
  return multi_media_.Get(index);
}
inline ::mtproto::InputSingleMedia* TL_messages_sendMultiMedia::mutable_multi_media(int index) {
  // @@protoc_insertion_point(field_mutable:mtproto.TL_messages_sendMultiMedia.multi_media)
  return multi_media_.Mutable(index);
}
inline ::mtproto::InputSingleMedia* TL_messages_sendMultiMedia::add_multi_media() {
  // @@protoc_insertion_point(field_add:mtproto.TL_messages_sendMultiMedia.multi_media)
  return multi_media_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::mtproto::InputSingleMedia >*
TL_messages_sendMultiMedia::mutable_multi_media() {
  // @@protoc_insertion_point(field_mutable_list:mtproto.TL_messages_sendMultiMedia.multi_media)
  return &multi_media_;
}
inline const ::google::protobuf::RepeatedPtrField< ::mtproto::InputSingleMedia >&
TL_messages_sendMultiMedia::multi_media() const {
  // @@protoc_insertion_point(field_list:mtproto.TL_messages_sendMultiMedia.multi_media)
  return multi_media_;
}

// -------------------------------------------------------------------

// TL_messages_uploadEncryptedFile

// .mtproto.InputEncryptedChat peer = 1;
inline bool TL_messages_uploadEncryptedFile::has_peer() const {
  return this != internal_default_instance() && peer_ != NULL;
}
inline void TL_messages_uploadEncryptedFile::clear_peer() {
  if (GetArenaNoVirtual() == NULL && peer_ != NULL) delete peer_;
  peer_ = NULL;
}
inline const ::mtproto::InputEncryptedChat& TL_messages_uploadEncryptedFile::peer() const {
  const ::mtproto::InputEncryptedChat* p = peer_;
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_uploadEncryptedFile.peer)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::InputEncryptedChat*>(
      &::mtproto::_InputEncryptedChat_default_instance_);
}
inline ::mtproto::InputEncryptedChat* TL_messages_uploadEncryptedFile::mutable_peer() {
  
  if (peer_ == NULL) {
    peer_ = new ::mtproto::InputEncryptedChat;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_messages_uploadEncryptedFile.peer)
  return peer_;
}
inline ::mtproto::InputEncryptedChat* TL_messages_uploadEncryptedFile::release_peer() {
  // @@protoc_insertion_point(field_release:mtproto.TL_messages_uploadEncryptedFile.peer)
  
  ::mtproto::InputEncryptedChat* temp = peer_;
  peer_ = NULL;
  return temp;
}
inline void TL_messages_uploadEncryptedFile::set_allocated_peer(::mtproto::InputEncryptedChat* peer) {
  delete peer_;
  peer_ = peer;
  if (peer) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_messages_uploadEncryptedFile.peer)
}

// .mtproto.InputEncryptedFile file = 2;
inline bool TL_messages_uploadEncryptedFile::has_file() const {
  return this != internal_default_instance() && file_ != NULL;
}
inline void TL_messages_uploadEncryptedFile::clear_file() {
  if (GetArenaNoVirtual() == NULL && file_ != NULL) delete file_;
  file_ = NULL;
}
inline const ::mtproto::InputEncryptedFile& TL_messages_uploadEncryptedFile::file() const {
  const ::mtproto::InputEncryptedFile* p = file_;
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_uploadEncryptedFile.file)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::InputEncryptedFile*>(
      &::mtproto::_InputEncryptedFile_default_instance_);
}
inline ::mtproto::InputEncryptedFile* TL_messages_uploadEncryptedFile::mutable_file() {
  
  if (file_ == NULL) {
    file_ = new ::mtproto::InputEncryptedFile;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_messages_uploadEncryptedFile.file)
  return file_;
}
inline ::mtproto::InputEncryptedFile* TL_messages_uploadEncryptedFile::release_file() {
  // @@protoc_insertion_point(field_release:mtproto.TL_messages_uploadEncryptedFile.file)
  
  ::mtproto::InputEncryptedFile* temp = file_;
  file_ = NULL;
  return temp;
}
inline void TL_messages_uploadEncryptedFile::set_allocated_file(::mtproto::InputEncryptedFile* file) {
  delete file_;
  file_ = file;
  if (file) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_messages_uploadEncryptedFile.file)
}

// -------------------------------------------------------------------

// TL_messages_searchStickerSets

// bool exclude_featured = 2;
inline void TL_messages_searchStickerSets::clear_exclude_featured() {
  exclude_featured_ = false;
}
inline bool TL_messages_searchStickerSets::exclude_featured() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_searchStickerSets.exclude_featured)
  return exclude_featured_;
}
inline void TL_messages_searchStickerSets::set_exclude_featured(bool value) {
  
  exclude_featured_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_searchStickerSets.exclude_featured)
}

// string q = 3;
inline void TL_messages_searchStickerSets::clear_q() {
  q_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& TL_messages_searchStickerSets::q() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_searchStickerSets.q)
  return q_.GetNoArena();
}
inline void TL_messages_searchStickerSets::set_q(const ::std::string& value) {
  
  q_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_searchStickerSets.q)
}
#if LANG_CXX11
inline void TL_messages_searchStickerSets::set_q(::std::string&& value) {
  
  q_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mtproto.TL_messages_searchStickerSets.q)
}
#endif
inline void TL_messages_searchStickerSets::set_q(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  q_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtproto.TL_messages_searchStickerSets.q)
}
inline void TL_messages_searchStickerSets::set_q(const char* value, size_t size) {
  
  q_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtproto.TL_messages_searchStickerSets.q)
}
inline ::std::string* TL_messages_searchStickerSets::mutable_q() {
  
  // @@protoc_insertion_point(field_mutable:mtproto.TL_messages_searchStickerSets.q)
  return q_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TL_messages_searchStickerSets::release_q() {
  // @@protoc_insertion_point(field_release:mtproto.TL_messages_searchStickerSets.q)
  
  return q_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TL_messages_searchStickerSets::set_allocated_q(::std::string* q) {
  if (q != NULL) {
    
  } else {
    
  }
  q_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), q);
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_messages_searchStickerSets.q)
}

// int32 hash = 4;
inline void TL_messages_searchStickerSets::clear_hash() {
  hash_ = 0;
}
inline ::google::protobuf::int32 TL_messages_searchStickerSets::hash() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_searchStickerSets.hash)
  return hash_;
}
inline void TL_messages_searchStickerSets::set_hash(::google::protobuf::int32 value) {
  
  hash_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_searchStickerSets.hash)
}

// -------------------------------------------------------------------

// TL_messages_getSplitRanges

// -------------------------------------------------------------------

// TL_messages_markDialogUnread

// bool unread = 2;
inline void TL_messages_markDialogUnread::clear_unread() {
  unread_ = false;
}
inline bool TL_messages_markDialogUnread::unread() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_markDialogUnread.unread)
  return unread_;
}
inline void TL_messages_markDialogUnread::set_unread(bool value) {
  
  unread_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_messages_markDialogUnread.unread)
}

// .mtproto.InputDialogPeer peer = 3;
inline bool TL_messages_markDialogUnread::has_peer() const {
  return this != internal_default_instance() && peer_ != NULL;
}
inline void TL_messages_markDialogUnread::clear_peer() {
  if (GetArenaNoVirtual() == NULL && peer_ != NULL) delete peer_;
  peer_ = NULL;
}
inline const ::mtproto::InputDialogPeer& TL_messages_markDialogUnread::peer() const {
  const ::mtproto::InputDialogPeer* p = peer_;
  // @@protoc_insertion_point(field_get:mtproto.TL_messages_markDialogUnread.peer)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::InputDialogPeer*>(
      &::mtproto::_InputDialogPeer_default_instance_);
}
inline ::mtproto::InputDialogPeer* TL_messages_markDialogUnread::mutable_peer() {
  
  if (peer_ == NULL) {
    peer_ = new ::mtproto::InputDialogPeer;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_messages_markDialogUnread.peer)
  return peer_;
}
inline ::mtproto::InputDialogPeer* TL_messages_markDialogUnread::release_peer() {
  // @@protoc_insertion_point(field_release:mtproto.TL_messages_markDialogUnread.peer)
  
  ::mtproto::InputDialogPeer* temp = peer_;
  peer_ = NULL;
  return temp;
}
inline void TL_messages_markDialogUnread::set_allocated_peer(::mtproto::InputDialogPeer* peer) {
  delete peer_;
  peer_ = peer;
  if (peer) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_messages_markDialogUnread.peer)
}

// -------------------------------------------------------------------

// TL_messages_getDialogUnreadMarks

// -------------------------------------------------------------------

// TL_messages_clearAllDrafts

// -------------------------------------------------------------------

// TL_updates_getState

// -------------------------------------------------------------------

// TL_updates_getDifference

// int32 pts = 2;
inline void TL_updates_getDifference::clear_pts() {
  pts_ = 0;
}
inline ::google::protobuf::int32 TL_updates_getDifference::pts() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_updates_getDifference.pts)
  return pts_;
}
inline void TL_updates_getDifference::set_pts(::google::protobuf::int32 value) {
  
  pts_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_updates_getDifference.pts)
}

// int32 pts_total_limit = 3;
inline void TL_updates_getDifference::clear_pts_total_limit() {
  pts_total_limit_ = 0;
}
inline ::google::protobuf::int32 TL_updates_getDifference::pts_total_limit() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_updates_getDifference.pts_total_limit)
  return pts_total_limit_;
}
inline void TL_updates_getDifference::set_pts_total_limit(::google::protobuf::int32 value) {
  
  pts_total_limit_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_updates_getDifference.pts_total_limit)
}

// int32 date = 4;
inline void TL_updates_getDifference::clear_date() {
  date_ = 0;
}
inline ::google::protobuf::int32 TL_updates_getDifference::date() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_updates_getDifference.date)
  return date_;
}
inline void TL_updates_getDifference::set_date(::google::protobuf::int32 value) {
  
  date_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_updates_getDifference.date)
}

// int32 qts = 5;
inline void TL_updates_getDifference::clear_qts() {
  qts_ = 0;
}
inline ::google::protobuf::int32 TL_updates_getDifference::qts() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_updates_getDifference.qts)
  return qts_;
}
inline void TL_updates_getDifference::set_qts(::google::protobuf::int32 value) {
  
  qts_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_updates_getDifference.qts)
}

// -------------------------------------------------------------------

// TL_updates_getChannelDifference

// bool force = 2;
inline void TL_updates_getChannelDifference::clear_force() {
  force_ = false;
}
inline bool TL_updates_getChannelDifference::force() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_updates_getChannelDifference.force)
  return force_;
}
inline void TL_updates_getChannelDifference::set_force(bool value) {
  
  force_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_updates_getChannelDifference.force)
}

// .mtproto.InputChannel channel = 3;
inline bool TL_updates_getChannelDifference::has_channel() const {
  return this != internal_default_instance() && channel_ != NULL;
}
inline void TL_updates_getChannelDifference::clear_channel() {
  if (GetArenaNoVirtual() == NULL && channel_ != NULL) delete channel_;
  channel_ = NULL;
}
inline const ::mtproto::InputChannel& TL_updates_getChannelDifference::channel() const {
  const ::mtproto::InputChannel* p = channel_;
  // @@protoc_insertion_point(field_get:mtproto.TL_updates_getChannelDifference.channel)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::InputChannel*>(
      &::mtproto::_InputChannel_default_instance_);
}
inline ::mtproto::InputChannel* TL_updates_getChannelDifference::mutable_channel() {
  
  if (channel_ == NULL) {
    channel_ = new ::mtproto::InputChannel;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_updates_getChannelDifference.channel)
  return channel_;
}
inline ::mtproto::InputChannel* TL_updates_getChannelDifference::release_channel() {
  // @@protoc_insertion_point(field_release:mtproto.TL_updates_getChannelDifference.channel)
  
  ::mtproto::InputChannel* temp = channel_;
  channel_ = NULL;
  return temp;
}
inline void TL_updates_getChannelDifference::set_allocated_channel(::mtproto::InputChannel* channel) {
  delete channel_;
  channel_ = channel;
  if (channel) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_updates_getChannelDifference.channel)
}

// .mtproto.ChannelMessagesFilter filter = 4;
inline bool TL_updates_getChannelDifference::has_filter() const {
  return this != internal_default_instance() && filter_ != NULL;
}
inline void TL_updates_getChannelDifference::clear_filter() {
  if (GetArenaNoVirtual() == NULL && filter_ != NULL) delete filter_;
  filter_ = NULL;
}
inline const ::mtproto::ChannelMessagesFilter& TL_updates_getChannelDifference::filter() const {
  const ::mtproto::ChannelMessagesFilter* p = filter_;
  // @@protoc_insertion_point(field_get:mtproto.TL_updates_getChannelDifference.filter)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::ChannelMessagesFilter*>(
      &::mtproto::_ChannelMessagesFilter_default_instance_);
}
inline ::mtproto::ChannelMessagesFilter* TL_updates_getChannelDifference::mutable_filter() {
  
  if (filter_ == NULL) {
    filter_ = new ::mtproto::ChannelMessagesFilter;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_updates_getChannelDifference.filter)
  return filter_;
}
inline ::mtproto::ChannelMessagesFilter* TL_updates_getChannelDifference::release_filter() {
  // @@protoc_insertion_point(field_release:mtproto.TL_updates_getChannelDifference.filter)
  
  ::mtproto::ChannelMessagesFilter* temp = filter_;
  filter_ = NULL;
  return temp;
}
inline void TL_updates_getChannelDifference::set_allocated_filter(::mtproto::ChannelMessagesFilter* filter) {
  delete filter_;
  filter_ = filter;
  if (filter) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_updates_getChannelDifference.filter)
}

// int32 pts = 5;
inline void TL_updates_getChannelDifference::clear_pts() {
  pts_ = 0;
}
inline ::google::protobuf::int32 TL_updates_getChannelDifference::pts() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_updates_getChannelDifference.pts)
  return pts_;
}
inline void TL_updates_getChannelDifference::set_pts(::google::protobuf::int32 value) {
  
  pts_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_updates_getChannelDifference.pts)
}

// int32 limit = 6;
inline void TL_updates_getChannelDifference::clear_limit() {
  limit_ = 0;
}
inline ::google::protobuf::int32 TL_updates_getChannelDifference::limit() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_updates_getChannelDifference.limit)
  return limit_;
}
inline void TL_updates_getChannelDifference::set_limit(::google::protobuf::int32 value) {
  
  limit_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_updates_getChannelDifference.limit)
}

// -------------------------------------------------------------------

// TL_photos_updateProfilePhoto

// .mtproto.InputPhoto id = 1;
inline bool TL_photos_updateProfilePhoto::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline void TL_photos_updateProfilePhoto::clear_id() {
  if (GetArenaNoVirtual() == NULL && id_ != NULL) delete id_;
  id_ = NULL;
}
inline const ::mtproto::InputPhoto& TL_photos_updateProfilePhoto::id() const {
  const ::mtproto::InputPhoto* p = id_;
  // @@protoc_insertion_point(field_get:mtproto.TL_photos_updateProfilePhoto.id)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::InputPhoto*>(
      &::mtproto::_InputPhoto_default_instance_);
}
inline ::mtproto::InputPhoto* TL_photos_updateProfilePhoto::mutable_id() {
  
  if (id_ == NULL) {
    id_ = new ::mtproto::InputPhoto;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_photos_updateProfilePhoto.id)
  return id_;
}
inline ::mtproto::InputPhoto* TL_photos_updateProfilePhoto::release_id() {
  // @@protoc_insertion_point(field_release:mtproto.TL_photos_updateProfilePhoto.id)
  
  ::mtproto::InputPhoto* temp = id_;
  id_ = NULL;
  return temp;
}
inline void TL_photos_updateProfilePhoto::set_allocated_id(::mtproto::InputPhoto* id) {
  delete id_;
  id_ = id;
  if (id) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_photos_updateProfilePhoto.id)
}

// -------------------------------------------------------------------

// TL_photos_uploadProfilePhoto

// .mtproto.InputFile file = 1;
inline bool TL_photos_uploadProfilePhoto::has_file() const {
  return this != internal_default_instance() && file_ != NULL;
}
inline void TL_photos_uploadProfilePhoto::clear_file() {
  if (GetArenaNoVirtual() == NULL && file_ != NULL) delete file_;
  file_ = NULL;
}
inline const ::mtproto::InputFile& TL_photos_uploadProfilePhoto::file() const {
  const ::mtproto::InputFile* p = file_;
  // @@protoc_insertion_point(field_get:mtproto.TL_photos_uploadProfilePhoto.file)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::InputFile*>(
      &::mtproto::_InputFile_default_instance_);
}
inline ::mtproto::InputFile* TL_photos_uploadProfilePhoto::mutable_file() {
  
  if (file_ == NULL) {
    file_ = new ::mtproto::InputFile;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_photos_uploadProfilePhoto.file)
  return file_;
}
inline ::mtproto::InputFile* TL_photos_uploadProfilePhoto::release_file() {
  // @@protoc_insertion_point(field_release:mtproto.TL_photos_uploadProfilePhoto.file)
  
  ::mtproto::InputFile* temp = file_;
  file_ = NULL;
  return temp;
}
inline void TL_photos_uploadProfilePhoto::set_allocated_file(::mtproto::InputFile* file) {
  delete file_;
  file_ = file;
  if (file) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_photos_uploadProfilePhoto.file)
}

// -------------------------------------------------------------------

// TL_photos_deletePhotos

// repeated .mtproto.InputPhoto id = 1;
inline int TL_photos_deletePhotos::id_size() const {
  return id_.size();
}
inline void TL_photos_deletePhotos::clear_id() {
  id_.Clear();
}
inline const ::mtproto::InputPhoto& TL_photos_deletePhotos::id(int index) const {
  // @@protoc_insertion_point(field_get:mtproto.TL_photos_deletePhotos.id)
  return id_.Get(index);
}
inline ::mtproto::InputPhoto* TL_photos_deletePhotos::mutable_id(int index) {
  // @@protoc_insertion_point(field_mutable:mtproto.TL_photos_deletePhotos.id)
  return id_.Mutable(index);
}
inline ::mtproto::InputPhoto* TL_photos_deletePhotos::add_id() {
  // @@protoc_insertion_point(field_add:mtproto.TL_photos_deletePhotos.id)
  return id_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::mtproto::InputPhoto >*
TL_photos_deletePhotos::mutable_id() {
  // @@protoc_insertion_point(field_mutable_list:mtproto.TL_photos_deletePhotos.id)
  return &id_;
}
inline const ::google::protobuf::RepeatedPtrField< ::mtproto::InputPhoto >&
TL_photos_deletePhotos::id() const {
  // @@protoc_insertion_point(field_list:mtproto.TL_photos_deletePhotos.id)
  return id_;
}

// -------------------------------------------------------------------

// TL_photos_getUserPhotos

// .mtproto.InputUser user_id = 1;
inline bool TL_photos_getUserPhotos::has_user_id() const {
  return this != internal_default_instance() && user_id_ != NULL;
}
inline void TL_photos_getUserPhotos::clear_user_id() {
  if (GetArenaNoVirtual() == NULL && user_id_ != NULL) delete user_id_;
  user_id_ = NULL;
}
inline const ::mtproto::InputUser& TL_photos_getUserPhotos::user_id() const {
  const ::mtproto::InputUser* p = user_id_;
  // @@protoc_insertion_point(field_get:mtproto.TL_photos_getUserPhotos.user_id)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::InputUser*>(
      &::mtproto::_InputUser_default_instance_);
}
inline ::mtproto::InputUser* TL_photos_getUserPhotos::mutable_user_id() {
  
  if (user_id_ == NULL) {
    user_id_ = new ::mtproto::InputUser;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_photos_getUserPhotos.user_id)
  return user_id_;
}
inline ::mtproto::InputUser* TL_photos_getUserPhotos::release_user_id() {
  // @@protoc_insertion_point(field_release:mtproto.TL_photos_getUserPhotos.user_id)
  
  ::mtproto::InputUser* temp = user_id_;
  user_id_ = NULL;
  return temp;
}
inline void TL_photos_getUserPhotos::set_allocated_user_id(::mtproto::InputUser* user_id) {
  delete user_id_;
  user_id_ = user_id;
  if (user_id) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_photos_getUserPhotos.user_id)
}

// int32 offset = 2;
inline void TL_photos_getUserPhotos::clear_offset() {
  offset_ = 0;
}
inline ::google::protobuf::int32 TL_photos_getUserPhotos::offset() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_photos_getUserPhotos.offset)
  return offset_;
}
inline void TL_photos_getUserPhotos::set_offset(::google::protobuf::int32 value) {
  
  offset_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_photos_getUserPhotos.offset)
}

// int64 max_id = 3;
inline void TL_photos_getUserPhotos::clear_max_id() {
  max_id_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 TL_photos_getUserPhotos::max_id() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_photos_getUserPhotos.max_id)
  return max_id_;
}
inline void TL_photos_getUserPhotos::set_max_id(::google::protobuf::int64 value) {
  
  max_id_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_photos_getUserPhotos.max_id)
}

// int32 limit = 4;
inline void TL_photos_getUserPhotos::clear_limit() {
  limit_ = 0;
}
inline ::google::protobuf::int32 TL_photos_getUserPhotos::limit() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_photos_getUserPhotos.limit)
  return limit_;
}
inline void TL_photos_getUserPhotos::set_limit(::google::protobuf::int32 value) {
  
  limit_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_photos_getUserPhotos.limit)
}

// -------------------------------------------------------------------

// TL_upload_saveFilePart

// int64 file_id = 1;
inline void TL_upload_saveFilePart::clear_file_id() {
  file_id_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 TL_upload_saveFilePart::file_id() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_upload_saveFilePart.file_id)
  return file_id_;
}
inline void TL_upload_saveFilePart::set_file_id(::google::protobuf::int64 value) {
  
  file_id_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_upload_saveFilePart.file_id)
}

// int32 file_part = 2;
inline void TL_upload_saveFilePart::clear_file_part() {
  file_part_ = 0;
}
inline ::google::protobuf::int32 TL_upload_saveFilePart::file_part() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_upload_saveFilePart.file_part)
  return file_part_;
}
inline void TL_upload_saveFilePart::set_file_part(::google::protobuf::int32 value) {
  
  file_part_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_upload_saveFilePart.file_part)
}

// bytes bytes = 3;
inline void TL_upload_saveFilePart::clear_bytes() {
  bytes_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& TL_upload_saveFilePart::bytes() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_upload_saveFilePart.bytes)
  return bytes_.GetNoArena();
}
inline void TL_upload_saveFilePart::set_bytes(const ::std::string& value) {
  
  bytes_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtproto.TL_upload_saveFilePart.bytes)
}
#if LANG_CXX11
inline void TL_upload_saveFilePart::set_bytes(::std::string&& value) {
  
  bytes_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mtproto.TL_upload_saveFilePart.bytes)
}
#endif
inline void TL_upload_saveFilePart::set_bytes(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  bytes_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtproto.TL_upload_saveFilePart.bytes)
}
inline void TL_upload_saveFilePart::set_bytes(const void* value, size_t size) {
  
  bytes_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtproto.TL_upload_saveFilePart.bytes)
}
inline ::std::string* TL_upload_saveFilePart::mutable_bytes() {
  
  // @@protoc_insertion_point(field_mutable:mtproto.TL_upload_saveFilePart.bytes)
  return bytes_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TL_upload_saveFilePart::release_bytes() {
  // @@protoc_insertion_point(field_release:mtproto.TL_upload_saveFilePart.bytes)
  
  return bytes_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TL_upload_saveFilePart::set_allocated_bytes(::std::string* bytes) {
  if (bytes != NULL) {
    
  } else {
    
  }
  bytes_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), bytes);
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_upload_saveFilePart.bytes)
}

// -------------------------------------------------------------------

// TL_upload_getFile

// .mtproto.InputFileLocation location = 1;
inline bool TL_upload_getFile::has_location() const {
  return this != internal_default_instance() && location_ != NULL;
}
inline void TL_upload_getFile::clear_location() {
  if (GetArenaNoVirtual() == NULL && location_ != NULL) delete location_;
  location_ = NULL;
}
inline const ::mtproto::InputFileLocation& TL_upload_getFile::location() const {
  const ::mtproto::InputFileLocation* p = location_;
  // @@protoc_insertion_point(field_get:mtproto.TL_upload_getFile.location)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::InputFileLocation*>(
      &::mtproto::_InputFileLocation_default_instance_);
}
inline ::mtproto::InputFileLocation* TL_upload_getFile::mutable_location() {
  
  if (location_ == NULL) {
    location_ = new ::mtproto::InputFileLocation;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_upload_getFile.location)
  return location_;
}
inline ::mtproto::InputFileLocation* TL_upload_getFile::release_location() {
  // @@protoc_insertion_point(field_release:mtproto.TL_upload_getFile.location)
  
  ::mtproto::InputFileLocation* temp = location_;
  location_ = NULL;
  return temp;
}
inline void TL_upload_getFile::set_allocated_location(::mtproto::InputFileLocation* location) {
  delete location_;
  location_ = location;
  if (location) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_upload_getFile.location)
}

// int32 offset = 2;
inline void TL_upload_getFile::clear_offset() {
  offset_ = 0;
}
inline ::google::protobuf::int32 TL_upload_getFile::offset() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_upload_getFile.offset)
  return offset_;
}
inline void TL_upload_getFile::set_offset(::google::protobuf::int32 value) {
  
  offset_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_upload_getFile.offset)
}

// int32 limit = 3;
inline void TL_upload_getFile::clear_limit() {
  limit_ = 0;
}
inline ::google::protobuf::int32 TL_upload_getFile::limit() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_upload_getFile.limit)
  return limit_;
}
inline void TL_upload_getFile::set_limit(::google::protobuf::int32 value) {
  
  limit_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_upload_getFile.limit)
}

// -------------------------------------------------------------------

// TL_upload_saveBigFilePart

// int64 file_id = 1;
inline void TL_upload_saveBigFilePart::clear_file_id() {
  file_id_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 TL_upload_saveBigFilePart::file_id() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_upload_saveBigFilePart.file_id)
  return file_id_;
}
inline void TL_upload_saveBigFilePart::set_file_id(::google::protobuf::int64 value) {
  
  file_id_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_upload_saveBigFilePart.file_id)
}

// int32 file_part = 2;
inline void TL_upload_saveBigFilePart::clear_file_part() {
  file_part_ = 0;
}
inline ::google::protobuf::int32 TL_upload_saveBigFilePart::file_part() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_upload_saveBigFilePart.file_part)
  return file_part_;
}
inline void TL_upload_saveBigFilePart::set_file_part(::google::protobuf::int32 value) {
  
  file_part_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_upload_saveBigFilePart.file_part)
}

// int32 file_total_parts = 3;
inline void TL_upload_saveBigFilePart::clear_file_total_parts() {
  file_total_parts_ = 0;
}
inline ::google::protobuf::int32 TL_upload_saveBigFilePart::file_total_parts() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_upload_saveBigFilePart.file_total_parts)
  return file_total_parts_;
}
inline void TL_upload_saveBigFilePart::set_file_total_parts(::google::protobuf::int32 value) {
  
  file_total_parts_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_upload_saveBigFilePart.file_total_parts)
}

// bytes bytes = 4;
inline void TL_upload_saveBigFilePart::clear_bytes() {
  bytes_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& TL_upload_saveBigFilePart::bytes() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_upload_saveBigFilePart.bytes)
  return bytes_.GetNoArena();
}
inline void TL_upload_saveBigFilePart::set_bytes(const ::std::string& value) {
  
  bytes_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtproto.TL_upload_saveBigFilePart.bytes)
}
#if LANG_CXX11
inline void TL_upload_saveBigFilePart::set_bytes(::std::string&& value) {
  
  bytes_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mtproto.TL_upload_saveBigFilePart.bytes)
}
#endif
inline void TL_upload_saveBigFilePart::set_bytes(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  bytes_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtproto.TL_upload_saveBigFilePart.bytes)
}
inline void TL_upload_saveBigFilePart::set_bytes(const void* value, size_t size) {
  
  bytes_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtproto.TL_upload_saveBigFilePart.bytes)
}
inline ::std::string* TL_upload_saveBigFilePart::mutable_bytes() {
  
  // @@protoc_insertion_point(field_mutable:mtproto.TL_upload_saveBigFilePart.bytes)
  return bytes_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TL_upload_saveBigFilePart::release_bytes() {
  // @@protoc_insertion_point(field_release:mtproto.TL_upload_saveBigFilePart.bytes)
  
  return bytes_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TL_upload_saveBigFilePart::set_allocated_bytes(::std::string* bytes) {
  if (bytes != NULL) {
    
  } else {
    
  }
  bytes_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), bytes);
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_upload_saveBigFilePart.bytes)
}

// -------------------------------------------------------------------

// TL_upload_getWebFile

// .mtproto.InputWebFileLocation location = 1;
inline bool TL_upload_getWebFile::has_location() const {
  return this != internal_default_instance() && location_ != NULL;
}
inline void TL_upload_getWebFile::clear_location() {
  if (GetArenaNoVirtual() == NULL && location_ != NULL) delete location_;
  location_ = NULL;
}
inline const ::mtproto::InputWebFileLocation& TL_upload_getWebFile::location() const {
  const ::mtproto::InputWebFileLocation* p = location_;
  // @@protoc_insertion_point(field_get:mtproto.TL_upload_getWebFile.location)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::InputWebFileLocation*>(
      &::mtproto::_InputWebFileLocation_default_instance_);
}
inline ::mtproto::InputWebFileLocation* TL_upload_getWebFile::mutable_location() {
  
  if (location_ == NULL) {
    location_ = new ::mtproto::InputWebFileLocation;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_upload_getWebFile.location)
  return location_;
}
inline ::mtproto::InputWebFileLocation* TL_upload_getWebFile::release_location() {
  // @@protoc_insertion_point(field_release:mtproto.TL_upload_getWebFile.location)
  
  ::mtproto::InputWebFileLocation* temp = location_;
  location_ = NULL;
  return temp;
}
inline void TL_upload_getWebFile::set_allocated_location(::mtproto::InputWebFileLocation* location) {
  delete location_;
  location_ = location;
  if (location) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_upload_getWebFile.location)
}

// int32 offset = 2;
inline void TL_upload_getWebFile::clear_offset() {
  offset_ = 0;
}
inline ::google::protobuf::int32 TL_upload_getWebFile::offset() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_upload_getWebFile.offset)
  return offset_;
}
inline void TL_upload_getWebFile::set_offset(::google::protobuf::int32 value) {
  
  offset_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_upload_getWebFile.offset)
}

// int32 limit = 3;
inline void TL_upload_getWebFile::clear_limit() {
  limit_ = 0;
}
inline ::google::protobuf::int32 TL_upload_getWebFile::limit() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_upload_getWebFile.limit)
  return limit_;
}
inline void TL_upload_getWebFile::set_limit(::google::protobuf::int32 value) {
  
  limit_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_upload_getWebFile.limit)
}

// -------------------------------------------------------------------

// TL_upload_getCdnFile

// bytes file_token = 1;
inline void TL_upload_getCdnFile::clear_file_token() {
  file_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& TL_upload_getCdnFile::file_token() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_upload_getCdnFile.file_token)
  return file_token_.GetNoArena();
}
inline void TL_upload_getCdnFile::set_file_token(const ::std::string& value) {
  
  file_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtproto.TL_upload_getCdnFile.file_token)
}
#if LANG_CXX11
inline void TL_upload_getCdnFile::set_file_token(::std::string&& value) {
  
  file_token_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mtproto.TL_upload_getCdnFile.file_token)
}
#endif
inline void TL_upload_getCdnFile::set_file_token(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  file_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtproto.TL_upload_getCdnFile.file_token)
}
inline void TL_upload_getCdnFile::set_file_token(const void* value, size_t size) {
  
  file_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtproto.TL_upload_getCdnFile.file_token)
}
inline ::std::string* TL_upload_getCdnFile::mutable_file_token() {
  
  // @@protoc_insertion_point(field_mutable:mtproto.TL_upload_getCdnFile.file_token)
  return file_token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TL_upload_getCdnFile::release_file_token() {
  // @@protoc_insertion_point(field_release:mtproto.TL_upload_getCdnFile.file_token)
  
  return file_token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TL_upload_getCdnFile::set_allocated_file_token(::std::string* file_token) {
  if (file_token != NULL) {
    
  } else {
    
  }
  file_token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), file_token);
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_upload_getCdnFile.file_token)
}

// int32 offset = 2;
inline void TL_upload_getCdnFile::clear_offset() {
  offset_ = 0;
}
inline ::google::protobuf::int32 TL_upload_getCdnFile::offset() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_upload_getCdnFile.offset)
  return offset_;
}
inline void TL_upload_getCdnFile::set_offset(::google::protobuf::int32 value) {
  
  offset_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_upload_getCdnFile.offset)
}

// int32 limit = 3;
inline void TL_upload_getCdnFile::clear_limit() {
  limit_ = 0;
}
inline ::google::protobuf::int32 TL_upload_getCdnFile::limit() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_upload_getCdnFile.limit)
  return limit_;
}
inline void TL_upload_getCdnFile::set_limit(::google::protobuf::int32 value) {
  
  limit_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_upload_getCdnFile.limit)
}

// -------------------------------------------------------------------

// TL_upload_reuploadCdnFile

// bytes file_token = 1;
inline void TL_upload_reuploadCdnFile::clear_file_token() {
  file_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& TL_upload_reuploadCdnFile::file_token() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_upload_reuploadCdnFile.file_token)
  return file_token_.GetNoArena();
}
inline void TL_upload_reuploadCdnFile::set_file_token(const ::std::string& value) {
  
  file_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtproto.TL_upload_reuploadCdnFile.file_token)
}
#if LANG_CXX11
inline void TL_upload_reuploadCdnFile::set_file_token(::std::string&& value) {
  
  file_token_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mtproto.TL_upload_reuploadCdnFile.file_token)
}
#endif
inline void TL_upload_reuploadCdnFile::set_file_token(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  file_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtproto.TL_upload_reuploadCdnFile.file_token)
}
inline void TL_upload_reuploadCdnFile::set_file_token(const void* value, size_t size) {
  
  file_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtproto.TL_upload_reuploadCdnFile.file_token)
}
inline ::std::string* TL_upload_reuploadCdnFile::mutable_file_token() {
  
  // @@protoc_insertion_point(field_mutable:mtproto.TL_upload_reuploadCdnFile.file_token)
  return file_token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TL_upload_reuploadCdnFile::release_file_token() {
  // @@protoc_insertion_point(field_release:mtproto.TL_upload_reuploadCdnFile.file_token)
  
  return file_token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TL_upload_reuploadCdnFile::set_allocated_file_token(::std::string* file_token) {
  if (file_token != NULL) {
    
  } else {
    
  }
  file_token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), file_token);
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_upload_reuploadCdnFile.file_token)
}

// bytes request_token = 2;
inline void TL_upload_reuploadCdnFile::clear_request_token() {
  request_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& TL_upload_reuploadCdnFile::request_token() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_upload_reuploadCdnFile.request_token)
  return request_token_.GetNoArena();
}
inline void TL_upload_reuploadCdnFile::set_request_token(const ::std::string& value) {
  
  request_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtproto.TL_upload_reuploadCdnFile.request_token)
}
#if LANG_CXX11
inline void TL_upload_reuploadCdnFile::set_request_token(::std::string&& value) {
  
  request_token_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mtproto.TL_upload_reuploadCdnFile.request_token)
}
#endif
inline void TL_upload_reuploadCdnFile::set_request_token(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  request_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtproto.TL_upload_reuploadCdnFile.request_token)
}
inline void TL_upload_reuploadCdnFile::set_request_token(const void* value, size_t size) {
  
  request_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtproto.TL_upload_reuploadCdnFile.request_token)
}
inline ::std::string* TL_upload_reuploadCdnFile::mutable_request_token() {
  
  // @@protoc_insertion_point(field_mutable:mtproto.TL_upload_reuploadCdnFile.request_token)
  return request_token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TL_upload_reuploadCdnFile::release_request_token() {
  // @@protoc_insertion_point(field_release:mtproto.TL_upload_reuploadCdnFile.request_token)
  
  return request_token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TL_upload_reuploadCdnFile::set_allocated_request_token(::std::string* request_token) {
  if (request_token != NULL) {
    
  } else {
    
  }
  request_token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), request_token);
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_upload_reuploadCdnFile.request_token)
}

// -------------------------------------------------------------------

// TL_upload_getCdnFileHashes

// bytes file_token = 1;
inline void TL_upload_getCdnFileHashes::clear_file_token() {
  file_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& TL_upload_getCdnFileHashes::file_token() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_upload_getCdnFileHashes.file_token)
  return file_token_.GetNoArena();
}
inline void TL_upload_getCdnFileHashes::set_file_token(const ::std::string& value) {
  
  file_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtproto.TL_upload_getCdnFileHashes.file_token)
}
#if LANG_CXX11
inline void TL_upload_getCdnFileHashes::set_file_token(::std::string&& value) {
  
  file_token_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mtproto.TL_upload_getCdnFileHashes.file_token)
}
#endif
inline void TL_upload_getCdnFileHashes::set_file_token(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  file_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtproto.TL_upload_getCdnFileHashes.file_token)
}
inline void TL_upload_getCdnFileHashes::set_file_token(const void* value, size_t size) {
  
  file_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtproto.TL_upload_getCdnFileHashes.file_token)
}
inline ::std::string* TL_upload_getCdnFileHashes::mutable_file_token() {
  
  // @@protoc_insertion_point(field_mutable:mtproto.TL_upload_getCdnFileHashes.file_token)
  return file_token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TL_upload_getCdnFileHashes::release_file_token() {
  // @@protoc_insertion_point(field_release:mtproto.TL_upload_getCdnFileHashes.file_token)
  
  return file_token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TL_upload_getCdnFileHashes::set_allocated_file_token(::std::string* file_token) {
  if (file_token != NULL) {
    
  } else {
    
  }
  file_token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), file_token);
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_upload_getCdnFileHashes.file_token)
}

// int32 offset = 2;
inline void TL_upload_getCdnFileHashes::clear_offset() {
  offset_ = 0;
}
inline ::google::protobuf::int32 TL_upload_getCdnFileHashes::offset() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_upload_getCdnFileHashes.offset)
  return offset_;
}
inline void TL_upload_getCdnFileHashes::set_offset(::google::protobuf::int32 value) {
  
  offset_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_upload_getCdnFileHashes.offset)
}

// -------------------------------------------------------------------

// TL_upload_getFileHashes

// .mtproto.InputFileLocation location = 1;
inline bool TL_upload_getFileHashes::has_location() const {
  return this != internal_default_instance() && location_ != NULL;
}
inline void TL_upload_getFileHashes::clear_location() {
  if (GetArenaNoVirtual() == NULL && location_ != NULL) delete location_;
  location_ = NULL;
}
inline const ::mtproto::InputFileLocation& TL_upload_getFileHashes::location() const {
  const ::mtproto::InputFileLocation* p = location_;
  // @@protoc_insertion_point(field_get:mtproto.TL_upload_getFileHashes.location)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::InputFileLocation*>(
      &::mtproto::_InputFileLocation_default_instance_);
}
inline ::mtproto::InputFileLocation* TL_upload_getFileHashes::mutable_location() {
  
  if (location_ == NULL) {
    location_ = new ::mtproto::InputFileLocation;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_upload_getFileHashes.location)
  return location_;
}
inline ::mtproto::InputFileLocation* TL_upload_getFileHashes::release_location() {
  // @@protoc_insertion_point(field_release:mtproto.TL_upload_getFileHashes.location)
  
  ::mtproto::InputFileLocation* temp = location_;
  location_ = NULL;
  return temp;
}
inline void TL_upload_getFileHashes::set_allocated_location(::mtproto::InputFileLocation* location) {
  delete location_;
  location_ = location;
  if (location) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_upload_getFileHashes.location)
}

// int32 offset = 2;
inline void TL_upload_getFileHashes::clear_offset() {
  offset_ = 0;
}
inline ::google::protobuf::int32 TL_upload_getFileHashes::offset() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_upload_getFileHashes.offset)
  return offset_;
}
inline void TL_upload_getFileHashes::set_offset(::google::protobuf::int32 value) {
  
  offset_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_upload_getFileHashes.offset)
}

// -------------------------------------------------------------------

// TL_help_getConfig

// -------------------------------------------------------------------

// TL_help_getNearestDc

// -------------------------------------------------------------------

// TL_help_getAppUpdate

// string source = 1;
inline void TL_help_getAppUpdate::clear_source() {
  source_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& TL_help_getAppUpdate::source() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_help_getAppUpdate.source)
  return source_.GetNoArena();
}
inline void TL_help_getAppUpdate::set_source(const ::std::string& value) {
  
  source_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtproto.TL_help_getAppUpdate.source)
}
#if LANG_CXX11
inline void TL_help_getAppUpdate::set_source(::std::string&& value) {
  
  source_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mtproto.TL_help_getAppUpdate.source)
}
#endif
inline void TL_help_getAppUpdate::set_source(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  source_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtproto.TL_help_getAppUpdate.source)
}
inline void TL_help_getAppUpdate::set_source(const char* value, size_t size) {
  
  source_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtproto.TL_help_getAppUpdate.source)
}
inline ::std::string* TL_help_getAppUpdate::mutable_source() {
  
  // @@protoc_insertion_point(field_mutable:mtproto.TL_help_getAppUpdate.source)
  return source_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TL_help_getAppUpdate::release_source() {
  // @@protoc_insertion_point(field_release:mtproto.TL_help_getAppUpdate.source)
  
  return source_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TL_help_getAppUpdate::set_allocated_source(::std::string* source) {
  if (source != NULL) {
    
  } else {
    
  }
  source_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), source);
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_help_getAppUpdate.source)
}

// -------------------------------------------------------------------

// TL_help_saveAppLog

// repeated .mtproto.InputAppEvent events = 1;
inline int TL_help_saveAppLog::events_size() const {
  return events_.size();
}
inline void TL_help_saveAppLog::clear_events() {
  events_.Clear();
}
inline const ::mtproto::InputAppEvent& TL_help_saveAppLog::events(int index) const {
  // @@protoc_insertion_point(field_get:mtproto.TL_help_saveAppLog.events)
  return events_.Get(index);
}
inline ::mtproto::InputAppEvent* TL_help_saveAppLog::mutable_events(int index) {
  // @@protoc_insertion_point(field_mutable:mtproto.TL_help_saveAppLog.events)
  return events_.Mutable(index);
}
inline ::mtproto::InputAppEvent* TL_help_saveAppLog::add_events() {
  // @@protoc_insertion_point(field_add:mtproto.TL_help_saveAppLog.events)
  return events_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::mtproto::InputAppEvent >*
TL_help_saveAppLog::mutable_events() {
  // @@protoc_insertion_point(field_mutable_list:mtproto.TL_help_saveAppLog.events)
  return &events_;
}
inline const ::google::protobuf::RepeatedPtrField< ::mtproto::InputAppEvent >&
TL_help_saveAppLog::events() const {
  // @@protoc_insertion_point(field_list:mtproto.TL_help_saveAppLog.events)
  return events_;
}

// -------------------------------------------------------------------

// TL_help_getInviteText

// -------------------------------------------------------------------

// TL_help_getSupport

// -------------------------------------------------------------------

// TL_help_getAppChangelog

// string prev_app_version = 1;
inline void TL_help_getAppChangelog::clear_prev_app_version() {
  prev_app_version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& TL_help_getAppChangelog::prev_app_version() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_help_getAppChangelog.prev_app_version)
  return prev_app_version_.GetNoArena();
}
inline void TL_help_getAppChangelog::set_prev_app_version(const ::std::string& value) {
  
  prev_app_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtproto.TL_help_getAppChangelog.prev_app_version)
}
#if LANG_CXX11
inline void TL_help_getAppChangelog::set_prev_app_version(::std::string&& value) {
  
  prev_app_version_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mtproto.TL_help_getAppChangelog.prev_app_version)
}
#endif
inline void TL_help_getAppChangelog::set_prev_app_version(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  prev_app_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtproto.TL_help_getAppChangelog.prev_app_version)
}
inline void TL_help_getAppChangelog::set_prev_app_version(const char* value, size_t size) {
  
  prev_app_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtproto.TL_help_getAppChangelog.prev_app_version)
}
inline ::std::string* TL_help_getAppChangelog::mutable_prev_app_version() {
  
  // @@protoc_insertion_point(field_mutable:mtproto.TL_help_getAppChangelog.prev_app_version)
  return prev_app_version_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TL_help_getAppChangelog::release_prev_app_version() {
  // @@protoc_insertion_point(field_release:mtproto.TL_help_getAppChangelog.prev_app_version)
  
  return prev_app_version_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TL_help_getAppChangelog::set_allocated_prev_app_version(::std::string* prev_app_version) {
  if (prev_app_version != NULL) {
    
  } else {
    
  }
  prev_app_version_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), prev_app_version);
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_help_getAppChangelog.prev_app_version)
}

// -------------------------------------------------------------------

// TL_help_setBotUpdatesStatus

// int32 pending_updates_count = 1;
inline void TL_help_setBotUpdatesStatus::clear_pending_updates_count() {
  pending_updates_count_ = 0;
}
inline ::google::protobuf::int32 TL_help_setBotUpdatesStatus::pending_updates_count() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_help_setBotUpdatesStatus.pending_updates_count)
  return pending_updates_count_;
}
inline void TL_help_setBotUpdatesStatus::set_pending_updates_count(::google::protobuf::int32 value) {
  
  pending_updates_count_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_help_setBotUpdatesStatus.pending_updates_count)
}

// string message = 2;
inline void TL_help_setBotUpdatesStatus::clear_message() {
  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& TL_help_setBotUpdatesStatus::message() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_help_setBotUpdatesStatus.message)
  return message_.GetNoArena();
}
inline void TL_help_setBotUpdatesStatus::set_message(const ::std::string& value) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtproto.TL_help_setBotUpdatesStatus.message)
}
#if LANG_CXX11
inline void TL_help_setBotUpdatesStatus::set_message(::std::string&& value) {
  
  message_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mtproto.TL_help_setBotUpdatesStatus.message)
}
#endif
inline void TL_help_setBotUpdatesStatus::set_message(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtproto.TL_help_setBotUpdatesStatus.message)
}
inline void TL_help_setBotUpdatesStatus::set_message(const char* value, size_t size) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtproto.TL_help_setBotUpdatesStatus.message)
}
inline ::std::string* TL_help_setBotUpdatesStatus::mutable_message() {
  
  // @@protoc_insertion_point(field_mutable:mtproto.TL_help_setBotUpdatesStatus.message)
  return message_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TL_help_setBotUpdatesStatus::release_message() {
  // @@protoc_insertion_point(field_release:mtproto.TL_help_setBotUpdatesStatus.message)
  
  return message_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TL_help_setBotUpdatesStatus::set_allocated_message(::std::string* message) {
  if (message != NULL) {
    
  } else {
    
  }
  message_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), message);
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_help_setBotUpdatesStatus.message)
}

// -------------------------------------------------------------------

// TL_help_getCdnConfig

// -------------------------------------------------------------------

// TL_help_getRecentMeUrls

// string referer = 1;
inline void TL_help_getRecentMeUrls::clear_referer() {
  referer_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& TL_help_getRecentMeUrls::referer() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_help_getRecentMeUrls.referer)
  return referer_.GetNoArena();
}
inline void TL_help_getRecentMeUrls::set_referer(const ::std::string& value) {
  
  referer_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtproto.TL_help_getRecentMeUrls.referer)
}
#if LANG_CXX11
inline void TL_help_getRecentMeUrls::set_referer(::std::string&& value) {
  
  referer_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mtproto.TL_help_getRecentMeUrls.referer)
}
#endif
inline void TL_help_getRecentMeUrls::set_referer(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  referer_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtproto.TL_help_getRecentMeUrls.referer)
}
inline void TL_help_getRecentMeUrls::set_referer(const char* value, size_t size) {
  
  referer_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtproto.TL_help_getRecentMeUrls.referer)
}
inline ::std::string* TL_help_getRecentMeUrls::mutable_referer() {
  
  // @@protoc_insertion_point(field_mutable:mtproto.TL_help_getRecentMeUrls.referer)
  return referer_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TL_help_getRecentMeUrls::release_referer() {
  // @@protoc_insertion_point(field_release:mtproto.TL_help_getRecentMeUrls.referer)
  
  return referer_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TL_help_getRecentMeUrls::set_allocated_referer(::std::string* referer) {
  if (referer != NULL) {
    
  } else {
    
  }
  referer_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), referer);
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_help_getRecentMeUrls.referer)
}

// -------------------------------------------------------------------

// TL_help_getProxyData

// -------------------------------------------------------------------

// TL_help_getTermsOfServiceUpdate

// -------------------------------------------------------------------

// TL_help_acceptTermsOfService

// .mtproto.DataJSON id = 1;
inline bool TL_help_acceptTermsOfService::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline void TL_help_acceptTermsOfService::clear_id() {
  if (GetArenaNoVirtual() == NULL && id_ != NULL) delete id_;
  id_ = NULL;
}
inline const ::mtproto::DataJSON& TL_help_acceptTermsOfService::id() const {
  const ::mtproto::DataJSON* p = id_;
  // @@protoc_insertion_point(field_get:mtproto.TL_help_acceptTermsOfService.id)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::DataJSON*>(
      &::mtproto::_DataJSON_default_instance_);
}
inline ::mtproto::DataJSON* TL_help_acceptTermsOfService::mutable_id() {
  
  if (id_ == NULL) {
    id_ = new ::mtproto::DataJSON;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_help_acceptTermsOfService.id)
  return id_;
}
inline ::mtproto::DataJSON* TL_help_acceptTermsOfService::release_id() {
  // @@protoc_insertion_point(field_release:mtproto.TL_help_acceptTermsOfService.id)
  
  ::mtproto::DataJSON* temp = id_;
  id_ = NULL;
  return temp;
}
inline void TL_help_acceptTermsOfService::set_allocated_id(::mtproto::DataJSON* id) {
  delete id_;
  id_ = id;
  if (id) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_help_acceptTermsOfService.id)
}

// -------------------------------------------------------------------

// TL_help_getDeepLinkInfo

// string path = 1;
inline void TL_help_getDeepLinkInfo::clear_path() {
  path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& TL_help_getDeepLinkInfo::path() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_help_getDeepLinkInfo.path)
  return path_.GetNoArena();
}
inline void TL_help_getDeepLinkInfo::set_path(const ::std::string& value) {
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtproto.TL_help_getDeepLinkInfo.path)
}
#if LANG_CXX11
inline void TL_help_getDeepLinkInfo::set_path(::std::string&& value) {
  
  path_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mtproto.TL_help_getDeepLinkInfo.path)
}
#endif
inline void TL_help_getDeepLinkInfo::set_path(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtproto.TL_help_getDeepLinkInfo.path)
}
inline void TL_help_getDeepLinkInfo::set_path(const char* value, size_t size) {
  
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtproto.TL_help_getDeepLinkInfo.path)
}
inline ::std::string* TL_help_getDeepLinkInfo::mutable_path() {
  
  // @@protoc_insertion_point(field_mutable:mtproto.TL_help_getDeepLinkInfo.path)
  return path_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TL_help_getDeepLinkInfo::release_path() {
  // @@protoc_insertion_point(field_release:mtproto.TL_help_getDeepLinkInfo.path)
  
  return path_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TL_help_getDeepLinkInfo::set_allocated_path(::std::string* path) {
  if (path != NULL) {
    
  } else {
    
  }
  path_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), path);
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_help_getDeepLinkInfo.path)
}

// -------------------------------------------------------------------

// TL_help_getPassportConfig

// int32 hash = 1;
inline void TL_help_getPassportConfig::clear_hash() {
  hash_ = 0;
}
inline ::google::protobuf::int32 TL_help_getPassportConfig::hash() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_help_getPassportConfig.hash)
  return hash_;
}
inline void TL_help_getPassportConfig::set_hash(::google::protobuf::int32 value) {
  
  hash_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_help_getPassportConfig.hash)
}

// -------------------------------------------------------------------

// TL_channels_readHistory

// .mtproto.InputChannel channel = 1;
inline bool TL_channels_readHistory::has_channel() const {
  return this != internal_default_instance() && channel_ != NULL;
}
inline void TL_channels_readHistory::clear_channel() {
  if (GetArenaNoVirtual() == NULL && channel_ != NULL) delete channel_;
  channel_ = NULL;
}
inline const ::mtproto::InputChannel& TL_channels_readHistory::channel() const {
  const ::mtproto::InputChannel* p = channel_;
  // @@protoc_insertion_point(field_get:mtproto.TL_channels_readHistory.channel)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::InputChannel*>(
      &::mtproto::_InputChannel_default_instance_);
}
inline ::mtproto::InputChannel* TL_channels_readHistory::mutable_channel() {
  
  if (channel_ == NULL) {
    channel_ = new ::mtproto::InputChannel;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_channels_readHistory.channel)
  return channel_;
}
inline ::mtproto::InputChannel* TL_channels_readHistory::release_channel() {
  // @@protoc_insertion_point(field_release:mtproto.TL_channels_readHistory.channel)
  
  ::mtproto::InputChannel* temp = channel_;
  channel_ = NULL;
  return temp;
}
inline void TL_channels_readHistory::set_allocated_channel(::mtproto::InputChannel* channel) {
  delete channel_;
  channel_ = channel;
  if (channel) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_channels_readHistory.channel)
}

// int32 max_id = 2;
inline void TL_channels_readHistory::clear_max_id() {
  max_id_ = 0;
}
inline ::google::protobuf::int32 TL_channels_readHistory::max_id() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_channels_readHistory.max_id)
  return max_id_;
}
inline void TL_channels_readHistory::set_max_id(::google::protobuf::int32 value) {
  
  max_id_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_channels_readHistory.max_id)
}

// -------------------------------------------------------------------

// TL_channels_deleteMessages

// .mtproto.InputChannel channel = 1;
inline bool TL_channels_deleteMessages::has_channel() const {
  return this != internal_default_instance() && channel_ != NULL;
}
inline void TL_channels_deleteMessages::clear_channel() {
  if (GetArenaNoVirtual() == NULL && channel_ != NULL) delete channel_;
  channel_ = NULL;
}
inline const ::mtproto::InputChannel& TL_channels_deleteMessages::channel() const {
  const ::mtproto::InputChannel* p = channel_;
  // @@protoc_insertion_point(field_get:mtproto.TL_channels_deleteMessages.channel)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::InputChannel*>(
      &::mtproto::_InputChannel_default_instance_);
}
inline ::mtproto::InputChannel* TL_channels_deleteMessages::mutable_channel() {
  
  if (channel_ == NULL) {
    channel_ = new ::mtproto::InputChannel;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_channels_deleteMessages.channel)
  return channel_;
}
inline ::mtproto::InputChannel* TL_channels_deleteMessages::release_channel() {
  // @@protoc_insertion_point(field_release:mtproto.TL_channels_deleteMessages.channel)
  
  ::mtproto::InputChannel* temp = channel_;
  channel_ = NULL;
  return temp;
}
inline void TL_channels_deleteMessages::set_allocated_channel(::mtproto::InputChannel* channel) {
  delete channel_;
  channel_ = channel;
  if (channel) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_channels_deleteMessages.channel)
}

// repeated int32 id = 2;
inline int TL_channels_deleteMessages::id_size() const {
  return id_.size();
}
inline void TL_channels_deleteMessages::clear_id() {
  id_.Clear();
}
inline ::google::protobuf::int32 TL_channels_deleteMessages::id(int index) const {
  // @@protoc_insertion_point(field_get:mtproto.TL_channels_deleteMessages.id)
  return id_.Get(index);
}
inline void TL_channels_deleteMessages::set_id(int index, ::google::protobuf::int32 value) {
  id_.Set(index, value);
  // @@protoc_insertion_point(field_set:mtproto.TL_channels_deleteMessages.id)
}
inline void TL_channels_deleteMessages::add_id(::google::protobuf::int32 value) {
  id_.Add(value);
  // @@protoc_insertion_point(field_add:mtproto.TL_channels_deleteMessages.id)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
TL_channels_deleteMessages::id() const {
  // @@protoc_insertion_point(field_list:mtproto.TL_channels_deleteMessages.id)
  return id_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
TL_channels_deleteMessages::mutable_id() {
  // @@protoc_insertion_point(field_mutable_list:mtproto.TL_channels_deleteMessages.id)
  return &id_;
}

// -------------------------------------------------------------------

// TL_channels_deleteUserHistory

// .mtproto.InputChannel channel = 1;
inline bool TL_channels_deleteUserHistory::has_channel() const {
  return this != internal_default_instance() && channel_ != NULL;
}
inline void TL_channels_deleteUserHistory::clear_channel() {
  if (GetArenaNoVirtual() == NULL && channel_ != NULL) delete channel_;
  channel_ = NULL;
}
inline const ::mtproto::InputChannel& TL_channels_deleteUserHistory::channel() const {
  const ::mtproto::InputChannel* p = channel_;
  // @@protoc_insertion_point(field_get:mtproto.TL_channels_deleteUserHistory.channel)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::InputChannel*>(
      &::mtproto::_InputChannel_default_instance_);
}
inline ::mtproto::InputChannel* TL_channels_deleteUserHistory::mutable_channel() {
  
  if (channel_ == NULL) {
    channel_ = new ::mtproto::InputChannel;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_channels_deleteUserHistory.channel)
  return channel_;
}
inline ::mtproto::InputChannel* TL_channels_deleteUserHistory::release_channel() {
  // @@protoc_insertion_point(field_release:mtproto.TL_channels_deleteUserHistory.channel)
  
  ::mtproto::InputChannel* temp = channel_;
  channel_ = NULL;
  return temp;
}
inline void TL_channels_deleteUserHistory::set_allocated_channel(::mtproto::InputChannel* channel) {
  delete channel_;
  channel_ = channel;
  if (channel) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_channels_deleteUserHistory.channel)
}

// .mtproto.InputUser user_id = 2;
inline bool TL_channels_deleteUserHistory::has_user_id() const {
  return this != internal_default_instance() && user_id_ != NULL;
}
inline void TL_channels_deleteUserHistory::clear_user_id() {
  if (GetArenaNoVirtual() == NULL && user_id_ != NULL) delete user_id_;
  user_id_ = NULL;
}
inline const ::mtproto::InputUser& TL_channels_deleteUserHistory::user_id() const {
  const ::mtproto::InputUser* p = user_id_;
  // @@protoc_insertion_point(field_get:mtproto.TL_channels_deleteUserHistory.user_id)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::InputUser*>(
      &::mtproto::_InputUser_default_instance_);
}
inline ::mtproto::InputUser* TL_channels_deleteUserHistory::mutable_user_id() {
  
  if (user_id_ == NULL) {
    user_id_ = new ::mtproto::InputUser;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_channels_deleteUserHistory.user_id)
  return user_id_;
}
inline ::mtproto::InputUser* TL_channels_deleteUserHistory::release_user_id() {
  // @@protoc_insertion_point(field_release:mtproto.TL_channels_deleteUserHistory.user_id)
  
  ::mtproto::InputUser* temp = user_id_;
  user_id_ = NULL;
  return temp;
}
inline void TL_channels_deleteUserHistory::set_allocated_user_id(::mtproto::InputUser* user_id) {
  delete user_id_;
  user_id_ = user_id;
  if (user_id) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_channels_deleteUserHistory.user_id)
}

// -------------------------------------------------------------------

// TL_channels_reportSpam

// .mtproto.InputChannel channel = 1;
inline bool TL_channels_reportSpam::has_channel() const {
  return this != internal_default_instance() && channel_ != NULL;
}
inline void TL_channels_reportSpam::clear_channel() {
  if (GetArenaNoVirtual() == NULL && channel_ != NULL) delete channel_;
  channel_ = NULL;
}
inline const ::mtproto::InputChannel& TL_channels_reportSpam::channel() const {
  const ::mtproto::InputChannel* p = channel_;
  // @@protoc_insertion_point(field_get:mtproto.TL_channels_reportSpam.channel)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::InputChannel*>(
      &::mtproto::_InputChannel_default_instance_);
}
inline ::mtproto::InputChannel* TL_channels_reportSpam::mutable_channel() {
  
  if (channel_ == NULL) {
    channel_ = new ::mtproto::InputChannel;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_channels_reportSpam.channel)
  return channel_;
}
inline ::mtproto::InputChannel* TL_channels_reportSpam::release_channel() {
  // @@protoc_insertion_point(field_release:mtproto.TL_channels_reportSpam.channel)
  
  ::mtproto::InputChannel* temp = channel_;
  channel_ = NULL;
  return temp;
}
inline void TL_channels_reportSpam::set_allocated_channel(::mtproto::InputChannel* channel) {
  delete channel_;
  channel_ = channel;
  if (channel) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_channels_reportSpam.channel)
}

// .mtproto.InputUser user_id = 2;
inline bool TL_channels_reportSpam::has_user_id() const {
  return this != internal_default_instance() && user_id_ != NULL;
}
inline void TL_channels_reportSpam::clear_user_id() {
  if (GetArenaNoVirtual() == NULL && user_id_ != NULL) delete user_id_;
  user_id_ = NULL;
}
inline const ::mtproto::InputUser& TL_channels_reportSpam::user_id() const {
  const ::mtproto::InputUser* p = user_id_;
  // @@protoc_insertion_point(field_get:mtproto.TL_channels_reportSpam.user_id)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::InputUser*>(
      &::mtproto::_InputUser_default_instance_);
}
inline ::mtproto::InputUser* TL_channels_reportSpam::mutable_user_id() {
  
  if (user_id_ == NULL) {
    user_id_ = new ::mtproto::InputUser;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_channels_reportSpam.user_id)
  return user_id_;
}
inline ::mtproto::InputUser* TL_channels_reportSpam::release_user_id() {
  // @@protoc_insertion_point(field_release:mtproto.TL_channels_reportSpam.user_id)
  
  ::mtproto::InputUser* temp = user_id_;
  user_id_ = NULL;
  return temp;
}
inline void TL_channels_reportSpam::set_allocated_user_id(::mtproto::InputUser* user_id) {
  delete user_id_;
  user_id_ = user_id;
  if (user_id) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_channels_reportSpam.user_id)
}

// repeated int32 id = 3;
inline int TL_channels_reportSpam::id_size() const {
  return id_.size();
}
inline void TL_channels_reportSpam::clear_id() {
  id_.Clear();
}
inline ::google::protobuf::int32 TL_channels_reportSpam::id(int index) const {
  // @@protoc_insertion_point(field_get:mtproto.TL_channels_reportSpam.id)
  return id_.Get(index);
}
inline void TL_channels_reportSpam::set_id(int index, ::google::protobuf::int32 value) {
  id_.Set(index, value);
  // @@protoc_insertion_point(field_set:mtproto.TL_channels_reportSpam.id)
}
inline void TL_channels_reportSpam::add_id(::google::protobuf::int32 value) {
  id_.Add(value);
  // @@protoc_insertion_point(field_add:mtproto.TL_channels_reportSpam.id)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
TL_channels_reportSpam::id() const {
  // @@protoc_insertion_point(field_list:mtproto.TL_channels_reportSpam.id)
  return id_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
TL_channels_reportSpam::mutable_id() {
  // @@protoc_insertion_point(field_mutable_list:mtproto.TL_channels_reportSpam.id)
  return &id_;
}

// -------------------------------------------------------------------

// TL_channels_getMessages

// .mtproto.InputChannel channel = 1;
inline bool TL_channels_getMessages::has_channel() const {
  return this != internal_default_instance() && channel_ != NULL;
}
inline void TL_channels_getMessages::clear_channel() {
  if (GetArenaNoVirtual() == NULL && channel_ != NULL) delete channel_;
  channel_ = NULL;
}
inline const ::mtproto::InputChannel& TL_channels_getMessages::channel() const {
  const ::mtproto::InputChannel* p = channel_;
  // @@protoc_insertion_point(field_get:mtproto.TL_channels_getMessages.channel)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::InputChannel*>(
      &::mtproto::_InputChannel_default_instance_);
}
inline ::mtproto::InputChannel* TL_channels_getMessages::mutable_channel() {
  
  if (channel_ == NULL) {
    channel_ = new ::mtproto::InputChannel;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_channels_getMessages.channel)
  return channel_;
}
inline ::mtproto::InputChannel* TL_channels_getMessages::release_channel() {
  // @@protoc_insertion_point(field_release:mtproto.TL_channels_getMessages.channel)
  
  ::mtproto::InputChannel* temp = channel_;
  channel_ = NULL;
  return temp;
}
inline void TL_channels_getMessages::set_allocated_channel(::mtproto::InputChannel* channel) {
  delete channel_;
  channel_ = channel;
  if (channel) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_channels_getMessages.channel)
}

// repeated .mtproto.InputMessage id = 2;
inline int TL_channels_getMessages::id_size() const {
  return id_.size();
}
inline void TL_channels_getMessages::clear_id() {
  id_.Clear();
}
inline const ::mtproto::InputMessage& TL_channels_getMessages::id(int index) const {
  // @@protoc_insertion_point(field_get:mtproto.TL_channels_getMessages.id)
  return id_.Get(index);
}
inline ::mtproto::InputMessage* TL_channels_getMessages::mutable_id(int index) {
  // @@protoc_insertion_point(field_mutable:mtproto.TL_channels_getMessages.id)
  return id_.Mutable(index);
}
inline ::mtproto::InputMessage* TL_channels_getMessages::add_id() {
  // @@protoc_insertion_point(field_add:mtproto.TL_channels_getMessages.id)
  return id_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::mtproto::InputMessage >*
TL_channels_getMessages::mutable_id() {
  // @@protoc_insertion_point(field_mutable_list:mtproto.TL_channels_getMessages.id)
  return &id_;
}
inline const ::google::protobuf::RepeatedPtrField< ::mtproto::InputMessage >&
TL_channels_getMessages::id() const {
  // @@protoc_insertion_point(field_list:mtproto.TL_channels_getMessages.id)
  return id_;
}

// -------------------------------------------------------------------

// TL_channels_getParticipants

// .mtproto.InputChannel channel = 1;
inline bool TL_channels_getParticipants::has_channel() const {
  return this != internal_default_instance() && channel_ != NULL;
}
inline void TL_channels_getParticipants::clear_channel() {
  if (GetArenaNoVirtual() == NULL && channel_ != NULL) delete channel_;
  channel_ = NULL;
}
inline const ::mtproto::InputChannel& TL_channels_getParticipants::channel() const {
  const ::mtproto::InputChannel* p = channel_;
  // @@protoc_insertion_point(field_get:mtproto.TL_channels_getParticipants.channel)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::InputChannel*>(
      &::mtproto::_InputChannel_default_instance_);
}
inline ::mtproto::InputChannel* TL_channels_getParticipants::mutable_channel() {
  
  if (channel_ == NULL) {
    channel_ = new ::mtproto::InputChannel;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_channels_getParticipants.channel)
  return channel_;
}
inline ::mtproto::InputChannel* TL_channels_getParticipants::release_channel() {
  // @@protoc_insertion_point(field_release:mtproto.TL_channels_getParticipants.channel)
  
  ::mtproto::InputChannel* temp = channel_;
  channel_ = NULL;
  return temp;
}
inline void TL_channels_getParticipants::set_allocated_channel(::mtproto::InputChannel* channel) {
  delete channel_;
  channel_ = channel;
  if (channel) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_channels_getParticipants.channel)
}

// .mtproto.ChannelParticipantsFilter filter = 2;
inline bool TL_channels_getParticipants::has_filter() const {
  return this != internal_default_instance() && filter_ != NULL;
}
inline void TL_channels_getParticipants::clear_filter() {
  if (GetArenaNoVirtual() == NULL && filter_ != NULL) delete filter_;
  filter_ = NULL;
}
inline const ::mtproto::ChannelParticipantsFilter& TL_channels_getParticipants::filter() const {
  const ::mtproto::ChannelParticipantsFilter* p = filter_;
  // @@protoc_insertion_point(field_get:mtproto.TL_channels_getParticipants.filter)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::ChannelParticipantsFilter*>(
      &::mtproto::_ChannelParticipantsFilter_default_instance_);
}
inline ::mtproto::ChannelParticipantsFilter* TL_channels_getParticipants::mutable_filter() {
  
  if (filter_ == NULL) {
    filter_ = new ::mtproto::ChannelParticipantsFilter;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_channels_getParticipants.filter)
  return filter_;
}
inline ::mtproto::ChannelParticipantsFilter* TL_channels_getParticipants::release_filter() {
  // @@protoc_insertion_point(field_release:mtproto.TL_channels_getParticipants.filter)
  
  ::mtproto::ChannelParticipantsFilter* temp = filter_;
  filter_ = NULL;
  return temp;
}
inline void TL_channels_getParticipants::set_allocated_filter(::mtproto::ChannelParticipantsFilter* filter) {
  delete filter_;
  filter_ = filter;
  if (filter) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_channels_getParticipants.filter)
}

// int32 offset = 3;
inline void TL_channels_getParticipants::clear_offset() {
  offset_ = 0;
}
inline ::google::protobuf::int32 TL_channels_getParticipants::offset() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_channels_getParticipants.offset)
  return offset_;
}
inline void TL_channels_getParticipants::set_offset(::google::protobuf::int32 value) {
  
  offset_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_channels_getParticipants.offset)
}

// int32 limit = 4;
inline void TL_channels_getParticipants::clear_limit() {
  limit_ = 0;
}
inline ::google::protobuf::int32 TL_channels_getParticipants::limit() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_channels_getParticipants.limit)
  return limit_;
}
inline void TL_channels_getParticipants::set_limit(::google::protobuf::int32 value) {
  
  limit_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_channels_getParticipants.limit)
}

// int32 hash = 5;
inline void TL_channels_getParticipants::clear_hash() {
  hash_ = 0;
}
inline ::google::protobuf::int32 TL_channels_getParticipants::hash() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_channels_getParticipants.hash)
  return hash_;
}
inline void TL_channels_getParticipants::set_hash(::google::protobuf::int32 value) {
  
  hash_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_channels_getParticipants.hash)
}

// -------------------------------------------------------------------

// TL_channels_getParticipant

// .mtproto.InputChannel channel = 1;
inline bool TL_channels_getParticipant::has_channel() const {
  return this != internal_default_instance() && channel_ != NULL;
}
inline void TL_channels_getParticipant::clear_channel() {
  if (GetArenaNoVirtual() == NULL && channel_ != NULL) delete channel_;
  channel_ = NULL;
}
inline const ::mtproto::InputChannel& TL_channels_getParticipant::channel() const {
  const ::mtproto::InputChannel* p = channel_;
  // @@protoc_insertion_point(field_get:mtproto.TL_channels_getParticipant.channel)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::InputChannel*>(
      &::mtproto::_InputChannel_default_instance_);
}
inline ::mtproto::InputChannel* TL_channels_getParticipant::mutable_channel() {
  
  if (channel_ == NULL) {
    channel_ = new ::mtproto::InputChannel;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_channels_getParticipant.channel)
  return channel_;
}
inline ::mtproto::InputChannel* TL_channels_getParticipant::release_channel() {
  // @@protoc_insertion_point(field_release:mtproto.TL_channels_getParticipant.channel)
  
  ::mtproto::InputChannel* temp = channel_;
  channel_ = NULL;
  return temp;
}
inline void TL_channels_getParticipant::set_allocated_channel(::mtproto::InputChannel* channel) {
  delete channel_;
  channel_ = channel;
  if (channel) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_channels_getParticipant.channel)
}

// .mtproto.InputUser user_id = 2;
inline bool TL_channels_getParticipant::has_user_id() const {
  return this != internal_default_instance() && user_id_ != NULL;
}
inline void TL_channels_getParticipant::clear_user_id() {
  if (GetArenaNoVirtual() == NULL && user_id_ != NULL) delete user_id_;
  user_id_ = NULL;
}
inline const ::mtproto::InputUser& TL_channels_getParticipant::user_id() const {
  const ::mtproto::InputUser* p = user_id_;
  // @@protoc_insertion_point(field_get:mtproto.TL_channels_getParticipant.user_id)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::InputUser*>(
      &::mtproto::_InputUser_default_instance_);
}
inline ::mtproto::InputUser* TL_channels_getParticipant::mutable_user_id() {
  
  if (user_id_ == NULL) {
    user_id_ = new ::mtproto::InputUser;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_channels_getParticipant.user_id)
  return user_id_;
}
inline ::mtproto::InputUser* TL_channels_getParticipant::release_user_id() {
  // @@protoc_insertion_point(field_release:mtproto.TL_channels_getParticipant.user_id)
  
  ::mtproto::InputUser* temp = user_id_;
  user_id_ = NULL;
  return temp;
}
inline void TL_channels_getParticipant::set_allocated_user_id(::mtproto::InputUser* user_id) {
  delete user_id_;
  user_id_ = user_id;
  if (user_id) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_channels_getParticipant.user_id)
}

// -------------------------------------------------------------------

// TL_channels_getChannels

// repeated .mtproto.InputChannel id = 1;
inline int TL_channels_getChannels::id_size() const {
  return id_.size();
}
inline void TL_channels_getChannels::clear_id() {
  id_.Clear();
}
inline const ::mtproto::InputChannel& TL_channels_getChannels::id(int index) const {
  // @@protoc_insertion_point(field_get:mtproto.TL_channels_getChannels.id)
  return id_.Get(index);
}
inline ::mtproto::InputChannel* TL_channels_getChannels::mutable_id(int index) {
  // @@protoc_insertion_point(field_mutable:mtproto.TL_channels_getChannels.id)
  return id_.Mutable(index);
}
inline ::mtproto::InputChannel* TL_channels_getChannels::add_id() {
  // @@protoc_insertion_point(field_add:mtproto.TL_channels_getChannels.id)
  return id_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::mtproto::InputChannel >*
TL_channels_getChannels::mutable_id() {
  // @@protoc_insertion_point(field_mutable_list:mtproto.TL_channels_getChannels.id)
  return &id_;
}
inline const ::google::protobuf::RepeatedPtrField< ::mtproto::InputChannel >&
TL_channels_getChannels::id() const {
  // @@protoc_insertion_point(field_list:mtproto.TL_channels_getChannels.id)
  return id_;
}

// -------------------------------------------------------------------

// TL_channels_getFullChannel

// .mtproto.InputChannel channel = 1;
inline bool TL_channels_getFullChannel::has_channel() const {
  return this != internal_default_instance() && channel_ != NULL;
}
inline void TL_channels_getFullChannel::clear_channel() {
  if (GetArenaNoVirtual() == NULL && channel_ != NULL) delete channel_;
  channel_ = NULL;
}
inline const ::mtproto::InputChannel& TL_channels_getFullChannel::channel() const {
  const ::mtproto::InputChannel* p = channel_;
  // @@protoc_insertion_point(field_get:mtproto.TL_channels_getFullChannel.channel)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::InputChannel*>(
      &::mtproto::_InputChannel_default_instance_);
}
inline ::mtproto::InputChannel* TL_channels_getFullChannel::mutable_channel() {
  
  if (channel_ == NULL) {
    channel_ = new ::mtproto::InputChannel;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_channels_getFullChannel.channel)
  return channel_;
}
inline ::mtproto::InputChannel* TL_channels_getFullChannel::release_channel() {
  // @@protoc_insertion_point(field_release:mtproto.TL_channels_getFullChannel.channel)
  
  ::mtproto::InputChannel* temp = channel_;
  channel_ = NULL;
  return temp;
}
inline void TL_channels_getFullChannel::set_allocated_channel(::mtproto::InputChannel* channel) {
  delete channel_;
  channel_ = channel;
  if (channel) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_channels_getFullChannel.channel)
}

// -------------------------------------------------------------------

// TL_channels_createChannel

// bool broadcast = 2;
inline void TL_channels_createChannel::clear_broadcast() {
  broadcast_ = false;
}
inline bool TL_channels_createChannel::broadcast() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_channels_createChannel.broadcast)
  return broadcast_;
}
inline void TL_channels_createChannel::set_broadcast(bool value) {
  
  broadcast_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_channels_createChannel.broadcast)
}

// bool megagroup = 3;
inline void TL_channels_createChannel::clear_megagroup() {
  megagroup_ = false;
}
inline bool TL_channels_createChannel::megagroup() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_channels_createChannel.megagroup)
  return megagroup_;
}
inline void TL_channels_createChannel::set_megagroup(bool value) {
  
  megagroup_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_channels_createChannel.megagroup)
}

// string title = 4;
inline void TL_channels_createChannel::clear_title() {
  title_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& TL_channels_createChannel::title() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_channels_createChannel.title)
  return title_.GetNoArena();
}
inline void TL_channels_createChannel::set_title(const ::std::string& value) {
  
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtproto.TL_channels_createChannel.title)
}
#if LANG_CXX11
inline void TL_channels_createChannel::set_title(::std::string&& value) {
  
  title_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mtproto.TL_channels_createChannel.title)
}
#endif
inline void TL_channels_createChannel::set_title(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtproto.TL_channels_createChannel.title)
}
inline void TL_channels_createChannel::set_title(const char* value, size_t size) {
  
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtproto.TL_channels_createChannel.title)
}
inline ::std::string* TL_channels_createChannel::mutable_title() {
  
  // @@protoc_insertion_point(field_mutable:mtproto.TL_channels_createChannel.title)
  return title_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TL_channels_createChannel::release_title() {
  // @@protoc_insertion_point(field_release:mtproto.TL_channels_createChannel.title)
  
  return title_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TL_channels_createChannel::set_allocated_title(::std::string* title) {
  if (title != NULL) {
    
  } else {
    
  }
  title_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), title);
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_channels_createChannel.title)
}

// string about = 5;
inline void TL_channels_createChannel::clear_about() {
  about_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& TL_channels_createChannel::about() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_channels_createChannel.about)
  return about_.GetNoArena();
}
inline void TL_channels_createChannel::set_about(const ::std::string& value) {
  
  about_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtproto.TL_channels_createChannel.about)
}
#if LANG_CXX11
inline void TL_channels_createChannel::set_about(::std::string&& value) {
  
  about_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mtproto.TL_channels_createChannel.about)
}
#endif
inline void TL_channels_createChannel::set_about(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  about_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtproto.TL_channels_createChannel.about)
}
inline void TL_channels_createChannel::set_about(const char* value, size_t size) {
  
  about_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtproto.TL_channels_createChannel.about)
}
inline ::std::string* TL_channels_createChannel::mutable_about() {
  
  // @@protoc_insertion_point(field_mutable:mtproto.TL_channels_createChannel.about)
  return about_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TL_channels_createChannel::release_about() {
  // @@protoc_insertion_point(field_release:mtproto.TL_channels_createChannel.about)
  
  return about_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TL_channels_createChannel::set_allocated_about(::std::string* about) {
  if (about != NULL) {
    
  } else {
    
  }
  about_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), about);
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_channels_createChannel.about)
}

// -------------------------------------------------------------------

// TL_channels_editAbout

// .mtproto.InputChannel channel = 1;
inline bool TL_channels_editAbout::has_channel() const {
  return this != internal_default_instance() && channel_ != NULL;
}
inline void TL_channels_editAbout::clear_channel() {
  if (GetArenaNoVirtual() == NULL && channel_ != NULL) delete channel_;
  channel_ = NULL;
}
inline const ::mtproto::InputChannel& TL_channels_editAbout::channel() const {
  const ::mtproto::InputChannel* p = channel_;
  // @@protoc_insertion_point(field_get:mtproto.TL_channels_editAbout.channel)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::InputChannel*>(
      &::mtproto::_InputChannel_default_instance_);
}
inline ::mtproto::InputChannel* TL_channels_editAbout::mutable_channel() {
  
  if (channel_ == NULL) {
    channel_ = new ::mtproto::InputChannel;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_channels_editAbout.channel)
  return channel_;
}
inline ::mtproto::InputChannel* TL_channels_editAbout::release_channel() {
  // @@protoc_insertion_point(field_release:mtproto.TL_channels_editAbout.channel)
  
  ::mtproto::InputChannel* temp = channel_;
  channel_ = NULL;
  return temp;
}
inline void TL_channels_editAbout::set_allocated_channel(::mtproto::InputChannel* channel) {
  delete channel_;
  channel_ = channel;
  if (channel) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_channels_editAbout.channel)
}

// string about = 2;
inline void TL_channels_editAbout::clear_about() {
  about_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& TL_channels_editAbout::about() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_channels_editAbout.about)
  return about_.GetNoArena();
}
inline void TL_channels_editAbout::set_about(const ::std::string& value) {
  
  about_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtproto.TL_channels_editAbout.about)
}
#if LANG_CXX11
inline void TL_channels_editAbout::set_about(::std::string&& value) {
  
  about_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mtproto.TL_channels_editAbout.about)
}
#endif
inline void TL_channels_editAbout::set_about(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  about_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtproto.TL_channels_editAbout.about)
}
inline void TL_channels_editAbout::set_about(const char* value, size_t size) {
  
  about_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtproto.TL_channels_editAbout.about)
}
inline ::std::string* TL_channels_editAbout::mutable_about() {
  
  // @@protoc_insertion_point(field_mutable:mtproto.TL_channels_editAbout.about)
  return about_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TL_channels_editAbout::release_about() {
  // @@protoc_insertion_point(field_release:mtproto.TL_channels_editAbout.about)
  
  return about_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TL_channels_editAbout::set_allocated_about(::std::string* about) {
  if (about != NULL) {
    
  } else {
    
  }
  about_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), about);
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_channels_editAbout.about)
}

// -------------------------------------------------------------------

// TL_channels_editAdmin

// .mtproto.InputChannel channel = 1;
inline bool TL_channels_editAdmin::has_channel() const {
  return this != internal_default_instance() && channel_ != NULL;
}
inline void TL_channels_editAdmin::clear_channel() {
  if (GetArenaNoVirtual() == NULL && channel_ != NULL) delete channel_;
  channel_ = NULL;
}
inline const ::mtproto::InputChannel& TL_channels_editAdmin::channel() const {
  const ::mtproto::InputChannel* p = channel_;
  // @@protoc_insertion_point(field_get:mtproto.TL_channels_editAdmin.channel)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::InputChannel*>(
      &::mtproto::_InputChannel_default_instance_);
}
inline ::mtproto::InputChannel* TL_channels_editAdmin::mutable_channel() {
  
  if (channel_ == NULL) {
    channel_ = new ::mtproto::InputChannel;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_channels_editAdmin.channel)
  return channel_;
}
inline ::mtproto::InputChannel* TL_channels_editAdmin::release_channel() {
  // @@protoc_insertion_point(field_release:mtproto.TL_channels_editAdmin.channel)
  
  ::mtproto::InputChannel* temp = channel_;
  channel_ = NULL;
  return temp;
}
inline void TL_channels_editAdmin::set_allocated_channel(::mtproto::InputChannel* channel) {
  delete channel_;
  channel_ = channel;
  if (channel) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_channels_editAdmin.channel)
}

// .mtproto.InputUser user_id = 2;
inline bool TL_channels_editAdmin::has_user_id() const {
  return this != internal_default_instance() && user_id_ != NULL;
}
inline void TL_channels_editAdmin::clear_user_id() {
  if (GetArenaNoVirtual() == NULL && user_id_ != NULL) delete user_id_;
  user_id_ = NULL;
}
inline const ::mtproto::InputUser& TL_channels_editAdmin::user_id() const {
  const ::mtproto::InputUser* p = user_id_;
  // @@protoc_insertion_point(field_get:mtproto.TL_channels_editAdmin.user_id)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::InputUser*>(
      &::mtproto::_InputUser_default_instance_);
}
inline ::mtproto::InputUser* TL_channels_editAdmin::mutable_user_id() {
  
  if (user_id_ == NULL) {
    user_id_ = new ::mtproto::InputUser;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_channels_editAdmin.user_id)
  return user_id_;
}
inline ::mtproto::InputUser* TL_channels_editAdmin::release_user_id() {
  // @@protoc_insertion_point(field_release:mtproto.TL_channels_editAdmin.user_id)
  
  ::mtproto::InputUser* temp = user_id_;
  user_id_ = NULL;
  return temp;
}
inline void TL_channels_editAdmin::set_allocated_user_id(::mtproto::InputUser* user_id) {
  delete user_id_;
  user_id_ = user_id;
  if (user_id) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_channels_editAdmin.user_id)
}

// .mtproto.ChannelAdminRights admin_rights = 3;
inline bool TL_channels_editAdmin::has_admin_rights() const {
  return this != internal_default_instance() && admin_rights_ != NULL;
}
inline void TL_channels_editAdmin::clear_admin_rights() {
  if (GetArenaNoVirtual() == NULL && admin_rights_ != NULL) delete admin_rights_;
  admin_rights_ = NULL;
}
inline const ::mtproto::ChannelAdminRights& TL_channels_editAdmin::admin_rights() const {
  const ::mtproto::ChannelAdminRights* p = admin_rights_;
  // @@protoc_insertion_point(field_get:mtproto.TL_channels_editAdmin.admin_rights)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::ChannelAdminRights*>(
      &::mtproto::_ChannelAdminRights_default_instance_);
}
inline ::mtproto::ChannelAdminRights* TL_channels_editAdmin::mutable_admin_rights() {
  
  if (admin_rights_ == NULL) {
    admin_rights_ = new ::mtproto::ChannelAdminRights;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_channels_editAdmin.admin_rights)
  return admin_rights_;
}
inline ::mtproto::ChannelAdminRights* TL_channels_editAdmin::release_admin_rights() {
  // @@protoc_insertion_point(field_release:mtproto.TL_channels_editAdmin.admin_rights)
  
  ::mtproto::ChannelAdminRights* temp = admin_rights_;
  admin_rights_ = NULL;
  return temp;
}
inline void TL_channels_editAdmin::set_allocated_admin_rights(::mtproto::ChannelAdminRights* admin_rights) {
  delete admin_rights_;
  admin_rights_ = admin_rights;
  if (admin_rights) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_channels_editAdmin.admin_rights)
}

// -------------------------------------------------------------------

// TL_channels_editTitle

// .mtproto.InputChannel channel = 1;
inline bool TL_channels_editTitle::has_channel() const {
  return this != internal_default_instance() && channel_ != NULL;
}
inline void TL_channels_editTitle::clear_channel() {
  if (GetArenaNoVirtual() == NULL && channel_ != NULL) delete channel_;
  channel_ = NULL;
}
inline const ::mtproto::InputChannel& TL_channels_editTitle::channel() const {
  const ::mtproto::InputChannel* p = channel_;
  // @@protoc_insertion_point(field_get:mtproto.TL_channels_editTitle.channel)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::InputChannel*>(
      &::mtproto::_InputChannel_default_instance_);
}
inline ::mtproto::InputChannel* TL_channels_editTitle::mutable_channel() {
  
  if (channel_ == NULL) {
    channel_ = new ::mtproto::InputChannel;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_channels_editTitle.channel)
  return channel_;
}
inline ::mtproto::InputChannel* TL_channels_editTitle::release_channel() {
  // @@protoc_insertion_point(field_release:mtproto.TL_channels_editTitle.channel)
  
  ::mtproto::InputChannel* temp = channel_;
  channel_ = NULL;
  return temp;
}
inline void TL_channels_editTitle::set_allocated_channel(::mtproto::InputChannel* channel) {
  delete channel_;
  channel_ = channel;
  if (channel) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_channels_editTitle.channel)
}

// string title = 2;
inline void TL_channels_editTitle::clear_title() {
  title_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& TL_channels_editTitle::title() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_channels_editTitle.title)
  return title_.GetNoArena();
}
inline void TL_channels_editTitle::set_title(const ::std::string& value) {
  
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtproto.TL_channels_editTitle.title)
}
#if LANG_CXX11
inline void TL_channels_editTitle::set_title(::std::string&& value) {
  
  title_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mtproto.TL_channels_editTitle.title)
}
#endif
inline void TL_channels_editTitle::set_title(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtproto.TL_channels_editTitle.title)
}
inline void TL_channels_editTitle::set_title(const char* value, size_t size) {
  
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtproto.TL_channels_editTitle.title)
}
inline ::std::string* TL_channels_editTitle::mutable_title() {
  
  // @@protoc_insertion_point(field_mutable:mtproto.TL_channels_editTitle.title)
  return title_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TL_channels_editTitle::release_title() {
  // @@protoc_insertion_point(field_release:mtproto.TL_channels_editTitle.title)
  
  return title_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TL_channels_editTitle::set_allocated_title(::std::string* title) {
  if (title != NULL) {
    
  } else {
    
  }
  title_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), title);
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_channels_editTitle.title)
}

// -------------------------------------------------------------------

// TL_channels_editPhoto

// .mtproto.InputChannel channel = 1;
inline bool TL_channels_editPhoto::has_channel() const {
  return this != internal_default_instance() && channel_ != NULL;
}
inline void TL_channels_editPhoto::clear_channel() {
  if (GetArenaNoVirtual() == NULL && channel_ != NULL) delete channel_;
  channel_ = NULL;
}
inline const ::mtproto::InputChannel& TL_channels_editPhoto::channel() const {
  const ::mtproto::InputChannel* p = channel_;
  // @@protoc_insertion_point(field_get:mtproto.TL_channels_editPhoto.channel)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::InputChannel*>(
      &::mtproto::_InputChannel_default_instance_);
}
inline ::mtproto::InputChannel* TL_channels_editPhoto::mutable_channel() {
  
  if (channel_ == NULL) {
    channel_ = new ::mtproto::InputChannel;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_channels_editPhoto.channel)
  return channel_;
}
inline ::mtproto::InputChannel* TL_channels_editPhoto::release_channel() {
  // @@protoc_insertion_point(field_release:mtproto.TL_channels_editPhoto.channel)
  
  ::mtproto::InputChannel* temp = channel_;
  channel_ = NULL;
  return temp;
}
inline void TL_channels_editPhoto::set_allocated_channel(::mtproto::InputChannel* channel) {
  delete channel_;
  channel_ = channel;
  if (channel) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_channels_editPhoto.channel)
}

// .mtproto.InputChatPhoto photo = 2;
inline bool TL_channels_editPhoto::has_photo() const {
  return this != internal_default_instance() && photo_ != NULL;
}
inline void TL_channels_editPhoto::clear_photo() {
  if (GetArenaNoVirtual() == NULL && photo_ != NULL) delete photo_;
  photo_ = NULL;
}
inline const ::mtproto::InputChatPhoto& TL_channels_editPhoto::photo() const {
  const ::mtproto::InputChatPhoto* p = photo_;
  // @@protoc_insertion_point(field_get:mtproto.TL_channels_editPhoto.photo)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::InputChatPhoto*>(
      &::mtproto::_InputChatPhoto_default_instance_);
}
inline ::mtproto::InputChatPhoto* TL_channels_editPhoto::mutable_photo() {
  
  if (photo_ == NULL) {
    photo_ = new ::mtproto::InputChatPhoto;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_channels_editPhoto.photo)
  return photo_;
}
inline ::mtproto::InputChatPhoto* TL_channels_editPhoto::release_photo() {
  // @@protoc_insertion_point(field_release:mtproto.TL_channels_editPhoto.photo)
  
  ::mtproto::InputChatPhoto* temp = photo_;
  photo_ = NULL;
  return temp;
}
inline void TL_channels_editPhoto::set_allocated_photo(::mtproto::InputChatPhoto* photo) {
  delete photo_;
  photo_ = photo;
  if (photo) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_channels_editPhoto.photo)
}

// -------------------------------------------------------------------

// TL_channels_checkUsername

// .mtproto.InputChannel channel = 1;
inline bool TL_channels_checkUsername::has_channel() const {
  return this != internal_default_instance() && channel_ != NULL;
}
inline void TL_channels_checkUsername::clear_channel() {
  if (GetArenaNoVirtual() == NULL && channel_ != NULL) delete channel_;
  channel_ = NULL;
}
inline const ::mtproto::InputChannel& TL_channels_checkUsername::channel() const {
  const ::mtproto::InputChannel* p = channel_;
  // @@protoc_insertion_point(field_get:mtproto.TL_channels_checkUsername.channel)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::InputChannel*>(
      &::mtproto::_InputChannel_default_instance_);
}
inline ::mtproto::InputChannel* TL_channels_checkUsername::mutable_channel() {
  
  if (channel_ == NULL) {
    channel_ = new ::mtproto::InputChannel;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_channels_checkUsername.channel)
  return channel_;
}
inline ::mtproto::InputChannel* TL_channels_checkUsername::release_channel() {
  // @@protoc_insertion_point(field_release:mtproto.TL_channels_checkUsername.channel)
  
  ::mtproto::InputChannel* temp = channel_;
  channel_ = NULL;
  return temp;
}
inline void TL_channels_checkUsername::set_allocated_channel(::mtproto::InputChannel* channel) {
  delete channel_;
  channel_ = channel;
  if (channel) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_channels_checkUsername.channel)
}

// string username = 2;
inline void TL_channels_checkUsername::clear_username() {
  username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& TL_channels_checkUsername::username() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_channels_checkUsername.username)
  return username_.GetNoArena();
}
inline void TL_channels_checkUsername::set_username(const ::std::string& value) {
  
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtproto.TL_channels_checkUsername.username)
}
#if LANG_CXX11
inline void TL_channels_checkUsername::set_username(::std::string&& value) {
  
  username_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mtproto.TL_channels_checkUsername.username)
}
#endif
inline void TL_channels_checkUsername::set_username(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtproto.TL_channels_checkUsername.username)
}
inline void TL_channels_checkUsername::set_username(const char* value, size_t size) {
  
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtproto.TL_channels_checkUsername.username)
}
inline ::std::string* TL_channels_checkUsername::mutable_username() {
  
  // @@protoc_insertion_point(field_mutable:mtproto.TL_channels_checkUsername.username)
  return username_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TL_channels_checkUsername::release_username() {
  // @@protoc_insertion_point(field_release:mtproto.TL_channels_checkUsername.username)
  
  return username_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TL_channels_checkUsername::set_allocated_username(::std::string* username) {
  if (username != NULL) {
    
  } else {
    
  }
  username_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), username);
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_channels_checkUsername.username)
}

// -------------------------------------------------------------------

// TL_channels_updateUsername

// .mtproto.InputChannel channel = 1;
inline bool TL_channels_updateUsername::has_channel() const {
  return this != internal_default_instance() && channel_ != NULL;
}
inline void TL_channels_updateUsername::clear_channel() {
  if (GetArenaNoVirtual() == NULL && channel_ != NULL) delete channel_;
  channel_ = NULL;
}
inline const ::mtproto::InputChannel& TL_channels_updateUsername::channel() const {
  const ::mtproto::InputChannel* p = channel_;
  // @@protoc_insertion_point(field_get:mtproto.TL_channels_updateUsername.channel)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::InputChannel*>(
      &::mtproto::_InputChannel_default_instance_);
}
inline ::mtproto::InputChannel* TL_channels_updateUsername::mutable_channel() {
  
  if (channel_ == NULL) {
    channel_ = new ::mtproto::InputChannel;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_channels_updateUsername.channel)
  return channel_;
}
inline ::mtproto::InputChannel* TL_channels_updateUsername::release_channel() {
  // @@protoc_insertion_point(field_release:mtproto.TL_channels_updateUsername.channel)
  
  ::mtproto::InputChannel* temp = channel_;
  channel_ = NULL;
  return temp;
}
inline void TL_channels_updateUsername::set_allocated_channel(::mtproto::InputChannel* channel) {
  delete channel_;
  channel_ = channel;
  if (channel) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_channels_updateUsername.channel)
}

// string username = 2;
inline void TL_channels_updateUsername::clear_username() {
  username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& TL_channels_updateUsername::username() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_channels_updateUsername.username)
  return username_.GetNoArena();
}
inline void TL_channels_updateUsername::set_username(const ::std::string& value) {
  
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtproto.TL_channels_updateUsername.username)
}
#if LANG_CXX11
inline void TL_channels_updateUsername::set_username(::std::string&& value) {
  
  username_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mtproto.TL_channels_updateUsername.username)
}
#endif
inline void TL_channels_updateUsername::set_username(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtproto.TL_channels_updateUsername.username)
}
inline void TL_channels_updateUsername::set_username(const char* value, size_t size) {
  
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtproto.TL_channels_updateUsername.username)
}
inline ::std::string* TL_channels_updateUsername::mutable_username() {
  
  // @@protoc_insertion_point(field_mutable:mtproto.TL_channels_updateUsername.username)
  return username_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TL_channels_updateUsername::release_username() {
  // @@protoc_insertion_point(field_release:mtproto.TL_channels_updateUsername.username)
  
  return username_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TL_channels_updateUsername::set_allocated_username(::std::string* username) {
  if (username != NULL) {
    
  } else {
    
  }
  username_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), username);
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_channels_updateUsername.username)
}

// -------------------------------------------------------------------

// TL_channels_joinChannel

// .mtproto.InputChannel channel = 1;
inline bool TL_channels_joinChannel::has_channel() const {
  return this != internal_default_instance() && channel_ != NULL;
}
inline void TL_channels_joinChannel::clear_channel() {
  if (GetArenaNoVirtual() == NULL && channel_ != NULL) delete channel_;
  channel_ = NULL;
}
inline const ::mtproto::InputChannel& TL_channels_joinChannel::channel() const {
  const ::mtproto::InputChannel* p = channel_;
  // @@protoc_insertion_point(field_get:mtproto.TL_channels_joinChannel.channel)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::InputChannel*>(
      &::mtproto::_InputChannel_default_instance_);
}
inline ::mtproto::InputChannel* TL_channels_joinChannel::mutable_channel() {
  
  if (channel_ == NULL) {
    channel_ = new ::mtproto::InputChannel;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_channels_joinChannel.channel)
  return channel_;
}
inline ::mtproto::InputChannel* TL_channels_joinChannel::release_channel() {
  // @@protoc_insertion_point(field_release:mtproto.TL_channels_joinChannel.channel)
  
  ::mtproto::InputChannel* temp = channel_;
  channel_ = NULL;
  return temp;
}
inline void TL_channels_joinChannel::set_allocated_channel(::mtproto::InputChannel* channel) {
  delete channel_;
  channel_ = channel;
  if (channel) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_channels_joinChannel.channel)
}

// -------------------------------------------------------------------

// TL_channels_leaveChannel

// .mtproto.InputChannel channel = 1;
inline bool TL_channels_leaveChannel::has_channel() const {
  return this != internal_default_instance() && channel_ != NULL;
}
inline void TL_channels_leaveChannel::clear_channel() {
  if (GetArenaNoVirtual() == NULL && channel_ != NULL) delete channel_;
  channel_ = NULL;
}
inline const ::mtproto::InputChannel& TL_channels_leaveChannel::channel() const {
  const ::mtproto::InputChannel* p = channel_;
  // @@protoc_insertion_point(field_get:mtproto.TL_channels_leaveChannel.channel)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::InputChannel*>(
      &::mtproto::_InputChannel_default_instance_);
}
inline ::mtproto::InputChannel* TL_channels_leaveChannel::mutable_channel() {
  
  if (channel_ == NULL) {
    channel_ = new ::mtproto::InputChannel;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_channels_leaveChannel.channel)
  return channel_;
}
inline ::mtproto::InputChannel* TL_channels_leaveChannel::release_channel() {
  // @@protoc_insertion_point(field_release:mtproto.TL_channels_leaveChannel.channel)
  
  ::mtproto::InputChannel* temp = channel_;
  channel_ = NULL;
  return temp;
}
inline void TL_channels_leaveChannel::set_allocated_channel(::mtproto::InputChannel* channel) {
  delete channel_;
  channel_ = channel;
  if (channel) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_channels_leaveChannel.channel)
}

// -------------------------------------------------------------------

// TL_channels_inviteToChannel

// .mtproto.InputChannel channel = 1;
inline bool TL_channels_inviteToChannel::has_channel() const {
  return this != internal_default_instance() && channel_ != NULL;
}
inline void TL_channels_inviteToChannel::clear_channel() {
  if (GetArenaNoVirtual() == NULL && channel_ != NULL) delete channel_;
  channel_ = NULL;
}
inline const ::mtproto::InputChannel& TL_channels_inviteToChannel::channel() const {
  const ::mtproto::InputChannel* p = channel_;
  // @@protoc_insertion_point(field_get:mtproto.TL_channels_inviteToChannel.channel)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::InputChannel*>(
      &::mtproto::_InputChannel_default_instance_);
}
inline ::mtproto::InputChannel* TL_channels_inviteToChannel::mutable_channel() {
  
  if (channel_ == NULL) {
    channel_ = new ::mtproto::InputChannel;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_channels_inviteToChannel.channel)
  return channel_;
}
inline ::mtproto::InputChannel* TL_channels_inviteToChannel::release_channel() {
  // @@protoc_insertion_point(field_release:mtproto.TL_channels_inviteToChannel.channel)
  
  ::mtproto::InputChannel* temp = channel_;
  channel_ = NULL;
  return temp;
}
inline void TL_channels_inviteToChannel::set_allocated_channel(::mtproto::InputChannel* channel) {
  delete channel_;
  channel_ = channel;
  if (channel) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_channels_inviteToChannel.channel)
}

// repeated .mtproto.InputUser users = 2;
inline int TL_channels_inviteToChannel::users_size() const {
  return users_.size();
}
inline void TL_channels_inviteToChannel::clear_users() {
  users_.Clear();
}
inline const ::mtproto::InputUser& TL_channels_inviteToChannel::users(int index) const {
  // @@protoc_insertion_point(field_get:mtproto.TL_channels_inviteToChannel.users)
  return users_.Get(index);
}
inline ::mtproto::InputUser* TL_channels_inviteToChannel::mutable_users(int index) {
  // @@protoc_insertion_point(field_mutable:mtproto.TL_channels_inviteToChannel.users)
  return users_.Mutable(index);
}
inline ::mtproto::InputUser* TL_channels_inviteToChannel::add_users() {
  // @@protoc_insertion_point(field_add:mtproto.TL_channels_inviteToChannel.users)
  return users_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::mtproto::InputUser >*
TL_channels_inviteToChannel::mutable_users() {
  // @@protoc_insertion_point(field_mutable_list:mtproto.TL_channels_inviteToChannel.users)
  return &users_;
}
inline const ::google::protobuf::RepeatedPtrField< ::mtproto::InputUser >&
TL_channels_inviteToChannel::users() const {
  // @@protoc_insertion_point(field_list:mtproto.TL_channels_inviteToChannel.users)
  return users_;
}

// -------------------------------------------------------------------

// TL_channels_exportInvite

// .mtproto.InputChannel channel = 1;
inline bool TL_channels_exportInvite::has_channel() const {
  return this != internal_default_instance() && channel_ != NULL;
}
inline void TL_channels_exportInvite::clear_channel() {
  if (GetArenaNoVirtual() == NULL && channel_ != NULL) delete channel_;
  channel_ = NULL;
}
inline const ::mtproto::InputChannel& TL_channels_exportInvite::channel() const {
  const ::mtproto::InputChannel* p = channel_;
  // @@protoc_insertion_point(field_get:mtproto.TL_channels_exportInvite.channel)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::InputChannel*>(
      &::mtproto::_InputChannel_default_instance_);
}
inline ::mtproto::InputChannel* TL_channels_exportInvite::mutable_channel() {
  
  if (channel_ == NULL) {
    channel_ = new ::mtproto::InputChannel;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_channels_exportInvite.channel)
  return channel_;
}
inline ::mtproto::InputChannel* TL_channels_exportInvite::release_channel() {
  // @@protoc_insertion_point(field_release:mtproto.TL_channels_exportInvite.channel)
  
  ::mtproto::InputChannel* temp = channel_;
  channel_ = NULL;
  return temp;
}
inline void TL_channels_exportInvite::set_allocated_channel(::mtproto::InputChannel* channel) {
  delete channel_;
  channel_ = channel;
  if (channel) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_channels_exportInvite.channel)
}

// -------------------------------------------------------------------

// TL_channels_deleteChannel

// .mtproto.InputChannel channel = 1;
inline bool TL_channels_deleteChannel::has_channel() const {
  return this != internal_default_instance() && channel_ != NULL;
}
inline void TL_channels_deleteChannel::clear_channel() {
  if (GetArenaNoVirtual() == NULL && channel_ != NULL) delete channel_;
  channel_ = NULL;
}
inline const ::mtproto::InputChannel& TL_channels_deleteChannel::channel() const {
  const ::mtproto::InputChannel* p = channel_;
  // @@protoc_insertion_point(field_get:mtproto.TL_channels_deleteChannel.channel)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::InputChannel*>(
      &::mtproto::_InputChannel_default_instance_);
}
inline ::mtproto::InputChannel* TL_channels_deleteChannel::mutable_channel() {
  
  if (channel_ == NULL) {
    channel_ = new ::mtproto::InputChannel;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_channels_deleteChannel.channel)
  return channel_;
}
inline ::mtproto::InputChannel* TL_channels_deleteChannel::release_channel() {
  // @@protoc_insertion_point(field_release:mtproto.TL_channels_deleteChannel.channel)
  
  ::mtproto::InputChannel* temp = channel_;
  channel_ = NULL;
  return temp;
}
inline void TL_channels_deleteChannel::set_allocated_channel(::mtproto::InputChannel* channel) {
  delete channel_;
  channel_ = channel;
  if (channel) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_channels_deleteChannel.channel)
}

// -------------------------------------------------------------------

// TL_channels_toggleInvites

// .mtproto.InputChannel channel = 1;
inline bool TL_channels_toggleInvites::has_channel() const {
  return this != internal_default_instance() && channel_ != NULL;
}
inline void TL_channels_toggleInvites::clear_channel() {
  if (GetArenaNoVirtual() == NULL && channel_ != NULL) delete channel_;
  channel_ = NULL;
}
inline const ::mtproto::InputChannel& TL_channels_toggleInvites::channel() const {
  const ::mtproto::InputChannel* p = channel_;
  // @@protoc_insertion_point(field_get:mtproto.TL_channels_toggleInvites.channel)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::InputChannel*>(
      &::mtproto::_InputChannel_default_instance_);
}
inline ::mtproto::InputChannel* TL_channels_toggleInvites::mutable_channel() {
  
  if (channel_ == NULL) {
    channel_ = new ::mtproto::InputChannel;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_channels_toggleInvites.channel)
  return channel_;
}
inline ::mtproto::InputChannel* TL_channels_toggleInvites::release_channel() {
  // @@protoc_insertion_point(field_release:mtproto.TL_channels_toggleInvites.channel)
  
  ::mtproto::InputChannel* temp = channel_;
  channel_ = NULL;
  return temp;
}
inline void TL_channels_toggleInvites::set_allocated_channel(::mtproto::InputChannel* channel) {
  delete channel_;
  channel_ = channel;
  if (channel) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_channels_toggleInvites.channel)
}

// .mtproto.Bool enabled = 2;
inline bool TL_channels_toggleInvites::has_enabled() const {
  return this != internal_default_instance() && enabled_ != NULL;
}
inline void TL_channels_toggleInvites::clear_enabled() {
  if (GetArenaNoVirtual() == NULL && enabled_ != NULL) delete enabled_;
  enabled_ = NULL;
}
inline const ::mtproto::Bool& TL_channels_toggleInvites::enabled() const {
  const ::mtproto::Bool* p = enabled_;
  // @@protoc_insertion_point(field_get:mtproto.TL_channels_toggleInvites.enabled)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::Bool*>(
      &::mtproto::_Bool_default_instance_);
}
inline ::mtproto::Bool* TL_channels_toggleInvites::mutable_enabled() {
  
  if (enabled_ == NULL) {
    enabled_ = new ::mtproto::Bool;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_channels_toggleInvites.enabled)
  return enabled_;
}
inline ::mtproto::Bool* TL_channels_toggleInvites::release_enabled() {
  // @@protoc_insertion_point(field_release:mtproto.TL_channels_toggleInvites.enabled)
  
  ::mtproto::Bool* temp = enabled_;
  enabled_ = NULL;
  return temp;
}
inline void TL_channels_toggleInvites::set_allocated_enabled(::mtproto::Bool* enabled) {
  delete enabled_;
  enabled_ = enabled;
  if (enabled) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_channels_toggleInvites.enabled)
}

// -------------------------------------------------------------------

// TL_channels_exportMessageLink

// .mtproto.InputChannel channel = 1;
inline bool TL_channels_exportMessageLink::has_channel() const {
  return this != internal_default_instance() && channel_ != NULL;
}
inline void TL_channels_exportMessageLink::clear_channel() {
  if (GetArenaNoVirtual() == NULL && channel_ != NULL) delete channel_;
  channel_ = NULL;
}
inline const ::mtproto::InputChannel& TL_channels_exportMessageLink::channel() const {
  const ::mtproto::InputChannel* p = channel_;
  // @@protoc_insertion_point(field_get:mtproto.TL_channels_exportMessageLink.channel)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::InputChannel*>(
      &::mtproto::_InputChannel_default_instance_);
}
inline ::mtproto::InputChannel* TL_channels_exportMessageLink::mutable_channel() {
  
  if (channel_ == NULL) {
    channel_ = new ::mtproto::InputChannel;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_channels_exportMessageLink.channel)
  return channel_;
}
inline ::mtproto::InputChannel* TL_channels_exportMessageLink::release_channel() {
  // @@protoc_insertion_point(field_release:mtproto.TL_channels_exportMessageLink.channel)
  
  ::mtproto::InputChannel* temp = channel_;
  channel_ = NULL;
  return temp;
}
inline void TL_channels_exportMessageLink::set_allocated_channel(::mtproto::InputChannel* channel) {
  delete channel_;
  channel_ = channel;
  if (channel) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_channels_exportMessageLink.channel)
}

// int32 id = 2;
inline void TL_channels_exportMessageLink::clear_id() {
  id_ = 0;
}
inline ::google::protobuf::int32 TL_channels_exportMessageLink::id() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_channels_exportMessageLink.id)
  return id_;
}
inline void TL_channels_exportMessageLink::set_id(::google::protobuf::int32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_channels_exportMessageLink.id)
}

// .mtproto.Bool grouped = 3;
inline bool TL_channels_exportMessageLink::has_grouped() const {
  return this != internal_default_instance() && grouped_ != NULL;
}
inline void TL_channels_exportMessageLink::clear_grouped() {
  if (GetArenaNoVirtual() == NULL && grouped_ != NULL) delete grouped_;
  grouped_ = NULL;
}
inline const ::mtproto::Bool& TL_channels_exportMessageLink::grouped() const {
  const ::mtproto::Bool* p = grouped_;
  // @@protoc_insertion_point(field_get:mtproto.TL_channels_exportMessageLink.grouped)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::Bool*>(
      &::mtproto::_Bool_default_instance_);
}
inline ::mtproto::Bool* TL_channels_exportMessageLink::mutable_grouped() {
  
  if (grouped_ == NULL) {
    grouped_ = new ::mtproto::Bool;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_channels_exportMessageLink.grouped)
  return grouped_;
}
inline ::mtproto::Bool* TL_channels_exportMessageLink::release_grouped() {
  // @@protoc_insertion_point(field_release:mtproto.TL_channels_exportMessageLink.grouped)
  
  ::mtproto::Bool* temp = grouped_;
  grouped_ = NULL;
  return temp;
}
inline void TL_channels_exportMessageLink::set_allocated_grouped(::mtproto::Bool* grouped) {
  delete grouped_;
  grouped_ = grouped;
  if (grouped) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_channels_exportMessageLink.grouped)
}

// -------------------------------------------------------------------

// TL_channels_toggleSignatures

// .mtproto.InputChannel channel = 1;
inline bool TL_channels_toggleSignatures::has_channel() const {
  return this != internal_default_instance() && channel_ != NULL;
}
inline void TL_channels_toggleSignatures::clear_channel() {
  if (GetArenaNoVirtual() == NULL && channel_ != NULL) delete channel_;
  channel_ = NULL;
}
inline const ::mtproto::InputChannel& TL_channels_toggleSignatures::channel() const {
  const ::mtproto::InputChannel* p = channel_;
  // @@protoc_insertion_point(field_get:mtproto.TL_channels_toggleSignatures.channel)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::InputChannel*>(
      &::mtproto::_InputChannel_default_instance_);
}
inline ::mtproto::InputChannel* TL_channels_toggleSignatures::mutable_channel() {
  
  if (channel_ == NULL) {
    channel_ = new ::mtproto::InputChannel;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_channels_toggleSignatures.channel)
  return channel_;
}
inline ::mtproto::InputChannel* TL_channels_toggleSignatures::release_channel() {
  // @@protoc_insertion_point(field_release:mtproto.TL_channels_toggleSignatures.channel)
  
  ::mtproto::InputChannel* temp = channel_;
  channel_ = NULL;
  return temp;
}
inline void TL_channels_toggleSignatures::set_allocated_channel(::mtproto::InputChannel* channel) {
  delete channel_;
  channel_ = channel;
  if (channel) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_channels_toggleSignatures.channel)
}

// .mtproto.Bool enabled = 2;
inline bool TL_channels_toggleSignatures::has_enabled() const {
  return this != internal_default_instance() && enabled_ != NULL;
}
inline void TL_channels_toggleSignatures::clear_enabled() {
  if (GetArenaNoVirtual() == NULL && enabled_ != NULL) delete enabled_;
  enabled_ = NULL;
}
inline const ::mtproto::Bool& TL_channels_toggleSignatures::enabled() const {
  const ::mtproto::Bool* p = enabled_;
  // @@protoc_insertion_point(field_get:mtproto.TL_channels_toggleSignatures.enabled)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::Bool*>(
      &::mtproto::_Bool_default_instance_);
}
inline ::mtproto::Bool* TL_channels_toggleSignatures::mutable_enabled() {
  
  if (enabled_ == NULL) {
    enabled_ = new ::mtproto::Bool;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_channels_toggleSignatures.enabled)
  return enabled_;
}
inline ::mtproto::Bool* TL_channels_toggleSignatures::release_enabled() {
  // @@protoc_insertion_point(field_release:mtproto.TL_channels_toggleSignatures.enabled)
  
  ::mtproto::Bool* temp = enabled_;
  enabled_ = NULL;
  return temp;
}
inline void TL_channels_toggleSignatures::set_allocated_enabled(::mtproto::Bool* enabled) {
  delete enabled_;
  enabled_ = enabled;
  if (enabled) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_channels_toggleSignatures.enabled)
}

// -------------------------------------------------------------------

// TL_channels_updatePinnedMessage

// bool silent = 2;
inline void TL_channels_updatePinnedMessage::clear_silent() {
  silent_ = false;
}
inline bool TL_channels_updatePinnedMessage::silent() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_channels_updatePinnedMessage.silent)
  return silent_;
}
inline void TL_channels_updatePinnedMessage::set_silent(bool value) {
  
  silent_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_channels_updatePinnedMessage.silent)
}

// .mtproto.InputChannel channel = 3;
inline bool TL_channels_updatePinnedMessage::has_channel() const {
  return this != internal_default_instance() && channel_ != NULL;
}
inline void TL_channels_updatePinnedMessage::clear_channel() {
  if (GetArenaNoVirtual() == NULL && channel_ != NULL) delete channel_;
  channel_ = NULL;
}
inline const ::mtproto::InputChannel& TL_channels_updatePinnedMessage::channel() const {
  const ::mtproto::InputChannel* p = channel_;
  // @@protoc_insertion_point(field_get:mtproto.TL_channels_updatePinnedMessage.channel)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::InputChannel*>(
      &::mtproto::_InputChannel_default_instance_);
}
inline ::mtproto::InputChannel* TL_channels_updatePinnedMessage::mutable_channel() {
  
  if (channel_ == NULL) {
    channel_ = new ::mtproto::InputChannel;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_channels_updatePinnedMessage.channel)
  return channel_;
}
inline ::mtproto::InputChannel* TL_channels_updatePinnedMessage::release_channel() {
  // @@protoc_insertion_point(field_release:mtproto.TL_channels_updatePinnedMessage.channel)
  
  ::mtproto::InputChannel* temp = channel_;
  channel_ = NULL;
  return temp;
}
inline void TL_channels_updatePinnedMessage::set_allocated_channel(::mtproto::InputChannel* channel) {
  delete channel_;
  channel_ = channel;
  if (channel) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_channels_updatePinnedMessage.channel)
}

// int32 id = 4;
inline void TL_channels_updatePinnedMessage::clear_id() {
  id_ = 0;
}
inline ::google::protobuf::int32 TL_channels_updatePinnedMessage::id() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_channels_updatePinnedMessage.id)
  return id_;
}
inline void TL_channels_updatePinnedMessage::set_id(::google::protobuf::int32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_channels_updatePinnedMessage.id)
}

// -------------------------------------------------------------------

// TL_channels_getAdminedPublicChannels

// -------------------------------------------------------------------

// TL_channels_editBanned

// .mtproto.InputChannel channel = 1;
inline bool TL_channels_editBanned::has_channel() const {
  return this != internal_default_instance() && channel_ != NULL;
}
inline void TL_channels_editBanned::clear_channel() {
  if (GetArenaNoVirtual() == NULL && channel_ != NULL) delete channel_;
  channel_ = NULL;
}
inline const ::mtproto::InputChannel& TL_channels_editBanned::channel() const {
  const ::mtproto::InputChannel* p = channel_;
  // @@protoc_insertion_point(field_get:mtproto.TL_channels_editBanned.channel)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::InputChannel*>(
      &::mtproto::_InputChannel_default_instance_);
}
inline ::mtproto::InputChannel* TL_channels_editBanned::mutable_channel() {
  
  if (channel_ == NULL) {
    channel_ = new ::mtproto::InputChannel;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_channels_editBanned.channel)
  return channel_;
}
inline ::mtproto::InputChannel* TL_channels_editBanned::release_channel() {
  // @@protoc_insertion_point(field_release:mtproto.TL_channels_editBanned.channel)
  
  ::mtproto::InputChannel* temp = channel_;
  channel_ = NULL;
  return temp;
}
inline void TL_channels_editBanned::set_allocated_channel(::mtproto::InputChannel* channel) {
  delete channel_;
  channel_ = channel;
  if (channel) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_channels_editBanned.channel)
}

// .mtproto.InputUser user_id = 2;
inline bool TL_channels_editBanned::has_user_id() const {
  return this != internal_default_instance() && user_id_ != NULL;
}
inline void TL_channels_editBanned::clear_user_id() {
  if (GetArenaNoVirtual() == NULL && user_id_ != NULL) delete user_id_;
  user_id_ = NULL;
}
inline const ::mtproto::InputUser& TL_channels_editBanned::user_id() const {
  const ::mtproto::InputUser* p = user_id_;
  // @@protoc_insertion_point(field_get:mtproto.TL_channels_editBanned.user_id)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::InputUser*>(
      &::mtproto::_InputUser_default_instance_);
}
inline ::mtproto::InputUser* TL_channels_editBanned::mutable_user_id() {
  
  if (user_id_ == NULL) {
    user_id_ = new ::mtproto::InputUser;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_channels_editBanned.user_id)
  return user_id_;
}
inline ::mtproto::InputUser* TL_channels_editBanned::release_user_id() {
  // @@protoc_insertion_point(field_release:mtproto.TL_channels_editBanned.user_id)
  
  ::mtproto::InputUser* temp = user_id_;
  user_id_ = NULL;
  return temp;
}
inline void TL_channels_editBanned::set_allocated_user_id(::mtproto::InputUser* user_id) {
  delete user_id_;
  user_id_ = user_id;
  if (user_id) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_channels_editBanned.user_id)
}

// .mtproto.ChannelBannedRights banned_rights = 3;
inline bool TL_channels_editBanned::has_banned_rights() const {
  return this != internal_default_instance() && banned_rights_ != NULL;
}
inline void TL_channels_editBanned::clear_banned_rights() {
  if (GetArenaNoVirtual() == NULL && banned_rights_ != NULL) delete banned_rights_;
  banned_rights_ = NULL;
}
inline const ::mtproto::ChannelBannedRights& TL_channels_editBanned::banned_rights() const {
  const ::mtproto::ChannelBannedRights* p = banned_rights_;
  // @@protoc_insertion_point(field_get:mtproto.TL_channels_editBanned.banned_rights)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::ChannelBannedRights*>(
      &::mtproto::_ChannelBannedRights_default_instance_);
}
inline ::mtproto::ChannelBannedRights* TL_channels_editBanned::mutable_banned_rights() {
  
  if (banned_rights_ == NULL) {
    banned_rights_ = new ::mtproto::ChannelBannedRights;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_channels_editBanned.banned_rights)
  return banned_rights_;
}
inline ::mtproto::ChannelBannedRights* TL_channels_editBanned::release_banned_rights() {
  // @@protoc_insertion_point(field_release:mtproto.TL_channels_editBanned.banned_rights)
  
  ::mtproto::ChannelBannedRights* temp = banned_rights_;
  banned_rights_ = NULL;
  return temp;
}
inline void TL_channels_editBanned::set_allocated_banned_rights(::mtproto::ChannelBannedRights* banned_rights) {
  delete banned_rights_;
  banned_rights_ = banned_rights;
  if (banned_rights) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_channels_editBanned.banned_rights)
}

// -------------------------------------------------------------------

// TL_channels_getAdminLog

// .mtproto.InputChannel channel = 2;
inline bool TL_channels_getAdminLog::has_channel() const {
  return this != internal_default_instance() && channel_ != NULL;
}
inline void TL_channels_getAdminLog::clear_channel() {
  if (GetArenaNoVirtual() == NULL && channel_ != NULL) delete channel_;
  channel_ = NULL;
}
inline const ::mtproto::InputChannel& TL_channels_getAdminLog::channel() const {
  const ::mtproto::InputChannel* p = channel_;
  // @@protoc_insertion_point(field_get:mtproto.TL_channels_getAdminLog.channel)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::InputChannel*>(
      &::mtproto::_InputChannel_default_instance_);
}
inline ::mtproto::InputChannel* TL_channels_getAdminLog::mutable_channel() {
  
  if (channel_ == NULL) {
    channel_ = new ::mtproto::InputChannel;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_channels_getAdminLog.channel)
  return channel_;
}
inline ::mtproto::InputChannel* TL_channels_getAdminLog::release_channel() {
  // @@protoc_insertion_point(field_release:mtproto.TL_channels_getAdminLog.channel)
  
  ::mtproto::InputChannel* temp = channel_;
  channel_ = NULL;
  return temp;
}
inline void TL_channels_getAdminLog::set_allocated_channel(::mtproto::InputChannel* channel) {
  delete channel_;
  channel_ = channel;
  if (channel) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_channels_getAdminLog.channel)
}

// string q = 3;
inline void TL_channels_getAdminLog::clear_q() {
  q_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& TL_channels_getAdminLog::q() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_channels_getAdminLog.q)
  return q_.GetNoArena();
}
inline void TL_channels_getAdminLog::set_q(const ::std::string& value) {
  
  q_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtproto.TL_channels_getAdminLog.q)
}
#if LANG_CXX11
inline void TL_channels_getAdminLog::set_q(::std::string&& value) {
  
  q_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mtproto.TL_channels_getAdminLog.q)
}
#endif
inline void TL_channels_getAdminLog::set_q(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  q_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtproto.TL_channels_getAdminLog.q)
}
inline void TL_channels_getAdminLog::set_q(const char* value, size_t size) {
  
  q_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtproto.TL_channels_getAdminLog.q)
}
inline ::std::string* TL_channels_getAdminLog::mutable_q() {
  
  // @@protoc_insertion_point(field_mutable:mtproto.TL_channels_getAdminLog.q)
  return q_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TL_channels_getAdminLog::release_q() {
  // @@protoc_insertion_point(field_release:mtproto.TL_channels_getAdminLog.q)
  
  return q_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TL_channels_getAdminLog::set_allocated_q(::std::string* q) {
  if (q != NULL) {
    
  } else {
    
  }
  q_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), q);
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_channels_getAdminLog.q)
}

// .mtproto.ChannelAdminLogEventsFilter events_filter = 4;
inline bool TL_channels_getAdminLog::has_events_filter() const {
  return this != internal_default_instance() && events_filter_ != NULL;
}
inline void TL_channels_getAdminLog::clear_events_filter() {
  if (GetArenaNoVirtual() == NULL && events_filter_ != NULL) delete events_filter_;
  events_filter_ = NULL;
}
inline const ::mtproto::ChannelAdminLogEventsFilter& TL_channels_getAdminLog::events_filter() const {
  const ::mtproto::ChannelAdminLogEventsFilter* p = events_filter_;
  // @@protoc_insertion_point(field_get:mtproto.TL_channels_getAdminLog.events_filter)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::ChannelAdminLogEventsFilter*>(
      &::mtproto::_ChannelAdminLogEventsFilter_default_instance_);
}
inline ::mtproto::ChannelAdminLogEventsFilter* TL_channels_getAdminLog::mutable_events_filter() {
  
  if (events_filter_ == NULL) {
    events_filter_ = new ::mtproto::ChannelAdminLogEventsFilter;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_channels_getAdminLog.events_filter)
  return events_filter_;
}
inline ::mtproto::ChannelAdminLogEventsFilter* TL_channels_getAdminLog::release_events_filter() {
  // @@protoc_insertion_point(field_release:mtproto.TL_channels_getAdminLog.events_filter)
  
  ::mtproto::ChannelAdminLogEventsFilter* temp = events_filter_;
  events_filter_ = NULL;
  return temp;
}
inline void TL_channels_getAdminLog::set_allocated_events_filter(::mtproto::ChannelAdminLogEventsFilter* events_filter) {
  delete events_filter_;
  events_filter_ = events_filter;
  if (events_filter) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_channels_getAdminLog.events_filter)
}

// repeated .mtproto.InputUser admins = 5;
inline int TL_channels_getAdminLog::admins_size() const {
  return admins_.size();
}
inline void TL_channels_getAdminLog::clear_admins() {
  admins_.Clear();
}
inline const ::mtproto::InputUser& TL_channels_getAdminLog::admins(int index) const {
  // @@protoc_insertion_point(field_get:mtproto.TL_channels_getAdminLog.admins)
  return admins_.Get(index);
}
inline ::mtproto::InputUser* TL_channels_getAdminLog::mutable_admins(int index) {
  // @@protoc_insertion_point(field_mutable:mtproto.TL_channels_getAdminLog.admins)
  return admins_.Mutable(index);
}
inline ::mtproto::InputUser* TL_channels_getAdminLog::add_admins() {
  // @@protoc_insertion_point(field_add:mtproto.TL_channels_getAdminLog.admins)
  return admins_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::mtproto::InputUser >*
TL_channels_getAdminLog::mutable_admins() {
  // @@protoc_insertion_point(field_mutable_list:mtproto.TL_channels_getAdminLog.admins)
  return &admins_;
}
inline const ::google::protobuf::RepeatedPtrField< ::mtproto::InputUser >&
TL_channels_getAdminLog::admins() const {
  // @@protoc_insertion_point(field_list:mtproto.TL_channels_getAdminLog.admins)
  return admins_;
}

// int64 max_id = 6;
inline void TL_channels_getAdminLog::clear_max_id() {
  max_id_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 TL_channels_getAdminLog::max_id() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_channels_getAdminLog.max_id)
  return max_id_;
}
inline void TL_channels_getAdminLog::set_max_id(::google::protobuf::int64 value) {
  
  max_id_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_channels_getAdminLog.max_id)
}

// int64 min_id = 7;
inline void TL_channels_getAdminLog::clear_min_id() {
  min_id_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 TL_channels_getAdminLog::min_id() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_channels_getAdminLog.min_id)
  return min_id_;
}
inline void TL_channels_getAdminLog::set_min_id(::google::protobuf::int64 value) {
  
  min_id_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_channels_getAdminLog.min_id)
}

// int32 limit = 8;
inline void TL_channels_getAdminLog::clear_limit() {
  limit_ = 0;
}
inline ::google::protobuf::int32 TL_channels_getAdminLog::limit() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_channels_getAdminLog.limit)
  return limit_;
}
inline void TL_channels_getAdminLog::set_limit(::google::protobuf::int32 value) {
  
  limit_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_channels_getAdminLog.limit)
}

// -------------------------------------------------------------------

// TL_channels_setStickers

// .mtproto.InputChannel channel = 1;
inline bool TL_channels_setStickers::has_channel() const {
  return this != internal_default_instance() && channel_ != NULL;
}
inline void TL_channels_setStickers::clear_channel() {
  if (GetArenaNoVirtual() == NULL && channel_ != NULL) delete channel_;
  channel_ = NULL;
}
inline const ::mtproto::InputChannel& TL_channels_setStickers::channel() const {
  const ::mtproto::InputChannel* p = channel_;
  // @@protoc_insertion_point(field_get:mtproto.TL_channels_setStickers.channel)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::InputChannel*>(
      &::mtproto::_InputChannel_default_instance_);
}
inline ::mtproto::InputChannel* TL_channels_setStickers::mutable_channel() {
  
  if (channel_ == NULL) {
    channel_ = new ::mtproto::InputChannel;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_channels_setStickers.channel)
  return channel_;
}
inline ::mtproto::InputChannel* TL_channels_setStickers::release_channel() {
  // @@protoc_insertion_point(field_release:mtproto.TL_channels_setStickers.channel)
  
  ::mtproto::InputChannel* temp = channel_;
  channel_ = NULL;
  return temp;
}
inline void TL_channels_setStickers::set_allocated_channel(::mtproto::InputChannel* channel) {
  delete channel_;
  channel_ = channel;
  if (channel) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_channels_setStickers.channel)
}

// .mtproto.InputStickerSet stickerset = 2;
inline bool TL_channels_setStickers::has_stickerset() const {
  return this != internal_default_instance() && stickerset_ != NULL;
}
inline void TL_channels_setStickers::clear_stickerset() {
  if (GetArenaNoVirtual() == NULL && stickerset_ != NULL) delete stickerset_;
  stickerset_ = NULL;
}
inline const ::mtproto::InputStickerSet& TL_channels_setStickers::stickerset() const {
  const ::mtproto::InputStickerSet* p = stickerset_;
  // @@protoc_insertion_point(field_get:mtproto.TL_channels_setStickers.stickerset)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::InputStickerSet*>(
      &::mtproto::_InputStickerSet_default_instance_);
}
inline ::mtproto::InputStickerSet* TL_channels_setStickers::mutable_stickerset() {
  
  if (stickerset_ == NULL) {
    stickerset_ = new ::mtproto::InputStickerSet;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_channels_setStickers.stickerset)
  return stickerset_;
}
inline ::mtproto::InputStickerSet* TL_channels_setStickers::release_stickerset() {
  // @@protoc_insertion_point(field_release:mtproto.TL_channels_setStickers.stickerset)
  
  ::mtproto::InputStickerSet* temp = stickerset_;
  stickerset_ = NULL;
  return temp;
}
inline void TL_channels_setStickers::set_allocated_stickerset(::mtproto::InputStickerSet* stickerset) {
  delete stickerset_;
  stickerset_ = stickerset;
  if (stickerset) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_channels_setStickers.stickerset)
}

// -------------------------------------------------------------------

// TL_channels_readMessageContents

// .mtproto.InputChannel channel = 1;
inline bool TL_channels_readMessageContents::has_channel() const {
  return this != internal_default_instance() && channel_ != NULL;
}
inline void TL_channels_readMessageContents::clear_channel() {
  if (GetArenaNoVirtual() == NULL && channel_ != NULL) delete channel_;
  channel_ = NULL;
}
inline const ::mtproto::InputChannel& TL_channels_readMessageContents::channel() const {
  const ::mtproto::InputChannel* p = channel_;
  // @@protoc_insertion_point(field_get:mtproto.TL_channels_readMessageContents.channel)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::InputChannel*>(
      &::mtproto::_InputChannel_default_instance_);
}
inline ::mtproto::InputChannel* TL_channels_readMessageContents::mutable_channel() {
  
  if (channel_ == NULL) {
    channel_ = new ::mtproto::InputChannel;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_channels_readMessageContents.channel)
  return channel_;
}
inline ::mtproto::InputChannel* TL_channels_readMessageContents::release_channel() {
  // @@protoc_insertion_point(field_release:mtproto.TL_channels_readMessageContents.channel)
  
  ::mtproto::InputChannel* temp = channel_;
  channel_ = NULL;
  return temp;
}
inline void TL_channels_readMessageContents::set_allocated_channel(::mtproto::InputChannel* channel) {
  delete channel_;
  channel_ = channel;
  if (channel) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_channels_readMessageContents.channel)
}

// repeated int32 id = 2;
inline int TL_channels_readMessageContents::id_size() const {
  return id_.size();
}
inline void TL_channels_readMessageContents::clear_id() {
  id_.Clear();
}
inline ::google::protobuf::int32 TL_channels_readMessageContents::id(int index) const {
  // @@protoc_insertion_point(field_get:mtproto.TL_channels_readMessageContents.id)
  return id_.Get(index);
}
inline void TL_channels_readMessageContents::set_id(int index, ::google::protobuf::int32 value) {
  id_.Set(index, value);
  // @@protoc_insertion_point(field_set:mtproto.TL_channels_readMessageContents.id)
}
inline void TL_channels_readMessageContents::add_id(::google::protobuf::int32 value) {
  id_.Add(value);
  // @@protoc_insertion_point(field_add:mtproto.TL_channels_readMessageContents.id)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
TL_channels_readMessageContents::id() const {
  // @@protoc_insertion_point(field_list:mtproto.TL_channels_readMessageContents.id)
  return id_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
TL_channels_readMessageContents::mutable_id() {
  // @@protoc_insertion_point(field_mutable_list:mtproto.TL_channels_readMessageContents.id)
  return &id_;
}

// -------------------------------------------------------------------

// TL_channels_deleteHistory

// .mtproto.InputChannel channel = 1;
inline bool TL_channels_deleteHistory::has_channel() const {
  return this != internal_default_instance() && channel_ != NULL;
}
inline void TL_channels_deleteHistory::clear_channel() {
  if (GetArenaNoVirtual() == NULL && channel_ != NULL) delete channel_;
  channel_ = NULL;
}
inline const ::mtproto::InputChannel& TL_channels_deleteHistory::channel() const {
  const ::mtproto::InputChannel* p = channel_;
  // @@protoc_insertion_point(field_get:mtproto.TL_channels_deleteHistory.channel)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::InputChannel*>(
      &::mtproto::_InputChannel_default_instance_);
}
inline ::mtproto::InputChannel* TL_channels_deleteHistory::mutable_channel() {
  
  if (channel_ == NULL) {
    channel_ = new ::mtproto::InputChannel;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_channels_deleteHistory.channel)
  return channel_;
}
inline ::mtproto::InputChannel* TL_channels_deleteHistory::release_channel() {
  // @@protoc_insertion_point(field_release:mtproto.TL_channels_deleteHistory.channel)
  
  ::mtproto::InputChannel* temp = channel_;
  channel_ = NULL;
  return temp;
}
inline void TL_channels_deleteHistory::set_allocated_channel(::mtproto::InputChannel* channel) {
  delete channel_;
  channel_ = channel;
  if (channel) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_channels_deleteHistory.channel)
}

// int32 max_id = 2;
inline void TL_channels_deleteHistory::clear_max_id() {
  max_id_ = 0;
}
inline ::google::protobuf::int32 TL_channels_deleteHistory::max_id() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_channels_deleteHistory.max_id)
  return max_id_;
}
inline void TL_channels_deleteHistory::set_max_id(::google::protobuf::int32 value) {
  
  max_id_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_channels_deleteHistory.max_id)
}

// -------------------------------------------------------------------

// TL_channels_togglePreHistoryHidden

// .mtproto.InputChannel channel = 1;
inline bool TL_channels_togglePreHistoryHidden::has_channel() const {
  return this != internal_default_instance() && channel_ != NULL;
}
inline void TL_channels_togglePreHistoryHidden::clear_channel() {
  if (GetArenaNoVirtual() == NULL && channel_ != NULL) delete channel_;
  channel_ = NULL;
}
inline const ::mtproto::InputChannel& TL_channels_togglePreHistoryHidden::channel() const {
  const ::mtproto::InputChannel* p = channel_;
  // @@protoc_insertion_point(field_get:mtproto.TL_channels_togglePreHistoryHidden.channel)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::InputChannel*>(
      &::mtproto::_InputChannel_default_instance_);
}
inline ::mtproto::InputChannel* TL_channels_togglePreHistoryHidden::mutable_channel() {
  
  if (channel_ == NULL) {
    channel_ = new ::mtproto::InputChannel;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_channels_togglePreHistoryHidden.channel)
  return channel_;
}
inline ::mtproto::InputChannel* TL_channels_togglePreHistoryHidden::release_channel() {
  // @@protoc_insertion_point(field_release:mtproto.TL_channels_togglePreHistoryHidden.channel)
  
  ::mtproto::InputChannel* temp = channel_;
  channel_ = NULL;
  return temp;
}
inline void TL_channels_togglePreHistoryHidden::set_allocated_channel(::mtproto::InputChannel* channel) {
  delete channel_;
  channel_ = channel;
  if (channel) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_channels_togglePreHistoryHidden.channel)
}

// .mtproto.Bool enabled = 2;
inline bool TL_channels_togglePreHistoryHidden::has_enabled() const {
  return this != internal_default_instance() && enabled_ != NULL;
}
inline void TL_channels_togglePreHistoryHidden::clear_enabled() {
  if (GetArenaNoVirtual() == NULL && enabled_ != NULL) delete enabled_;
  enabled_ = NULL;
}
inline const ::mtproto::Bool& TL_channels_togglePreHistoryHidden::enabled() const {
  const ::mtproto::Bool* p = enabled_;
  // @@protoc_insertion_point(field_get:mtproto.TL_channels_togglePreHistoryHidden.enabled)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::Bool*>(
      &::mtproto::_Bool_default_instance_);
}
inline ::mtproto::Bool* TL_channels_togglePreHistoryHidden::mutable_enabled() {
  
  if (enabled_ == NULL) {
    enabled_ = new ::mtproto::Bool;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_channels_togglePreHistoryHidden.enabled)
  return enabled_;
}
inline ::mtproto::Bool* TL_channels_togglePreHistoryHidden::release_enabled() {
  // @@protoc_insertion_point(field_release:mtproto.TL_channels_togglePreHistoryHidden.enabled)
  
  ::mtproto::Bool* temp = enabled_;
  enabled_ = NULL;
  return temp;
}
inline void TL_channels_togglePreHistoryHidden::set_allocated_enabled(::mtproto::Bool* enabled) {
  delete enabled_;
  enabled_ = enabled;
  if (enabled) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_channels_togglePreHistoryHidden.enabled)
}

// -------------------------------------------------------------------

// TL_channels_getLeftChannels

// int32 offset = 1;
inline void TL_channels_getLeftChannels::clear_offset() {
  offset_ = 0;
}
inline ::google::protobuf::int32 TL_channels_getLeftChannels::offset() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_channels_getLeftChannels.offset)
  return offset_;
}
inline void TL_channels_getLeftChannels::set_offset(::google::protobuf::int32 value) {
  
  offset_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_channels_getLeftChannels.offset)
}

// -------------------------------------------------------------------

// TL_bots_sendCustomRequest

// string custom_method = 1;
inline void TL_bots_sendCustomRequest::clear_custom_method() {
  custom_method_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& TL_bots_sendCustomRequest::custom_method() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_bots_sendCustomRequest.custom_method)
  return custom_method_.GetNoArena();
}
inline void TL_bots_sendCustomRequest::set_custom_method(const ::std::string& value) {
  
  custom_method_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtproto.TL_bots_sendCustomRequest.custom_method)
}
#if LANG_CXX11
inline void TL_bots_sendCustomRequest::set_custom_method(::std::string&& value) {
  
  custom_method_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mtproto.TL_bots_sendCustomRequest.custom_method)
}
#endif
inline void TL_bots_sendCustomRequest::set_custom_method(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  custom_method_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtproto.TL_bots_sendCustomRequest.custom_method)
}
inline void TL_bots_sendCustomRequest::set_custom_method(const char* value, size_t size) {
  
  custom_method_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtproto.TL_bots_sendCustomRequest.custom_method)
}
inline ::std::string* TL_bots_sendCustomRequest::mutable_custom_method() {
  
  // @@protoc_insertion_point(field_mutable:mtproto.TL_bots_sendCustomRequest.custom_method)
  return custom_method_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TL_bots_sendCustomRequest::release_custom_method() {
  // @@protoc_insertion_point(field_release:mtproto.TL_bots_sendCustomRequest.custom_method)
  
  return custom_method_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TL_bots_sendCustomRequest::set_allocated_custom_method(::std::string* custom_method) {
  if (custom_method != NULL) {
    
  } else {
    
  }
  custom_method_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), custom_method);
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_bots_sendCustomRequest.custom_method)
}

// .mtproto.DataJSON params = 2;
inline bool TL_bots_sendCustomRequest::has_params() const {
  return this != internal_default_instance() && params_ != NULL;
}
inline void TL_bots_sendCustomRequest::clear_params() {
  if (GetArenaNoVirtual() == NULL && params_ != NULL) delete params_;
  params_ = NULL;
}
inline const ::mtproto::DataJSON& TL_bots_sendCustomRequest::params() const {
  const ::mtproto::DataJSON* p = params_;
  // @@protoc_insertion_point(field_get:mtproto.TL_bots_sendCustomRequest.params)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::DataJSON*>(
      &::mtproto::_DataJSON_default_instance_);
}
inline ::mtproto::DataJSON* TL_bots_sendCustomRequest::mutable_params() {
  
  if (params_ == NULL) {
    params_ = new ::mtproto::DataJSON;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_bots_sendCustomRequest.params)
  return params_;
}
inline ::mtproto::DataJSON* TL_bots_sendCustomRequest::release_params() {
  // @@protoc_insertion_point(field_release:mtproto.TL_bots_sendCustomRequest.params)
  
  ::mtproto::DataJSON* temp = params_;
  params_ = NULL;
  return temp;
}
inline void TL_bots_sendCustomRequest::set_allocated_params(::mtproto::DataJSON* params) {
  delete params_;
  params_ = params;
  if (params) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_bots_sendCustomRequest.params)
}

// -------------------------------------------------------------------

// TL_bots_answerWebhookJSONQuery

// int64 query_id = 1;
inline void TL_bots_answerWebhookJSONQuery::clear_query_id() {
  query_id_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 TL_bots_answerWebhookJSONQuery::query_id() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_bots_answerWebhookJSONQuery.query_id)
  return query_id_;
}
inline void TL_bots_answerWebhookJSONQuery::set_query_id(::google::protobuf::int64 value) {
  
  query_id_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_bots_answerWebhookJSONQuery.query_id)
}

// .mtproto.DataJSON data = 2;
inline bool TL_bots_answerWebhookJSONQuery::has_data() const {
  return this != internal_default_instance() && data_ != NULL;
}
inline void TL_bots_answerWebhookJSONQuery::clear_data() {
  if (GetArenaNoVirtual() == NULL && data_ != NULL) delete data_;
  data_ = NULL;
}
inline const ::mtproto::DataJSON& TL_bots_answerWebhookJSONQuery::data() const {
  const ::mtproto::DataJSON* p = data_;
  // @@protoc_insertion_point(field_get:mtproto.TL_bots_answerWebhookJSONQuery.data)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::DataJSON*>(
      &::mtproto::_DataJSON_default_instance_);
}
inline ::mtproto::DataJSON* TL_bots_answerWebhookJSONQuery::mutable_data() {
  
  if (data_ == NULL) {
    data_ = new ::mtproto::DataJSON;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_bots_answerWebhookJSONQuery.data)
  return data_;
}
inline ::mtproto::DataJSON* TL_bots_answerWebhookJSONQuery::release_data() {
  // @@protoc_insertion_point(field_release:mtproto.TL_bots_answerWebhookJSONQuery.data)
  
  ::mtproto::DataJSON* temp = data_;
  data_ = NULL;
  return temp;
}
inline void TL_bots_answerWebhookJSONQuery::set_allocated_data(::mtproto::DataJSON* data) {
  delete data_;
  data_ = data;
  if (data) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_bots_answerWebhookJSONQuery.data)
}

// -------------------------------------------------------------------

// TL_payments_getPaymentForm

// int32 msg_id = 1;
inline void TL_payments_getPaymentForm::clear_msg_id() {
  msg_id_ = 0;
}
inline ::google::protobuf::int32 TL_payments_getPaymentForm::msg_id() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_payments_getPaymentForm.msg_id)
  return msg_id_;
}
inline void TL_payments_getPaymentForm::set_msg_id(::google::protobuf::int32 value) {
  
  msg_id_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_payments_getPaymentForm.msg_id)
}

// -------------------------------------------------------------------

// TL_payments_getPaymentReceipt

// int32 msg_id = 1;
inline void TL_payments_getPaymentReceipt::clear_msg_id() {
  msg_id_ = 0;
}
inline ::google::protobuf::int32 TL_payments_getPaymentReceipt::msg_id() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_payments_getPaymentReceipt.msg_id)
  return msg_id_;
}
inline void TL_payments_getPaymentReceipt::set_msg_id(::google::protobuf::int32 value) {
  
  msg_id_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_payments_getPaymentReceipt.msg_id)
}

// -------------------------------------------------------------------

// TL_payments_validateRequestedInfo

// bool save = 2;
inline void TL_payments_validateRequestedInfo::clear_save() {
  save_ = false;
}
inline bool TL_payments_validateRequestedInfo::save() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_payments_validateRequestedInfo.save)
  return save_;
}
inline void TL_payments_validateRequestedInfo::set_save(bool value) {
  
  save_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_payments_validateRequestedInfo.save)
}

// int32 msg_id = 3;
inline void TL_payments_validateRequestedInfo::clear_msg_id() {
  msg_id_ = 0;
}
inline ::google::protobuf::int32 TL_payments_validateRequestedInfo::msg_id() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_payments_validateRequestedInfo.msg_id)
  return msg_id_;
}
inline void TL_payments_validateRequestedInfo::set_msg_id(::google::protobuf::int32 value) {
  
  msg_id_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_payments_validateRequestedInfo.msg_id)
}

// .mtproto.PaymentRequestedInfo info = 4;
inline bool TL_payments_validateRequestedInfo::has_info() const {
  return this != internal_default_instance() && info_ != NULL;
}
inline void TL_payments_validateRequestedInfo::clear_info() {
  if (GetArenaNoVirtual() == NULL && info_ != NULL) delete info_;
  info_ = NULL;
}
inline const ::mtproto::PaymentRequestedInfo& TL_payments_validateRequestedInfo::info() const {
  const ::mtproto::PaymentRequestedInfo* p = info_;
  // @@protoc_insertion_point(field_get:mtproto.TL_payments_validateRequestedInfo.info)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::PaymentRequestedInfo*>(
      &::mtproto::_PaymentRequestedInfo_default_instance_);
}
inline ::mtproto::PaymentRequestedInfo* TL_payments_validateRequestedInfo::mutable_info() {
  
  if (info_ == NULL) {
    info_ = new ::mtproto::PaymentRequestedInfo;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_payments_validateRequestedInfo.info)
  return info_;
}
inline ::mtproto::PaymentRequestedInfo* TL_payments_validateRequestedInfo::release_info() {
  // @@protoc_insertion_point(field_release:mtproto.TL_payments_validateRequestedInfo.info)
  
  ::mtproto::PaymentRequestedInfo* temp = info_;
  info_ = NULL;
  return temp;
}
inline void TL_payments_validateRequestedInfo::set_allocated_info(::mtproto::PaymentRequestedInfo* info) {
  delete info_;
  info_ = info;
  if (info) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_payments_validateRequestedInfo.info)
}

// -------------------------------------------------------------------

// TL_payments_sendPaymentForm

// int32 msg_id = 2;
inline void TL_payments_sendPaymentForm::clear_msg_id() {
  msg_id_ = 0;
}
inline ::google::protobuf::int32 TL_payments_sendPaymentForm::msg_id() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_payments_sendPaymentForm.msg_id)
  return msg_id_;
}
inline void TL_payments_sendPaymentForm::set_msg_id(::google::protobuf::int32 value) {
  
  msg_id_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_payments_sendPaymentForm.msg_id)
}

// string requested_info_id = 3;
inline void TL_payments_sendPaymentForm::clear_requested_info_id() {
  requested_info_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& TL_payments_sendPaymentForm::requested_info_id() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_payments_sendPaymentForm.requested_info_id)
  return requested_info_id_.GetNoArena();
}
inline void TL_payments_sendPaymentForm::set_requested_info_id(const ::std::string& value) {
  
  requested_info_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtproto.TL_payments_sendPaymentForm.requested_info_id)
}
#if LANG_CXX11
inline void TL_payments_sendPaymentForm::set_requested_info_id(::std::string&& value) {
  
  requested_info_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mtproto.TL_payments_sendPaymentForm.requested_info_id)
}
#endif
inline void TL_payments_sendPaymentForm::set_requested_info_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  requested_info_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtproto.TL_payments_sendPaymentForm.requested_info_id)
}
inline void TL_payments_sendPaymentForm::set_requested_info_id(const char* value, size_t size) {
  
  requested_info_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtproto.TL_payments_sendPaymentForm.requested_info_id)
}
inline ::std::string* TL_payments_sendPaymentForm::mutable_requested_info_id() {
  
  // @@protoc_insertion_point(field_mutable:mtproto.TL_payments_sendPaymentForm.requested_info_id)
  return requested_info_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TL_payments_sendPaymentForm::release_requested_info_id() {
  // @@protoc_insertion_point(field_release:mtproto.TL_payments_sendPaymentForm.requested_info_id)
  
  return requested_info_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TL_payments_sendPaymentForm::set_allocated_requested_info_id(::std::string* requested_info_id) {
  if (requested_info_id != NULL) {
    
  } else {
    
  }
  requested_info_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), requested_info_id);
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_payments_sendPaymentForm.requested_info_id)
}

// string shipping_option_id = 4;
inline void TL_payments_sendPaymentForm::clear_shipping_option_id() {
  shipping_option_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& TL_payments_sendPaymentForm::shipping_option_id() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_payments_sendPaymentForm.shipping_option_id)
  return shipping_option_id_.GetNoArena();
}
inline void TL_payments_sendPaymentForm::set_shipping_option_id(const ::std::string& value) {
  
  shipping_option_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtproto.TL_payments_sendPaymentForm.shipping_option_id)
}
#if LANG_CXX11
inline void TL_payments_sendPaymentForm::set_shipping_option_id(::std::string&& value) {
  
  shipping_option_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mtproto.TL_payments_sendPaymentForm.shipping_option_id)
}
#endif
inline void TL_payments_sendPaymentForm::set_shipping_option_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  shipping_option_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtproto.TL_payments_sendPaymentForm.shipping_option_id)
}
inline void TL_payments_sendPaymentForm::set_shipping_option_id(const char* value, size_t size) {
  
  shipping_option_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtproto.TL_payments_sendPaymentForm.shipping_option_id)
}
inline ::std::string* TL_payments_sendPaymentForm::mutable_shipping_option_id() {
  
  // @@protoc_insertion_point(field_mutable:mtproto.TL_payments_sendPaymentForm.shipping_option_id)
  return shipping_option_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TL_payments_sendPaymentForm::release_shipping_option_id() {
  // @@protoc_insertion_point(field_release:mtproto.TL_payments_sendPaymentForm.shipping_option_id)
  
  return shipping_option_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TL_payments_sendPaymentForm::set_allocated_shipping_option_id(::std::string* shipping_option_id) {
  if (shipping_option_id != NULL) {
    
  } else {
    
  }
  shipping_option_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), shipping_option_id);
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_payments_sendPaymentForm.shipping_option_id)
}

// .mtproto.InputPaymentCredentials credentials = 5;
inline bool TL_payments_sendPaymentForm::has_credentials() const {
  return this != internal_default_instance() && credentials_ != NULL;
}
inline void TL_payments_sendPaymentForm::clear_credentials() {
  if (GetArenaNoVirtual() == NULL && credentials_ != NULL) delete credentials_;
  credentials_ = NULL;
}
inline const ::mtproto::InputPaymentCredentials& TL_payments_sendPaymentForm::credentials() const {
  const ::mtproto::InputPaymentCredentials* p = credentials_;
  // @@protoc_insertion_point(field_get:mtproto.TL_payments_sendPaymentForm.credentials)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::InputPaymentCredentials*>(
      &::mtproto::_InputPaymentCredentials_default_instance_);
}
inline ::mtproto::InputPaymentCredentials* TL_payments_sendPaymentForm::mutable_credentials() {
  
  if (credentials_ == NULL) {
    credentials_ = new ::mtproto::InputPaymentCredentials;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_payments_sendPaymentForm.credentials)
  return credentials_;
}
inline ::mtproto::InputPaymentCredentials* TL_payments_sendPaymentForm::release_credentials() {
  // @@protoc_insertion_point(field_release:mtproto.TL_payments_sendPaymentForm.credentials)
  
  ::mtproto::InputPaymentCredentials* temp = credentials_;
  credentials_ = NULL;
  return temp;
}
inline void TL_payments_sendPaymentForm::set_allocated_credentials(::mtproto::InputPaymentCredentials* credentials) {
  delete credentials_;
  credentials_ = credentials;
  if (credentials) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_payments_sendPaymentForm.credentials)
}

// -------------------------------------------------------------------

// TL_payments_getSavedInfo

// -------------------------------------------------------------------

// TL_payments_clearSavedInfo

// bool credentials = 2;
inline void TL_payments_clearSavedInfo::clear_credentials() {
  credentials_ = false;
}
inline bool TL_payments_clearSavedInfo::credentials() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_payments_clearSavedInfo.credentials)
  return credentials_;
}
inline void TL_payments_clearSavedInfo::set_credentials(bool value) {
  
  credentials_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_payments_clearSavedInfo.credentials)
}

// bool info = 3;
inline void TL_payments_clearSavedInfo::clear_info() {
  info_ = false;
}
inline bool TL_payments_clearSavedInfo::info() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_payments_clearSavedInfo.info)
  return info_;
}
inline void TL_payments_clearSavedInfo::set_info(bool value) {
  
  info_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_payments_clearSavedInfo.info)
}

// -------------------------------------------------------------------

// TL_stickers_createStickerSet

// bool masks = 2;
inline void TL_stickers_createStickerSet::clear_masks() {
  masks_ = false;
}
inline bool TL_stickers_createStickerSet::masks() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_stickers_createStickerSet.masks)
  return masks_;
}
inline void TL_stickers_createStickerSet::set_masks(bool value) {
  
  masks_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_stickers_createStickerSet.masks)
}

// .mtproto.InputUser user_id = 3;
inline bool TL_stickers_createStickerSet::has_user_id() const {
  return this != internal_default_instance() && user_id_ != NULL;
}
inline void TL_stickers_createStickerSet::clear_user_id() {
  if (GetArenaNoVirtual() == NULL && user_id_ != NULL) delete user_id_;
  user_id_ = NULL;
}
inline const ::mtproto::InputUser& TL_stickers_createStickerSet::user_id() const {
  const ::mtproto::InputUser* p = user_id_;
  // @@protoc_insertion_point(field_get:mtproto.TL_stickers_createStickerSet.user_id)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::InputUser*>(
      &::mtproto::_InputUser_default_instance_);
}
inline ::mtproto::InputUser* TL_stickers_createStickerSet::mutable_user_id() {
  
  if (user_id_ == NULL) {
    user_id_ = new ::mtproto::InputUser;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_stickers_createStickerSet.user_id)
  return user_id_;
}
inline ::mtproto::InputUser* TL_stickers_createStickerSet::release_user_id() {
  // @@protoc_insertion_point(field_release:mtproto.TL_stickers_createStickerSet.user_id)
  
  ::mtproto::InputUser* temp = user_id_;
  user_id_ = NULL;
  return temp;
}
inline void TL_stickers_createStickerSet::set_allocated_user_id(::mtproto::InputUser* user_id) {
  delete user_id_;
  user_id_ = user_id;
  if (user_id) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_stickers_createStickerSet.user_id)
}

// string title = 4;
inline void TL_stickers_createStickerSet::clear_title() {
  title_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& TL_stickers_createStickerSet::title() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_stickers_createStickerSet.title)
  return title_.GetNoArena();
}
inline void TL_stickers_createStickerSet::set_title(const ::std::string& value) {
  
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtproto.TL_stickers_createStickerSet.title)
}
#if LANG_CXX11
inline void TL_stickers_createStickerSet::set_title(::std::string&& value) {
  
  title_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mtproto.TL_stickers_createStickerSet.title)
}
#endif
inline void TL_stickers_createStickerSet::set_title(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtproto.TL_stickers_createStickerSet.title)
}
inline void TL_stickers_createStickerSet::set_title(const char* value, size_t size) {
  
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtproto.TL_stickers_createStickerSet.title)
}
inline ::std::string* TL_stickers_createStickerSet::mutable_title() {
  
  // @@protoc_insertion_point(field_mutable:mtproto.TL_stickers_createStickerSet.title)
  return title_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TL_stickers_createStickerSet::release_title() {
  // @@protoc_insertion_point(field_release:mtproto.TL_stickers_createStickerSet.title)
  
  return title_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TL_stickers_createStickerSet::set_allocated_title(::std::string* title) {
  if (title != NULL) {
    
  } else {
    
  }
  title_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), title);
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_stickers_createStickerSet.title)
}

// string short_name = 5;
inline void TL_stickers_createStickerSet::clear_short_name() {
  short_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& TL_stickers_createStickerSet::short_name() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_stickers_createStickerSet.short_name)
  return short_name_.GetNoArena();
}
inline void TL_stickers_createStickerSet::set_short_name(const ::std::string& value) {
  
  short_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtproto.TL_stickers_createStickerSet.short_name)
}
#if LANG_CXX11
inline void TL_stickers_createStickerSet::set_short_name(::std::string&& value) {
  
  short_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mtproto.TL_stickers_createStickerSet.short_name)
}
#endif
inline void TL_stickers_createStickerSet::set_short_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  short_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtproto.TL_stickers_createStickerSet.short_name)
}
inline void TL_stickers_createStickerSet::set_short_name(const char* value, size_t size) {
  
  short_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtproto.TL_stickers_createStickerSet.short_name)
}
inline ::std::string* TL_stickers_createStickerSet::mutable_short_name() {
  
  // @@protoc_insertion_point(field_mutable:mtproto.TL_stickers_createStickerSet.short_name)
  return short_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TL_stickers_createStickerSet::release_short_name() {
  // @@protoc_insertion_point(field_release:mtproto.TL_stickers_createStickerSet.short_name)
  
  return short_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TL_stickers_createStickerSet::set_allocated_short_name(::std::string* short_name) {
  if (short_name != NULL) {
    
  } else {
    
  }
  short_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), short_name);
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_stickers_createStickerSet.short_name)
}

// repeated .mtproto.InputStickerSetItem stickers = 6;
inline int TL_stickers_createStickerSet::stickers_size() const {
  return stickers_.size();
}
inline void TL_stickers_createStickerSet::clear_stickers() {
  stickers_.Clear();
}
inline const ::mtproto::InputStickerSetItem& TL_stickers_createStickerSet::stickers(int index) const {
  // @@protoc_insertion_point(field_get:mtproto.TL_stickers_createStickerSet.stickers)
  return stickers_.Get(index);
}
inline ::mtproto::InputStickerSetItem* TL_stickers_createStickerSet::mutable_stickers(int index) {
  // @@protoc_insertion_point(field_mutable:mtproto.TL_stickers_createStickerSet.stickers)
  return stickers_.Mutable(index);
}
inline ::mtproto::InputStickerSetItem* TL_stickers_createStickerSet::add_stickers() {
  // @@protoc_insertion_point(field_add:mtproto.TL_stickers_createStickerSet.stickers)
  return stickers_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::mtproto::InputStickerSetItem >*
TL_stickers_createStickerSet::mutable_stickers() {
  // @@protoc_insertion_point(field_mutable_list:mtproto.TL_stickers_createStickerSet.stickers)
  return &stickers_;
}
inline const ::google::protobuf::RepeatedPtrField< ::mtproto::InputStickerSetItem >&
TL_stickers_createStickerSet::stickers() const {
  // @@protoc_insertion_point(field_list:mtproto.TL_stickers_createStickerSet.stickers)
  return stickers_;
}

// -------------------------------------------------------------------

// TL_stickers_removeStickerFromSet

// .mtproto.InputDocument sticker = 1;
inline bool TL_stickers_removeStickerFromSet::has_sticker() const {
  return this != internal_default_instance() && sticker_ != NULL;
}
inline void TL_stickers_removeStickerFromSet::clear_sticker() {
  if (GetArenaNoVirtual() == NULL && sticker_ != NULL) delete sticker_;
  sticker_ = NULL;
}
inline const ::mtproto::InputDocument& TL_stickers_removeStickerFromSet::sticker() const {
  const ::mtproto::InputDocument* p = sticker_;
  // @@protoc_insertion_point(field_get:mtproto.TL_stickers_removeStickerFromSet.sticker)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::InputDocument*>(
      &::mtproto::_InputDocument_default_instance_);
}
inline ::mtproto::InputDocument* TL_stickers_removeStickerFromSet::mutable_sticker() {
  
  if (sticker_ == NULL) {
    sticker_ = new ::mtproto::InputDocument;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_stickers_removeStickerFromSet.sticker)
  return sticker_;
}
inline ::mtproto::InputDocument* TL_stickers_removeStickerFromSet::release_sticker() {
  // @@protoc_insertion_point(field_release:mtproto.TL_stickers_removeStickerFromSet.sticker)
  
  ::mtproto::InputDocument* temp = sticker_;
  sticker_ = NULL;
  return temp;
}
inline void TL_stickers_removeStickerFromSet::set_allocated_sticker(::mtproto::InputDocument* sticker) {
  delete sticker_;
  sticker_ = sticker;
  if (sticker) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_stickers_removeStickerFromSet.sticker)
}

// -------------------------------------------------------------------

// TL_stickers_changeStickerPosition

// .mtproto.InputDocument sticker = 1;
inline bool TL_stickers_changeStickerPosition::has_sticker() const {
  return this != internal_default_instance() && sticker_ != NULL;
}
inline void TL_stickers_changeStickerPosition::clear_sticker() {
  if (GetArenaNoVirtual() == NULL && sticker_ != NULL) delete sticker_;
  sticker_ = NULL;
}
inline const ::mtproto::InputDocument& TL_stickers_changeStickerPosition::sticker() const {
  const ::mtproto::InputDocument* p = sticker_;
  // @@protoc_insertion_point(field_get:mtproto.TL_stickers_changeStickerPosition.sticker)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::InputDocument*>(
      &::mtproto::_InputDocument_default_instance_);
}
inline ::mtproto::InputDocument* TL_stickers_changeStickerPosition::mutable_sticker() {
  
  if (sticker_ == NULL) {
    sticker_ = new ::mtproto::InputDocument;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_stickers_changeStickerPosition.sticker)
  return sticker_;
}
inline ::mtproto::InputDocument* TL_stickers_changeStickerPosition::release_sticker() {
  // @@protoc_insertion_point(field_release:mtproto.TL_stickers_changeStickerPosition.sticker)
  
  ::mtproto::InputDocument* temp = sticker_;
  sticker_ = NULL;
  return temp;
}
inline void TL_stickers_changeStickerPosition::set_allocated_sticker(::mtproto::InputDocument* sticker) {
  delete sticker_;
  sticker_ = sticker;
  if (sticker) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_stickers_changeStickerPosition.sticker)
}

// int32 position = 2;
inline void TL_stickers_changeStickerPosition::clear_position() {
  position_ = 0;
}
inline ::google::protobuf::int32 TL_stickers_changeStickerPosition::position() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_stickers_changeStickerPosition.position)
  return position_;
}
inline void TL_stickers_changeStickerPosition::set_position(::google::protobuf::int32 value) {
  
  position_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_stickers_changeStickerPosition.position)
}

// -------------------------------------------------------------------

// TL_stickers_addStickerToSet

// .mtproto.InputStickerSet stickerset = 1;
inline bool TL_stickers_addStickerToSet::has_stickerset() const {
  return this != internal_default_instance() && stickerset_ != NULL;
}
inline void TL_stickers_addStickerToSet::clear_stickerset() {
  if (GetArenaNoVirtual() == NULL && stickerset_ != NULL) delete stickerset_;
  stickerset_ = NULL;
}
inline const ::mtproto::InputStickerSet& TL_stickers_addStickerToSet::stickerset() const {
  const ::mtproto::InputStickerSet* p = stickerset_;
  // @@protoc_insertion_point(field_get:mtproto.TL_stickers_addStickerToSet.stickerset)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::InputStickerSet*>(
      &::mtproto::_InputStickerSet_default_instance_);
}
inline ::mtproto::InputStickerSet* TL_stickers_addStickerToSet::mutable_stickerset() {
  
  if (stickerset_ == NULL) {
    stickerset_ = new ::mtproto::InputStickerSet;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_stickers_addStickerToSet.stickerset)
  return stickerset_;
}
inline ::mtproto::InputStickerSet* TL_stickers_addStickerToSet::release_stickerset() {
  // @@protoc_insertion_point(field_release:mtproto.TL_stickers_addStickerToSet.stickerset)
  
  ::mtproto::InputStickerSet* temp = stickerset_;
  stickerset_ = NULL;
  return temp;
}
inline void TL_stickers_addStickerToSet::set_allocated_stickerset(::mtproto::InputStickerSet* stickerset) {
  delete stickerset_;
  stickerset_ = stickerset;
  if (stickerset) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_stickers_addStickerToSet.stickerset)
}

// .mtproto.InputStickerSetItem sticker = 2;
inline bool TL_stickers_addStickerToSet::has_sticker() const {
  return this != internal_default_instance() && sticker_ != NULL;
}
inline void TL_stickers_addStickerToSet::clear_sticker() {
  if (GetArenaNoVirtual() == NULL && sticker_ != NULL) delete sticker_;
  sticker_ = NULL;
}
inline const ::mtproto::InputStickerSetItem& TL_stickers_addStickerToSet::sticker() const {
  const ::mtproto::InputStickerSetItem* p = sticker_;
  // @@protoc_insertion_point(field_get:mtproto.TL_stickers_addStickerToSet.sticker)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::InputStickerSetItem*>(
      &::mtproto::_InputStickerSetItem_default_instance_);
}
inline ::mtproto::InputStickerSetItem* TL_stickers_addStickerToSet::mutable_sticker() {
  
  if (sticker_ == NULL) {
    sticker_ = new ::mtproto::InputStickerSetItem;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_stickers_addStickerToSet.sticker)
  return sticker_;
}
inline ::mtproto::InputStickerSetItem* TL_stickers_addStickerToSet::release_sticker() {
  // @@protoc_insertion_point(field_release:mtproto.TL_stickers_addStickerToSet.sticker)
  
  ::mtproto::InputStickerSetItem* temp = sticker_;
  sticker_ = NULL;
  return temp;
}
inline void TL_stickers_addStickerToSet::set_allocated_sticker(::mtproto::InputStickerSetItem* sticker) {
  delete sticker_;
  sticker_ = sticker;
  if (sticker) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_stickers_addStickerToSet.sticker)
}

// -------------------------------------------------------------------

// TL_phone_getCallConfig

// -------------------------------------------------------------------

// TL_phone_requestCall

// .mtproto.InputUser user_id = 1;
inline bool TL_phone_requestCall::has_user_id() const {
  return this != internal_default_instance() && user_id_ != NULL;
}
inline void TL_phone_requestCall::clear_user_id() {
  if (GetArenaNoVirtual() == NULL && user_id_ != NULL) delete user_id_;
  user_id_ = NULL;
}
inline const ::mtproto::InputUser& TL_phone_requestCall::user_id() const {
  const ::mtproto::InputUser* p = user_id_;
  // @@protoc_insertion_point(field_get:mtproto.TL_phone_requestCall.user_id)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::InputUser*>(
      &::mtproto::_InputUser_default_instance_);
}
inline ::mtproto::InputUser* TL_phone_requestCall::mutable_user_id() {
  
  if (user_id_ == NULL) {
    user_id_ = new ::mtproto::InputUser;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_phone_requestCall.user_id)
  return user_id_;
}
inline ::mtproto::InputUser* TL_phone_requestCall::release_user_id() {
  // @@protoc_insertion_point(field_release:mtproto.TL_phone_requestCall.user_id)
  
  ::mtproto::InputUser* temp = user_id_;
  user_id_ = NULL;
  return temp;
}
inline void TL_phone_requestCall::set_allocated_user_id(::mtproto::InputUser* user_id) {
  delete user_id_;
  user_id_ = user_id;
  if (user_id) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_phone_requestCall.user_id)
}

// int32 random_id = 2;
inline void TL_phone_requestCall::clear_random_id() {
  random_id_ = 0;
}
inline ::google::protobuf::int32 TL_phone_requestCall::random_id() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_phone_requestCall.random_id)
  return random_id_;
}
inline void TL_phone_requestCall::set_random_id(::google::protobuf::int32 value) {
  
  random_id_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_phone_requestCall.random_id)
}

// bytes g_a_hash = 3;
inline void TL_phone_requestCall::clear_g_a_hash() {
  g_a_hash_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& TL_phone_requestCall::g_a_hash() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_phone_requestCall.g_a_hash)
  return g_a_hash_.GetNoArena();
}
inline void TL_phone_requestCall::set_g_a_hash(const ::std::string& value) {
  
  g_a_hash_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtproto.TL_phone_requestCall.g_a_hash)
}
#if LANG_CXX11
inline void TL_phone_requestCall::set_g_a_hash(::std::string&& value) {
  
  g_a_hash_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mtproto.TL_phone_requestCall.g_a_hash)
}
#endif
inline void TL_phone_requestCall::set_g_a_hash(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  g_a_hash_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtproto.TL_phone_requestCall.g_a_hash)
}
inline void TL_phone_requestCall::set_g_a_hash(const void* value, size_t size) {
  
  g_a_hash_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtproto.TL_phone_requestCall.g_a_hash)
}
inline ::std::string* TL_phone_requestCall::mutable_g_a_hash() {
  
  // @@protoc_insertion_point(field_mutable:mtproto.TL_phone_requestCall.g_a_hash)
  return g_a_hash_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TL_phone_requestCall::release_g_a_hash() {
  // @@protoc_insertion_point(field_release:mtproto.TL_phone_requestCall.g_a_hash)
  
  return g_a_hash_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TL_phone_requestCall::set_allocated_g_a_hash(::std::string* g_a_hash) {
  if (g_a_hash != NULL) {
    
  } else {
    
  }
  g_a_hash_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), g_a_hash);
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_phone_requestCall.g_a_hash)
}

// .mtproto.PhoneCallProtocol protocol = 4;
inline bool TL_phone_requestCall::has_protocol() const {
  return this != internal_default_instance() && protocol_ != NULL;
}
inline void TL_phone_requestCall::clear_protocol() {
  if (GetArenaNoVirtual() == NULL && protocol_ != NULL) delete protocol_;
  protocol_ = NULL;
}
inline const ::mtproto::PhoneCallProtocol& TL_phone_requestCall::protocol() const {
  const ::mtproto::PhoneCallProtocol* p = protocol_;
  // @@protoc_insertion_point(field_get:mtproto.TL_phone_requestCall.protocol)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::PhoneCallProtocol*>(
      &::mtproto::_PhoneCallProtocol_default_instance_);
}
inline ::mtproto::PhoneCallProtocol* TL_phone_requestCall::mutable_protocol() {
  
  if (protocol_ == NULL) {
    protocol_ = new ::mtproto::PhoneCallProtocol;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_phone_requestCall.protocol)
  return protocol_;
}
inline ::mtproto::PhoneCallProtocol* TL_phone_requestCall::release_protocol() {
  // @@protoc_insertion_point(field_release:mtproto.TL_phone_requestCall.protocol)
  
  ::mtproto::PhoneCallProtocol* temp = protocol_;
  protocol_ = NULL;
  return temp;
}
inline void TL_phone_requestCall::set_allocated_protocol(::mtproto::PhoneCallProtocol* protocol) {
  delete protocol_;
  protocol_ = protocol;
  if (protocol) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_phone_requestCall.protocol)
}

// -------------------------------------------------------------------

// TL_phone_acceptCall

// .mtproto.InputPhoneCall peer = 1;
inline bool TL_phone_acceptCall::has_peer() const {
  return this != internal_default_instance() && peer_ != NULL;
}
inline void TL_phone_acceptCall::clear_peer() {
  if (GetArenaNoVirtual() == NULL && peer_ != NULL) delete peer_;
  peer_ = NULL;
}
inline const ::mtproto::InputPhoneCall& TL_phone_acceptCall::peer() const {
  const ::mtproto::InputPhoneCall* p = peer_;
  // @@protoc_insertion_point(field_get:mtproto.TL_phone_acceptCall.peer)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::InputPhoneCall*>(
      &::mtproto::_InputPhoneCall_default_instance_);
}
inline ::mtproto::InputPhoneCall* TL_phone_acceptCall::mutable_peer() {
  
  if (peer_ == NULL) {
    peer_ = new ::mtproto::InputPhoneCall;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_phone_acceptCall.peer)
  return peer_;
}
inline ::mtproto::InputPhoneCall* TL_phone_acceptCall::release_peer() {
  // @@protoc_insertion_point(field_release:mtproto.TL_phone_acceptCall.peer)
  
  ::mtproto::InputPhoneCall* temp = peer_;
  peer_ = NULL;
  return temp;
}
inline void TL_phone_acceptCall::set_allocated_peer(::mtproto::InputPhoneCall* peer) {
  delete peer_;
  peer_ = peer;
  if (peer) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_phone_acceptCall.peer)
}

// bytes g_b = 2;
inline void TL_phone_acceptCall::clear_g_b() {
  g_b_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& TL_phone_acceptCall::g_b() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_phone_acceptCall.g_b)
  return g_b_.GetNoArena();
}
inline void TL_phone_acceptCall::set_g_b(const ::std::string& value) {
  
  g_b_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtproto.TL_phone_acceptCall.g_b)
}
#if LANG_CXX11
inline void TL_phone_acceptCall::set_g_b(::std::string&& value) {
  
  g_b_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mtproto.TL_phone_acceptCall.g_b)
}
#endif
inline void TL_phone_acceptCall::set_g_b(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  g_b_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtproto.TL_phone_acceptCall.g_b)
}
inline void TL_phone_acceptCall::set_g_b(const void* value, size_t size) {
  
  g_b_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtproto.TL_phone_acceptCall.g_b)
}
inline ::std::string* TL_phone_acceptCall::mutable_g_b() {
  
  // @@protoc_insertion_point(field_mutable:mtproto.TL_phone_acceptCall.g_b)
  return g_b_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TL_phone_acceptCall::release_g_b() {
  // @@protoc_insertion_point(field_release:mtproto.TL_phone_acceptCall.g_b)
  
  return g_b_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TL_phone_acceptCall::set_allocated_g_b(::std::string* g_b) {
  if (g_b != NULL) {
    
  } else {
    
  }
  g_b_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), g_b);
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_phone_acceptCall.g_b)
}

// .mtproto.PhoneCallProtocol protocol = 3;
inline bool TL_phone_acceptCall::has_protocol() const {
  return this != internal_default_instance() && protocol_ != NULL;
}
inline void TL_phone_acceptCall::clear_protocol() {
  if (GetArenaNoVirtual() == NULL && protocol_ != NULL) delete protocol_;
  protocol_ = NULL;
}
inline const ::mtproto::PhoneCallProtocol& TL_phone_acceptCall::protocol() const {
  const ::mtproto::PhoneCallProtocol* p = protocol_;
  // @@protoc_insertion_point(field_get:mtproto.TL_phone_acceptCall.protocol)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::PhoneCallProtocol*>(
      &::mtproto::_PhoneCallProtocol_default_instance_);
}
inline ::mtproto::PhoneCallProtocol* TL_phone_acceptCall::mutable_protocol() {
  
  if (protocol_ == NULL) {
    protocol_ = new ::mtproto::PhoneCallProtocol;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_phone_acceptCall.protocol)
  return protocol_;
}
inline ::mtproto::PhoneCallProtocol* TL_phone_acceptCall::release_protocol() {
  // @@protoc_insertion_point(field_release:mtproto.TL_phone_acceptCall.protocol)
  
  ::mtproto::PhoneCallProtocol* temp = protocol_;
  protocol_ = NULL;
  return temp;
}
inline void TL_phone_acceptCall::set_allocated_protocol(::mtproto::PhoneCallProtocol* protocol) {
  delete protocol_;
  protocol_ = protocol;
  if (protocol) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_phone_acceptCall.protocol)
}

// -------------------------------------------------------------------

// TL_phone_confirmCall

// .mtproto.InputPhoneCall peer = 1;
inline bool TL_phone_confirmCall::has_peer() const {
  return this != internal_default_instance() && peer_ != NULL;
}
inline void TL_phone_confirmCall::clear_peer() {
  if (GetArenaNoVirtual() == NULL && peer_ != NULL) delete peer_;
  peer_ = NULL;
}
inline const ::mtproto::InputPhoneCall& TL_phone_confirmCall::peer() const {
  const ::mtproto::InputPhoneCall* p = peer_;
  // @@protoc_insertion_point(field_get:mtproto.TL_phone_confirmCall.peer)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::InputPhoneCall*>(
      &::mtproto::_InputPhoneCall_default_instance_);
}
inline ::mtproto::InputPhoneCall* TL_phone_confirmCall::mutable_peer() {
  
  if (peer_ == NULL) {
    peer_ = new ::mtproto::InputPhoneCall;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_phone_confirmCall.peer)
  return peer_;
}
inline ::mtproto::InputPhoneCall* TL_phone_confirmCall::release_peer() {
  // @@protoc_insertion_point(field_release:mtproto.TL_phone_confirmCall.peer)
  
  ::mtproto::InputPhoneCall* temp = peer_;
  peer_ = NULL;
  return temp;
}
inline void TL_phone_confirmCall::set_allocated_peer(::mtproto::InputPhoneCall* peer) {
  delete peer_;
  peer_ = peer;
  if (peer) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_phone_confirmCall.peer)
}

// bytes g_a = 2;
inline void TL_phone_confirmCall::clear_g_a() {
  g_a_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& TL_phone_confirmCall::g_a() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_phone_confirmCall.g_a)
  return g_a_.GetNoArena();
}
inline void TL_phone_confirmCall::set_g_a(const ::std::string& value) {
  
  g_a_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtproto.TL_phone_confirmCall.g_a)
}
#if LANG_CXX11
inline void TL_phone_confirmCall::set_g_a(::std::string&& value) {
  
  g_a_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mtproto.TL_phone_confirmCall.g_a)
}
#endif
inline void TL_phone_confirmCall::set_g_a(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  g_a_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtproto.TL_phone_confirmCall.g_a)
}
inline void TL_phone_confirmCall::set_g_a(const void* value, size_t size) {
  
  g_a_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtproto.TL_phone_confirmCall.g_a)
}
inline ::std::string* TL_phone_confirmCall::mutable_g_a() {
  
  // @@protoc_insertion_point(field_mutable:mtproto.TL_phone_confirmCall.g_a)
  return g_a_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TL_phone_confirmCall::release_g_a() {
  // @@protoc_insertion_point(field_release:mtproto.TL_phone_confirmCall.g_a)
  
  return g_a_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TL_phone_confirmCall::set_allocated_g_a(::std::string* g_a) {
  if (g_a != NULL) {
    
  } else {
    
  }
  g_a_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), g_a);
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_phone_confirmCall.g_a)
}

// int64 key_fingerprint = 3;
inline void TL_phone_confirmCall::clear_key_fingerprint() {
  key_fingerprint_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 TL_phone_confirmCall::key_fingerprint() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_phone_confirmCall.key_fingerprint)
  return key_fingerprint_;
}
inline void TL_phone_confirmCall::set_key_fingerprint(::google::protobuf::int64 value) {
  
  key_fingerprint_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_phone_confirmCall.key_fingerprint)
}

// .mtproto.PhoneCallProtocol protocol = 4;
inline bool TL_phone_confirmCall::has_protocol() const {
  return this != internal_default_instance() && protocol_ != NULL;
}
inline void TL_phone_confirmCall::clear_protocol() {
  if (GetArenaNoVirtual() == NULL && protocol_ != NULL) delete protocol_;
  protocol_ = NULL;
}
inline const ::mtproto::PhoneCallProtocol& TL_phone_confirmCall::protocol() const {
  const ::mtproto::PhoneCallProtocol* p = protocol_;
  // @@protoc_insertion_point(field_get:mtproto.TL_phone_confirmCall.protocol)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::PhoneCallProtocol*>(
      &::mtproto::_PhoneCallProtocol_default_instance_);
}
inline ::mtproto::PhoneCallProtocol* TL_phone_confirmCall::mutable_protocol() {
  
  if (protocol_ == NULL) {
    protocol_ = new ::mtproto::PhoneCallProtocol;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_phone_confirmCall.protocol)
  return protocol_;
}
inline ::mtproto::PhoneCallProtocol* TL_phone_confirmCall::release_protocol() {
  // @@protoc_insertion_point(field_release:mtproto.TL_phone_confirmCall.protocol)
  
  ::mtproto::PhoneCallProtocol* temp = protocol_;
  protocol_ = NULL;
  return temp;
}
inline void TL_phone_confirmCall::set_allocated_protocol(::mtproto::PhoneCallProtocol* protocol) {
  delete protocol_;
  protocol_ = protocol;
  if (protocol) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_phone_confirmCall.protocol)
}

// -------------------------------------------------------------------

// TL_phone_receivedCall

// .mtproto.InputPhoneCall peer = 1;
inline bool TL_phone_receivedCall::has_peer() const {
  return this != internal_default_instance() && peer_ != NULL;
}
inline void TL_phone_receivedCall::clear_peer() {
  if (GetArenaNoVirtual() == NULL && peer_ != NULL) delete peer_;
  peer_ = NULL;
}
inline const ::mtproto::InputPhoneCall& TL_phone_receivedCall::peer() const {
  const ::mtproto::InputPhoneCall* p = peer_;
  // @@protoc_insertion_point(field_get:mtproto.TL_phone_receivedCall.peer)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::InputPhoneCall*>(
      &::mtproto::_InputPhoneCall_default_instance_);
}
inline ::mtproto::InputPhoneCall* TL_phone_receivedCall::mutable_peer() {
  
  if (peer_ == NULL) {
    peer_ = new ::mtproto::InputPhoneCall;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_phone_receivedCall.peer)
  return peer_;
}
inline ::mtproto::InputPhoneCall* TL_phone_receivedCall::release_peer() {
  // @@protoc_insertion_point(field_release:mtproto.TL_phone_receivedCall.peer)
  
  ::mtproto::InputPhoneCall* temp = peer_;
  peer_ = NULL;
  return temp;
}
inline void TL_phone_receivedCall::set_allocated_peer(::mtproto::InputPhoneCall* peer) {
  delete peer_;
  peer_ = peer;
  if (peer) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_phone_receivedCall.peer)
}

// -------------------------------------------------------------------

// TL_phone_discardCall

// .mtproto.InputPhoneCall peer = 1;
inline bool TL_phone_discardCall::has_peer() const {
  return this != internal_default_instance() && peer_ != NULL;
}
inline void TL_phone_discardCall::clear_peer() {
  if (GetArenaNoVirtual() == NULL && peer_ != NULL) delete peer_;
  peer_ = NULL;
}
inline const ::mtproto::InputPhoneCall& TL_phone_discardCall::peer() const {
  const ::mtproto::InputPhoneCall* p = peer_;
  // @@protoc_insertion_point(field_get:mtproto.TL_phone_discardCall.peer)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::InputPhoneCall*>(
      &::mtproto::_InputPhoneCall_default_instance_);
}
inline ::mtproto::InputPhoneCall* TL_phone_discardCall::mutable_peer() {
  
  if (peer_ == NULL) {
    peer_ = new ::mtproto::InputPhoneCall;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_phone_discardCall.peer)
  return peer_;
}
inline ::mtproto::InputPhoneCall* TL_phone_discardCall::release_peer() {
  // @@protoc_insertion_point(field_release:mtproto.TL_phone_discardCall.peer)
  
  ::mtproto::InputPhoneCall* temp = peer_;
  peer_ = NULL;
  return temp;
}
inline void TL_phone_discardCall::set_allocated_peer(::mtproto::InputPhoneCall* peer) {
  delete peer_;
  peer_ = peer;
  if (peer) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_phone_discardCall.peer)
}

// int32 duration = 2;
inline void TL_phone_discardCall::clear_duration() {
  duration_ = 0;
}
inline ::google::protobuf::int32 TL_phone_discardCall::duration() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_phone_discardCall.duration)
  return duration_;
}
inline void TL_phone_discardCall::set_duration(::google::protobuf::int32 value) {
  
  duration_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_phone_discardCall.duration)
}

// .mtproto.PhoneCallDiscardReason reason = 3;
inline bool TL_phone_discardCall::has_reason() const {
  return this != internal_default_instance() && reason_ != NULL;
}
inline void TL_phone_discardCall::clear_reason() {
  if (GetArenaNoVirtual() == NULL && reason_ != NULL) delete reason_;
  reason_ = NULL;
}
inline const ::mtproto::PhoneCallDiscardReason& TL_phone_discardCall::reason() const {
  const ::mtproto::PhoneCallDiscardReason* p = reason_;
  // @@protoc_insertion_point(field_get:mtproto.TL_phone_discardCall.reason)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::PhoneCallDiscardReason*>(
      &::mtproto::_PhoneCallDiscardReason_default_instance_);
}
inline ::mtproto::PhoneCallDiscardReason* TL_phone_discardCall::mutable_reason() {
  
  if (reason_ == NULL) {
    reason_ = new ::mtproto::PhoneCallDiscardReason;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_phone_discardCall.reason)
  return reason_;
}
inline ::mtproto::PhoneCallDiscardReason* TL_phone_discardCall::release_reason() {
  // @@protoc_insertion_point(field_release:mtproto.TL_phone_discardCall.reason)
  
  ::mtproto::PhoneCallDiscardReason* temp = reason_;
  reason_ = NULL;
  return temp;
}
inline void TL_phone_discardCall::set_allocated_reason(::mtproto::PhoneCallDiscardReason* reason) {
  delete reason_;
  reason_ = reason;
  if (reason) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_phone_discardCall.reason)
}

// int64 connection_id = 4;
inline void TL_phone_discardCall::clear_connection_id() {
  connection_id_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 TL_phone_discardCall::connection_id() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_phone_discardCall.connection_id)
  return connection_id_;
}
inline void TL_phone_discardCall::set_connection_id(::google::protobuf::int64 value) {
  
  connection_id_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_phone_discardCall.connection_id)
}

// -------------------------------------------------------------------

// TL_phone_setCallRating

// .mtproto.InputPhoneCall peer = 1;
inline bool TL_phone_setCallRating::has_peer() const {
  return this != internal_default_instance() && peer_ != NULL;
}
inline void TL_phone_setCallRating::clear_peer() {
  if (GetArenaNoVirtual() == NULL && peer_ != NULL) delete peer_;
  peer_ = NULL;
}
inline const ::mtproto::InputPhoneCall& TL_phone_setCallRating::peer() const {
  const ::mtproto::InputPhoneCall* p = peer_;
  // @@protoc_insertion_point(field_get:mtproto.TL_phone_setCallRating.peer)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::InputPhoneCall*>(
      &::mtproto::_InputPhoneCall_default_instance_);
}
inline ::mtproto::InputPhoneCall* TL_phone_setCallRating::mutable_peer() {
  
  if (peer_ == NULL) {
    peer_ = new ::mtproto::InputPhoneCall;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_phone_setCallRating.peer)
  return peer_;
}
inline ::mtproto::InputPhoneCall* TL_phone_setCallRating::release_peer() {
  // @@protoc_insertion_point(field_release:mtproto.TL_phone_setCallRating.peer)
  
  ::mtproto::InputPhoneCall* temp = peer_;
  peer_ = NULL;
  return temp;
}
inline void TL_phone_setCallRating::set_allocated_peer(::mtproto::InputPhoneCall* peer) {
  delete peer_;
  peer_ = peer;
  if (peer) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_phone_setCallRating.peer)
}

// int32 rating = 2;
inline void TL_phone_setCallRating::clear_rating() {
  rating_ = 0;
}
inline ::google::protobuf::int32 TL_phone_setCallRating::rating() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_phone_setCallRating.rating)
  return rating_;
}
inline void TL_phone_setCallRating::set_rating(::google::protobuf::int32 value) {
  
  rating_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_phone_setCallRating.rating)
}

// string comment = 3;
inline void TL_phone_setCallRating::clear_comment() {
  comment_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& TL_phone_setCallRating::comment() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_phone_setCallRating.comment)
  return comment_.GetNoArena();
}
inline void TL_phone_setCallRating::set_comment(const ::std::string& value) {
  
  comment_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtproto.TL_phone_setCallRating.comment)
}
#if LANG_CXX11
inline void TL_phone_setCallRating::set_comment(::std::string&& value) {
  
  comment_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mtproto.TL_phone_setCallRating.comment)
}
#endif
inline void TL_phone_setCallRating::set_comment(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  comment_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtproto.TL_phone_setCallRating.comment)
}
inline void TL_phone_setCallRating::set_comment(const char* value, size_t size) {
  
  comment_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtproto.TL_phone_setCallRating.comment)
}
inline ::std::string* TL_phone_setCallRating::mutable_comment() {
  
  // @@protoc_insertion_point(field_mutable:mtproto.TL_phone_setCallRating.comment)
  return comment_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TL_phone_setCallRating::release_comment() {
  // @@protoc_insertion_point(field_release:mtproto.TL_phone_setCallRating.comment)
  
  return comment_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TL_phone_setCallRating::set_allocated_comment(::std::string* comment) {
  if (comment != NULL) {
    
  } else {
    
  }
  comment_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), comment);
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_phone_setCallRating.comment)
}

// -------------------------------------------------------------------

// TL_phone_saveCallDebug

// .mtproto.InputPhoneCall peer = 1;
inline bool TL_phone_saveCallDebug::has_peer() const {
  return this != internal_default_instance() && peer_ != NULL;
}
inline void TL_phone_saveCallDebug::clear_peer() {
  if (GetArenaNoVirtual() == NULL && peer_ != NULL) delete peer_;
  peer_ = NULL;
}
inline const ::mtproto::InputPhoneCall& TL_phone_saveCallDebug::peer() const {
  const ::mtproto::InputPhoneCall* p = peer_;
  // @@protoc_insertion_point(field_get:mtproto.TL_phone_saveCallDebug.peer)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::InputPhoneCall*>(
      &::mtproto::_InputPhoneCall_default_instance_);
}
inline ::mtproto::InputPhoneCall* TL_phone_saveCallDebug::mutable_peer() {
  
  if (peer_ == NULL) {
    peer_ = new ::mtproto::InputPhoneCall;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_phone_saveCallDebug.peer)
  return peer_;
}
inline ::mtproto::InputPhoneCall* TL_phone_saveCallDebug::release_peer() {
  // @@protoc_insertion_point(field_release:mtproto.TL_phone_saveCallDebug.peer)
  
  ::mtproto::InputPhoneCall* temp = peer_;
  peer_ = NULL;
  return temp;
}
inline void TL_phone_saveCallDebug::set_allocated_peer(::mtproto::InputPhoneCall* peer) {
  delete peer_;
  peer_ = peer;
  if (peer) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_phone_saveCallDebug.peer)
}

// .mtproto.DataJSON debug = 2;
inline bool TL_phone_saveCallDebug::has_debug() const {
  return this != internal_default_instance() && debug_ != NULL;
}
inline void TL_phone_saveCallDebug::clear_debug() {
  if (GetArenaNoVirtual() == NULL && debug_ != NULL) delete debug_;
  debug_ = NULL;
}
inline const ::mtproto::DataJSON& TL_phone_saveCallDebug::debug() const {
  const ::mtproto::DataJSON* p = debug_;
  // @@protoc_insertion_point(field_get:mtproto.TL_phone_saveCallDebug.debug)
  return p != NULL ? *p : *reinterpret_cast<const ::mtproto::DataJSON*>(
      &::mtproto::_DataJSON_default_instance_);
}
inline ::mtproto::DataJSON* TL_phone_saveCallDebug::mutable_debug() {
  
  if (debug_ == NULL) {
    debug_ = new ::mtproto::DataJSON;
  }
  // @@protoc_insertion_point(field_mutable:mtproto.TL_phone_saveCallDebug.debug)
  return debug_;
}
inline ::mtproto::DataJSON* TL_phone_saveCallDebug::release_debug() {
  // @@protoc_insertion_point(field_release:mtproto.TL_phone_saveCallDebug.debug)
  
  ::mtproto::DataJSON* temp = debug_;
  debug_ = NULL;
  return temp;
}
inline void TL_phone_saveCallDebug::set_allocated_debug(::mtproto::DataJSON* debug) {
  delete debug_;
  debug_ = debug;
  if (debug) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_phone_saveCallDebug.debug)
}

// -------------------------------------------------------------------

// TL_langpack_getLangPack

// string lang_pack = 1;
inline void TL_langpack_getLangPack::clear_lang_pack() {
  lang_pack_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& TL_langpack_getLangPack::lang_pack() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_langpack_getLangPack.lang_pack)
  return lang_pack_.GetNoArena();
}
inline void TL_langpack_getLangPack::set_lang_pack(const ::std::string& value) {
  
  lang_pack_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtproto.TL_langpack_getLangPack.lang_pack)
}
#if LANG_CXX11
inline void TL_langpack_getLangPack::set_lang_pack(::std::string&& value) {
  
  lang_pack_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mtproto.TL_langpack_getLangPack.lang_pack)
}
#endif
inline void TL_langpack_getLangPack::set_lang_pack(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  lang_pack_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtproto.TL_langpack_getLangPack.lang_pack)
}
inline void TL_langpack_getLangPack::set_lang_pack(const char* value, size_t size) {
  
  lang_pack_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtproto.TL_langpack_getLangPack.lang_pack)
}
inline ::std::string* TL_langpack_getLangPack::mutable_lang_pack() {
  
  // @@protoc_insertion_point(field_mutable:mtproto.TL_langpack_getLangPack.lang_pack)
  return lang_pack_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TL_langpack_getLangPack::release_lang_pack() {
  // @@protoc_insertion_point(field_release:mtproto.TL_langpack_getLangPack.lang_pack)
  
  return lang_pack_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TL_langpack_getLangPack::set_allocated_lang_pack(::std::string* lang_pack) {
  if (lang_pack != NULL) {
    
  } else {
    
  }
  lang_pack_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), lang_pack);
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_langpack_getLangPack.lang_pack)
}

// string lang_code = 2;
inline void TL_langpack_getLangPack::clear_lang_code() {
  lang_code_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& TL_langpack_getLangPack::lang_code() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_langpack_getLangPack.lang_code)
  return lang_code_.GetNoArena();
}
inline void TL_langpack_getLangPack::set_lang_code(const ::std::string& value) {
  
  lang_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtproto.TL_langpack_getLangPack.lang_code)
}
#if LANG_CXX11
inline void TL_langpack_getLangPack::set_lang_code(::std::string&& value) {
  
  lang_code_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mtproto.TL_langpack_getLangPack.lang_code)
}
#endif
inline void TL_langpack_getLangPack::set_lang_code(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  lang_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtproto.TL_langpack_getLangPack.lang_code)
}
inline void TL_langpack_getLangPack::set_lang_code(const char* value, size_t size) {
  
  lang_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtproto.TL_langpack_getLangPack.lang_code)
}
inline ::std::string* TL_langpack_getLangPack::mutable_lang_code() {
  
  // @@protoc_insertion_point(field_mutable:mtproto.TL_langpack_getLangPack.lang_code)
  return lang_code_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TL_langpack_getLangPack::release_lang_code() {
  // @@protoc_insertion_point(field_release:mtproto.TL_langpack_getLangPack.lang_code)
  
  return lang_code_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TL_langpack_getLangPack::set_allocated_lang_code(::std::string* lang_code) {
  if (lang_code != NULL) {
    
  } else {
    
  }
  lang_code_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), lang_code);
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_langpack_getLangPack.lang_code)
}

// -------------------------------------------------------------------

// TL_langpack_getStrings

// string lang_pack = 1;
inline void TL_langpack_getStrings::clear_lang_pack() {
  lang_pack_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& TL_langpack_getStrings::lang_pack() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_langpack_getStrings.lang_pack)
  return lang_pack_.GetNoArena();
}
inline void TL_langpack_getStrings::set_lang_pack(const ::std::string& value) {
  
  lang_pack_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtproto.TL_langpack_getStrings.lang_pack)
}
#if LANG_CXX11
inline void TL_langpack_getStrings::set_lang_pack(::std::string&& value) {
  
  lang_pack_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mtproto.TL_langpack_getStrings.lang_pack)
}
#endif
inline void TL_langpack_getStrings::set_lang_pack(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  lang_pack_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtproto.TL_langpack_getStrings.lang_pack)
}
inline void TL_langpack_getStrings::set_lang_pack(const char* value, size_t size) {
  
  lang_pack_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtproto.TL_langpack_getStrings.lang_pack)
}
inline ::std::string* TL_langpack_getStrings::mutable_lang_pack() {
  
  // @@protoc_insertion_point(field_mutable:mtproto.TL_langpack_getStrings.lang_pack)
  return lang_pack_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TL_langpack_getStrings::release_lang_pack() {
  // @@protoc_insertion_point(field_release:mtproto.TL_langpack_getStrings.lang_pack)
  
  return lang_pack_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TL_langpack_getStrings::set_allocated_lang_pack(::std::string* lang_pack) {
  if (lang_pack != NULL) {
    
  } else {
    
  }
  lang_pack_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), lang_pack);
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_langpack_getStrings.lang_pack)
}

// string lang_code = 2;
inline void TL_langpack_getStrings::clear_lang_code() {
  lang_code_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& TL_langpack_getStrings::lang_code() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_langpack_getStrings.lang_code)
  return lang_code_.GetNoArena();
}
inline void TL_langpack_getStrings::set_lang_code(const ::std::string& value) {
  
  lang_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtproto.TL_langpack_getStrings.lang_code)
}
#if LANG_CXX11
inline void TL_langpack_getStrings::set_lang_code(::std::string&& value) {
  
  lang_code_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mtproto.TL_langpack_getStrings.lang_code)
}
#endif
inline void TL_langpack_getStrings::set_lang_code(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  lang_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtproto.TL_langpack_getStrings.lang_code)
}
inline void TL_langpack_getStrings::set_lang_code(const char* value, size_t size) {
  
  lang_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtproto.TL_langpack_getStrings.lang_code)
}
inline ::std::string* TL_langpack_getStrings::mutable_lang_code() {
  
  // @@protoc_insertion_point(field_mutable:mtproto.TL_langpack_getStrings.lang_code)
  return lang_code_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TL_langpack_getStrings::release_lang_code() {
  // @@protoc_insertion_point(field_release:mtproto.TL_langpack_getStrings.lang_code)
  
  return lang_code_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TL_langpack_getStrings::set_allocated_lang_code(::std::string* lang_code) {
  if (lang_code != NULL) {
    
  } else {
    
  }
  lang_code_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), lang_code);
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_langpack_getStrings.lang_code)
}

// repeated string keys = 3;
inline int TL_langpack_getStrings::keys_size() const {
  return keys_.size();
}
inline void TL_langpack_getStrings::clear_keys() {
  keys_.Clear();
}
inline const ::std::string& TL_langpack_getStrings::keys(int index) const {
  // @@protoc_insertion_point(field_get:mtproto.TL_langpack_getStrings.keys)
  return keys_.Get(index);
}
inline ::std::string* TL_langpack_getStrings::mutable_keys(int index) {
  // @@protoc_insertion_point(field_mutable:mtproto.TL_langpack_getStrings.keys)
  return keys_.Mutable(index);
}
inline void TL_langpack_getStrings::set_keys(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:mtproto.TL_langpack_getStrings.keys)
  keys_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void TL_langpack_getStrings::set_keys(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:mtproto.TL_langpack_getStrings.keys)
  keys_.Mutable(index)->assign(std::move(value));
}
#endif
inline void TL_langpack_getStrings::set_keys(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  keys_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:mtproto.TL_langpack_getStrings.keys)
}
inline void TL_langpack_getStrings::set_keys(int index, const char* value, size_t size) {
  keys_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:mtproto.TL_langpack_getStrings.keys)
}
inline ::std::string* TL_langpack_getStrings::add_keys() {
  // @@protoc_insertion_point(field_add_mutable:mtproto.TL_langpack_getStrings.keys)
  return keys_.Add();
}
inline void TL_langpack_getStrings::add_keys(const ::std::string& value) {
  keys_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:mtproto.TL_langpack_getStrings.keys)
}
#if LANG_CXX11
inline void TL_langpack_getStrings::add_keys(::std::string&& value) {
  keys_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:mtproto.TL_langpack_getStrings.keys)
}
#endif
inline void TL_langpack_getStrings::add_keys(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  keys_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:mtproto.TL_langpack_getStrings.keys)
}
inline void TL_langpack_getStrings::add_keys(const char* value, size_t size) {
  keys_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:mtproto.TL_langpack_getStrings.keys)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
TL_langpack_getStrings::keys() const {
  // @@protoc_insertion_point(field_list:mtproto.TL_langpack_getStrings.keys)
  return keys_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
TL_langpack_getStrings::mutable_keys() {
  // @@protoc_insertion_point(field_mutable_list:mtproto.TL_langpack_getStrings.keys)
  return &keys_;
}

// -------------------------------------------------------------------

// TL_langpack_getDifference

// int32 from_version = 1;
inline void TL_langpack_getDifference::clear_from_version() {
  from_version_ = 0;
}
inline ::google::protobuf::int32 TL_langpack_getDifference::from_version() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_langpack_getDifference.from_version)
  return from_version_;
}
inline void TL_langpack_getDifference::set_from_version(::google::protobuf::int32 value) {
  
  from_version_ = value;
  // @@protoc_insertion_point(field_set:mtproto.TL_langpack_getDifference.from_version)
}

// -------------------------------------------------------------------

// TL_langpack_getLanguages

// string lang_pack = 1;
inline void TL_langpack_getLanguages::clear_lang_pack() {
  lang_pack_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& TL_langpack_getLanguages::lang_pack() const {
  // @@protoc_insertion_point(field_get:mtproto.TL_langpack_getLanguages.lang_pack)
  return lang_pack_.GetNoArena();
}
inline void TL_langpack_getLanguages::set_lang_pack(const ::std::string& value) {
  
  lang_pack_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mtproto.TL_langpack_getLanguages.lang_pack)
}
#if LANG_CXX11
inline void TL_langpack_getLanguages::set_lang_pack(::std::string&& value) {
  
  lang_pack_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mtproto.TL_langpack_getLanguages.lang_pack)
}
#endif
inline void TL_langpack_getLanguages::set_lang_pack(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  lang_pack_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mtproto.TL_langpack_getLanguages.lang_pack)
}
inline void TL_langpack_getLanguages::set_lang_pack(const char* value, size_t size) {
  
  lang_pack_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mtproto.TL_langpack_getLanguages.lang_pack)
}
inline ::std::string* TL_langpack_getLanguages::mutable_lang_pack() {
  
  // @@protoc_insertion_point(field_mutable:mtproto.TL_langpack_getLanguages.lang_pack)
  return lang_pack_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TL_langpack_getLanguages::release_lang_pack() {
  // @@protoc_insertion_point(field_release:mtproto.TL_langpack_getLanguages.lang_pack)
  
  return lang_pack_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TL_langpack_getLanguages::set_allocated_lang_pack(::std::string* lang_pack) {
  if (lang_pack != NULL) {
    
  } else {
    
  }
  lang_pack_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), lang_pack);
  // @@protoc_insertion_point(field_set_allocated:mtproto.TL_langpack_getLanguages.lang_pack)
}

// -------------------------------------------------------------------

// Vector_LangPackLanguage

// repeated .mtproto.LangPackLanguage datas = 1;
inline int Vector_LangPackLanguage::datas_size() const {
  return datas_.size();
}
inline void Vector_LangPackLanguage::clear_datas() {
  datas_.Clear();
}
inline const ::mtproto::LangPackLanguage& Vector_LangPackLanguage::datas(int index) const {
  // @@protoc_insertion_point(field_get:mtproto.Vector_LangPackLanguage.datas)
  return datas_.Get(index);
}
inline ::mtproto::LangPackLanguage* Vector_LangPackLanguage::mutable_datas(int index) {
  // @@protoc_insertion_point(field_mutable:mtproto.Vector_LangPackLanguage.datas)
  return datas_.Mutable(index);
}
inline ::mtproto::LangPackLanguage* Vector_LangPackLanguage::add_datas() {
  // @@protoc_insertion_point(field_add:mtproto.Vector_LangPackLanguage.datas)
  return datas_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::mtproto::LangPackLanguage >*
Vector_LangPackLanguage::mutable_datas() {
  // @@protoc_insertion_point(field_mutable_list:mtproto.Vector_LangPackLanguage.datas)
  return &datas_;
}
inline const ::google::protobuf::RepeatedPtrField< ::mtproto::LangPackLanguage >&
Vector_LangPackLanguage::datas() const {
  // @@protoc_insertion_point(field_list:mtproto.Vector_LangPackLanguage.datas)
  return datas_;
}

// -------------------------------------------------------------------

// Vector_WallPaper

// repeated .mtproto.WallPaper datas = 1;
inline int Vector_WallPaper::datas_size() const {
  return datas_.size();
}
inline void Vector_WallPaper::clear_datas() {
  datas_.Clear();
}
inline const ::mtproto::WallPaper& Vector_WallPaper::datas(int index) const {
  // @@protoc_insertion_point(field_get:mtproto.Vector_WallPaper.datas)
  return datas_.Get(index);
}
inline ::mtproto::WallPaper* Vector_WallPaper::mutable_datas(int index) {
  // @@protoc_insertion_point(field_mutable:mtproto.Vector_WallPaper.datas)
  return datas_.Mutable(index);
}
inline ::mtproto::WallPaper* Vector_WallPaper::add_datas() {
  // @@protoc_insertion_point(field_add:mtproto.Vector_WallPaper.datas)
  return datas_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::mtproto::WallPaper >*
Vector_WallPaper::mutable_datas() {
  // @@protoc_insertion_point(field_mutable_list:mtproto.Vector_WallPaper.datas)
  return &datas_;
}
inline const ::google::protobuf::RepeatedPtrField< ::mtproto::WallPaper >&
Vector_WallPaper::datas() const {
  // @@protoc_insertion_point(field_list:mtproto.Vector_WallPaper.datas)
  return datas_;
}

// -------------------------------------------------------------------

// Vector_SecureValue

// repeated .mtproto.SecureValue datas = 1;
inline int Vector_SecureValue::datas_size() const {
  return datas_.size();
}
inline void Vector_SecureValue::clear_datas() {
  datas_.Clear();
}
inline const ::mtproto::SecureValue& Vector_SecureValue::datas(int index) const {
  // @@protoc_insertion_point(field_get:mtproto.Vector_SecureValue.datas)
  return datas_.Get(index);
}
inline ::mtproto::SecureValue* Vector_SecureValue::mutable_datas(int index) {
  // @@protoc_insertion_point(field_mutable:mtproto.Vector_SecureValue.datas)
  return datas_.Mutable(index);
}
inline ::mtproto::SecureValue* Vector_SecureValue::add_datas() {
  // @@protoc_insertion_point(field_add:mtproto.Vector_SecureValue.datas)
  return datas_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::mtproto::SecureValue >*
Vector_SecureValue::mutable_datas() {
  // @@protoc_insertion_point(field_mutable_list:mtproto.Vector_SecureValue.datas)
  return &datas_;
}
inline const ::google::protobuf::RepeatedPtrField< ::mtproto::SecureValue >&
Vector_SecureValue::datas() const {
  // @@protoc_insertion_point(field_list:mtproto.Vector_SecureValue.datas)
  return datas_;
}

// -------------------------------------------------------------------

// Vector_User

// repeated .mtproto.User datas = 1;
inline int Vector_User::datas_size() const {
  return datas_.size();
}
inline void Vector_User::clear_datas() {
  datas_.Clear();
}
inline const ::mtproto::User& Vector_User::datas(int index) const {
  // @@protoc_insertion_point(field_get:mtproto.Vector_User.datas)
  return datas_.Get(index);
}
inline ::mtproto::User* Vector_User::mutable_datas(int index) {
  // @@protoc_insertion_point(field_mutable:mtproto.Vector_User.datas)
  return datas_.Mutable(index);
}
inline ::mtproto::User* Vector_User::add_datas() {
  // @@protoc_insertion_point(field_add:mtproto.Vector_User.datas)
  return datas_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::mtproto::User >*
Vector_User::mutable_datas() {
  // @@protoc_insertion_point(field_mutable_list:mtproto.Vector_User.datas)
  return &datas_;
}
inline const ::google::protobuf::RepeatedPtrField< ::mtproto::User >&
Vector_User::datas() const {
  // @@protoc_insertion_point(field_list:mtproto.Vector_User.datas)
  return datas_;
}

// -------------------------------------------------------------------

// Vector_ContactStatus

// repeated .mtproto.ContactStatus datas = 1;
inline int Vector_ContactStatus::datas_size() const {
  return datas_.size();
}
inline void Vector_ContactStatus::clear_datas() {
  datas_.Clear();
}
inline const ::mtproto::ContactStatus& Vector_ContactStatus::datas(int index) const {
  // @@protoc_insertion_point(field_get:mtproto.Vector_ContactStatus.datas)
  return datas_.Get(index);
}
inline ::mtproto::ContactStatus* Vector_ContactStatus::mutable_datas(int index) {
  // @@protoc_insertion_point(field_mutable:mtproto.Vector_ContactStatus.datas)
  return datas_.Mutable(index);
}
inline ::mtproto::ContactStatus* Vector_ContactStatus::add_datas() {
  // @@protoc_insertion_point(field_add:mtproto.Vector_ContactStatus.datas)
  return datas_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::mtproto::ContactStatus >*
Vector_ContactStatus::mutable_datas() {
  // @@protoc_insertion_point(field_mutable_list:mtproto.Vector_ContactStatus.datas)
  return &datas_;
}
inline const ::google::protobuf::RepeatedPtrField< ::mtproto::ContactStatus >&
Vector_ContactStatus::datas() const {
  // @@protoc_insertion_point(field_list:mtproto.Vector_ContactStatus.datas)
  return datas_;
}

// -------------------------------------------------------------------

// Vector_int

// repeated int32 datas = 1;
inline int Vector_int::datas_size() const {
  return datas_.size();
}
inline void Vector_int::clear_datas() {
  datas_.Clear();
}
inline ::google::protobuf::int32 Vector_int::datas(int index) const {
  // @@protoc_insertion_point(field_get:mtproto.Vector_int.datas)
  return datas_.Get(index);
}
inline void Vector_int::set_datas(int index, ::google::protobuf::int32 value) {
  datas_.Set(index, value);
  // @@protoc_insertion_point(field_set:mtproto.Vector_int.datas)
}
inline void Vector_int::add_datas(::google::protobuf::int32 value) {
  datas_.Add(value);
  // @@protoc_insertion_point(field_add:mtproto.Vector_int.datas)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
Vector_int::datas() const {
  // @@protoc_insertion_point(field_list:mtproto.Vector_int.datas)
  return datas_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
Vector_int::mutable_datas() {
  // @@protoc_insertion_point(field_mutable_list:mtproto.Vector_int.datas)
  return &datas_;
}

// -------------------------------------------------------------------

// Vector_SavedContact

// repeated .mtproto.SavedContact datas = 1;
inline int Vector_SavedContact::datas_size() const {
  return datas_.size();
}
inline void Vector_SavedContact::clear_datas() {
  datas_.Clear();
}
inline const ::mtproto::SavedContact& Vector_SavedContact::datas(int index) const {
  // @@protoc_insertion_point(field_get:mtproto.Vector_SavedContact.datas)
  return datas_.Get(index);
}
inline ::mtproto::SavedContact* Vector_SavedContact::mutable_datas(int index) {
  // @@protoc_insertion_point(field_mutable:mtproto.Vector_SavedContact.datas)
  return datas_.Mutable(index);
}
inline ::mtproto::SavedContact* Vector_SavedContact::add_datas() {
  // @@protoc_insertion_point(field_add:mtproto.Vector_SavedContact.datas)
  return datas_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::mtproto::SavedContact >*
Vector_SavedContact::mutable_datas() {
  // @@protoc_insertion_point(field_mutable_list:mtproto.Vector_SavedContact.datas)
  return &datas_;
}
inline const ::google::protobuf::RepeatedPtrField< ::mtproto::SavedContact >&
Vector_SavedContact::datas() const {
  // @@protoc_insertion_point(field_list:mtproto.Vector_SavedContact.datas)
  return datas_;
}

// -------------------------------------------------------------------

// Vector_ReceivedNotifyMessage

// repeated .mtproto.ReceivedNotifyMessage datas = 1;
inline int Vector_ReceivedNotifyMessage::datas_size() const {
  return datas_.size();
}
inline void Vector_ReceivedNotifyMessage::clear_datas() {
  datas_.Clear();
}
inline const ::mtproto::ReceivedNotifyMessage& Vector_ReceivedNotifyMessage::datas(int index) const {
  // @@protoc_insertion_point(field_get:mtproto.Vector_ReceivedNotifyMessage.datas)
  return datas_.Get(index);
}
inline ::mtproto::ReceivedNotifyMessage* Vector_ReceivedNotifyMessage::mutable_datas(int index) {
  // @@protoc_insertion_point(field_mutable:mtproto.Vector_ReceivedNotifyMessage.datas)
  return datas_.Mutable(index);
}
inline ::mtproto::ReceivedNotifyMessage* Vector_ReceivedNotifyMessage::add_datas() {
  // @@protoc_insertion_point(field_add:mtproto.Vector_ReceivedNotifyMessage.datas)
  return datas_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::mtproto::ReceivedNotifyMessage >*
Vector_ReceivedNotifyMessage::mutable_datas() {
  // @@protoc_insertion_point(field_mutable_list:mtproto.Vector_ReceivedNotifyMessage.datas)
  return &datas_;
}
inline const ::google::protobuf::RepeatedPtrField< ::mtproto::ReceivedNotifyMessage >&
Vector_ReceivedNotifyMessage::datas() const {
  // @@protoc_insertion_point(field_list:mtproto.Vector_ReceivedNotifyMessage.datas)
  return datas_;
}

// -------------------------------------------------------------------

// Vector_long

// repeated int64 datas = 1;
inline int Vector_long::datas_size() const {
  return datas_.size();
}
inline void Vector_long::clear_datas() {
  datas_.Clear();
}
inline ::google::protobuf::int64 Vector_long::datas(int index) const {
  // @@protoc_insertion_point(field_get:mtproto.Vector_long.datas)
  return datas_.Get(index);
}
inline void Vector_long::set_datas(int index, ::google::protobuf::int64 value) {
  datas_.Set(index, value);
  // @@protoc_insertion_point(field_set:mtproto.Vector_long.datas)
}
inline void Vector_long::add_datas(::google::protobuf::int64 value) {
  datas_.Add(value);
  // @@protoc_insertion_point(field_add:mtproto.Vector_long.datas)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
Vector_long::datas() const {
  // @@protoc_insertion_point(field_list:mtproto.Vector_long.datas)
  return datas_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
Vector_long::mutable_datas() {
  // @@protoc_insertion_point(field_mutable_list:mtproto.Vector_long.datas)
  return &datas_;
}

// -------------------------------------------------------------------

// Vector_StickerSetCovered

// repeated .mtproto.StickerSetCovered datas = 1;
inline int Vector_StickerSetCovered::datas_size() const {
  return datas_.size();
}
inline void Vector_StickerSetCovered::clear_datas() {
  datas_.Clear();
}
inline const ::mtproto::StickerSetCovered& Vector_StickerSetCovered::datas(int index) const {
  // @@protoc_insertion_point(field_get:mtproto.Vector_StickerSetCovered.datas)
  return datas_.Get(index);
}
inline ::mtproto::StickerSetCovered* Vector_StickerSetCovered::mutable_datas(int index) {
  // @@protoc_insertion_point(field_mutable:mtproto.Vector_StickerSetCovered.datas)
  return datas_.Mutable(index);
}
inline ::mtproto::StickerSetCovered* Vector_StickerSetCovered::add_datas() {
  // @@protoc_insertion_point(field_add:mtproto.Vector_StickerSetCovered.datas)
  return datas_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::mtproto::StickerSetCovered >*
Vector_StickerSetCovered::mutable_datas() {
  // @@protoc_insertion_point(field_mutable_list:mtproto.Vector_StickerSetCovered.datas)
  return &datas_;
}
inline const ::google::protobuf::RepeatedPtrField< ::mtproto::StickerSetCovered >&
Vector_StickerSetCovered::datas() const {
  // @@protoc_insertion_point(field_list:mtproto.Vector_StickerSetCovered.datas)
  return datas_;
}

// -------------------------------------------------------------------

// Vector_MessageRange

// repeated .mtproto.MessageRange datas = 1;
inline int Vector_MessageRange::datas_size() const {
  return datas_.size();
}
inline void Vector_MessageRange::clear_datas() {
  datas_.Clear();
}
inline const ::mtproto::MessageRange& Vector_MessageRange::datas(int index) const {
  // @@protoc_insertion_point(field_get:mtproto.Vector_MessageRange.datas)
  return datas_.Get(index);
}
inline ::mtproto::MessageRange* Vector_MessageRange::mutable_datas(int index) {
  // @@protoc_insertion_point(field_mutable:mtproto.Vector_MessageRange.datas)
  return datas_.Mutable(index);
}
inline ::mtproto::MessageRange* Vector_MessageRange::add_datas() {
  // @@protoc_insertion_point(field_add:mtproto.Vector_MessageRange.datas)
  return datas_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::mtproto::MessageRange >*
Vector_MessageRange::mutable_datas() {
  // @@protoc_insertion_point(field_mutable_list:mtproto.Vector_MessageRange.datas)
  return &datas_;
}
inline const ::google::protobuf::RepeatedPtrField< ::mtproto::MessageRange >&
Vector_MessageRange::datas() const {
  // @@protoc_insertion_point(field_list:mtproto.Vector_MessageRange.datas)
  return datas_;
}

// -------------------------------------------------------------------

// Vector_DialogPeer

// repeated .mtproto.DialogPeer datas = 1;
inline int Vector_DialogPeer::datas_size() const {
  return datas_.size();
}
inline void Vector_DialogPeer::clear_datas() {
  datas_.Clear();
}
inline const ::mtproto::DialogPeer& Vector_DialogPeer::datas(int index) const {
  // @@protoc_insertion_point(field_get:mtproto.Vector_DialogPeer.datas)
  return datas_.Get(index);
}
inline ::mtproto::DialogPeer* Vector_DialogPeer::mutable_datas(int index) {
  // @@protoc_insertion_point(field_mutable:mtproto.Vector_DialogPeer.datas)
  return datas_.Mutable(index);
}
inline ::mtproto::DialogPeer* Vector_DialogPeer::add_datas() {
  // @@protoc_insertion_point(field_add:mtproto.Vector_DialogPeer.datas)
  return datas_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::mtproto::DialogPeer >*
Vector_DialogPeer::mutable_datas() {
  // @@protoc_insertion_point(field_mutable_list:mtproto.Vector_DialogPeer.datas)
  return &datas_;
}
inline const ::google::protobuf::RepeatedPtrField< ::mtproto::DialogPeer >&
Vector_DialogPeer::datas() const {
  // @@protoc_insertion_point(field_list:mtproto.Vector_DialogPeer.datas)
  return datas_;
}

// -------------------------------------------------------------------

// Vector_FileHash

// repeated .mtproto.FileHash datas = 1;
inline int Vector_FileHash::datas_size() const {
  return datas_.size();
}
inline void Vector_FileHash::clear_datas() {
  datas_.Clear();
}
inline const ::mtproto::FileHash& Vector_FileHash::datas(int index) const {
  // @@protoc_insertion_point(field_get:mtproto.Vector_FileHash.datas)
  return datas_.Get(index);
}
inline ::mtproto::FileHash* Vector_FileHash::mutable_datas(int index) {
  // @@protoc_insertion_point(field_mutable:mtproto.Vector_FileHash.datas)
  return datas_.Mutable(index);
}
inline ::mtproto::FileHash* Vector_FileHash::add_datas() {
  // @@protoc_insertion_point(field_add:mtproto.Vector_FileHash.datas)
  return datas_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::mtproto::FileHash >*
Vector_FileHash::mutable_datas() {
  // @@protoc_insertion_point(field_mutable_list:mtproto.Vector_FileHash.datas)
  return &datas_;
}
inline const ::google::protobuf::RepeatedPtrField< ::mtproto::FileHash >&
Vector_FileHash::datas() const {
  // @@protoc_insertion_point(field_list:mtproto.Vector_FileHash.datas)
  return datas_;
}

// -------------------------------------------------------------------

// Vector_LangPackString

// repeated .mtproto.LangPackString datas = 1;
inline int Vector_LangPackString::datas_size() const {
  return datas_.size();
}
inline void Vector_LangPackString::clear_datas() {
  datas_.Clear();
}
inline const ::mtproto::LangPackString& Vector_LangPackString::datas(int index) const {
  // @@protoc_insertion_point(field_get:mtproto.Vector_LangPackString.datas)
  return datas_.Get(index);
}
inline ::mtproto::LangPackString* Vector_LangPackString::mutable_datas(int index) {
  // @@protoc_insertion_point(field_mutable:mtproto.Vector_LangPackString.datas)
  return datas_.Mutable(index);
}
inline ::mtproto::LangPackString* Vector_LangPackString::add_datas() {
  // @@protoc_insertion_point(field_add:mtproto.Vector_LangPackString.datas)
  return datas_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::mtproto::LangPackString >*
Vector_LangPackString::mutable_datas() {
  // @@protoc_insertion_point(field_mutable_list:mtproto.Vector_LangPackString.datas)
  return &datas_;
}
inline const ::google::protobuf::RepeatedPtrField< ::mtproto::LangPackString >&
Vector_LangPackString::datas() const {
  // @@protoc_insertion_point(field_list:mtproto.Vector_LangPackString.datas)
  return datas_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


}  // namespace mtproto

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_schema_2etl_2esync_5fservice_2eproto__INCLUDED
